Implementation smell,Namespace,Class,File,Method,Description
Long Method,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,GetData,The method has 139 lines of code.
Long Method,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The method has 333 lines of code.
Long Method,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,saveDraft,The method has 230 lines of code.
Long Method,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The method has 265 lines of code.
Long Method,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,managerAuditedWorkInfo,The method has 125 lines of code.
Long Method,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,GetData,The method has 101 lines of code.
Long Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The method has 417 lines of code.
Long Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,saveDraft,The method has 164 lines of code.
Long Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Trian_info,The method has 127 lines of code.
Long Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unionUniquenumHtmlValue,The method has 121 lines of code.
Long Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unionUniquenumHtmlValue2,The method has 106 lines of code.
Long Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,On_Duty,The method has 175 lines of code.
Long Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unionUniquenumHtmlValue1,The method has 111 lines of code.
Long Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The method has 110 lines of code.
Long Method,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkBaseInfo,The method has 262 lines of code.
Long Method,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The method has 173 lines of code.
Long Method,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkTrainInfo,The method has 239 lines of code.
Long Method,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkWorkInfo,The method has 236 lines of code.
Long Method,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkCheckInfo,The method has 228 lines of code.
Long Method,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The method has 309 lines of code.
Long Method,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkActionInfo,The method has 142 lines of code.
Long Method,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,displayInfo,The method has 325 lines of code.
Long Method,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The method has 525 lines of code.
Long Method,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The method has 315 lines of code.
Complex Method,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,GetData,Cyclomatic complexity of the method is 26
Complex Method,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,GetRoleAndOffice,Cyclomatic complexity of the method is 9
Complex Method,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,GetManRoleAndOffice,Cyclomatic complexity of the method is 12
Complex Method,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,Cyclomatic complexity of the method is 49
Complex Method,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,saveDraft,Cyclomatic complexity of the method is 46
Complex Method,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,getDraft,Cyclomatic complexity of the method is 13
Complex Method,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,Cyclomatic complexity of the method is 45
Complex Method,Management.Controllers,AddWorkInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddWorkInfoController.cs,DudaoWork,Cyclomatic complexity of the method is 10
Complex Method,Management.Controllers,AddWorkInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddWorkInfoController.cs,DuizhangWork,Cyclomatic complexity of the method is 10
Complex Method,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,getAttending,Cyclomatic complexity of the method is 8
Complex Method,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,managerAuditedWorkInfo,Cyclomatic complexity of the method is 16
Complex Method,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStatic,Cyclomatic complexity of the method is 11
Complex Method,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticPre,Cyclomatic complexity of the method is 17
Complex Method,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticCao,Cyclomatic complexity of the method is 11
Complex Method,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,GetData,Cyclomatic complexity of the method is 11
Complex Method,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,GetDataDone,Cyclomatic complexity of the method is 9
Complex Method,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,checkTrainInfo,Cyclomatic complexity of the method is 11
Complex Method,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,checkWorkInfo,Cyclomatic complexity of the method is 11
Complex Method,Management.Controllers,CheckWorkController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\CheckWorkController.cs,GetData1,Cyclomatic complexity of the method is 8
Complex Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,Cyclomatic complexity of the method is 58
Complex Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,saveDraft,Cyclomatic complexity of the method is 34
Complex Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Trian_info,Cyclomatic complexity of the method is 15
Complex Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unionUniquenumHtmlValue,Cyclomatic complexity of the method is 12
Complex Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unionUniquenumHtmlValue2,Cyclomatic complexity of the method is 11
Complex Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,On_Duty,Cyclomatic complexity of the method is 22
Complex Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Caogao,Cyclomatic complexity of the method is 10
Complex Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Caogao1,Cyclomatic complexity of the method is 8
Complex Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unionUniquenumHtmlValue1,Cyclomatic complexity of the method is 11
Complex Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,save_GetChecked_Draft,Cyclomatic complexity of the method is 13
Complex Method,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,Cyclomatic complexity of the method is 23
Complex Method,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkBaseInfo,Cyclomatic complexity of the method is 39
Complex Method,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,Cyclomatic complexity of the method is 21
Complex Method,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkTrainInfo,Cyclomatic complexity of the method is 29
Complex Method,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editWorkInfo,Cyclomatic complexity of the method is 9
Complex Method,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkWorkInfo,Cyclomatic complexity of the method is 31
Complex Method,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkCheckInfo,Cyclomatic complexity of the method is 31
Complex Method,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,Cyclomatic complexity of the method is 14
Complex Method,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,getAtoS,Cyclomatic complexity of the method is 13
Complex Method,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,checkCity,Cyclomatic complexity of the method is 12
Complex Method,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,checkShop,Cyclomatic complexity of the method is 12
Complex Method,Management.Controllers,LoginController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LoginController.cs,Index,Cyclomatic complexity of the method is 8
Complex Method,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,Cyclomatic complexity of the method is 25
Complex Method,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkActionInfo,Cyclomatic complexity of the method is 16
Complex Method,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,dctupian1,Cyclomatic complexity of the method is 15
Complex Method,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,displayInfo,Cyclomatic complexity of the method is 48
Complex Method,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,Cyclomatic complexity of the method is 44
Complex Method,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,getFeedbackInfo,Cyclomatic complexity of the method is 9
Complex Method,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,LoginInfo,Cyclomatic complexity of the method is 9
Complex Method,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,Cyclomatic complexity of the method is 45
Long Parameter List,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,GetData,The method has 8 parameters.
Long Parameter List,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,TouXiangSuoFang,The method has 5 parameters.
Long Parameter List,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,managerAuditedWorkInfo,The method has 6 parameters.
Long Parameter List,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,showMan,The method has 5 parameters.
Long Parameter List,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unionUniquenumHtmlValue,The method has 7 parameters.
Long Parameter List,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unionUniquenumHtmlValue2,The method has 6 parameters.
Long Parameter List,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkBaseInfo,The method has 7 parameters.
Long Parameter List,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkTrainInfo,The method has 7 parameters.
Long Parameter List,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkWorkInfo,The method has 7 parameters.
Long Parameter List,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkCheckInfo,The method has 13 parameters.
Long Parameter List,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The method has 8 parameters.
Long Parameter List,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,checkCity,The method has 5 parameters.
Long Parameter List,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,checkShop,The method has 6 parameters.
Long Parameter List,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The method has 88 parameters.
Long Parameter List,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkActionInfo,The method has 32 parameters.
Long Parameter List,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,displayInfo,The method has 15 parameters.
Long Parameter List,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The method has 26 parameters.
Long Parameter List,Management.Models,EmailNotificationService,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Models\EmailNotificationService .cs,EmailNotificationService,The method has 5 parameters.
Long Parameter List,Management.Models,Suo,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Models\Suo.cs,TouXiangSuoFang,The method has 5 parameters.
Long Statement,Management,BundleConfig,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\App_Start\BundleConfig.cs,RegisterBundles,The length of the statement  "	bundles.Add (new StyleBundle ("~/Content/themes/base/css").Include ("~/Content/themes/base/jquery.ui.core.css"' "~/Content/themes/base/jquery.ui.resizable.css"' "~/Content/themes/base/jquery.ui.selectable.css"' "~/Content/themes/base/jquery.ui.accordion.css"' "~/Content/themes/base/jquery.ui.autocomplete.css"' "~/Content/themes/base/jquery.ui.button.css"' "~/Content/themes/base/jquery.ui.dialog.css"' "~/Content/themes/base/jquery.ui.slider.css"' "~/Content/themes/base/jquery.ui.tabs.css"' "~/Content/themes/base/jquery.ui.datepicker.css"' "~/Content/themes/base/jquery.ui.progressbar.css"' "~/Content/themes/base/jquery.ui.theme.css")); " is 641.
Long Statement,Management,MvcApplication,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Global.asax.cs,Application_Start,The length of the statement  "	Database.DefaultConnectionFactory = new SqlConnectionFactory (@"Data Source=(localdb)\v11.0; Integrated Security=True; MultipleActiveResultSets=True"); " is 151.
Long Statement,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,getDraft,The length of the statement  "	Managers manager = db.Managers.Where (a => a.IsDraft == true && a.CreatedManId == UserId_string).OrderByDescending (a => a.CreateTime).FirstOrDefault (); " is 153.
Long Statement,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,getAttending,The length of the statement  "	Attending = Attending.Where (a => Convert.ToDateTime (a.Date).ToShortDateString () == DateTime.Today.ToShortDateString ()).ToList (); " is 133.
Long Statement,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,showMan,The length of the statement  "	List<AttendingInfo> human_time = humanAttendInfo.Where (a => Convert.ToDateTime (a.Date) >= Convert.ToDateTime (begin)).ToList (); " is 130.
Long Statement,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,GetData,The length of the statement  "		where d.CreatedTime > yestoday && d.CreatedTime < Tomorrow && d.IsDraft == "0" && (d.IsDelete == false || d.IsDelete == null) " is 125.
Long Statement,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,GetData,The length of the statement  "		where d.CreatedTime > yestoday && d.CreatedTime < Tomorrow && d.IsDraft == "0" && (d.IsDelete == false || d.IsDelete == null) " is 125.
Long Statement,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,GetData,The length of the statement  "		string time = item.CreatedTime.Year.ToString () + "年" + item.CreatedTime.Month.ToString () + "月" + item.CreatedTime.Day.ToString () + "日"; " is 138.
Long Statement,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,GetDataDone,The length of the statement  "		string time = item.CreatedTime.Year.ToString () + "年" + item.CreatedTime.Month.ToString () + "月" + item.CreatedTime.Day.ToString () + "日"; " is 138.
Long Statement,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,GetDraft,The length of the statement  "	HumanBasicFile hum = dal.HumanBasicFile.Where (a => a.IsDraft == true && (a.IsDelete == false || a.IsDelete == null) && a.CreatedManagerID == admin).OrderByDescending (a => a.createTime).FirstOrDefault (); " is 205.
Long Statement,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,getname,The length of the statement  "	where s.Name.Contains (chooseunique) && s.Boss == g.Id && (s.IsDelete == false || s.IsDelete == null) && g.UserId == admin " is 122.
Long Statement,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,getname,The length of the statement  "	where s.Name.Contains (chooseunique) && (s.IsDelete == false || s.IsDelete == null) && s.Boss == g.Id && g.UserId == admin " is 122.
Long Statement,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Caogao1,The length of the statement  "	//HumanBasicFile hum = (from s in dal.HumanBasicFile where s.uniNum == uniquenum1&&s.IsDraft==false select s).Distinct().FirstOrDefault(); " is 138.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkBaseInfo,The length of the statement  "				da = da.Where (dataFilter => dataFilter.uniNum.ToUpper ().Contains (content)).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 133.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkBaseInfo,The length of the statement  "				da = da.Where (dataFilter => dataFilter.Name.Contains (content)).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 120.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkBaseInfo,The length of the statement  "				da = da.Where (dataFilter => dataFilter.City1.Office.Name.Contains (content)).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 133.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkBaseInfo,The length of the statement  "				da = da.Where (dataFilter => dataFilter.uniNum.ToUpper ().Contains (content)).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 133.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkBaseInfo,The length of the statement  "				da = da.Where (dataFilter => dataFilter.Name.Contains (content)).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 120.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkBaseInfo,The length of the statement  "				da = da.Where (dataFilter => dataFilter.City1.Office.Name.Contains (content)).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 133.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkTrainInfo,The length of the statement  "			da = da.Where (dataFilter => dataFilter.HumanBasicFile.uniNum.ToUpper ().Contains (content) && dataFilter.HumanBasicFile.IsDelete != true).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 194.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkTrainInfo,The length of the statement  "				da = da.Where (dataFilter => dataFilter.HumanBasicFile.Name.Contains (content) && dataFilter.HumanBasicFile.IsDelete != true).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 181.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkTrainInfo,The length of the statement  "			da = da.Where (dataFilter => dataFilter.HumanBasicFile.uniNum.ToUpper ().Contains (content)).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 148.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkTrainInfo,The length of the statement  "				da = da.Where (dataFilter => dataFilter.HumanBasicFile.Name.Contains (content)).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 135.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkWorkInfo,The length of the statement  "				da = da.Where (dataFilter => dataFilter.HumanBasicFile.uniNum.Contains (content) && (dataFilter.HumanBasicFile.IsDelete == false || dataFilter.HumanBasicFile.IsDelete == null)).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 232.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkWorkInfo,The length of the statement  "				da = da.Where (dataFilter => dataFilter.HumanBasicFile.Name.Contains (content) && (dataFilter.HumanBasicFile.IsDelete == false || dataFilter.HumanBasicFile.IsDelete == null)).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 230.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkWorkInfo,The length of the statement  "				da = da.Where (dataFilter => dataFilter.HumanBasicFile.uniNum.Contains (content)).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 137.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkWorkInfo,The length of the statement  "				da = da.Where (dataFilter => dataFilter.HumanBasicFile.Name.Contains (content)).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 135.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkCheckInfo,The length of the statement  "				da = da.Where (dataFilter => dataFilter.HumanBasicFile.uniNum.ToUpper ().Contains (content)).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 148.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkCheckInfo,The length of the statement  "				da = da.Where (dataFilter => dataFilter.HumanBasicFile.Name.Contains (content)).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 135.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkCheckInfo,The length of the statement  "			select dataFilter).OrderBy (a => a.HumanBasicFile.uniNum).ThenBy (a => a.DJTime).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 136.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkCheckInfo,The length of the statement  "				da = da.Where (dataFilter => dataFilter.HumanBasicFile.uniNum.ToUpper ().Contains (content)).OrderBy (a => a.HumanBasicFile.uniNum).ThenBy (a => a.DJTime).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 210.
Long Statement,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkCheckInfo,The length of the statement  "				da = da.Where (dataFilter => dataFilter.HumanBasicFile.Name.Contains (content)).OrderBy (a => a.HumanBasicFile.uniNum).ThenBy (a => a.DJTime).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 197.
Long Statement,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,Clower,The length of the statement  "		var c = dj.Where (a => a.Score < 80 && a.HumanBasicFile.uniNum == item.uniNum && a.HumanBasicFile.LevelEditTimes < 1).ToList (); " is 128.
Long Statement,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The length of the statement  "		var a = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList (); " is 336.
Long Statement,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The length of the statement  "	if (DateTime.Now.ToShortDateString () == DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).AddDays (-1).ToShortDateString ()) { " is 145.
Long Statement,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The length of the statement  "			var toBList = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList (); " is 342.
Long Statement,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The length of the statement  "			var toBList = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList (); " is 342.
Long Statement,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The length of the statement  "		var toBList = att.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes == 0 && DateTime.Parse (b.Date) > DateTime.Parse (DateTime.Now.ToShortDateString ()).AddMonths (-2)).ToList (); " is 215.
Long Statement,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,getAtoS,The length of the statement  "	DateTime nextmonthBegin = DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ()); " is 132.
Long Statement,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,getAtoS,The length of the statement  "		var b = dj.Where (d => d.HumanId == item.Id && DateTime.Parse (d.DJTime) >= monthBegin && DateTime.Parse (d.DJTime) <= nextmonthBegin).ToList (); " is 145.
Long Statement,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,getPeopleData,The length of the statement  "	where a.HumanId == hum.Id && DateTime.Parse (a.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (a.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ()) " is 249.
Long Statement,Management.Controllers,LoginController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LoginController.cs,Index,The length of the statement  "	where d.IsDraft == false && (d.IsDelete == false || d.IsDelete == null) && d.UserId == username && d.Password == password " is 121.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()' " is 140.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 125.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 268.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 273.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 125.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 268.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 273.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 127.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 270.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 275.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				S = humanData.Where (a => a.HumanLevel == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 124.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				A = humanData.Where (a => a.HumanLevel == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 124.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				B = humanData.Where (a => a.HumanLevel == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 124.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()' " is 140.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 125.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 268.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 273.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 125.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 268.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 273.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 127.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 270.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The length of the statement  "				xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()' " is 275.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkActionInfo,The length of the statement  "			if (people.Where (a => a.actionName == an && a.city == item.Name && DateTime.Parse (a.date) >= DateTime.Parse (timebegin) && DateTime.Parse (a.date) <= DateTime.Parse (timeEnd)).FirstOrDefault () != null) { " is 206.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkActionInfo,The length of the statement  "					lc_count = attendingInfo.Where (a => a.Functions == "临促" && a.ActionName == an && a.SShop.City.Name == item.Name).Select (a => a.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()' " is 185.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkActionInfo,The length of the statement  "					lc_joincount = attendingInfo.Where (a => a.Functions == "临促" && a.ActionName == an && a.SShop.City.Name == item.Name).Select (a => a.HumanBasicFile.uniNum).Count ().ToString ()' " is 177.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkActionInfo,The length of the statement  "					lc_money = ((int)attendingInfo.Where (a => a.Functions == "临促" && a.ActionName == an && a.SShop.City.Name == item.Name).Sum (a => a.StandardSalary) + (int)attendingInfo.Where (a => a.Functions == "临促" && a.ActionName == an && a.SShop.City.Name == item.Name).Sum (a => a.BearFees)).ToString ()' " is 293.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkActionInfo,The length of the statement  "					xc_count = attendingInfo.Where (a => a.Functions == "形促" && a.ActionName == an && a.SShop.City.Name == item.Name).Select (a => a.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()' " is 185.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkActionInfo,The length of the statement  "					xc_joincount = attendingInfo.Where (a => a.Functions == "形促" && a.ActionName == an && a.SShop.City.Name == item.Name).Select (a => a.HumanBasicFile.uniNum).Count ().ToString ()' " is 177.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkActionInfo,The length of the statement  "					xc_money = ((int)attendingInfo.Where (a => a.Functions == "形促" && a.ActionName == an && a.SShop.City.Name == item.Name).Sum (a => a.StandardSalary) + (int)attendingInfo.Where (a => a.Functions == "形促" && a.ActionName == an && a.SShop.City.Name == item.Name).Sum (a => a.BearFees)).ToString ()' " is 293.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkActionInfo,The length of the statement  "					xdz_count = attendingInfo.Where (a => a.Functions == "小队长" && a.ActionName == an && a.SShop.City.Name == item.Name).Select (a => a.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()' " is 187.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkActionInfo,The length of the statement  "					xdz_joincount = attendingInfo.Where (a => a.Functions == "小队长" && a.ActionName == an && a.SShop.City.Name == item.Name).Select (a => a.HumanBasicFile.uniNum).Count ().ToString ()' " is 179.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkActionInfo,The length of the statement  "					xdz_money = attendingInfo.Where (a => a.Functions == "小队长" && a.ActionName == an && a.SShop.City.Name == item.Name).Sum (a => a.StandardSalary).ToString ()' " is 156.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkActionInfo,The length of the statement  "					totalmoney = ((int)attendingInfo.Where (a => a.ActionName == an && a.SShop.City.Name == item.Name).Sum (a => a.StandardSalary) + (int)attendingInfo.Where (a => a.ActionName == an && a.SShop.City.Name == item.Name).Sum (a => a.BearFees)).ToString () " is 248.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,dctupian1,The length of the statement  "					CopyFolderTo (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/" + item.IDcardPhoto)' Server.MapPath ("~/uploadImg/linshi/identityImg/")); " is 141.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,dctupian1,The length of the statement  "					CopyFolderTo (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/" + item.BankCardPhoto)' Server.MapPath ("~/uploadImg/linshi/bankImg/")); " is 135.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,dctupian1,The length of the statement  "						CopyFolderTo (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/" + item.InterfacePhoto)' Server.MapPath ("~/uploadImg/linshi/InterviewImg/")); " is 146.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,dctupian1,The length of the statement  "					CopyFolderTo (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/" + item.Info)' Server.MapPath ("~/uploadImg/linshi/InfoImg/")); " is 126.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,dctupian1,The length of the statement  "					CopyFolderTo (Server.MapPath ("~/uploadImg/workimage/work/" + item.WorkPhoto)' Server.MapPath ("~/uploadImg/linshi/work/")); " is 124.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,displayInfo,The length of the statement  "			da = da.Where (dataFilter => dataFilter.City1.Office.Name == office).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 124.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,displayInfo,The length of the statement  "		da = da.Where (dataFilter => Convert.ToDateTime (dataFilter.TrainEndTime) < Convert.ToDateTime (end).AddDays (1)).ToList (); " is 124.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,displayInfo,The length of the statement  "			da = da.Where (dataFilter => dataFilter.HumanBasicFile.City1.Office.Name == office).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 139.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,displayInfo,The length of the statement  "			da = da.Where (dataFilter => dataFilter.HumanBasicFile.City1.Office.Name == office).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 139.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,displayInfo,The length of the statement  "			da = da.Where (dataFilter => dataFilter.HumanBasicFile.City1.Office.Name == office).Skip ((page - 1) * pagesize).Take (pagesize).ToList (); " is 139.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item); " is 215.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.uniNum); " is 223.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.Name); " is 221.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.City1.Office.Name); " is 234.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' sex); " is 214.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.IDcardNo); " is 225.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.City1.Name); " is 227.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.BankNum); " is 224.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.Bank.Name); " is 226.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.Telephone); " is 198.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' bengintime); " is 193.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' endtime); " is 190.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item); " is 187.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.uniNum); " is 210.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.Name); " is 208.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.City1.Office.Name); " is 221.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "					sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' "男"); " is 186.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "					sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' "女"); " is 186.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.IDcardNo); " is 212.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.City1.Name); " is 214.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.BankNum); " is 211.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.TrainProduction); " is 204.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.TrainScore); " is 199.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.Creatorname); " is 200.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.TrainStartTime); " is 203.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.TrainEndTime); " is 201.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' bengintime); " is 193.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' endtime); " is 190.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item); " is 187.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.uniNum); " is 210.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.Name); " is 208.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.City1.Office.Name); " is 221.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "					sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' "男"); " is 186.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "					sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' "女"); " is 186.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.IDcardNo); " is 212.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.City1.Name); " is 214.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.BankNum); " is 211.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.SShop.Name); " is 199.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.ActionName); " is 199.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.production); " is 199.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.Functions); " is 198.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.StandardSalary); " is 203.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.BearFees); " is 197.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.Date); " is 193.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.Telephone); " is 213.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' bengintime); " is 193.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' endtime); " is 190.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item); " is 187.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.uniNum); " is 210.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.Name); " is 208.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.City1.Office.Name); " is 221.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "					sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' "男"); " is 186.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "					sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' "女"); " is 186.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.IDcardNo); " is 212.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.City1.Name); " is 214.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.BankNum); " is 211.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.HumanLevel); " is 214.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.Face); " is 193.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.WorkAttitude); " is 201.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.KOP); " is 192.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.DJTime); " is 195.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' bengintime); " is 193.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' endtime); " is 190.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item); " is 187.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.uniNum); " is 195.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.Name); " is 193.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' office); " is 189.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' sex); " is 186.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' "\'" + item1.IDcardNo); " is 204.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.City1.Name); " is 199.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' "\'" + item1.BankNum); " is 203.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.Bank.Name); " is 198.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.Telephone); " is 198.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' bengintime); " is 193.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' endtime); " is 190.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item); " is 187.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.uniNum); " is 210.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.Name); " is 208.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.City1.Office.Name); " is 221.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "					sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' "男"); " is 186.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "					sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' "女"); " is 186.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.IDcardNo); " is 212.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.City1.Name); " is 214.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.BankNum); " is 211.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.TrainProduction); " is 204.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.TrainScore); " is 199.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.Creatorname); " is 200.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.TrainStartTime); " is 203.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.TrainEndTime); " is 201.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' bengintime); " is 193.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' endtime); " is 190.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item); " is 187.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.uniNum); " is 210.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.Name); " is 208.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.City1.Office.Name); " is 221.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "					sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' "男"); " is 186.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "					sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' "女"); " is 186.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.IDcardNo); " is 212.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.City1.Name); " is 214.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.BankNum); " is 211.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.SShop.Name); " is 199.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.ActionName); " is 199.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.production); " is 199.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.Functions); " is 198.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.StandardSalary); " is 203.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.BearFees); " is 197.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' bengintime); " is 193.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' endtime); " is 190.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item); " is 187.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.uniNum); " is 210.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.Name); " is 208.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.City1.Office.Name); " is 221.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "					sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' "男"); " is 186.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "					sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' "女"); " is 186.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.IDcardNo); " is 212.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.City1.Name); " is 214.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.BankNum); " is 211.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.HumanBasicFile.HumanLevel); " is 214.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.Face); " is 193.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.WorkAttitude); " is 201.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.KOP); " is 192.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' item1.DJTime); " is 195.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' bengintime); " is 193.
Long Statement,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The length of the statement  "				sbHtml.AppendFormat ("<td style='vnd.ms-excel.numberformat:@;font-size: 14px;text-align:center;background-color: #DCE0E2; font-weight:bold;' height='25' ;Charset='utf-8'>{0}</td>"' endtime); " is 190.
Long Statement,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The length of the statement  "	strConn = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + savePath + ";" + "Extended Properties='Excel 8.0;;HDR=YES;IMEX=1;'"; " is 128.
Long Statement,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The length of the statement  "		strConn = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + savePath + ";Extended Properties='Excel 12.0;HDR=YES;IMEX=1;'"; " is 124.
Long Statement,Management.Models,MailService,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Models\MailService.cs,client_SendCompleted,The length of the statement  "		System.Web.HttpContext.Current.Response.Write ("<script>alert('Error occured' info=" + e.Error.Message + "');</script>"); " is 121.
Long Statement,Management.Models,NotificationHandler,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Models\NotificationHandler .cs,ThreadStart,The length of the statement  "		mailNotificationService.SendTo (mailNotifyInfo.Author' mailNotifyInfo.EmailAddress' mailNotifyInfo.Title' mailNotifyInfo.Content); " is 130.
Complex Conditional,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkActionInfo,The conditional expression  "people.Where (a => a.actionName == an && a.city == item.Name && DateTime.Parse (a.date) >= DateTime.Parse (timebegin) && DateTime.Parse (a.date) <= DateTime.Parse (timeEnd)).FirstOrDefault () != null"  is complex.
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (password))//密码不能为空   {  	ModelState.AddModelError ("captainInfo.password"' "请输入密码");  }  else if (password.Length < 6) {  	ModelState.AddModelError ("captainInfo.password"' "密码不能少于6位");  	//密码不能少于6位  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (password.Length < 6) {  	ModelState.AddModelError ("captainInfo.password"' "密码不能少于6位");  	//密码不能少于6位  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (Mobile))//电话不能为空   {  	ModelState.AddModelError ("captainInfo.mobile"' "请输入电话");  }  else if (Mobile.Length != 11) {  	ModelState.AddModelError ("captainInfo.mobile"' "电话必须是11位");  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (Mobile.Length != 11) {  	ModelState.AddModelError ("captainInfo.mobile"' "电话必须是11位");  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (idCard))//身份证号不能为空   {  	ModelState.AddModelError ("captainInfo.identity"' "请输入身份证号");  }  else if (idCard.Length != 18) {  	ModelState.AddModelError ("captainInfo.identity"' "身份证号必须是18位");  	//身份证号必须是18位  }  else if (!validateIdentityBack (idCard)) {  	ModelState.AddModelError ("captainInfo.identity"' "身份证号已存在");  }  else if (!idc.IsMatch (idCard)) {  	ModelState.AddModelError ("captainInfo.identity"' "请输入正确的身份证格式");  	//验证身份证格式  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (idCard.Length != 18) {  	ModelState.AddModelError ("captainInfo.identity"' "身份证号必须是18位");  	//身份证号必须是18位  }  else if (!validateIdentityBack (idCard)) {  	ModelState.AddModelError ("captainInfo.identity"' "身份证号已存在");  }  else if (!idc.IsMatch (idCard)) {  	ModelState.AddModelError ("captainInfo.identity"' "请输入正确的身份证格式");  	//验证身份证格式  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	var kman = (from a in db.Managers  	where a.IsDraft == true && a.UserId == username  	select a).FirstOrDefault ();  	if (kman == null) {  		//保存至数据库  		man.Id = Guid.NewGuid ();  		man.UserId = username;  		man.Password = password;  		man.City = Convert.ToInt32 (city);  		man.Authority = Convert.ToInt32 (role);  		man.Name = name;  		man.Sex = Convert.ToBoolean (gender);  		man.Telephone = Mobile;  		man.IDcard = idCard;  		if (!string.IsNullOrEmpty (boss)) {  			man.Boss = boss;  		}  		man.Email = email;  		man.BankCard = bankaccount;  		man.Bank = Convert.ToInt32 (bank);  		man.School = school;  		man.Major = major;  		man.Graduate = Convert.ToDateTime (graduatedate);  		man.Academic = academic;  		man.CreateTime = DateTime.Now;  		man.CreatedManId = admin;  		man.EditManId = admin;  		man.IsDelete = false;  		if (!string.IsNullOrEmpty (height)) {  			man.height = Convert.ToInt32 (height);  		}  		if (!string.IsNullOrEmpty (weight)) {  			man.weight = Convert.ToInt32 (weight);  		}  		if (!string.IsNullOrEmpty (BWH)) {  			man.BWH = BWH;  		}  		if (!string.IsNullOrEmpty (speciality)) {  			man.Speciality = speciality;  		}  		//上传图片  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			string file = PicName (personalPhoto.FileName);  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			man.Photo = file;  		}  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			man.StudentCardPhoto = file;  		}  		man.CreateTime = DateTime.Now;  		man.IsDraft = false;  		db.Managers.Add (man);  		db.SaveChanges ();  		ViewBag.flag = 1;  	}  	else {  		//提交草稿箱的内容。  		Managers sman = db.Managers.Find (kman.Id);  		sman.UserId = username;  		sman.Password = password;  		sman.City = Convert.ToInt32 (city);  		sman.Authority = Convert.ToInt32 (role);  		sman.Name = name;  		sman.Sex = Convert.ToBoolean (gender);  		sman.Telephone = Mobile;  		if (!string.IsNullOrEmpty (boss)) {  			sman.Boss = boss;  		}  		sman.Email = email;  		sman.IDcard = idCard;  		sman.BankCard = bankaccount;  		sman.Bank = Convert.ToInt32 (bank);  		sman.School = school;  		sman.Major = major;  		sman.Graduate = Convert.ToDateTime (graduatedate);  		sman.Academic = academic;  		sman.CreateTime = DateTime.Now;  		sman.CreatedManId = admin;  		sman.EditManId = admin;  		if (!string.IsNullOrEmpty (height)) {  			sman.height = Convert.ToInt32 (height);  		}  		if (!string.IsNullOrEmpty (weight)) {  			sman.weight = Convert.ToInt32 (weight);  		}  		if (!string.IsNullOrEmpty (BWH)) {  			sman.BWH = BWH;  		}  		if (!string.IsNullOrEmpty (speciality)) {  			man.Speciality = speciality;  		}  		//上传图片  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			string file = PicName (personalPhoto.FileName);  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			sman.Photo = file;  		}  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			sman.StudentCardPhoto = file;  		}  		sman.IsDraft = false;  		db.Entry (sman).State = EntityState.Modified;  		db.SaveChanges ();  		ViewBag.flag = 1;  	}  	ViewBag.username = "";  	ViewBag.password = "";  	ViewBag.office = "";  	ViewBag.city = "";  	ViewBag.role = "";  	ViewBag.name = "";  	ViewBag.sex = "";  	ViewBag.telephone = "";  	ViewBag.idCard = "";  	ViewBag.email = "";  	ViewBag.bankAccount = "";  	ViewBag.school = "";  	ViewBag.graduate = "";  	ViewBag.academic = "";  	ViewBag.height = "";  	ViewBag.weight = "";  	ViewBag.BWH = "";  	ViewBag.speciality = "";  	return View ();  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	var kman = (from a in db.Managers  	where a.IsDraft == true && a.UserId == username  	select a).FirstOrDefault ();  	if (kman == null) {  		//保存至数据库  		man.Id = Guid.NewGuid ();  		man.UserId = username;  		man.Password = password;  		man.City = Convert.ToInt32 (city);  		man.Authority = Convert.ToInt32 (role);  		man.Name = name;  		man.Sex = Convert.ToBoolean (gender);  		man.Telephone = Mobile;  		man.IDcard = idCard;  		if (!string.IsNullOrEmpty (boss)) {  			man.Boss = boss;  		}  		man.Email = email;  		man.BankCard = bankaccount;  		man.Bank = Convert.ToInt32 (bank);  		man.School = school;  		man.Major = major;  		man.Graduate = Convert.ToDateTime (graduatedate);  		man.Academic = academic;  		man.CreateTime = DateTime.Now;  		man.CreatedManId = admin;  		man.EditManId = admin;  		man.IsDelete = false;  		if (!string.IsNullOrEmpty (height)) {  			man.height = Convert.ToInt32 (height);  		}  		if (!string.IsNullOrEmpty (weight)) {  			man.weight = Convert.ToInt32 (weight);  		}  		if (!string.IsNullOrEmpty (BWH)) {  			man.BWH = BWH;  		}  		if (!string.IsNullOrEmpty (speciality)) {  			man.Speciality = speciality;  		}  		//上传图片  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			string file = PicName (personalPhoto.FileName);  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			man.Photo = file;  		}  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			man.StudentCardPhoto = file;  		}  		man.CreateTime = DateTime.Now;  		man.IsDraft = false;  		db.Managers.Add (man);  		db.SaveChanges ();  		ViewBag.flag = 1;  	}  	else {  		//提交草稿箱的内容。  		Managers sman = db.Managers.Find (kman.Id);  		sman.UserId = username;  		sman.Password = password;  		sman.City = Convert.ToInt32 (city);  		sman.Authority = Convert.ToInt32 (role);  		sman.Name = name;  		sman.Sex = Convert.ToBoolean (gender);  		sman.Telephone = Mobile;  		if (!string.IsNullOrEmpty (boss)) {  			sman.Boss = boss;  		}  		sman.Email = email;  		sman.IDcard = idCard;  		sman.BankCard = bankaccount;  		sman.Bank = Convert.ToInt32 (bank);  		sman.School = school;  		sman.Major = major;  		sman.Graduate = Convert.ToDateTime (graduatedate);  		sman.Academic = academic;  		sman.CreateTime = DateTime.Now;  		sman.CreatedManId = admin;  		sman.EditManId = admin;  		if (!string.IsNullOrEmpty (height)) {  			sman.height = Convert.ToInt32 (height);  		}  		if (!string.IsNullOrEmpty (weight)) {  			sman.weight = Convert.ToInt32 (weight);  		}  		if (!string.IsNullOrEmpty (BWH)) {  			sman.BWH = BWH;  		}  		if (!string.IsNullOrEmpty (speciality)) {  			man.Speciality = speciality;  		}  		//上传图片  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			string file = PicName (personalPhoto.FileName);  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			sman.Photo = file;  		}  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			sman.StudentCardPhoto = file;  		}  		sman.IsDraft = false;  		db.Entry (sman).State = EntityState.Modified;  		db.SaveChanges ();  		ViewBag.flag = 1;  	}  	ViewBag.username = "";  	ViewBag.password = "";  	ViewBag.office = "";  	ViewBag.city = "";  	ViewBag.role = "";  	ViewBag.name = "";  	ViewBag.sex = "";  	ViewBag.telephone = "";  	ViewBag.idCard = "";  	ViewBag.email = "";  	ViewBag.bankAccount = "";  	ViewBag.school = "";  	ViewBag.graduate = "";  	ViewBag.academic = "";  	ViewBag.height = "";  	ViewBag.weight = "";  	ViewBag.BWH = "";  	ViewBag.speciality = "";  	return View ();  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	var kman = (from a in db.Managers  	where a.IsDraft == true && a.UserId == username  	select a).FirstOrDefault ();  	if (kman == null) {  		//保存至数据库  		man.Id = Guid.NewGuid ();  		man.UserId = username;  		man.Password = password;  		man.City = Convert.ToInt32 (city);  		man.Authority = Convert.ToInt32 (role);  		man.Name = name;  		man.Sex = Convert.ToBoolean (gender);  		man.Telephone = Mobile;  		man.IDcard = idCard;  		if (!string.IsNullOrEmpty (boss)) {  			man.Boss = boss;  		}  		man.Email = email;  		man.BankCard = bankaccount;  		man.Bank = Convert.ToInt32 (bank);  		man.School = school;  		man.Major = major;  		man.Graduate = Convert.ToDateTime (graduatedate);  		man.Academic = academic;  		man.CreateTime = DateTime.Now;  		man.CreatedManId = admin;  		man.EditManId = admin;  		man.IsDelete = false;  		if (!string.IsNullOrEmpty (height)) {  			man.height = Convert.ToInt32 (height);  		}  		if (!string.IsNullOrEmpty (weight)) {  			man.weight = Convert.ToInt32 (weight);  		}  		if (!string.IsNullOrEmpty (BWH)) {  			man.BWH = BWH;  		}  		if (!string.IsNullOrEmpty (speciality)) {  			man.Speciality = speciality;  		}  		//上传图片  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			string file = PicName (personalPhoto.FileName);  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			man.Photo = file;  		}  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			man.StudentCardPhoto = file;  		}  		man.CreateTime = DateTime.Now;  		man.IsDraft = false;  		db.Managers.Add (man);  		db.SaveChanges ();  		ViewBag.flag = 1;  	}  	else {  		//提交草稿箱的内容。  		Managers sman = db.Managers.Find (kman.Id);  		sman.UserId = username;  		sman.Password = password;  		sman.City = Convert.ToInt32 (city);  		sman.Authority = Convert.ToInt32 (role);  		sman.Name = name;  		sman.Sex = Convert.ToBoolean (gender);  		sman.Telephone = Mobile;  		if (!string.IsNullOrEmpty (boss)) {  			sman.Boss = boss;  		}  		sman.Email = email;  		sman.IDcard = idCard;  		sman.BankCard = bankaccount;  		sman.Bank = Convert.ToInt32 (bank);  		sman.School = school;  		sman.Major = major;  		sman.Graduate = Convert.ToDateTime (graduatedate);  		sman.Academic = academic;  		sman.CreateTime = DateTime.Now;  		sman.CreatedManId = admin;  		sman.EditManId = admin;  		if (!string.IsNullOrEmpty (height)) {  			sman.height = Convert.ToInt32 (height);  		}  		if (!string.IsNullOrEmpty (weight)) {  			sman.weight = Convert.ToInt32 (weight);  		}  		if (!string.IsNullOrEmpty (BWH)) {  			sman.BWH = BWH;  		}  		if (!string.IsNullOrEmpty (speciality)) {  			man.Speciality = speciality;  		}  		//上传图片  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			string file = PicName (personalPhoto.FileName);  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			sman.Photo = file;  		}  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			sman.StudentCardPhoto = file;  		}  		sman.IsDraft = false;  		db.Entry (sman).State = EntityState.Modified;  		db.SaveChanges ();  		ViewBag.flag = 1;  	}  	ViewBag.username = "";  	ViewBag.password = "";  	ViewBag.office = "";  	ViewBag.city = "";  	ViewBag.role = "";  	ViewBag.name = "";  	ViewBag.sex = "";  	ViewBag.telephone = "";  	ViewBag.idCard = "";  	ViewBag.email = "";  	ViewBag.bankAccount = "";  	ViewBag.school = "";  	ViewBag.graduate = "";  	ViewBag.academic = "";  	ViewBag.height = "";  	ViewBag.weight = "";  	ViewBag.BWH = "";  	ViewBag.speciality = "";  	return View ();  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	var kman = (from a in db.Managers  	where a.IsDraft == true && a.UserId == username  	select a).FirstOrDefault ();  	if (kman == null) {  		//保存至数据库  		man.Id = Guid.NewGuid ();  		man.UserId = username;  		man.Password = password;  		man.City = Convert.ToInt32 (city);  		man.Authority = Convert.ToInt32 (role);  		man.Name = name;  		man.Sex = Convert.ToBoolean (gender);  		man.Telephone = Mobile;  		man.IDcard = idCard;  		if (!string.IsNullOrEmpty (boss)) {  			man.Boss = boss;  		}  		man.Email = email;  		man.BankCard = bankaccount;  		man.Bank = Convert.ToInt32 (bank);  		man.School = school;  		man.Major = major;  		man.Graduate = Convert.ToDateTime (graduatedate);  		man.Academic = academic;  		man.CreateTime = DateTime.Now;  		man.CreatedManId = admin;  		man.EditManId = admin;  		man.IsDelete = false;  		if (!string.IsNullOrEmpty (height)) {  			man.height = Convert.ToInt32 (height);  		}  		if (!string.IsNullOrEmpty (weight)) {  			man.weight = Convert.ToInt32 (weight);  		}  		if (!string.IsNullOrEmpty (BWH)) {  			man.BWH = BWH;  		}  		if (!string.IsNullOrEmpty (speciality)) {  			man.Speciality = speciality;  		}  		//上传图片  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			string file = PicName (personalPhoto.FileName);  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			man.Photo = file;  		}  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			man.StudentCardPhoto = file;  		}  		man.CreateTime = DateTime.Now;  		man.IsDraft = false;  		db.Managers.Add (man);  		db.SaveChanges ();  		ViewBag.flag = 1;  	}  	else {  		//提交草稿箱的内容。  		Managers sman = db.Managers.Find (kman.Id);  		sman.UserId = username;  		sman.Password = password;  		sman.City = Convert.ToInt32 (city);  		sman.Authority = Convert.ToInt32 (role);  		sman.Name = name;  		sman.Sex = Convert.ToBoolean (gender);  		sman.Telephone = Mobile;  		if (!string.IsNullOrEmpty (boss)) {  			sman.Boss = boss;  		}  		sman.Email = email;  		sman.IDcard = idCard;  		sman.BankCard = bankaccount;  		sman.Bank = Convert.ToInt32 (bank);  		sman.School = school;  		sman.Major = major;  		sman.Graduate = Convert.ToDateTime (graduatedate);  		sman.Academic = academic;  		sman.CreateTime = DateTime.Now;  		sman.CreatedManId = admin;  		sman.EditManId = admin;  		if (!string.IsNullOrEmpty (height)) {  			sman.height = Convert.ToInt32 (height);  		}  		if (!string.IsNullOrEmpty (weight)) {  			sman.weight = Convert.ToInt32 (weight);  		}  		if (!string.IsNullOrEmpty (BWH)) {  			sman.BWH = BWH;  		}  		if (!string.IsNullOrEmpty (speciality)) {  			man.Speciality = speciality;  		}  		//上传图片  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			string file = PicName (personalPhoto.FileName);  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			sman.Photo = file;  		}  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			sman.StudentCardPhoto = file;  		}  		sman.IsDraft = false;  		db.Entry (sman).State = EntityState.Modified;  		db.SaveChanges ();  		ViewBag.flag = 1;  	}  	ViewBag.username = "";  	ViewBag.password = "";  	ViewBag.office = "";  	ViewBag.city = "";  	ViewBag.role = "";  	ViewBag.name = "";  	ViewBag.sex = "";  	ViewBag.telephone = "";  	ViewBag.idCard = "";  	ViewBag.email = "";  	ViewBag.bankAccount = "";  	ViewBag.school = "";  	ViewBag.graduate = "";  	ViewBag.academic = "";  	ViewBag.height = "";  	ViewBag.weight = "";  	ViewBag.BWH = "";  	ViewBag.speciality = "";  	return View ();  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	var kman = (from a in db.Managers  	where a.IsDraft == true && a.UserId == username  	select a).FirstOrDefault ();  	if (kman == null) {  		//保存至数据库  		man.Id = Guid.NewGuid ();  		man.UserId = username;  		man.Password = password;  		man.City = Convert.ToInt32 (city);  		man.Authority = Convert.ToInt32 (role);  		man.Name = name;  		man.Sex = Convert.ToBoolean (gender);  		man.Telephone = Mobile;  		man.IDcard = idCard;  		if (!string.IsNullOrEmpty (boss)) {  			man.Boss = boss;  		}  		man.Email = email;  		man.BankCard = bankaccount;  		man.Bank = Convert.ToInt32 (bank);  		man.School = school;  		man.Major = major;  		man.Graduate = Convert.ToDateTime (graduatedate);  		man.Academic = academic;  		man.CreateTime = DateTime.Now;  		man.CreatedManId = admin;  		man.EditManId = admin;  		man.IsDelete = false;  		if (!string.IsNullOrEmpty (height)) {  			man.height = Convert.ToInt32 (height);  		}  		if (!string.IsNullOrEmpty (weight)) {  			man.weight = Convert.ToInt32 (weight);  		}  		if (!string.IsNullOrEmpty (BWH)) {  			man.BWH = BWH;  		}  		if (!string.IsNullOrEmpty (speciality)) {  			man.Speciality = speciality;  		}  		//上传图片  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			string file = PicName (personalPhoto.FileName);  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			man.Photo = file;  		}  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			man.StudentCardPhoto = file;  		}  		man.CreateTime = DateTime.Now;  		man.IsDraft = false;  		db.Managers.Add (man);  		db.SaveChanges ();  		ViewBag.flag = 1;  	}  	else {  		//提交草稿箱的内容。  		Managers sman = db.Managers.Find (kman.Id);  		sman.UserId = username;  		sman.Password = password;  		sman.City = Convert.ToInt32 (city);  		sman.Authority = Convert.ToInt32 (role);  		sman.Name = name;  		sman.Sex = Convert.ToBoolean (gender);  		sman.Telephone = Mobile;  		if (!string.IsNullOrEmpty (boss)) {  			sman.Boss = boss;  		}  		sman.Email = email;  		sman.IDcard = idCard;  		sman.BankCard = bankaccount;  		sman.Bank = Convert.ToInt32 (bank);  		sman.School = school;  		sman.Major = major;  		sman.Graduate = Convert.ToDateTime (graduatedate);  		sman.Academic = academic;  		sman.CreateTime = DateTime.Now;  		sman.CreatedManId = admin;  		sman.EditManId = admin;  		if (!string.IsNullOrEmpty (height)) {  			sman.height = Convert.ToInt32 (height);  		}  		if (!string.IsNullOrEmpty (weight)) {  			sman.weight = Convert.ToInt32 (weight);  		}  		if (!string.IsNullOrEmpty (BWH)) {  			sman.BWH = BWH;  		}  		if (!string.IsNullOrEmpty (speciality)) {  			man.Speciality = speciality;  		}  		//上传图片  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			string file = PicName (personalPhoto.FileName);  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			sman.Photo = file;  		}  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			sman.StudentCardPhoto = file;  		}  		sman.IsDraft = false;  		db.Entry (sman).State = EntityState.Modified;  		db.SaveChanges ();  		ViewBag.flag = 1;  	}  	ViewBag.username = "";  	ViewBag.password = "";  	ViewBag.office = "";  	ViewBag.city = "";  	ViewBag.role = "";  	ViewBag.name = "";  	ViewBag.sex = "";  	ViewBag.telephone = "";  	ViewBag.idCard = "";  	ViewBag.email = "";  	ViewBag.bankAccount = "";  	ViewBag.school = "";  	ViewBag.graduate = "";  	ViewBag.academic = "";  	ViewBag.height = "";  	ViewBag.weight = "";  	ViewBag.BWH = "";  	ViewBag.speciality = "";  	return View ();  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	var kman = (from a in db.Managers  	where a.IsDraft == true && a.UserId == username  	select a).FirstOrDefault ();  	if (kman == null) {  		//保存至数据库  		man.Id = Guid.NewGuid ();  		man.UserId = username;  		man.Password = password;  		man.City = Convert.ToInt32 (city);  		man.Authority = Convert.ToInt32 (role);  		man.Name = name;  		man.Sex = Convert.ToBoolean (gender);  		man.Telephone = Mobile;  		man.IDcard = idCard;  		if (!string.IsNullOrEmpty (boss)) {  			man.Boss = boss;  		}  		man.Email = email;  		man.BankCard = bankaccount;  		man.Bank = Convert.ToInt32 (bank);  		man.School = school;  		man.Major = major;  		man.Graduate = Convert.ToDateTime (graduatedate);  		man.Academic = academic;  		man.CreateTime = DateTime.Now;  		man.CreatedManId = admin;  		man.EditManId = admin;  		man.IsDelete = false;  		if (!string.IsNullOrEmpty (height)) {  			man.height = Convert.ToInt32 (height);  		}  		if (!string.IsNullOrEmpty (weight)) {  			man.weight = Convert.ToInt32 (weight);  		}  		if (!string.IsNullOrEmpty (BWH)) {  			man.BWH = BWH;  		}  		if (!string.IsNullOrEmpty (speciality)) {  			man.Speciality = speciality;  		}  		//上传图片  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			string file = PicName (personalPhoto.FileName);  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			man.Photo = file;  		}  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			man.StudentCardPhoto = file;  		}  		man.CreateTime = DateTime.Now;  		man.IsDraft = false;  		db.Managers.Add (man);  		db.SaveChanges ();  		ViewBag.flag = 1;  	}  	else {  		//提交草稿箱的内容。  		Managers sman = db.Managers.Find (kman.Id);  		sman.UserId = username;  		sman.Password = password;  		sman.City = Convert.ToInt32 (city);  		sman.Authority = Convert.ToInt32 (role);  		sman.Name = name;  		sman.Sex = Convert.ToBoolean (gender);  		sman.Telephone = Mobile;  		if (!string.IsNullOrEmpty (boss)) {  			sman.Boss = boss;  		}  		sman.Email = email;  		sman.IDcard = idCard;  		sman.BankCard = bankaccount;  		sman.Bank = Convert.ToInt32 (bank);  		sman.School = school;  		sman.Major = major;  		sman.Graduate = Convert.ToDateTime (graduatedate);  		sman.Academic = academic;  		sman.CreateTime = DateTime.Now;  		sman.CreatedManId = admin;  		sman.EditManId = admin;  		if (!string.IsNullOrEmpty (height)) {  			sman.height = Convert.ToInt32 (height);  		}  		if (!string.IsNullOrEmpty (weight)) {  			sman.weight = Convert.ToInt32 (weight);  		}  		if (!string.IsNullOrEmpty (BWH)) {  			sman.BWH = BWH;  		}  		if (!string.IsNullOrEmpty (speciality)) {  			man.Speciality = speciality;  		}  		//上传图片  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			string file = PicName (personalPhoto.FileName);  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			sman.Photo = file;  		}  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			sman.StudentCardPhoto = file;  		}  		sman.IsDraft = false;  		db.Entry (sman).State = EntityState.Modified;  		db.SaveChanges ();  		ViewBag.flag = 1;  	}  	ViewBag.username = "";  	ViewBag.password = "";  	ViewBag.office = "";  	ViewBag.city = "";  	ViewBag.role = "";  	ViewBag.name = "";  	ViewBag.sex = "";  	ViewBag.telephone = "";  	ViewBag.idCard = "";  	ViewBag.email = "";  	ViewBag.bankAccount = "";  	ViewBag.school = "";  	ViewBag.graduate = "";  	ViewBag.academic = "";  	ViewBag.height = "";  	ViewBag.weight = "";  	ViewBag.BWH = "";  	ViewBag.speciality = "";  	return View ();  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	var kman = (from a in db.Managers  	where a.IsDraft == true && a.UserId == username  	select a).FirstOrDefault ();  	if (kman == null) {  		//保存至数据库  		man.Id = Guid.NewGuid ();  		man.UserId = username;  		man.Password = password;  		man.City = Convert.ToInt32 (city);  		man.Authority = Convert.ToInt32 (role);  		man.Name = name;  		man.Sex = Convert.ToBoolean (gender);  		man.Telephone = Mobile;  		man.IDcard = idCard;  		if (!string.IsNullOrEmpty (boss)) {  			man.Boss = boss;  		}  		man.Email = email;  		man.BankCard = bankaccount;  		man.Bank = Convert.ToInt32 (bank);  		man.School = school;  		man.Major = major;  		man.Graduate = Convert.ToDateTime (graduatedate);  		man.Academic = academic;  		man.CreateTime = DateTime.Now;  		man.CreatedManId = admin;  		man.EditManId = admin;  		man.IsDelete = false;  		if (!string.IsNullOrEmpty (height)) {  			man.height = Convert.ToInt32 (height);  		}  		if (!string.IsNullOrEmpty (weight)) {  			man.weight = Convert.ToInt32 (weight);  		}  		if (!string.IsNullOrEmpty (BWH)) {  			man.BWH = BWH;  		}  		if (!string.IsNullOrEmpty (speciality)) {  			man.Speciality = speciality;  		}  		//上传图片  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			string file = PicName (personalPhoto.FileName);  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			man.Photo = file;  		}  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			man.StudentCardPhoto = file;  		}  		man.CreateTime = DateTime.Now;  		man.IsDraft = false;  		db.Managers.Add (man);  		db.SaveChanges ();  		ViewBag.flag = 1;  	}  	else {  		//提交草稿箱的内容。  		Managers sman = db.Managers.Find (kman.Id);  		sman.UserId = username;  		sman.Password = password;  		sman.City = Convert.ToInt32 (city);  		sman.Authority = Convert.ToInt32 (role);  		sman.Name = name;  		sman.Sex = Convert.ToBoolean (gender);  		sman.Telephone = Mobile;  		if (!string.IsNullOrEmpty (boss)) {  			sman.Boss = boss;  		}  		sman.Email = email;  		sman.IDcard = idCard;  		sman.BankCard = bankaccount;  		sman.Bank = Convert.ToInt32 (bank);  		sman.School = school;  		sman.Major = major;  		sman.Graduate = Convert.ToDateTime (graduatedate);  		sman.Academic = academic;  		sman.CreateTime = DateTime.Now;  		sman.CreatedManId = admin;  		sman.EditManId = admin;  		if (!string.IsNullOrEmpty (height)) {  			sman.height = Convert.ToInt32 (height);  		}  		if (!string.IsNullOrEmpty (weight)) {  			sman.weight = Convert.ToInt32 (weight);  		}  		if (!string.IsNullOrEmpty (BWH)) {  			sman.BWH = BWH;  		}  		if (!string.IsNullOrEmpty (speciality)) {  			man.Speciality = speciality;  		}  		//上传图片  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			string file = PicName (personalPhoto.FileName);  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			sman.Photo = file;  		}  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			sman.StudentCardPhoto = file;  		}  		sman.IsDraft = false;  		db.Entry (sman).State = EntityState.Modified;  		db.SaveChanges ();  		ViewBag.flag = 1;  	}  	ViewBag.username = "";  	ViewBag.password = "";  	ViewBag.office = "";  	ViewBag.city = "";  	ViewBag.role = "";  	ViewBag.name = "";  	ViewBag.sex = "";  	ViewBag.telephone = "";  	ViewBag.idCard = "";  	ViewBag.email = "";  	ViewBag.bankAccount = "";  	ViewBag.school = "";  	ViewBag.graduate = "";  	ViewBag.academic = "";  	ViewBag.height = "";  	ViewBag.weight = "";  	ViewBag.BWH = "";  	ViewBag.speciality = "";  	return View ();  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	var kman = (from a in db.Managers  	where a.IsDraft == true && a.UserId == username  	select a).FirstOrDefault ();  	if (kman == null) {  		//保存至数据库  		man.Id = Guid.NewGuid ();  		man.UserId = username;  		man.Password = password;  		man.City = Convert.ToInt32 (city);  		man.Authority = Convert.ToInt32 (role);  		man.Name = name;  		man.Sex = Convert.ToBoolean (gender);  		man.Telephone = Mobile;  		man.IDcard = idCard;  		if (!string.IsNullOrEmpty (boss)) {  			man.Boss = boss;  		}  		man.Email = email;  		man.BankCard = bankaccount;  		man.Bank = Convert.ToInt32 (bank);  		man.School = school;  		man.Major = major;  		man.Graduate = Convert.ToDateTime (graduatedate);  		man.Academic = academic;  		man.CreateTime = DateTime.Now;  		man.CreatedManId = admin;  		man.EditManId = admin;  		man.IsDelete = false;  		if (!string.IsNullOrEmpty (height)) {  			man.height = Convert.ToInt32 (height);  		}  		if (!string.IsNullOrEmpty (weight)) {  			man.weight = Convert.ToInt32 (weight);  		}  		if (!string.IsNullOrEmpty (BWH)) {  			man.BWH = BWH;  		}  		if (!string.IsNullOrEmpty (speciality)) {  			man.Speciality = speciality;  		}  		//上传图片  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			string file = PicName (personalPhoto.FileName);  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			man.Photo = file;  		}  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			man.StudentCardPhoto = file;  		}  		man.CreateTime = DateTime.Now;  		man.IsDraft = false;  		db.Managers.Add (man);  		db.SaveChanges ();  		ViewBag.flag = 1;  	}  	else {  		//提交草稿箱的内容。  		Managers sman = db.Managers.Find (kman.Id);  		sman.UserId = username;  		sman.Password = password;  		sman.City = Convert.ToInt32 (city);  		sman.Authority = Convert.ToInt32 (role);  		sman.Name = name;  		sman.Sex = Convert.ToBoolean (gender);  		sman.Telephone = Mobile;  		if (!string.IsNullOrEmpty (boss)) {  			sman.Boss = boss;  		}  		sman.Email = email;  		sman.IDcard = idCard;  		sman.BankCard = bankaccount;  		sman.Bank = Convert.ToInt32 (bank);  		sman.School = school;  		sman.Major = major;  		sman.Graduate = Convert.ToDateTime (graduatedate);  		sman.Academic = academic;  		sman.CreateTime = DateTime.Now;  		sman.CreatedManId = admin;  		sman.EditManId = admin;  		if (!string.IsNullOrEmpty (height)) {  			sman.height = Convert.ToInt32 (height);  		}  		if (!string.IsNullOrEmpty (weight)) {  			sman.weight = Convert.ToInt32 (weight);  		}  		if (!string.IsNullOrEmpty (BWH)) {  			sman.BWH = BWH;  		}  		if (!string.IsNullOrEmpty (speciality)) {  			man.Speciality = speciality;  		}  		//上传图片  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			string file = PicName (personalPhoto.FileName);  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			sman.Photo = file;  		}  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			sman.StudentCardPhoto = file;  		}  		sman.IsDraft = false;  		db.Entry (sman).State = EntityState.Modified;  		db.SaveChanges ();  		ViewBag.flag = 1;  	}  	ViewBag.username = "";  	ViewBag.password = "";  	ViewBag.office = "";  	ViewBag.city = "";  	ViewBag.role = "";  	ViewBag.name = "";  	ViewBag.sex = "";  	ViewBag.telephone = "";  	ViewBag.idCard = "";  	ViewBag.email = "";  	ViewBag.bankAccount = "";  	ViewBag.school = "";  	ViewBag.graduate = "";  	ViewBag.academic = "";  	ViewBag.height = "";  	ViewBag.weight = "";  	ViewBag.BWH = "";  	ViewBag.speciality = "";  	return View ();  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (kman == null) {  	//保存至数据库  	man.Id = Guid.NewGuid ();  	man.UserId = username;  	man.Password = password;  	man.City = Convert.ToInt32 (city);  	man.Authority = Convert.ToInt32 (role);  	man.Name = name;  	man.Sex = Convert.ToBoolean (gender);  	man.Telephone = Mobile;  	man.IDcard = idCard;  	if (!string.IsNullOrEmpty (boss)) {  		man.Boss = boss;  	}  	man.Email = email;  	man.BankCard = bankaccount;  	man.Bank = Convert.ToInt32 (bank);  	man.School = school;  	man.Major = major;  	man.Graduate = Convert.ToDateTime (graduatedate);  	man.Academic = academic;  	man.CreateTime = DateTime.Now;  	man.CreatedManId = admin;  	man.EditManId = admin;  	man.IsDelete = false;  	if (!string.IsNullOrEmpty (height)) {  		man.height = Convert.ToInt32 (height);  	}  	if (!string.IsNullOrEmpty (weight)) {  		man.weight = Convert.ToInt32 (weight);  	}  	if (!string.IsNullOrEmpty (BWH)) {  		man.BWH = BWH;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		man.Speciality = speciality;  	}  	//上传图片  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		string file = PicName (personalPhoto.FileName);  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		man.Photo = file;  	}  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		man.StudentCardPhoto = file;  	}  	man.CreateTime = DateTime.Now;  	man.IsDraft = false;  	db.Managers.Add (man);  	db.SaveChanges ();  	ViewBag.flag = 1;  }  else {  	//提交草稿箱的内容。  	Managers sman = db.Managers.Find (kman.Id);  	sman.UserId = username;  	sman.Password = password;  	sman.City = Convert.ToInt32 (city);  	sman.Authority = Convert.ToInt32 (role);  	sman.Name = name;  	sman.Sex = Convert.ToBoolean (gender);  	sman.Telephone = Mobile;  	if (!string.IsNullOrEmpty (boss)) {  		sman.Boss = boss;  	}  	sman.Email = email;  	sman.IDcard = idCard;  	sman.BankCard = bankaccount;  	sman.Bank = Convert.ToInt32 (bank);  	sman.School = school;  	sman.Major = major;  	sman.Graduate = Convert.ToDateTime (graduatedate);  	sman.Academic = academic;  	sman.CreateTime = DateTime.Now;  	sman.CreatedManId = admin;  	sman.EditManId = admin;  	if (!string.IsNullOrEmpty (height)) {  		sman.height = Convert.ToInt32 (height);  	}  	if (!string.IsNullOrEmpty (weight)) {  		sman.weight = Convert.ToInt32 (weight);  	}  	if (!string.IsNullOrEmpty (BWH)) {  		sman.BWH = BWH;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		man.Speciality = speciality;  	}  	//上传图片  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		string file = PicName (personalPhoto.FileName);  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		sman.Photo = file;  	}  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		sman.StudentCardPhoto = file;  	}  	sman.IsDraft = false;  	db.Entry (sman).State = EntityState.Modified;  	db.SaveChanges ();  	ViewBag.flag = 1;  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (kman == null) {  	//保存至数据库  	man.Id = Guid.NewGuid ();  	man.UserId = username;  	man.Password = password;  	man.City = Convert.ToInt32 (city);  	man.Authority = Convert.ToInt32 (role);  	man.Name = name;  	man.Sex = Convert.ToBoolean (gender);  	man.Telephone = Mobile;  	man.IDcard = idCard;  	if (!string.IsNullOrEmpty (boss)) {  		man.Boss = boss;  	}  	man.Email = email;  	man.BankCard = bankaccount;  	man.Bank = Convert.ToInt32 (bank);  	man.School = school;  	man.Major = major;  	man.Graduate = Convert.ToDateTime (graduatedate);  	man.Academic = academic;  	man.CreateTime = DateTime.Now;  	man.CreatedManId = admin;  	man.EditManId = admin;  	man.IsDelete = false;  	if (!string.IsNullOrEmpty (height)) {  		man.height = Convert.ToInt32 (height);  	}  	if (!string.IsNullOrEmpty (weight)) {  		man.weight = Convert.ToInt32 (weight);  	}  	if (!string.IsNullOrEmpty (BWH)) {  		man.BWH = BWH;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		man.Speciality = speciality;  	}  	//上传图片  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		string file = PicName (personalPhoto.FileName);  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		man.Photo = file;  	}  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		man.StudentCardPhoto = file;  	}  	man.CreateTime = DateTime.Now;  	man.IsDraft = false;  	db.Managers.Add (man);  	db.SaveChanges ();  	ViewBag.flag = 1;  }  else {  	//提交草稿箱的内容。  	Managers sman = db.Managers.Find (kman.Id);  	sman.UserId = username;  	sman.Password = password;  	sman.City = Convert.ToInt32 (city);  	sman.Authority = Convert.ToInt32 (role);  	sman.Name = name;  	sman.Sex = Convert.ToBoolean (gender);  	sman.Telephone = Mobile;  	if (!string.IsNullOrEmpty (boss)) {  		sman.Boss = boss;  	}  	sman.Email = email;  	sman.IDcard = idCard;  	sman.BankCard = bankaccount;  	sman.Bank = Convert.ToInt32 (bank);  	sman.School = school;  	sman.Major = major;  	sman.Graduate = Convert.ToDateTime (graduatedate);  	sman.Academic = academic;  	sman.CreateTime = DateTime.Now;  	sman.CreatedManId = admin;  	sman.EditManId = admin;  	if (!string.IsNullOrEmpty (height)) {  		sman.height = Convert.ToInt32 (height);  	}  	if (!string.IsNullOrEmpty (weight)) {  		sman.weight = Convert.ToInt32 (weight);  	}  	if (!string.IsNullOrEmpty (BWH)) {  		sman.BWH = BWH;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		man.Speciality = speciality;  	}  	//上传图片  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		string file = PicName (personalPhoto.FileName);  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		sman.Photo = file;  	}  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		sman.StudentCardPhoto = file;  	}  	sman.IsDraft = false;  	db.Entry (sman).State = EntityState.Modified;  	db.SaveChanges ();  	ViewBag.flag = 1;  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (kman == null) {  	//保存至数据库  	man.Id = Guid.NewGuid ();  	man.UserId = username;  	man.Password = password;  	man.City = Convert.ToInt32 (city);  	man.Authority = Convert.ToInt32 (role);  	man.Name = name;  	man.Sex = Convert.ToBoolean (gender);  	man.Telephone = Mobile;  	man.IDcard = idCard;  	if (!string.IsNullOrEmpty (boss)) {  		man.Boss = boss;  	}  	man.Email = email;  	man.BankCard = bankaccount;  	man.Bank = Convert.ToInt32 (bank);  	man.School = school;  	man.Major = major;  	man.Graduate = Convert.ToDateTime (graduatedate);  	man.Academic = academic;  	man.CreateTime = DateTime.Now;  	man.CreatedManId = admin;  	man.EditManId = admin;  	man.IsDelete = false;  	if (!string.IsNullOrEmpty (height)) {  		man.height = Convert.ToInt32 (height);  	}  	if (!string.IsNullOrEmpty (weight)) {  		man.weight = Convert.ToInt32 (weight);  	}  	if (!string.IsNullOrEmpty (BWH)) {  		man.BWH = BWH;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		man.Speciality = speciality;  	}  	//上传图片  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		string file = PicName (personalPhoto.FileName);  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		man.Photo = file;  	}  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		man.StudentCardPhoto = file;  	}  	man.CreateTime = DateTime.Now;  	man.IsDraft = false;  	db.Managers.Add (man);  	db.SaveChanges ();  	ViewBag.flag = 1;  }  else {  	//提交草稿箱的内容。  	Managers sman = db.Managers.Find (kman.Id);  	sman.UserId = username;  	sman.Password = password;  	sman.City = Convert.ToInt32 (city);  	sman.Authority = Convert.ToInt32 (role);  	sman.Name = name;  	sman.Sex = Convert.ToBoolean (gender);  	sman.Telephone = Mobile;  	if (!string.IsNullOrEmpty (boss)) {  		sman.Boss = boss;  	}  	sman.Email = email;  	sman.IDcard = idCard;  	sman.BankCard = bankaccount;  	sman.Bank = Convert.ToInt32 (bank);  	sman.School = school;  	sman.Major = major;  	sman.Graduate = Convert.ToDateTime (graduatedate);  	sman.Academic = academic;  	sman.CreateTime = DateTime.Now;  	sman.CreatedManId = admin;  	sman.EditManId = admin;  	if (!string.IsNullOrEmpty (height)) {  		sman.height = Convert.ToInt32 (height);  	}  	if (!string.IsNullOrEmpty (weight)) {  		sman.weight = Convert.ToInt32 (weight);  	}  	if (!string.IsNullOrEmpty (BWH)) {  		sman.BWH = BWH;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		man.Speciality = speciality;  	}  	//上传图片  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		string file = PicName (personalPhoto.FileName);  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		sman.Photo = file;  	}  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		sman.StudentCardPhoto = file;  	}  	sman.IsDraft = false;  	db.Entry (sman).State = EntityState.Modified;  	db.SaveChanges ();  	ViewBag.flag = 1;  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (kman == null) {  	//保存至数据库  	man.Id = Guid.NewGuid ();  	man.UserId = username;  	man.Password = password;  	man.City = Convert.ToInt32 (city);  	man.Authority = Convert.ToInt32 (role);  	man.Name = name;  	man.Sex = Convert.ToBoolean (gender);  	man.Telephone = Mobile;  	man.IDcard = idCard;  	if (!string.IsNullOrEmpty (boss)) {  		man.Boss = boss;  	}  	man.Email = email;  	man.BankCard = bankaccount;  	man.Bank = Convert.ToInt32 (bank);  	man.School = school;  	man.Major = major;  	man.Graduate = Convert.ToDateTime (graduatedate);  	man.Academic = academic;  	man.CreateTime = DateTime.Now;  	man.CreatedManId = admin;  	man.EditManId = admin;  	man.IsDelete = false;  	if (!string.IsNullOrEmpty (height)) {  		man.height = Convert.ToInt32 (height);  	}  	if (!string.IsNullOrEmpty (weight)) {  		man.weight = Convert.ToInt32 (weight);  	}  	if (!string.IsNullOrEmpty (BWH)) {  		man.BWH = BWH;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		man.Speciality = speciality;  	}  	//上传图片  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		string file = PicName (personalPhoto.FileName);  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		man.Photo = file;  	}  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		man.StudentCardPhoto = file;  	}  	man.CreateTime = DateTime.Now;  	man.IsDraft = false;  	db.Managers.Add (man);  	db.SaveChanges ();  	ViewBag.flag = 1;  }  else {  	//提交草稿箱的内容。  	Managers sman = db.Managers.Find (kman.Id);  	sman.UserId = username;  	sman.Password = password;  	sman.City = Convert.ToInt32 (city);  	sman.Authority = Convert.ToInt32 (role);  	sman.Name = name;  	sman.Sex = Convert.ToBoolean (gender);  	sman.Telephone = Mobile;  	if (!string.IsNullOrEmpty (boss)) {  		sman.Boss = boss;  	}  	sman.Email = email;  	sman.IDcard = idCard;  	sman.BankCard = bankaccount;  	sman.Bank = Convert.ToInt32 (bank);  	sman.School = school;  	sman.Major = major;  	sman.Graduate = Convert.ToDateTime (graduatedate);  	sman.Academic = academic;  	sman.CreateTime = DateTime.Now;  	sman.CreatedManId = admin;  	sman.EditManId = admin;  	if (!string.IsNullOrEmpty (height)) {  		sman.height = Convert.ToInt32 (height);  	}  	if (!string.IsNullOrEmpty (weight)) {  		sman.weight = Convert.ToInt32 (weight);  	}  	if (!string.IsNullOrEmpty (BWH)) {  		sman.BWH = BWH;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		man.Speciality = speciality;  	}  	//上传图片  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		string file = PicName (personalPhoto.FileName);  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		sman.Photo = file;  	}  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		sman.StudentCardPhoto = file;  	}  	sman.IsDraft = false;  	db.Entry (sman).State = EntityState.Modified;  	db.SaveChanges ();  	ViewBag.flag = 1;  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (kman == null) {  	//保存至数据库  	man.Id = Guid.NewGuid ();  	man.UserId = username;  	man.Password = password;  	man.City = Convert.ToInt32 (city);  	man.Authority = Convert.ToInt32 (role);  	man.Name = name;  	man.Sex = Convert.ToBoolean (gender);  	man.Telephone = Mobile;  	man.IDcard = idCard;  	if (!string.IsNullOrEmpty (boss)) {  		man.Boss = boss;  	}  	man.Email = email;  	man.BankCard = bankaccount;  	man.Bank = Convert.ToInt32 (bank);  	man.School = school;  	man.Major = major;  	man.Graduate = Convert.ToDateTime (graduatedate);  	man.Academic = academic;  	man.CreateTime = DateTime.Now;  	man.CreatedManId = admin;  	man.EditManId = admin;  	man.IsDelete = false;  	if (!string.IsNullOrEmpty (height)) {  		man.height = Convert.ToInt32 (height);  	}  	if (!string.IsNullOrEmpty (weight)) {  		man.weight = Convert.ToInt32 (weight);  	}  	if (!string.IsNullOrEmpty (BWH)) {  		man.BWH = BWH;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		man.Speciality = speciality;  	}  	//上传图片  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		string file = PicName (personalPhoto.FileName);  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		man.Photo = file;  	}  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		man.StudentCardPhoto = file;  	}  	man.CreateTime = DateTime.Now;  	man.IsDraft = false;  	db.Managers.Add (man);  	db.SaveChanges ();  	ViewBag.flag = 1;  }  else {  	//提交草稿箱的内容。  	Managers sman = db.Managers.Find (kman.Id);  	sman.UserId = username;  	sman.Password = password;  	sman.City = Convert.ToInt32 (city);  	sman.Authority = Convert.ToInt32 (role);  	sman.Name = name;  	sman.Sex = Convert.ToBoolean (gender);  	sman.Telephone = Mobile;  	if (!string.IsNullOrEmpty (boss)) {  		sman.Boss = boss;  	}  	sman.Email = email;  	sman.IDcard = idCard;  	sman.BankCard = bankaccount;  	sman.Bank = Convert.ToInt32 (bank);  	sman.School = school;  	sman.Major = major;  	sman.Graduate = Convert.ToDateTime (graduatedate);  	sman.Academic = academic;  	sman.CreateTime = DateTime.Now;  	sman.CreatedManId = admin;  	sman.EditManId = admin;  	if (!string.IsNullOrEmpty (height)) {  		sman.height = Convert.ToInt32 (height);  	}  	if (!string.IsNullOrEmpty (weight)) {  		sman.weight = Convert.ToInt32 (weight);  	}  	if (!string.IsNullOrEmpty (BWH)) {  		sman.BWH = BWH;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		man.Speciality = speciality;  	}  	//上传图片  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		string file = PicName (personalPhoto.FileName);  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		sman.Photo = file;  	}  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		sman.StudentCardPhoto = file;  	}  	sman.IsDraft = false;  	db.Entry (sman).State = EntityState.Modified;  	db.SaveChanges ();  	ViewBag.flag = 1;  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (kman == null) {  	//保存至数据库  	man.Id = Guid.NewGuid ();  	man.UserId = username;  	man.Password = password;  	man.City = Convert.ToInt32 (city);  	man.Authority = Convert.ToInt32 (role);  	man.Name = name;  	man.Sex = Convert.ToBoolean (gender);  	man.Telephone = Mobile;  	man.IDcard = idCard;  	if (!string.IsNullOrEmpty (boss)) {  		man.Boss = boss;  	}  	man.Email = email;  	man.BankCard = bankaccount;  	man.Bank = Convert.ToInt32 (bank);  	man.School = school;  	man.Major = major;  	man.Graduate = Convert.ToDateTime (graduatedate);  	man.Academic = academic;  	man.CreateTime = DateTime.Now;  	man.CreatedManId = admin;  	man.EditManId = admin;  	man.IsDelete = false;  	if (!string.IsNullOrEmpty (height)) {  		man.height = Convert.ToInt32 (height);  	}  	if (!string.IsNullOrEmpty (weight)) {  		man.weight = Convert.ToInt32 (weight);  	}  	if (!string.IsNullOrEmpty (BWH)) {  		man.BWH = BWH;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		man.Speciality = speciality;  	}  	//上传图片  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		string file = PicName (personalPhoto.FileName);  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		man.Photo = file;  	}  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		man.StudentCardPhoto = file;  	}  	man.CreateTime = DateTime.Now;  	man.IsDraft = false;  	db.Managers.Add (man);  	db.SaveChanges ();  	ViewBag.flag = 1;  }  else {  	//提交草稿箱的内容。  	Managers sman = db.Managers.Find (kman.Id);  	sman.UserId = username;  	sman.Password = password;  	sman.City = Convert.ToInt32 (city);  	sman.Authority = Convert.ToInt32 (role);  	sman.Name = name;  	sman.Sex = Convert.ToBoolean (gender);  	sman.Telephone = Mobile;  	if (!string.IsNullOrEmpty (boss)) {  		sman.Boss = boss;  	}  	sman.Email = email;  	sman.IDcard = idCard;  	sman.BankCard = bankaccount;  	sman.Bank = Convert.ToInt32 (bank);  	sman.School = school;  	sman.Major = major;  	sman.Graduate = Convert.ToDateTime (graduatedate);  	sman.Academic = academic;  	sman.CreateTime = DateTime.Now;  	sman.CreatedManId = admin;  	sman.EditManId = admin;  	if (!string.IsNullOrEmpty (height)) {  		sman.height = Convert.ToInt32 (height);  	}  	if (!string.IsNullOrEmpty (weight)) {  		sman.weight = Convert.ToInt32 (weight);  	}  	if (!string.IsNullOrEmpty (BWH)) {  		sman.BWH = BWH;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		man.Speciality = speciality;  	}  	//上传图片  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		string file = PicName (personalPhoto.FileName);  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		sman.Photo = file;  	}  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		sman.StudentCardPhoto = file;  	}  	sman.IsDraft = false;  	db.Entry (sman).State = EntityState.Modified;  	db.SaveChanges ();  	ViewBag.flag = 1;  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (kman == null) {  	//保存至数据库  	man.Id = Guid.NewGuid ();  	man.UserId = username;  	man.Password = password;  	man.City = Convert.ToInt32 (city);  	man.Authority = Convert.ToInt32 (role);  	man.Name = name;  	man.Sex = Convert.ToBoolean (gender);  	man.Telephone = Mobile;  	man.IDcard = idCard;  	if (!string.IsNullOrEmpty (boss)) {  		man.Boss = boss;  	}  	man.Email = email;  	man.BankCard = bankaccount;  	man.Bank = Convert.ToInt32 (bank);  	man.School = school;  	man.Major = major;  	man.Graduate = Convert.ToDateTime (graduatedate);  	man.Academic = academic;  	man.CreateTime = DateTime.Now;  	man.CreatedManId = admin;  	man.EditManId = admin;  	man.IsDelete = false;  	if (!string.IsNullOrEmpty (height)) {  		man.height = Convert.ToInt32 (height);  	}  	if (!string.IsNullOrEmpty (weight)) {  		man.weight = Convert.ToInt32 (weight);  	}  	if (!string.IsNullOrEmpty (BWH)) {  		man.BWH = BWH;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		man.Speciality = speciality;  	}  	//上传图片  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		string file = PicName (personalPhoto.FileName);  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		man.Photo = file;  	}  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		man.StudentCardPhoto = file;  	}  	man.CreateTime = DateTime.Now;  	man.IsDraft = false;  	db.Managers.Add (man);  	db.SaveChanges ();  	ViewBag.flag = 1;  }  else {  	//提交草稿箱的内容。  	Managers sman = db.Managers.Find (kman.Id);  	sman.UserId = username;  	sman.Password = password;  	sman.City = Convert.ToInt32 (city);  	sman.Authority = Convert.ToInt32 (role);  	sman.Name = name;  	sman.Sex = Convert.ToBoolean (gender);  	sman.Telephone = Mobile;  	if (!string.IsNullOrEmpty (boss)) {  		sman.Boss = boss;  	}  	sman.Email = email;  	sman.IDcard = idCard;  	sman.BankCard = bankaccount;  	sman.Bank = Convert.ToInt32 (bank);  	sman.School = school;  	sman.Major = major;  	sman.Graduate = Convert.ToDateTime (graduatedate);  	sman.Academic = academic;  	sman.CreateTime = DateTime.Now;  	sman.CreatedManId = admin;  	sman.EditManId = admin;  	if (!string.IsNullOrEmpty (height)) {  		sman.height = Convert.ToInt32 (height);  	}  	if (!string.IsNullOrEmpty (weight)) {  		sman.weight = Convert.ToInt32 (weight);  	}  	if (!string.IsNullOrEmpty (BWH)) {  		sman.BWH = BWH;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		man.Speciality = speciality;  	}  	//上传图片  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		string file = PicName (personalPhoto.FileName);  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		sman.Photo = file;  	}  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		sman.StudentCardPhoto = file;  	}  	sman.IsDraft = false;  	db.Entry (sman).State = EntityState.Modified;  	db.SaveChanges ();  	ViewBag.flag = 1;  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (kman == null) {  	//保存至数据库  	man.Id = Guid.NewGuid ();  	man.UserId = username;  	man.Password = password;  	man.City = Convert.ToInt32 (city);  	man.Authority = Convert.ToInt32 (role);  	man.Name = name;  	man.Sex = Convert.ToBoolean (gender);  	man.Telephone = Mobile;  	man.IDcard = idCard;  	if (!string.IsNullOrEmpty (boss)) {  		man.Boss = boss;  	}  	man.Email = email;  	man.BankCard = bankaccount;  	man.Bank = Convert.ToInt32 (bank);  	man.School = school;  	man.Major = major;  	man.Graduate = Convert.ToDateTime (graduatedate);  	man.Academic = academic;  	man.CreateTime = DateTime.Now;  	man.CreatedManId = admin;  	man.EditManId = admin;  	man.IsDelete = false;  	if (!string.IsNullOrEmpty (height)) {  		man.height = Convert.ToInt32 (height);  	}  	if (!string.IsNullOrEmpty (weight)) {  		man.weight = Convert.ToInt32 (weight);  	}  	if (!string.IsNullOrEmpty (BWH)) {  		man.BWH = BWH;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		man.Speciality = speciality;  	}  	//上传图片  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		string file = PicName (personalPhoto.FileName);  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		man.Photo = file;  	}  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		man.StudentCardPhoto = file;  	}  	man.CreateTime = DateTime.Now;  	man.IsDraft = false;  	db.Managers.Add (man);  	db.SaveChanges ();  	ViewBag.flag = 1;  }  else {  	//提交草稿箱的内容。  	Managers sman = db.Managers.Find (kman.Id);  	sman.UserId = username;  	sman.Password = password;  	sman.City = Convert.ToInt32 (city);  	sman.Authority = Convert.ToInt32 (role);  	sman.Name = name;  	sman.Sex = Convert.ToBoolean (gender);  	sman.Telephone = Mobile;  	if (!string.IsNullOrEmpty (boss)) {  		sman.Boss = boss;  	}  	sman.Email = email;  	sman.IDcard = idCard;  	sman.BankCard = bankaccount;  	sman.Bank = Convert.ToInt32 (bank);  	sman.School = school;  	sman.Major = major;  	sman.Graduate = Convert.ToDateTime (graduatedate);  	sman.Academic = academic;  	sman.CreateTime = DateTime.Now;  	sman.CreatedManId = admin;  	sman.EditManId = admin;  	if (!string.IsNullOrEmpty (height)) {  		sman.height = Convert.ToInt32 (height);  	}  	if (!string.IsNullOrEmpty (weight)) {  		sman.weight = Convert.ToInt32 (weight);  	}  	if (!string.IsNullOrEmpty (BWH)) {  		sman.BWH = BWH;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		man.Speciality = speciality;  	}  	//上传图片  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		string file = PicName (personalPhoto.FileName);  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		sman.Photo = file;  	}  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		sman.StudentCardPhoto = file;  	}  	sman.IsDraft = false;  	db.Entry (sman).State = EntityState.Modified;  	db.SaveChanges ();  	ViewBag.flag = 1;  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  	string file = PicName (personalPhoto.FileName);  	personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  	file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  	man.Photo = file;  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  	string file = PicName (personalPhoto.FileName);  	personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  	file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  	man.Photo = file;  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  	string file = studentPicName (studentPhoto.FileName);  	//检查格式防止重名  	studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  	file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  	man.StudentCardPhoto = file;  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  	string file = studentPicName (studentPhoto.FileName);  	//检查格式防止重名  	studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  	file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  	man.StudentCardPhoto = file;  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  	string file = PicName (personalPhoto.FileName);  	personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  	file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  	sman.Photo = file;  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  	string file = PicName (personalPhoto.FileName);  	personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  	file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  	sman.Photo = file;  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  	string file = studentPicName (studentPhoto.FileName);  	//检查格式防止重名  	studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  	file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  	sman.StudentCardPhoto = file;  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  	string file = studentPicName (studentPhoto.FileName);  	//检查格式防止重名  	studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  	file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  	sman.StudentCardPhoto = file;  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,AddManInfo,The following statement contains a magic number: file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,saveDraft,The following statement contains a magic number: if (!string.IsNullOrEmpty (password) && password.Length < 6) {  	success = false;  	//密码不能少于6位  	errormessage += "密码不能少于6位！<br>";  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,saveDraft,The following statement contains a magic number: if (!string.IsNullOrEmpty (Mobile) && Mobile.Length != 11) {  	success = false;  	errormessage += "密码不能少于6位！<br>";  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,saveDraft,The following statement contains a magic number: if (!string.IsNullOrEmpty (idCard) && idCard.Length != 18) {  	success = false;  	//身份证号必须是18位  	errormessage += "身份证号必须是18位！<br>";  }  else if (!validateIdentityBack (idCard)) {  	success = false;  	errormessage += "此身份证已存在！<br>";  	//此身份证已存在。  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,getDraft,The following statement contains a magic number: if (manager != null) {  	#region 获取城镇和类型  	if (manager.City != null) {  		List<Office> officeList1 = (from office1 in db.Office.ToList ()  		where office1.Id == manager.City1.OfficeId  		select office1).ToList ();  		foreach (var item in officeList1) {  			cityList = cityList.Where (cityFilter => cityFilter.OfficeId == item.Id).ToList ();  			foreach (var a in cityList) {  				if (manager.City == a.Id) {  					city += "<option selected=\"selected\" value=\"" + a.Id + "\">" + a.Name + "</option>";  				}  				else {  					city += "<option value=\"" + a.Id + "\">" + a.Name + "</option>";  				}  			}  			break;  		}  	}  	foreach (var item in roleList) {  		if (manager.Authority == item.Id) {  			role += "<option selected=\"selected\" value=\"" + item.Id + "\">" + item.Name + "</option>";  		}  		else {  			role += "<option value=\"" + item.Id + "\">" + item.Name + "</option>";  		}  	}  	foreach (var item in officeList) {  		if (manager.City1.Office.Id == item.Id) {  			office += "<option selected=\"selected\" value=\"" + item.Id + "\">" + item.Name + "</option>";  		}  		else {  			office += "<option value=\"" + item.Id + "\">" + item.Name + "</option>";  		}  	}  	string date = "";  	if (manager.Graduate != null) {  		date = DateTime.Parse (manager.Graduate.ToString ()).ToString ("yyyy年MM月");  	}  	#endregion  	var bossList = db.Managers.Where (a => a.Authority != 0 && a.Authority != 2).ToList ();  	foreach (var item in bossList) {  		if (item.UserId == manager.Boss) {  			boss += "<option selected=\"selected\" value=\"" + manager.Boss + "\">" + manager.Boss + "</option>";  			//如果有预先选择草稿箱  		}  		else {  			boss += "<option  value=\"" + item.UserId + "\">" + item.UserId + "</option>";  		}  	}  	var data = new {  		userid = manager.UserId'  		password = manager.Password'  		officeValue = office'  		roleValue = role'  		cityValue = city'  		name = manager.Name'  		sex = manager.Sex'  		telephone = manager.Telephone'  		IDcard = manager.IDcard'  		boss = boss'  		email = manager.Email'  		bankaccount = manager.BankCard'  		bank = manager.Bank'  		school = manager.School'  		major = manager.Major'  		graduate = date'  		academic = manager.Academic'  		height = manager.height'  		weight = manager.weight'  		BWH = manager.BWH'  		speciality = manager.Speciality'  		personal = manager.Photo'  		student = manager.StudentCardPhoto  	};  	return Json (data);  }  else {  	var data = new {  		Value = false  	};  	return Json (data);  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (password))//密码不能为空   {  	ModelState.AddModelError ("captainInfo.password"' "请输入密码");  }  else if (password.Length < 6) {  	ModelState.AddModelError ("captainInfo.password"' "密码不能少于6位");  	//密码不能少于6位  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (password.Length < 6) {  	ModelState.AddModelError ("captainInfo.password"' "密码不能少于6位");  	//密码不能少于6位  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (Mobile))//电话不能为空   {  	ModelState.AddModelError ("captainInfo.mobile"' "请输入电话");  }  else if (Mobile.Length != 11) {  	ModelState.AddModelError ("captainInfo.mobile"' "电话必须是11位");  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (Mobile.Length != 11) {  	ModelState.AddModelError ("captainInfo.mobile"' "电话必须是11位");  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (idCard))//身份证号不能为空   {  	ModelState.AddModelError ("captainInfo.identitys"' "请输入身份证号");  }  else if (idCard.Length != 18) {  	ModelState.AddModelError ("captainInfo.identitys"' "身份证号必须是18位");  	//身份证号必须是18位  }  else if (!validateIdentityBack (idCard)) {  	ModelState.AddModelError ("captainInfo.identitys"' "身份证号已存在");  	//身份证已存在  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (idCard.Length != 18) {  	ModelState.AddModelError ("captainInfo.identitys"' "身份证号必须是18位");  	//身份证号必须是18位  }  else if (!validateIdentityBack (idCard)) {  	ModelState.AddModelError ("captainInfo.identitys"' "身份证号已存在");  	//身份证已存在  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	mans.UserId = username;  	mans.Password = password;  	mans.City = Convert.ToInt32 (city);  	mans.Authority = Convert.ToInt32 (role);  	mans.Name = name;  	mans.Sex = Convert.ToBoolean (gender);  	mans.Telephone = Mobile;  	mans.Boss = boss;  	mans.Email = email;  	mans.IDcard = idCard;  	mans.BankCard = bankaccount;  	mans.Bank = Convert.ToInt32 (bank);  	mans.School = school;  	mans.Major = major;  	mans.Graduate = DateTime.Now;  	mans.Academic = academic;  	mans.EditManId = admin_string;  	mans.CreateTime = mans.CreateTime;  	if (!string.IsNullOrEmpty (height)) {  		mans.height = Convert.ToInt32 (height);  	}  	else {  		mans.height = null;  	}  	if (!string.IsNullOrEmpty (weight)) {  		mans.weight = Convert.ToInt32 (weight);  	}  	else {  		mans.weight = null;  	}  	if (!string.IsNullOrEmpty (BWH)) {  		mans.BWH = BWH;  	}  	else {  		mans.BWH = null;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		mans.Speciality = speciality;  	}  	if (personalPhoto != null) {  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			if (string.IsNullOrEmpty (mans.Photo)) {  				string file = PicName (personalPhoto.FileName);  				//检查格式防止重名  				personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  				file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  				mans.Photo = file;  			}  			else {  				string file = mans.Photo;  				personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  				file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			}  		}  	}  	if (studentPhoto != null) {  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  				string file = studentPicName (studentPhoto.FileName);  				//检查格式防止重名  				studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  				file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  				mans.StudentCardPhoto = file;  			}  			else {  				string file = mans.StudentCardPhoto;  				studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  				file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			}  		}  	}  	if (mans.Sex == true) {  		ViewBag.sex = "男";  	}  	else {  		ViewBag.sex = "女";  	}  	db.Entry (mans).State = EntityState.Modified;  	db.SaveChanges ();  	ViewBag.flag = 1;  	List<Bank> bankList = db.Bank.ToList ();  	ViewBag.Bank = bankList;  	return View (mans);  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	mans.UserId = username;  	mans.Password = password;  	mans.City = Convert.ToInt32 (city);  	mans.Authority = Convert.ToInt32 (role);  	mans.Name = name;  	mans.Sex = Convert.ToBoolean (gender);  	mans.Telephone = Mobile;  	mans.Boss = boss;  	mans.Email = email;  	mans.IDcard = idCard;  	mans.BankCard = bankaccount;  	mans.Bank = Convert.ToInt32 (bank);  	mans.School = school;  	mans.Major = major;  	mans.Graduate = DateTime.Now;  	mans.Academic = academic;  	mans.EditManId = admin_string;  	mans.CreateTime = mans.CreateTime;  	if (!string.IsNullOrEmpty (height)) {  		mans.height = Convert.ToInt32 (height);  	}  	else {  		mans.height = null;  	}  	if (!string.IsNullOrEmpty (weight)) {  		mans.weight = Convert.ToInt32 (weight);  	}  	else {  		mans.weight = null;  	}  	if (!string.IsNullOrEmpty (BWH)) {  		mans.BWH = BWH;  	}  	else {  		mans.BWH = null;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		mans.Speciality = speciality;  	}  	if (personalPhoto != null) {  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			if (string.IsNullOrEmpty (mans.Photo)) {  				string file = PicName (personalPhoto.FileName);  				//检查格式防止重名  				personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  				file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  				mans.Photo = file;  			}  			else {  				string file = mans.Photo;  				personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  				file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			}  		}  	}  	if (studentPhoto != null) {  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  				string file = studentPicName (studentPhoto.FileName);  				//检查格式防止重名  				studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  				file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  				mans.StudentCardPhoto = file;  			}  			else {  				string file = mans.StudentCardPhoto;  				studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  				file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			}  		}  	}  	if (mans.Sex == true) {  		ViewBag.sex = "男";  	}  	else {  		ViewBag.sex = "女";  	}  	db.Entry (mans).State = EntityState.Modified;  	db.SaveChanges ();  	ViewBag.flag = 1;  	List<Bank> bankList = db.Bank.ToList ();  	ViewBag.Bank = bankList;  	return View (mans);  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	mans.UserId = username;  	mans.Password = password;  	mans.City = Convert.ToInt32 (city);  	mans.Authority = Convert.ToInt32 (role);  	mans.Name = name;  	mans.Sex = Convert.ToBoolean (gender);  	mans.Telephone = Mobile;  	mans.Boss = boss;  	mans.Email = email;  	mans.IDcard = idCard;  	mans.BankCard = bankaccount;  	mans.Bank = Convert.ToInt32 (bank);  	mans.School = school;  	mans.Major = major;  	mans.Graduate = DateTime.Now;  	mans.Academic = academic;  	mans.EditManId = admin_string;  	mans.CreateTime = mans.CreateTime;  	if (!string.IsNullOrEmpty (height)) {  		mans.height = Convert.ToInt32 (height);  	}  	else {  		mans.height = null;  	}  	if (!string.IsNullOrEmpty (weight)) {  		mans.weight = Convert.ToInt32 (weight);  	}  	else {  		mans.weight = null;  	}  	if (!string.IsNullOrEmpty (BWH)) {  		mans.BWH = BWH;  	}  	else {  		mans.BWH = null;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		mans.Speciality = speciality;  	}  	if (personalPhoto != null) {  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			if (string.IsNullOrEmpty (mans.Photo)) {  				string file = PicName (personalPhoto.FileName);  				//检查格式防止重名  				personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  				file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  				mans.Photo = file;  			}  			else {  				string file = mans.Photo;  				personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  				file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			}  		}  	}  	if (studentPhoto != null) {  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  				string file = studentPicName (studentPhoto.FileName);  				//检查格式防止重名  				studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  				file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  				mans.StudentCardPhoto = file;  			}  			else {  				string file = mans.StudentCardPhoto;  				studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  				file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			}  		}  	}  	if (mans.Sex == true) {  		ViewBag.sex = "男";  	}  	else {  		ViewBag.sex = "女";  	}  	db.Entry (mans).State = EntityState.Modified;  	db.SaveChanges ();  	ViewBag.flag = 1;  	List<Bank> bankList = db.Bank.ToList ();  	ViewBag.Bank = bankList;  	return View (mans);  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	mans.UserId = username;  	mans.Password = password;  	mans.City = Convert.ToInt32 (city);  	mans.Authority = Convert.ToInt32 (role);  	mans.Name = name;  	mans.Sex = Convert.ToBoolean (gender);  	mans.Telephone = Mobile;  	mans.Boss = boss;  	mans.Email = email;  	mans.IDcard = idCard;  	mans.BankCard = bankaccount;  	mans.Bank = Convert.ToInt32 (bank);  	mans.School = school;  	mans.Major = major;  	mans.Graduate = DateTime.Now;  	mans.Academic = academic;  	mans.EditManId = admin_string;  	mans.CreateTime = mans.CreateTime;  	if (!string.IsNullOrEmpty (height)) {  		mans.height = Convert.ToInt32 (height);  	}  	else {  		mans.height = null;  	}  	if (!string.IsNullOrEmpty (weight)) {  		mans.weight = Convert.ToInt32 (weight);  	}  	else {  		mans.weight = null;  	}  	if (!string.IsNullOrEmpty (BWH)) {  		mans.BWH = BWH;  	}  	else {  		mans.BWH = null;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		mans.Speciality = speciality;  	}  	if (personalPhoto != null) {  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			if (string.IsNullOrEmpty (mans.Photo)) {  				string file = PicName (personalPhoto.FileName);  				//检查格式防止重名  				personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  				file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  				mans.Photo = file;  			}  			else {  				string file = mans.Photo;  				personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  				file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			}  		}  	}  	if (studentPhoto != null) {  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  				string file = studentPicName (studentPhoto.FileName);  				//检查格式防止重名  				studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  				file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  				mans.StudentCardPhoto = file;  			}  			else {  				string file = mans.StudentCardPhoto;  				studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  				file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			}  		}  	}  	if (mans.Sex == true) {  		ViewBag.sex = "男";  	}  	else {  		ViewBag.sex = "女";  	}  	db.Entry (mans).State = EntityState.Modified;  	db.SaveChanges ();  	ViewBag.flag = 1;  	List<Bank> bankList = db.Bank.ToList ();  	ViewBag.Bank = bankList;  	return View (mans);  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	mans.UserId = username;  	mans.Password = password;  	mans.City = Convert.ToInt32 (city);  	mans.Authority = Convert.ToInt32 (role);  	mans.Name = name;  	mans.Sex = Convert.ToBoolean (gender);  	mans.Telephone = Mobile;  	mans.Boss = boss;  	mans.Email = email;  	mans.IDcard = idCard;  	mans.BankCard = bankaccount;  	mans.Bank = Convert.ToInt32 (bank);  	mans.School = school;  	mans.Major = major;  	mans.Graduate = DateTime.Now;  	mans.Academic = academic;  	mans.EditManId = admin_string;  	mans.CreateTime = mans.CreateTime;  	if (!string.IsNullOrEmpty (height)) {  		mans.height = Convert.ToInt32 (height);  	}  	else {  		mans.height = null;  	}  	if (!string.IsNullOrEmpty (weight)) {  		mans.weight = Convert.ToInt32 (weight);  	}  	else {  		mans.weight = null;  	}  	if (!string.IsNullOrEmpty (BWH)) {  		mans.BWH = BWH;  	}  	else {  		mans.BWH = null;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		mans.Speciality = speciality;  	}  	if (personalPhoto != null) {  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			if (string.IsNullOrEmpty (mans.Photo)) {  				string file = PicName (personalPhoto.FileName);  				//检查格式防止重名  				personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  				file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  				mans.Photo = file;  			}  			else {  				string file = mans.Photo;  				personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  				file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			}  		}  	}  	if (studentPhoto != null) {  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  				string file = studentPicName (studentPhoto.FileName);  				//检查格式防止重名  				studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  				file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  				mans.StudentCardPhoto = file;  			}  			else {  				string file = mans.StudentCardPhoto;  				studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  				file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			}  		}  	}  	if (mans.Sex == true) {  		ViewBag.sex = "男";  	}  	else {  		ViewBag.sex = "女";  	}  	db.Entry (mans).State = EntityState.Modified;  	db.SaveChanges ();  	ViewBag.flag = 1;  	List<Bank> bankList = db.Bank.ToList ();  	ViewBag.Bank = bankList;  	return View (mans);  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	mans.UserId = username;  	mans.Password = password;  	mans.City = Convert.ToInt32 (city);  	mans.Authority = Convert.ToInt32 (role);  	mans.Name = name;  	mans.Sex = Convert.ToBoolean (gender);  	mans.Telephone = Mobile;  	mans.Boss = boss;  	mans.Email = email;  	mans.IDcard = idCard;  	mans.BankCard = bankaccount;  	mans.Bank = Convert.ToInt32 (bank);  	mans.School = school;  	mans.Major = major;  	mans.Graduate = DateTime.Now;  	mans.Academic = academic;  	mans.EditManId = admin_string;  	mans.CreateTime = mans.CreateTime;  	if (!string.IsNullOrEmpty (height)) {  		mans.height = Convert.ToInt32 (height);  	}  	else {  		mans.height = null;  	}  	if (!string.IsNullOrEmpty (weight)) {  		mans.weight = Convert.ToInt32 (weight);  	}  	else {  		mans.weight = null;  	}  	if (!string.IsNullOrEmpty (BWH)) {  		mans.BWH = BWH;  	}  	else {  		mans.BWH = null;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		mans.Speciality = speciality;  	}  	if (personalPhoto != null) {  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			if (string.IsNullOrEmpty (mans.Photo)) {  				string file = PicName (personalPhoto.FileName);  				//检查格式防止重名  				personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  				file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  				mans.Photo = file;  			}  			else {  				string file = mans.Photo;  				personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  				file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			}  		}  	}  	if (studentPhoto != null) {  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  				string file = studentPicName (studentPhoto.FileName);  				//检查格式防止重名  				studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  				file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  				mans.StudentCardPhoto = file;  			}  			else {  				string file = mans.StudentCardPhoto;  				studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  				file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			}  		}  	}  	if (mans.Sex == true) {  		ViewBag.sex = "男";  	}  	else {  		ViewBag.sex = "女";  	}  	db.Entry (mans).State = EntityState.Modified;  	db.SaveChanges ();  	ViewBag.flag = 1;  	List<Bank> bankList = db.Bank.ToList ();  	ViewBag.Bank = bankList;  	return View (mans);  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	mans.UserId = username;  	mans.Password = password;  	mans.City = Convert.ToInt32 (city);  	mans.Authority = Convert.ToInt32 (role);  	mans.Name = name;  	mans.Sex = Convert.ToBoolean (gender);  	mans.Telephone = Mobile;  	mans.Boss = boss;  	mans.Email = email;  	mans.IDcard = idCard;  	mans.BankCard = bankaccount;  	mans.Bank = Convert.ToInt32 (bank);  	mans.School = school;  	mans.Major = major;  	mans.Graduate = DateTime.Now;  	mans.Academic = academic;  	mans.EditManId = admin_string;  	mans.CreateTime = mans.CreateTime;  	if (!string.IsNullOrEmpty (height)) {  		mans.height = Convert.ToInt32 (height);  	}  	else {  		mans.height = null;  	}  	if (!string.IsNullOrEmpty (weight)) {  		mans.weight = Convert.ToInt32 (weight);  	}  	else {  		mans.weight = null;  	}  	if (!string.IsNullOrEmpty (BWH)) {  		mans.BWH = BWH;  	}  	else {  		mans.BWH = null;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		mans.Speciality = speciality;  	}  	if (personalPhoto != null) {  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			if (string.IsNullOrEmpty (mans.Photo)) {  				string file = PicName (personalPhoto.FileName);  				//检查格式防止重名  				personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  				file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  				mans.Photo = file;  			}  			else {  				string file = mans.Photo;  				personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  				file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			}  		}  	}  	if (studentPhoto != null) {  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  				string file = studentPicName (studentPhoto.FileName);  				//检查格式防止重名  				studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  				file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  				mans.StudentCardPhoto = file;  			}  			else {  				string file = mans.StudentCardPhoto;  				studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  				file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			}  		}  	}  	if (mans.Sex == true) {  		ViewBag.sex = "男";  	}  	else {  		ViewBag.sex = "女";  	}  	db.Entry (mans).State = EntityState.Modified;  	db.SaveChanges ();  	ViewBag.flag = 1;  	List<Bank> bankList = db.Bank.ToList ();  	ViewBag.Bank = bankList;  	return View (mans);  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	mans.UserId = username;  	mans.Password = password;  	mans.City = Convert.ToInt32 (city);  	mans.Authority = Convert.ToInt32 (role);  	mans.Name = name;  	mans.Sex = Convert.ToBoolean (gender);  	mans.Telephone = Mobile;  	mans.Boss = boss;  	mans.Email = email;  	mans.IDcard = idCard;  	mans.BankCard = bankaccount;  	mans.Bank = Convert.ToInt32 (bank);  	mans.School = school;  	mans.Major = major;  	mans.Graduate = DateTime.Now;  	mans.Academic = academic;  	mans.EditManId = admin_string;  	mans.CreateTime = mans.CreateTime;  	if (!string.IsNullOrEmpty (height)) {  		mans.height = Convert.ToInt32 (height);  	}  	else {  		mans.height = null;  	}  	if (!string.IsNullOrEmpty (weight)) {  		mans.weight = Convert.ToInt32 (weight);  	}  	else {  		mans.weight = null;  	}  	if (!string.IsNullOrEmpty (BWH)) {  		mans.BWH = BWH;  	}  	else {  		mans.BWH = null;  	}  	if (!string.IsNullOrEmpty (speciality)) {  		mans.Speciality = speciality;  	}  	if (personalPhoto != null) {  		if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  			if (string.IsNullOrEmpty (mans.Photo)) {  				string file = PicName (personalPhoto.FileName);  				//检查格式防止重名  				personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  				file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  				mans.Photo = file;  			}  			else {  				string file = mans.Photo;  				personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  				file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			}  		}  	}  	if (studentPhoto != null) {  		if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  			if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  				string file = studentPicName (studentPhoto.FileName);  				//检查格式防止重名  				studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  				file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  				mans.StudentCardPhoto = file;  			}  			else {  				string file = mans.StudentCardPhoto;  				studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  				file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			}  		}  	}  	if (mans.Sex == true) {  		ViewBag.sex = "男";  	}  	else {  		ViewBag.sex = "女";  	}  	db.Entry (mans).State = EntityState.Modified;  	db.SaveChanges ();  	ViewBag.flag = 1;  	List<Bank> bankList = db.Bank.ToList ();  	ViewBag.Bank = bankList;  	return View (mans);  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (personalPhoto != null) {  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		if (string.IsNullOrEmpty (mans.Photo)) {  			string file = PicName (personalPhoto.FileName);  			//检查格式防止重名  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			mans.Photo = file;  		}  		else {  			string file = mans.Photo;  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		}  	}  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (personalPhoto != null) {  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		if (string.IsNullOrEmpty (mans.Photo)) {  			string file = PicName (personalPhoto.FileName);  			//检查格式防止重名  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			mans.Photo = file;  		}  		else {  			string file = mans.Photo;  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		}  	}  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (personalPhoto != null) {  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		if (string.IsNullOrEmpty (mans.Photo)) {  			string file = PicName (personalPhoto.FileName);  			//检查格式防止重名  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			mans.Photo = file;  		}  		else {  			string file = mans.Photo;  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		}  	}  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (personalPhoto != null) {  	if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  		if (string.IsNullOrEmpty (mans.Photo)) {  			string file = PicName (personalPhoto.FileName);  			//检查格式防止重名  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  			mans.Photo = file;  		}  		else {  			string file = mans.Photo;  			personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  			file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		}  	}  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  	if (string.IsNullOrEmpty (mans.Photo)) {  		string file = PicName (personalPhoto.FileName);  		//检查格式防止重名  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		mans.Photo = file;  	}  	else {  		string file = mans.Photo;  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  	}  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  	if (string.IsNullOrEmpty (mans.Photo)) {  		string file = PicName (personalPhoto.FileName);  		//检查格式防止重名  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		mans.Photo = file;  	}  	else {  		string file = mans.Photo;  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  	}  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  	if (string.IsNullOrEmpty (mans.Photo)) {  		string file = PicName (personalPhoto.FileName);  		//检查格式防止重名  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		mans.Photo = file;  	}  	else {  		string file = mans.Photo;  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  	}  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (personalPhoto.FileName)) {  	if (string.IsNullOrEmpty (mans.Photo)) {  		string file = PicName (personalPhoto.FileName);  		//检查格式防止重名  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  		mans.Photo = file;  	}  	else {  		string file = mans.Photo;  		personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  		file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  	}  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (mans.Photo)) {  	string file = PicName (personalPhoto.FileName);  	//检查格式防止重名  	personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  	file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  	mans.Photo = file;  }  else {  	string file = mans.Photo;  	personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  	file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (mans.Photo)) {  	string file = PicName (personalPhoto.FileName);  	//检查格式防止重名  	personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  	file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  	mans.Photo = file;  }  else {  	string file = mans.Photo;  	personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  	file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (mans.Photo)) {  	string file = PicName (personalPhoto.FileName);  	//检查格式防止重名  	personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  	file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  	mans.Photo = file;  }  else {  	string file = mans.Photo;  	personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  	file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (mans.Photo)) {  	string file = PicName (personalPhoto.FileName);  	//检查格式防止重名  	personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + file);  	file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  	mans.Photo = file;  }  else {  	string file = mans.Photo;  	personalPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/personalImg/yuan/") + mans.Photo);  	file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: file = TouXiangSuoFang (personalPhoto' file' Server.MapPath ("~/uploadImg/managerImg/personalImg/suo/")' 114' 125);  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (studentPhoto != null) {  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			mans.StudentCardPhoto = file;  		}  		else {  			string file = mans.StudentCardPhoto;  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		}  	}  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (studentPhoto != null) {  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			mans.StudentCardPhoto = file;  		}  		else {  			string file = mans.StudentCardPhoto;  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		}  	}  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (studentPhoto != null) {  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			mans.StudentCardPhoto = file;  		}  		else {  			string file = mans.StudentCardPhoto;  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		}  	}  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (studentPhoto != null) {  	if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  		if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  			string file = studentPicName (studentPhoto.FileName);  			//检查格式防止重名  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  			mans.StudentCardPhoto = file;  		}  		else {  			string file = mans.StudentCardPhoto;  			studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  			file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		}  	}  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  	if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		mans.StudentCardPhoto = file;  	}  	else {  		string file = mans.StudentCardPhoto;  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  	}  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  	if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		mans.StudentCardPhoto = file;  	}  	else {  		string file = mans.StudentCardPhoto;  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  	}  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  	if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		mans.StudentCardPhoto = file;  	}  	else {  		string file = mans.StudentCardPhoto;  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  	}  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (studentPhoto.FileName)) {  	if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  		string file = studentPicName (studentPhoto.FileName);  		//检查格式防止重名  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  		mans.StudentCardPhoto = file;  	}  	else {  		string file = mans.StudentCardPhoto;  		studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  		file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  	}  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  	string file = studentPicName (studentPhoto.FileName);  	//检查格式防止重名  	studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  	file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  	mans.StudentCardPhoto = file;  }  else {  	string file = mans.StudentCardPhoto;  	studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  	file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  	string file = studentPicName (studentPhoto.FileName);  	//检查格式防止重名  	studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  	file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  	mans.StudentCardPhoto = file;  }  else {  	string file = mans.StudentCardPhoto;  	studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  	file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  	string file = studentPicName (studentPhoto.FileName);  	//检查格式防止重名  	studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  	file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  	mans.StudentCardPhoto = file;  }  else {  	string file = mans.StudentCardPhoto;  	studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  	file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (mans.StudentCardPhoto)) {  	string file = studentPicName (studentPhoto.FileName);  	//检查格式防止重名  	studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/yuan/") + file);  	file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  	mans.StudentCardPhoto = file;  }  else {  	string file = mans.StudentCardPhoto;  	studentPhoto.SaveAs (Server.MapPath ("~/uploadImg/managerImg/studentImg/") + mans.StudentCardPhoto);  	file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  }  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  
Magic Number,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,EditManInfo,The following statement contains a magic number: file = TouXiangSuoFang (studentPhoto' file' Server.MapPath ("~/uploadImg/managerImg/studentImg/suo/")' 114' 125);  
Magic Number,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,managerAuditedWorkInfo,The following statement contains a magic number: try {  	IList<getAuditedInfo> auditedList = new List<getAuditedInfo> ();  	//从数据库张获取表  	List<HumanBasicFile> hbList = db.HumanBasicFile.ToList ();  	List<AttendingInfo> adInfoList = db.AttendingInfo.ToList ();  	//获取非草稿箱状态  	hbList = hbList.Where (a => a.IsDraft == false).ToList ();  	adInfoList = adInfoList.Where (a => a.IsDraft == false).ToList ();  	//当前页  	int page = Convert.ToInt32 (Request.Params ["page"]);  	if (page <= 0) {  		page = 1;  	}  	//防止小于1页  	//每页显示的记录数  	int pagesize = Convert.ToInt32 (Request.Params ["pagesize"]);  	string auditedDate = Request.Params ["content"];  	string year = auditedDate.Substring (0' 4);  	//获取年份数值  	string month = auditedDate.Substring (5' 2);  	//获取月份数值  	string day = auditedDate.Substring (8' 2);  	//获取日的数值  	//过滤条件  	adInfoList = adInfoList.Where (a => a.Date.Substring (0' 4) == year).ToList ();  	//获取相同的年  	adInfoList = adInfoList.Where (a => a.Date.Substring (5' 2) == month).ToList ();  	//获取相同月份  	var adhumidList = (from pp in adInfoList  	select pp.HumanId).Distinct ().ToList ();  	foreach (var item in adInfoList) {  		foreach (var hid in adhumidList) {  			if (hid != item.HumanId) {  				continue;  			}  			else {  				int workDays = adInfoList.Where (a => a.HumanId == hid).Count ();  				int money = 0;  				var salary = (from sa in adInfoList  				where sa.HumanId == hid  				select sa.StandardSalary).ToList ();  				foreach (var m in salary) {  					if (m != null) {  						money += (int)m;  						//m不为空时算工资  					}  				}  				var fee = (from sa in adInfoList  				where sa.HumanId == hid  				select sa.BearFees).ToList ();  				foreach (var m in fee) {  					if (m != null) {  						money += (int)m;  						//m不为空时算补助  					}  				}  				string beginDate = (from bgd in adInfoList  				where bgd.HumanId == hid  				select bgd.Date).First ().ToString ();  				string lastDate = (from bgd in adInfoList  				where bgd.HumanId == hid  				select bgd.Date).Last ().ToString ();  				var hb = hbList.Where (a => a.Id == hid);  				foreach (var id in hb) {  					auditedList.Add (new getAuditedInfo () {  						begindate = beginDate'  						enddate = lastDate'  						sumwork = workDays.ToString ()'  						city = id.City1.Name'  						identitys = id.IDcardNo'  						name = id.Name'  						uniquenum = id.uniNum'  						sumwage = money.ToString ()  					});  				}  			}  		}  	}  	var list = (from al in auditedList  	select new {  		al.uniquenum'  		al.name'  		al.city'  		al.sumwage'  		al.sumwork'  		al.identitys'  		al.begindate'  		al.enddate  	}).Distinct ().ToList ();  	//总页数  	int totalPage = list.Count () / pagesize;  	if (list.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	//给前台所需数据赋值  	var gridData = new {  		gdata = list'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + list.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  catch {  	return View ("Audited");  }  
Magic Number,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,managerAuditedWorkInfo,The following statement contains a magic number: try {  	IList<getAuditedInfo> auditedList = new List<getAuditedInfo> ();  	//从数据库张获取表  	List<HumanBasicFile> hbList = db.HumanBasicFile.ToList ();  	List<AttendingInfo> adInfoList = db.AttendingInfo.ToList ();  	//获取非草稿箱状态  	hbList = hbList.Where (a => a.IsDraft == false).ToList ();  	adInfoList = adInfoList.Where (a => a.IsDraft == false).ToList ();  	//当前页  	int page = Convert.ToInt32 (Request.Params ["page"]);  	if (page <= 0) {  		page = 1;  	}  	//防止小于1页  	//每页显示的记录数  	int pagesize = Convert.ToInt32 (Request.Params ["pagesize"]);  	string auditedDate = Request.Params ["content"];  	string year = auditedDate.Substring (0' 4);  	//获取年份数值  	string month = auditedDate.Substring (5' 2);  	//获取月份数值  	string day = auditedDate.Substring (8' 2);  	//获取日的数值  	//过滤条件  	adInfoList = adInfoList.Where (a => a.Date.Substring (0' 4) == year).ToList ();  	//获取相同的年  	adInfoList = adInfoList.Where (a => a.Date.Substring (5' 2) == month).ToList ();  	//获取相同月份  	var adhumidList = (from pp in adInfoList  	select pp.HumanId).Distinct ().ToList ();  	foreach (var item in adInfoList) {  		foreach (var hid in adhumidList) {  			if (hid != item.HumanId) {  				continue;  			}  			else {  				int workDays = adInfoList.Where (a => a.HumanId == hid).Count ();  				int money = 0;  				var salary = (from sa in adInfoList  				where sa.HumanId == hid  				select sa.StandardSalary).ToList ();  				foreach (var m in salary) {  					if (m != null) {  						money += (int)m;  						//m不为空时算工资  					}  				}  				var fee = (from sa in adInfoList  				where sa.HumanId == hid  				select sa.BearFees).ToList ();  				foreach (var m in fee) {  					if (m != null) {  						money += (int)m;  						//m不为空时算补助  					}  				}  				string beginDate = (from bgd in adInfoList  				where bgd.HumanId == hid  				select bgd.Date).First ().ToString ();  				string lastDate = (from bgd in adInfoList  				where bgd.HumanId == hid  				select bgd.Date).Last ().ToString ();  				var hb = hbList.Where (a => a.Id == hid);  				foreach (var id in hb) {  					auditedList.Add (new getAuditedInfo () {  						begindate = beginDate'  						enddate = lastDate'  						sumwork = workDays.ToString ()'  						city = id.City1.Name'  						identitys = id.IDcardNo'  						name = id.Name'  						uniquenum = id.uniNum'  						sumwage = money.ToString ()  					});  				}  			}  		}  	}  	var list = (from al in auditedList  	select new {  		al.uniquenum'  		al.name'  		al.city'  		al.sumwage'  		al.sumwork'  		al.identitys'  		al.begindate'  		al.enddate  	}).Distinct ().ToList ();  	//总页数  	int totalPage = list.Count () / pagesize;  	if (list.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	//给前台所需数据赋值  	var gridData = new {  		gdata = list'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + list.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  catch {  	return View ("Audited");  }  
Magic Number,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,managerAuditedWorkInfo,The following statement contains a magic number: try {  	IList<getAuditedInfo> auditedList = new List<getAuditedInfo> ();  	//从数据库张获取表  	List<HumanBasicFile> hbList = db.HumanBasicFile.ToList ();  	List<AttendingInfo> adInfoList = db.AttendingInfo.ToList ();  	//获取非草稿箱状态  	hbList = hbList.Where (a => a.IsDraft == false).ToList ();  	adInfoList = adInfoList.Where (a => a.IsDraft == false).ToList ();  	//当前页  	int page = Convert.ToInt32 (Request.Params ["page"]);  	if (page <= 0) {  		page = 1;  	}  	//防止小于1页  	//每页显示的记录数  	int pagesize = Convert.ToInt32 (Request.Params ["pagesize"]);  	string auditedDate = Request.Params ["content"];  	string year = auditedDate.Substring (0' 4);  	//获取年份数值  	string month = auditedDate.Substring (5' 2);  	//获取月份数值  	string day = auditedDate.Substring (8' 2);  	//获取日的数值  	//过滤条件  	adInfoList = adInfoList.Where (a => a.Date.Substring (0' 4) == year).ToList ();  	//获取相同的年  	adInfoList = adInfoList.Where (a => a.Date.Substring (5' 2) == month).ToList ();  	//获取相同月份  	var adhumidList = (from pp in adInfoList  	select pp.HumanId).Distinct ().ToList ();  	foreach (var item in adInfoList) {  		foreach (var hid in adhumidList) {  			if (hid != item.HumanId) {  				continue;  			}  			else {  				int workDays = adInfoList.Where (a => a.HumanId == hid).Count ();  				int money = 0;  				var salary = (from sa in adInfoList  				where sa.HumanId == hid  				select sa.StandardSalary).ToList ();  				foreach (var m in salary) {  					if (m != null) {  						money += (int)m;  						//m不为空时算工资  					}  				}  				var fee = (from sa in adInfoList  				where sa.HumanId == hid  				select sa.BearFees).ToList ();  				foreach (var m in fee) {  					if (m != null) {  						money += (int)m;  						//m不为空时算补助  					}  				}  				string beginDate = (from bgd in adInfoList  				where bgd.HumanId == hid  				select bgd.Date).First ().ToString ();  				string lastDate = (from bgd in adInfoList  				where bgd.HumanId == hid  				select bgd.Date).Last ().ToString ();  				var hb = hbList.Where (a => a.Id == hid);  				foreach (var id in hb) {  					auditedList.Add (new getAuditedInfo () {  						begindate = beginDate'  						enddate = lastDate'  						sumwork = workDays.ToString ()'  						city = id.City1.Name'  						identitys = id.IDcardNo'  						name = id.Name'  						uniquenum = id.uniNum'  						sumwage = money.ToString ()  					});  				}  			}  		}  	}  	var list = (from al in auditedList  	select new {  		al.uniquenum'  		al.name'  		al.city'  		al.sumwage'  		al.sumwork'  		al.identitys'  		al.begindate'  		al.enddate  	}).Distinct ().ToList ();  	//总页数  	int totalPage = list.Count () / pagesize;  	if (list.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	//给前台所需数据赋值  	var gridData = new {  		gdata = list'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + list.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  catch {  	return View ("Audited");  }  
Magic Number,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,managerAuditedWorkInfo,The following statement contains a magic number: try {  	IList<getAuditedInfo> auditedList = new List<getAuditedInfo> ();  	//从数据库张获取表  	List<HumanBasicFile> hbList = db.HumanBasicFile.ToList ();  	List<AttendingInfo> adInfoList = db.AttendingInfo.ToList ();  	//获取非草稿箱状态  	hbList = hbList.Where (a => a.IsDraft == false).ToList ();  	adInfoList = adInfoList.Where (a => a.IsDraft == false).ToList ();  	//当前页  	int page = Convert.ToInt32 (Request.Params ["page"]);  	if (page <= 0) {  		page = 1;  	}  	//防止小于1页  	//每页显示的记录数  	int pagesize = Convert.ToInt32 (Request.Params ["pagesize"]);  	string auditedDate = Request.Params ["content"];  	string year = auditedDate.Substring (0' 4);  	//获取年份数值  	string month = auditedDate.Substring (5' 2);  	//获取月份数值  	string day = auditedDate.Substring (8' 2);  	//获取日的数值  	//过滤条件  	adInfoList = adInfoList.Where (a => a.Date.Substring (0' 4) == year).ToList ();  	//获取相同的年  	adInfoList = adInfoList.Where (a => a.Date.Substring (5' 2) == month).ToList ();  	//获取相同月份  	var adhumidList = (from pp in adInfoList  	select pp.HumanId).Distinct ().ToList ();  	foreach (var item in adInfoList) {  		foreach (var hid in adhumidList) {  			if (hid != item.HumanId) {  				continue;  			}  			else {  				int workDays = adInfoList.Where (a => a.HumanId == hid).Count ();  				int money = 0;  				var salary = (from sa in adInfoList  				where sa.HumanId == hid  				select sa.StandardSalary).ToList ();  				foreach (var m in salary) {  					if (m != null) {  						money += (int)m;  						//m不为空时算工资  					}  				}  				var fee = (from sa in adInfoList  				where sa.HumanId == hid  				select sa.BearFees).ToList ();  				foreach (var m in fee) {  					if (m != null) {  						money += (int)m;  						//m不为空时算补助  					}  				}  				string beginDate = (from bgd in adInfoList  				where bgd.HumanId == hid  				select bgd.Date).First ().ToString ();  				string lastDate = (from bgd in adInfoList  				where bgd.HumanId == hid  				select bgd.Date).Last ().ToString ();  				var hb = hbList.Where (a => a.Id == hid);  				foreach (var id in hb) {  					auditedList.Add (new getAuditedInfo () {  						begindate = beginDate'  						enddate = lastDate'  						sumwork = workDays.ToString ()'  						city = id.City1.Name'  						identitys = id.IDcardNo'  						name = id.Name'  						uniquenum = id.uniNum'  						sumwage = money.ToString ()  					});  				}  			}  		}  	}  	var list = (from al in auditedList  	select new {  		al.uniquenum'  		al.name'  		al.city'  		al.sumwage'  		al.sumwork'  		al.identitys'  		al.begindate'  		al.enddate  	}).Distinct ().ToList ();  	//总页数  	int totalPage = list.Count () / pagesize;  	if (list.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	//给前台所需数据赋值  	var gridData = new {  		gdata = list'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + list.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  catch {  	return View ("Audited");  }  
Magic Number,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,managerAuditedWorkInfo,The following statement contains a magic number: try {  	IList<getAuditedInfo> auditedList = new List<getAuditedInfo> ();  	//从数据库张获取表  	List<HumanBasicFile> hbList = db.HumanBasicFile.ToList ();  	List<AttendingInfo> adInfoList = db.AttendingInfo.ToList ();  	//获取非草稿箱状态  	hbList = hbList.Where (a => a.IsDraft == false).ToList ();  	adInfoList = adInfoList.Where (a => a.IsDraft == false).ToList ();  	//当前页  	int page = Convert.ToInt32 (Request.Params ["page"]);  	if (page <= 0) {  		page = 1;  	}  	//防止小于1页  	//每页显示的记录数  	int pagesize = Convert.ToInt32 (Request.Params ["pagesize"]);  	string auditedDate = Request.Params ["content"];  	string year = auditedDate.Substring (0' 4);  	//获取年份数值  	string month = auditedDate.Substring (5' 2);  	//获取月份数值  	string day = auditedDate.Substring (8' 2);  	//获取日的数值  	//过滤条件  	adInfoList = adInfoList.Where (a => a.Date.Substring (0' 4) == year).ToList ();  	//获取相同的年  	adInfoList = adInfoList.Where (a => a.Date.Substring (5' 2) == month).ToList ();  	//获取相同月份  	var adhumidList = (from pp in adInfoList  	select pp.HumanId).Distinct ().ToList ();  	foreach (var item in adInfoList) {  		foreach (var hid in adhumidList) {  			if (hid != item.HumanId) {  				continue;  			}  			else {  				int workDays = adInfoList.Where (a => a.HumanId == hid).Count ();  				int money = 0;  				var salary = (from sa in adInfoList  				where sa.HumanId == hid  				select sa.StandardSalary).ToList ();  				foreach (var m in salary) {  					if (m != null) {  						money += (int)m;  						//m不为空时算工资  					}  				}  				var fee = (from sa in adInfoList  				where sa.HumanId == hid  				select sa.BearFees).ToList ();  				foreach (var m in fee) {  					if (m != null) {  						money += (int)m;  						//m不为空时算补助  					}  				}  				string beginDate = (from bgd in adInfoList  				where bgd.HumanId == hid  				select bgd.Date).First ().ToString ();  				string lastDate = (from bgd in adInfoList  				where bgd.HumanId == hid  				select bgd.Date).Last ().ToString ();  				var hb = hbList.Where (a => a.Id == hid);  				foreach (var id in hb) {  					auditedList.Add (new getAuditedInfo () {  						begindate = beginDate'  						enddate = lastDate'  						sumwork = workDays.ToString ()'  						city = id.City1.Name'  						identitys = id.IDcardNo'  						name = id.Name'  						uniquenum = id.uniNum'  						sumwage = money.ToString ()  					});  				}  			}  		}  	}  	var list = (from al in auditedList  	select new {  		al.uniquenum'  		al.name'  		al.city'  		al.sumwage'  		al.sumwork'  		al.identitys'  		al.begindate'  		al.enddate  	}).Distinct ().ToList ();  	//总页数  	int totalPage = list.Count () / pagesize;  	if (list.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	//给前台所需数据赋值  	var gridData = new {  		gdata = list'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + list.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  catch {  	return View ("Audited");  }  
Magic Number,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,managerAuditedWorkInfo,The following statement contains a magic number: try {  	IList<getAuditedInfo> auditedList = new List<getAuditedInfo> ();  	//从数据库张获取表  	List<HumanBasicFile> hbList = db.HumanBasicFile.ToList ();  	List<AttendingInfo> adInfoList = db.AttendingInfo.ToList ();  	//获取非草稿箱状态  	hbList = hbList.Where (a => a.IsDraft == false).ToList ();  	adInfoList = adInfoList.Where (a => a.IsDraft == false).ToList ();  	//当前页  	int page = Convert.ToInt32 (Request.Params ["page"]);  	if (page <= 0) {  		page = 1;  	}  	//防止小于1页  	//每页显示的记录数  	int pagesize = Convert.ToInt32 (Request.Params ["pagesize"]);  	string auditedDate = Request.Params ["content"];  	string year = auditedDate.Substring (0' 4);  	//获取年份数值  	string month = auditedDate.Substring (5' 2);  	//获取月份数值  	string day = auditedDate.Substring (8' 2);  	//获取日的数值  	//过滤条件  	adInfoList = adInfoList.Where (a => a.Date.Substring (0' 4) == year).ToList ();  	//获取相同的年  	adInfoList = adInfoList.Where (a => a.Date.Substring (5' 2) == month).ToList ();  	//获取相同月份  	var adhumidList = (from pp in adInfoList  	select pp.HumanId).Distinct ().ToList ();  	foreach (var item in adInfoList) {  		foreach (var hid in adhumidList) {  			if (hid != item.HumanId) {  				continue;  			}  			else {  				int workDays = adInfoList.Where (a => a.HumanId == hid).Count ();  				int money = 0;  				var salary = (from sa in adInfoList  				where sa.HumanId == hid  				select sa.StandardSalary).ToList ();  				foreach (var m in salary) {  					if (m != null) {  						money += (int)m;  						//m不为空时算工资  					}  				}  				var fee = (from sa in adInfoList  				where sa.HumanId == hid  				select sa.BearFees).ToList ();  				foreach (var m in fee) {  					if (m != null) {  						money += (int)m;  						//m不为空时算补助  					}  				}  				string beginDate = (from bgd in adInfoList  				where bgd.HumanId == hid  				select bgd.Date).First ().ToString ();  				string lastDate = (from bgd in adInfoList  				where bgd.HumanId == hid  				select bgd.Date).Last ().ToString ();  				var hb = hbList.Where (a => a.Id == hid);  				foreach (var id in hb) {  					auditedList.Add (new getAuditedInfo () {  						begindate = beginDate'  						enddate = lastDate'  						sumwork = workDays.ToString ()'  						city = id.City1.Name'  						identitys = id.IDcardNo'  						name = id.Name'  						uniquenum = id.uniNum'  						sumwage = money.ToString ()  					});  				}  			}  		}  	}  	var list = (from al in auditedList  	select new {  		al.uniquenum'  		al.name'  		al.city'  		al.sumwage'  		al.sumwork'  		al.identitys'  		al.begindate'  		al.enddate  	}).Distinct ().ToList ();  	//总页数  	int totalPage = list.Count () / pagesize;  	if (list.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	//给前台所需数据赋值  	var gridData = new {  		gdata = list'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + list.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  catch {  	return View ("Audited");  }  
Magic Number,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,managerAuditedWorkInfo,The following statement contains a magic number: try {  	IList<getAuditedInfo> auditedList = new List<getAuditedInfo> ();  	//从数据库张获取表  	List<HumanBasicFile> hbList = db.HumanBasicFile.ToList ();  	List<AttendingInfo> adInfoList = db.AttendingInfo.ToList ();  	//获取非草稿箱状态  	hbList = hbList.Where (a => a.IsDraft == false).ToList ();  	adInfoList = adInfoList.Where (a => a.IsDraft == false).ToList ();  	//当前页  	int page = Convert.ToInt32 (Request.Params ["page"]);  	if (page <= 0) {  		page = 1;  	}  	//防止小于1页  	//每页显示的记录数  	int pagesize = Convert.ToInt32 (Request.Params ["pagesize"]);  	string auditedDate = Request.Params ["content"];  	string year = auditedDate.Substring (0' 4);  	//获取年份数值  	string month = auditedDate.Substring (5' 2);  	//获取月份数值  	string day = auditedDate.Substring (8' 2);  	//获取日的数值  	//过滤条件  	adInfoList = adInfoList.Where (a => a.Date.Substring (0' 4) == year).ToList ();  	//获取相同的年  	adInfoList = adInfoList.Where (a => a.Date.Substring (5' 2) == month).ToList ();  	//获取相同月份  	var adhumidList = (from pp in adInfoList  	select pp.HumanId).Distinct ().ToList ();  	foreach (var item in adInfoList) {  		foreach (var hid in adhumidList) {  			if (hid != item.HumanId) {  				continue;  			}  			else {  				int workDays = adInfoList.Where (a => a.HumanId == hid).Count ();  				int money = 0;  				var salary = (from sa in adInfoList  				where sa.HumanId == hid  				select sa.StandardSalary).ToList ();  				foreach (var m in salary) {  					if (m != null) {  						money += (int)m;  						//m不为空时算工资  					}  				}  				var fee = (from sa in adInfoList  				where sa.HumanId == hid  				select sa.BearFees).ToList ();  				foreach (var m in fee) {  					if (m != null) {  						money += (int)m;  						//m不为空时算补助  					}  				}  				string beginDate = (from bgd in adInfoList  				where bgd.HumanId == hid  				select bgd.Date).First ().ToString ();  				string lastDate = (from bgd in adInfoList  				where bgd.HumanId == hid  				select bgd.Date).Last ().ToString ();  				var hb = hbList.Where (a => a.Id == hid);  				foreach (var id in hb) {  					auditedList.Add (new getAuditedInfo () {  						begindate = beginDate'  						enddate = lastDate'  						sumwork = workDays.ToString ()'  						city = id.City1.Name'  						identitys = id.IDcardNo'  						name = id.Name'  						uniquenum = id.uniNum'  						sumwage = money.ToString ()  					});  				}  			}  		}  	}  	var list = (from al in auditedList  	select new {  		al.uniquenum'  		al.name'  		al.city'  		al.sumwage'  		al.sumwork'  		al.identitys'  		al.begindate'  		al.enddate  	}).Distinct ().ToList ();  	//总页数  	int totalPage = list.Count () / pagesize;  	if (list.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	//给前台所需数据赋值  	var gridData = new {  		gdata = list'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + list.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  catch {  	return View ("Audited");  }  
Magic Number,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,managerAuditedWorkInfo,The following statement contains a magic number: try {  	IList<getAuditedInfo> auditedList = new List<getAuditedInfo> ();  	//从数据库张获取表  	List<HumanBasicFile> hbList = db.HumanBasicFile.ToList ();  	List<AttendingInfo> adInfoList = db.AttendingInfo.ToList ();  	//获取非草稿箱状态  	hbList = hbList.Where (a => a.IsDraft == false).ToList ();  	adInfoList = adInfoList.Where (a => a.IsDraft == false).ToList ();  	//当前页  	int page = Convert.ToInt32 (Request.Params ["page"]);  	if (page <= 0) {  		page = 1;  	}  	//防止小于1页  	//每页显示的记录数  	int pagesize = Convert.ToInt32 (Request.Params ["pagesize"]);  	string auditedDate = Request.Params ["content"];  	string year = auditedDate.Substring (0' 4);  	//获取年份数值  	string month = auditedDate.Substring (5' 2);  	//获取月份数值  	string day = auditedDate.Substring (8' 2);  	//获取日的数值  	//过滤条件  	adInfoList = adInfoList.Where (a => a.Date.Substring (0' 4) == year).ToList ();  	//获取相同的年  	adInfoList = adInfoList.Where (a => a.Date.Substring (5' 2) == month).ToList ();  	//获取相同月份  	var adhumidList = (from pp in adInfoList  	select pp.HumanId).Distinct ().ToList ();  	foreach (var item in adInfoList) {  		foreach (var hid in adhumidList) {  			if (hid != item.HumanId) {  				continue;  			}  			else {  				int workDays = adInfoList.Where (a => a.HumanId == hid).Count ();  				int money = 0;  				var salary = (from sa in adInfoList  				where sa.HumanId == hid  				select sa.StandardSalary).ToList ();  				foreach (var m in salary) {  					if (m != null) {  						money += (int)m;  						//m不为空时算工资  					}  				}  				var fee = (from sa in adInfoList  				where sa.HumanId == hid  				select sa.BearFees).ToList ();  				foreach (var m in fee) {  					if (m != null) {  						money += (int)m;  						//m不为空时算补助  					}  				}  				string beginDate = (from bgd in adInfoList  				where bgd.HumanId == hid  				select bgd.Date).First ().ToString ();  				string lastDate = (from bgd in adInfoList  				where bgd.HumanId == hid  				select bgd.Date).Last ().ToString ();  				var hb = hbList.Where (a => a.Id == hid);  				foreach (var id in hb) {  					auditedList.Add (new getAuditedInfo () {  						begindate = beginDate'  						enddate = lastDate'  						sumwork = workDays.ToString ()'  						city = id.City1.Name'  						identitys = id.IDcardNo'  						name = id.Name'  						uniquenum = id.uniNum'  						sumwage = money.ToString ()  					});  				}  			}  		}  	}  	var list = (from al in auditedList  	select new {  		al.uniquenum'  		al.name'  		al.city'  		al.sumwage'  		al.sumwork'  		al.identitys'  		al.begindate'  		al.enddate  	}).Distinct ().ToList ();  	//总页数  	int totalPage = list.Count () / pagesize;  	if (list.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	//给前台所需数据赋值  	var gridData = new {  		gdata = list'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + list.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  catch {  	return View ("Audited");  }  
Magic Number,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,managerAuditedWorkInfo,The following statement contains a magic number: adInfoList = adInfoList.Where (a => a.Date.Substring (0' 4) == year).ToList ();  
Magic Number,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,managerAuditedWorkInfo,The following statement contains a magic number: adInfoList = adInfoList.Where (a => a.Date.Substring (5' 2) == month).ToList ();  
Magic Number,Management.Controllers,AuditController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AuditController.cs,managerAuditedWorkInfo,The following statement contains a magic number: adInfoList = adInfoList.Where (a => a.Date.Substring (5' 2) == month).ToList ();  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStatic,The following statement contains a magic number: for (int ifile = 0; ifile < files.Count; ifile++) {  	if (!string.IsNullOrEmpty (files [ifile].FileName)) {  		HttpPostedFileBase mailfile = new HttpPostedFileWrapper (files [ifile]);  		string file = MailPicName (files [ifile].FileName);  		mailfile.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  		Suo.TouXiangSuoFang (mailfile' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  		mailpicture += file + "?";  	}  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStatic,The following statement contains a magic number: for (int ifile = 0; ifile < files.Count; ifile++) {  	if (!string.IsNullOrEmpty (files [ifile].FileName)) {  		HttpPostedFileBase mailfile = new HttpPostedFileWrapper (files [ifile]);  		string file = MailPicName (files [ifile].FileName);  		mailfile.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  		Suo.TouXiangSuoFang (mailfile' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  		mailpicture += file + "?";  	}  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStatic,The following statement contains a magic number: if (!string.IsNullOrEmpty (files [ifile].FileName)) {  	HttpPostedFileBase mailfile = new HttpPostedFileWrapper (files [ifile]);  	string file = MailPicName (files [ifile].FileName);  	mailfile.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  	Suo.TouXiangSuoFang (mailfile' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  	mailpicture += file + "?";  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStatic,The following statement contains a magic number: if (!string.IsNullOrEmpty (files [ifile].FileName)) {  	HttpPostedFileBase mailfile = new HttpPostedFileWrapper (files [ifile]);  	string file = MailPicName (files [ifile].FileName);  	mailfile.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  	Suo.TouXiangSuoFang (mailfile' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  	mailpicture += file + "?";  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStatic,The following statement contains a magic number: Suo.TouXiangSuoFang (mailfile' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStatic,The following statement contains a magic number: Suo.TouXiangSuoFang (mailfile' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticPre,The following statement contains a magic number: for (int ifile = 0; ifile < files.Count; ifile++) {  	if (!string.IsNullOrEmpty (files [ifile].FileName)) {  		HttpPostedFileBase mailfile = new HttpPostedFileWrapper (files [ifile]);  		string file = MailPicName (files [ifile].FileName);  		mailfile.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  		Suo.TouXiangSuoFang (mailfile' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  		if (ifile > strs.Length - 1) {  			mailpic += file + "?";  		}  		else {  			strs [ifile] = file;  		}  	}  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticPre,The following statement contains a magic number: for (int ifile = 0; ifile < files.Count; ifile++) {  	if (!string.IsNullOrEmpty (files [ifile].FileName)) {  		HttpPostedFileBase mailfile = new HttpPostedFileWrapper (files [ifile]);  		string file = MailPicName (files [ifile].FileName);  		mailfile.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  		Suo.TouXiangSuoFang (mailfile' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  		if (ifile > strs.Length - 1) {  			mailpic += file + "?";  		}  		else {  			strs [ifile] = file;  		}  	}  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticPre,The following statement contains a magic number: if (!string.IsNullOrEmpty (files [ifile].FileName)) {  	HttpPostedFileBase mailfile = new HttpPostedFileWrapper (files [ifile]);  	string file = MailPicName (files [ifile].FileName);  	mailfile.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  	Suo.TouXiangSuoFang (mailfile' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  	if (ifile > strs.Length - 1) {  		mailpic += file + "?";  	}  	else {  		strs [ifile] = file;  	}  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticPre,The following statement contains a magic number: if (!string.IsNullOrEmpty (files [ifile].FileName)) {  	HttpPostedFileBase mailfile = new HttpPostedFileWrapper (files [ifile]);  	string file = MailPicName (files [ifile].FileName);  	mailfile.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  	Suo.TouXiangSuoFang (mailfile' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  	if (ifile > strs.Length - 1) {  		mailpic += file + "?";  	}  	else {  		strs [ifile] = file;  	}  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticPre,The following statement contains a magic number: Suo.TouXiangSuoFang (mailfile' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticPre,The following statement contains a magic number: Suo.TouXiangSuoFang (mailfile' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticCao,The following statement contains a magic number: if (wc == null) {  	WorkContent wct = new WorkContent ();  	wct.Title = title;  	wct.CreatedTime = DateTime.Now;  	wct.CreatorId = ms.Id;  	wct.AttendCount = totalwork;  	wct.TrainCount = totaltrain;  	wct.MoneyCount = totalwage;  	wct.Todaywork = todayWork;  	wct.Tomorrowplan = tomorrowWork;  	wct.IsDraft = "1";  	//上传图片  	if (mail != null) {  		if (!string.IsNullOrEmpty (mail.FileName)) {  			string file = MailPicName (mail.FileName);  			mail.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  			Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  			wct.MailPicture = file;  		}  	}  	ss.WorkContent.Add (wct);  }  else {  	wc.Title = title;  	//上传图片  	if (mail != null) {  		if (!string.IsNullOrEmpty (mail.FileName)) {  			string file = MailPicName (mail.FileName);  			mail.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  			wc.MailPicture = file;  			Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  		}  	}  	wc.AttendCount = totalwork;  	wc.TrainCount = totaltrain;  	wc.MoneyCount = totalwage;  	wc.IsDraft = "1";  	wc.Todaywork = todayWork;  	wc.Tomorrowplan = tomorrowWork;  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticCao,The following statement contains a magic number: if (wc == null) {  	WorkContent wct = new WorkContent ();  	wct.Title = title;  	wct.CreatedTime = DateTime.Now;  	wct.CreatorId = ms.Id;  	wct.AttendCount = totalwork;  	wct.TrainCount = totaltrain;  	wct.MoneyCount = totalwage;  	wct.Todaywork = todayWork;  	wct.Tomorrowplan = tomorrowWork;  	wct.IsDraft = "1";  	//上传图片  	if (mail != null) {  		if (!string.IsNullOrEmpty (mail.FileName)) {  			string file = MailPicName (mail.FileName);  			mail.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  			Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  			wct.MailPicture = file;  		}  	}  	ss.WorkContent.Add (wct);  }  else {  	wc.Title = title;  	//上传图片  	if (mail != null) {  		if (!string.IsNullOrEmpty (mail.FileName)) {  			string file = MailPicName (mail.FileName);  			mail.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  			wc.MailPicture = file;  			Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  		}  	}  	wc.AttendCount = totalwork;  	wc.TrainCount = totaltrain;  	wc.MoneyCount = totalwage;  	wc.IsDraft = "1";  	wc.Todaywork = todayWork;  	wc.Tomorrowplan = tomorrowWork;  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticCao,The following statement contains a magic number: if (wc == null) {  	WorkContent wct = new WorkContent ();  	wct.Title = title;  	wct.CreatedTime = DateTime.Now;  	wct.CreatorId = ms.Id;  	wct.AttendCount = totalwork;  	wct.TrainCount = totaltrain;  	wct.MoneyCount = totalwage;  	wct.Todaywork = todayWork;  	wct.Tomorrowplan = tomorrowWork;  	wct.IsDraft = "1";  	//上传图片  	if (mail != null) {  		if (!string.IsNullOrEmpty (mail.FileName)) {  			string file = MailPicName (mail.FileName);  			mail.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  			Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  			wct.MailPicture = file;  		}  	}  	ss.WorkContent.Add (wct);  }  else {  	wc.Title = title;  	//上传图片  	if (mail != null) {  		if (!string.IsNullOrEmpty (mail.FileName)) {  			string file = MailPicName (mail.FileName);  			mail.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  			wc.MailPicture = file;  			Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  		}  	}  	wc.AttendCount = totalwork;  	wc.TrainCount = totaltrain;  	wc.MoneyCount = totalwage;  	wc.IsDraft = "1";  	wc.Todaywork = todayWork;  	wc.Tomorrowplan = tomorrowWork;  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticCao,The following statement contains a magic number: if (wc == null) {  	WorkContent wct = new WorkContent ();  	wct.Title = title;  	wct.CreatedTime = DateTime.Now;  	wct.CreatorId = ms.Id;  	wct.AttendCount = totalwork;  	wct.TrainCount = totaltrain;  	wct.MoneyCount = totalwage;  	wct.Todaywork = todayWork;  	wct.Tomorrowplan = tomorrowWork;  	wct.IsDraft = "1";  	//上传图片  	if (mail != null) {  		if (!string.IsNullOrEmpty (mail.FileName)) {  			string file = MailPicName (mail.FileName);  			mail.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  			Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  			wct.MailPicture = file;  		}  	}  	ss.WorkContent.Add (wct);  }  else {  	wc.Title = title;  	//上传图片  	if (mail != null) {  		if (!string.IsNullOrEmpty (mail.FileName)) {  			string file = MailPicName (mail.FileName);  			mail.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  			wc.MailPicture = file;  			Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  		}  	}  	wc.AttendCount = totalwork;  	wc.TrainCount = totaltrain;  	wc.MoneyCount = totalwage;  	wc.IsDraft = "1";  	wc.Todaywork = todayWork;  	wc.Tomorrowplan = tomorrowWork;  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticCao,The following statement contains a magic number: if (mail != null) {  	if (!string.IsNullOrEmpty (mail.FileName)) {  		string file = MailPicName (mail.FileName);  		mail.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  		Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  		wct.MailPicture = file;  	}  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticCao,The following statement contains a magic number: if (mail != null) {  	if (!string.IsNullOrEmpty (mail.FileName)) {  		string file = MailPicName (mail.FileName);  		mail.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  		Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  		wct.MailPicture = file;  	}  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticCao,The following statement contains a magic number: if (!string.IsNullOrEmpty (mail.FileName)) {  	string file = MailPicName (mail.FileName);  	mail.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  	Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  	wct.MailPicture = file;  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticCao,The following statement contains a magic number: if (!string.IsNullOrEmpty (mail.FileName)) {  	string file = MailPicName (mail.FileName);  	mail.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  	Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  	wct.MailPicture = file;  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticCao,The following statement contains a magic number: Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticCao,The following statement contains a magic number: Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticCao,The following statement contains a magic number: if (mail != null) {  	if (!string.IsNullOrEmpty (mail.FileName)) {  		string file = MailPicName (mail.FileName);  		mail.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  		wc.MailPicture = file;  		Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  	}  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticCao,The following statement contains a magic number: if (mail != null) {  	if (!string.IsNullOrEmpty (mail.FileName)) {  		string file = MailPicName (mail.FileName);  		mail.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  		wc.MailPicture = file;  		Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  	}  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticCao,The following statement contains a magic number: if (!string.IsNullOrEmpty (mail.FileName)) {  	string file = MailPicName (mail.FileName);  	mail.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  	wc.MailPicture = file;  	Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticCao,The following statement contains a magic number: if (!string.IsNullOrEmpty (mail.FileName)) {  	string file = MailPicName (mail.FileName);  	mail.SaveAs (Server.MapPath ("~/uploadImg/MailImg/") + file);  	wc.MailPicture = file;  	Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  }  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticCao,The following statement contains a magic number: Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  
Magic Number,Management.Controllers,BasicInfoController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\BasicInfoController.cs,BasicStaticCao,The following statement contains a magic number: Suo.TouXiangSuoFang (mail' file' Server.MapPath ("~/uploadImg/MailImg/suo/")' 120' 60);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (string.IsNullOrEmpty (identity)) {  	ModelState.AddModelError ("staffInfo.identity"' "身份证号不能为空");  }  else if (identity.Length != 18) {  	ModelState.AddModelError ("staffInfo.identity"' "请输入18位的身份证号！");  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (identity.Length != 18) {  	ModelState.AddModelError ("staffInfo.identity"' "请输入18位的身份证号！");  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (ModelState.IsValid) {  	#region 非管理员录入  	if (authority != "管理员") {  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where s.IsDraft == true && s.Managers.UserId == admin  		select s).Distinct ().FirstOrDefault ();  		if (hum == null) {  			hum = new HumanBasicFile ();  			hum.Id = Guid.NewGuid ();  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				int cityid = Convert.ToInt32 (city);  				var city1 = (from s in dal.City  				where s.Id == cityid  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = Convert.ToInt32 (account);  				//开户行  				hum.NativePlace = birth;  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.Academic = education;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = ptho;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.createTime = DateTime.Now;  				if (mm.Authority != 2) {  					hum.CreatedManagerID = Session ["admin"].ToString ();  				}  				else {  					hum.CreatedManagerID = mm.Boss;  				}  				hum.IsDelete = false;  				dal.HumanBasicFile.Add (hum);  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		#region 非草稿  		else {  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				var city1 = (from s in dal.City  				where s.Name == city  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.createTime = DateTime.Now;  				//创建时间  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = mm.Bank1.Id;  				//开户行  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.NativePlace = birth;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				hum.Academic = education;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.IsDelete = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.CreatedManagerID = Session ["admin"].ToString ();  				dal.Entry (hum).State = EntityState.Modified;  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		if (hum != null) {  			ViewBag.cof = 1;  		}  	}  	List<Managers> list = (from s in dal.Managers  	select s).ToList ();  	return View (list);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (ModelState.IsValid) {  	#region 非管理员录入  	if (authority != "管理员") {  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where s.IsDraft == true && s.Managers.UserId == admin  		select s).Distinct ().FirstOrDefault ();  		if (hum == null) {  			hum = new HumanBasicFile ();  			hum.Id = Guid.NewGuid ();  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				int cityid = Convert.ToInt32 (city);  				var city1 = (from s in dal.City  				where s.Id == cityid  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = Convert.ToInt32 (account);  				//开户行  				hum.NativePlace = birth;  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.Academic = education;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = ptho;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.createTime = DateTime.Now;  				if (mm.Authority != 2) {  					hum.CreatedManagerID = Session ["admin"].ToString ();  				}  				else {  					hum.CreatedManagerID = mm.Boss;  				}  				hum.IsDelete = false;  				dal.HumanBasicFile.Add (hum);  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		#region 非草稿  		else {  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				var city1 = (from s in dal.City  				where s.Name == city  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.createTime = DateTime.Now;  				//创建时间  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = mm.Bank1.Id;  				//开户行  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.NativePlace = birth;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				hum.Academic = education;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.IsDelete = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.CreatedManagerID = Session ["admin"].ToString ();  				dal.Entry (hum).State = EntityState.Modified;  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		if (hum != null) {  			ViewBag.cof = 1;  		}  	}  	List<Managers> list = (from s in dal.Managers  	select s).ToList ();  	return View (list);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (ModelState.IsValid) {  	#region 非管理员录入  	if (authority != "管理员") {  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where s.IsDraft == true && s.Managers.UserId == admin  		select s).Distinct ().FirstOrDefault ();  		if (hum == null) {  			hum = new HumanBasicFile ();  			hum.Id = Guid.NewGuid ();  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				int cityid = Convert.ToInt32 (city);  				var city1 = (from s in dal.City  				where s.Id == cityid  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = Convert.ToInt32 (account);  				//开户行  				hum.NativePlace = birth;  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.Academic = education;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = ptho;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.createTime = DateTime.Now;  				if (mm.Authority != 2) {  					hum.CreatedManagerID = Session ["admin"].ToString ();  				}  				else {  					hum.CreatedManagerID = mm.Boss;  				}  				hum.IsDelete = false;  				dal.HumanBasicFile.Add (hum);  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		#region 非草稿  		else {  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				var city1 = (from s in dal.City  				where s.Name == city  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.createTime = DateTime.Now;  				//创建时间  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = mm.Bank1.Id;  				//开户行  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.NativePlace = birth;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				hum.Academic = education;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.IsDelete = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.CreatedManagerID = Session ["admin"].ToString ();  				dal.Entry (hum).State = EntityState.Modified;  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		if (hum != null) {  			ViewBag.cof = 1;  		}  	}  	List<Managers> list = (from s in dal.Managers  	select s).ToList ();  	return View (list);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (ModelState.IsValid) {  	#region 非管理员录入  	if (authority != "管理员") {  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where s.IsDraft == true && s.Managers.UserId == admin  		select s).Distinct ().FirstOrDefault ();  		if (hum == null) {  			hum = new HumanBasicFile ();  			hum.Id = Guid.NewGuid ();  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				int cityid = Convert.ToInt32 (city);  				var city1 = (from s in dal.City  				where s.Id == cityid  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = Convert.ToInt32 (account);  				//开户行  				hum.NativePlace = birth;  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.Academic = education;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = ptho;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.createTime = DateTime.Now;  				if (mm.Authority != 2) {  					hum.CreatedManagerID = Session ["admin"].ToString ();  				}  				else {  					hum.CreatedManagerID = mm.Boss;  				}  				hum.IsDelete = false;  				dal.HumanBasicFile.Add (hum);  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		#region 非草稿  		else {  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				var city1 = (from s in dal.City  				where s.Name == city  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.createTime = DateTime.Now;  				//创建时间  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = mm.Bank1.Id;  				//开户行  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.NativePlace = birth;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				hum.Academic = education;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.IsDelete = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.CreatedManagerID = Session ["admin"].ToString ();  				dal.Entry (hum).State = EntityState.Modified;  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		if (hum != null) {  			ViewBag.cof = 1;  		}  	}  	List<Managers> list = (from s in dal.Managers  	select s).ToList ();  	return View (list);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (ModelState.IsValid) {  	#region 非管理员录入  	if (authority != "管理员") {  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where s.IsDraft == true && s.Managers.UserId == admin  		select s).Distinct ().FirstOrDefault ();  		if (hum == null) {  			hum = new HumanBasicFile ();  			hum.Id = Guid.NewGuid ();  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				int cityid = Convert.ToInt32 (city);  				var city1 = (from s in dal.City  				where s.Id == cityid  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = Convert.ToInt32 (account);  				//开户行  				hum.NativePlace = birth;  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.Academic = education;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = ptho;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.createTime = DateTime.Now;  				if (mm.Authority != 2) {  					hum.CreatedManagerID = Session ["admin"].ToString ();  				}  				else {  					hum.CreatedManagerID = mm.Boss;  				}  				hum.IsDelete = false;  				dal.HumanBasicFile.Add (hum);  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		#region 非草稿  		else {  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				var city1 = (from s in dal.City  				where s.Name == city  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.createTime = DateTime.Now;  				//创建时间  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = mm.Bank1.Id;  				//开户行  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.NativePlace = birth;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				hum.Academic = education;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.IsDelete = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.CreatedManagerID = Session ["admin"].ToString ();  				dal.Entry (hum).State = EntityState.Modified;  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		if (hum != null) {  			ViewBag.cof = 1;  		}  	}  	List<Managers> list = (from s in dal.Managers  	select s).ToList ();  	return View (list);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (ModelState.IsValid) {  	#region 非管理员录入  	if (authority != "管理员") {  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where s.IsDraft == true && s.Managers.UserId == admin  		select s).Distinct ().FirstOrDefault ();  		if (hum == null) {  			hum = new HumanBasicFile ();  			hum.Id = Guid.NewGuid ();  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				int cityid = Convert.ToInt32 (city);  				var city1 = (from s in dal.City  				where s.Id == cityid  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = Convert.ToInt32 (account);  				//开户行  				hum.NativePlace = birth;  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.Academic = education;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = ptho;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.createTime = DateTime.Now;  				if (mm.Authority != 2) {  					hum.CreatedManagerID = Session ["admin"].ToString ();  				}  				else {  					hum.CreatedManagerID = mm.Boss;  				}  				hum.IsDelete = false;  				dal.HumanBasicFile.Add (hum);  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		#region 非草稿  		else {  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				var city1 = (from s in dal.City  				where s.Name == city  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.createTime = DateTime.Now;  				//创建时间  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = mm.Bank1.Id;  				//开户行  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.NativePlace = birth;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				hum.Academic = education;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.IsDelete = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.CreatedManagerID = Session ["admin"].ToString ();  				dal.Entry (hum).State = EntityState.Modified;  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		if (hum != null) {  			ViewBag.cof = 1;  		}  	}  	List<Managers> list = (from s in dal.Managers  	select s).ToList ();  	return View (list);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (ModelState.IsValid) {  	#region 非管理员录入  	if (authority != "管理员") {  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where s.IsDraft == true && s.Managers.UserId == admin  		select s).Distinct ().FirstOrDefault ();  		if (hum == null) {  			hum = new HumanBasicFile ();  			hum.Id = Guid.NewGuid ();  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				int cityid = Convert.ToInt32 (city);  				var city1 = (from s in dal.City  				where s.Id == cityid  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = Convert.ToInt32 (account);  				//开户行  				hum.NativePlace = birth;  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.Academic = education;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = ptho;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.createTime = DateTime.Now;  				if (mm.Authority != 2) {  					hum.CreatedManagerID = Session ["admin"].ToString ();  				}  				else {  					hum.CreatedManagerID = mm.Boss;  				}  				hum.IsDelete = false;  				dal.HumanBasicFile.Add (hum);  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		#region 非草稿  		else {  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				var city1 = (from s in dal.City  				where s.Name == city  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.createTime = DateTime.Now;  				//创建时间  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = mm.Bank1.Id;  				//开户行  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.NativePlace = birth;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				hum.Academic = education;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.IsDelete = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.CreatedManagerID = Session ["admin"].ToString ();  				dal.Entry (hum).State = EntityState.Modified;  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		if (hum != null) {  			ViewBag.cof = 1;  		}  	}  	List<Managers> list = (from s in dal.Managers  	select s).ToList ();  	return View (list);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (ModelState.IsValid) {  	#region 非管理员录入  	if (authority != "管理员") {  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where s.IsDraft == true && s.Managers.UserId == admin  		select s).Distinct ().FirstOrDefault ();  		if (hum == null) {  			hum = new HumanBasicFile ();  			hum.Id = Guid.NewGuid ();  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				int cityid = Convert.ToInt32 (city);  				var city1 = (from s in dal.City  				where s.Id == cityid  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = Convert.ToInt32 (account);  				//开户行  				hum.NativePlace = birth;  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.Academic = education;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = ptho;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.createTime = DateTime.Now;  				if (mm.Authority != 2) {  					hum.CreatedManagerID = Session ["admin"].ToString ();  				}  				else {  					hum.CreatedManagerID = mm.Boss;  				}  				hum.IsDelete = false;  				dal.HumanBasicFile.Add (hum);  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		#region 非草稿  		else {  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				var city1 = (from s in dal.City  				where s.Name == city  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.createTime = DateTime.Now;  				//创建时间  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = mm.Bank1.Id;  				//开户行  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.NativePlace = birth;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				hum.Academic = education;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.IsDelete = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.CreatedManagerID = Session ["admin"].ToString ();  				dal.Entry (hum).State = EntityState.Modified;  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		if (hum != null) {  			ViewBag.cof = 1;  		}  	}  	List<Managers> list = (from s in dal.Managers  	select s).ToList ();  	return View (list);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (ModelState.IsValid) {  	#region 非管理员录入  	if (authority != "管理员") {  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where s.IsDraft == true && s.Managers.UserId == admin  		select s).Distinct ().FirstOrDefault ();  		if (hum == null) {  			hum = new HumanBasicFile ();  			hum.Id = Guid.NewGuid ();  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				int cityid = Convert.ToInt32 (city);  				var city1 = (from s in dal.City  				where s.Id == cityid  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = Convert.ToInt32 (account);  				//开户行  				hum.NativePlace = birth;  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.Academic = education;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = ptho;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.createTime = DateTime.Now;  				if (mm.Authority != 2) {  					hum.CreatedManagerID = Session ["admin"].ToString ();  				}  				else {  					hum.CreatedManagerID = mm.Boss;  				}  				hum.IsDelete = false;  				dal.HumanBasicFile.Add (hum);  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		#region 非草稿  		else {  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				var city1 = (from s in dal.City  				where s.Name == city  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.createTime = DateTime.Now;  				//创建时间  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = mm.Bank1.Id;  				//开户行  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.NativePlace = birth;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				hum.Academic = education;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.IsDelete = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.CreatedManagerID = Session ["admin"].ToString ();  				dal.Entry (hum).State = EntityState.Modified;  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		if (hum != null) {  			ViewBag.cof = 1;  		}  	}  	List<Managers> list = (from s in dal.Managers  	select s).ToList ();  	return View (list);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (ModelState.IsValid) {  	#region 非管理员录入  	if (authority != "管理员") {  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where s.IsDraft == true && s.Managers.UserId == admin  		select s).Distinct ().FirstOrDefault ();  		if (hum == null) {  			hum = new HumanBasicFile ();  			hum.Id = Guid.NewGuid ();  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				int cityid = Convert.ToInt32 (city);  				var city1 = (from s in dal.City  				where s.Id == cityid  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = Convert.ToInt32 (account);  				//开户行  				hum.NativePlace = birth;  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.Academic = education;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = ptho;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.createTime = DateTime.Now;  				if (mm.Authority != 2) {  					hum.CreatedManagerID = Session ["admin"].ToString ();  				}  				else {  					hum.CreatedManagerID = mm.Boss;  				}  				hum.IsDelete = false;  				dal.HumanBasicFile.Add (hum);  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		#region 非草稿  		else {  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				var city1 = (from s in dal.City  				where s.Name == city  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.createTime = DateTime.Now;  				//创建时间  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = mm.Bank1.Id;  				//开户行  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.NativePlace = birth;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				hum.Academic = education;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.IsDelete = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.CreatedManagerID = Session ["admin"].ToString ();  				dal.Entry (hum).State = EntityState.Modified;  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		if (hum != null) {  			ViewBag.cof = 1;  		}  	}  	List<Managers> list = (from s in dal.Managers  	select s).ToList ();  	return View (list);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (ModelState.IsValid) {  	#region 非管理员录入  	if (authority != "管理员") {  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where s.IsDraft == true && s.Managers.UserId == admin  		select s).Distinct ().FirstOrDefault ();  		if (hum == null) {  			hum = new HumanBasicFile ();  			hum.Id = Guid.NewGuid ();  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				int cityid = Convert.ToInt32 (city);  				var city1 = (from s in dal.City  				where s.Id == cityid  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = Convert.ToInt32 (account);  				//开户行  				hum.NativePlace = birth;  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.Academic = education;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = ptho;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.createTime = DateTime.Now;  				if (mm.Authority != 2) {  					hum.CreatedManagerID = Session ["admin"].ToString ();  				}  				else {  					hum.CreatedManagerID = mm.Boss;  				}  				hum.IsDelete = false;  				dal.HumanBasicFile.Add (hum);  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		#region 非草稿  		else {  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				var city1 = (from s in dal.City  				where s.Name == city  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.createTime = DateTime.Now;  				//创建时间  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = mm.Bank1.Id;  				//开户行  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.NativePlace = birth;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				hum.Academic = education;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.IsDelete = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.CreatedManagerID = Session ["admin"].ToString ();  				dal.Entry (hum).State = EntityState.Modified;  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		if (hum != null) {  			ViewBag.cof = 1;  		}  	}  	List<Managers> list = (from s in dal.Managers  	select s).ToList ();  	return View (list);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (ModelState.IsValid) {  	#region 非管理员录入  	if (authority != "管理员") {  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where s.IsDraft == true && s.Managers.UserId == admin  		select s).Distinct ().FirstOrDefault ();  		if (hum == null) {  			hum = new HumanBasicFile ();  			hum.Id = Guid.NewGuid ();  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				int cityid = Convert.ToInt32 (city);  				var city1 = (from s in dal.City  				where s.Id == cityid  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = Convert.ToInt32 (account);  				//开户行  				hum.NativePlace = birth;  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.Academic = education;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = ptho;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.createTime = DateTime.Now;  				if (mm.Authority != 2) {  					hum.CreatedManagerID = Session ["admin"].ToString ();  				}  				else {  					hum.CreatedManagerID = mm.Boss;  				}  				hum.IsDelete = false;  				dal.HumanBasicFile.Add (hum);  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		#region 非草稿  		else {  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				var city1 = (from s in dal.City  				where s.Name == city  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.createTime = DateTime.Now;  				//创建时间  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = mm.Bank1.Id;  				//开户行  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.NativePlace = birth;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				hum.Academic = education;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.IsDelete = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.CreatedManagerID = Session ["admin"].ToString ();  				dal.Entry (hum).State = EntityState.Modified;  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		if (hum != null) {  			ViewBag.cof = 1;  		}  	}  	List<Managers> list = (from s in dal.Managers  	select s).ToList ();  	return View (list);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (ModelState.IsValid) {  	#region 非管理员录入  	if (authority != "管理员") {  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where s.IsDraft == true && s.Managers.UserId == admin  		select s).Distinct ().FirstOrDefault ();  		if (hum == null) {  			hum = new HumanBasicFile ();  			hum.Id = Guid.NewGuid ();  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				int cityid = Convert.ToInt32 (city);  				var city1 = (from s in dal.City  				where s.Id == cityid  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = Convert.ToInt32 (account);  				//开户行  				hum.NativePlace = birth;  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.Academic = education;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = ptho;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.createTime = DateTime.Now;  				if (mm.Authority != 2) {  					hum.CreatedManagerID = Session ["admin"].ToString ();  				}  				else {  					hum.CreatedManagerID = mm.Boss;  				}  				hum.IsDelete = false;  				dal.HumanBasicFile.Add (hum);  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		#region 非草稿  		else {  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				var city1 = (from s in dal.City  				where s.Name == city  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.createTime = DateTime.Now;  				//创建时间  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = mm.Bank1.Id;  				//开户行  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.NativePlace = birth;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				hum.Academic = education;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.IsDelete = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.CreatedManagerID = Session ["admin"].ToString ();  				dal.Entry (hum).State = EntityState.Modified;  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		if (hum != null) {  			ViewBag.cof = 1;  		}  	}  	List<Managers> list = (from s in dal.Managers  	select s).ToList ();  	return View (list);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (ModelState.IsValid) {  	#region 非管理员录入  	if (authority != "管理员") {  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where s.IsDraft == true && s.Managers.UserId == admin  		select s).Distinct ().FirstOrDefault ();  		if (hum == null) {  			hum = new HumanBasicFile ();  			hum.Id = Guid.NewGuid ();  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				int cityid = Convert.ToInt32 (city);  				var city1 = (from s in dal.City  				where s.Id == cityid  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = Convert.ToInt32 (account);  				//开户行  				hum.NativePlace = birth;  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.Academic = education;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = ptho;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.createTime = DateTime.Now;  				if (mm.Authority != 2) {  					hum.CreatedManagerID = Session ["admin"].ToString ();  				}  				else {  					hum.CreatedManagerID = mm.Boss;  				}  				hum.IsDelete = false;  				dal.HumanBasicFile.Add (hum);  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		#region 非草稿  		else {  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				var city1 = (from s in dal.City  				where s.Name == city  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.createTime = DateTime.Now;  				//创建时间  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = mm.Bank1.Id;  				//开户行  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.NativePlace = birth;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				hum.Academic = education;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.IsDelete = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.CreatedManagerID = Session ["admin"].ToString ();  				dal.Entry (hum).State = EntityState.Modified;  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		if (hum != null) {  			ViewBag.cof = 1;  		}  	}  	List<Managers> list = (from s in dal.Managers  	select s).ToList ();  	return View (list);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (ModelState.IsValid) {  	#region 非管理员录入  	if (authority != "管理员") {  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where s.IsDraft == true && s.Managers.UserId == admin  		select s).Distinct ().FirstOrDefault ();  		if (hum == null) {  			hum = new HumanBasicFile ();  			hum.Id = Guid.NewGuid ();  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				int cityid = Convert.ToInt32 (city);  				var city1 = (from s in dal.City  				where s.Id == cityid  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = Convert.ToInt32 (account);  				//开户行  				hum.NativePlace = birth;  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.Academic = education;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = ptho;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.createTime = DateTime.Now;  				if (mm.Authority != 2) {  					hum.CreatedManagerID = Session ["admin"].ToString ();  				}  				else {  					hum.CreatedManagerID = mm.Boss;  				}  				hum.IsDelete = false;  				dal.HumanBasicFile.Add (hum);  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		#region 非草稿  		else {  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				var city1 = (from s in dal.City  				where s.Name == city  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.createTime = DateTime.Now;  				//创建时间  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = mm.Bank1.Id;  				//开户行  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.NativePlace = birth;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				hum.Academic = education;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.IsDelete = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.CreatedManagerID = Session ["admin"].ToString ();  				dal.Entry (hum).State = EntityState.Modified;  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		if (hum != null) {  			ViewBag.cof = 1;  		}  	}  	List<Managers> list = (from s in dal.Managers  	select s).ToList ();  	return View (list);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (ModelState.IsValid) {  	#region 非管理员录入  	if (authority != "管理员") {  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where s.IsDraft == true && s.Managers.UserId == admin  		select s).Distinct ().FirstOrDefault ();  		if (hum == null) {  			hum = new HumanBasicFile ();  			hum.Id = Guid.NewGuid ();  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				int cityid = Convert.ToInt32 (city);  				var city1 = (from s in dal.City  				where s.Id == cityid  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = Convert.ToInt32 (account);  				//开户行  				hum.NativePlace = birth;  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.Academic = education;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = ptho;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.createTime = DateTime.Now;  				if (mm.Authority != 2) {  					hum.CreatedManagerID = Session ["admin"].ToString ();  				}  				else {  					hum.CreatedManagerID = mm.Boss;  				}  				hum.IsDelete = false;  				dal.HumanBasicFile.Add (hum);  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		#region 非草稿  		else {  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				var city1 = (from s in dal.City  				where s.Name == city  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.createTime = DateTime.Now;  				//创建时间  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = mm.Bank1.Id;  				//开户行  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.NativePlace = birth;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				hum.Academic = education;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.IsDelete = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.CreatedManagerID = Session ["admin"].ToString ();  				dal.Entry (hum).State = EntityState.Modified;  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		if (hum != null) {  			ViewBag.cof = 1;  		}  	}  	List<Managers> list = (from s in dal.Managers  	select s).ToList ();  	return View (list);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (ModelState.IsValid) {  	#region 非管理员录入  	if (authority != "管理员") {  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where s.IsDraft == true && s.Managers.UserId == admin  		select s).Distinct ().FirstOrDefault ();  		if (hum == null) {  			hum = new HumanBasicFile ();  			hum.Id = Guid.NewGuid ();  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				int cityid = Convert.ToInt32 (city);  				var city1 = (from s in dal.City  				where s.Id == cityid  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = Convert.ToInt32 (account);  				//开户行  				hum.NativePlace = birth;  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.Academic = education;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = ptho;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.createTime = DateTime.Now;  				if (mm.Authority != 2) {  					hum.CreatedManagerID = Session ["admin"].ToString ();  				}  				else {  					hum.CreatedManagerID = mm.Boss;  				}  				hum.IsDelete = false;  				dal.HumanBasicFile.Add (hum);  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		#region 非草稿  		else {  			if (captain.Length != 0 && office.Length != 0) {  				var mm = (from g in dal.Managers  				where g.UserId == captain  				select g).FirstOrDefault ();  				var city1 = (from s in dal.City  				where s.Name == city  				select s).FirstOrDefault ();  				#region 赋值给兼职人员  				hum.createTime = DateTime.Now;  				//创建时间  				hum.Boss = mm.Id;  				hum.city = city1.Id;  				hum.Name = name;  				hum.HumanLevel = rank;  				if (rank != "B") {  					hum.LevelEditTimes = 1;  				}  				if (uniquenum == null) {  					hum.uniNum = "string";  				}  				else {  					hum.uniNum = uniquenum;  				}  				if (sex == "男") {  					hum.Sex = true;  				}  				else {  					hum.Sex = false;  				}  				hum.IDcardNo = identity;  				//身份证号码  				hum.Telephone = mobile;  				//电话  				hum.BankNum = bank;  				//bank                     				hum.BankId = mm.Bank1.Id;  				//开户行  				hum.School = school;  				hum.Major = major;  				hum.GraduateTime = graduation;  				hum.NativePlace = birth;  				hum.TrainTimes = 0;  				hum.LevelEditTimes = 0;  				hum.Academic = education;  				if (weight.Length != 0) {  					hum.Weight = Convert.ToInt32 (weight);  				}  				if (height == "") {  					hum.Height = null;  				}  				else {  					hum.Height = Convert.ToInt32 (height);  				}  				hum.BWH = meas;  				hum.speciality = skill;  				#region  				if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  				 {  					string file = PicName (identityimage.FileName);  					var ptho = uniquenum + "-" + name + "-身份证";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  					file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  					hum.IDcardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  				 {  					string file = PicName1 (bankimage.FileName);  					var ptho = uniquenum + "-" + name + "-银行卡";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  					file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  					hum.BankCardPhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  				 {  					string file = PicName2 (personal.FileName);  					var ptho = uniquenum + "-" + name + "-面试";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  					file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  					hum.InterfacePhoto = file;  				}  				#endregion  				#region  				if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  				 {  					string file = PicName3 (student.FileName);  					var ptho = uniquenum + "-" + name + "-个人声明";  					string extend = file.Remove (0' file.LastIndexOf (".") + 1);  					ptho = PictureValiate.newName (ptho' extend);  					student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  					file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  					hum.Info = file;  				}  				#endregion  				hum.IsDraft = false;  				hum.IsDelete = false;  				hum.EditManagerId = Session ["admin"].ToString ();  				hum.CreatedManagerID = Session ["admin"].ToString ();  				dal.Entry (hum).State = EntityState.Modified;  				dal.SaveChanges ();  				#endregion  			}  		}  		#endregion  		if (hum != null) {  			ViewBag.cof = 1;  		}  	}  	List<Managers> list = (from s in dal.Managers  	select s).ToList ();  	return View (list);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (authority != "管理员") {  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.IsDraft == true && s.Managers.UserId == admin  	select s).Distinct ().FirstOrDefault ();  	if (hum == null) {  		hum = new HumanBasicFile ();  		hum.Id = Guid.NewGuid ();  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			int cityid = Convert.ToInt32 (city);  			var city1 = (from s in dal.City  			where s.Id == cityid  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = Convert.ToInt32 (account);  			//开户行  			hum.NativePlace = birth;  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.Academic = education;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = ptho;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.createTime = DateTime.Now;  			if (mm.Authority != 2) {  				hum.CreatedManagerID = Session ["admin"].ToString ();  			}  			else {  				hum.CreatedManagerID = mm.Boss;  			}  			hum.IsDelete = false;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	#region 非草稿  	else {  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			var city1 = (from s in dal.City  			where s.Name == city  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.createTime = DateTime.Now;  			//创建时间  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = mm.Bank1.Id;  			//开户行  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.NativePlace = birth;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			hum.Academic = education;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.IsDelete = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.CreatedManagerID = Session ["admin"].ToString ();  			dal.Entry (hum).State = EntityState.Modified;  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	if (hum != null) {  		ViewBag.cof = 1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (authority != "管理员") {  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.IsDraft == true && s.Managers.UserId == admin  	select s).Distinct ().FirstOrDefault ();  	if (hum == null) {  		hum = new HumanBasicFile ();  		hum.Id = Guid.NewGuid ();  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			int cityid = Convert.ToInt32 (city);  			var city1 = (from s in dal.City  			where s.Id == cityid  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = Convert.ToInt32 (account);  			//开户行  			hum.NativePlace = birth;  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.Academic = education;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = ptho;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.createTime = DateTime.Now;  			if (mm.Authority != 2) {  				hum.CreatedManagerID = Session ["admin"].ToString ();  			}  			else {  				hum.CreatedManagerID = mm.Boss;  			}  			hum.IsDelete = false;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	#region 非草稿  	else {  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			var city1 = (from s in dal.City  			where s.Name == city  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.createTime = DateTime.Now;  			//创建时间  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = mm.Bank1.Id;  			//开户行  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.NativePlace = birth;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			hum.Academic = education;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.IsDelete = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.CreatedManagerID = Session ["admin"].ToString ();  			dal.Entry (hum).State = EntityState.Modified;  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	if (hum != null) {  		ViewBag.cof = 1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (authority != "管理员") {  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.IsDraft == true && s.Managers.UserId == admin  	select s).Distinct ().FirstOrDefault ();  	if (hum == null) {  		hum = new HumanBasicFile ();  		hum.Id = Guid.NewGuid ();  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			int cityid = Convert.ToInt32 (city);  			var city1 = (from s in dal.City  			where s.Id == cityid  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = Convert.ToInt32 (account);  			//开户行  			hum.NativePlace = birth;  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.Academic = education;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = ptho;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.createTime = DateTime.Now;  			if (mm.Authority != 2) {  				hum.CreatedManagerID = Session ["admin"].ToString ();  			}  			else {  				hum.CreatedManagerID = mm.Boss;  			}  			hum.IsDelete = false;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	#region 非草稿  	else {  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			var city1 = (from s in dal.City  			where s.Name == city  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.createTime = DateTime.Now;  			//创建时间  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = mm.Bank1.Id;  			//开户行  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.NativePlace = birth;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			hum.Academic = education;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.IsDelete = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.CreatedManagerID = Session ["admin"].ToString ();  			dal.Entry (hum).State = EntityState.Modified;  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	if (hum != null) {  		ViewBag.cof = 1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (authority != "管理员") {  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.IsDraft == true && s.Managers.UserId == admin  	select s).Distinct ().FirstOrDefault ();  	if (hum == null) {  		hum = new HumanBasicFile ();  		hum.Id = Guid.NewGuid ();  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			int cityid = Convert.ToInt32 (city);  			var city1 = (from s in dal.City  			where s.Id == cityid  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = Convert.ToInt32 (account);  			//开户行  			hum.NativePlace = birth;  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.Academic = education;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = ptho;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.createTime = DateTime.Now;  			if (mm.Authority != 2) {  				hum.CreatedManagerID = Session ["admin"].ToString ();  			}  			else {  				hum.CreatedManagerID = mm.Boss;  			}  			hum.IsDelete = false;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	#region 非草稿  	else {  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			var city1 = (from s in dal.City  			where s.Name == city  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.createTime = DateTime.Now;  			//创建时间  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = mm.Bank1.Id;  			//开户行  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.NativePlace = birth;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			hum.Academic = education;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.IsDelete = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.CreatedManagerID = Session ["admin"].ToString ();  			dal.Entry (hum).State = EntityState.Modified;  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	if (hum != null) {  		ViewBag.cof = 1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (authority != "管理员") {  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.IsDraft == true && s.Managers.UserId == admin  	select s).Distinct ().FirstOrDefault ();  	if (hum == null) {  		hum = new HumanBasicFile ();  		hum.Id = Guid.NewGuid ();  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			int cityid = Convert.ToInt32 (city);  			var city1 = (from s in dal.City  			where s.Id == cityid  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = Convert.ToInt32 (account);  			//开户行  			hum.NativePlace = birth;  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.Academic = education;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = ptho;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.createTime = DateTime.Now;  			if (mm.Authority != 2) {  				hum.CreatedManagerID = Session ["admin"].ToString ();  			}  			else {  				hum.CreatedManagerID = mm.Boss;  			}  			hum.IsDelete = false;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	#region 非草稿  	else {  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			var city1 = (from s in dal.City  			where s.Name == city  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.createTime = DateTime.Now;  			//创建时间  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = mm.Bank1.Id;  			//开户行  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.NativePlace = birth;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			hum.Academic = education;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.IsDelete = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.CreatedManagerID = Session ["admin"].ToString ();  			dal.Entry (hum).State = EntityState.Modified;  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	if (hum != null) {  		ViewBag.cof = 1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (authority != "管理员") {  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.IsDraft == true && s.Managers.UserId == admin  	select s).Distinct ().FirstOrDefault ();  	if (hum == null) {  		hum = new HumanBasicFile ();  		hum.Id = Guid.NewGuid ();  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			int cityid = Convert.ToInt32 (city);  			var city1 = (from s in dal.City  			where s.Id == cityid  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = Convert.ToInt32 (account);  			//开户行  			hum.NativePlace = birth;  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.Academic = education;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = ptho;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.createTime = DateTime.Now;  			if (mm.Authority != 2) {  				hum.CreatedManagerID = Session ["admin"].ToString ();  			}  			else {  				hum.CreatedManagerID = mm.Boss;  			}  			hum.IsDelete = false;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	#region 非草稿  	else {  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			var city1 = (from s in dal.City  			where s.Name == city  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.createTime = DateTime.Now;  			//创建时间  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = mm.Bank1.Id;  			//开户行  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.NativePlace = birth;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			hum.Academic = education;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.IsDelete = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.CreatedManagerID = Session ["admin"].ToString ();  			dal.Entry (hum).State = EntityState.Modified;  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	if (hum != null) {  		ViewBag.cof = 1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (authority != "管理员") {  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.IsDraft == true && s.Managers.UserId == admin  	select s).Distinct ().FirstOrDefault ();  	if (hum == null) {  		hum = new HumanBasicFile ();  		hum.Id = Guid.NewGuid ();  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			int cityid = Convert.ToInt32 (city);  			var city1 = (from s in dal.City  			where s.Id == cityid  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = Convert.ToInt32 (account);  			//开户行  			hum.NativePlace = birth;  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.Academic = education;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = ptho;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.createTime = DateTime.Now;  			if (mm.Authority != 2) {  				hum.CreatedManagerID = Session ["admin"].ToString ();  			}  			else {  				hum.CreatedManagerID = mm.Boss;  			}  			hum.IsDelete = false;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	#region 非草稿  	else {  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			var city1 = (from s in dal.City  			where s.Name == city  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.createTime = DateTime.Now;  			//创建时间  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = mm.Bank1.Id;  			//开户行  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.NativePlace = birth;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			hum.Academic = education;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.IsDelete = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.CreatedManagerID = Session ["admin"].ToString ();  			dal.Entry (hum).State = EntityState.Modified;  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	if (hum != null) {  		ViewBag.cof = 1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (authority != "管理员") {  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.IsDraft == true && s.Managers.UserId == admin  	select s).Distinct ().FirstOrDefault ();  	if (hum == null) {  		hum = new HumanBasicFile ();  		hum.Id = Guid.NewGuid ();  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			int cityid = Convert.ToInt32 (city);  			var city1 = (from s in dal.City  			where s.Id == cityid  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = Convert.ToInt32 (account);  			//开户行  			hum.NativePlace = birth;  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.Academic = education;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = ptho;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.createTime = DateTime.Now;  			if (mm.Authority != 2) {  				hum.CreatedManagerID = Session ["admin"].ToString ();  			}  			else {  				hum.CreatedManagerID = mm.Boss;  			}  			hum.IsDelete = false;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	#region 非草稿  	else {  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			var city1 = (from s in dal.City  			where s.Name == city  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.createTime = DateTime.Now;  			//创建时间  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = mm.Bank1.Id;  			//开户行  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.NativePlace = birth;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			hum.Academic = education;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.IsDelete = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.CreatedManagerID = Session ["admin"].ToString ();  			dal.Entry (hum).State = EntityState.Modified;  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	if (hum != null) {  		ViewBag.cof = 1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (authority != "管理员") {  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.IsDraft == true && s.Managers.UserId == admin  	select s).Distinct ().FirstOrDefault ();  	if (hum == null) {  		hum = new HumanBasicFile ();  		hum.Id = Guid.NewGuid ();  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			int cityid = Convert.ToInt32 (city);  			var city1 = (from s in dal.City  			where s.Id == cityid  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = Convert.ToInt32 (account);  			//开户行  			hum.NativePlace = birth;  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.Academic = education;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = ptho;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.createTime = DateTime.Now;  			if (mm.Authority != 2) {  				hum.CreatedManagerID = Session ["admin"].ToString ();  			}  			else {  				hum.CreatedManagerID = mm.Boss;  			}  			hum.IsDelete = false;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	#region 非草稿  	else {  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			var city1 = (from s in dal.City  			where s.Name == city  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.createTime = DateTime.Now;  			//创建时间  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = mm.Bank1.Id;  			//开户行  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.NativePlace = birth;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			hum.Academic = education;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.IsDelete = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.CreatedManagerID = Session ["admin"].ToString ();  			dal.Entry (hum).State = EntityState.Modified;  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	if (hum != null) {  		ViewBag.cof = 1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (authority != "管理员") {  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.IsDraft == true && s.Managers.UserId == admin  	select s).Distinct ().FirstOrDefault ();  	if (hum == null) {  		hum = new HumanBasicFile ();  		hum.Id = Guid.NewGuid ();  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			int cityid = Convert.ToInt32 (city);  			var city1 = (from s in dal.City  			where s.Id == cityid  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = Convert.ToInt32 (account);  			//开户行  			hum.NativePlace = birth;  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.Academic = education;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = ptho;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.createTime = DateTime.Now;  			if (mm.Authority != 2) {  				hum.CreatedManagerID = Session ["admin"].ToString ();  			}  			else {  				hum.CreatedManagerID = mm.Boss;  			}  			hum.IsDelete = false;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	#region 非草稿  	else {  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			var city1 = (from s in dal.City  			where s.Name == city  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.createTime = DateTime.Now;  			//创建时间  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = mm.Bank1.Id;  			//开户行  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.NativePlace = birth;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			hum.Academic = education;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.IsDelete = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.CreatedManagerID = Session ["admin"].ToString ();  			dal.Entry (hum).State = EntityState.Modified;  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	if (hum != null) {  		ViewBag.cof = 1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (authority != "管理员") {  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.IsDraft == true && s.Managers.UserId == admin  	select s).Distinct ().FirstOrDefault ();  	if (hum == null) {  		hum = new HumanBasicFile ();  		hum.Id = Guid.NewGuid ();  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			int cityid = Convert.ToInt32 (city);  			var city1 = (from s in dal.City  			where s.Id == cityid  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = Convert.ToInt32 (account);  			//开户行  			hum.NativePlace = birth;  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.Academic = education;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = ptho;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.createTime = DateTime.Now;  			if (mm.Authority != 2) {  				hum.CreatedManagerID = Session ["admin"].ToString ();  			}  			else {  				hum.CreatedManagerID = mm.Boss;  			}  			hum.IsDelete = false;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	#region 非草稿  	else {  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			var city1 = (from s in dal.City  			where s.Name == city  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.createTime = DateTime.Now;  			//创建时间  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = mm.Bank1.Id;  			//开户行  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.NativePlace = birth;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			hum.Academic = education;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.IsDelete = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.CreatedManagerID = Session ["admin"].ToString ();  			dal.Entry (hum).State = EntityState.Modified;  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	if (hum != null) {  		ViewBag.cof = 1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (authority != "管理员") {  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.IsDraft == true && s.Managers.UserId == admin  	select s).Distinct ().FirstOrDefault ();  	if (hum == null) {  		hum = new HumanBasicFile ();  		hum.Id = Guid.NewGuid ();  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			int cityid = Convert.ToInt32 (city);  			var city1 = (from s in dal.City  			where s.Id == cityid  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = Convert.ToInt32 (account);  			//开户行  			hum.NativePlace = birth;  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.Academic = education;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = ptho;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.createTime = DateTime.Now;  			if (mm.Authority != 2) {  				hum.CreatedManagerID = Session ["admin"].ToString ();  			}  			else {  				hum.CreatedManagerID = mm.Boss;  			}  			hum.IsDelete = false;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	#region 非草稿  	else {  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			var city1 = (from s in dal.City  			where s.Name == city  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.createTime = DateTime.Now;  			//创建时间  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = mm.Bank1.Id;  			//开户行  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.NativePlace = birth;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			hum.Academic = education;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.IsDelete = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.CreatedManagerID = Session ["admin"].ToString ();  			dal.Entry (hum).State = EntityState.Modified;  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	if (hum != null) {  		ViewBag.cof = 1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (authority != "管理员") {  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.IsDraft == true && s.Managers.UserId == admin  	select s).Distinct ().FirstOrDefault ();  	if (hum == null) {  		hum = new HumanBasicFile ();  		hum.Id = Guid.NewGuid ();  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			int cityid = Convert.ToInt32 (city);  			var city1 = (from s in dal.City  			where s.Id == cityid  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = Convert.ToInt32 (account);  			//开户行  			hum.NativePlace = birth;  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.Academic = education;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = ptho;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.createTime = DateTime.Now;  			if (mm.Authority != 2) {  				hum.CreatedManagerID = Session ["admin"].ToString ();  			}  			else {  				hum.CreatedManagerID = mm.Boss;  			}  			hum.IsDelete = false;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	#region 非草稿  	else {  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			var city1 = (from s in dal.City  			where s.Name == city  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.createTime = DateTime.Now;  			//创建时间  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = mm.Bank1.Id;  			//开户行  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.NativePlace = birth;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			hum.Academic = education;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.IsDelete = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.CreatedManagerID = Session ["admin"].ToString ();  			dal.Entry (hum).State = EntityState.Modified;  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	if (hum != null) {  		ViewBag.cof = 1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (authority != "管理员") {  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.IsDraft == true && s.Managers.UserId == admin  	select s).Distinct ().FirstOrDefault ();  	if (hum == null) {  		hum = new HumanBasicFile ();  		hum.Id = Guid.NewGuid ();  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			int cityid = Convert.ToInt32 (city);  			var city1 = (from s in dal.City  			where s.Id == cityid  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = Convert.ToInt32 (account);  			//开户行  			hum.NativePlace = birth;  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.Academic = education;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = ptho;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.createTime = DateTime.Now;  			if (mm.Authority != 2) {  				hum.CreatedManagerID = Session ["admin"].ToString ();  			}  			else {  				hum.CreatedManagerID = mm.Boss;  			}  			hum.IsDelete = false;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	#region 非草稿  	else {  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			var city1 = (from s in dal.City  			where s.Name == city  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.createTime = DateTime.Now;  			//创建时间  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = mm.Bank1.Id;  			//开户行  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.NativePlace = birth;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			hum.Academic = education;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.IsDelete = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.CreatedManagerID = Session ["admin"].ToString ();  			dal.Entry (hum).State = EntityState.Modified;  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	if (hum != null) {  		ViewBag.cof = 1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (authority != "管理员") {  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.IsDraft == true && s.Managers.UserId == admin  	select s).Distinct ().FirstOrDefault ();  	if (hum == null) {  		hum = new HumanBasicFile ();  		hum.Id = Guid.NewGuid ();  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			int cityid = Convert.ToInt32 (city);  			var city1 = (from s in dal.City  			where s.Id == cityid  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = Convert.ToInt32 (account);  			//开户行  			hum.NativePlace = birth;  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.Academic = education;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = ptho;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.createTime = DateTime.Now;  			if (mm.Authority != 2) {  				hum.CreatedManagerID = Session ["admin"].ToString ();  			}  			else {  				hum.CreatedManagerID = mm.Boss;  			}  			hum.IsDelete = false;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	#region 非草稿  	else {  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			var city1 = (from s in dal.City  			where s.Name == city  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.createTime = DateTime.Now;  			//创建时间  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = mm.Bank1.Id;  			//开户行  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.NativePlace = birth;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			hum.Academic = education;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.IsDelete = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.CreatedManagerID = Session ["admin"].ToString ();  			dal.Entry (hum).State = EntityState.Modified;  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	if (hum != null) {  		ViewBag.cof = 1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (authority != "管理员") {  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.IsDraft == true && s.Managers.UserId == admin  	select s).Distinct ().FirstOrDefault ();  	if (hum == null) {  		hum = new HumanBasicFile ();  		hum.Id = Guid.NewGuid ();  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			int cityid = Convert.ToInt32 (city);  			var city1 = (from s in dal.City  			where s.Id == cityid  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = Convert.ToInt32 (account);  			//开户行  			hum.NativePlace = birth;  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.Academic = education;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = ptho;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.createTime = DateTime.Now;  			if (mm.Authority != 2) {  				hum.CreatedManagerID = Session ["admin"].ToString ();  			}  			else {  				hum.CreatedManagerID = mm.Boss;  			}  			hum.IsDelete = false;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	#region 非草稿  	else {  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			var city1 = (from s in dal.City  			where s.Name == city  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.createTime = DateTime.Now;  			//创建时间  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = mm.Bank1.Id;  			//开户行  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.NativePlace = birth;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			hum.Academic = education;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.IsDelete = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.CreatedManagerID = Session ["admin"].ToString ();  			dal.Entry (hum).State = EntityState.Modified;  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	if (hum != null) {  		ViewBag.cof = 1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (authority != "管理员") {  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.IsDraft == true && s.Managers.UserId == admin  	select s).Distinct ().FirstOrDefault ();  	if (hum == null) {  		hum = new HumanBasicFile ();  		hum.Id = Guid.NewGuid ();  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			int cityid = Convert.ToInt32 (city);  			var city1 = (from s in dal.City  			where s.Id == cityid  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = Convert.ToInt32 (account);  			//开户行  			hum.NativePlace = birth;  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.Academic = education;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = ptho;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.createTime = DateTime.Now;  			if (mm.Authority != 2) {  				hum.CreatedManagerID = Session ["admin"].ToString ();  			}  			else {  				hum.CreatedManagerID = mm.Boss;  			}  			hum.IsDelete = false;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	#region 非草稿  	else {  		if (captain.Length != 0 && office.Length != 0) {  			var mm = (from g in dal.Managers  			where g.UserId == captain  			select g).FirstOrDefault ();  			var city1 = (from s in dal.City  			where s.Name == city  			select s).FirstOrDefault ();  			#region 赋值给兼职人员  			hum.createTime = DateTime.Now;  			//创建时间  			hum.Boss = mm.Id;  			hum.city = city1.Id;  			hum.Name = name;  			hum.HumanLevel = rank;  			if (rank != "B") {  				hum.LevelEditTimes = 1;  			}  			if (uniquenum == null) {  				hum.uniNum = "string";  			}  			else {  				hum.uniNum = uniquenum;  			}  			if (sex == "男") {  				hum.Sex = true;  			}  			else {  				hum.Sex = false;  			}  			hum.IDcardNo = identity;  			//身份证号码  			hum.Telephone = mobile;  			//电话  			hum.BankNum = bank;  			//bank                     			hum.BankId = mm.Bank1.Id;  			//开户行  			hum.School = school;  			hum.Major = major;  			hum.GraduateTime = graduation;  			hum.NativePlace = birth;  			hum.TrainTimes = 0;  			hum.LevelEditTimes = 0;  			hum.Academic = education;  			if (weight.Length != 0) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (height == "") {  				hum.Height = null;  			}  			else {  				hum.Height = Convert.ToInt32 (height);  			}  			hum.BWH = meas;  			hum.speciality = skill;  			#region  			if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  			 {  				string file = PicName (identityimage.FileName);  				var ptho = uniquenum + "-" + name + "-身份证";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  				file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  				hum.IDcardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  			 {  				string file = PicName1 (bankimage.FileName);  				var ptho = uniquenum + "-" + name + "-银行卡";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  				file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  				hum.BankCardPhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  			 {  				string file = PicName2 (personal.FileName);  				var ptho = uniquenum + "-" + name + "-面试";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  				file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  				hum.InterfacePhoto = file;  			}  			#endregion  			#region  			if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  			 {  				string file = PicName3 (student.FileName);  				var ptho = uniquenum + "-" + name + "-个人声明";  				string extend = file.Remove (0' file.LastIndexOf (".") + 1);  				ptho = PictureValiate.newName (ptho' extend);  				student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  				file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  				hum.Info = file;  			}  			#endregion  			hum.IsDraft = false;  			hum.IsDelete = false;  			hum.EditManagerId = Session ["admin"].ToString ();  			hum.CreatedManagerID = Session ["admin"].ToString ();  			dal.Entry (hum).State = EntityState.Modified;  			dal.SaveChanges ();  			#endregion  		}  	}  	#endregion  	if (hum != null) {  		ViewBag.cof = 1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (hum == null) {  	hum = new HumanBasicFile ();  	hum.Id = Guid.NewGuid ();  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		int cityid = Convert.ToInt32 (city);  		var city1 = (from s in dal.City  		where s.Id == cityid  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = Convert.ToInt32 (account);  		//开户行  		hum.NativePlace = birth;  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.Academic = education;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = ptho;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.createTime = DateTime.Now;  		if (mm.Authority != 2) {  			hum.CreatedManagerID = Session ["admin"].ToString ();  		}  		else {  			hum.CreatedManagerID = mm.Boss;  		}  		hum.IsDelete = false;  		dal.HumanBasicFile.Add (hum);  		dal.SaveChanges ();  		#endregion  	}  }  #endregion  #region 非草稿  else {  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		var city1 = (from s in dal.City  		where s.Name == city  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.createTime = DateTime.Now;  		//创建时间  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = mm.Bank1.Id;  		//开户行  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.NativePlace = birth;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		hum.Academic = education;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.IsDelete = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.CreatedManagerID = Session ["admin"].ToString ();  		dal.Entry (hum).State = EntityState.Modified;  		dal.SaveChanges ();  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (hum == null) {  	hum = new HumanBasicFile ();  	hum.Id = Guid.NewGuid ();  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		int cityid = Convert.ToInt32 (city);  		var city1 = (from s in dal.City  		where s.Id == cityid  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = Convert.ToInt32 (account);  		//开户行  		hum.NativePlace = birth;  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.Academic = education;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = ptho;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.createTime = DateTime.Now;  		if (mm.Authority != 2) {  			hum.CreatedManagerID = Session ["admin"].ToString ();  		}  		else {  			hum.CreatedManagerID = mm.Boss;  		}  		hum.IsDelete = false;  		dal.HumanBasicFile.Add (hum);  		dal.SaveChanges ();  		#endregion  	}  }  #endregion  #region 非草稿  else {  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		var city1 = (from s in dal.City  		where s.Name == city  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.createTime = DateTime.Now;  		//创建时间  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = mm.Bank1.Id;  		//开户行  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.NativePlace = birth;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		hum.Academic = education;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.IsDelete = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.CreatedManagerID = Session ["admin"].ToString ();  		dal.Entry (hum).State = EntityState.Modified;  		dal.SaveChanges ();  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (hum == null) {  	hum = new HumanBasicFile ();  	hum.Id = Guid.NewGuid ();  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		int cityid = Convert.ToInt32 (city);  		var city1 = (from s in dal.City  		where s.Id == cityid  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = Convert.ToInt32 (account);  		//开户行  		hum.NativePlace = birth;  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.Academic = education;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = ptho;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.createTime = DateTime.Now;  		if (mm.Authority != 2) {  			hum.CreatedManagerID = Session ["admin"].ToString ();  		}  		else {  			hum.CreatedManagerID = mm.Boss;  		}  		hum.IsDelete = false;  		dal.HumanBasicFile.Add (hum);  		dal.SaveChanges ();  		#endregion  	}  }  #endregion  #region 非草稿  else {  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		var city1 = (from s in dal.City  		where s.Name == city  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.createTime = DateTime.Now;  		//创建时间  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = mm.Bank1.Id;  		//开户行  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.NativePlace = birth;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		hum.Academic = education;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.IsDelete = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.CreatedManagerID = Session ["admin"].ToString ();  		dal.Entry (hum).State = EntityState.Modified;  		dal.SaveChanges ();  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (hum == null) {  	hum = new HumanBasicFile ();  	hum.Id = Guid.NewGuid ();  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		int cityid = Convert.ToInt32 (city);  		var city1 = (from s in dal.City  		where s.Id == cityid  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = Convert.ToInt32 (account);  		//开户行  		hum.NativePlace = birth;  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.Academic = education;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = ptho;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.createTime = DateTime.Now;  		if (mm.Authority != 2) {  			hum.CreatedManagerID = Session ["admin"].ToString ();  		}  		else {  			hum.CreatedManagerID = mm.Boss;  		}  		hum.IsDelete = false;  		dal.HumanBasicFile.Add (hum);  		dal.SaveChanges ();  		#endregion  	}  }  #endregion  #region 非草稿  else {  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		var city1 = (from s in dal.City  		where s.Name == city  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.createTime = DateTime.Now;  		//创建时间  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = mm.Bank1.Id;  		//开户行  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.NativePlace = birth;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		hum.Academic = education;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.IsDelete = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.CreatedManagerID = Session ["admin"].ToString ();  		dal.Entry (hum).State = EntityState.Modified;  		dal.SaveChanges ();  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (hum == null) {  	hum = new HumanBasicFile ();  	hum.Id = Guid.NewGuid ();  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		int cityid = Convert.ToInt32 (city);  		var city1 = (from s in dal.City  		where s.Id == cityid  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = Convert.ToInt32 (account);  		//开户行  		hum.NativePlace = birth;  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.Academic = education;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = ptho;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.createTime = DateTime.Now;  		if (mm.Authority != 2) {  			hum.CreatedManagerID = Session ["admin"].ToString ();  		}  		else {  			hum.CreatedManagerID = mm.Boss;  		}  		hum.IsDelete = false;  		dal.HumanBasicFile.Add (hum);  		dal.SaveChanges ();  		#endregion  	}  }  #endregion  #region 非草稿  else {  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		var city1 = (from s in dal.City  		where s.Name == city  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.createTime = DateTime.Now;  		//创建时间  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = mm.Bank1.Id;  		//开户行  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.NativePlace = birth;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		hum.Academic = education;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.IsDelete = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.CreatedManagerID = Session ["admin"].ToString ();  		dal.Entry (hum).State = EntityState.Modified;  		dal.SaveChanges ();  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (hum == null) {  	hum = new HumanBasicFile ();  	hum.Id = Guid.NewGuid ();  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		int cityid = Convert.ToInt32 (city);  		var city1 = (from s in dal.City  		where s.Id == cityid  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = Convert.ToInt32 (account);  		//开户行  		hum.NativePlace = birth;  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.Academic = education;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = ptho;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.createTime = DateTime.Now;  		if (mm.Authority != 2) {  			hum.CreatedManagerID = Session ["admin"].ToString ();  		}  		else {  			hum.CreatedManagerID = mm.Boss;  		}  		hum.IsDelete = false;  		dal.HumanBasicFile.Add (hum);  		dal.SaveChanges ();  		#endregion  	}  }  #endregion  #region 非草稿  else {  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		var city1 = (from s in dal.City  		where s.Name == city  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.createTime = DateTime.Now;  		//创建时间  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = mm.Bank1.Id;  		//开户行  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.NativePlace = birth;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		hum.Academic = education;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.IsDelete = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.CreatedManagerID = Session ["admin"].ToString ();  		dal.Entry (hum).State = EntityState.Modified;  		dal.SaveChanges ();  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (hum == null) {  	hum = new HumanBasicFile ();  	hum.Id = Guid.NewGuid ();  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		int cityid = Convert.ToInt32 (city);  		var city1 = (from s in dal.City  		where s.Id == cityid  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = Convert.ToInt32 (account);  		//开户行  		hum.NativePlace = birth;  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.Academic = education;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = ptho;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.createTime = DateTime.Now;  		if (mm.Authority != 2) {  			hum.CreatedManagerID = Session ["admin"].ToString ();  		}  		else {  			hum.CreatedManagerID = mm.Boss;  		}  		hum.IsDelete = false;  		dal.HumanBasicFile.Add (hum);  		dal.SaveChanges ();  		#endregion  	}  }  #endregion  #region 非草稿  else {  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		var city1 = (from s in dal.City  		where s.Name == city  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.createTime = DateTime.Now;  		//创建时间  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = mm.Bank1.Id;  		//开户行  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.NativePlace = birth;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		hum.Academic = education;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.IsDelete = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.CreatedManagerID = Session ["admin"].ToString ();  		dal.Entry (hum).State = EntityState.Modified;  		dal.SaveChanges ();  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (hum == null) {  	hum = new HumanBasicFile ();  	hum.Id = Guid.NewGuid ();  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		int cityid = Convert.ToInt32 (city);  		var city1 = (from s in dal.City  		where s.Id == cityid  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = Convert.ToInt32 (account);  		//开户行  		hum.NativePlace = birth;  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.Academic = education;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = ptho;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.createTime = DateTime.Now;  		if (mm.Authority != 2) {  			hum.CreatedManagerID = Session ["admin"].ToString ();  		}  		else {  			hum.CreatedManagerID = mm.Boss;  		}  		hum.IsDelete = false;  		dal.HumanBasicFile.Add (hum);  		dal.SaveChanges ();  		#endregion  	}  }  #endregion  #region 非草稿  else {  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		var city1 = (from s in dal.City  		where s.Name == city  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.createTime = DateTime.Now;  		//创建时间  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = mm.Bank1.Id;  		//开户行  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.NativePlace = birth;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		hum.Academic = education;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.IsDelete = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.CreatedManagerID = Session ["admin"].ToString ();  		dal.Entry (hum).State = EntityState.Modified;  		dal.SaveChanges ();  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (hum == null) {  	hum = new HumanBasicFile ();  	hum.Id = Guid.NewGuid ();  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		int cityid = Convert.ToInt32 (city);  		var city1 = (from s in dal.City  		where s.Id == cityid  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = Convert.ToInt32 (account);  		//开户行  		hum.NativePlace = birth;  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.Academic = education;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = ptho;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.createTime = DateTime.Now;  		if (mm.Authority != 2) {  			hum.CreatedManagerID = Session ["admin"].ToString ();  		}  		else {  			hum.CreatedManagerID = mm.Boss;  		}  		hum.IsDelete = false;  		dal.HumanBasicFile.Add (hum);  		dal.SaveChanges ();  		#endregion  	}  }  #endregion  #region 非草稿  else {  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		var city1 = (from s in dal.City  		where s.Name == city  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.createTime = DateTime.Now;  		//创建时间  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = mm.Bank1.Id;  		//开户行  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.NativePlace = birth;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		hum.Academic = education;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.IsDelete = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.CreatedManagerID = Session ["admin"].ToString ();  		dal.Entry (hum).State = EntityState.Modified;  		dal.SaveChanges ();  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (hum == null) {  	hum = new HumanBasicFile ();  	hum.Id = Guid.NewGuid ();  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		int cityid = Convert.ToInt32 (city);  		var city1 = (from s in dal.City  		where s.Id == cityid  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = Convert.ToInt32 (account);  		//开户行  		hum.NativePlace = birth;  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.Academic = education;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = ptho;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.createTime = DateTime.Now;  		if (mm.Authority != 2) {  			hum.CreatedManagerID = Session ["admin"].ToString ();  		}  		else {  			hum.CreatedManagerID = mm.Boss;  		}  		hum.IsDelete = false;  		dal.HumanBasicFile.Add (hum);  		dal.SaveChanges ();  		#endregion  	}  }  #endregion  #region 非草稿  else {  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		var city1 = (from s in dal.City  		where s.Name == city  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.createTime = DateTime.Now;  		//创建时间  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = mm.Bank1.Id;  		//开户行  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.NativePlace = birth;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		hum.Academic = education;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.IsDelete = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.CreatedManagerID = Session ["admin"].ToString ();  		dal.Entry (hum).State = EntityState.Modified;  		dal.SaveChanges ();  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (hum == null) {  	hum = new HumanBasicFile ();  	hum.Id = Guid.NewGuid ();  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		int cityid = Convert.ToInt32 (city);  		var city1 = (from s in dal.City  		where s.Id == cityid  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = Convert.ToInt32 (account);  		//开户行  		hum.NativePlace = birth;  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.Academic = education;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = ptho;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.createTime = DateTime.Now;  		if (mm.Authority != 2) {  			hum.CreatedManagerID = Session ["admin"].ToString ();  		}  		else {  			hum.CreatedManagerID = mm.Boss;  		}  		hum.IsDelete = false;  		dal.HumanBasicFile.Add (hum);  		dal.SaveChanges ();  		#endregion  	}  }  #endregion  #region 非草稿  else {  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		var city1 = (from s in dal.City  		where s.Name == city  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.createTime = DateTime.Now;  		//创建时间  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = mm.Bank1.Id;  		//开户行  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.NativePlace = birth;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		hum.Academic = education;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.IsDelete = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.CreatedManagerID = Session ["admin"].ToString ();  		dal.Entry (hum).State = EntityState.Modified;  		dal.SaveChanges ();  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (hum == null) {  	hum = new HumanBasicFile ();  	hum.Id = Guid.NewGuid ();  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		int cityid = Convert.ToInt32 (city);  		var city1 = (from s in dal.City  		where s.Id == cityid  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = Convert.ToInt32 (account);  		//开户行  		hum.NativePlace = birth;  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.Academic = education;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = ptho;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.createTime = DateTime.Now;  		if (mm.Authority != 2) {  			hum.CreatedManagerID = Session ["admin"].ToString ();  		}  		else {  			hum.CreatedManagerID = mm.Boss;  		}  		hum.IsDelete = false;  		dal.HumanBasicFile.Add (hum);  		dal.SaveChanges ();  		#endregion  	}  }  #endregion  #region 非草稿  else {  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		var city1 = (from s in dal.City  		where s.Name == city  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.createTime = DateTime.Now;  		//创建时间  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = mm.Bank1.Id;  		//开户行  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.NativePlace = birth;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		hum.Academic = education;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.IsDelete = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.CreatedManagerID = Session ["admin"].ToString ();  		dal.Entry (hum).State = EntityState.Modified;  		dal.SaveChanges ();  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (hum == null) {  	hum = new HumanBasicFile ();  	hum.Id = Guid.NewGuid ();  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		int cityid = Convert.ToInt32 (city);  		var city1 = (from s in dal.City  		where s.Id == cityid  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = Convert.ToInt32 (account);  		//开户行  		hum.NativePlace = birth;  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.Academic = education;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = ptho;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.createTime = DateTime.Now;  		if (mm.Authority != 2) {  			hum.CreatedManagerID = Session ["admin"].ToString ();  		}  		else {  			hum.CreatedManagerID = mm.Boss;  		}  		hum.IsDelete = false;  		dal.HumanBasicFile.Add (hum);  		dal.SaveChanges ();  		#endregion  	}  }  #endregion  #region 非草稿  else {  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		var city1 = (from s in dal.City  		where s.Name == city  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.createTime = DateTime.Now;  		//创建时间  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = mm.Bank1.Id;  		//开户行  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.NativePlace = birth;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		hum.Academic = education;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.IsDelete = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.CreatedManagerID = Session ["admin"].ToString ();  		dal.Entry (hum).State = EntityState.Modified;  		dal.SaveChanges ();  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (hum == null) {  	hum = new HumanBasicFile ();  	hum.Id = Guid.NewGuid ();  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		int cityid = Convert.ToInt32 (city);  		var city1 = (from s in dal.City  		where s.Id == cityid  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = Convert.ToInt32 (account);  		//开户行  		hum.NativePlace = birth;  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.Academic = education;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = ptho;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.createTime = DateTime.Now;  		if (mm.Authority != 2) {  			hum.CreatedManagerID = Session ["admin"].ToString ();  		}  		else {  			hum.CreatedManagerID = mm.Boss;  		}  		hum.IsDelete = false;  		dal.HumanBasicFile.Add (hum);  		dal.SaveChanges ();  		#endregion  	}  }  #endregion  #region 非草稿  else {  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		var city1 = (from s in dal.City  		where s.Name == city  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.createTime = DateTime.Now;  		//创建时间  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = mm.Bank1.Id;  		//开户行  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.NativePlace = birth;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		hum.Academic = education;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.IsDelete = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.CreatedManagerID = Session ["admin"].ToString ();  		dal.Entry (hum).State = EntityState.Modified;  		dal.SaveChanges ();  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (hum == null) {  	hum = new HumanBasicFile ();  	hum.Id = Guid.NewGuid ();  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		int cityid = Convert.ToInt32 (city);  		var city1 = (from s in dal.City  		where s.Id == cityid  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = Convert.ToInt32 (account);  		//开户行  		hum.NativePlace = birth;  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.Academic = education;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = ptho;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.createTime = DateTime.Now;  		if (mm.Authority != 2) {  			hum.CreatedManagerID = Session ["admin"].ToString ();  		}  		else {  			hum.CreatedManagerID = mm.Boss;  		}  		hum.IsDelete = false;  		dal.HumanBasicFile.Add (hum);  		dal.SaveChanges ();  		#endregion  	}  }  #endregion  #region 非草稿  else {  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		var city1 = (from s in dal.City  		where s.Name == city  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.createTime = DateTime.Now;  		//创建时间  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = mm.Bank1.Id;  		//开户行  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.NativePlace = birth;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		hum.Academic = education;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.IsDelete = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.CreatedManagerID = Session ["admin"].ToString ();  		dal.Entry (hum).State = EntityState.Modified;  		dal.SaveChanges ();  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (hum == null) {  	hum = new HumanBasicFile ();  	hum.Id = Guid.NewGuid ();  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		int cityid = Convert.ToInt32 (city);  		var city1 = (from s in dal.City  		where s.Id == cityid  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = Convert.ToInt32 (account);  		//开户行  		hum.NativePlace = birth;  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.Academic = education;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = ptho;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.createTime = DateTime.Now;  		if (mm.Authority != 2) {  			hum.CreatedManagerID = Session ["admin"].ToString ();  		}  		else {  			hum.CreatedManagerID = mm.Boss;  		}  		hum.IsDelete = false;  		dal.HumanBasicFile.Add (hum);  		dal.SaveChanges ();  		#endregion  	}  }  #endregion  #region 非草稿  else {  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		var city1 = (from s in dal.City  		where s.Name == city  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.createTime = DateTime.Now;  		//创建时间  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = mm.Bank1.Id;  		//开户行  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.NativePlace = birth;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		hum.Academic = education;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.IsDelete = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.CreatedManagerID = Session ["admin"].ToString ();  		dal.Entry (hum).State = EntityState.Modified;  		dal.SaveChanges ();  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (hum == null) {  	hum = new HumanBasicFile ();  	hum.Id = Guid.NewGuid ();  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		int cityid = Convert.ToInt32 (city);  		var city1 = (from s in dal.City  		where s.Id == cityid  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = Convert.ToInt32 (account);  		//开户行  		hum.NativePlace = birth;  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.Academic = education;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = ptho;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.createTime = DateTime.Now;  		if (mm.Authority != 2) {  			hum.CreatedManagerID = Session ["admin"].ToString ();  		}  		else {  			hum.CreatedManagerID = mm.Boss;  		}  		hum.IsDelete = false;  		dal.HumanBasicFile.Add (hum);  		dal.SaveChanges ();  		#endregion  	}  }  #endregion  #region 非草稿  else {  	if (captain.Length != 0 && office.Length != 0) {  		var mm = (from g in dal.Managers  		where g.UserId == captain  		select g).FirstOrDefault ();  		var city1 = (from s in dal.City  		where s.Name == city  		select s).FirstOrDefault ();  		#region 赋值给兼职人员  		hum.createTime = DateTime.Now;  		//创建时间  		hum.Boss = mm.Id;  		hum.city = city1.Id;  		hum.Name = name;  		hum.HumanLevel = rank;  		if (rank != "B") {  			hum.LevelEditTimes = 1;  		}  		if (uniquenum == null) {  			hum.uniNum = "string";  		}  		else {  			hum.uniNum = uniquenum;  		}  		if (sex == "男") {  			hum.Sex = true;  		}  		else {  			hum.Sex = false;  		}  		hum.IDcardNo = identity;  		//身份证号码  		hum.Telephone = mobile;  		//电话  		hum.BankNum = bank;  		//bank                     		hum.BankId = mm.Bank1.Id;  		//开户行  		hum.School = school;  		hum.Major = major;  		hum.GraduateTime = graduation;  		hum.NativePlace = birth;  		hum.TrainTimes = 0;  		hum.LevelEditTimes = 0;  		hum.Academic = education;  		if (weight.Length != 0) {  			hum.Weight = Convert.ToInt32 (weight);  		}  		if (height == "") {  			hum.Height = null;  		}  		else {  			hum.Height = Convert.ToInt32 (height);  		}  		hum.BWH = meas;  		hum.speciality = skill;  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = uniquenum + "-" + name + "-身份证";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hum.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = uniquenum + "-" + name + "-银行卡";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hum.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  		 {  			string file = PicName2 (personal.FileName);  			var ptho = uniquenum + "-" + name + "-面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hum.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  		 {  			string file = PicName3 (student.FileName);  			var ptho = uniquenum + "-" + name + "-个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hum.Info = file;  		}  		#endregion  		hum.IsDraft = false;  		hum.IsDelete = false;  		hum.EditManagerId = Session ["admin"].ToString ();  		hum.CreatedManagerID = Session ["admin"].ToString ();  		dal.Entry (hum).State = EntityState.Modified;  		dal.SaveChanges ();  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (captain.Length != 0 && office.Length != 0) {  	var mm = (from g in dal.Managers  	where g.UserId == captain  	select g).FirstOrDefault ();  	int cityid = Convert.ToInt32 (city);  	var city1 = (from s in dal.City  	where s.Id == cityid  	select s).FirstOrDefault ();  	#region 赋值给兼职人员  	hum.Boss = mm.Id;  	hum.city = city1.Id;  	hum.Name = name;  	hum.HumanLevel = rank;  	if (rank != "B") {  		hum.LevelEditTimes = 1;  	}  	if (uniquenum == null) {  		hum.uniNum = "string";  	}  	else {  		hum.uniNum = uniquenum;  	}  	if (sex == "男") {  		hum.Sex = true;  	}  	else {  		hum.Sex = false;  	}  	hum.IDcardNo = identity;  	//身份证号码  	hum.Telephone = mobile;  	//电话  	hum.BankNum = bank;  	//bank                     	hum.BankId = Convert.ToInt32 (account);  	//开户行  	hum.NativePlace = birth;  	hum.School = school;  	hum.Major = major;  	hum.GraduateTime = graduation;  	hum.Academic = education;  	hum.TrainTimes = 0;  	hum.LevelEditTimes = 0;  	if (weight.Length != 0) {  		hum.Weight = Convert.ToInt32 (weight);  	}  	if (height == "") {  		hum.Height = null;  	}  	else {  		hum.Height = Convert.ToInt32 (height);  	}  	hum.BWH = meas;  	hum.speciality = skill;  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = uniquenum + "-" + name + "-身份证";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hum.IDcardPhoto = ptho;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = uniquenum + "-" + name + "-银行卡";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hum.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  	 {  		string file = PicName2 (personal.FileName);  		var ptho = uniquenum + "-" + name + "-面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hum.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  	 {  		string file = PicName3 (student.FileName);  		var ptho = uniquenum + "-" + name + "-个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hum.Info = file;  	}  	#endregion  	hum.IsDraft = false;  	hum.EditManagerId = Session ["admin"].ToString ();  	hum.createTime = DateTime.Now;  	if (mm.Authority != 2) {  		hum.CreatedManagerID = Session ["admin"].ToString ();  	}  	else {  		hum.CreatedManagerID = mm.Boss;  	}  	hum.IsDelete = false;  	dal.HumanBasicFile.Add (hum);  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (captain.Length != 0 && office.Length != 0) {  	var mm = (from g in dal.Managers  	where g.UserId == captain  	select g).FirstOrDefault ();  	int cityid = Convert.ToInt32 (city);  	var city1 = (from s in dal.City  	where s.Id == cityid  	select s).FirstOrDefault ();  	#region 赋值给兼职人员  	hum.Boss = mm.Id;  	hum.city = city1.Id;  	hum.Name = name;  	hum.HumanLevel = rank;  	if (rank != "B") {  		hum.LevelEditTimes = 1;  	}  	if (uniquenum == null) {  		hum.uniNum = "string";  	}  	else {  		hum.uniNum = uniquenum;  	}  	if (sex == "男") {  		hum.Sex = true;  	}  	else {  		hum.Sex = false;  	}  	hum.IDcardNo = identity;  	//身份证号码  	hum.Telephone = mobile;  	//电话  	hum.BankNum = bank;  	//bank                     	hum.BankId = Convert.ToInt32 (account);  	//开户行  	hum.NativePlace = birth;  	hum.School = school;  	hum.Major = major;  	hum.GraduateTime = graduation;  	hum.Academic = education;  	hum.TrainTimes = 0;  	hum.LevelEditTimes = 0;  	if (weight.Length != 0) {  		hum.Weight = Convert.ToInt32 (weight);  	}  	if (height == "") {  		hum.Height = null;  	}  	else {  		hum.Height = Convert.ToInt32 (height);  	}  	hum.BWH = meas;  	hum.speciality = skill;  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = uniquenum + "-" + name + "-身份证";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hum.IDcardPhoto = ptho;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = uniquenum + "-" + name + "-银行卡";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hum.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  	 {  		string file = PicName2 (personal.FileName);  		var ptho = uniquenum + "-" + name + "-面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hum.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  	 {  		string file = PicName3 (student.FileName);  		var ptho = uniquenum + "-" + name + "-个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hum.Info = file;  	}  	#endregion  	hum.IsDraft = false;  	hum.EditManagerId = Session ["admin"].ToString ();  	hum.createTime = DateTime.Now;  	if (mm.Authority != 2) {  		hum.CreatedManagerID = Session ["admin"].ToString ();  	}  	else {  		hum.CreatedManagerID = mm.Boss;  	}  	hum.IsDelete = false;  	dal.HumanBasicFile.Add (hum);  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (captain.Length != 0 && office.Length != 0) {  	var mm = (from g in dal.Managers  	where g.UserId == captain  	select g).FirstOrDefault ();  	int cityid = Convert.ToInt32 (city);  	var city1 = (from s in dal.City  	where s.Id == cityid  	select s).FirstOrDefault ();  	#region 赋值给兼职人员  	hum.Boss = mm.Id;  	hum.city = city1.Id;  	hum.Name = name;  	hum.HumanLevel = rank;  	if (rank != "B") {  		hum.LevelEditTimes = 1;  	}  	if (uniquenum == null) {  		hum.uniNum = "string";  	}  	else {  		hum.uniNum = uniquenum;  	}  	if (sex == "男") {  		hum.Sex = true;  	}  	else {  		hum.Sex = false;  	}  	hum.IDcardNo = identity;  	//身份证号码  	hum.Telephone = mobile;  	//电话  	hum.BankNum = bank;  	//bank                     	hum.BankId = Convert.ToInt32 (account);  	//开户行  	hum.NativePlace = birth;  	hum.School = school;  	hum.Major = major;  	hum.GraduateTime = graduation;  	hum.Academic = education;  	hum.TrainTimes = 0;  	hum.LevelEditTimes = 0;  	if (weight.Length != 0) {  		hum.Weight = Convert.ToInt32 (weight);  	}  	if (height == "") {  		hum.Height = null;  	}  	else {  		hum.Height = Convert.ToInt32 (height);  	}  	hum.BWH = meas;  	hum.speciality = skill;  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = uniquenum + "-" + name + "-身份证";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hum.IDcardPhoto = ptho;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = uniquenum + "-" + name + "-银行卡";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hum.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  	 {  		string file = PicName2 (personal.FileName);  		var ptho = uniquenum + "-" + name + "-面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hum.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  	 {  		string file = PicName3 (student.FileName);  		var ptho = uniquenum + "-" + name + "-个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hum.Info = file;  	}  	#endregion  	hum.IsDraft = false;  	hum.EditManagerId = Session ["admin"].ToString ();  	hum.createTime = DateTime.Now;  	if (mm.Authority != 2) {  		hum.CreatedManagerID = Session ["admin"].ToString ();  	}  	else {  		hum.CreatedManagerID = mm.Boss;  	}  	hum.IsDelete = false;  	dal.HumanBasicFile.Add (hum);  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (captain.Length != 0 && office.Length != 0) {  	var mm = (from g in dal.Managers  	where g.UserId == captain  	select g).FirstOrDefault ();  	int cityid = Convert.ToInt32 (city);  	var city1 = (from s in dal.City  	where s.Id == cityid  	select s).FirstOrDefault ();  	#region 赋值给兼职人员  	hum.Boss = mm.Id;  	hum.city = city1.Id;  	hum.Name = name;  	hum.HumanLevel = rank;  	if (rank != "B") {  		hum.LevelEditTimes = 1;  	}  	if (uniquenum == null) {  		hum.uniNum = "string";  	}  	else {  		hum.uniNum = uniquenum;  	}  	if (sex == "男") {  		hum.Sex = true;  	}  	else {  		hum.Sex = false;  	}  	hum.IDcardNo = identity;  	//身份证号码  	hum.Telephone = mobile;  	//电话  	hum.BankNum = bank;  	//bank                     	hum.BankId = Convert.ToInt32 (account);  	//开户行  	hum.NativePlace = birth;  	hum.School = school;  	hum.Major = major;  	hum.GraduateTime = graduation;  	hum.Academic = education;  	hum.TrainTimes = 0;  	hum.LevelEditTimes = 0;  	if (weight.Length != 0) {  		hum.Weight = Convert.ToInt32 (weight);  	}  	if (height == "") {  		hum.Height = null;  	}  	else {  		hum.Height = Convert.ToInt32 (height);  	}  	hum.BWH = meas;  	hum.speciality = skill;  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = uniquenum + "-" + name + "-身份证";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hum.IDcardPhoto = ptho;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = uniquenum + "-" + name + "-银行卡";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hum.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  	 {  		string file = PicName2 (personal.FileName);  		var ptho = uniquenum + "-" + name + "-面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hum.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  	 {  		string file = PicName3 (student.FileName);  		var ptho = uniquenum + "-" + name + "-个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hum.Info = file;  	}  	#endregion  	hum.IsDraft = false;  	hum.EditManagerId = Session ["admin"].ToString ();  	hum.createTime = DateTime.Now;  	if (mm.Authority != 2) {  		hum.CreatedManagerID = Session ["admin"].ToString ();  	}  	else {  		hum.CreatedManagerID = mm.Boss;  	}  	hum.IsDelete = false;  	dal.HumanBasicFile.Add (hum);  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (captain.Length != 0 && office.Length != 0) {  	var mm = (from g in dal.Managers  	where g.UserId == captain  	select g).FirstOrDefault ();  	int cityid = Convert.ToInt32 (city);  	var city1 = (from s in dal.City  	where s.Id == cityid  	select s).FirstOrDefault ();  	#region 赋值给兼职人员  	hum.Boss = mm.Id;  	hum.city = city1.Id;  	hum.Name = name;  	hum.HumanLevel = rank;  	if (rank != "B") {  		hum.LevelEditTimes = 1;  	}  	if (uniquenum == null) {  		hum.uniNum = "string";  	}  	else {  		hum.uniNum = uniquenum;  	}  	if (sex == "男") {  		hum.Sex = true;  	}  	else {  		hum.Sex = false;  	}  	hum.IDcardNo = identity;  	//身份证号码  	hum.Telephone = mobile;  	//电话  	hum.BankNum = bank;  	//bank                     	hum.BankId = Convert.ToInt32 (account);  	//开户行  	hum.NativePlace = birth;  	hum.School = school;  	hum.Major = major;  	hum.GraduateTime = graduation;  	hum.Academic = education;  	hum.TrainTimes = 0;  	hum.LevelEditTimes = 0;  	if (weight.Length != 0) {  		hum.Weight = Convert.ToInt32 (weight);  	}  	if (height == "") {  		hum.Height = null;  	}  	else {  		hum.Height = Convert.ToInt32 (height);  	}  	hum.BWH = meas;  	hum.speciality = skill;  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = uniquenum + "-" + name + "-身份证";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hum.IDcardPhoto = ptho;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = uniquenum + "-" + name + "-银行卡";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hum.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  	 {  		string file = PicName2 (personal.FileName);  		var ptho = uniquenum + "-" + name + "-面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hum.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  	 {  		string file = PicName3 (student.FileName);  		var ptho = uniquenum + "-" + name + "-个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hum.Info = file;  	}  	#endregion  	hum.IsDraft = false;  	hum.EditManagerId = Session ["admin"].ToString ();  	hum.createTime = DateTime.Now;  	if (mm.Authority != 2) {  		hum.CreatedManagerID = Session ["admin"].ToString ();  	}  	else {  		hum.CreatedManagerID = mm.Boss;  	}  	hum.IsDelete = false;  	dal.HumanBasicFile.Add (hum);  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (captain.Length != 0 && office.Length != 0) {  	var mm = (from g in dal.Managers  	where g.UserId == captain  	select g).FirstOrDefault ();  	int cityid = Convert.ToInt32 (city);  	var city1 = (from s in dal.City  	where s.Id == cityid  	select s).FirstOrDefault ();  	#region 赋值给兼职人员  	hum.Boss = mm.Id;  	hum.city = city1.Id;  	hum.Name = name;  	hum.HumanLevel = rank;  	if (rank != "B") {  		hum.LevelEditTimes = 1;  	}  	if (uniquenum == null) {  		hum.uniNum = "string";  	}  	else {  		hum.uniNum = uniquenum;  	}  	if (sex == "男") {  		hum.Sex = true;  	}  	else {  		hum.Sex = false;  	}  	hum.IDcardNo = identity;  	//身份证号码  	hum.Telephone = mobile;  	//电话  	hum.BankNum = bank;  	//bank                     	hum.BankId = Convert.ToInt32 (account);  	//开户行  	hum.NativePlace = birth;  	hum.School = school;  	hum.Major = major;  	hum.GraduateTime = graduation;  	hum.Academic = education;  	hum.TrainTimes = 0;  	hum.LevelEditTimes = 0;  	if (weight.Length != 0) {  		hum.Weight = Convert.ToInt32 (weight);  	}  	if (height == "") {  		hum.Height = null;  	}  	else {  		hum.Height = Convert.ToInt32 (height);  	}  	hum.BWH = meas;  	hum.speciality = skill;  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = uniquenum + "-" + name + "-身份证";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hum.IDcardPhoto = ptho;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = uniquenum + "-" + name + "-银行卡";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hum.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  	 {  		string file = PicName2 (personal.FileName);  		var ptho = uniquenum + "-" + name + "-面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hum.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  	 {  		string file = PicName3 (student.FileName);  		var ptho = uniquenum + "-" + name + "-个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hum.Info = file;  	}  	#endregion  	hum.IsDraft = false;  	hum.EditManagerId = Session ["admin"].ToString ();  	hum.createTime = DateTime.Now;  	if (mm.Authority != 2) {  		hum.CreatedManagerID = Session ["admin"].ToString ();  	}  	else {  		hum.CreatedManagerID = mm.Boss;  	}  	hum.IsDelete = false;  	dal.HumanBasicFile.Add (hum);  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (captain.Length != 0 && office.Length != 0) {  	var mm = (from g in dal.Managers  	where g.UserId == captain  	select g).FirstOrDefault ();  	int cityid = Convert.ToInt32 (city);  	var city1 = (from s in dal.City  	where s.Id == cityid  	select s).FirstOrDefault ();  	#region 赋值给兼职人员  	hum.Boss = mm.Id;  	hum.city = city1.Id;  	hum.Name = name;  	hum.HumanLevel = rank;  	if (rank != "B") {  		hum.LevelEditTimes = 1;  	}  	if (uniquenum == null) {  		hum.uniNum = "string";  	}  	else {  		hum.uniNum = uniquenum;  	}  	if (sex == "男") {  		hum.Sex = true;  	}  	else {  		hum.Sex = false;  	}  	hum.IDcardNo = identity;  	//身份证号码  	hum.Telephone = mobile;  	//电话  	hum.BankNum = bank;  	//bank                     	hum.BankId = Convert.ToInt32 (account);  	//开户行  	hum.NativePlace = birth;  	hum.School = school;  	hum.Major = major;  	hum.GraduateTime = graduation;  	hum.Academic = education;  	hum.TrainTimes = 0;  	hum.LevelEditTimes = 0;  	if (weight.Length != 0) {  		hum.Weight = Convert.ToInt32 (weight);  	}  	if (height == "") {  		hum.Height = null;  	}  	else {  		hum.Height = Convert.ToInt32 (height);  	}  	hum.BWH = meas;  	hum.speciality = skill;  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = uniquenum + "-" + name + "-身份证";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hum.IDcardPhoto = ptho;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = uniquenum + "-" + name + "-银行卡";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hum.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  	 {  		string file = PicName2 (personal.FileName);  		var ptho = uniquenum + "-" + name + "-面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hum.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  	 {  		string file = PicName3 (student.FileName);  		var ptho = uniquenum + "-" + name + "-个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hum.Info = file;  	}  	#endregion  	hum.IsDraft = false;  	hum.EditManagerId = Session ["admin"].ToString ();  	hum.createTime = DateTime.Now;  	if (mm.Authority != 2) {  		hum.CreatedManagerID = Session ["admin"].ToString ();  	}  	else {  		hum.CreatedManagerID = mm.Boss;  	}  	hum.IsDelete = false;  	dal.HumanBasicFile.Add (hum);  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (captain.Length != 0 && office.Length != 0) {  	var mm = (from g in dal.Managers  	where g.UserId == captain  	select g).FirstOrDefault ();  	int cityid = Convert.ToInt32 (city);  	var city1 = (from s in dal.City  	where s.Id == cityid  	select s).FirstOrDefault ();  	#region 赋值给兼职人员  	hum.Boss = mm.Id;  	hum.city = city1.Id;  	hum.Name = name;  	hum.HumanLevel = rank;  	if (rank != "B") {  		hum.LevelEditTimes = 1;  	}  	if (uniquenum == null) {  		hum.uniNum = "string";  	}  	else {  		hum.uniNum = uniquenum;  	}  	if (sex == "男") {  		hum.Sex = true;  	}  	else {  		hum.Sex = false;  	}  	hum.IDcardNo = identity;  	//身份证号码  	hum.Telephone = mobile;  	//电话  	hum.BankNum = bank;  	//bank                     	hum.BankId = Convert.ToInt32 (account);  	//开户行  	hum.NativePlace = birth;  	hum.School = school;  	hum.Major = major;  	hum.GraduateTime = graduation;  	hum.Academic = education;  	hum.TrainTimes = 0;  	hum.LevelEditTimes = 0;  	if (weight.Length != 0) {  		hum.Weight = Convert.ToInt32 (weight);  	}  	if (height == "") {  		hum.Height = null;  	}  	else {  		hum.Height = Convert.ToInt32 (height);  	}  	hum.BWH = meas;  	hum.speciality = skill;  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = uniquenum + "-" + name + "-身份证";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hum.IDcardPhoto = ptho;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = uniquenum + "-" + name + "-银行卡";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hum.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  	 {  		string file = PicName2 (personal.FileName);  		var ptho = uniquenum + "-" + name + "-面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hum.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  	 {  		string file = PicName3 (student.FileName);  		var ptho = uniquenum + "-" + name + "-个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hum.Info = file;  	}  	#endregion  	hum.IsDraft = false;  	hum.EditManagerId = Session ["admin"].ToString ();  	hum.createTime = DateTime.Now;  	if (mm.Authority != 2) {  		hum.CreatedManagerID = Session ["admin"].ToString ();  	}  	else {  		hum.CreatedManagerID = mm.Boss;  	}  	hum.IsDelete = false;  	dal.HumanBasicFile.Add (hum);  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (captain.Length != 0 && office.Length != 0) {  	var mm = (from g in dal.Managers  	where g.UserId == captain  	select g).FirstOrDefault ();  	int cityid = Convert.ToInt32 (city);  	var city1 = (from s in dal.City  	where s.Id == cityid  	select s).FirstOrDefault ();  	#region 赋值给兼职人员  	hum.Boss = mm.Id;  	hum.city = city1.Id;  	hum.Name = name;  	hum.HumanLevel = rank;  	if (rank != "B") {  		hum.LevelEditTimes = 1;  	}  	if (uniquenum == null) {  		hum.uniNum = "string";  	}  	else {  		hum.uniNum = uniquenum;  	}  	if (sex == "男") {  		hum.Sex = true;  	}  	else {  		hum.Sex = false;  	}  	hum.IDcardNo = identity;  	//身份证号码  	hum.Telephone = mobile;  	//电话  	hum.BankNum = bank;  	//bank                     	hum.BankId = Convert.ToInt32 (account);  	//开户行  	hum.NativePlace = birth;  	hum.School = school;  	hum.Major = major;  	hum.GraduateTime = graduation;  	hum.Academic = education;  	hum.TrainTimes = 0;  	hum.LevelEditTimes = 0;  	if (weight.Length != 0) {  		hum.Weight = Convert.ToInt32 (weight);  	}  	if (height == "") {  		hum.Height = null;  	}  	else {  		hum.Height = Convert.ToInt32 (height);  	}  	hum.BWH = meas;  	hum.speciality = skill;  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = uniquenum + "-" + name + "-身份证";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hum.IDcardPhoto = ptho;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = uniquenum + "-" + name + "-银行卡";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hum.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  	 {  		string file = PicName2 (personal.FileName);  		var ptho = uniquenum + "-" + name + "-面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hum.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  	 {  		string file = PicName3 (student.FileName);  		var ptho = uniquenum + "-" + name + "-个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hum.Info = file;  	}  	#endregion  	hum.IsDraft = false;  	hum.EditManagerId = Session ["admin"].ToString ();  	hum.createTime = DateTime.Now;  	if (mm.Authority != 2) {  		hum.CreatedManagerID = Session ["admin"].ToString ();  	}  	else {  		hum.CreatedManagerID = mm.Boss;  	}  	hum.IsDelete = false;  	dal.HumanBasicFile.Add (hum);  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片   {  	string file = PicName (identityimage.FileName);  	var ptho = uniquenum + "-" + name + "-身份证";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  	ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  	hum.IDcardPhoto = ptho;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片   {  	string file = PicName (identityimage.FileName);  	var ptho = uniquenum + "-" + name + "-身份证";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  	ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  	hum.IDcardPhoto = ptho;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: ptho = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片   {  	string file = PicName1 (bankimage.FileName);  	var ptho = uniquenum + "-" + name + "-银行卡";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  	file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  	hum.BankCardPhoto = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片   {  	string file = PicName1 (bankimage.FileName);  	var ptho = uniquenum + "-" + name + "-银行卡";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  	file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  	hum.BankCardPhoto = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片   {  	string file = PicName2 (personal.FileName);  	var ptho = uniquenum + "-" + name + "-面试";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  	file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  	hum.InterfacePhoto = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片   {  	string file = PicName2 (personal.FileName);  	var ptho = uniquenum + "-" + name + "-面试";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  	file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  	hum.InterfacePhoto = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片   {  	string file = PicName3 (student.FileName);  	var ptho = uniquenum + "-" + name + "-个人声明";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  	file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  	hum.Info = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片   {  	string file = PicName3 (student.FileName);  	var ptho = uniquenum + "-" + name + "-个人声明";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  	file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  	hum.Info = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (mm.Authority != 2) {  	hum.CreatedManagerID = Session ["admin"].ToString ();  }  else {  	hum.CreatedManagerID = mm.Boss;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (captain.Length != 0 && office.Length != 0) {  	var mm = (from g in dal.Managers  	where g.UserId == captain  	select g).FirstOrDefault ();  	var city1 = (from s in dal.City  	where s.Name == city  	select s).FirstOrDefault ();  	#region 赋值给兼职人员  	hum.createTime = DateTime.Now;  	//创建时间  	hum.Boss = mm.Id;  	hum.city = city1.Id;  	hum.Name = name;  	hum.HumanLevel = rank;  	if (rank != "B") {  		hum.LevelEditTimes = 1;  	}  	if (uniquenum == null) {  		hum.uniNum = "string";  	}  	else {  		hum.uniNum = uniquenum;  	}  	if (sex == "男") {  		hum.Sex = true;  	}  	else {  		hum.Sex = false;  	}  	hum.IDcardNo = identity;  	//身份证号码  	hum.Telephone = mobile;  	//电话  	hum.BankNum = bank;  	//bank                     	hum.BankId = mm.Bank1.Id;  	//开户行  	hum.School = school;  	hum.Major = major;  	hum.GraduateTime = graduation;  	hum.NativePlace = birth;  	hum.TrainTimes = 0;  	hum.LevelEditTimes = 0;  	hum.Academic = education;  	if (weight.Length != 0) {  		hum.Weight = Convert.ToInt32 (weight);  	}  	if (height == "") {  		hum.Height = null;  	}  	else {  		hum.Height = Convert.ToInt32 (height);  	}  	hum.BWH = meas;  	hum.speciality = skill;  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = uniquenum + "-" + name + "-身份证";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hum.IDcardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = uniquenum + "-" + name + "-银行卡";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hum.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  	 {  		string file = PicName2 (personal.FileName);  		var ptho = uniquenum + "-" + name + "-面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hum.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  	 {  		string file = PicName3 (student.FileName);  		var ptho = uniquenum + "-" + name + "-个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hum.Info = file;  	}  	#endregion  	hum.IsDraft = false;  	hum.IsDelete = false;  	hum.EditManagerId = Session ["admin"].ToString ();  	hum.CreatedManagerID = Session ["admin"].ToString ();  	dal.Entry (hum).State = EntityState.Modified;  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (captain.Length != 0 && office.Length != 0) {  	var mm = (from g in dal.Managers  	where g.UserId == captain  	select g).FirstOrDefault ();  	var city1 = (from s in dal.City  	where s.Name == city  	select s).FirstOrDefault ();  	#region 赋值给兼职人员  	hum.createTime = DateTime.Now;  	//创建时间  	hum.Boss = mm.Id;  	hum.city = city1.Id;  	hum.Name = name;  	hum.HumanLevel = rank;  	if (rank != "B") {  		hum.LevelEditTimes = 1;  	}  	if (uniquenum == null) {  		hum.uniNum = "string";  	}  	else {  		hum.uniNum = uniquenum;  	}  	if (sex == "男") {  		hum.Sex = true;  	}  	else {  		hum.Sex = false;  	}  	hum.IDcardNo = identity;  	//身份证号码  	hum.Telephone = mobile;  	//电话  	hum.BankNum = bank;  	//bank                     	hum.BankId = mm.Bank1.Id;  	//开户行  	hum.School = school;  	hum.Major = major;  	hum.GraduateTime = graduation;  	hum.NativePlace = birth;  	hum.TrainTimes = 0;  	hum.LevelEditTimes = 0;  	hum.Academic = education;  	if (weight.Length != 0) {  		hum.Weight = Convert.ToInt32 (weight);  	}  	if (height == "") {  		hum.Height = null;  	}  	else {  		hum.Height = Convert.ToInt32 (height);  	}  	hum.BWH = meas;  	hum.speciality = skill;  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = uniquenum + "-" + name + "-身份证";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hum.IDcardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = uniquenum + "-" + name + "-银行卡";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hum.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  	 {  		string file = PicName2 (personal.FileName);  		var ptho = uniquenum + "-" + name + "-面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hum.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  	 {  		string file = PicName3 (student.FileName);  		var ptho = uniquenum + "-" + name + "-个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hum.Info = file;  	}  	#endregion  	hum.IsDraft = false;  	hum.IsDelete = false;  	hum.EditManagerId = Session ["admin"].ToString ();  	hum.CreatedManagerID = Session ["admin"].ToString ();  	dal.Entry (hum).State = EntityState.Modified;  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (captain.Length != 0 && office.Length != 0) {  	var mm = (from g in dal.Managers  	where g.UserId == captain  	select g).FirstOrDefault ();  	var city1 = (from s in dal.City  	where s.Name == city  	select s).FirstOrDefault ();  	#region 赋值给兼职人员  	hum.createTime = DateTime.Now;  	//创建时间  	hum.Boss = mm.Id;  	hum.city = city1.Id;  	hum.Name = name;  	hum.HumanLevel = rank;  	if (rank != "B") {  		hum.LevelEditTimes = 1;  	}  	if (uniquenum == null) {  		hum.uniNum = "string";  	}  	else {  		hum.uniNum = uniquenum;  	}  	if (sex == "男") {  		hum.Sex = true;  	}  	else {  		hum.Sex = false;  	}  	hum.IDcardNo = identity;  	//身份证号码  	hum.Telephone = mobile;  	//电话  	hum.BankNum = bank;  	//bank                     	hum.BankId = mm.Bank1.Id;  	//开户行  	hum.School = school;  	hum.Major = major;  	hum.GraduateTime = graduation;  	hum.NativePlace = birth;  	hum.TrainTimes = 0;  	hum.LevelEditTimes = 0;  	hum.Academic = education;  	if (weight.Length != 0) {  		hum.Weight = Convert.ToInt32 (weight);  	}  	if (height == "") {  		hum.Height = null;  	}  	else {  		hum.Height = Convert.ToInt32 (height);  	}  	hum.BWH = meas;  	hum.speciality = skill;  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = uniquenum + "-" + name + "-身份证";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hum.IDcardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = uniquenum + "-" + name + "-银行卡";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hum.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  	 {  		string file = PicName2 (personal.FileName);  		var ptho = uniquenum + "-" + name + "-面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hum.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  	 {  		string file = PicName3 (student.FileName);  		var ptho = uniquenum + "-" + name + "-个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hum.Info = file;  	}  	#endregion  	hum.IsDraft = false;  	hum.IsDelete = false;  	hum.EditManagerId = Session ["admin"].ToString ();  	hum.CreatedManagerID = Session ["admin"].ToString ();  	dal.Entry (hum).State = EntityState.Modified;  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (captain.Length != 0 && office.Length != 0) {  	var mm = (from g in dal.Managers  	where g.UserId == captain  	select g).FirstOrDefault ();  	var city1 = (from s in dal.City  	where s.Name == city  	select s).FirstOrDefault ();  	#region 赋值给兼职人员  	hum.createTime = DateTime.Now;  	//创建时间  	hum.Boss = mm.Id;  	hum.city = city1.Id;  	hum.Name = name;  	hum.HumanLevel = rank;  	if (rank != "B") {  		hum.LevelEditTimes = 1;  	}  	if (uniquenum == null) {  		hum.uniNum = "string";  	}  	else {  		hum.uniNum = uniquenum;  	}  	if (sex == "男") {  		hum.Sex = true;  	}  	else {  		hum.Sex = false;  	}  	hum.IDcardNo = identity;  	//身份证号码  	hum.Telephone = mobile;  	//电话  	hum.BankNum = bank;  	//bank                     	hum.BankId = mm.Bank1.Id;  	//开户行  	hum.School = school;  	hum.Major = major;  	hum.GraduateTime = graduation;  	hum.NativePlace = birth;  	hum.TrainTimes = 0;  	hum.LevelEditTimes = 0;  	hum.Academic = education;  	if (weight.Length != 0) {  		hum.Weight = Convert.ToInt32 (weight);  	}  	if (height == "") {  		hum.Height = null;  	}  	else {  		hum.Height = Convert.ToInt32 (height);  	}  	hum.BWH = meas;  	hum.speciality = skill;  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = uniquenum + "-" + name + "-身份证";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hum.IDcardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = uniquenum + "-" + name + "-银行卡";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hum.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  	 {  		string file = PicName2 (personal.FileName);  		var ptho = uniquenum + "-" + name + "-面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hum.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  	 {  		string file = PicName3 (student.FileName);  		var ptho = uniquenum + "-" + name + "-个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hum.Info = file;  	}  	#endregion  	hum.IsDraft = false;  	hum.IsDelete = false;  	hum.EditManagerId = Session ["admin"].ToString ();  	hum.CreatedManagerID = Session ["admin"].ToString ();  	dal.Entry (hum).State = EntityState.Modified;  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (captain.Length != 0 && office.Length != 0) {  	var mm = (from g in dal.Managers  	where g.UserId == captain  	select g).FirstOrDefault ();  	var city1 = (from s in dal.City  	where s.Name == city  	select s).FirstOrDefault ();  	#region 赋值给兼职人员  	hum.createTime = DateTime.Now;  	//创建时间  	hum.Boss = mm.Id;  	hum.city = city1.Id;  	hum.Name = name;  	hum.HumanLevel = rank;  	if (rank != "B") {  		hum.LevelEditTimes = 1;  	}  	if (uniquenum == null) {  		hum.uniNum = "string";  	}  	else {  		hum.uniNum = uniquenum;  	}  	if (sex == "男") {  		hum.Sex = true;  	}  	else {  		hum.Sex = false;  	}  	hum.IDcardNo = identity;  	//身份证号码  	hum.Telephone = mobile;  	//电话  	hum.BankNum = bank;  	//bank                     	hum.BankId = mm.Bank1.Id;  	//开户行  	hum.School = school;  	hum.Major = major;  	hum.GraduateTime = graduation;  	hum.NativePlace = birth;  	hum.TrainTimes = 0;  	hum.LevelEditTimes = 0;  	hum.Academic = education;  	if (weight.Length != 0) {  		hum.Weight = Convert.ToInt32 (weight);  	}  	if (height == "") {  		hum.Height = null;  	}  	else {  		hum.Height = Convert.ToInt32 (height);  	}  	hum.BWH = meas;  	hum.speciality = skill;  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = uniquenum + "-" + name + "-身份证";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hum.IDcardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = uniquenum + "-" + name + "-银行卡";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hum.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  	 {  		string file = PicName2 (personal.FileName);  		var ptho = uniquenum + "-" + name + "-面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hum.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  	 {  		string file = PicName3 (student.FileName);  		var ptho = uniquenum + "-" + name + "-个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hum.Info = file;  	}  	#endregion  	hum.IsDraft = false;  	hum.IsDelete = false;  	hum.EditManagerId = Session ["admin"].ToString ();  	hum.CreatedManagerID = Session ["admin"].ToString ();  	dal.Entry (hum).State = EntityState.Modified;  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (captain.Length != 0 && office.Length != 0) {  	var mm = (from g in dal.Managers  	where g.UserId == captain  	select g).FirstOrDefault ();  	var city1 = (from s in dal.City  	where s.Name == city  	select s).FirstOrDefault ();  	#region 赋值给兼职人员  	hum.createTime = DateTime.Now;  	//创建时间  	hum.Boss = mm.Id;  	hum.city = city1.Id;  	hum.Name = name;  	hum.HumanLevel = rank;  	if (rank != "B") {  		hum.LevelEditTimes = 1;  	}  	if (uniquenum == null) {  		hum.uniNum = "string";  	}  	else {  		hum.uniNum = uniquenum;  	}  	if (sex == "男") {  		hum.Sex = true;  	}  	else {  		hum.Sex = false;  	}  	hum.IDcardNo = identity;  	//身份证号码  	hum.Telephone = mobile;  	//电话  	hum.BankNum = bank;  	//bank                     	hum.BankId = mm.Bank1.Id;  	//开户行  	hum.School = school;  	hum.Major = major;  	hum.GraduateTime = graduation;  	hum.NativePlace = birth;  	hum.TrainTimes = 0;  	hum.LevelEditTimes = 0;  	hum.Academic = education;  	if (weight.Length != 0) {  		hum.Weight = Convert.ToInt32 (weight);  	}  	if (height == "") {  		hum.Height = null;  	}  	else {  		hum.Height = Convert.ToInt32 (height);  	}  	hum.BWH = meas;  	hum.speciality = skill;  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = uniquenum + "-" + name + "-身份证";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hum.IDcardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = uniquenum + "-" + name + "-银行卡";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hum.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  	 {  		string file = PicName2 (personal.FileName);  		var ptho = uniquenum + "-" + name + "-面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hum.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  	 {  		string file = PicName3 (student.FileName);  		var ptho = uniquenum + "-" + name + "-个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hum.Info = file;  	}  	#endregion  	hum.IsDraft = false;  	hum.IsDelete = false;  	hum.EditManagerId = Session ["admin"].ToString ();  	hum.CreatedManagerID = Session ["admin"].ToString ();  	dal.Entry (hum).State = EntityState.Modified;  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (captain.Length != 0 && office.Length != 0) {  	var mm = (from g in dal.Managers  	where g.UserId == captain  	select g).FirstOrDefault ();  	var city1 = (from s in dal.City  	where s.Name == city  	select s).FirstOrDefault ();  	#region 赋值给兼职人员  	hum.createTime = DateTime.Now;  	//创建时间  	hum.Boss = mm.Id;  	hum.city = city1.Id;  	hum.Name = name;  	hum.HumanLevel = rank;  	if (rank != "B") {  		hum.LevelEditTimes = 1;  	}  	if (uniquenum == null) {  		hum.uniNum = "string";  	}  	else {  		hum.uniNum = uniquenum;  	}  	if (sex == "男") {  		hum.Sex = true;  	}  	else {  		hum.Sex = false;  	}  	hum.IDcardNo = identity;  	//身份证号码  	hum.Telephone = mobile;  	//电话  	hum.BankNum = bank;  	//bank                     	hum.BankId = mm.Bank1.Id;  	//开户行  	hum.School = school;  	hum.Major = major;  	hum.GraduateTime = graduation;  	hum.NativePlace = birth;  	hum.TrainTimes = 0;  	hum.LevelEditTimes = 0;  	hum.Academic = education;  	if (weight.Length != 0) {  		hum.Weight = Convert.ToInt32 (weight);  	}  	if (height == "") {  		hum.Height = null;  	}  	else {  		hum.Height = Convert.ToInt32 (height);  	}  	hum.BWH = meas;  	hum.speciality = skill;  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = uniquenum + "-" + name + "-身份证";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hum.IDcardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = uniquenum + "-" + name + "-银行卡";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hum.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  	 {  		string file = PicName2 (personal.FileName);  		var ptho = uniquenum + "-" + name + "-面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hum.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  	 {  		string file = PicName3 (student.FileName);  		var ptho = uniquenum + "-" + name + "-个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hum.Info = file;  	}  	#endregion  	hum.IsDraft = false;  	hum.IsDelete = false;  	hum.EditManagerId = Session ["admin"].ToString ();  	hum.CreatedManagerID = Session ["admin"].ToString ();  	dal.Entry (hum).State = EntityState.Modified;  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (captain.Length != 0 && office.Length != 0) {  	var mm = (from g in dal.Managers  	where g.UserId == captain  	select g).FirstOrDefault ();  	var city1 = (from s in dal.City  	where s.Name == city  	select s).FirstOrDefault ();  	#region 赋值给兼职人员  	hum.createTime = DateTime.Now;  	//创建时间  	hum.Boss = mm.Id;  	hum.city = city1.Id;  	hum.Name = name;  	hum.HumanLevel = rank;  	if (rank != "B") {  		hum.LevelEditTimes = 1;  	}  	if (uniquenum == null) {  		hum.uniNum = "string";  	}  	else {  		hum.uniNum = uniquenum;  	}  	if (sex == "男") {  		hum.Sex = true;  	}  	else {  		hum.Sex = false;  	}  	hum.IDcardNo = identity;  	//身份证号码  	hum.Telephone = mobile;  	//电话  	hum.BankNum = bank;  	//bank                     	hum.BankId = mm.Bank1.Id;  	//开户行  	hum.School = school;  	hum.Major = major;  	hum.GraduateTime = graduation;  	hum.NativePlace = birth;  	hum.TrainTimes = 0;  	hum.LevelEditTimes = 0;  	hum.Academic = education;  	if (weight.Length != 0) {  		hum.Weight = Convert.ToInt32 (weight);  	}  	if (height == "") {  		hum.Height = null;  	}  	else {  		hum.Height = Convert.ToInt32 (height);  	}  	hum.BWH = meas;  	hum.speciality = skill;  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = uniquenum + "-" + name + "-身份证";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hum.IDcardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = uniquenum + "-" + name + "-银行卡";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hum.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片  	 {  		string file = PicName2 (personal.FileName);  		var ptho = uniquenum + "-" + name + "-面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hum.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片  	 {  		string file = PicName3 (student.FileName);  		var ptho = uniquenum + "-" + name + "-个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hum.Info = file;  	}  	#endregion  	hum.IsDraft = false;  	hum.IsDelete = false;  	hum.EditManagerId = Session ["admin"].ToString ();  	hum.CreatedManagerID = Session ["admin"].ToString ();  	dal.Entry (hum).State = EntityState.Modified;  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片   {  	string file = PicName (identityimage.FileName);  	var ptho = uniquenum + "-" + name + "-身份证";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  	file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  	hum.IDcardPhoto = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片   {  	string file = PicName (identityimage.FileName);  	var ptho = uniquenum + "-" + name + "-身份证";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  	file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  	hum.IDcardPhoto = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片   {  	string file = PicName1 (bankimage.FileName);  	var ptho = uniquenum + "-" + name + "-银行卡";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  	file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  	hum.BankCardPhoto = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片   {  	string file = PicName1 (bankimage.FileName);  	var ptho = uniquenum + "-" + name + "-银行卡";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  	file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  	hum.BankCardPhoto = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片   {  	string file = PicName2 (personal.FileName);  	var ptho = uniquenum + "-" + name + "-面试";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  	file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  	hum.InterfacePhoto = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (!string.IsNullOrEmpty (personal.FileName))//上传面试照片   {  	string file = PicName2 (personal.FileName);  	var ptho = uniquenum + "-" + name + "-面试";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	personal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  	file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  	hum.InterfacePhoto = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: file = Suo.TouXiangSuoFang (personal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片   {  	string file = PicName3 (student.FileName);  	var ptho = uniquenum + "-" + name + "-个人声明";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  	file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  	hum.Info = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片   {  	string file = PicName3 (student.FileName);  	var ptho = uniquenum + "-" + name + "-个人声明";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	student.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  	file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  	hum.Info = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The following statement contains a magic number: file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,saveDraft,The following statement contains a magic number: if (admin != "admin") {  	string uniquenum = Request.Params.Get ("uniquenum");  	//唯一号  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.Managers.UserId == admin && s.IsDraft == true  	select s).Distinct ().FirstOrDefault ();  	bool success = true;  	#region 从网页中获取数据  	string name = Request.Params.Get ("name");  	//真实姓名  	string birth = Request.Params.Get ("birth");  	//贯集  	string Mobile = Request.Params.Get ("mobile");  	//电话  	if (!string.IsNullOrEmpty (Mobile) && Mobile.Length != 11) {  		success = false;  	}  	string identity = Request.Params.Get ("identity");  	//身份证号  	if (!string.IsNullOrEmpty (identity) && identity.Length != 18) {  		success = false;  		//身份证号必须是18位  	}  	string bank = Request.Params.Get ("bank");  	//银行卡号  	string school = Request.Params.Get ("school");  	//学校  	string major = Request.Params.Get ("major");  	//专业  	string graduatedate = Request.Params.Get ("graduationdate");  	//毕业时间  	string academic = Request.Params.Get ("academic");  	//学历  	string height = Request.Params.Get ("height");  	//身高  	string weight = Request.Params.Get ("weight");  	//体重  	string BWH = Request.Params.Get ("BWH");  	//三围  	string speciality = Request.Params.Get ("speciality");  	//特长  	#endregion  	#region 草稿已经存在  	if (hum != null) {  		if (success == true) {  			hum.CreatedManagerID = admin;  			hum.EditManagerId = admin;  			hum.createTime = DateTime.Now;  			hum.uniNum = uniquenum;  			if (!string.IsNullOrEmpty (name)) {  				hum.Name = name;  			}  			if (!string.IsNullOrEmpty (Mobile)) {  				hum.Telephone = Mobile;  			}  			if (!string.IsNullOrEmpty (birth)) {  				hum.NativePlace = birth;  			}  			if (!string.IsNullOrEmpty (identity)) {  				hum.IDcardNo = identity;  			}  			if (!string.IsNullOrEmpty (bank)) {  				hum.BankNum = bank;  			}  			if (!string.IsNullOrEmpty (school)) {  				hum.School = school;  			}  			if (!string.IsNullOrEmpty (major)) {  				hum.Major = major;  			}  			if (!string.IsNullOrEmpty (graduatedate)) {  				hum.GraduateTime = graduatedate;  			}  			if (!string.IsNullOrEmpty (height)) {  				hum.Height = Convert.ToInt32 (height);  			}  			if (!string.IsNullOrEmpty (weight)) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (!string.IsNullOrEmpty (BWH)) {  				hum.BWH = BWH;  			}  			if (!string.IsNullOrEmpty (speciality)) {  				hum.speciality = speciality;  			}  			if (!string.IsNullOrEmpty (academic)) {  				hum.Academic = academic;  			}  			hum.IsDraft = true;  			dal.Entry (hum).State = EntityState.Modified;  			//dal.Configuration.ValidateOnSaveEnabled = false;  			dal.SaveChanges ();  			dal.Configuration.ValidateOnSaveEnabled = true;  			var data = new {  				Value = true  			};  			return Json (data);  		}  	}  	#endregion  	#region 草稿不存在  	if (hum == null) {  		hum = new HumanBasicFile ();  		if (success == true) {  			hum.Id = Guid.NewGuid ();  			hum.CreatedManagerID = admin;  			hum.EditManagerId = admin;  			hum.createTime = DateTime.Now;  			hum.uniNum = uniquenum;  			if (!string.IsNullOrEmpty (name)) {  				hum.Name = name;  			}  			if (!string.IsNullOrEmpty (Mobile)) {  				hum.Telephone = Mobile;  			}  			if (!string.IsNullOrEmpty (birth)) {  				hum.NativePlace = birth;  			}  			if (!string.IsNullOrEmpty (identity)) {  				hum.IDcardNo = identity;  			}  			if (!string.IsNullOrEmpty (bank)) {  				hum.BankNum = bank;  			}  			if (!string.IsNullOrEmpty (school)) {  				hum.School = school;  			}  			if (!string.IsNullOrEmpty (major)) {  				hum.Major = major;  			}  			if (!string.IsNullOrEmpty (graduatedate)) {  				hum.GraduateTime = graduatedate;  			}  			if (!string.IsNullOrEmpty (height)) {  				hum.Height = Convert.ToInt32 (height);  			}  			if (!string.IsNullOrEmpty (weight)) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (!string.IsNullOrEmpty (BWH)) {  				hum.BWH = BWH;  			}  			if (!string.IsNullOrEmpty (speciality)) {  				hum.speciality = speciality;  			}  			if (!string.IsNullOrEmpty (academic)) {  				hum.Academic = academic;  			}  			hum.IsDraft = true;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			var data = new {  				Value = true  			};  			return Json (data);  		}  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,saveDraft,The following statement contains a magic number: if (admin != "admin") {  	string uniquenum = Request.Params.Get ("uniquenum");  	//唯一号  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	where s.Managers.UserId == admin && s.IsDraft == true  	select s).Distinct ().FirstOrDefault ();  	bool success = true;  	#region 从网页中获取数据  	string name = Request.Params.Get ("name");  	//真实姓名  	string birth = Request.Params.Get ("birth");  	//贯集  	string Mobile = Request.Params.Get ("mobile");  	//电话  	if (!string.IsNullOrEmpty (Mobile) && Mobile.Length != 11) {  		success = false;  	}  	string identity = Request.Params.Get ("identity");  	//身份证号  	if (!string.IsNullOrEmpty (identity) && identity.Length != 18) {  		success = false;  		//身份证号必须是18位  	}  	string bank = Request.Params.Get ("bank");  	//银行卡号  	string school = Request.Params.Get ("school");  	//学校  	string major = Request.Params.Get ("major");  	//专业  	string graduatedate = Request.Params.Get ("graduationdate");  	//毕业时间  	string academic = Request.Params.Get ("academic");  	//学历  	string height = Request.Params.Get ("height");  	//身高  	string weight = Request.Params.Get ("weight");  	//体重  	string BWH = Request.Params.Get ("BWH");  	//三围  	string speciality = Request.Params.Get ("speciality");  	//特长  	#endregion  	#region 草稿已经存在  	if (hum != null) {  		if (success == true) {  			hum.CreatedManagerID = admin;  			hum.EditManagerId = admin;  			hum.createTime = DateTime.Now;  			hum.uniNum = uniquenum;  			if (!string.IsNullOrEmpty (name)) {  				hum.Name = name;  			}  			if (!string.IsNullOrEmpty (Mobile)) {  				hum.Telephone = Mobile;  			}  			if (!string.IsNullOrEmpty (birth)) {  				hum.NativePlace = birth;  			}  			if (!string.IsNullOrEmpty (identity)) {  				hum.IDcardNo = identity;  			}  			if (!string.IsNullOrEmpty (bank)) {  				hum.BankNum = bank;  			}  			if (!string.IsNullOrEmpty (school)) {  				hum.School = school;  			}  			if (!string.IsNullOrEmpty (major)) {  				hum.Major = major;  			}  			if (!string.IsNullOrEmpty (graduatedate)) {  				hum.GraduateTime = graduatedate;  			}  			if (!string.IsNullOrEmpty (height)) {  				hum.Height = Convert.ToInt32 (height);  			}  			if (!string.IsNullOrEmpty (weight)) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (!string.IsNullOrEmpty (BWH)) {  				hum.BWH = BWH;  			}  			if (!string.IsNullOrEmpty (speciality)) {  				hum.speciality = speciality;  			}  			if (!string.IsNullOrEmpty (academic)) {  				hum.Academic = academic;  			}  			hum.IsDraft = true;  			dal.Entry (hum).State = EntityState.Modified;  			//dal.Configuration.ValidateOnSaveEnabled = false;  			dal.SaveChanges ();  			dal.Configuration.ValidateOnSaveEnabled = true;  			var data = new {  				Value = true  			};  			return Json (data);  		}  	}  	#endregion  	#region 草稿不存在  	if (hum == null) {  		hum = new HumanBasicFile ();  		if (success == true) {  			hum.Id = Guid.NewGuid ();  			hum.CreatedManagerID = admin;  			hum.EditManagerId = admin;  			hum.createTime = DateTime.Now;  			hum.uniNum = uniquenum;  			if (!string.IsNullOrEmpty (name)) {  				hum.Name = name;  			}  			if (!string.IsNullOrEmpty (Mobile)) {  				hum.Telephone = Mobile;  			}  			if (!string.IsNullOrEmpty (birth)) {  				hum.NativePlace = birth;  			}  			if (!string.IsNullOrEmpty (identity)) {  				hum.IDcardNo = identity;  			}  			if (!string.IsNullOrEmpty (bank)) {  				hum.BankNum = bank;  			}  			if (!string.IsNullOrEmpty (school)) {  				hum.School = school;  			}  			if (!string.IsNullOrEmpty (major)) {  				hum.Major = major;  			}  			if (!string.IsNullOrEmpty (graduatedate)) {  				hum.GraduateTime = graduatedate;  			}  			if (!string.IsNullOrEmpty (height)) {  				hum.Height = Convert.ToInt32 (height);  			}  			if (!string.IsNullOrEmpty (weight)) {  				hum.Weight = Convert.ToInt32 (weight);  			}  			if (!string.IsNullOrEmpty (BWH)) {  				hum.BWH = BWH;  			}  			if (!string.IsNullOrEmpty (speciality)) {  				hum.speciality = speciality;  			}  			if (!string.IsNullOrEmpty (academic)) {  				hum.Academic = academic;  			}  			hum.IsDraft = true;  			dal.HumanBasicFile.Add (hum);  			dal.SaveChanges ();  			var data = new {  				Value = true  			};  			return Json (data);  		}  		#endregion  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,saveDraft,The following statement contains a magic number: if (!string.IsNullOrEmpty (Mobile) && Mobile.Length != 11) {  	success = false;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,saveDraft,The following statement contains a magic number: if (!string.IsNullOrEmpty (identity) && identity.Length != 18) {  	success = false;  	//身份证号必须是18位  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Trian_info,The following statement contains a magic number: if (string.IsNullOrEmpty (grade)) {  	ModelState.AddModelError ("trainInfo.grade"' "培训分数不能为空");  }  else if (!regexNum.IsMatch (grade)) {  	ModelState.AddModelError ("trainInfo.grade"' "培训分数必须为整数");  }  else if (Convert.ToInt32 (grade) > 100) {  	ModelState.AddModelError ("trainInfo.grade"' "培训分数必须<100");  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Trian_info,The following statement contains a magic number: if (!regexNum.IsMatch (grade)) {  	ModelState.AddModelError ("trainInfo.grade"' "培训分数必须为整数");  }  else if (Convert.ToInt32 (grade) > 100) {  	ModelState.AddModelError ("trainInfo.grade"' "培训分数必须<100");  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Trian_info,The following statement contains a magic number: if (Convert.ToInt32 (grade) > 100) {  	ModelState.AddModelError ("trainInfo.grade"' "培训分数必须<100");  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unionUniquenumHtmlValue,The following statement contains a magic number: try {  	//HumanBasicFile hum = dal.HumanBasicFile.FirstOrDefault();  	////city2 = hum.City1.Name;//城市    	//name2 = hum.Name;//姓名  	//identity2 = hum.IDcardNo; //身份证号  	//office2 = hum.City1.Office.Name; //办事处  	List<HumanBasicFile> dj = (from s in dal.HumanBasicFile  	from g in dal.DianJian  	where g.HumanId == s.Id && (s.IsDelete == null || s.IsDelete == false) && g.Score < 80  	select s).Distinct ().OrderBy (a => a.uniNum).ToList ();  	if (authority != "管理员") {  		Managers man = new Managers ();  		if (authority == "小队长") {  			string boss_String = (from d in dal.Managers  			where d.UserId == admin  			select d.Boss).FirstOrDefault ();  			man = (from d in dal.Managers  			where d.UserId == boss_String  			select d).FirstOrDefault ();  		}  		else if (authority == "督导") {  			man = (from s in dal.Managers  			where s.UserId == admin && s.IsDraft == false  			select s).FirstOrDefault ();  		}  		else {  			return View ("~/Views/Shared/AuthorityError.cshtml");  		}  		captain2 += "<option value=\"" + man.UserId + "\">" + man.UserId + "</option>";  		office2 = man.City1.Office.Name;  		city2 = man.City1.Name;  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where (man.Id == s.Boss) && (s.IsDelete == null || s.IsDelete == false)  		select s).Distinct ().OrderBy (a => a.uniNum).FirstOrDefault ();  		if (hum != null) {  			identity2 = hum.IDcardNo;  			name2 = hum.Name;  			remark = hum.Remark;  		}  		List<HumanBasicFile> un1 = (from s in dal.HumanBasicFile  		where man.Id == s.Boss && (s.IsDelete == null || s.IsDelete == false)  		select s).Distinct ().OrderBy (a => a.uniNum).ToList ();  		foreach (var item1 in un1) {  			uniquenum2 += "<option value=\"" + item1.uniNum + "\">" + item1.uniNum + "</option>";  			//唯一号  		}  		//foreach (var iten2 in dj)  		//{  		//    uniquenum2 += "<option value=\"" + iten2.uniNum + "\">" + iten2.uniNum + "</option>";//唯一号  		//}  	}  	else {  		Managers man = (from s in dal.Managers  		where s.Authority != 0 && s.IsDraft == false  		select s).FirstOrDefault ();  		office2 = man.City1.Office.Name;  		//办事处  		city2 = man.City1.Name;  		captain2 += "<option value=\"" + man.UserId + "\">" + man.UserId + "</option>";  		//上级  		HumanBasicFile hum = (from s in dal.HumanBasicFile  		where man.Id == s.Boss && (s.IsDelete == null || s.IsDelete == false)  		select s).Distinct ().OrderBy (a => a.uniNum).Distinct ().OrderBy (a => a.uniNum).FirstOrDefault ();  		if (hum != null) {  			identity2 = hum.IDcardNo;  			name2 = hum.Name;  		}  		foreach (var item in list) {  			if (item.UserId != man.UserId) {  				captain2 += "<option value=\"" + item.UserId + "\">" + item.UserId + "</option>";  				//上级    			}  		}  		List<HumanBasicFile> un = (from s in dal.HumanBasicFile  		where man.Id == s.Boss && (s.IsDelete == null || s.IsDelete == false)  		select s).Distinct ().OrderBy (a => a.uniNum).ToList ();  		foreach (var item1 in un) {  			uniquenum2 += "<option value=\"" + item1.uniNum + "\">" + item1.uniNum + "</option>";  			//唯一号  		}  		foreach (var item2 in dj) {  			uniquenum2 += "<option value=\"" + item2.uniNum + "\">" + item2.uniNum + "</option>";  			//唯一号  		}  	}  	var data = new {  		staffInfo = "yang"'  		name = name2'  		//名字  		identity = identity2'  		//身份证号码  		city = city2'  		uniquenumValue = uniquenum2'  		//唯一号  		captainValue = captain2'  		//上级      		office = office2'  		//办事处       		remark = remark  	};  	return Json (data);  }  catch {  	var data = new {    	};  	return Json (data);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,On_Duty,The following statement contains a magic number: if (dj == null) {  	dj = new AttendingInfo ();  	dj.Id = Guid.NewGuid ();  	#region  	if (!string.IsNullOrEmpty (image.FileName))//上传工作照片  	 {  		string file = PicName4 (image.FileName);  		var ptho = unique + "-" + name + "-上班照片";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		image.SaveAs (Server.MapPath ("~/uploadImg/workimage/") + ptho);  		file = Suo.TouXiangSuoFang (image' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  		dj.WorkPhoto = file;  	}  	#endregion  	#region 赋值给上班人员  	dj.HumanId = list.Id;  	var tt = (from s in dal.AttendingInfo  	where s.HumanId == list.Id && s.Date == date  	select s).Count ();  	if (tt >= 1) {  		ViewBag.shangban = 0;  		return View ();  	}  	dj.ActionName = activity.Trim ();  	dj.production = product;  	if (!string.IsNullOrEmpty (subsity)) {  		dj.BearFees = Convert.ToInt32 (subsity);  	}  	dj.StandardSalary = Convert.ToInt32 (workinfo);  	dj.Date = date;  	dj.Functions = work;  	var dd = (from s in dal.SShop  	where s.Id == store  	select s).FirstOrDefault ();  	if (dd != null) {  		dj.Department = dd.Id;  	}  	dj.Remark = remark;  	dj.IsDraft = false;  	dj.Creatorname = captain;  	if (!string.IsNullOrEmpty (newsId)) {  		dj.WorkContentId = Convert.ToInt32 (newsId);  	}  	dal.AttendingInfo.Add (dj);  	if (!string.IsNullOrEmpty (newsId)) {  		int newId = Convert.ToInt32 (newsId);  		WorkContent wc = (from d in dal.WorkContent  		where d.Id == newId  		select d).FirstOrDefault ();  		wc.MoneyCount = Convert.ToInt32 (subsity) + Convert.ToInt32 (workinfo);  		wc.AttendCount = wc.AttendCount + 1;  	}  	dal.SaveChanges ();  	#endregion  }  else {  	#region  	if (!string.IsNullOrEmpty (image.FileName))//上传个人声明照片  	 {  		string file = PicName3 (image.FileName);  		var ptho = unique + "-" + name + "-上班照片";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		image.SaveAs (Server.MapPath ("~/uploadImg/workimage/") + ptho);  		file = Suo.TouXiangSuoFang (image' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  		dj.WorkPhoto = file;  	}  	#endregion  	#region 赋值给上班人员  	dj.HumanId = list.Id;  	var tt = (from s in dal.AttendingInfo  	where s.HumanId == list.Id && s.Date == date  	select s).Count ();  	if (tt >= 1) {  		ViewBag.shangban = 0;  	}  	dj.ActionName = activity.Trim ();  	dj.production = product;  	if (!string.IsNullOrEmpty (subsity)) {  		dj.BearFees = Convert.ToInt32 (subsity);  	}  	dj.StandardSalary = Convert.ToInt32 (workinfo);  	dj.Date = date;  	dj.Functions = work;  	var dd = (from s in dal.SShop  	where s.Id == store  	select s).FirstOrDefault ();  	if (dd != null) {  		dj.Department = dd.Id;  	}  	dj.Remark = remark;  	dj.IsDraft = false;  	dj.Creatorname = captain;  	if (!string.IsNullOrEmpty (newsId)) {  		dj.WorkContentId = Convert.ToInt32 (newsId);  	}  	dal.Entry (dj).State = EntityState.Modified;  	if (!string.IsNullOrEmpty (newsId)) {  		int newId = Convert.ToInt32 (newsId);  		WorkContent wc = (from d in dal.WorkContent  		where d.Id == newId  		select d).FirstOrDefault ();  		wc.MoneyCount = Convert.ToInt32 (subsity) + Convert.ToInt32 (workinfo);  		wc.AttendCount = wc.AttendCount + 1;  	}  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,On_Duty,The following statement contains a magic number: if (dj == null) {  	dj = new AttendingInfo ();  	dj.Id = Guid.NewGuid ();  	#region  	if (!string.IsNullOrEmpty (image.FileName))//上传工作照片  	 {  		string file = PicName4 (image.FileName);  		var ptho = unique + "-" + name + "-上班照片";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		image.SaveAs (Server.MapPath ("~/uploadImg/workimage/") + ptho);  		file = Suo.TouXiangSuoFang (image' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  		dj.WorkPhoto = file;  	}  	#endregion  	#region 赋值给上班人员  	dj.HumanId = list.Id;  	var tt = (from s in dal.AttendingInfo  	where s.HumanId == list.Id && s.Date == date  	select s).Count ();  	if (tt >= 1) {  		ViewBag.shangban = 0;  		return View ();  	}  	dj.ActionName = activity.Trim ();  	dj.production = product;  	if (!string.IsNullOrEmpty (subsity)) {  		dj.BearFees = Convert.ToInt32 (subsity);  	}  	dj.StandardSalary = Convert.ToInt32 (workinfo);  	dj.Date = date;  	dj.Functions = work;  	var dd = (from s in dal.SShop  	where s.Id == store  	select s).FirstOrDefault ();  	if (dd != null) {  		dj.Department = dd.Id;  	}  	dj.Remark = remark;  	dj.IsDraft = false;  	dj.Creatorname = captain;  	if (!string.IsNullOrEmpty (newsId)) {  		dj.WorkContentId = Convert.ToInt32 (newsId);  	}  	dal.AttendingInfo.Add (dj);  	if (!string.IsNullOrEmpty (newsId)) {  		int newId = Convert.ToInt32 (newsId);  		WorkContent wc = (from d in dal.WorkContent  		where d.Id == newId  		select d).FirstOrDefault ();  		wc.MoneyCount = Convert.ToInt32 (subsity) + Convert.ToInt32 (workinfo);  		wc.AttendCount = wc.AttendCount + 1;  	}  	dal.SaveChanges ();  	#endregion  }  else {  	#region  	if (!string.IsNullOrEmpty (image.FileName))//上传个人声明照片  	 {  		string file = PicName3 (image.FileName);  		var ptho = unique + "-" + name + "-上班照片";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		image.SaveAs (Server.MapPath ("~/uploadImg/workimage/") + ptho);  		file = Suo.TouXiangSuoFang (image' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  		dj.WorkPhoto = file;  	}  	#endregion  	#region 赋值给上班人员  	dj.HumanId = list.Id;  	var tt = (from s in dal.AttendingInfo  	where s.HumanId == list.Id && s.Date == date  	select s).Count ();  	if (tt >= 1) {  		ViewBag.shangban = 0;  	}  	dj.ActionName = activity.Trim ();  	dj.production = product;  	if (!string.IsNullOrEmpty (subsity)) {  		dj.BearFees = Convert.ToInt32 (subsity);  	}  	dj.StandardSalary = Convert.ToInt32 (workinfo);  	dj.Date = date;  	dj.Functions = work;  	var dd = (from s in dal.SShop  	where s.Id == store  	select s).FirstOrDefault ();  	if (dd != null) {  		dj.Department = dd.Id;  	}  	dj.Remark = remark;  	dj.IsDraft = false;  	dj.Creatorname = captain;  	if (!string.IsNullOrEmpty (newsId)) {  		dj.WorkContentId = Convert.ToInt32 (newsId);  	}  	dal.Entry (dj).State = EntityState.Modified;  	if (!string.IsNullOrEmpty (newsId)) {  		int newId = Convert.ToInt32 (newsId);  		WorkContent wc = (from d in dal.WorkContent  		where d.Id == newId  		select d).FirstOrDefault ();  		wc.MoneyCount = Convert.ToInt32 (subsity) + Convert.ToInt32 (workinfo);  		wc.AttendCount = wc.AttendCount + 1;  	}  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,On_Duty,The following statement contains a magic number: if (dj == null) {  	dj = new AttendingInfo ();  	dj.Id = Guid.NewGuid ();  	#region  	if (!string.IsNullOrEmpty (image.FileName))//上传工作照片  	 {  		string file = PicName4 (image.FileName);  		var ptho = unique + "-" + name + "-上班照片";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		image.SaveAs (Server.MapPath ("~/uploadImg/workimage/") + ptho);  		file = Suo.TouXiangSuoFang (image' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  		dj.WorkPhoto = file;  	}  	#endregion  	#region 赋值给上班人员  	dj.HumanId = list.Id;  	var tt = (from s in dal.AttendingInfo  	where s.HumanId == list.Id && s.Date == date  	select s).Count ();  	if (tt >= 1) {  		ViewBag.shangban = 0;  		return View ();  	}  	dj.ActionName = activity.Trim ();  	dj.production = product;  	if (!string.IsNullOrEmpty (subsity)) {  		dj.BearFees = Convert.ToInt32 (subsity);  	}  	dj.StandardSalary = Convert.ToInt32 (workinfo);  	dj.Date = date;  	dj.Functions = work;  	var dd = (from s in dal.SShop  	where s.Id == store  	select s).FirstOrDefault ();  	if (dd != null) {  		dj.Department = dd.Id;  	}  	dj.Remark = remark;  	dj.IsDraft = false;  	dj.Creatorname = captain;  	if (!string.IsNullOrEmpty (newsId)) {  		dj.WorkContentId = Convert.ToInt32 (newsId);  	}  	dal.AttendingInfo.Add (dj);  	if (!string.IsNullOrEmpty (newsId)) {  		int newId = Convert.ToInt32 (newsId);  		WorkContent wc = (from d in dal.WorkContent  		where d.Id == newId  		select d).FirstOrDefault ();  		wc.MoneyCount = Convert.ToInt32 (subsity) + Convert.ToInt32 (workinfo);  		wc.AttendCount = wc.AttendCount + 1;  	}  	dal.SaveChanges ();  	#endregion  }  else {  	#region  	if (!string.IsNullOrEmpty (image.FileName))//上传个人声明照片  	 {  		string file = PicName3 (image.FileName);  		var ptho = unique + "-" + name + "-上班照片";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		image.SaveAs (Server.MapPath ("~/uploadImg/workimage/") + ptho);  		file = Suo.TouXiangSuoFang (image' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  		dj.WorkPhoto = file;  	}  	#endregion  	#region 赋值给上班人员  	dj.HumanId = list.Id;  	var tt = (from s in dal.AttendingInfo  	where s.HumanId == list.Id && s.Date == date  	select s).Count ();  	if (tt >= 1) {  		ViewBag.shangban = 0;  	}  	dj.ActionName = activity.Trim ();  	dj.production = product;  	if (!string.IsNullOrEmpty (subsity)) {  		dj.BearFees = Convert.ToInt32 (subsity);  	}  	dj.StandardSalary = Convert.ToInt32 (workinfo);  	dj.Date = date;  	dj.Functions = work;  	var dd = (from s in dal.SShop  	where s.Id == store  	select s).FirstOrDefault ();  	if (dd != null) {  		dj.Department = dd.Id;  	}  	dj.Remark = remark;  	dj.IsDraft = false;  	dj.Creatorname = captain;  	if (!string.IsNullOrEmpty (newsId)) {  		dj.WorkContentId = Convert.ToInt32 (newsId);  	}  	dal.Entry (dj).State = EntityState.Modified;  	if (!string.IsNullOrEmpty (newsId)) {  		int newId = Convert.ToInt32 (newsId);  		WorkContent wc = (from d in dal.WorkContent  		where d.Id == newId  		select d).FirstOrDefault ();  		wc.MoneyCount = Convert.ToInt32 (subsity) + Convert.ToInt32 (workinfo);  		wc.AttendCount = wc.AttendCount + 1;  	}  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,On_Duty,The following statement contains a magic number: if (dj == null) {  	dj = new AttendingInfo ();  	dj.Id = Guid.NewGuid ();  	#region  	if (!string.IsNullOrEmpty (image.FileName))//上传工作照片  	 {  		string file = PicName4 (image.FileName);  		var ptho = unique + "-" + name + "-上班照片";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		image.SaveAs (Server.MapPath ("~/uploadImg/workimage/") + ptho);  		file = Suo.TouXiangSuoFang (image' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  		dj.WorkPhoto = file;  	}  	#endregion  	#region 赋值给上班人员  	dj.HumanId = list.Id;  	var tt = (from s in dal.AttendingInfo  	where s.HumanId == list.Id && s.Date == date  	select s).Count ();  	if (tt >= 1) {  		ViewBag.shangban = 0;  		return View ();  	}  	dj.ActionName = activity.Trim ();  	dj.production = product;  	if (!string.IsNullOrEmpty (subsity)) {  		dj.BearFees = Convert.ToInt32 (subsity);  	}  	dj.StandardSalary = Convert.ToInt32 (workinfo);  	dj.Date = date;  	dj.Functions = work;  	var dd = (from s in dal.SShop  	where s.Id == store  	select s).FirstOrDefault ();  	if (dd != null) {  		dj.Department = dd.Id;  	}  	dj.Remark = remark;  	dj.IsDraft = false;  	dj.Creatorname = captain;  	if (!string.IsNullOrEmpty (newsId)) {  		dj.WorkContentId = Convert.ToInt32 (newsId);  	}  	dal.AttendingInfo.Add (dj);  	if (!string.IsNullOrEmpty (newsId)) {  		int newId = Convert.ToInt32 (newsId);  		WorkContent wc = (from d in dal.WorkContent  		where d.Id == newId  		select d).FirstOrDefault ();  		wc.MoneyCount = Convert.ToInt32 (subsity) + Convert.ToInt32 (workinfo);  		wc.AttendCount = wc.AttendCount + 1;  	}  	dal.SaveChanges ();  	#endregion  }  else {  	#region  	if (!string.IsNullOrEmpty (image.FileName))//上传个人声明照片  	 {  		string file = PicName3 (image.FileName);  		var ptho = unique + "-" + name + "-上班照片";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		image.SaveAs (Server.MapPath ("~/uploadImg/workimage/") + ptho);  		file = Suo.TouXiangSuoFang (image' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  		dj.WorkPhoto = file;  	}  	#endregion  	#region 赋值给上班人员  	dj.HumanId = list.Id;  	var tt = (from s in dal.AttendingInfo  	where s.HumanId == list.Id && s.Date == date  	select s).Count ();  	if (tt >= 1) {  		ViewBag.shangban = 0;  	}  	dj.ActionName = activity.Trim ();  	dj.production = product;  	if (!string.IsNullOrEmpty (subsity)) {  		dj.BearFees = Convert.ToInt32 (subsity);  	}  	dj.StandardSalary = Convert.ToInt32 (workinfo);  	dj.Date = date;  	dj.Functions = work;  	var dd = (from s in dal.SShop  	where s.Id == store  	select s).FirstOrDefault ();  	if (dd != null) {  		dj.Department = dd.Id;  	}  	dj.Remark = remark;  	dj.IsDraft = false;  	dj.Creatorname = captain;  	if (!string.IsNullOrEmpty (newsId)) {  		dj.WorkContentId = Convert.ToInt32 (newsId);  	}  	dal.Entry (dj).State = EntityState.Modified;  	if (!string.IsNullOrEmpty (newsId)) {  		int newId = Convert.ToInt32 (newsId);  		WorkContent wc = (from d in dal.WorkContent  		where d.Id == newId  		select d).FirstOrDefault ();  		wc.MoneyCount = Convert.ToInt32 (subsity) + Convert.ToInt32 (workinfo);  		wc.AttendCount = wc.AttendCount + 1;  	}  	dal.SaveChanges ();  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,On_Duty,The following statement contains a magic number: if (!string.IsNullOrEmpty (image.FileName))//上传工作照片   {  	string file = PicName4 (image.FileName);  	var ptho = unique + "-" + name + "-上班照片";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	image.SaveAs (Server.MapPath ("~/uploadImg/workimage/") + ptho);  	file = Suo.TouXiangSuoFang (image' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  	dj.WorkPhoto = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,On_Duty,The following statement contains a magic number: if (!string.IsNullOrEmpty (image.FileName))//上传工作照片   {  	string file = PicName4 (image.FileName);  	var ptho = unique + "-" + name + "-上班照片";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	image.SaveAs (Server.MapPath ("~/uploadImg/workimage/") + ptho);  	file = Suo.TouXiangSuoFang (image' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  	dj.WorkPhoto = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,On_Duty,The following statement contains a magic number: file = Suo.TouXiangSuoFang (image' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,On_Duty,The following statement contains a magic number: file = Suo.TouXiangSuoFang (image' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,On_Duty,The following statement contains a magic number: if (!string.IsNullOrEmpty (image.FileName))//上传个人声明照片   {  	string file = PicName3 (image.FileName);  	var ptho = unique + "-" + name + "-上班照片";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	image.SaveAs (Server.MapPath ("~/uploadImg/workimage/") + ptho);  	file = Suo.TouXiangSuoFang (image' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  	dj.WorkPhoto = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,On_Duty,The following statement contains a magic number: if (!string.IsNullOrEmpty (image.FileName))//上传个人声明照片   {  	string file = PicName3 (image.FileName);  	var ptho = unique + "-" + name + "-上班照片";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	image.SaveAs (Server.MapPath ("~/uploadImg/workimage/") + ptho);  	file = Suo.TouXiangSuoFang (image' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  	dj.WorkPhoto = file;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,On_Duty,The following statement contains a magic number: file = Suo.TouXiangSuoFang (image' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,On_Duty,The following statement contains a magic number: file = Suo.TouXiangSuoFang (image' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Self_Checked,The following statement contains a magic number: if (dj == null) {  	dj = new DianJian ();  	dj.Id = Guid.NewGuid ();  	#region 保存自检信息  	foreach (var item in list) {  		dj.HumanId = item;  		dj.DJTime = date;  		dj.Face = Convert.ToInt32 (appearance);  		dj.WorkAttitude = Convert.ToInt32 (attitude);  		//dj.Remark = che;  		dj.DJContent = che;  		dj.KOP = Convert.ToInt32 (knowledge);  		dj.Score = (dj.Face + dj.WorkAttitude + dj.KOP) / 3;  		dj.IsDraft = false;  		dj.CreatedManager = captain;  		dj.EditManagerID = captain;  		dal.DianJian.Add (dj);  	}  	dal.SaveChanges ();  	dal.Configuration.ValidateOnSaveEnabled = true;  	#endregion  }  else {  	#region 保存自检信息  	foreach (var item in list) {  		dj.HumanId = item;  		dj.DJTime = date;  		dj.Face = Convert.ToInt32 (appearance);  		dj.WorkAttitude = Convert.ToInt32 (attitude);  		dj.DJContent = che;  		dj.KOP = Convert.ToInt32 (knowledge);  		dj.Score = (dj.Face + dj.WorkAttitude + dj.KOP) / 3;  		dj.IsDraft = false;  		dj.CreatedManager = captain;  		dj.EditManagerID = captain;  	}  	dal.Entry (dj).State = EntityState.Modified;  	dal.SaveChanges ();  	dal.Configuration.ValidateOnSaveEnabled = true;  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Self_Checked,The following statement contains a magic number: if (dj == null) {  	dj = new DianJian ();  	dj.Id = Guid.NewGuid ();  	#region 保存自检信息  	foreach (var item in list) {  		dj.HumanId = item;  		dj.DJTime = date;  		dj.Face = Convert.ToInt32 (appearance);  		dj.WorkAttitude = Convert.ToInt32 (attitude);  		//dj.Remark = che;  		dj.DJContent = che;  		dj.KOP = Convert.ToInt32 (knowledge);  		dj.Score = (dj.Face + dj.WorkAttitude + dj.KOP) / 3;  		dj.IsDraft = false;  		dj.CreatedManager = captain;  		dj.EditManagerID = captain;  		dal.DianJian.Add (dj);  	}  	dal.SaveChanges ();  	dal.Configuration.ValidateOnSaveEnabled = true;  	#endregion  }  else {  	#region 保存自检信息  	foreach (var item in list) {  		dj.HumanId = item;  		dj.DJTime = date;  		dj.Face = Convert.ToInt32 (appearance);  		dj.WorkAttitude = Convert.ToInt32 (attitude);  		dj.DJContent = che;  		dj.KOP = Convert.ToInt32 (knowledge);  		dj.Score = (dj.Face + dj.WorkAttitude + dj.KOP) / 3;  		dj.IsDraft = false;  		dj.CreatedManager = captain;  		dj.EditManagerID = captain;  	}  	dal.Entry (dj).State = EntityState.Modified;  	dal.SaveChanges ();  	dal.Configuration.ValidateOnSaveEnabled = true;  	#endregion  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Self_Checked,The following statement contains a magic number: foreach (var item in list) {  	dj.HumanId = item;  	dj.DJTime = date;  	dj.Face = Convert.ToInt32 (appearance);  	dj.WorkAttitude = Convert.ToInt32 (attitude);  	//dj.Remark = che;  	dj.DJContent = che;  	dj.KOP = Convert.ToInt32 (knowledge);  	dj.Score = (dj.Face + dj.WorkAttitude + dj.KOP) / 3;  	dj.IsDraft = false;  	dj.CreatedManager = captain;  	dj.EditManagerID = captain;  	dal.DianJian.Add (dj);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Self_Checked,The following statement contains a magic number: dj.Score = (dj.Face + dj.WorkAttitude + dj.KOP) / 3;  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Self_Checked,The following statement contains a magic number: foreach (var item in list) {  	dj.HumanId = item;  	dj.DJTime = date;  	dj.Face = Convert.ToInt32 (appearance);  	dj.WorkAttitude = Convert.ToInt32 (attitude);  	dj.DJContent = che;  	dj.KOP = Convert.ToInt32 (knowledge);  	dj.Score = (dj.Face + dj.WorkAttitude + dj.KOP) / 3;  	dj.IsDraft = false;  	dj.CreatedManager = captain;  	dj.EditManagerID = captain;  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Self_Checked,The following statement contains a magic number: dj.Score = (dj.Face + dj.WorkAttitude + dj.KOP) / 3;  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (office.Length != 0) {  	int yi = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && s.IsDraft == false && g.Name == office  	select s.uniNum).Distinct ().Count ();  	HumanBasicFile hum = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderByDescending (a => a.uniNum).FirstOrDefault ();  	List<HumanBasicFile> hum1 = (from s in dal.HumanBasicFile  	from g in dal.Office  	where s.City1.OfficeId == g.Id && g.Name == office && s.IsDraft == false  	select s).OrderBy (a => a.uniNum).ToList ();  	int last = 0;  	if (hum != null) {  		var last1 = hum.uniNum.Remove (0' hum.uniNum.LastIndexOf ("0") + 1);  		if (last1.Length != 0) {  			last = Convert.ToInt32 (last1);  		}  	}  	if (last < 10) {  		cap = code + "-000" + Convert.ToString (yi);  		if (last == 9) {  			cap = code + "-00" + Convert.ToString (10);  		}  		for (int i = 0; i <= last; i++) {  			string cap1 = code + "-000" + Convert.ToString (i);  			if (i == 9) {  				cap1 = code + "-00" + Convert.ToString (10);  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  				break;  			}  		}  	}  	else if (last < 100) {  		cap = code + "-00" + Convert.ToString (yi);  		if (last == 99) {  			cap = code + "-0" + Convert.ToString (100);  		}  		for (int i = 10; i < last; i++) {  			string cap1 = "";  			if (i < 100) {  				cap1 = code + "-00" + Convert.ToString (i);  				if (i == 99) {  					cap1 = code + "-0" + Convert.ToString (100);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else if (last < 1000) {  		cap = code + "-0" + Convert.ToString (yi);  		if (last == 999) {  			cap = code + Convert.ToString (1000);  		}  		for (int i = 100; i < last; i++) {  			string cap1 = "";  			if (i < 1000) {  				cap1 = code + "-0" + Convert.ToString (i);  				if (i == 999) {  					cap1 = code + Convert.ToString (1000);  				}  			}  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  	else {  		cap = code + "-" + Convert.ToString (yi);  		for (int i = 1000; i < last; i++) {  			string cap1 = "";  			cap1 = code + Convert.ToString (i);  			var ca = from s in dal.HumanBasicFile  			where s.uniNum == cap1  			select s.uniNum;  			if (ca.Count () == 0) {  				cap = cap1;  			}  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 10) {  	cap = code + "-000" + Convert.ToString (yi);  	if (last == 9) {  		cap = code + "-00" + Convert.ToString (10);  	}  	for (int i = 0; i <= last; i++) {  		string cap1 = code + "-000" + Convert.ToString (i);  		if (i == 9) {  			cap1 = code + "-00" + Convert.ToString (10);  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  			break;  		}  	}  }  else if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last == 9) {  	cap = code + "-00" + Convert.ToString (10);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last == 9) {  	cap = code + "-00" + Convert.ToString (10);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: cap = code + "-00" + Convert.ToString (10);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: for (int i = 0; i <= last; i++) {  	string cap1 = code + "-000" + Convert.ToString (i);  	if (i == 9) {  		cap1 = code + "-00" + Convert.ToString (10);  	}  	var ca = from s in dal.HumanBasicFile  	where s.uniNum == cap1  	select s.uniNum;  	if (ca.Count () == 0) {  		cap = cap1;  		break;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: for (int i = 0; i <= last; i++) {  	string cap1 = code + "-000" + Convert.ToString (i);  	if (i == 9) {  		cap1 = code + "-00" + Convert.ToString (10);  	}  	var ca = from s in dal.HumanBasicFile  	where s.uniNum == cap1  	select s.uniNum;  	if (ca.Count () == 0) {  		cap = cap1;  		break;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (i == 9) {  	cap1 = code + "-00" + Convert.ToString (10);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (i == 9) {  	cap1 = code + "-00" + Convert.ToString (10);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: cap1 = code + "-00" + Convert.ToString (10);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 100) {  	cap = code + "-00" + Convert.ToString (yi);  	if (last == 99) {  		cap = code + "-0" + Convert.ToString (100);  	}  	for (int i = 10; i < last; i++) {  		string cap1 = "";  		if (i < 100) {  			cap1 = code + "-00" + Convert.ToString (i);  			if (i == 99) {  				cap1 = code + "-0" + Convert.ToString (100);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last == 99) {  	cap = code + "-0" + Convert.ToString (100);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last == 99) {  	cap = code + "-0" + Convert.ToString (100);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: cap = code + "-0" + Convert.ToString (100);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: for (int i = 10; i < last; i++) {  	string cap1 = "";  	if (i < 100) {  		cap1 = code + "-00" + Convert.ToString (i);  		if (i == 99) {  			cap1 = code + "-0" + Convert.ToString (100);  		}  	}  	var ca = from s in dal.HumanBasicFile  	where s.uniNum == cap1  	select s.uniNum;  	if (ca.Count () == 0) {  		cap = cap1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: for (int i = 10; i < last; i++) {  	string cap1 = "";  	if (i < 100) {  		cap1 = code + "-00" + Convert.ToString (i);  		if (i == 99) {  			cap1 = code + "-0" + Convert.ToString (100);  		}  	}  	var ca = from s in dal.HumanBasicFile  	where s.uniNum == cap1  	select s.uniNum;  	if (ca.Count () == 0) {  		cap = cap1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: for (int i = 10; i < last; i++) {  	string cap1 = "";  	if (i < 100) {  		cap1 = code + "-00" + Convert.ToString (i);  		if (i == 99) {  			cap1 = code + "-0" + Convert.ToString (100);  		}  	}  	var ca = from s in dal.HumanBasicFile  	where s.uniNum == cap1  	select s.uniNum;  	if (ca.Count () == 0) {  		cap = cap1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: for (int i = 10; i < last; i++) {  	string cap1 = "";  	if (i < 100) {  		cap1 = code + "-00" + Convert.ToString (i);  		if (i == 99) {  			cap1 = code + "-0" + Convert.ToString (100);  		}  	}  	var ca = from s in dal.HumanBasicFile  	where s.uniNum == cap1  	select s.uniNum;  	if (ca.Count () == 0) {  		cap = cap1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (i < 100) {  	cap1 = code + "-00" + Convert.ToString (i);  	if (i == 99) {  		cap1 = code + "-0" + Convert.ToString (100);  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (i < 100) {  	cap1 = code + "-00" + Convert.ToString (i);  	if (i == 99) {  		cap1 = code + "-0" + Convert.ToString (100);  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (i < 100) {  	cap1 = code + "-00" + Convert.ToString (i);  	if (i == 99) {  		cap1 = code + "-0" + Convert.ToString (100);  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (i == 99) {  	cap1 = code + "-0" + Convert.ToString (100);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (i == 99) {  	cap1 = code + "-0" + Convert.ToString (100);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: cap1 = code + "-0" + Convert.ToString (100);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last < 1000) {  	cap = code + "-0" + Convert.ToString (yi);  	if (last == 999) {  		cap = code + Convert.ToString (1000);  	}  	for (int i = 100; i < last; i++) {  		string cap1 = "";  		if (i < 1000) {  			cap1 = code + "-0" + Convert.ToString (i);  			if (i == 999) {  				cap1 = code + Convert.ToString (1000);  			}  		}  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  else {  	cap = code + "-" + Convert.ToString (yi);  	for (int i = 1000; i < last; i++) {  		string cap1 = "";  		cap1 = code + Convert.ToString (i);  		var ca = from s in dal.HumanBasicFile  		where s.uniNum == cap1  		select s.uniNum;  		if (ca.Count () == 0) {  			cap = cap1;  		}  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last == 999) {  	cap = code + Convert.ToString (1000);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (last == 999) {  	cap = code + Convert.ToString (1000);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: cap = code + Convert.ToString (1000);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: for (int i = 100; i < last; i++) {  	string cap1 = "";  	if (i < 1000) {  		cap1 = code + "-0" + Convert.ToString (i);  		if (i == 999) {  			cap1 = code + Convert.ToString (1000);  		}  	}  	var ca = from s in dal.HumanBasicFile  	where s.uniNum == cap1  	select s.uniNum;  	if (ca.Count () == 0) {  		cap = cap1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: for (int i = 100; i < last; i++) {  	string cap1 = "";  	if (i < 1000) {  		cap1 = code + "-0" + Convert.ToString (i);  		if (i == 999) {  			cap1 = code + Convert.ToString (1000);  		}  	}  	var ca = from s in dal.HumanBasicFile  	where s.uniNum == cap1  	select s.uniNum;  	if (ca.Count () == 0) {  		cap = cap1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: for (int i = 100; i < last; i++) {  	string cap1 = "";  	if (i < 1000) {  		cap1 = code + "-0" + Convert.ToString (i);  		if (i == 999) {  			cap1 = code + Convert.ToString (1000);  		}  	}  	var ca = from s in dal.HumanBasicFile  	where s.uniNum == cap1  	select s.uniNum;  	if (ca.Count () == 0) {  		cap = cap1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: for (int i = 100; i < last; i++) {  	string cap1 = "";  	if (i < 1000) {  		cap1 = code + "-0" + Convert.ToString (i);  		if (i == 999) {  			cap1 = code + Convert.ToString (1000);  		}  	}  	var ca = from s in dal.HumanBasicFile  	where s.uniNum == cap1  	select s.uniNum;  	if (ca.Count () == 0) {  		cap = cap1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (i < 1000) {  	cap1 = code + "-0" + Convert.ToString (i);  	if (i == 999) {  		cap1 = code + Convert.ToString (1000);  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (i < 1000) {  	cap1 = code + "-0" + Convert.ToString (i);  	if (i == 999) {  		cap1 = code + Convert.ToString (1000);  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (i < 1000) {  	cap1 = code + "-0" + Convert.ToString (i);  	if (i == 999) {  		cap1 = code + Convert.ToString (1000);  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (i == 999) {  	cap1 = code + Convert.ToString (1000);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: if (i == 999) {  	cap1 = code + Convert.ToString (1000);  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: cap1 = code + Convert.ToString (1000);  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,unique,The following statement contains a magic number: for (int i = 1000; i < last; i++) {  	string cap1 = "";  	cap1 = code + Convert.ToString (i);  	var ca = from s in dal.HumanBasicFile  	where s.uniNum == cap1  	select s.uniNum;  	if (ca.Count () == 0) {  		cap = cap1;  	}  }  
Magic Number,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,validateMobile,The following statement contains a magic number: if (Id.Length != 11) {  	success = false;  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	var hum = (from s in dal.HumanBasicFile  	where s.uniNum == unique  	select s.Id).ToList ();  	foreach (var item in hum) {  		HumanBasicFile hu = dal.HumanBasicFile.Find (item);  		hu.City1.Office.Name = captain;  		hu.City1.Name = city;  		hu.Name = name;  		if (sex == "男") {  			hu.Sex = true;  		}  		else {  			hu.Sex = false;  		}  		hu.IDcardNo = iden;  		if (level != hu.HumanLevel) {  			hu.LevelEditTimes += 1;  		}  		hu.HumanLevel = level;  		hu.NativePlace = jiguan;  		hu.Telephone = mob;  		hu.BankNum = bank;  		hu.BankId = Convert.ToInt32 (acc);  		hu.School = sch;  		hu.Major = major;  		hu.GraduateTime = gra;  		hu.Academic = edu;  		hu.Remark = "";  		if (hei.Length != 0) {  			hu.Height = Convert.ToInt32 (hei);  		}  		if (wei.Length != 0) {  			hu.Weight = Convert.ToInt32 (wei);  		}  		hu.BWH = mea;  		hu.speciality = ski;  		if (hu != null) {  			ViewBag.cof = 1;  		}  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = unique + "-" + name + "(身份证)";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hu.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = unique + "-" + name + "(银行卡)";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hu.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片  		 {  			string file = PicName2 (isPersonal.FileName);  			var ptho = unique + "-" + name + "面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hu.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片  		 {  			string file = PicName3 (isStudent.FileName);  			var ptho = unique + "-" + name + "个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hu.Info = file;  		}  		#endregion  		dal.Entry (hu).State = EntityState.Modified;  		dal.SaveChanges ();  		return View (hu);  	}  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	var hum = (from s in dal.HumanBasicFile  	where s.uniNum == unique  	select s.Id).ToList ();  	foreach (var item in hum) {  		HumanBasicFile hu = dal.HumanBasicFile.Find (item);  		hu.City1.Office.Name = captain;  		hu.City1.Name = city;  		hu.Name = name;  		if (sex == "男") {  			hu.Sex = true;  		}  		else {  			hu.Sex = false;  		}  		hu.IDcardNo = iden;  		if (level != hu.HumanLevel) {  			hu.LevelEditTimes += 1;  		}  		hu.HumanLevel = level;  		hu.NativePlace = jiguan;  		hu.Telephone = mob;  		hu.BankNum = bank;  		hu.BankId = Convert.ToInt32 (acc);  		hu.School = sch;  		hu.Major = major;  		hu.GraduateTime = gra;  		hu.Academic = edu;  		hu.Remark = "";  		if (hei.Length != 0) {  			hu.Height = Convert.ToInt32 (hei);  		}  		if (wei.Length != 0) {  			hu.Weight = Convert.ToInt32 (wei);  		}  		hu.BWH = mea;  		hu.speciality = ski;  		if (hu != null) {  			ViewBag.cof = 1;  		}  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = unique + "-" + name + "(身份证)";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hu.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = unique + "-" + name + "(银行卡)";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hu.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片  		 {  			string file = PicName2 (isPersonal.FileName);  			var ptho = unique + "-" + name + "面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hu.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片  		 {  			string file = PicName3 (isStudent.FileName);  			var ptho = unique + "-" + name + "个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hu.Info = file;  		}  		#endregion  		dal.Entry (hu).State = EntityState.Modified;  		dal.SaveChanges ();  		return View (hu);  	}  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	var hum = (from s in dal.HumanBasicFile  	where s.uniNum == unique  	select s.Id).ToList ();  	foreach (var item in hum) {  		HumanBasicFile hu = dal.HumanBasicFile.Find (item);  		hu.City1.Office.Name = captain;  		hu.City1.Name = city;  		hu.Name = name;  		if (sex == "男") {  			hu.Sex = true;  		}  		else {  			hu.Sex = false;  		}  		hu.IDcardNo = iden;  		if (level != hu.HumanLevel) {  			hu.LevelEditTimes += 1;  		}  		hu.HumanLevel = level;  		hu.NativePlace = jiguan;  		hu.Telephone = mob;  		hu.BankNum = bank;  		hu.BankId = Convert.ToInt32 (acc);  		hu.School = sch;  		hu.Major = major;  		hu.GraduateTime = gra;  		hu.Academic = edu;  		hu.Remark = "";  		if (hei.Length != 0) {  			hu.Height = Convert.ToInt32 (hei);  		}  		if (wei.Length != 0) {  			hu.Weight = Convert.ToInt32 (wei);  		}  		hu.BWH = mea;  		hu.speciality = ski;  		if (hu != null) {  			ViewBag.cof = 1;  		}  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = unique + "-" + name + "(身份证)";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hu.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = unique + "-" + name + "(银行卡)";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hu.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片  		 {  			string file = PicName2 (isPersonal.FileName);  			var ptho = unique + "-" + name + "面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hu.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片  		 {  			string file = PicName3 (isStudent.FileName);  			var ptho = unique + "-" + name + "个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hu.Info = file;  		}  		#endregion  		dal.Entry (hu).State = EntityState.Modified;  		dal.SaveChanges ();  		return View (hu);  	}  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	var hum = (from s in dal.HumanBasicFile  	where s.uniNum == unique  	select s.Id).ToList ();  	foreach (var item in hum) {  		HumanBasicFile hu = dal.HumanBasicFile.Find (item);  		hu.City1.Office.Name = captain;  		hu.City1.Name = city;  		hu.Name = name;  		if (sex == "男") {  			hu.Sex = true;  		}  		else {  			hu.Sex = false;  		}  		hu.IDcardNo = iden;  		if (level != hu.HumanLevel) {  			hu.LevelEditTimes += 1;  		}  		hu.HumanLevel = level;  		hu.NativePlace = jiguan;  		hu.Telephone = mob;  		hu.BankNum = bank;  		hu.BankId = Convert.ToInt32 (acc);  		hu.School = sch;  		hu.Major = major;  		hu.GraduateTime = gra;  		hu.Academic = edu;  		hu.Remark = "";  		if (hei.Length != 0) {  			hu.Height = Convert.ToInt32 (hei);  		}  		if (wei.Length != 0) {  			hu.Weight = Convert.ToInt32 (wei);  		}  		hu.BWH = mea;  		hu.speciality = ski;  		if (hu != null) {  			ViewBag.cof = 1;  		}  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = unique + "-" + name + "(身份证)";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hu.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = unique + "-" + name + "(银行卡)";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hu.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片  		 {  			string file = PicName2 (isPersonal.FileName);  			var ptho = unique + "-" + name + "面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hu.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片  		 {  			string file = PicName3 (isStudent.FileName);  			var ptho = unique + "-" + name + "个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hu.Info = file;  		}  		#endregion  		dal.Entry (hu).State = EntityState.Modified;  		dal.SaveChanges ();  		return View (hu);  	}  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	var hum = (from s in dal.HumanBasicFile  	where s.uniNum == unique  	select s.Id).ToList ();  	foreach (var item in hum) {  		HumanBasicFile hu = dal.HumanBasicFile.Find (item);  		hu.City1.Office.Name = captain;  		hu.City1.Name = city;  		hu.Name = name;  		if (sex == "男") {  			hu.Sex = true;  		}  		else {  			hu.Sex = false;  		}  		hu.IDcardNo = iden;  		if (level != hu.HumanLevel) {  			hu.LevelEditTimes += 1;  		}  		hu.HumanLevel = level;  		hu.NativePlace = jiguan;  		hu.Telephone = mob;  		hu.BankNum = bank;  		hu.BankId = Convert.ToInt32 (acc);  		hu.School = sch;  		hu.Major = major;  		hu.GraduateTime = gra;  		hu.Academic = edu;  		hu.Remark = "";  		if (hei.Length != 0) {  			hu.Height = Convert.ToInt32 (hei);  		}  		if (wei.Length != 0) {  			hu.Weight = Convert.ToInt32 (wei);  		}  		hu.BWH = mea;  		hu.speciality = ski;  		if (hu != null) {  			ViewBag.cof = 1;  		}  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = unique + "-" + name + "(身份证)";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hu.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = unique + "-" + name + "(银行卡)";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hu.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片  		 {  			string file = PicName2 (isPersonal.FileName);  			var ptho = unique + "-" + name + "面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hu.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片  		 {  			string file = PicName3 (isStudent.FileName);  			var ptho = unique + "-" + name + "个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hu.Info = file;  		}  		#endregion  		dal.Entry (hu).State = EntityState.Modified;  		dal.SaveChanges ();  		return View (hu);  	}  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	var hum = (from s in dal.HumanBasicFile  	where s.uniNum == unique  	select s.Id).ToList ();  	foreach (var item in hum) {  		HumanBasicFile hu = dal.HumanBasicFile.Find (item);  		hu.City1.Office.Name = captain;  		hu.City1.Name = city;  		hu.Name = name;  		if (sex == "男") {  			hu.Sex = true;  		}  		else {  			hu.Sex = false;  		}  		hu.IDcardNo = iden;  		if (level != hu.HumanLevel) {  			hu.LevelEditTimes += 1;  		}  		hu.HumanLevel = level;  		hu.NativePlace = jiguan;  		hu.Telephone = mob;  		hu.BankNum = bank;  		hu.BankId = Convert.ToInt32 (acc);  		hu.School = sch;  		hu.Major = major;  		hu.GraduateTime = gra;  		hu.Academic = edu;  		hu.Remark = "";  		if (hei.Length != 0) {  			hu.Height = Convert.ToInt32 (hei);  		}  		if (wei.Length != 0) {  			hu.Weight = Convert.ToInt32 (wei);  		}  		hu.BWH = mea;  		hu.speciality = ski;  		if (hu != null) {  			ViewBag.cof = 1;  		}  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = unique + "-" + name + "(身份证)";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hu.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = unique + "-" + name + "(银行卡)";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hu.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片  		 {  			string file = PicName2 (isPersonal.FileName);  			var ptho = unique + "-" + name + "面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hu.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片  		 {  			string file = PicName3 (isStudent.FileName);  			var ptho = unique + "-" + name + "个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hu.Info = file;  		}  		#endregion  		dal.Entry (hu).State = EntityState.Modified;  		dal.SaveChanges ();  		return View (hu);  	}  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	var hum = (from s in dal.HumanBasicFile  	where s.uniNum == unique  	select s.Id).ToList ();  	foreach (var item in hum) {  		HumanBasicFile hu = dal.HumanBasicFile.Find (item);  		hu.City1.Office.Name = captain;  		hu.City1.Name = city;  		hu.Name = name;  		if (sex == "男") {  			hu.Sex = true;  		}  		else {  			hu.Sex = false;  		}  		hu.IDcardNo = iden;  		if (level != hu.HumanLevel) {  			hu.LevelEditTimes += 1;  		}  		hu.HumanLevel = level;  		hu.NativePlace = jiguan;  		hu.Telephone = mob;  		hu.BankNum = bank;  		hu.BankId = Convert.ToInt32 (acc);  		hu.School = sch;  		hu.Major = major;  		hu.GraduateTime = gra;  		hu.Academic = edu;  		hu.Remark = "";  		if (hei.Length != 0) {  			hu.Height = Convert.ToInt32 (hei);  		}  		if (wei.Length != 0) {  			hu.Weight = Convert.ToInt32 (wei);  		}  		hu.BWH = mea;  		hu.speciality = ski;  		if (hu != null) {  			ViewBag.cof = 1;  		}  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = unique + "-" + name + "(身份证)";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hu.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = unique + "-" + name + "(银行卡)";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hu.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片  		 {  			string file = PicName2 (isPersonal.FileName);  			var ptho = unique + "-" + name + "面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hu.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片  		 {  			string file = PicName3 (isStudent.FileName);  			var ptho = unique + "-" + name + "个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hu.Info = file;  		}  		#endregion  		dal.Entry (hu).State = EntityState.Modified;  		dal.SaveChanges ();  		return View (hu);  	}  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: if (ModelState.IsValid) {  	var hum = (from s in dal.HumanBasicFile  	where s.uniNum == unique  	select s.Id).ToList ();  	foreach (var item in hum) {  		HumanBasicFile hu = dal.HumanBasicFile.Find (item);  		hu.City1.Office.Name = captain;  		hu.City1.Name = city;  		hu.Name = name;  		if (sex == "男") {  			hu.Sex = true;  		}  		else {  			hu.Sex = false;  		}  		hu.IDcardNo = iden;  		if (level != hu.HumanLevel) {  			hu.LevelEditTimes += 1;  		}  		hu.HumanLevel = level;  		hu.NativePlace = jiguan;  		hu.Telephone = mob;  		hu.BankNum = bank;  		hu.BankId = Convert.ToInt32 (acc);  		hu.School = sch;  		hu.Major = major;  		hu.GraduateTime = gra;  		hu.Academic = edu;  		hu.Remark = "";  		if (hei.Length != 0) {  			hu.Height = Convert.ToInt32 (hei);  		}  		if (wei.Length != 0) {  			hu.Weight = Convert.ToInt32 (wei);  		}  		hu.BWH = mea;  		hu.speciality = ski;  		if (hu != null) {  			ViewBag.cof = 1;  		}  		#region  		if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  		 {  			string file = PicName (identityimage.FileName);  			var ptho = unique + "-" + name + "(身份证)";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  			file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  			hu.IDcardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  		 {  			string file = PicName1 (bankimage.FileName);  			var ptho = unique + "-" + name + "(银行卡)";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  			file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  			hu.BankCardPhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片  		 {  			string file = PicName2 (isPersonal.FileName);  			var ptho = unique + "-" + name + "面试";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  			file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  			hu.InterfacePhoto = file;  		}  		#endregion  		#region  		if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片  		 {  			string file = PicName3 (isStudent.FileName);  			var ptho = unique + "-" + name + "个人声明";  			string extend = file.Remove (0' file.LastIndexOf (".") + 1);  			ptho = PictureValiate.newName (ptho' extend);  			isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  			file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  			hu.Info = file;  		}  		#endregion  		dal.Entry (hu).State = EntityState.Modified;  		dal.SaveChanges ();  		return View (hu);  	}  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: foreach (var item in hum) {  	HumanBasicFile hu = dal.HumanBasicFile.Find (item);  	hu.City1.Office.Name = captain;  	hu.City1.Name = city;  	hu.Name = name;  	if (sex == "男") {  		hu.Sex = true;  	}  	else {  		hu.Sex = false;  	}  	hu.IDcardNo = iden;  	if (level != hu.HumanLevel) {  		hu.LevelEditTimes += 1;  	}  	hu.HumanLevel = level;  	hu.NativePlace = jiguan;  	hu.Telephone = mob;  	hu.BankNum = bank;  	hu.BankId = Convert.ToInt32 (acc);  	hu.School = sch;  	hu.Major = major;  	hu.GraduateTime = gra;  	hu.Academic = edu;  	hu.Remark = "";  	if (hei.Length != 0) {  		hu.Height = Convert.ToInt32 (hei);  	}  	if (wei.Length != 0) {  		hu.Weight = Convert.ToInt32 (wei);  	}  	hu.BWH = mea;  	hu.speciality = ski;  	if (hu != null) {  		ViewBag.cof = 1;  	}  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = unique + "-" + name + "(身份证)";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hu.IDcardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = unique + "-" + name + "(银行卡)";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hu.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片  	 {  		string file = PicName2 (isPersonal.FileName);  		var ptho = unique + "-" + name + "面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hu.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片  	 {  		string file = PicName3 (isStudent.FileName);  		var ptho = unique + "-" + name + "个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hu.Info = file;  	}  	#endregion  	dal.Entry (hu).State = EntityState.Modified;  	dal.SaveChanges ();  	return View (hu);  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: foreach (var item in hum) {  	HumanBasicFile hu = dal.HumanBasicFile.Find (item);  	hu.City1.Office.Name = captain;  	hu.City1.Name = city;  	hu.Name = name;  	if (sex == "男") {  		hu.Sex = true;  	}  	else {  		hu.Sex = false;  	}  	hu.IDcardNo = iden;  	if (level != hu.HumanLevel) {  		hu.LevelEditTimes += 1;  	}  	hu.HumanLevel = level;  	hu.NativePlace = jiguan;  	hu.Telephone = mob;  	hu.BankNum = bank;  	hu.BankId = Convert.ToInt32 (acc);  	hu.School = sch;  	hu.Major = major;  	hu.GraduateTime = gra;  	hu.Academic = edu;  	hu.Remark = "";  	if (hei.Length != 0) {  		hu.Height = Convert.ToInt32 (hei);  	}  	if (wei.Length != 0) {  		hu.Weight = Convert.ToInt32 (wei);  	}  	hu.BWH = mea;  	hu.speciality = ski;  	if (hu != null) {  		ViewBag.cof = 1;  	}  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = unique + "-" + name + "(身份证)";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hu.IDcardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = unique + "-" + name + "(银行卡)";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hu.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片  	 {  		string file = PicName2 (isPersonal.FileName);  		var ptho = unique + "-" + name + "面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hu.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片  	 {  		string file = PicName3 (isStudent.FileName);  		var ptho = unique + "-" + name + "个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hu.Info = file;  	}  	#endregion  	dal.Entry (hu).State = EntityState.Modified;  	dal.SaveChanges ();  	return View (hu);  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: foreach (var item in hum) {  	HumanBasicFile hu = dal.HumanBasicFile.Find (item);  	hu.City1.Office.Name = captain;  	hu.City1.Name = city;  	hu.Name = name;  	if (sex == "男") {  		hu.Sex = true;  	}  	else {  		hu.Sex = false;  	}  	hu.IDcardNo = iden;  	if (level != hu.HumanLevel) {  		hu.LevelEditTimes += 1;  	}  	hu.HumanLevel = level;  	hu.NativePlace = jiguan;  	hu.Telephone = mob;  	hu.BankNum = bank;  	hu.BankId = Convert.ToInt32 (acc);  	hu.School = sch;  	hu.Major = major;  	hu.GraduateTime = gra;  	hu.Academic = edu;  	hu.Remark = "";  	if (hei.Length != 0) {  		hu.Height = Convert.ToInt32 (hei);  	}  	if (wei.Length != 0) {  		hu.Weight = Convert.ToInt32 (wei);  	}  	hu.BWH = mea;  	hu.speciality = ski;  	if (hu != null) {  		ViewBag.cof = 1;  	}  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = unique + "-" + name + "(身份证)";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hu.IDcardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = unique + "-" + name + "(银行卡)";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hu.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片  	 {  		string file = PicName2 (isPersonal.FileName);  		var ptho = unique + "-" + name + "面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hu.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片  	 {  		string file = PicName3 (isStudent.FileName);  		var ptho = unique + "-" + name + "个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hu.Info = file;  	}  	#endregion  	dal.Entry (hu).State = EntityState.Modified;  	dal.SaveChanges ();  	return View (hu);  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: foreach (var item in hum) {  	HumanBasicFile hu = dal.HumanBasicFile.Find (item);  	hu.City1.Office.Name = captain;  	hu.City1.Name = city;  	hu.Name = name;  	if (sex == "男") {  		hu.Sex = true;  	}  	else {  		hu.Sex = false;  	}  	hu.IDcardNo = iden;  	if (level != hu.HumanLevel) {  		hu.LevelEditTimes += 1;  	}  	hu.HumanLevel = level;  	hu.NativePlace = jiguan;  	hu.Telephone = mob;  	hu.BankNum = bank;  	hu.BankId = Convert.ToInt32 (acc);  	hu.School = sch;  	hu.Major = major;  	hu.GraduateTime = gra;  	hu.Academic = edu;  	hu.Remark = "";  	if (hei.Length != 0) {  		hu.Height = Convert.ToInt32 (hei);  	}  	if (wei.Length != 0) {  		hu.Weight = Convert.ToInt32 (wei);  	}  	hu.BWH = mea;  	hu.speciality = ski;  	if (hu != null) {  		ViewBag.cof = 1;  	}  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = unique + "-" + name + "(身份证)";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hu.IDcardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = unique + "-" + name + "(银行卡)";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hu.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片  	 {  		string file = PicName2 (isPersonal.FileName);  		var ptho = unique + "-" + name + "面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hu.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片  	 {  		string file = PicName3 (isStudent.FileName);  		var ptho = unique + "-" + name + "个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hu.Info = file;  	}  	#endregion  	dal.Entry (hu).State = EntityState.Modified;  	dal.SaveChanges ();  	return View (hu);  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: foreach (var item in hum) {  	HumanBasicFile hu = dal.HumanBasicFile.Find (item);  	hu.City1.Office.Name = captain;  	hu.City1.Name = city;  	hu.Name = name;  	if (sex == "男") {  		hu.Sex = true;  	}  	else {  		hu.Sex = false;  	}  	hu.IDcardNo = iden;  	if (level != hu.HumanLevel) {  		hu.LevelEditTimes += 1;  	}  	hu.HumanLevel = level;  	hu.NativePlace = jiguan;  	hu.Telephone = mob;  	hu.BankNum = bank;  	hu.BankId = Convert.ToInt32 (acc);  	hu.School = sch;  	hu.Major = major;  	hu.GraduateTime = gra;  	hu.Academic = edu;  	hu.Remark = "";  	if (hei.Length != 0) {  		hu.Height = Convert.ToInt32 (hei);  	}  	if (wei.Length != 0) {  		hu.Weight = Convert.ToInt32 (wei);  	}  	hu.BWH = mea;  	hu.speciality = ski;  	if (hu != null) {  		ViewBag.cof = 1;  	}  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = unique + "-" + name + "(身份证)";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hu.IDcardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = unique + "-" + name + "(银行卡)";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hu.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片  	 {  		string file = PicName2 (isPersonal.FileName);  		var ptho = unique + "-" + name + "面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hu.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片  	 {  		string file = PicName3 (isStudent.FileName);  		var ptho = unique + "-" + name + "个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hu.Info = file;  	}  	#endregion  	dal.Entry (hu).State = EntityState.Modified;  	dal.SaveChanges ();  	return View (hu);  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: foreach (var item in hum) {  	HumanBasicFile hu = dal.HumanBasicFile.Find (item);  	hu.City1.Office.Name = captain;  	hu.City1.Name = city;  	hu.Name = name;  	if (sex == "男") {  		hu.Sex = true;  	}  	else {  		hu.Sex = false;  	}  	hu.IDcardNo = iden;  	if (level != hu.HumanLevel) {  		hu.LevelEditTimes += 1;  	}  	hu.HumanLevel = level;  	hu.NativePlace = jiguan;  	hu.Telephone = mob;  	hu.BankNum = bank;  	hu.BankId = Convert.ToInt32 (acc);  	hu.School = sch;  	hu.Major = major;  	hu.GraduateTime = gra;  	hu.Academic = edu;  	hu.Remark = "";  	if (hei.Length != 0) {  		hu.Height = Convert.ToInt32 (hei);  	}  	if (wei.Length != 0) {  		hu.Weight = Convert.ToInt32 (wei);  	}  	hu.BWH = mea;  	hu.speciality = ski;  	if (hu != null) {  		ViewBag.cof = 1;  	}  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = unique + "-" + name + "(身份证)";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hu.IDcardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = unique + "-" + name + "(银行卡)";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hu.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片  	 {  		string file = PicName2 (isPersonal.FileName);  		var ptho = unique + "-" + name + "面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hu.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片  	 {  		string file = PicName3 (isStudent.FileName);  		var ptho = unique + "-" + name + "个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hu.Info = file;  	}  	#endregion  	dal.Entry (hu).State = EntityState.Modified;  	dal.SaveChanges ();  	return View (hu);  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: foreach (var item in hum) {  	HumanBasicFile hu = dal.HumanBasicFile.Find (item);  	hu.City1.Office.Name = captain;  	hu.City1.Name = city;  	hu.Name = name;  	if (sex == "男") {  		hu.Sex = true;  	}  	else {  		hu.Sex = false;  	}  	hu.IDcardNo = iden;  	if (level != hu.HumanLevel) {  		hu.LevelEditTimes += 1;  	}  	hu.HumanLevel = level;  	hu.NativePlace = jiguan;  	hu.Telephone = mob;  	hu.BankNum = bank;  	hu.BankId = Convert.ToInt32 (acc);  	hu.School = sch;  	hu.Major = major;  	hu.GraduateTime = gra;  	hu.Academic = edu;  	hu.Remark = "";  	if (hei.Length != 0) {  		hu.Height = Convert.ToInt32 (hei);  	}  	if (wei.Length != 0) {  		hu.Weight = Convert.ToInt32 (wei);  	}  	hu.BWH = mea;  	hu.speciality = ski;  	if (hu != null) {  		ViewBag.cof = 1;  	}  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = unique + "-" + name + "(身份证)";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hu.IDcardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = unique + "-" + name + "(银行卡)";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hu.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片  	 {  		string file = PicName2 (isPersonal.FileName);  		var ptho = unique + "-" + name + "面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hu.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片  	 {  		string file = PicName3 (isStudent.FileName);  		var ptho = unique + "-" + name + "个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hu.Info = file;  	}  	#endregion  	dal.Entry (hu).State = EntityState.Modified;  	dal.SaveChanges ();  	return View (hu);  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: foreach (var item in hum) {  	HumanBasicFile hu = dal.HumanBasicFile.Find (item);  	hu.City1.Office.Name = captain;  	hu.City1.Name = city;  	hu.Name = name;  	if (sex == "男") {  		hu.Sex = true;  	}  	else {  		hu.Sex = false;  	}  	hu.IDcardNo = iden;  	if (level != hu.HumanLevel) {  		hu.LevelEditTimes += 1;  	}  	hu.HumanLevel = level;  	hu.NativePlace = jiguan;  	hu.Telephone = mob;  	hu.BankNum = bank;  	hu.BankId = Convert.ToInt32 (acc);  	hu.School = sch;  	hu.Major = major;  	hu.GraduateTime = gra;  	hu.Academic = edu;  	hu.Remark = "";  	if (hei.Length != 0) {  		hu.Height = Convert.ToInt32 (hei);  	}  	if (wei.Length != 0) {  		hu.Weight = Convert.ToInt32 (wei);  	}  	hu.BWH = mea;  	hu.speciality = ski;  	if (hu != null) {  		ViewBag.cof = 1;  	}  	#region  	if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片  	 {  		string file = PicName (identityimage.FileName);  		var ptho = unique + "-" + name + "(身份证)";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  		file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  		hu.IDcardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片  	 {  		string file = PicName1 (bankimage.FileName);  		var ptho = unique + "-" + name + "(银行卡)";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  		file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  		hu.BankCardPhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片  	 {  		string file = PicName2 (isPersonal.FileName);  		var ptho = unique + "-" + name + "面试";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  		file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  		hu.InterfacePhoto = file;  	}  	#endregion  	#region  	if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片  	 {  		string file = PicName3 (isStudent.FileName);  		var ptho = unique + "-" + name + "个人声明";  		string extend = file.Remove (0' file.LastIndexOf (".") + 1);  		ptho = PictureValiate.newName (ptho' extend);  		isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  		file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  		hu.Info = file;  	}  	#endregion  	dal.Entry (hu).State = EntityState.Modified;  	dal.SaveChanges ();  	return View (hu);  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片   {  	string file = PicName (identityimage.FileName);  	var ptho = unique + "-" + name + "(身份证)";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  	file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  	hu.IDcardPhoto = file;  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (identityimage.FileName))//身份证图片   {  	string file = PicName (identityimage.FileName);  	var ptho = unique + "-" + name + "(身份证)";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	identityimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/identityImg/") + ptho);  	file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  	hu.IDcardPhoto = file;  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: file = Suo.TouXiangSuoFang (identityimage' ptho' Server.MapPath ("~/uploadImg/managerImg/identity/")' 114' 125);  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片   {  	string file = PicName1 (bankimage.FileName);  	var ptho = unique + "-" + name + "(银行卡)";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  	file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  	hu.BankCardPhoto = file;  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (bankimage.FileName))//银行卡图片   {  	string file = PicName1 (bankimage.FileName);  	var ptho = unique + "-" + name + "(银行卡)";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	bankimage.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/bankImg/") + ptho);  	file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  	hu.BankCardPhoto = file;  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: file = Suo.TouXiangSuoFang (bankimage' ptho' Server.MapPath ("~/uploadImg/managerImg/bankimage/")' 114' 125);  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片   {  	string file = PicName2 (isPersonal.FileName);  	var ptho = unique + "-" + name + "面试";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  	file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  	hu.InterfacePhoto = file;  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (isPersonal.FileName))//上传面试照片   {  	string file = PicName2 (isPersonal.FileName);  	var ptho = unique + "-" + name + "面试";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	isPersonal.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InterviewImg/") + ptho);  	file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  	hu.InterfacePhoto = file;  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: file = Suo.TouXiangSuoFang (isPersonal' ptho' Server.MapPath ("~/uploadImg/managerImg/interviewimg/")' 114' 125);  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片   {  	string file = PicName3 (isStudent.FileName);  	var ptho = unique + "-" + name + "个人声明";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  	file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  	hu.Info = file;  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (isStudent.FileName))//上传个人声明照片   {  	string file = PicName3 (isStudent.FileName);  	var ptho = unique + "-" + name + "个人声明";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	isStudent.SaveAs (Server.MapPath ("~/uploadImg/Humanbasic/InfoImg/") + ptho);  	file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  	hu.Info = file;  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editBaseInfo,The following statement contains a magic number: file = Suo.TouXiangSuoFang (isStudent' ptho' Server.MapPath ("~/uploadImg/managerImg/personal/")' 114' 125);  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editWorkInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片   {  	string file = PicName4 (student.FileName);  	var ptho = unique + "-" + dj.HumanBasicFile.Name + "-上班";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	student.SaveAs (Server.MapPath ("~/uploadImg/workimage/") + ptho);  	file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  	dj.WorkPhoto = file;  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editWorkInfo,The following statement contains a magic number: if (!string.IsNullOrEmpty (student.FileName))//上传个人声明照片   {  	string file = PicName4 (student.FileName);  	var ptho = unique + "-" + dj.HumanBasicFile.Name + "-上班";  	string extend = file.Remove (0' file.LastIndexOf (".") + 1);  	ptho = PictureValiate.newName (ptho' extend);  	student.SaveAs (Server.MapPath ("~/uploadImg/workimage/") + ptho);  	file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  	dj.WorkPhoto = file;  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editWorkInfo,The following statement contains a magic number: file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editWorkInfo,The following statement contains a magic number: file = Suo.TouXiangSuoFang (student' ptho' Server.MapPath ("~/uploadImg/workimage/suo/")' 114' 125);  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,editCheckInfo,The following statement contains a magic number: dianjian.Score = (Convert.ToInt32 (app) + Convert.ToInt32 (att) + Convert.ToInt32 (kno)) / 3;  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,validateIdentity,The following statement contains a magic number: foreach (var id in IdList) {  	if (id.Length != 18) {  		success = false;  		break;  	}  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,validateIdentity,The following statement contains a magic number: if (id.Length != 18) {  	success = false;  	break;  }  
Magic Number,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,validateMobile,The following statement contains a magic number: if (Id.Length != 11) {  	success = false;  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,Clower,The following statement contains a magic number: foreach (var item in Chum) {  	var c = dj.Where (a => a.Score < 80 && a.HumanBasicFile.uniNum == item.uniNum && a.HumanBasicFile.LevelEditTimes < 1).ToList ();  	if (c.Count () >= 2) {  		HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  		hum.HumanLevel = "C";  		db.Entry (hum).State = EntityState.Modified;  		db.SaveChanges ();  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,Clower,The following statement contains a magic number: foreach (var item in Chum) {  	var c = dj.Where (a => a.Score < 80 && a.HumanBasicFile.uniNum == item.uniNum && a.HumanBasicFile.LevelEditTimes < 1).ToList ();  	if (c.Count () >= 2) {  		HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  		hum.HumanLevel = "C";  		db.Entry (hum).State = EntityState.Modified;  		db.SaveChanges ();  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,Clower,The following statement contains a magic number: if (c.Count () >= 2) {  	HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  	hum.HumanLevel = "C";  	db.Entry (hum).State = EntityState.Modified;  	db.SaveChanges ();  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: foreach (var item in BList) {  	//当月的兼职人员  	var a = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList ();  	//次数多于4次则执行  	if (a.Count () >= 4) {  		//平均分数高于90  		double ave = (double)a.Select (d => d.Score).Average ();  		if (ave > 90) {  			HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  			hum.HumanLevel = "A";  			hum.LevelEditTimes += 1;  			db.Entry (hum).State = EntityState.Modified;  			db.SaveChanges ();  		}  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: foreach (var item in BList) {  	//当月的兼职人员  	var a = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList ();  	//次数多于4次则执行  	if (a.Count () >= 4) {  		//平均分数高于90  		double ave = (double)a.Select (d => d.Score).Average ();  		if (ave > 90) {  			HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  			hum.HumanLevel = "A";  			hum.LevelEditTimes += 1;  			db.Entry (hum).State = EntityState.Modified;  			db.SaveChanges ();  		}  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: if (a.Count () >= 4) {  	//平均分数高于90  	double ave = (double)a.Select (d => d.Score).Average ();  	if (ave > 90) {  		HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  		hum.HumanLevel = "A";  		hum.LevelEditTimes += 1;  		db.Entry (hum).State = EntityState.Modified;  		db.SaveChanges ();  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: if (a.Count () >= 4) {  	//平均分数高于90  	double ave = (double)a.Select (d => d.Score).Average ();  	if (ave > 90) {  		HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  		hum.HumanLevel = "A";  		hum.LevelEditTimes += 1;  		db.Entry (hum).State = EntityState.Modified;  		db.SaveChanges ();  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: if (ave > 90) {  	HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  	hum.HumanLevel = "A";  	hum.LevelEditTimes += 1;  	db.Entry (hum).State = EntityState.Modified;  	db.SaveChanges ();  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: if (DateTime.Now.ToShortDateString () == DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).AddDays (-1).ToShortDateString ()) {  	#region AorS级降B级  	var SorAList = (from SA in db.HumanBasicFile.ToList ()  	where SA.HumanLevel == "S" || SA.HumanLevel == "A"  	select SA).ToList ();  	foreach (var item in SorAList) {  		//当月自检平均分在90分以下降为B级。  		var toBList = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList ();  		toBList = toBList.Where (a => a.Score < 90).ToList ();  		if (toBList.Count () >= 1) {  			double ave = (double)toBList.Select (d => d.Score).Average ();  			if (ave < 90 && ave > 80) {  				HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  				hum.HumanLevel = "B";  				hum.LevelEditTimes += 1;  				db.Entry (hum).State = EntityState.Modified;  				db.SaveChanges ();  			}  		}  	}  	#endregion  	#region S级 降 A级  	var SList = (from S in db.HumanBasicFile.ToList ()  	where S.HumanLevel == "S"  	select S).ToList ();  	foreach (var item in SList) {  		//当月自检平均分在90分以下降为B级。  		var toBList = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList ();  		if (toBList.Count () >= 1) {  			double ave = (double)toBList.Select (d => d.Score).Average ();  			if (ave > 90 && ave < 95) {  				HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  				hum.HumanLevel = "A";  				hum.LevelEditTimes += 1;  				db.Entry (hum).State = EntityState.Modified;  				db.SaveChanges ();  			}  		}  	}  	#endregion  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: if (DateTime.Now.ToShortDateString () == DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).AddDays (-1).ToShortDateString ()) {  	#region AorS级降B级  	var SorAList = (from SA in db.HumanBasicFile.ToList ()  	where SA.HumanLevel == "S" || SA.HumanLevel == "A"  	select SA).ToList ();  	foreach (var item in SorAList) {  		//当月自检平均分在90分以下降为B级。  		var toBList = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList ();  		toBList = toBList.Where (a => a.Score < 90).ToList ();  		if (toBList.Count () >= 1) {  			double ave = (double)toBList.Select (d => d.Score).Average ();  			if (ave < 90 && ave > 80) {  				HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  				hum.HumanLevel = "B";  				hum.LevelEditTimes += 1;  				db.Entry (hum).State = EntityState.Modified;  				db.SaveChanges ();  			}  		}  	}  	#endregion  	#region S级 降 A级  	var SList = (from S in db.HumanBasicFile.ToList ()  	where S.HumanLevel == "S"  	select S).ToList ();  	foreach (var item in SList) {  		//当月自检平均分在90分以下降为B级。  		var toBList = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList ();  		if (toBList.Count () >= 1) {  			double ave = (double)toBList.Select (d => d.Score).Average ();  			if (ave > 90 && ave < 95) {  				HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  				hum.HumanLevel = "A";  				hum.LevelEditTimes += 1;  				db.Entry (hum).State = EntityState.Modified;  				db.SaveChanges ();  			}  		}  	}  	#endregion  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: if (DateTime.Now.ToShortDateString () == DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).AddDays (-1).ToShortDateString ()) {  	#region AorS级降B级  	var SorAList = (from SA in db.HumanBasicFile.ToList ()  	where SA.HumanLevel == "S" || SA.HumanLevel == "A"  	select SA).ToList ();  	foreach (var item in SorAList) {  		//当月自检平均分在90分以下降为B级。  		var toBList = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList ();  		toBList = toBList.Where (a => a.Score < 90).ToList ();  		if (toBList.Count () >= 1) {  			double ave = (double)toBList.Select (d => d.Score).Average ();  			if (ave < 90 && ave > 80) {  				HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  				hum.HumanLevel = "B";  				hum.LevelEditTimes += 1;  				db.Entry (hum).State = EntityState.Modified;  				db.SaveChanges ();  			}  		}  	}  	#endregion  	#region S级 降 A级  	var SList = (from S in db.HumanBasicFile.ToList ()  	where S.HumanLevel == "S"  	select S).ToList ();  	foreach (var item in SList) {  		//当月自检平均分在90分以下降为B级。  		var toBList = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList ();  		if (toBList.Count () >= 1) {  			double ave = (double)toBList.Select (d => d.Score).Average ();  			if (ave > 90 && ave < 95) {  				HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  				hum.HumanLevel = "A";  				hum.LevelEditTimes += 1;  				db.Entry (hum).State = EntityState.Modified;  				db.SaveChanges ();  			}  		}  	}  	#endregion  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: if (DateTime.Now.ToShortDateString () == DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).AddDays (-1).ToShortDateString ()) {  	#region AorS级降B级  	var SorAList = (from SA in db.HumanBasicFile.ToList ()  	where SA.HumanLevel == "S" || SA.HumanLevel == "A"  	select SA).ToList ();  	foreach (var item in SorAList) {  		//当月自检平均分在90分以下降为B级。  		var toBList = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList ();  		toBList = toBList.Where (a => a.Score < 90).ToList ();  		if (toBList.Count () >= 1) {  			double ave = (double)toBList.Select (d => d.Score).Average ();  			if (ave < 90 && ave > 80) {  				HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  				hum.HumanLevel = "B";  				hum.LevelEditTimes += 1;  				db.Entry (hum).State = EntityState.Modified;  				db.SaveChanges ();  			}  		}  	}  	#endregion  	#region S级 降 A级  	var SList = (from S in db.HumanBasicFile.ToList ()  	where S.HumanLevel == "S"  	select S).ToList ();  	foreach (var item in SList) {  		//当月自检平均分在90分以下降为B级。  		var toBList = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList ();  		if (toBList.Count () >= 1) {  			double ave = (double)toBList.Select (d => d.Score).Average ();  			if (ave > 90 && ave < 95) {  				HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  				hum.HumanLevel = "A";  				hum.LevelEditTimes += 1;  				db.Entry (hum).State = EntityState.Modified;  				db.SaveChanges ();  			}  		}  	}  	#endregion  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: if (DateTime.Now.ToShortDateString () == DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).AddDays (-1).ToShortDateString ()) {  	#region AorS级降B级  	var SorAList = (from SA in db.HumanBasicFile.ToList ()  	where SA.HumanLevel == "S" || SA.HumanLevel == "A"  	select SA).ToList ();  	foreach (var item in SorAList) {  		//当月自检平均分在90分以下降为B级。  		var toBList = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList ();  		toBList = toBList.Where (a => a.Score < 90).ToList ();  		if (toBList.Count () >= 1) {  			double ave = (double)toBList.Select (d => d.Score).Average ();  			if (ave < 90 && ave > 80) {  				HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  				hum.HumanLevel = "B";  				hum.LevelEditTimes += 1;  				db.Entry (hum).State = EntityState.Modified;  				db.SaveChanges ();  			}  		}  	}  	#endregion  	#region S级 降 A级  	var SList = (from S in db.HumanBasicFile.ToList ()  	where S.HumanLevel == "S"  	select S).ToList ();  	foreach (var item in SList) {  		//当月自检平均分在90分以下降为B级。  		var toBList = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList ();  		if (toBList.Count () >= 1) {  			double ave = (double)toBList.Select (d => d.Score).Average ();  			if (ave > 90 && ave < 95) {  				HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  				hum.HumanLevel = "A";  				hum.LevelEditTimes += 1;  				db.Entry (hum).State = EntityState.Modified;  				db.SaveChanges ();  			}  		}  	}  	#endregion  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: foreach (var item in SorAList) {  	//当月自检平均分在90分以下降为B级。  	var toBList = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList ();  	toBList = toBList.Where (a => a.Score < 90).ToList ();  	if (toBList.Count () >= 1) {  		double ave = (double)toBList.Select (d => d.Score).Average ();  		if (ave < 90 && ave > 80) {  			HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  			hum.HumanLevel = "B";  			hum.LevelEditTimes += 1;  			db.Entry (hum).State = EntityState.Modified;  			db.SaveChanges ();  		}  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: foreach (var item in SorAList) {  	//当月自检平均分在90分以下降为B级。  	var toBList = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList ();  	toBList = toBList.Where (a => a.Score < 90).ToList ();  	if (toBList.Count () >= 1) {  		double ave = (double)toBList.Select (d => d.Score).Average ();  		if (ave < 90 && ave > 80) {  			HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  			hum.HumanLevel = "B";  			hum.LevelEditTimes += 1;  			db.Entry (hum).State = EntityState.Modified;  			db.SaveChanges ();  		}  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: foreach (var item in SorAList) {  	//当月自检平均分在90分以下降为B级。  	var toBList = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList ();  	toBList = toBList.Where (a => a.Score < 90).ToList ();  	if (toBList.Count () >= 1) {  		double ave = (double)toBList.Select (d => d.Score).Average ();  		if (ave < 90 && ave > 80) {  			HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  			hum.HumanLevel = "B";  			hum.LevelEditTimes += 1;  			db.Entry (hum).State = EntityState.Modified;  			db.SaveChanges ();  		}  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: toBList = toBList.Where (a => a.Score < 90).ToList ();  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: if (toBList.Count () >= 1) {  	double ave = (double)toBList.Select (d => d.Score).Average ();  	if (ave < 90 && ave > 80) {  		HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  		hum.HumanLevel = "B";  		hum.LevelEditTimes += 1;  		db.Entry (hum).State = EntityState.Modified;  		db.SaveChanges ();  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: if (toBList.Count () >= 1) {  	double ave = (double)toBList.Select (d => d.Score).Average ();  	if (ave < 90 && ave > 80) {  		HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  		hum.HumanLevel = "B";  		hum.LevelEditTimes += 1;  		db.Entry (hum).State = EntityState.Modified;  		db.SaveChanges ();  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: if (ave < 90 && ave > 80) {  	HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  	hum.HumanLevel = "B";  	hum.LevelEditTimes += 1;  	db.Entry (hum).State = EntityState.Modified;  	db.SaveChanges ();  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: if (ave < 90 && ave > 80) {  	HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  	hum.HumanLevel = "B";  	hum.LevelEditTimes += 1;  	db.Entry (hum).State = EntityState.Modified;  	db.SaveChanges ();  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: foreach (var item in SList) {  	//当月自检平均分在90分以下降为B级。  	var toBList = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList ();  	if (toBList.Count () >= 1) {  		double ave = (double)toBList.Select (d => d.Score).Average ();  		if (ave > 90 && ave < 95) {  			HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  			hum.HumanLevel = "A";  			hum.LevelEditTimes += 1;  			db.Entry (hum).State = EntityState.Modified;  			db.SaveChanges ();  		}  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: foreach (var item in SList) {  	//当月自检平均分在90分以下降为B级。  	var toBList = dj.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes < 1 && DateTime.Parse (b.DJTime) >= DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")) && DateTime.Parse (b.DJTime) <= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (1).ToShortDateString ())).ToList ();  	if (toBList.Count () >= 1) {  		double ave = (double)toBList.Select (d => d.Score).Average ();  		if (ave > 90 && ave < 95) {  			HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  			hum.HumanLevel = "A";  			hum.LevelEditTimes += 1;  			db.Entry (hum).State = EntityState.Modified;  			db.SaveChanges ();  		}  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: if (toBList.Count () >= 1) {  	double ave = (double)toBList.Select (d => d.Score).Average ();  	if (ave > 90 && ave < 95) {  		HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  		hum.HumanLevel = "A";  		hum.LevelEditTimes += 1;  		db.Entry (hum).State = EntityState.Modified;  		db.SaveChanges ();  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: if (toBList.Count () >= 1) {  	double ave = (double)toBList.Select (d => d.Score).Average ();  	if (ave > 90 && ave < 95) {  		HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  		hum.HumanLevel = "A";  		hum.LevelEditTimes += 1;  		db.Entry (hum).State = EntityState.Modified;  		db.SaveChanges ();  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: if (ave > 90 && ave < 95) {  	HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  	hum.HumanLevel = "A";  	hum.LevelEditTimes += 1;  	db.Entry (hum).State = EntityState.Modified;  	db.SaveChanges ();  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: if (ave > 90 && ave < 95) {  	HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  	hum.HumanLevel = "A";  	hum.LevelEditTimes += 1;  	db.Entry (hum).State = EntityState.Modified;  	db.SaveChanges ();  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,levelCon,The following statement contains a magic number: foreach (var item in AList2) {  	//2个月没有上班降为B级。  	var att = (from a in db.AttendingInfo.ToList ()  	where a.HumanId == item.Id  	select a).ToList ();  	var toBList = att.Where (b => b.HumanBasicFile.uniNum == item.uniNum && b.HumanBasicFile.LevelEditTimes == 0 && DateTime.Parse (b.Date) > DateTime.Parse (DateTime.Now.ToShortDateString ()).AddMonths (-2)).ToList ();  	if (toBList.Count () <= 0) {  		if (item.LevelEditTimes == 0) {  			HumanBasicFile hum = db.HumanBasicFile.Find (item.Id);  			hum.HumanLevel = "B";  			hum.LevelEditTimes += 1;  			db.Entry (hum).State = EntityState.Modified;  			db.SaveChanges ();  		}  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,getAtoS,The following statement contains a magic number: foreach (var item in AhumList) {  	var b = dj.Where (d => d.HumanId == item.Id && DateTime.Parse (d.DJTime) >= monthBegin && DateTime.Parse (d.DJTime) <= nextmonthBegin).ToList ();  	if (b.Count () >= 4) {  		double ave = (double)b.Select (d => d.Score).Average ();  		if (ave > 95) {  			string gender = "";  			if (item.Sex == true) {  				gender = "男";  			}  			else {  				gender = "女";  			}  			getA.Add (new getA () {  				id = item.Id'  				name = item.Name'  				sex = gender'  				uniNum = item.uniNum  			});  		}  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,getAtoS,The following statement contains a magic number: foreach (var item in AhumList) {  	var b = dj.Where (d => d.HumanId == item.Id && DateTime.Parse (d.DJTime) >= monthBegin && DateTime.Parse (d.DJTime) <= nextmonthBegin).ToList ();  	if (b.Count () >= 4) {  		double ave = (double)b.Select (d => d.Score).Average ();  		if (ave > 95) {  			string gender = "";  			if (item.Sex == true) {  				gender = "男";  			}  			else {  				gender = "女";  			}  			getA.Add (new getA () {  				id = item.Id'  				name = item.Name'  				sex = gender'  				uniNum = item.uniNum  			});  		}  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,getAtoS,The following statement contains a magic number: if (b.Count () >= 4) {  	double ave = (double)b.Select (d => d.Score).Average ();  	if (ave > 95) {  		string gender = "";  		if (item.Sex == true) {  			gender = "男";  		}  		else {  			gender = "女";  		}  		getA.Add (new getA () {  			id = item.Id'  			name = item.Name'  			sex = gender'  			uniNum = item.uniNum  		});  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,getAtoS,The following statement contains a magic number: if (b.Count () >= 4) {  	double ave = (double)b.Select (d => d.Score).Average ();  	if (ave > 95) {  		string gender = "";  		if (item.Sex == true) {  			gender = "男";  		}  		else {  			gender = "女";  		}  		getA.Add (new getA () {  			id = item.Id'  			name = item.Name'  			sex = gender'  			uniNum = item.uniNum  		});  	}  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,getAtoS,The following statement contains a magic number: if (ave > 95) {  	string gender = "";  	if (item.Sex == true) {  		gender = "男";  	}  	else {  		gender = "女";  	}  	getA.Add (new getA () {  		id = item.Id'  		name = item.Name'  		sex = gender'  		uniNum = item.uniNum  	});  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,AddOfficeCon,The following statement contains a magic number: if (string.IsNullOrEmpty (officeMask)) {  	ModelState.AddModelError ("captainInfo.officemask"' "请输入办事处代号");  }  else if (officeMask.Length > 5) {  	ModelState.AddModelError ("captainInfo.officemask"' "至多输入5个字符");  }  else if (!Letter.IsMatch (officeMask)) {  	ModelState.AddModelError ("captainInfo.officemask"' "请输入大小写字母、数字");  }  
Magic Number,Management.Controllers,LevelController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LevelController.cs,AddOfficeCon,The following statement contains a magic number: if (officeMask.Length > 5) {  	ModelState.AddModelError ("captainInfo.officemask"' "至多输入5个字符");  }  else if (!Letter.IsMatch (officeMask)) {  	ModelState.AddModelError ("captainInfo.officemask"' "请输入大小写字母、数字");  }  
Magic Number,Management.Controllers,LoginController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LoginController.cs,Index,The following statement contains a magic number: if (ms.Authority == 0) {  	Session ["authority"] = "管理员";  }  else if (ms.Authority == 1) {  	Session ["authority"] = "督导";  }  else if (ms.Authority == 2) {  	Session ["authority"] = "小队长";  }  else {  	return null;  }  
Magic Number,Management.Controllers,LoginController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LoginController.cs,Index,The following statement contains a magic number: if (ms.Authority == 1) {  	Session ["authority"] = "督导";  }  else if (ms.Authority == 2) {  	Session ["authority"] = "小队长";  }  else {  	return null;  }  
Magic Number,Management.Controllers,LoginController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\LoginController.cs,Index,The following statement contains a magic number: if (ms.Authority == 2) {  	Session ["authority"] = "小队长";  }  else {  	return null;  }  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (Citycontent))//显示所有城市   {  	foreach (var cityid in cityList)//遍历城市  	 {  		var shopNamelist = (from shop in db.SShop.ToList ()  		where shop.CityId == cityid.Id  		select shop.Id).ToList ();  		foreach (var shopname in shopNamelist)//遍历城市中商店  		 {  			var humanAttend = (from i in attendingInfo  			where i.Department == shopname  			select i).ToList ();  			foreach (var people in humanAttend)//遍历商店中人员  			 {  				//获取等级  				var rank = (from h in humanData  				where h.IsDraft == false && h.Id == people.HumanId  				select h.HumanLevel).FirstOrDefault ().ToString ();  				//增加记录  				peo.Add (new getpeople () {  					uniNum = people.HumanBasicFile.uniNum'  					level = rank'  					functions = people.Functions'  					city = cityid.Id'  					date = people.Date  				});  			}  		}  	}  	foreach (var item in cityList) {  		var cityname = (from city in db.City.ToList ()  		where city.Id == item.Id  		select city.Name).FirstOrDefault ().ToString ();  		//获取城市名  		conInfo.Add (new getCondition () {  			city = cityname'  			human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  			attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  			xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			S = humanData.Where (a => a.HumanLevel == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			A = humanData.Where (a => a.HumanLevel == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			B = humanData.Where (a => a.HumanLevel == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		});  	}  	#region 汇总  	string humtotal = conInfo.Sum (a => Convert.ToInt32 (a.human_count)).ToString ();  	string attendtotal = conInfo.Sum (a => Convert.ToInt32 (a.attend_count)).ToString ();  	string xctotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_count)).ToString ();  	string xconetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_monthActive)).ToString ();  	string xcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_threeMonthActive)).ToString ();  	string lctotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_count)).ToString ();  	string lconetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_monthActive)).ToString ();  	string lcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_threeMonthActive)).ToString ();  	string xdztotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_count)).ToString ();  	string xdzonetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_monthActive)).ToString ();  	string xdzthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_threeMonthActive)).ToString ();  	string Stotal = conInfo.Sum (a => Convert.ToInt32 (a.S)).ToString ();  	string Atotal = conInfo.Sum (a => Convert.ToInt32 (a.A)).ToString ();  	string Btotal = conInfo.Sum (a => Convert.ToInt32 (a.B)).ToString ();  	#endregion  	//总页数  	int totalPage = cityList.Count () / pagesize;  	if (cityList.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	conInfo = conInfo.Skip (pagesize * (page - 1)).Take (pagesize).ToList ();  	conInfo.Add (new getCondition () {  		city = "总人数"'  		human_count = humtotal'  		attend_count = attendtotal'  		xc_count = xctotal'  		xc_monthActive = xconetotal'  		xc_threeMonthActive = xcthreetotal'  		lc_count = lctotal'  		lc_monthActive = lconetotal'  		lc_threeMonthActive = lcthreetotal'  		xdz_count = xdztotal'  		xdz_monthActive = xdzonetotal'  		xdz_threeMonthActive = xdzthreetotal'  		S = Stotal'  		A = Atotal'  		B = Btotal  	});  	//给前台所需数据赋值  	var gridData = new {  		gdata = conInfo'  		humtotal = humtotal'  		attendtotal = attendtotal'  		xctotal = xctotal'  		xconetotal = xconetotal'  		xcthreetotal = xcthreetotal'  		lctotal = lctotal'  		lconetotal = lconetotal'  		lcthreetotal = lcthreetotal'  		xdztotal = xdztotal'  		xdzonetotal = xdzonetotal'  		xdzthreetotal = xdzthreetotal'  		Stotal = Stotal'  		Atotal = Atotal'  		Btotal = Btotal'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + cityList.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  else {  	var city1 = cityList.Where (a => a.Name.Contains (Citycontent)).ToList ();  	//获取城市名  	foreach (var cityid in city1)//遍历城市  	 {  		var shopNamelist = (from shop in db.SShop.ToList ()  		where shop.CityId == cityid.Id  		select shop.Id).ToList ();  		foreach (var shopname in shopNamelist)//遍历城市中商店  		 {  			var humanAttend = (from i in attendingInfo  			where i.Department == shopname  			select i).ToList ();  			foreach (var people in humanAttend)//遍历商店中人员  			 {  				//获取等级  				var rank = (from h in humanData  				where h.IsDraft == false && h.Id == people.HumanId  				select h.HumanLevel).FirstOrDefault ().ToString ();  				//增加记录  				peo.Add (new getpeople () {  					uniNum = people.HumanBasicFile.uniNum'  					level = rank'  					functions = people.Functions'  					city = cityid.Id'  					date = people.Date  				});  			}  		}  	}  	foreach (var item in city1) {  		var cityname = (from city in db.City.ToList ()  		where city.Id == item.Id  		select city.Name).FirstOrDefault ().ToString ();  		//获取城市名  		conInfo.Add (new getCondition () {  			city = cityname'  			human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  			attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  			xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			S = peo.Where (a => a.level == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			A = peo.Where (a => a.level == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			B = peo.Where (a => a.level == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		});  	}  	//总页数  	int totalPage = city1.Count () / pagesize;  	if (city1.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	#region 汇总  	string humtotal = conInfo.Sum (a => Convert.ToInt32 (a.human_count)).ToString ();  	string attendtotal = conInfo.Sum (a => Convert.ToInt32 (a.attend_count)).ToString ();  	string xctotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_count)).ToString ();  	string xconetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_monthActive)).ToString ();  	string xcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_threeMonthActive)).ToString ();  	string lctotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_count)).ToString ();  	string lconetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_monthActive)).ToString ();  	string lcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_threeMonthActive)).ToString ();  	string xdztotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_count)).ToString ();  	string xdzonetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_monthActive)).ToString ();  	string xdzthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_threeMonthActive)).ToString ();  	string Stotal = conInfo.Sum (a => Convert.ToInt32 (a.S)).ToString ();  	string Atotal = conInfo.Sum (a => Convert.ToInt32 (a.A)).ToString ();  	string Btotal = conInfo.Sum (a => Convert.ToInt32 (a.B)).ToString ();  	#endregion  	conInfo = conInfo.Skip (pagesize * (page - 1)).Take (pagesize).ToList ();  	conInfo.Add (new getCondition () {  		city = "总人数"'  		human_count = humtotal'  		attend_count = attendtotal'  		xc_count = xctotal'  		xc_monthActive = xconetotal'  		xc_threeMonthActive = xcthreetotal'  		lc_count = lctotal'  		lc_monthActive = lconetotal'  		lc_threeMonthActive = lcthreetotal'  		xdz_count = xdztotal'  		xdz_monthActive = xdzonetotal'  		xdz_threeMonthActive = xdzthreetotal'  		S = Stotal'  		A = Atotal'  		B = Btotal  	});  	var gridData = new {  		gdata = conInfo'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + city1.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (Citycontent))//显示所有城市   {  	foreach (var cityid in cityList)//遍历城市  	 {  		var shopNamelist = (from shop in db.SShop.ToList ()  		where shop.CityId == cityid.Id  		select shop.Id).ToList ();  		foreach (var shopname in shopNamelist)//遍历城市中商店  		 {  			var humanAttend = (from i in attendingInfo  			where i.Department == shopname  			select i).ToList ();  			foreach (var people in humanAttend)//遍历商店中人员  			 {  				//获取等级  				var rank = (from h in humanData  				where h.IsDraft == false && h.Id == people.HumanId  				select h.HumanLevel).FirstOrDefault ().ToString ();  				//增加记录  				peo.Add (new getpeople () {  					uniNum = people.HumanBasicFile.uniNum'  					level = rank'  					functions = people.Functions'  					city = cityid.Id'  					date = people.Date  				});  			}  		}  	}  	foreach (var item in cityList) {  		var cityname = (from city in db.City.ToList ()  		where city.Id == item.Id  		select city.Name).FirstOrDefault ().ToString ();  		//获取城市名  		conInfo.Add (new getCondition () {  			city = cityname'  			human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  			attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  			xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			S = humanData.Where (a => a.HumanLevel == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			A = humanData.Where (a => a.HumanLevel == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			B = humanData.Where (a => a.HumanLevel == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		});  	}  	#region 汇总  	string humtotal = conInfo.Sum (a => Convert.ToInt32 (a.human_count)).ToString ();  	string attendtotal = conInfo.Sum (a => Convert.ToInt32 (a.attend_count)).ToString ();  	string xctotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_count)).ToString ();  	string xconetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_monthActive)).ToString ();  	string xcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_threeMonthActive)).ToString ();  	string lctotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_count)).ToString ();  	string lconetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_monthActive)).ToString ();  	string lcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_threeMonthActive)).ToString ();  	string xdztotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_count)).ToString ();  	string xdzonetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_monthActive)).ToString ();  	string xdzthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_threeMonthActive)).ToString ();  	string Stotal = conInfo.Sum (a => Convert.ToInt32 (a.S)).ToString ();  	string Atotal = conInfo.Sum (a => Convert.ToInt32 (a.A)).ToString ();  	string Btotal = conInfo.Sum (a => Convert.ToInt32 (a.B)).ToString ();  	#endregion  	//总页数  	int totalPage = cityList.Count () / pagesize;  	if (cityList.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	conInfo = conInfo.Skip (pagesize * (page - 1)).Take (pagesize).ToList ();  	conInfo.Add (new getCondition () {  		city = "总人数"'  		human_count = humtotal'  		attend_count = attendtotal'  		xc_count = xctotal'  		xc_monthActive = xconetotal'  		xc_threeMonthActive = xcthreetotal'  		lc_count = lctotal'  		lc_monthActive = lconetotal'  		lc_threeMonthActive = lcthreetotal'  		xdz_count = xdztotal'  		xdz_monthActive = xdzonetotal'  		xdz_threeMonthActive = xdzthreetotal'  		S = Stotal'  		A = Atotal'  		B = Btotal  	});  	//给前台所需数据赋值  	var gridData = new {  		gdata = conInfo'  		humtotal = humtotal'  		attendtotal = attendtotal'  		xctotal = xctotal'  		xconetotal = xconetotal'  		xcthreetotal = xcthreetotal'  		lctotal = lctotal'  		lconetotal = lconetotal'  		lcthreetotal = lcthreetotal'  		xdztotal = xdztotal'  		xdzonetotal = xdzonetotal'  		xdzthreetotal = xdzthreetotal'  		Stotal = Stotal'  		Atotal = Atotal'  		Btotal = Btotal'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + cityList.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  else {  	var city1 = cityList.Where (a => a.Name.Contains (Citycontent)).ToList ();  	//获取城市名  	foreach (var cityid in city1)//遍历城市  	 {  		var shopNamelist = (from shop in db.SShop.ToList ()  		where shop.CityId == cityid.Id  		select shop.Id).ToList ();  		foreach (var shopname in shopNamelist)//遍历城市中商店  		 {  			var humanAttend = (from i in attendingInfo  			where i.Department == shopname  			select i).ToList ();  			foreach (var people in humanAttend)//遍历商店中人员  			 {  				//获取等级  				var rank = (from h in humanData  				where h.IsDraft == false && h.Id == people.HumanId  				select h.HumanLevel).FirstOrDefault ().ToString ();  				//增加记录  				peo.Add (new getpeople () {  					uniNum = people.HumanBasicFile.uniNum'  					level = rank'  					functions = people.Functions'  					city = cityid.Id'  					date = people.Date  				});  			}  		}  	}  	foreach (var item in city1) {  		var cityname = (from city in db.City.ToList ()  		where city.Id == item.Id  		select city.Name).FirstOrDefault ().ToString ();  		//获取城市名  		conInfo.Add (new getCondition () {  			city = cityname'  			human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  			attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  			xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			S = peo.Where (a => a.level == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			A = peo.Where (a => a.level == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			B = peo.Where (a => a.level == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		});  	}  	//总页数  	int totalPage = city1.Count () / pagesize;  	if (city1.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	#region 汇总  	string humtotal = conInfo.Sum (a => Convert.ToInt32 (a.human_count)).ToString ();  	string attendtotal = conInfo.Sum (a => Convert.ToInt32 (a.attend_count)).ToString ();  	string xctotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_count)).ToString ();  	string xconetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_monthActive)).ToString ();  	string xcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_threeMonthActive)).ToString ();  	string lctotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_count)).ToString ();  	string lconetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_monthActive)).ToString ();  	string lcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_threeMonthActive)).ToString ();  	string xdztotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_count)).ToString ();  	string xdzonetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_monthActive)).ToString ();  	string xdzthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_threeMonthActive)).ToString ();  	string Stotal = conInfo.Sum (a => Convert.ToInt32 (a.S)).ToString ();  	string Atotal = conInfo.Sum (a => Convert.ToInt32 (a.A)).ToString ();  	string Btotal = conInfo.Sum (a => Convert.ToInt32 (a.B)).ToString ();  	#endregion  	conInfo = conInfo.Skip (pagesize * (page - 1)).Take (pagesize).ToList ();  	conInfo.Add (new getCondition () {  		city = "总人数"'  		human_count = humtotal'  		attend_count = attendtotal'  		xc_count = xctotal'  		xc_monthActive = xconetotal'  		xc_threeMonthActive = xcthreetotal'  		lc_count = lctotal'  		lc_monthActive = lconetotal'  		lc_threeMonthActive = lcthreetotal'  		xdz_count = xdztotal'  		xdz_monthActive = xdzonetotal'  		xdz_threeMonthActive = xdzthreetotal'  		S = Stotal'  		A = Atotal'  		B = Btotal  	});  	var gridData = new {  		gdata = conInfo'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + city1.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (Citycontent))//显示所有城市   {  	foreach (var cityid in cityList)//遍历城市  	 {  		var shopNamelist = (from shop in db.SShop.ToList ()  		where shop.CityId == cityid.Id  		select shop.Id).ToList ();  		foreach (var shopname in shopNamelist)//遍历城市中商店  		 {  			var humanAttend = (from i in attendingInfo  			where i.Department == shopname  			select i).ToList ();  			foreach (var people in humanAttend)//遍历商店中人员  			 {  				//获取等级  				var rank = (from h in humanData  				where h.IsDraft == false && h.Id == people.HumanId  				select h.HumanLevel).FirstOrDefault ().ToString ();  				//增加记录  				peo.Add (new getpeople () {  					uniNum = people.HumanBasicFile.uniNum'  					level = rank'  					functions = people.Functions'  					city = cityid.Id'  					date = people.Date  				});  			}  		}  	}  	foreach (var item in cityList) {  		var cityname = (from city in db.City.ToList ()  		where city.Id == item.Id  		select city.Name).FirstOrDefault ().ToString ();  		//获取城市名  		conInfo.Add (new getCondition () {  			city = cityname'  			human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  			attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  			xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			S = humanData.Where (a => a.HumanLevel == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			A = humanData.Where (a => a.HumanLevel == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			B = humanData.Where (a => a.HumanLevel == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		});  	}  	#region 汇总  	string humtotal = conInfo.Sum (a => Convert.ToInt32 (a.human_count)).ToString ();  	string attendtotal = conInfo.Sum (a => Convert.ToInt32 (a.attend_count)).ToString ();  	string xctotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_count)).ToString ();  	string xconetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_monthActive)).ToString ();  	string xcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_threeMonthActive)).ToString ();  	string lctotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_count)).ToString ();  	string lconetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_monthActive)).ToString ();  	string lcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_threeMonthActive)).ToString ();  	string xdztotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_count)).ToString ();  	string xdzonetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_monthActive)).ToString ();  	string xdzthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_threeMonthActive)).ToString ();  	string Stotal = conInfo.Sum (a => Convert.ToInt32 (a.S)).ToString ();  	string Atotal = conInfo.Sum (a => Convert.ToInt32 (a.A)).ToString ();  	string Btotal = conInfo.Sum (a => Convert.ToInt32 (a.B)).ToString ();  	#endregion  	//总页数  	int totalPage = cityList.Count () / pagesize;  	if (cityList.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	conInfo = conInfo.Skip (pagesize * (page - 1)).Take (pagesize).ToList ();  	conInfo.Add (new getCondition () {  		city = "总人数"'  		human_count = humtotal'  		attend_count = attendtotal'  		xc_count = xctotal'  		xc_monthActive = xconetotal'  		xc_threeMonthActive = xcthreetotal'  		lc_count = lctotal'  		lc_monthActive = lconetotal'  		lc_threeMonthActive = lcthreetotal'  		xdz_count = xdztotal'  		xdz_monthActive = xdzonetotal'  		xdz_threeMonthActive = xdzthreetotal'  		S = Stotal'  		A = Atotal'  		B = Btotal  	});  	//给前台所需数据赋值  	var gridData = new {  		gdata = conInfo'  		humtotal = humtotal'  		attendtotal = attendtotal'  		xctotal = xctotal'  		xconetotal = xconetotal'  		xcthreetotal = xcthreetotal'  		lctotal = lctotal'  		lconetotal = lconetotal'  		lcthreetotal = lcthreetotal'  		xdztotal = xdztotal'  		xdzonetotal = xdzonetotal'  		xdzthreetotal = xdzthreetotal'  		Stotal = Stotal'  		Atotal = Atotal'  		Btotal = Btotal'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + cityList.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  else {  	var city1 = cityList.Where (a => a.Name.Contains (Citycontent)).ToList ();  	//获取城市名  	foreach (var cityid in city1)//遍历城市  	 {  		var shopNamelist = (from shop in db.SShop.ToList ()  		where shop.CityId == cityid.Id  		select shop.Id).ToList ();  		foreach (var shopname in shopNamelist)//遍历城市中商店  		 {  			var humanAttend = (from i in attendingInfo  			where i.Department == shopname  			select i).ToList ();  			foreach (var people in humanAttend)//遍历商店中人员  			 {  				//获取等级  				var rank = (from h in humanData  				where h.IsDraft == false && h.Id == people.HumanId  				select h.HumanLevel).FirstOrDefault ().ToString ();  				//增加记录  				peo.Add (new getpeople () {  					uniNum = people.HumanBasicFile.uniNum'  					level = rank'  					functions = people.Functions'  					city = cityid.Id'  					date = people.Date  				});  			}  		}  	}  	foreach (var item in city1) {  		var cityname = (from city in db.City.ToList ()  		where city.Id == item.Id  		select city.Name).FirstOrDefault ().ToString ();  		//获取城市名  		conInfo.Add (new getCondition () {  			city = cityname'  			human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  			attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  			xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			S = peo.Where (a => a.level == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			A = peo.Where (a => a.level == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			B = peo.Where (a => a.level == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		});  	}  	//总页数  	int totalPage = city1.Count () / pagesize;  	if (city1.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	#region 汇总  	string humtotal = conInfo.Sum (a => Convert.ToInt32 (a.human_count)).ToString ();  	string attendtotal = conInfo.Sum (a => Convert.ToInt32 (a.attend_count)).ToString ();  	string xctotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_count)).ToString ();  	string xconetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_monthActive)).ToString ();  	string xcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_threeMonthActive)).ToString ();  	string lctotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_count)).ToString ();  	string lconetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_monthActive)).ToString ();  	string lcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_threeMonthActive)).ToString ();  	string xdztotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_count)).ToString ();  	string xdzonetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_monthActive)).ToString ();  	string xdzthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_threeMonthActive)).ToString ();  	string Stotal = conInfo.Sum (a => Convert.ToInt32 (a.S)).ToString ();  	string Atotal = conInfo.Sum (a => Convert.ToInt32 (a.A)).ToString ();  	string Btotal = conInfo.Sum (a => Convert.ToInt32 (a.B)).ToString ();  	#endregion  	conInfo = conInfo.Skip (pagesize * (page - 1)).Take (pagesize).ToList ();  	conInfo.Add (new getCondition () {  		city = "总人数"'  		human_count = humtotal'  		attend_count = attendtotal'  		xc_count = xctotal'  		xc_monthActive = xconetotal'  		xc_threeMonthActive = xcthreetotal'  		lc_count = lctotal'  		lc_monthActive = lconetotal'  		lc_threeMonthActive = lcthreetotal'  		xdz_count = xdztotal'  		xdz_monthActive = xdzonetotal'  		xdz_threeMonthActive = xdzthreetotal'  		S = Stotal'  		A = Atotal'  		B = Btotal  	});  	var gridData = new {  		gdata = conInfo'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + city1.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (Citycontent))//显示所有城市   {  	foreach (var cityid in cityList)//遍历城市  	 {  		var shopNamelist = (from shop in db.SShop.ToList ()  		where shop.CityId == cityid.Id  		select shop.Id).ToList ();  		foreach (var shopname in shopNamelist)//遍历城市中商店  		 {  			var humanAttend = (from i in attendingInfo  			where i.Department == shopname  			select i).ToList ();  			foreach (var people in humanAttend)//遍历商店中人员  			 {  				//获取等级  				var rank = (from h in humanData  				where h.IsDraft == false && h.Id == people.HumanId  				select h.HumanLevel).FirstOrDefault ().ToString ();  				//增加记录  				peo.Add (new getpeople () {  					uniNum = people.HumanBasicFile.uniNum'  					level = rank'  					functions = people.Functions'  					city = cityid.Id'  					date = people.Date  				});  			}  		}  	}  	foreach (var item in cityList) {  		var cityname = (from city in db.City.ToList ()  		where city.Id == item.Id  		select city.Name).FirstOrDefault ().ToString ();  		//获取城市名  		conInfo.Add (new getCondition () {  			city = cityname'  			human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  			attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  			xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			S = humanData.Where (a => a.HumanLevel == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			A = humanData.Where (a => a.HumanLevel == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			B = humanData.Where (a => a.HumanLevel == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		});  	}  	#region 汇总  	string humtotal = conInfo.Sum (a => Convert.ToInt32 (a.human_count)).ToString ();  	string attendtotal = conInfo.Sum (a => Convert.ToInt32 (a.attend_count)).ToString ();  	string xctotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_count)).ToString ();  	string xconetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_monthActive)).ToString ();  	string xcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_threeMonthActive)).ToString ();  	string lctotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_count)).ToString ();  	string lconetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_monthActive)).ToString ();  	string lcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_threeMonthActive)).ToString ();  	string xdztotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_count)).ToString ();  	string xdzonetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_monthActive)).ToString ();  	string xdzthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_threeMonthActive)).ToString ();  	string Stotal = conInfo.Sum (a => Convert.ToInt32 (a.S)).ToString ();  	string Atotal = conInfo.Sum (a => Convert.ToInt32 (a.A)).ToString ();  	string Btotal = conInfo.Sum (a => Convert.ToInt32 (a.B)).ToString ();  	#endregion  	//总页数  	int totalPage = cityList.Count () / pagesize;  	if (cityList.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	conInfo = conInfo.Skip (pagesize * (page - 1)).Take (pagesize).ToList ();  	conInfo.Add (new getCondition () {  		city = "总人数"'  		human_count = humtotal'  		attend_count = attendtotal'  		xc_count = xctotal'  		xc_monthActive = xconetotal'  		xc_threeMonthActive = xcthreetotal'  		lc_count = lctotal'  		lc_monthActive = lconetotal'  		lc_threeMonthActive = lcthreetotal'  		xdz_count = xdztotal'  		xdz_monthActive = xdzonetotal'  		xdz_threeMonthActive = xdzthreetotal'  		S = Stotal'  		A = Atotal'  		B = Btotal  	});  	//给前台所需数据赋值  	var gridData = new {  		gdata = conInfo'  		humtotal = humtotal'  		attendtotal = attendtotal'  		xctotal = xctotal'  		xconetotal = xconetotal'  		xcthreetotal = xcthreetotal'  		lctotal = lctotal'  		lconetotal = lconetotal'  		lcthreetotal = lcthreetotal'  		xdztotal = xdztotal'  		xdzonetotal = xdzonetotal'  		xdzthreetotal = xdzthreetotal'  		Stotal = Stotal'  		Atotal = Atotal'  		Btotal = Btotal'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + cityList.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  else {  	var city1 = cityList.Where (a => a.Name.Contains (Citycontent)).ToList ();  	//获取城市名  	foreach (var cityid in city1)//遍历城市  	 {  		var shopNamelist = (from shop in db.SShop.ToList ()  		where shop.CityId == cityid.Id  		select shop.Id).ToList ();  		foreach (var shopname in shopNamelist)//遍历城市中商店  		 {  			var humanAttend = (from i in attendingInfo  			where i.Department == shopname  			select i).ToList ();  			foreach (var people in humanAttend)//遍历商店中人员  			 {  				//获取等级  				var rank = (from h in humanData  				where h.IsDraft == false && h.Id == people.HumanId  				select h.HumanLevel).FirstOrDefault ().ToString ();  				//增加记录  				peo.Add (new getpeople () {  					uniNum = people.HumanBasicFile.uniNum'  					level = rank'  					functions = people.Functions'  					city = cityid.Id'  					date = people.Date  				});  			}  		}  	}  	foreach (var item in city1) {  		var cityname = (from city in db.City.ToList ()  		where city.Id == item.Id  		select city.Name).FirstOrDefault ().ToString ();  		//获取城市名  		conInfo.Add (new getCondition () {  			city = cityname'  			human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  			attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  			xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			S = peo.Where (a => a.level == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			A = peo.Where (a => a.level == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			B = peo.Where (a => a.level == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		});  	}  	//总页数  	int totalPage = city1.Count () / pagesize;  	if (city1.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	#region 汇总  	string humtotal = conInfo.Sum (a => Convert.ToInt32 (a.human_count)).ToString ();  	string attendtotal = conInfo.Sum (a => Convert.ToInt32 (a.attend_count)).ToString ();  	string xctotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_count)).ToString ();  	string xconetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_monthActive)).ToString ();  	string xcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_threeMonthActive)).ToString ();  	string lctotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_count)).ToString ();  	string lconetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_monthActive)).ToString ();  	string lcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_threeMonthActive)).ToString ();  	string xdztotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_count)).ToString ();  	string xdzonetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_monthActive)).ToString ();  	string xdzthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_threeMonthActive)).ToString ();  	string Stotal = conInfo.Sum (a => Convert.ToInt32 (a.S)).ToString ();  	string Atotal = conInfo.Sum (a => Convert.ToInt32 (a.A)).ToString ();  	string Btotal = conInfo.Sum (a => Convert.ToInt32 (a.B)).ToString ();  	#endregion  	conInfo = conInfo.Skip (pagesize * (page - 1)).Take (pagesize).ToList ();  	conInfo.Add (new getCondition () {  		city = "总人数"'  		human_count = humtotal'  		attend_count = attendtotal'  		xc_count = xctotal'  		xc_monthActive = xconetotal'  		xc_threeMonthActive = xcthreetotal'  		lc_count = lctotal'  		lc_monthActive = lconetotal'  		lc_threeMonthActive = lcthreetotal'  		xdz_count = xdztotal'  		xdz_monthActive = xdzonetotal'  		xdz_threeMonthActive = xdzthreetotal'  		S = Stotal'  		A = Atotal'  		B = Btotal  	});  	var gridData = new {  		gdata = conInfo'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + city1.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (Citycontent))//显示所有城市   {  	foreach (var cityid in cityList)//遍历城市  	 {  		var shopNamelist = (from shop in db.SShop.ToList ()  		where shop.CityId == cityid.Id  		select shop.Id).ToList ();  		foreach (var shopname in shopNamelist)//遍历城市中商店  		 {  			var humanAttend = (from i in attendingInfo  			where i.Department == shopname  			select i).ToList ();  			foreach (var people in humanAttend)//遍历商店中人员  			 {  				//获取等级  				var rank = (from h in humanData  				where h.IsDraft == false && h.Id == people.HumanId  				select h.HumanLevel).FirstOrDefault ().ToString ();  				//增加记录  				peo.Add (new getpeople () {  					uniNum = people.HumanBasicFile.uniNum'  					level = rank'  					functions = people.Functions'  					city = cityid.Id'  					date = people.Date  				});  			}  		}  	}  	foreach (var item in cityList) {  		var cityname = (from city in db.City.ToList ()  		where city.Id == item.Id  		select city.Name).FirstOrDefault ().ToString ();  		//获取城市名  		conInfo.Add (new getCondition () {  			city = cityname'  			human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  			attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  			xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			S = humanData.Where (a => a.HumanLevel == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			A = humanData.Where (a => a.HumanLevel == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			B = humanData.Where (a => a.HumanLevel == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		});  	}  	#region 汇总  	string humtotal = conInfo.Sum (a => Convert.ToInt32 (a.human_count)).ToString ();  	string attendtotal = conInfo.Sum (a => Convert.ToInt32 (a.attend_count)).ToString ();  	string xctotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_count)).ToString ();  	string xconetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_monthActive)).ToString ();  	string xcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_threeMonthActive)).ToString ();  	string lctotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_count)).ToString ();  	string lconetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_monthActive)).ToString ();  	string lcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_threeMonthActive)).ToString ();  	string xdztotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_count)).ToString ();  	string xdzonetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_monthActive)).ToString ();  	string xdzthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_threeMonthActive)).ToString ();  	string Stotal = conInfo.Sum (a => Convert.ToInt32 (a.S)).ToString ();  	string Atotal = conInfo.Sum (a => Convert.ToInt32 (a.A)).ToString ();  	string Btotal = conInfo.Sum (a => Convert.ToInt32 (a.B)).ToString ();  	#endregion  	//总页数  	int totalPage = cityList.Count () / pagesize;  	if (cityList.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	conInfo = conInfo.Skip (pagesize * (page - 1)).Take (pagesize).ToList ();  	conInfo.Add (new getCondition () {  		city = "总人数"'  		human_count = humtotal'  		attend_count = attendtotal'  		xc_count = xctotal'  		xc_monthActive = xconetotal'  		xc_threeMonthActive = xcthreetotal'  		lc_count = lctotal'  		lc_monthActive = lconetotal'  		lc_threeMonthActive = lcthreetotal'  		xdz_count = xdztotal'  		xdz_monthActive = xdzonetotal'  		xdz_threeMonthActive = xdzthreetotal'  		S = Stotal'  		A = Atotal'  		B = Btotal  	});  	//给前台所需数据赋值  	var gridData = new {  		gdata = conInfo'  		humtotal = humtotal'  		attendtotal = attendtotal'  		xctotal = xctotal'  		xconetotal = xconetotal'  		xcthreetotal = xcthreetotal'  		lctotal = lctotal'  		lconetotal = lconetotal'  		lcthreetotal = lcthreetotal'  		xdztotal = xdztotal'  		xdzonetotal = xdzonetotal'  		xdzthreetotal = xdzthreetotal'  		Stotal = Stotal'  		Atotal = Atotal'  		Btotal = Btotal'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + cityList.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  else {  	var city1 = cityList.Where (a => a.Name.Contains (Citycontent)).ToList ();  	//获取城市名  	foreach (var cityid in city1)//遍历城市  	 {  		var shopNamelist = (from shop in db.SShop.ToList ()  		where shop.CityId == cityid.Id  		select shop.Id).ToList ();  		foreach (var shopname in shopNamelist)//遍历城市中商店  		 {  			var humanAttend = (from i in attendingInfo  			where i.Department == shopname  			select i).ToList ();  			foreach (var people in humanAttend)//遍历商店中人员  			 {  				//获取等级  				var rank = (from h in humanData  				where h.IsDraft == false && h.Id == people.HumanId  				select h.HumanLevel).FirstOrDefault ().ToString ();  				//增加记录  				peo.Add (new getpeople () {  					uniNum = people.HumanBasicFile.uniNum'  					level = rank'  					functions = people.Functions'  					city = cityid.Id'  					date = people.Date  				});  			}  		}  	}  	foreach (var item in city1) {  		var cityname = (from city in db.City.ToList ()  		where city.Id == item.Id  		select city.Name).FirstOrDefault ().ToString ();  		//获取城市名  		conInfo.Add (new getCondition () {  			city = cityname'  			human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  			attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  			xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			S = peo.Where (a => a.level == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			A = peo.Where (a => a.level == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			B = peo.Where (a => a.level == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		});  	}  	//总页数  	int totalPage = city1.Count () / pagesize;  	if (city1.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	#region 汇总  	string humtotal = conInfo.Sum (a => Convert.ToInt32 (a.human_count)).ToString ();  	string attendtotal = conInfo.Sum (a => Convert.ToInt32 (a.attend_count)).ToString ();  	string xctotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_count)).ToString ();  	string xconetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_monthActive)).ToString ();  	string xcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_threeMonthActive)).ToString ();  	string lctotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_count)).ToString ();  	string lconetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_monthActive)).ToString ();  	string lcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_threeMonthActive)).ToString ();  	string xdztotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_count)).ToString ();  	string xdzonetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_monthActive)).ToString ();  	string xdzthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_threeMonthActive)).ToString ();  	string Stotal = conInfo.Sum (a => Convert.ToInt32 (a.S)).ToString ();  	string Atotal = conInfo.Sum (a => Convert.ToInt32 (a.A)).ToString ();  	string Btotal = conInfo.Sum (a => Convert.ToInt32 (a.B)).ToString ();  	#endregion  	conInfo = conInfo.Skip (pagesize * (page - 1)).Take (pagesize).ToList ();  	conInfo.Add (new getCondition () {  		city = "总人数"'  		human_count = humtotal'  		attend_count = attendtotal'  		xc_count = xctotal'  		xc_monthActive = xconetotal'  		xc_threeMonthActive = xcthreetotal'  		lc_count = lctotal'  		lc_monthActive = lconetotal'  		lc_threeMonthActive = lcthreetotal'  		xdz_count = xdztotal'  		xdz_monthActive = xdzonetotal'  		xdz_threeMonthActive = xdzthreetotal'  		S = Stotal'  		A = Atotal'  		B = Btotal  	});  	var gridData = new {  		gdata = conInfo'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + city1.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: if (string.IsNullOrEmpty (Citycontent))//显示所有城市   {  	foreach (var cityid in cityList)//遍历城市  	 {  		var shopNamelist = (from shop in db.SShop.ToList ()  		where shop.CityId == cityid.Id  		select shop.Id).ToList ();  		foreach (var shopname in shopNamelist)//遍历城市中商店  		 {  			var humanAttend = (from i in attendingInfo  			where i.Department == shopname  			select i).ToList ();  			foreach (var people in humanAttend)//遍历商店中人员  			 {  				//获取等级  				var rank = (from h in humanData  				where h.IsDraft == false && h.Id == people.HumanId  				select h.HumanLevel).FirstOrDefault ().ToString ();  				//增加记录  				peo.Add (new getpeople () {  					uniNum = people.HumanBasicFile.uniNum'  					level = rank'  					functions = people.Functions'  					city = cityid.Id'  					date = people.Date  				});  			}  		}  	}  	foreach (var item in cityList) {  		var cityname = (from city in db.City.ToList ()  		where city.Id == item.Id  		select city.Name).FirstOrDefault ().ToString ();  		//获取城市名  		conInfo.Add (new getCondition () {  			city = cityname'  			human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  			attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  			xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			S = humanData.Where (a => a.HumanLevel == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			A = humanData.Where (a => a.HumanLevel == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			B = humanData.Where (a => a.HumanLevel == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		});  	}  	#region 汇总  	string humtotal = conInfo.Sum (a => Convert.ToInt32 (a.human_count)).ToString ();  	string attendtotal = conInfo.Sum (a => Convert.ToInt32 (a.attend_count)).ToString ();  	string xctotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_count)).ToString ();  	string xconetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_monthActive)).ToString ();  	string xcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_threeMonthActive)).ToString ();  	string lctotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_count)).ToString ();  	string lconetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_monthActive)).ToString ();  	string lcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_threeMonthActive)).ToString ();  	string xdztotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_count)).ToString ();  	string xdzonetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_monthActive)).ToString ();  	string xdzthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_threeMonthActive)).ToString ();  	string Stotal = conInfo.Sum (a => Convert.ToInt32 (a.S)).ToString ();  	string Atotal = conInfo.Sum (a => Convert.ToInt32 (a.A)).ToString ();  	string Btotal = conInfo.Sum (a => Convert.ToInt32 (a.B)).ToString ();  	#endregion  	//总页数  	int totalPage = cityList.Count () / pagesize;  	if (cityList.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	conInfo = conInfo.Skip (pagesize * (page - 1)).Take (pagesize).ToList ();  	conInfo.Add (new getCondition () {  		city = "总人数"'  		human_count = humtotal'  		attend_count = attendtotal'  		xc_count = xctotal'  		xc_monthActive = xconetotal'  		xc_threeMonthActive = xcthreetotal'  		lc_count = lctotal'  		lc_monthActive = lconetotal'  		lc_threeMonthActive = lcthreetotal'  		xdz_count = xdztotal'  		xdz_monthActive = xdzonetotal'  		xdz_threeMonthActive = xdzthreetotal'  		S = Stotal'  		A = Atotal'  		B = Btotal  	});  	//给前台所需数据赋值  	var gridData = new {  		gdata = conInfo'  		humtotal = humtotal'  		attendtotal = attendtotal'  		xctotal = xctotal'  		xconetotal = xconetotal'  		xcthreetotal = xcthreetotal'  		lctotal = lctotal'  		lconetotal = lconetotal'  		lcthreetotal = lcthreetotal'  		xdztotal = xdztotal'  		xdzonetotal = xdzonetotal'  		xdzthreetotal = xdzthreetotal'  		Stotal = Stotal'  		Atotal = Atotal'  		Btotal = Btotal'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + cityList.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  else {  	var city1 = cityList.Where (a => a.Name.Contains (Citycontent)).ToList ();  	//获取城市名  	foreach (var cityid in city1)//遍历城市  	 {  		var shopNamelist = (from shop in db.SShop.ToList ()  		where shop.CityId == cityid.Id  		select shop.Id).ToList ();  		foreach (var shopname in shopNamelist)//遍历城市中商店  		 {  			var humanAttend = (from i in attendingInfo  			where i.Department == shopname  			select i).ToList ();  			foreach (var people in humanAttend)//遍历商店中人员  			 {  				//获取等级  				var rank = (from h in humanData  				where h.IsDraft == false && h.Id == people.HumanId  				select h.HumanLevel).FirstOrDefault ().ToString ();  				//增加记录  				peo.Add (new getpeople () {  					uniNum = people.HumanBasicFile.uniNum'  					level = rank'  					functions = people.Functions'  					city = cityid.Id'  					date = people.Date  				});  			}  		}  	}  	foreach (var item in city1) {  		var cityname = (from city in db.City.ToList ()  		where city.Id == item.Id  		select city.Name).FirstOrDefault ().ToString ();  		//获取城市名  		conInfo.Add (new getCondition () {  			city = cityname'  			human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  			attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  			xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			S = peo.Where (a => a.level == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			A = peo.Where (a => a.level == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  			B = peo.Where (a => a.level == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		});  	}  	//总页数  	int totalPage = city1.Count () / pagesize;  	if (city1.Count () % pagesize != 0) {  		totalPage++;  	}  	//分页按钮的样式  	string pageBtnClass = "l-disabled#l-disabled";  	//只有一页  	if (page == 1 && page < totalPage) {  		pageBtnClass = "l-disabled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	if (page > 1 && page < totalPage) {  		pageBtnClass = "l-abled#l-abled";  	}  	if (page > 1 && page == totalPage) {  		pageBtnClass = "l-abled#l-disabled";  	}  	#region 汇总  	string humtotal = conInfo.Sum (a => Convert.ToInt32 (a.human_count)).ToString ();  	string attendtotal = conInfo.Sum (a => Convert.ToInt32 (a.attend_count)).ToString ();  	string xctotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_count)).ToString ();  	string xconetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_monthActive)).ToString ();  	string xcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xc_threeMonthActive)).ToString ();  	string lctotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_count)).ToString ();  	string lconetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_monthActive)).ToString ();  	string lcthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.lc_threeMonthActive)).ToString ();  	string xdztotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_count)).ToString ();  	string xdzonetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_monthActive)).ToString ();  	string xdzthreetotal = conInfo.Sum (a => Convert.ToInt32 (a.xdz_threeMonthActive)).ToString ();  	string Stotal = conInfo.Sum (a => Convert.ToInt32 (a.S)).ToString ();  	string Atotal = conInfo.Sum (a => Convert.ToInt32 (a.A)).ToString ();  	string Btotal = conInfo.Sum (a => Convert.ToInt32 (a.B)).ToString ();  	#endregion  	conInfo = conInfo.Skip (pagesize * (page - 1)).Take (pagesize).ToList ();  	conInfo.Add (new getCondition () {  		city = "总人数"'  		human_count = humtotal'  		attend_count = attendtotal'  		xc_count = xctotal'  		xc_monthActive = xconetotal'  		xc_threeMonthActive = xcthreetotal'  		lc_count = lctotal'  		lc_monthActive = lconetotal'  		lc_threeMonthActive = lcthreetotal'  		xdz_count = xdztotal'  		xdz_monthActive = xdzonetotal'  		xdz_threeMonthActive = xdzthreetotal'  		S = Stotal'  		A = Atotal'  		B = Btotal  	});  	var gridData = new {  		gdata = conInfo'  		page = page'  		totalPage = totalPage'  		pageBtn = pageBtnClass'  		pageMsg = "第" + page.ToString () + "页，共" + totalPage.ToString () + "页，共" + city1.Count ().ToString () + "条记录"'  		pageSize = pagesize  	};  	return Json (gridData);  }  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: foreach (var item in cityList) {  	var cityname = (from city in db.City.ToList ()  	where city.Id == item.Id  	select city.Name).FirstOrDefault ().ToString ();  	//获取城市名  	conInfo.Add (new getCondition () {  		city = cityname'  		human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  		attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  		xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		S = humanData.Where (a => a.HumanLevel == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		A = humanData.Where (a => a.HumanLevel == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		B = humanData.Where (a => a.HumanLevel == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	});  }  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: foreach (var item in cityList) {  	var cityname = (from city in db.City.ToList ()  	where city.Id == item.Id  	select city.Name).FirstOrDefault ().ToString ();  	//获取城市名  	conInfo.Add (new getCondition () {  		city = cityname'  		human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  		attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  		xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		S = humanData.Where (a => a.HumanLevel == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		A = humanData.Where (a => a.HumanLevel == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		B = humanData.Where (a => a.HumanLevel == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	});  }  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: foreach (var item in cityList) {  	var cityname = (from city in db.City.ToList ()  	where city.Id == item.Id  	select city.Name).FirstOrDefault ().ToString ();  	//获取城市名  	conInfo.Add (new getCondition () {  		city = cityname'  		human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  		attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  		xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		S = humanData.Where (a => a.HumanLevel == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		A = humanData.Where (a => a.HumanLevel == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		B = humanData.Where (a => a.HumanLevel == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	});  }  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: conInfo.Add (new getCondition () {  	city = cityname'  	human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  	attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  	xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	S = humanData.Where (a => a.HumanLevel == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	A = humanData.Where (a => a.HumanLevel == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	B = humanData.Where (a => a.HumanLevel == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  });  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: conInfo.Add (new getCondition () {  	city = cityname'  	human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  	attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  	xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	S = humanData.Where (a => a.HumanLevel == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	A = humanData.Where (a => a.HumanLevel == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	B = humanData.Where (a => a.HumanLevel == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  });  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: conInfo.Add (new getCondition () {  	city = cityname'  	human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  	attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  	xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	S = humanData.Where (a => a.HumanLevel == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	A = humanData.Where (a => a.HumanLevel == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	B = humanData.Where (a => a.HumanLevel == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  });  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: foreach (var item in city1) {  	var cityname = (from city in db.City.ToList ()  	where city.Id == item.Id  	select city.Name).FirstOrDefault ().ToString ();  	//获取城市名  	conInfo.Add (new getCondition () {  		city = cityname'  		human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  		attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  		xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		S = peo.Where (a => a.level == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		A = peo.Where (a => a.level == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		B = peo.Where (a => a.level == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	});  }  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: foreach (var item in city1) {  	var cityname = (from city in db.City.ToList ()  	where city.Id == item.Id  	select city.Name).FirstOrDefault ().ToString ();  	//获取城市名  	conInfo.Add (new getCondition () {  		city = cityname'  		human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  		attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  		xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		S = peo.Where (a => a.level == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		A = peo.Where (a => a.level == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		B = peo.Where (a => a.level == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	});  }  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: foreach (var item in city1) {  	var cityname = (from city in db.City.ToList ()  	where city.Id == item.Id  	select city.Name).FirstOrDefault ().ToString ();  	//获取城市名  	conInfo.Add (new getCondition () {  		city = cityname'  		human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  		attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  		xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		S = peo.Where (a => a.level == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		A = peo.Where (a => a.level == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  		B = peo.Where (a => a.level == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	});  }  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: conInfo.Add (new getCondition () {  	city = cityname'  	human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  	attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  	xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	S = peo.Where (a => a.level == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	A = peo.Where (a => a.level == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	B = peo.Where (a => a.level == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  });  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: conInfo.Add (new getCondition () {  	city = cityname'  	human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  	attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  	xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	S = peo.Where (a => a.level == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	A = peo.Where (a => a.level == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	B = peo.Where (a => a.level == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  });  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The following statement contains a magic number: conInfo.Add (new getCondition () {  	city = cityname'  	human_count = humanData.Where (c => c.City1.Id == item.Id).Select (b => b.uniNum).Distinct ().Count ().ToString ()'  	attend_count = attendingInfo.Where (a => a.SShop.City.Id == item.Id).Select (b => b.HumanBasicFile.uniNum).Distinct ().Count ().ToString ()'  	xc_count = peo.Where (a => a.city == item.Id && a.functions == "形促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xc_monthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xc_threeMonthActive = peo.Where (a => a.functions == "形促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_count = peo.Where (a => a.city == item.Id && a.functions == "临促").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_monthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	lc_threeMonthActive = peo.Where (a => a.functions == "临促" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_count = peo.Where (a => a.city == item.Id && a.functions == "小队长").Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_monthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-1).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	xdz_threeMonthActive = peo.Where (a => a.functions == "小队长" && a.city == item.Id && DateTime.Parse (a.date) >= DateTime.Parse (DateTime.Parse (DateTime.Now.ToString ("yyyy-MM-01")).AddMonths (-3).ToShortDateString ())).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	S = peo.Where (a => a.level == "S" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	A = peo.Where (a => a.level == "A" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  	B = peo.Where (a => a.level == "B" && a.city == item.Id).Select (a => a.uniNum).Distinct ().Count ().ToString ()'  });  
Magic Number,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,ZipFilenew,The following statement contains a magic number: s.SetLevel (9);  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: try {  	conn.Open ();  	DataTable sheetNames = conn.GetOleDbSchemaTable (System.Data.OleDb.OleDbSchemaGuid.Tables' new object[] {  		null'  		null'  		null'  		"TABLE"  	});  	string tablename = sheetNames.Rows [0] [2].ToString ();  	//获取表名  	string cmd = "select * from [" + tablename + "]";  	OleDbDataAdapter myCommand = new OleDbDataAdapter (cmd' strConn);  	myCommand.Fill (myDataSet' "ExcelInfo");  }  catch (Exception ex) {  	errormes += ex.Message;  	System.IO.File.Delete (savePath);  	//删掉导入的excel  	ViewBag.error = errormes;  	return View ();  }  finally {  	conn.Close ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Columns.Count != 17) {  	errormes += "请按照模板格式进行上传数据" + "</Br></Br>";  	ViewBag.error = errormes;  	System.IO.File.Delete (savePath);  	//删掉导入的excel  	return View ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: using (TransactionScope transaction = new TransactionScope ()) {  	for (int i = 0; i < table.Rows.Count; i++) {  		//获取地区名称  		string _areaName = "";  		if (table.Rows [i] [0] != null) {  			_areaName = table.Rows [i] [0].ToString ();  		}  		//获取姓名信息  		string name = "";  		if (table.Rows [i] [1] != null) {  			name = table.Rows [i] [1].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  		}  		//获取籍贯信息  		string nativeplace = "";  		if (table.Rows [i] [2] != null) {  			nativeplace = table.Rows [i] [2].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  		}  		//获取性别  		string sex = "";  		if (table.Rows [i] [3] != null) {  			sex = table.Rows [i] [3].ToString ();  			if (sex != "男" && sex != "女") {  				errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  		}  		//获取身份证信息  		string idcard = "";  		if (table.Rows [i] [4] != null) {  			idcard = table.Rows [i] [4].ToString ();  			if (validateIdCart (idcard)) {  				errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  			}  			if (idcard.Length != 18) {  				errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  		}  		//获取电话信息  		string telephone = "";  		if (table.Rows [i] [5] != null) {  			telephone = table.Rows [i] [5].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  		}  		//获取银行信息  		int bankid = 0;  		if (table.Rows [i] [6] != null) {  			string bankname = table.Rows [i] [6].ToString ();  			bankid = validateBankName (bankname);  			if (bankid == 0) {  				errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  		}  		//获取银行卡号信息  		string banknum = "";  		if (table.Rows [i] [7] != null) {  			banknum = table.Rows [i] [7].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  		}  		//获取学校信息  		string school = "";  		if (table.Rows [i] [8] != null) {  			school = table.Rows [i] [8].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  		}  		//获取专业信息  		string major = "";  		if (table.Rows [i] [9] != null) {  			major = table.Rows [i] [9].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  		}  		//获取毕业时间  		string gratetime = "";  		if (table.Rows [i] [10] != null) {  			gratetime = table.Rows [i] [10].ToString ();  			try {  				DateTime dt = DateTime.Parse (gratetime);  				gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  				if (dt.Month.ToString ().Length < 2) {  					gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  				}  			}  			catch (Exception ex) {  				errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  		}  		//获取学历  		string academic = "";  		if (table.Rows [i] [11] != null) {  			academic = table.Rows [i] [11].ToString ();  		}  		else {  			errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  		}  		//获取身高  		int height = 0;  		if (table.Rows [i] [12] != null) {  			string heights = table.Rows [i] [12].ToString ();  			if (heights != "") {  				if (!int.TryParse (heights' out height)) {  					errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  				}  			}  		}  		//获取体重  		int weight = 0;  		if (table.Rows [i] [13] != null) {  			string weights = table.Rows [i] [13].ToString ();  			if (weights != "") {  				if (!int.TryParse (weights' out weight)) {  					errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  				}  			}  		}  		//获取特长  		string specicallity = "";  		if (table.Rows [i] [14] != null) {  			specicallity = table.Rows [i] [14].ToString ();  		}  		//获取三围  		string BWH = "";  		if (table.Rows [i] [15] != null) {  			BWH = table.Rows [i] [15].ToString ();  			//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  			//if (!x.IsMatch(BWH))  			//{  			//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  			//}  		}  		//获取上级  		string bossstr = "";  		Guid boss = new Guid ();  		if (table.Rows [i] [16] != null) {  			bossstr = table.Rows [i] [16].ToString ();  			Managers ms1 = validateBoss (bossstr);  			if (ms1 == null) {  				errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  			}  			else {  				boss = ms1.Id;  				if (ms1.Authority == 2) {  					Managers mss = (from d in db.Managers  					where d.UserId == ms.Boss  					select d).FirstOrDefault ();  					boss = mss.Id;  					bossstr = mss.UserId;  				}  			}  		}  		else {  			errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  		}  		//判断地区是否存在  		int cityid = validateCityName (_areaName' bossstr);  		if (cityid == 0 && bossstr != null) {  			errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  		}  		if (errormes == "") {  			HumanBasicFile station = new HumanBasicFile ();  			station.Id = Guid.NewGuid ();  			station.city = cityid;  			station.Name = name;  			station.NativePlace = nativeplace;  			if (sex == "男") {  				station.Sex = true;  			}  			else {  				station.Sex = false;  			}  			station.IDcardNo = idcard;  			station.BankId = bankid;  			station.BankNum = banknum;  			station.Telephone = telephone;  			station.School = school;  			station.Major = major;  			station.GraduateTime = gratetime;  			station.Academic = academic;  			if (height != 0) {  				station.Height = height;  			}  			if (weight != 0) {  				station.Weight = weight;  			}  			station.speciality = specicallity;  			station.BWH = BWH;  			station.HumanLevel = "B";  			station.IsDraft = false;  			station.LevelEditTimes = 0;  			station.TrainTimes = 0;  			station.Boss = boss;  			station.CreatedManagerID = creator;  			station.EditManagerId = creator;  			station.uniNum = Getunique (boss);  			station.Remark = "资料不全";  			station.createTime = DateTime.Now;  			db.HumanBasicFile.Add (station);  			db.SaveChanges ();  		}  		if ((i == table.Rows.Count - 1) && errormes != "") {  			System.IO.File.AppendAllText (path + filename1' errormes);  			System.IO.File.Delete (savePath);  			//删掉导入的excel  			return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  		}  	}  	transaction.Complete ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: for (int i = 0; i < table.Rows.Count; i++) {  	//获取地区名称  	string _areaName = "";  	if (table.Rows [i] [0] != null) {  		_areaName = table.Rows [i] [0].ToString ();  	}  	//获取姓名信息  	string name = "";  	if (table.Rows [i] [1] != null) {  		name = table.Rows [i] [1].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  	}  	//获取籍贯信息  	string nativeplace = "";  	if (table.Rows [i] [2] != null) {  		nativeplace = table.Rows [i] [2].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  	}  	//获取性别  	string sex = "";  	if (table.Rows [i] [3] != null) {  		sex = table.Rows [i] [3].ToString ();  		if (sex != "男" && sex != "女") {  			errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  	}  	//获取身份证信息  	string idcard = "";  	if (table.Rows [i] [4] != null) {  		idcard = table.Rows [i] [4].ToString ();  		if (validateIdCart (idcard)) {  			errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  		}  		if (idcard.Length != 18) {  			errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  	}  	//获取电话信息  	string telephone = "";  	if (table.Rows [i] [5] != null) {  		telephone = table.Rows [i] [5].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  	}  	//获取银行信息  	int bankid = 0;  	if (table.Rows [i] [6] != null) {  		string bankname = table.Rows [i] [6].ToString ();  		bankid = validateBankName (bankname);  		if (bankid == 0) {  			errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  	}  	//获取银行卡号信息  	string banknum = "";  	if (table.Rows [i] [7] != null) {  		banknum = table.Rows [i] [7].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  	}  	//获取学校信息  	string school = "";  	if (table.Rows [i] [8] != null) {  		school = table.Rows [i] [8].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  	}  	//获取专业信息  	string major = "";  	if (table.Rows [i] [9] != null) {  		major = table.Rows [i] [9].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  	}  	//获取毕业时间  	string gratetime = "";  	if (table.Rows [i] [10] != null) {  		gratetime = table.Rows [i] [10].ToString ();  		try {  			DateTime dt = DateTime.Parse (gratetime);  			gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  			if (dt.Month.ToString ().Length < 2) {  				gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  			}  		}  		catch (Exception ex) {  			errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  	}  	//获取学历  	string academic = "";  	if (table.Rows [i] [11] != null) {  		academic = table.Rows [i] [11].ToString ();  	}  	else {  		errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  	}  	//获取身高  	int height = 0;  	if (table.Rows [i] [12] != null) {  		string heights = table.Rows [i] [12].ToString ();  		if (heights != "") {  			if (!int.TryParse (heights' out height)) {  				errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  			}  		}  	}  	//获取体重  	int weight = 0;  	if (table.Rows [i] [13] != null) {  		string weights = table.Rows [i] [13].ToString ();  		if (weights != "") {  			if (!int.TryParse (weights' out weight)) {  				errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  			}  		}  	}  	//获取特长  	string specicallity = "";  	if (table.Rows [i] [14] != null) {  		specicallity = table.Rows [i] [14].ToString ();  	}  	//获取三围  	string BWH = "";  	if (table.Rows [i] [15] != null) {  		BWH = table.Rows [i] [15].ToString ();  		//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  		//if (!x.IsMatch(BWH))  		//{  		//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  		//}  	}  	//获取上级  	string bossstr = "";  	Guid boss = new Guid ();  	if (table.Rows [i] [16] != null) {  		bossstr = table.Rows [i] [16].ToString ();  		Managers ms1 = validateBoss (bossstr);  		if (ms1 == null) {  			errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  		}  		else {  			boss = ms1.Id;  			if (ms1.Authority == 2) {  				Managers mss = (from d in db.Managers  				where d.UserId == ms.Boss  				select d).FirstOrDefault ();  				boss = mss.Id;  				bossstr = mss.UserId;  			}  		}  	}  	else {  		errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  	}  	//判断地区是否存在  	int cityid = validateCityName (_areaName' bossstr);  	if (cityid == 0 && bossstr != null) {  		errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  	}  	if (errormes == "") {  		HumanBasicFile station = new HumanBasicFile ();  		station.Id = Guid.NewGuid ();  		station.city = cityid;  		station.Name = name;  		station.NativePlace = nativeplace;  		if (sex == "男") {  			station.Sex = true;  		}  		else {  			station.Sex = false;  		}  		station.IDcardNo = idcard;  		station.BankId = bankid;  		station.BankNum = banknum;  		station.Telephone = telephone;  		station.School = school;  		station.Major = major;  		station.GraduateTime = gratetime;  		station.Academic = academic;  		if (height != 0) {  			station.Height = height;  		}  		if (weight != 0) {  			station.Weight = weight;  		}  		station.speciality = specicallity;  		station.BWH = BWH;  		station.HumanLevel = "B";  		station.IsDraft = false;  		station.LevelEditTimes = 0;  		station.TrainTimes = 0;  		station.Boss = boss;  		station.CreatedManagerID = creator;  		station.EditManagerId = creator;  		station.uniNum = Getunique (boss);  		station.Remark = "资料不全";  		station.createTime = DateTime.Now;  		db.HumanBasicFile.Add (station);  		db.SaveChanges ();  	}  	if ((i == table.Rows.Count - 1) && errormes != "") {  		System.IO.File.AppendAllText (path + filename1' errormes);  		System.IO.File.Delete (savePath);  		//删掉导入的excel  		return File (new FileStream (path + filename1' FileMode.Open)' "text/plain"' filename1);  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [1] != null) {  	name = table.Rows [i] [1].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'姓名为空，请填写" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [2] != null) {  	nativeplace = table.Rows [i] [2].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [2] != null) {  	nativeplace = table.Rows [i] [2].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [2] != null) {  	nativeplace = table.Rows [i] [2].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: nativeplace = table.Rows [i] [2].ToString ();  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'籍贯为空，请填写" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [3] != null) {  	sex = table.Rows [i] [3].ToString ();  	if (sex != "男" && sex != "女") {  		errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [3] != null) {  	sex = table.Rows [i] [3].ToString ();  	if (sex != "男" && sex != "女") {  		errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [3] != null) {  	sex = table.Rows [i] [3].ToString ();  	if (sex != "男" && sex != "女") {  		errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [3] != null) {  	sex = table.Rows [i] [3].ToString ();  	if (sex != "男" && sex != "女") {  		errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: sex = table.Rows [i] [3].ToString ();  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (sex != "男" && sex != "女") {  	errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'性别只能为男或女" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'性别为空，请填写" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [4] != null) {  	idcard = table.Rows [i] [4].ToString ();  	if (validateIdCart (idcard)) {  		errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  	}  	if (idcard.Length != 18) {  		errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [4] != null) {  	idcard = table.Rows [i] [4].ToString ();  	if (validateIdCart (idcard)) {  		errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  	}  	if (idcard.Length != 18) {  		errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [4] != null) {  	idcard = table.Rows [i] [4].ToString ();  	if (validateIdCart (idcard)) {  		errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  	}  	if (idcard.Length != 18) {  		errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [4] != null) {  	idcard = table.Rows [i] [4].ToString ();  	if (validateIdCart (idcard)) {  		errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  	}  	if (idcard.Length != 18) {  		errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [4] != null) {  	idcard = table.Rows [i] [4].ToString ();  	if (validateIdCart (idcard)) {  		errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  	}  	if (idcard.Length != 18) {  		errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [4] != null) {  	idcard = table.Rows [i] [4].ToString ();  	if (validateIdCart (idcard)) {  		errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  	}  	if (idcard.Length != 18) {  		errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: idcard = table.Rows [i] [4].ToString ();  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (validateIdCart (idcard)) {  	errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'身份证已存在于数据库，不能重复录入" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (idcard.Length != 18) {  	errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (idcard.Length != 18) {  	errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'身份证必须18位" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'身份证为空，请填写" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [5] != null) {  	telephone = table.Rows [i] [5].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [5] != null) {  	telephone = table.Rows [i] [5].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [5] != null) {  	telephone = table.Rows [i] [5].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: telephone = table.Rows [i] [5].ToString ();  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'电话为空，请填写" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [6] != null) {  	string bankname = table.Rows [i] [6].ToString ();  	bankid = validateBankName (bankname);  	if (bankid == 0) {  		errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [6] != null) {  	string bankname = table.Rows [i] [6].ToString ();  	bankid = validateBankName (bankname);  	if (bankid == 0) {  		errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [6] != null) {  	string bankname = table.Rows [i] [6].ToString ();  	bankid = validateBankName (bankname);  	if (bankid == 0) {  		errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [6] != null) {  	string bankname = table.Rows [i] [6].ToString ();  	bankid = validateBankName (bankname);  	if (bankid == 0) {  		errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (bankid == 0) {  	errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'" + bankname + "银行不存在，请先添加该银行" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'开户行为空，请填写" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [7] != null) {  	banknum = table.Rows [i] [7].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [7] != null) {  	banknum = table.Rows [i] [7].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [7] != null) {  	banknum = table.Rows [i] [7].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: banknum = table.Rows [i] [7].ToString ();  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'银行卡号为空，请填写" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [8] != null) {  	school = table.Rows [i] [8].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [8] != null) {  	school = table.Rows [i] [8].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [8] != null) {  	school = table.Rows [i] [8].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: school = table.Rows [i] [8].ToString ();  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'学校为空，请填写" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [9] != null) {  	major = table.Rows [i] [9].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [9] != null) {  	major = table.Rows [i] [9].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [9] != null) {  	major = table.Rows [i] [9].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: major = table.Rows [i] [9].ToString ();  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'专业为空，请填写" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [10] != null) {  	gratetime = table.Rows [i] [10].ToString ();  	try {  		DateTime dt = DateTime.Parse (gratetime);  		gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  		if (dt.Month.ToString ().Length < 2) {  			gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  		}  	}  	catch (Exception ex) {  		errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [10] != null) {  	gratetime = table.Rows [i] [10].ToString ();  	try {  		DateTime dt = DateTime.Parse (gratetime);  		gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  		if (dt.Month.ToString ().Length < 2) {  			gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  		}  	}  	catch (Exception ex) {  		errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [10] != null) {  	gratetime = table.Rows [i] [10].ToString ();  	try {  		DateTime dt = DateTime.Parse (gratetime);  		gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  		if (dt.Month.ToString ().Length < 2) {  			gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  		}  	}  	catch (Exception ex) {  		errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [10] != null) {  	gratetime = table.Rows [i] [10].ToString ();  	try {  		DateTime dt = DateTime.Parse (gratetime);  		gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  		if (dt.Month.ToString ().Length < 2) {  			gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  		}  	}  	catch (Exception ex) {  		errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [10] != null) {  	gratetime = table.Rows [i] [10].ToString ();  	try {  		DateTime dt = DateTime.Parse (gratetime);  		gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  		if (dt.Month.ToString ().Length < 2) {  			gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  		}  	}  	catch (Exception ex) {  		errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  	}  }  else {  	errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: gratetime = table.Rows [i] [10].ToString ();  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: try {  	DateTime dt = DateTime.Parse (gratetime);  	gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  	if (dt.Month.ToString ().Length < 2) {  		gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  	}  }  catch (Exception ex) {  	errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: try {  	DateTime dt = DateTime.Parse (gratetime);  	gratetime = dt.Year.ToString () + "年" + dt.Month.ToString () + "月";  	if (dt.Month.ToString ().Length < 2) {  		gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  	}  }  catch (Exception ex) {  	errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (dt.Month.ToString ().Length < 2) {  	gratetime = dt.Year.ToString () + "年" + "0" + dt.Month.ToString () + "月";  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'毕业时间格式错误，请按（格式：XXXX年XX月）填写" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'毕业时间为空，请填写" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [11] != null) {  	academic = table.Rows [i] [11].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [11] != null) {  	academic = table.Rows [i] [11].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [11] != null) {  	academic = table.Rows [i] [11].ToString ();  }  else {  	errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: academic = table.Rows [i] [11].ToString ();  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'学历为空，请填写" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [12] != null) {  	string heights = table.Rows [i] [12].ToString ();  	if (heights != "") {  		if (!int.TryParse (heights' out height)) {  			errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  		}  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [12] != null) {  	string heights = table.Rows [i] [12].ToString ();  	if (heights != "") {  		if (!int.TryParse (heights' out height)) {  			errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  		}  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [12] != null) {  	string heights = table.Rows [i] [12].ToString ();  	if (heights != "") {  		if (!int.TryParse (heights' out height)) {  			errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  		}  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (heights != "") {  	if (!int.TryParse (heights' out height)) {  		errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (!int.TryParse (heights' out height)) {  	errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'" + heights + "身高格式不对，请填写整数（单位：厘米）可不填" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [13] != null) {  	string weights = table.Rows [i] [13].ToString ();  	if (weights != "") {  		if (!int.TryParse (weights' out weight)) {  			errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  		}  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [13] != null) {  	string weights = table.Rows [i] [13].ToString ();  	if (weights != "") {  		if (!int.TryParse (weights' out weight)) {  			errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  		}  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [13] != null) {  	string weights = table.Rows [i] [13].ToString ();  	if (weights != "") {  		if (!int.TryParse (weights' out weight)) {  			errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  		}  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (weights != "") {  	if (!int.TryParse (weights' out weight)) {  		errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (!int.TryParse (weights' out weight)) {  	errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'" + weights + "体重格式不对，请填写整数（单位：kg）可不填" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [14] != null) {  	specicallity = table.Rows [i] [14].ToString ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [14] != null) {  	specicallity = table.Rows [i] [14].ToString ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: specicallity = table.Rows [i] [14].ToString ();  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [15] != null) {  	BWH = table.Rows [i] [15].ToString ();  	//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  	//if (!x.IsMatch(BWH))  	//{  	//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  	//}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [15] != null) {  	BWH = table.Rows [i] [15].ToString ();  	//Regex x = new Regex("^[1-9][0-9]{1'2}['][1-9][0-9]{0'2}['][1-9][0-9]{0'2}$");  	//if (!x.IsMatch(BWH))  	//{  	//    errormes += "第" + (i + 2) + "行'" + BWH + "三围格式不对，请规范输入三围，格式:66'44'66 可不填" + Environment.NewLine;  	//}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: BWH = table.Rows [i] [15].ToString ();  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [16] != null) {  	bossstr = table.Rows [i] [16].ToString ();  	Managers ms1 = validateBoss (bossstr);  	if (ms1 == null) {  		errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  	}  	else {  		boss = ms1.Id;  		if (ms1.Authority == 2) {  			Managers mss = (from d in db.Managers  			where d.UserId == ms.Boss  			select d).FirstOrDefault ();  			boss = mss.Id;  			bossstr = mss.UserId;  		}  	}  }  else {  	errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [16] != null) {  	bossstr = table.Rows [i] [16].ToString ();  	Managers ms1 = validateBoss (bossstr);  	if (ms1 == null) {  		errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  	}  	else {  		boss = ms1.Id;  		if (ms1.Authority == 2) {  			Managers mss = (from d in db.Managers  			where d.UserId == ms.Boss  			select d).FirstOrDefault ();  			boss = mss.Id;  			bossstr = mss.UserId;  		}  	}  }  else {  	errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [16] != null) {  	bossstr = table.Rows [i] [16].ToString ();  	Managers ms1 = validateBoss (bossstr);  	if (ms1 == null) {  		errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  	}  	else {  		boss = ms1.Id;  		if (ms1.Authority == 2) {  			Managers mss = (from d in db.Managers  			where d.UserId == ms.Boss  			select d).FirstOrDefault ();  			boss = mss.Id;  			bossstr = mss.UserId;  		}  	}  }  else {  	errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [16] != null) {  	bossstr = table.Rows [i] [16].ToString ();  	Managers ms1 = validateBoss (bossstr);  	if (ms1 == null) {  		errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  	}  	else {  		boss = ms1.Id;  		if (ms1.Authority == 2) {  			Managers mss = (from d in db.Managers  			where d.UserId == ms.Boss  			select d).FirstOrDefault ();  			boss = mss.Id;  			bossstr = mss.UserId;  		}  	}  }  else {  	errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (table.Rows [i] [16] != null) {  	bossstr = table.Rows [i] [16].ToString ();  	Managers ms1 = validateBoss (bossstr);  	if (ms1 == null) {  		errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  	}  	else {  		boss = ms1.Id;  		if (ms1.Authority == 2) {  			Managers mss = (from d in db.Managers  			where d.UserId == ms.Boss  			select d).FirstOrDefault ();  			boss = mss.Id;  			bossstr = mss.UserId;  		}  	}  }  else {  	errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: bossstr = table.Rows [i] [16].ToString ();  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (ms1 == null) {  	errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  }  else {  	boss = ms1.Id;  	if (ms1.Authority == 2) {  		Managers mss = (from d in db.Managers  		where d.UserId == ms.Boss  		select d).FirstOrDefault ();  		boss = mss.Id;  		bossstr = mss.UserId;  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (ms1 == null) {  	errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  }  else {  	boss = ms1.Id;  	if (ms1.Authority == 2) {  		Managers mss = (from d in db.Managers  		where d.UserId == ms.Boss  		select d).FirstOrDefault ();  		boss = mss.Id;  		bossstr = mss.UserId;  	}  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'" + bossstr + "上级用户名不存在，请核对" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (ms1.Authority == 2) {  	Managers mss = (from d in db.Managers  	where d.UserId == ms.Boss  	select d).FirstOrDefault ();  	boss = mss.Id;  	bossstr = mss.UserId;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'上级为空，请填写" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: if (cityid == 0 && bossstr != null) {  	errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: errormes += "第" + (i + 2) + "行'" + _areaName + "城市不存在，请先添加该地区" + Environment.NewLine;  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Index,The following statement contains a magic number: System.Threading.Thread.Sleep (2000);  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Getunique,The following statement contains a magic number: if (!string.IsNullOrEmpty (lastunique)) {  	string lastuni = lastunique.Substring (3);  	int newlastuni = Convert.ToInt32 (lastuni) + 1;  	string newquniquestr = "000" + newlastuni.ToString ();  	if (newlastuni >= 10 && newlastuni < 100) {  		newquniquestr = "00" + newlastuni.ToString ();  	}  	else if (newlastuni >= 100 && newlastuni < 1000) {  		newquniquestr = "0" + newlastuni.ToString ();  	}  	else if (newlastuni >= 1000) {  		newquniquestr = newlastuni.ToString ();  	}  	string newunique = lastunique.Substring (0' 3) + newquniquestr;  	return newunique;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Getunique,The following statement contains a magic number: if (!string.IsNullOrEmpty (lastunique)) {  	string lastuni = lastunique.Substring (3);  	int newlastuni = Convert.ToInt32 (lastuni) + 1;  	string newquniquestr = "000" + newlastuni.ToString ();  	if (newlastuni >= 10 && newlastuni < 100) {  		newquniquestr = "00" + newlastuni.ToString ();  	}  	else if (newlastuni >= 100 && newlastuni < 1000) {  		newquniquestr = "0" + newlastuni.ToString ();  	}  	else if (newlastuni >= 1000) {  		newquniquestr = newlastuni.ToString ();  	}  	string newunique = lastunique.Substring (0' 3) + newquniquestr;  	return newunique;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Getunique,The following statement contains a magic number: if (!string.IsNullOrEmpty (lastunique)) {  	string lastuni = lastunique.Substring (3);  	int newlastuni = Convert.ToInt32 (lastuni) + 1;  	string newquniquestr = "000" + newlastuni.ToString ();  	if (newlastuni >= 10 && newlastuni < 100) {  		newquniquestr = "00" + newlastuni.ToString ();  	}  	else if (newlastuni >= 100 && newlastuni < 1000) {  		newquniquestr = "0" + newlastuni.ToString ();  	}  	else if (newlastuni >= 1000) {  		newquniquestr = newlastuni.ToString ();  	}  	string newunique = lastunique.Substring (0' 3) + newquniquestr;  	return newunique;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Getunique,The following statement contains a magic number: if (!string.IsNullOrEmpty (lastunique)) {  	string lastuni = lastunique.Substring (3);  	int newlastuni = Convert.ToInt32 (lastuni) + 1;  	string newquniquestr = "000" + newlastuni.ToString ();  	if (newlastuni >= 10 && newlastuni < 100) {  		newquniquestr = "00" + newlastuni.ToString ();  	}  	else if (newlastuni >= 100 && newlastuni < 1000) {  		newquniquestr = "0" + newlastuni.ToString ();  	}  	else if (newlastuni >= 1000) {  		newquniquestr = newlastuni.ToString ();  	}  	string newunique = lastunique.Substring (0' 3) + newquniquestr;  	return newunique;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Getunique,The following statement contains a magic number: if (!string.IsNullOrEmpty (lastunique)) {  	string lastuni = lastunique.Substring (3);  	int newlastuni = Convert.ToInt32 (lastuni) + 1;  	string newquniquestr = "000" + newlastuni.ToString ();  	if (newlastuni >= 10 && newlastuni < 100) {  		newquniquestr = "00" + newlastuni.ToString ();  	}  	else if (newlastuni >= 100 && newlastuni < 1000) {  		newquniquestr = "0" + newlastuni.ToString ();  	}  	else if (newlastuni >= 1000) {  		newquniquestr = newlastuni.ToString ();  	}  	string newunique = lastunique.Substring (0' 3) + newquniquestr;  	return newunique;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Getunique,The following statement contains a magic number: if (!string.IsNullOrEmpty (lastunique)) {  	string lastuni = lastunique.Substring (3);  	int newlastuni = Convert.ToInt32 (lastuni) + 1;  	string newquniquestr = "000" + newlastuni.ToString ();  	if (newlastuni >= 10 && newlastuni < 100) {  		newquniquestr = "00" + newlastuni.ToString ();  	}  	else if (newlastuni >= 100 && newlastuni < 1000) {  		newquniquestr = "0" + newlastuni.ToString ();  	}  	else if (newlastuni >= 1000) {  		newquniquestr = newlastuni.ToString ();  	}  	string newunique = lastunique.Substring (0' 3) + newquniquestr;  	return newunique;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Getunique,The following statement contains a magic number: if (!string.IsNullOrEmpty (lastunique)) {  	string lastuni = lastunique.Substring (3);  	int newlastuni = Convert.ToInt32 (lastuni) + 1;  	string newquniquestr = "000" + newlastuni.ToString ();  	if (newlastuni >= 10 && newlastuni < 100) {  		newquniquestr = "00" + newlastuni.ToString ();  	}  	else if (newlastuni >= 100 && newlastuni < 1000) {  		newquniquestr = "0" + newlastuni.ToString ();  	}  	else if (newlastuni >= 1000) {  		newquniquestr = newlastuni.ToString ();  	}  	string newunique = lastunique.Substring (0' 3) + newquniquestr;  	return newunique;  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Getunique,The following statement contains a magic number: if (newlastuni >= 10 && newlastuni < 100) {  	newquniquestr = "00" + newlastuni.ToString ();  }  else if (newlastuni >= 100 && newlastuni < 1000) {  	newquniquestr = "0" + newlastuni.ToString ();  }  else if (newlastuni >= 1000) {  	newquniquestr = newlastuni.ToString ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Getunique,The following statement contains a magic number: if (newlastuni >= 10 && newlastuni < 100) {  	newquniquestr = "00" + newlastuni.ToString ();  }  else if (newlastuni >= 100 && newlastuni < 1000) {  	newquniquestr = "0" + newlastuni.ToString ();  }  else if (newlastuni >= 1000) {  	newquniquestr = newlastuni.ToString ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Getunique,The following statement contains a magic number: if (newlastuni >= 10 && newlastuni < 100) {  	newquniquestr = "00" + newlastuni.ToString ();  }  else if (newlastuni >= 100 && newlastuni < 1000) {  	newquniquestr = "0" + newlastuni.ToString ();  }  else if (newlastuni >= 1000) {  	newquniquestr = newlastuni.ToString ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Getunique,The following statement contains a magic number: if (newlastuni >= 10 && newlastuni < 100) {  	newquniquestr = "00" + newlastuni.ToString ();  }  else if (newlastuni >= 100 && newlastuni < 1000) {  	newquniquestr = "0" + newlastuni.ToString ();  }  else if (newlastuni >= 1000) {  	newquniquestr = newlastuni.ToString ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Getunique,The following statement contains a magic number: if (newlastuni >= 10 && newlastuni < 100) {  	newquniquestr = "00" + newlastuni.ToString ();  }  else if (newlastuni >= 100 && newlastuni < 1000) {  	newquniquestr = "0" + newlastuni.ToString ();  }  else if (newlastuni >= 1000) {  	newquniquestr = newlastuni.ToString ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Getunique,The following statement contains a magic number: if (newlastuni >= 100 && newlastuni < 1000) {  	newquniquestr = "0" + newlastuni.ToString ();  }  else if (newlastuni >= 1000) {  	newquniquestr = newlastuni.ToString ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Getunique,The following statement contains a magic number: if (newlastuni >= 100 && newlastuni < 1000) {  	newquniquestr = "0" + newlastuni.ToString ();  }  else if (newlastuni >= 1000) {  	newquniquestr = newlastuni.ToString ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Getunique,The following statement contains a magic number: if (newlastuni >= 100 && newlastuni < 1000) {  	newquniquestr = "0" + newlastuni.ToString ();  }  else if (newlastuni >= 1000) {  	newquniquestr = newlastuni.ToString ();  }  
Magic Number,Management.Controllers,UploadController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\UploadController.cs,Getunique,The following statement contains a magic number: if (newlastuni >= 1000) {  	newquniquestr = newlastuni.ToString ();  }  
Magic Number,Management.Models,Class1,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Models\Class1.cs,Sender,The following statement contains a magic number: try {  	SmtpClient client = new SmtpClient ("smtp.qq.com");  	client.Credentials = new NetworkCredential ("495807556@qq.com"' "81514936luster");  	client.Port = 465;  	MailMessage mm = new MailMessage ();  	MailMessage message = new MailMessage (new MailAddress ("495807556@qq.com")' new MailAddress ("250417844@qq.com"));  	message.Body = "Hello Word!";  	//邮件内容  	message.Subject = "this is a test";  	//邮件主题  	mm.From = new MailAddress ("495807556@qq.com");  	mm.To.Add (new MailAddress ("250417844@qq.com"));  	mm.Subject = "Hello~!";  	mm.Body = "hahahahaa ";  	mm.IsBodyHtml = false;  	mm.Priority = MailPriority.High;  	client.Send (message);  	//MailMessage mail = new MailMessage();  	//mail.BodyFormat = MailFormat.Html;  	//mail.To = "250417844@qq.com";  	//mail.Subject = "Hello~!"; ;  	//mail.Body = @"Using this new feature' you can send an e-mail message from an application very easily.";  	//mail.BodyEncoding = Encoding.GetEncoding("GB2312");  	//mail.From = "495807556@qq.com";  	//mail.Fields.Add("http://schemas.microsoft.com/cdo/configuration/smtpauthenticate"' "1");   	//mail.Fields.Add("http://schemas.microsoft.com/cdo/configuration/sendusername"' "495807556@qq.com");  	//mail.Fields.Add("http://schemas.microsoft.com/cdo/configuration/sendpassword"' "81514936luster");   	//SmtpMail.SmtpServer = "smtp.qq.com";//如：smtp.126.com  	//SmtpMail.Send(mail);  }  catch (Exception ex) {  	Console.WriteLine (ex.Message);  }  
Magic Number,Management.Models,Class1,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Models\Class1.cs,Sender,The following statement contains a magic number: client.Port = 465;  
Magic Number,Management.Models,Class1,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Models\Class1.cs,SendEmail,The following statement contains a magic number: client.Port = 465;  
Magic Number,Management.Models,MailService,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Models\MailService.cs,SendMail,The following statement contains a magic number: client.Timeout = 1000;  
Duplicate Code,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,saveDraft,The method contains a code clone-set at the following line numbers (starting from the method definition): ((85' 106)' (157' 178))
Duplicate Code,Management.Controllers,AddAdminMemController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\AddAdminMemController.cs,saveDraft,The method contains a code clone-set at the following line numbers (starting from the method definition): ((109' 144)' (178' 213))
Duplicate Code,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The method contains a code clone-set at the following line numbers (starting from the method definition): ((181' 205)' (302' 326))
Duplicate Code,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,Part_time_Worker,The method contains a code clone-set at the following line numbers (starting from the method definition): ((236' 274)' (357' 395))
Duplicate Code,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,saveDraft,The method contains a code clone-set at the following line numbers (starting from the method definition): ((49' 92)' (109' 152))
Duplicate Code,Management.Controllers,Data_EntryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_EntryController.cs,On_Duty,The method contains a code clone-set at the following line numbers (starting from the method definition): ((85' 105)' (138' 158))
Duplicate Code,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkBaseInfo,The method contains a code clone-set at the following line numbers (starting from the method definition): ((28' 68)' (160' 200))
Duplicate Code,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkBaseInfo,The method contains a code clone-set at the following line numbers (starting from the method definition): ((69' 93)' (202' 226))
Duplicate Code,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkBaseInfo,The method contains a code clone-set at the following line numbers (starting from the method definition): ((93' 127)' (227' 261))
Duplicate Code,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkTrainInfo,The method contains a code clone-set at the following line numbers (starting from the method definition): ((12' 43)' (131' 162))
Duplicate Code,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkTrainInfo,The method contains a code clone-set at the following line numbers (starting from the method definition): ((57' 83)' (177' 203))
Duplicate Code,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkTrainInfo,The method contains a code clone-set at the following line numbers (starting from the method definition): ((83' 117)' (204' 238))
Duplicate Code,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkWorkInfo,The method contains a code clone-set at the following line numbers (starting from the method definition): ((11' 39)' (129' 157))
Duplicate Code,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkWorkInfo,The method contains a code clone-set at the following line numbers (starting from the method definition): ((53' 81)' (172' 200))
Duplicate Code,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkWorkInfo,The method contains a code clone-set at the following line numbers (starting from the method definition): ((81' 115)' (201' 235))
Duplicate Code,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkCheckInfo,The method contains a code clone-set at the following line numbers (starting from the method definition): ((11' 30)' (125' 144))
Duplicate Code,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkCheckInfo,The method contains a code clone-set at the following line numbers (starting from the method definition): ((53' 77)' (168' 192))
Duplicate Code,Management.Controllers,Data_QueryController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\Data_QueryController.cs,checkCheckInfo,The method contains a code clone-set at the following line numbers (starting from the method definition): ((77' 111)' (193' 227))
Duplicate Code,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,checkConditionInfo,The method contains a code clone-set at the following line numbers (starting from the method definition): ((64' 89)' (196' 221))
Duplicate Code,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,displayInfo,The method contains a code clone-set at the following line numbers (starting from the method definition): ((63' 98)' (133' 168)' (209' 244)' (288' 323))
Duplicate Code,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The method contains a code clone-set at the following line numbers (starting from the method definition): ((74' 106)' (324' 356))
Duplicate Code,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The method contains a code clone-set at the following line numbers (starting from the method definition): ((114' 157)' (364' 407))
Duplicate Code,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The method contains a code clone-set at the following line numbers (starting from the method definition): ((184' 203)' (431' 450))
Duplicate Code,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The method contains a code clone-set at the following line numbers (starting from the method definition): ((206' 238)' (451' 483))
Duplicate Code,Management.Controllers,SysController,D:\SecondaryReposToAnalyze\b95678_ss\SamsungNew\code\Management\Controllers\SysController.cs,exportInformation,The method contains a code clone-set at the following line numbers (starting from the method definition): ((251' 275)' (494' 518))
