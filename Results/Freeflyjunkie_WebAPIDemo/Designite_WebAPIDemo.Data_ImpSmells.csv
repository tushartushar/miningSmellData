Implementation smell,Namespace,Class,File,Method,Description
Long Statement,WebAPIDemo.Data,CountingKsRepository,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsRepository.cs,GetDiaries,The length of the statement  "	return _ctx.Diaries.Include ("Entries.FoodItem").Include ("Entries.Measure").OrderByDescending (d => d.CurrentDate).Where (d => d.UserName == userName); " is 152.
Long Statement,WebAPIDemo.Data,CountingKsRepository,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsRepository.cs,GetDiaryEntries,The length of the statement  "	return _ctx.DiaryEntries.Include ("FoodItem").Include ("Measure").Include ("Diary").Where (f => f.Diary.UserName == userName && f.Diary.CurrentDate == diaryDay); " is 161.
Long Statement,WebAPIDemo.Data,CountingKsRepository,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsRepository.cs,GetDiaryEntry,The length of the statement  "	return _ctx.DiaryEntries.Include ("FoodItem").Include ("Measure").Include ("Diary").Where (f => f.Diary.UserName == userName && f.Diary.CurrentDate == diaryDay && f.Id == id).FirstOrDefault (); " is 193.
Empty Catch Block,WebAPIDemo.Data,CountingKsRepository,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsRepository.cs,DeleteDiaryEntry,The method has an empty catch block.
Empty Catch Block,WebAPIDemo.Data,CountingKsRepository,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsRepository.cs,DeleteDiary,The method has an empty catch block.
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,SeedApiUsers,The following statement contains a magic number: try {  	var user = new ApiUser () {  		Name = "My Cool App"'  		AppId = "SSB3aWxsIG1ha2UgbXkgQVBJIHNlY3VyZQ=="'  		Secret = "VGhpcyBDb3Vyc2UgSXMgQXdlc29tZQ=="  	};  	_ctx.ApiUsers.Add (user);  	var token = new AuthToken () {  		Token = "1234567890"'  		Expiration = DateTime.Today.AddDays (365)'  		ApiUser = user  	};  	_ctx.AuthTokens.Add (token);  	_ctx.SaveChanges ();  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,SeedFoods,The following statement contains a magic number: try {  	// Load the excel sheet with data into the database  	var rawData = OpenExcel ("~/App_Data/ABBREV.xls"' "ABBREV22");  	#if TEST_SEED  	        var rows = rawData.Rows.Cast<DataRow>().Take(10); #else  	var rows = rawData.Rows.Cast<DataRow> ();  	#endif  	foreach (var row in rows) {  		var measures = new List<Measure> ();  		var food = new Food () {  			Description = ToTitleCase (GetData<string> (row' "Shrt_Desc"))'  			Measures = measures  		};  		var measureDescription1 = GetData<string> (row' "GmWt_Desc1");  		var measureDescription2 = GetData<string> (row' "GmWt_Desc2");  		if (!string.IsNullOrWhiteSpace (measureDescription1)) {  			var divisor = GetData<double> (row' "GmWt_1");  			var m = CreateRawMeasure (row' divisor' ToTitleCase (measureDescription1));  			measures.Add (m);  		}  		if (!string.IsNullOrWhiteSpace (measureDescription2)) {  			var divisor = GetData<double> (row' "GmWt_2");  			var m = CreateRawMeasure (row' divisor' ToTitleCase (measureDescription2));  			measures.Add (m);  		}  		if (measures.Count == 0) {  			var m = CreateRawMeasure (row' 100.0' "100g");  			measures.Add (m);  		}  		_ctx.Foods.Add (food);  	}  	_ctx.SaveChanges ();  }  catch (Exception ex) {  	// log  	throw ex;  }  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,SeedFoods,The following statement contains a magic number: foreach (var row in rows) {  	var measures = new List<Measure> ();  	var food = new Food () {  		Description = ToTitleCase (GetData<string> (row' "Shrt_Desc"))'  		Measures = measures  	};  	var measureDescription1 = GetData<string> (row' "GmWt_Desc1");  	var measureDescription2 = GetData<string> (row' "GmWt_Desc2");  	if (!string.IsNullOrWhiteSpace (measureDescription1)) {  		var divisor = GetData<double> (row' "GmWt_1");  		var m = CreateRawMeasure (row' divisor' ToTitleCase (measureDescription1));  		measures.Add (m);  	}  	if (!string.IsNullOrWhiteSpace (measureDescription2)) {  		var divisor = GetData<double> (row' "GmWt_2");  		var m = CreateRawMeasure (row' divisor' ToTitleCase (measureDescription2));  		measures.Add (m);  	}  	if (measures.Count == 0) {  		var m = CreateRawMeasure (row' 100.0' "100g");  		measures.Add (m);  	}  	_ctx.Foods.Add (food);  }  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,SeedFoods,The following statement contains a magic number: if (measures.Count == 0) {  	var m = CreateRawMeasure (row' 100.0' "100g");  	measures.Add (m);  }  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,SeedDiaries,The following statement contains a magic number: try {  	var diary = new Diary () {  		CurrentDate = DateTime.Today'  		UserName = "shawnwildermuth"'  	};  	foreach (var food in _ctx.Foods.Take (1000).ToList ().OrderBy (m => Guid.NewGuid ()).Take (15)) {  		var entry = new DiaryEntry () {  			Diary = diary'  			Quantity = 1.5'  		};  		entry.FoodItem = food;  		entry.Measure = food.Measures.First ();  		diary.Entries.Add (entry);  	}  	_ctx.Diaries.Add (diary);  	_ctx.SaveChanges ();  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,SeedDiaries,The following statement contains a magic number: try {  	var diary = new Diary () {  		CurrentDate = DateTime.Today'  		UserName = "shawnwildermuth"'  	};  	foreach (var food in _ctx.Foods.Take (1000).ToList ().OrderBy (m => Guid.NewGuid ()).Take (15)) {  		var entry = new DiaryEntry () {  			Diary = diary'  			Quantity = 1.5'  		};  		entry.FoodItem = food;  		entry.Measure = food.Measures.First ();  		diary.Entries.Add (entry);  	}  	_ctx.Diaries.Add (diary);  	_ctx.SaveChanges ();  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,SeedDiaries,The following statement contains a magic number: try {  	var diary = new Diary () {  		CurrentDate = DateTime.Today'  		UserName = "shawnwildermuth"'  	};  	foreach (var food in _ctx.Foods.Take (1000).ToList ().OrderBy (m => Guid.NewGuid ()).Take (15)) {  		var entry = new DiaryEntry () {  			Diary = diary'  			Quantity = 1.5'  		};  		entry.FoodItem = food;  		entry.Measure = food.Measures.First ();  		diary.Entries.Add (entry);  	}  	_ctx.Diaries.Add (diary);  	_ctx.SaveChanges ();  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,SeedDiaries,The following statement contains a magic number: foreach (var food in _ctx.Foods.Take (1000).ToList ().OrderBy (m => Guid.NewGuid ()).Take (15)) {  	var entry = new DiaryEntry () {  		Diary = diary'  		Quantity = 1.5'  	};  	entry.FoodItem = food;  	entry.Measure = food.Measures.First ();  	diary.Entries.Add (entry);  }  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,SeedDiaries,The following statement contains a magic number: foreach (var food in _ctx.Foods.Take (1000).ToList ().OrderBy (m => Guid.NewGuid ()).Take (15)) {  	var entry = new DiaryEntry () {  		Diary = diary'  		Quantity = 1.5'  	};  	entry.FoodItem = food;  	entry.Measure = food.Measures.First ();  	diary.Entries.Add (entry);  }  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,SeedDiaries,The following statement contains a magic number: foreach (var food in _ctx.Foods.Take (1000).ToList ().OrderBy (m => Guid.NewGuid ()).Take (15)) {  	var entry = new DiaryEntry () {  		Diary = diary'  		Quantity = 1.5'  	};  	entry.FoodItem = food;  	entry.Measure = food.Measures.First ();  	diary.Entries.Add (entry);  }  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,CreateRawMeasure,The following statement contains a magic number: return new Measure () {  	Description = desc'  	Calories = Math.Round ((GetData<double> (row' "Energ_Kcal") / 100) * divisor' 1)'  	Carbohydrates = Math.Round ((GetData<double> (row' "Carbohydrt") / 100) * divisor' 1)'  	Cholestrol = Math.Round ((GetData<double> (row' "Cholestrl") / 100) * divisor' 1)'  	Fiber = Math.Round ((GetData<double> (row' "Fiber_TD") / 100) * divisor' 1)'  	Iron = Math.Round ((GetData<double> (row' "Iron") / 100) * divisor' 1)'  	Protein = Math.Round ((GetData<double> (row' "Protein") / 100) * divisor' 1)'  	SaturatedFat = Math.Round ((GetData<double> (row' "FA_Sat") / 100) * divisor' 1)'  	Sodium = Math.Round ((GetData<double> (row' "Sodium") / 100) * divisor' 1)'  	Sugar = Math.Round ((GetData<double> (row' "Sugar_Tot") / 100) * divisor' 1)'  	TotalFat = Math.Round ((GetData<double> (row' "Lipid_Tot") / 100) * divisor' 1)  };  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,CreateRawMeasure,The following statement contains a magic number: return new Measure () {  	Description = desc'  	Calories = Math.Round ((GetData<double> (row' "Energ_Kcal") / 100) * divisor' 1)'  	Carbohydrates = Math.Round ((GetData<double> (row' "Carbohydrt") / 100) * divisor' 1)'  	Cholestrol = Math.Round ((GetData<double> (row' "Cholestrl") / 100) * divisor' 1)'  	Fiber = Math.Round ((GetData<double> (row' "Fiber_TD") / 100) * divisor' 1)'  	Iron = Math.Round ((GetData<double> (row' "Iron") / 100) * divisor' 1)'  	Protein = Math.Round ((GetData<double> (row' "Protein") / 100) * divisor' 1)'  	SaturatedFat = Math.Round ((GetData<double> (row' "FA_Sat") / 100) * divisor' 1)'  	Sodium = Math.Round ((GetData<double> (row' "Sodium") / 100) * divisor' 1)'  	Sugar = Math.Round ((GetData<double> (row' "Sugar_Tot") / 100) * divisor' 1)'  	TotalFat = Math.Round ((GetData<double> (row' "Lipid_Tot") / 100) * divisor' 1)  };  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,CreateRawMeasure,The following statement contains a magic number: return new Measure () {  	Description = desc'  	Calories = Math.Round ((GetData<double> (row' "Energ_Kcal") / 100) * divisor' 1)'  	Carbohydrates = Math.Round ((GetData<double> (row' "Carbohydrt") / 100) * divisor' 1)'  	Cholestrol = Math.Round ((GetData<double> (row' "Cholestrl") / 100) * divisor' 1)'  	Fiber = Math.Round ((GetData<double> (row' "Fiber_TD") / 100) * divisor' 1)'  	Iron = Math.Round ((GetData<double> (row' "Iron") / 100) * divisor' 1)'  	Protein = Math.Round ((GetData<double> (row' "Protein") / 100) * divisor' 1)'  	SaturatedFat = Math.Round ((GetData<double> (row' "FA_Sat") / 100) * divisor' 1)'  	Sodium = Math.Round ((GetData<double> (row' "Sodium") / 100) * divisor' 1)'  	Sugar = Math.Round ((GetData<double> (row' "Sugar_Tot") / 100) * divisor' 1)'  	TotalFat = Math.Round ((GetData<double> (row' "Lipid_Tot") / 100) * divisor' 1)  };  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,CreateRawMeasure,The following statement contains a magic number: return new Measure () {  	Description = desc'  	Calories = Math.Round ((GetData<double> (row' "Energ_Kcal") / 100) * divisor' 1)'  	Carbohydrates = Math.Round ((GetData<double> (row' "Carbohydrt") / 100) * divisor' 1)'  	Cholestrol = Math.Round ((GetData<double> (row' "Cholestrl") / 100) * divisor' 1)'  	Fiber = Math.Round ((GetData<double> (row' "Fiber_TD") / 100) * divisor' 1)'  	Iron = Math.Round ((GetData<double> (row' "Iron") / 100) * divisor' 1)'  	Protein = Math.Round ((GetData<double> (row' "Protein") / 100) * divisor' 1)'  	SaturatedFat = Math.Round ((GetData<double> (row' "FA_Sat") / 100) * divisor' 1)'  	Sodium = Math.Round ((GetData<double> (row' "Sodium") / 100) * divisor' 1)'  	Sugar = Math.Round ((GetData<double> (row' "Sugar_Tot") / 100) * divisor' 1)'  	TotalFat = Math.Round ((GetData<double> (row' "Lipid_Tot") / 100) * divisor' 1)  };  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,CreateRawMeasure,The following statement contains a magic number: return new Measure () {  	Description = desc'  	Calories = Math.Round ((GetData<double> (row' "Energ_Kcal") / 100) * divisor' 1)'  	Carbohydrates = Math.Round ((GetData<double> (row' "Carbohydrt") / 100) * divisor' 1)'  	Cholestrol = Math.Round ((GetData<double> (row' "Cholestrl") / 100) * divisor' 1)'  	Fiber = Math.Round ((GetData<double> (row' "Fiber_TD") / 100) * divisor' 1)'  	Iron = Math.Round ((GetData<double> (row' "Iron") / 100) * divisor' 1)'  	Protein = Math.Round ((GetData<double> (row' "Protein") / 100) * divisor' 1)'  	SaturatedFat = Math.Round ((GetData<double> (row' "FA_Sat") / 100) * divisor' 1)'  	Sodium = Math.Round ((GetData<double> (row' "Sodium") / 100) * divisor' 1)'  	Sugar = Math.Round ((GetData<double> (row' "Sugar_Tot") / 100) * divisor' 1)'  	TotalFat = Math.Round ((GetData<double> (row' "Lipid_Tot") / 100) * divisor' 1)  };  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,CreateRawMeasure,The following statement contains a magic number: return new Measure () {  	Description = desc'  	Calories = Math.Round ((GetData<double> (row' "Energ_Kcal") / 100) * divisor' 1)'  	Carbohydrates = Math.Round ((GetData<double> (row' "Carbohydrt") / 100) * divisor' 1)'  	Cholestrol = Math.Round ((GetData<double> (row' "Cholestrl") / 100) * divisor' 1)'  	Fiber = Math.Round ((GetData<double> (row' "Fiber_TD") / 100) * divisor' 1)'  	Iron = Math.Round ((GetData<double> (row' "Iron") / 100) * divisor' 1)'  	Protein = Math.Round ((GetData<double> (row' "Protein") / 100) * divisor' 1)'  	SaturatedFat = Math.Round ((GetData<double> (row' "FA_Sat") / 100) * divisor' 1)'  	Sodium = Math.Round ((GetData<double> (row' "Sodium") / 100) * divisor' 1)'  	Sugar = Math.Round ((GetData<double> (row' "Sugar_Tot") / 100) * divisor' 1)'  	TotalFat = Math.Round ((GetData<double> (row' "Lipid_Tot") / 100) * divisor' 1)  };  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,CreateRawMeasure,The following statement contains a magic number: return new Measure () {  	Description = desc'  	Calories = Math.Round ((GetData<double> (row' "Energ_Kcal") / 100) * divisor' 1)'  	Carbohydrates = Math.Round ((GetData<double> (row' "Carbohydrt") / 100) * divisor' 1)'  	Cholestrol = Math.Round ((GetData<double> (row' "Cholestrl") / 100) * divisor' 1)'  	Fiber = Math.Round ((GetData<double> (row' "Fiber_TD") / 100) * divisor' 1)'  	Iron = Math.Round ((GetData<double> (row' "Iron") / 100) * divisor' 1)'  	Protein = Math.Round ((GetData<double> (row' "Protein") / 100) * divisor' 1)'  	SaturatedFat = Math.Round ((GetData<double> (row' "FA_Sat") / 100) * divisor' 1)'  	Sodium = Math.Round ((GetData<double> (row' "Sodium") / 100) * divisor' 1)'  	Sugar = Math.Round ((GetData<double> (row' "Sugar_Tot") / 100) * divisor' 1)'  	TotalFat = Math.Round ((GetData<double> (row' "Lipid_Tot") / 100) * divisor' 1)  };  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,CreateRawMeasure,The following statement contains a magic number: return new Measure () {  	Description = desc'  	Calories = Math.Round ((GetData<double> (row' "Energ_Kcal") / 100) * divisor' 1)'  	Carbohydrates = Math.Round ((GetData<double> (row' "Carbohydrt") / 100) * divisor' 1)'  	Cholestrol = Math.Round ((GetData<double> (row' "Cholestrl") / 100) * divisor' 1)'  	Fiber = Math.Round ((GetData<double> (row' "Fiber_TD") / 100) * divisor' 1)'  	Iron = Math.Round ((GetData<double> (row' "Iron") / 100) * divisor' 1)'  	Protein = Math.Round ((GetData<double> (row' "Protein") / 100) * divisor' 1)'  	SaturatedFat = Math.Round ((GetData<double> (row' "FA_Sat") / 100) * divisor' 1)'  	Sodium = Math.Round ((GetData<double> (row' "Sodium") / 100) * divisor' 1)'  	Sugar = Math.Round ((GetData<double> (row' "Sugar_Tot") / 100) * divisor' 1)'  	TotalFat = Math.Round ((GetData<double> (row' "Lipid_Tot") / 100) * divisor' 1)  };  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,CreateRawMeasure,The following statement contains a magic number: return new Measure () {  	Description = desc'  	Calories = Math.Round ((GetData<double> (row' "Energ_Kcal") / 100) * divisor' 1)'  	Carbohydrates = Math.Round ((GetData<double> (row' "Carbohydrt") / 100) * divisor' 1)'  	Cholestrol = Math.Round ((GetData<double> (row' "Cholestrl") / 100) * divisor' 1)'  	Fiber = Math.Round ((GetData<double> (row' "Fiber_TD") / 100) * divisor' 1)'  	Iron = Math.Round ((GetData<double> (row' "Iron") / 100) * divisor' 1)'  	Protein = Math.Round ((GetData<double> (row' "Protein") / 100) * divisor' 1)'  	SaturatedFat = Math.Round ((GetData<double> (row' "FA_Sat") / 100) * divisor' 1)'  	Sodium = Math.Round ((GetData<double> (row' "Sodium") / 100) * divisor' 1)'  	Sugar = Math.Round ((GetData<double> (row' "Sugar_Tot") / 100) * divisor' 1)'  	TotalFat = Math.Round ((GetData<double> (row' "Lipid_Tot") / 100) * divisor' 1)  };  
Magic Number,WebAPIDemo.Data,CountingKsSeeder,C:\repos\Freeflyjunkie_WebAPIDemo\WebAPIDemo.Data\CountingKsSeeder.cs,CreateRawMeasure,The following statement contains a magic number: return new Measure () {  	Description = desc'  	Calories = Math.Round ((GetData<double> (row' "Energ_Kcal") / 100) * divisor' 1)'  	Carbohydrates = Math.Round ((GetData<double> (row' "Carbohydrt") / 100) * divisor' 1)'  	Cholestrol = Math.Round ((GetData<double> (row' "Cholestrl") / 100) * divisor' 1)'  	Fiber = Math.Round ((GetData<double> (row' "Fiber_TD") / 100) * divisor' 1)'  	Iron = Math.Round ((GetData<double> (row' "Iron") / 100) * divisor' 1)'  	Protein = Math.Round ((GetData<double> (row' "Protein") / 100) * divisor' 1)'  	SaturatedFat = Math.Round ((GetData<double> (row' "FA_Sat") / 100) * divisor' 1)'  	Sodium = Math.Round ((GetData<double> (row' "Sodium") / 100) * divisor' 1)'  	Sugar = Math.Round ((GetData<double> (row' "Sugar_Tot") / 100) * divisor' 1)'  	TotalFat = Math.Round ((GetData<double> (row' "Lipid_Tot") / 100) * divisor' 1)  };  
