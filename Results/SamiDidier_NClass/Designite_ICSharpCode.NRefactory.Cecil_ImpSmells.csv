Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,LoadModule,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,CreateType,Cyclomatic complexity of the method is 13
Complex Method,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,AddAttributes,Cyclomatic complexity of the method is 46
Complex Method,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,AddAttributes,Cyclomatic complexity of the method is 22
Complex Method,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,ConvertMarshalInfo,Cyclomatic complexity of the method is 12
Complex Method,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,InitTypeModifiers,Cyclomatic complexity of the method is 20
Complex Method,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,InitMembers,Cyclomatic complexity of the method is 20
Complex Method,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,ReadMethod,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,ReadParameter,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,TryDecodeDecimalConstantAttribute,Cyclomatic complexity of the method is 12
Complex Method,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,AddConstraints,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,ReadProperty,Cyclomatic complexity of the method is 8
Long Parameter List,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,ReadMethod,The method has 5 parameters.
Long Identifier,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,LoadModule,The length of the parameter cecilLoaderCloneForLazyLoading is 30.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,LoadModule,The length of the statement  "	this.currentAssembly = new CecilUnresolvedAssembly (assemblyDefinition != null ? assemblyDefinition.Name.FullName : moduleDefinition.Name' this.DocumentationProvider); " is 167.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,CreateType,The length of the statement  "		return interningProvider.Intern (new ByReferenceTypeReference (CreateType ((type as Mono.Cecil.ByReferenceType).ElementType' typeAttributes' ref typeIndex))); " is 158.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,CreateType,The length of the statement  "		return interningProvider.Intern (new PointerTypeReference (CreateType ((type as Mono.Cecil.PointerType).ElementType' typeAttributes' ref typeIndex))); " is 150.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,CreateType,The length of the statement  "		return interningProvider.Intern (new ArrayTypeReference (CreateType ((type as Mono.Cecil.ArrayType).ElementType' typeAttributes' ref typeIndex)' (type as Mono.Cecil.ArrayType).Rank)); " is 183.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,CreateType,The length of the statement  "		return TypeParameterReference.Create (typeGP.Owner is MethodDefinition ? SymbolKind.Method : SymbolKind.TypeDefinition' typeGP.Position); " is 137.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,CreateType,The length of the statement  "			return interningProvider.Intern (new GetClassTypeReference (GetAssemblyReference (type.Scope)' ns' name' typeParameterCount)); " is 126.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,AddAttributes,The length of the statement  "		assemblyVersion.PositionalArguments.Add (CreateSimpleConstantValue (KnownTypeReference.String' assembly.Name.Version.ToString ())); " is 131.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,AddAttributes,The length of the statement  "			dllImport.AddNamedFieldArgument ("CallingConvention"' CreateSimpleConstantValue (callingConventionTypeRef' (int)callingConvention)); " is 132.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,AddAttributes,The length of the statement  "	LayoutKind defaultLayoutKind = (typeDefinition.IsValueType && !typeDefinition.IsEnum) ? LayoutKind.Sequential : LayoutKind.Auto; " is 128.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,AddAttributes,The length of the statement  "	if (layoutKind != defaultLayoutKind || charSet != CharSet.Ansi || typeDefinition.PackingSize > 0 || typeDefinition.ClassSize > 0) { " is 131.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,AddAttributes,The length of the statement  "			structLayout.AddNamedFieldArgument ("Pack"' CreateSimpleConstantValue (KnownTypeReference.Int32' (int)typeDefinition.PackingSize)); " is 131.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,AddAttributes,The length of the statement  "			structLayout.AddNamedFieldArgument ("Size"' CreateSimpleConstantValue (KnownTypeReference.Int32' (int)typeDefinition.ClassSize)); " is 129.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,ConvertMarshalInfo,The length of the statement  "		attr.AddNamedFieldArgument ("SafeArraySubType"' CreateSimpleConstantValue (typeof(VarEnum).ToTypeReference ()' (int)sami.ElementType)); " is 135.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,ConvertMarshalInfo,The length of the statement  "			attr.AddNamedFieldArgument ("SizeParamIndex"' CreateSimpleConstantValue (KnownTypeReference.Int16' (short)ami.SizeParameterIndex)); " is 131.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,ConvertMarshalInfo,The length of the statement  "			attr.AddNamedFieldArgument ("MarshalType"' CreateSimpleConstantValue (KnownTypeReference.String' cmi.ManagedType.FullName)); " is 124.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,ReadAttribute,The length of the statement  "	return interningProvider.Intern (new UnresolvedAttributeBlob (attributeType' ctorParameterTypes' attribute.GetBlob ())); " is 120.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,InitTypeParameters,The length of the statement  "		typeParameters.Add (new DefaultUnresolvedTypeParameter (SymbolKind.TypeDefinition' i' typeDefinition.GenericParameters [i].Name)); " is 130.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,InitNestedTypes,The length of the statement  "		if (this.IncludeInternalMembers || visibility == TypeAttributes.NestedPublic || visibility == TypeAttributes.NestedFamily || visibility == TypeAttributes.NestedFamORAssem) { " is 173.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,IsModule,The length of the statement  "		if (att.AttributeType.FullName == "Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" || att.AttributeType.FullName == "System.Runtime.CompilerServices.CompilerGlobalScopeAttribute") { " is 197.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,InitMembers,The length of the statement  "		var defaultMemberAttribute = typeDefinition.CustomAttributes.FirstOrDefault (a => a.AttributeType.FullName == typeof(System.Reflection.DefaultMemberAttribute).FullName); " is 169.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,InitMembers,The length of the statement  "					else if (property.Name.EndsWith (".Item"' StringComparison.Ordinal) && (property.GetMethod ?? property.SetMethod).HasOverrides) { " is 129.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,ReadMethod,The length of the statement  "			m.ExplicitInterfaceImplementations.Add (new DefaultMemberReference (accessorOwner != null ? SymbolKind.Accessor : SymbolKind.Method' ReadTypeReference (or.DeclaringType)' or.Name' or.GenericParameters.Count' m.Parameters.Select (p => p.Type).ToList ())); " is 254.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,HasExtensionAttribute,The length of the statement  "			if (attr.AttributeType.Name == "ExtensionAttribute" && attr.AttributeType.Namespace == "System.Runtime.CompilerServices") " is 121.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,IsVisible,The length of the statement  "	return IncludeInternalMembers || att == MethodAttributes.Public || att == MethodAttributes.Family || att == MethodAttributes.FamORAssem; " is 136.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,IsVisible,The length of the statement  "	return IncludeInternalMembers || att == FieldAttributes.Public || att == FieldAttributes.Family || att == FieldAttributes.FamORAssem; " is 133.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,TryDecodeDecimalConstantAttribute,The length of the statement  "	// DecimalConstantAttribute has the arguments (byte scale' byte sign' uint hi' uint mid' uint low) or (byte scale' byte sign' int hi' int mid' int low) " is 151.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,TryDecodeDecimalConstantAttribute,The length of the statement  "	// Both of these invoke the Decimal constructor (int lo' int mid' int hi' bool isNegative' byte scale) with explicit argument conversions if required. " is 150.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,TryDecodeDecimalConstantAttribute,The length of the statement  "	return new decimal ((int)ctorArgs [4]' (int)ctorArgs [3]' (int)ctorArgs [2]' (byte)ctorArgs [1] != 0' (byte)ctorArgs [0]); " is 122.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,ReadField,The length of the statement  "		var decConstant = field.CustomAttributes.FirstOrDefault (a => a.AttributeType.FullName == "System.Runtime.CompilerServices.DecimalConstantAttribute"); " is 150.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,MergePropertyAccessibility,The length of the statement  "	if (left == Accessibility.Protected && right == Accessibility.Internal || left == Accessibility.Internal && right == Accessibility.Protected) " is 141.
Long Statement,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,ReadProperty,The length of the statement  "		p.Accessibility = MergePropertyAccessibility (GetAccessibility (property.GetMethod.Attributes)' GetAccessibility (property.SetMethod.Attributes)); " is 146.
Complex Conditional,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,AddAttributes,The conditional expression  "layoutKind != defaultLayoutKind || charSet != CharSet.Ansi || typeDefinition.PackingSize > 0 || typeDefinition.ClassSize > 0"  is complex.
Complex Conditional,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,InitNestedTypes,The conditional expression  "this.IncludeInternalMembers || visibility == TypeAttributes.NestedPublic || visibility == TypeAttributes.NestedFamily || visibility == TypeAttributes.NestedFamORAssem"  is complex.
Complex Conditional,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,MergePropertyAccessibility,The conditional expression  "left == Accessibility.Protected && right == Accessibility.Internal || left == Accessibility.Internal && right == Accessibility.Protected"  is complex.
Magic Number,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,TryDecodeDecimalConstantAttribute,The following statement contains a magic number: if (attribute.ConstructorArguments.Count != 5)  	return null;  
Magic Number,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,TryDecodeDecimalConstantAttribute,The following statement contains a magic number: return new decimal ((int)ctorArgs [4]' (int)ctorArgs [3]' (int)ctorArgs [2]' (byte)ctorArgs [1] != 0' (byte)ctorArgs [0]);  
Magic Number,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,TryDecodeDecimalConstantAttribute,The following statement contains a magic number: return new decimal ((int)ctorArgs [4]' (int)ctorArgs [3]' (int)ctorArgs [2]' (byte)ctorArgs [1] != 0' (byte)ctorArgs [0]);  
Magic Number,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,TryDecodeDecimalConstantAttribute,The following statement contains a magic number: return new decimal ((int)ctorArgs [4]' (int)ctorArgs [3]' (int)ctorArgs [2]' (byte)ctorArgs [1] != 0' (byte)ctorArgs [0]);  
Missing Default,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,AddAttributes,The following switch statement is missing a default case: switch (info.Attributes & PInvokeAttributes.CharSetMask) {  case PInvokeAttributes.CharSetAnsi:  	charSet = CharSet.Ansi;  	break;  case PInvokeAttributes.CharSetAuto:  	charSet = CharSet.Auto;  	break;  case PInvokeAttributes.CharSetUnicode:  	charSet = CharSet.Unicode;  	break;  }  
Missing Default,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,AddAttributes,The following switch statement is missing a default case: switch (typeDefinition.Attributes & TypeAttributes.LayoutMask) {  case TypeAttributes.SequentialLayout:  	layoutKind = LayoutKind.Sequential;  	break;  case TypeAttributes.ExplicitLayout:  	layoutKind = LayoutKind.Explicit;  	break;  }  
Missing Default,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,AddAttributes,The following switch statement is missing a default case: switch (typeDefinition.Attributes & TypeAttributes.StringFormatMask) {  case TypeAttributes.AnsiClass:  	charSet = CharSet.Ansi;  	break;  case TypeAttributes.AutoClass:  	charSet = CharSet.Auto;  	break;  case TypeAttributes.UnicodeClass:  	charSet = CharSet.Unicode;  	break;  }  
Missing Default,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,InitTypeModifiers,The following switch statement is missing a default case: switch (typeDefinition.Attributes & TypeAttributes.VisibilityMask) {  case TypeAttributes.NotPublic:  case TypeAttributes.NestedAssembly:  	td.Accessibility = Accessibility.Internal;  	break;  case TypeAttributes.Public:  case TypeAttributes.NestedPublic:  	td.Accessibility = Accessibility.Public;  	break;  case TypeAttributes.NestedPrivate:  	td.Accessibility = Accessibility.Private;  	break;  case TypeAttributes.NestedFamily:  	td.Accessibility = Accessibility.Protected;  	break;  case TypeAttributes.NestedFamANDAssem:  	td.Accessibility = Accessibility.ProtectedAndInternal;  	break;  case TypeAttributes.NestedFamORAssem:  	td.Accessibility = Accessibility.ProtectedOrInternal;  	break;  }  
Missing Default,ICSharpCode.NRefactory.TypeSystem,CecilLoader,C:\repos\SamiDidier_NClass\lib\NRefactory\ICSharpCode.NRefactory.Cecil\CecilLoader.cs,AddConstraints,The following switch statement is missing a default case: switch (g.Attributes & GenericParameterAttributes.VarianceMask) {  case GenericParameterAttributes.Contravariant:  	tp.Variance = VarianceModifier.Contravariant;  	break;  case GenericParameterAttributes.Covariant:  	tp.Variance = VarianceModifier.Covariant;  	break;  }  
