Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NClass.Core,Model,C:\repos\SamiDidier_NClass\src\Core\Model.cs,GetEntity,Cyclomatic complexity of the method is 16
Complex Method,NClass.Core,Model,C:\repos\SamiDidier_NClass\src\Core\Model.cs,LoadRelationships,Cyclomatic complexity of the method is 28
Complex Method,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,InsertMember,Cyclomatic complexity of the method is 34
Complex Method,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,SortMembers,Cyclomatic complexity of the method is 15
Complex Method,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetOperation,Cyclomatic complexity of the method is 10
Complex Method,NClass.Core,AssociationRelationship,C:\repos\SamiDidier_NClass\src\Core\Relationships\AssociationRelationship.cs,Deserialize,Cyclomatic complexity of the method is 14
Complex Method,NClass.Core,AssociationRelationship,C:\repos\SamiDidier_NClass\src\Core\Relationships\AssociationRelationship.cs,ToString,Cyclomatic complexity of the method is 13
Long Statement,NClass.Core,Model,C:\repos\SamiDidier_NClass\src\Core\Model.cs,InsertAssociation,The length of the statement  "	if (associaton != null && !relationships.Contains (associaton) && entities.Contains (associaton.First) && entities.Contains (associaton.Second)) { " is 146.
Long Statement,NClass.Core,Model,C:\repos\SamiDidier_NClass\src\Core\Model.cs,InsertGeneralization,The length of the statement  "	if (generalization != null && !relationships.Contains (generalization) && entities.Contains (generalization.First) && entities.Contains (generalization.Second)) { " is 162.
Long Statement,NClass.Core,Model,C:\repos\SamiDidier_NClass\src\Core\Model.cs,InsertRealization,The length of the statement  "	if (realization != null && !relationships.Contains (realization) && entities.Contains (realization.First) && entities.Contains (realization.Second)) { " is 150.
Long Statement,NClass.Core,Model,C:\repos\SamiDidier_NClass\src\Core\Model.cs,InsertDependency,The length of the statement  "	if (dependency != null && !relationships.Contains (dependency) && entities.Contains (dependency.First) && entities.Contains (dependency.Second)) { " is 146.
Long Statement,NClass.Core,Model,C:\repos\SamiDidier_NClass\src\Core\Model.cs,InsertNesting,The length of the statement  "	if (nesting != null && !relationships.Contains (nesting) && entities.Contains (nesting.First) && entities.Contains (nesting.Second)) { " is 134.
Long Statement,NClass.Core,Model,C:\repos\SamiDidier_NClass\src\Core\Model.cs,InsertCommentRelationship,The length of the statement  "	if (commentRelationship != null && !relationships.Contains (commentRelationship) && entities.Contains (commentRelationship.First) && entities.Contains (commentRelationship.Second)) { " is 182.
Long Statement,NClass.Core,Language,C:\repos\SamiDidier_NClass\src\Core\Language.cs,GetLanguage,The length of the statement  "				object languageInstance = type.InvokeMember ("Instance"' BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty' null' null' null); " is 145.
Long Statement,NClass.Core,Project,C:\repos\SamiDidier_NClass\src\Core\Project.cs,LoadWithPreviousFormat,The length of the statement  "	IProjectItem projectItem = (IProjectItem)assembly.CreateInstance ("NClass.DiagramEditor.ClassDiagram.Diagram"' false' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' null' null' null); " is 212.
Long Statement,NClass.Core,Project,C:\repos\SamiDidier_NClass\src\Core\Project.cs,Deserialize,The length of the statement  "			IProjectItem projectItem = (IProjectItem)assembly.CreateInstance (typeName' false' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' null' null' null); " is 177.
Long Statement,NClass.Core,Project,C:\repos\SamiDidier_NClass\src\Core\Project.cs,Equals,The length of the statement  "	return (this.projectFile != null && project.projectFile != null && this.projectFile.FullName == project.projectFile.FullName); " is 126.
Long Statement,NClass.Core,GeneralizationRelationship,C:\repos\SamiDidier_NClass\src\Core\Relationships\GeneralizationRelationship.cs,OnAttaching,The length of the statement  "	if (First is SingleInharitanceType ^ Second is SingleInharitanceType || First is InterfaceType ^ Second is InterfaceType) " is 121.
Long Statement,NClass.Core,Operation,C:\repos\SamiDidier_NClass\src\Core\Members\Operation.cs,HasSameSignatureAs,The length of the statement  "		if (ArgumentList [i].Type != operation.ArgumentList [i].Type || ArgumentList [i].Modifier != operation.ArgumentList [i].Modifier) { " is 131.
Complex Conditional,NClass.Core,Model,C:\repos\SamiDidier_NClass\src\Core\Model.cs,InsertAssociation,The conditional expression  "associaton != null && !relationships.Contains (associaton) && entities.Contains (associaton.First) && entities.Contains (associaton.Second)"  is complex.
Complex Conditional,NClass.Core,Model,C:\repos\SamiDidier_NClass\src\Core\Model.cs,InsertGeneralization,The conditional expression  "generalization != null && !relationships.Contains (generalization) && entities.Contains (generalization.First) && entities.Contains (generalization.Second)"  is complex.
Complex Conditional,NClass.Core,Model,C:\repos\SamiDidier_NClass\src\Core\Model.cs,InsertRealization,The conditional expression  "realization != null && !relationships.Contains (realization) && entities.Contains (realization.First) && entities.Contains (realization.Second)"  is complex.
Complex Conditional,NClass.Core,Model,C:\repos\SamiDidier_NClass\src\Core\Model.cs,InsertDependency,The conditional expression  "dependency != null && !relationships.Contains (dependency) && entities.Contains (dependency.First) && entities.Contains (dependency.Second)"  is complex.
Complex Conditional,NClass.Core,Model,C:\repos\SamiDidier_NClass\src\Core\Model.cs,InsertNesting,The conditional expression  "nesting != null && !relationships.Contains (nesting) && entities.Contains (nesting.First) && entities.Contains (nesting.Second)"  is complex.
Complex Conditional,NClass.Core,Model,C:\repos\SamiDidier_NClass\src\Core\Model.cs,InsertCommentRelationship,The conditional expression  "commentRelationship != null && !relationships.Contains (commentRelationship) && entities.Contains (commentRelationship.First) && entities.Contains (commentRelationship.Second)"  is complex.
Complex Conditional,NClass.Core,Model,C:\repos\SamiDidier_NClass\src\Core\Model.cs,LoadRelationships,The conditional expression  "firstIndex < 0 || firstIndex >= entities.Count || secondIndex < 0 || secondIndex >= entities.Count"  is complex.
Virtual Method Call from Constructor,NClass.Core,EnumValue,C:\repos\SamiDidier_NClass\src\Core\Members\EnumValue.cs,EnumValue,The constructor "EnumValue" calls a virtual method "InitFromString".
Empty Catch Block,NClass.Core,AssociationRelationship,C:\repos\SamiDidier_NClass\src\Core\Relationships\AssociationRelationship.cs,Deserialize,The method has an empty catch block.
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: if (member is Property) {  	Property property = (Property)member;  	if (property.IsReadonly)  		return 2;  	else if (property.IsWriteonly)  		return 3;  	else  		return 4;  }  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: if (member is Property) {  	Property property = (Property)member;  	if (property.IsReadonly)  		return 2;  	else if (property.IsWriteonly)  		return 3;  	else  		return 4;  }  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: if (member is Property) {  	Property property = (Property)member;  	if (property.IsReadonly)  		return 2;  	else if (property.IsWriteonly)  		return 3;  	else  		return 4;  }  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: if (property.IsReadonly)  	return 2;  else if (property.IsWriteonly)  	return 3;  else  	return 4;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: if (property.IsReadonly)  	return 2;  else if (property.IsWriteonly)  	return 3;  else  	return 4;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: if (property.IsReadonly)  	return 2;  else if (property.IsWriteonly)  	return 3;  else  	return 4;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: return 2;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: if (property.IsWriteonly)  	return 3;  else  	return 4;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: if (property.IsWriteonly)  	return 3;  else  	return 4;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: return 3;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: return 4;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: if (member is Constructor)  	return 5;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: return 5;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: if (member is Method && ((Method)member).IsOperator)  	return 6;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: return 6;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: if (member is Destructor)  	return 8;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: return 8;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: if (member is Method)  	return 7;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: return 7;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: if (member is Event)  	return 9;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: return 9;  
Magic Number,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,GetMemberOrdinal,The following statement contains a magic number: return 10;  
Missing Default,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,InsertMember,The following switch statement is missing a default case: switch (type) {  case MemberType.Field:  	Field field = AddField ();  	fields.RemoveAt (FieldCount - 1);  	fields.Insert (index' field);  	break;  case MemberType.Method:  	Method method = AddMethod ();  	operations.RemoveAt (OperationCount - 1);  	operations.Insert (index' method);  	break;  case MemberType.Constructor:  	Constructor constructor = AddConstructor ();  	operations.RemoveAt (OperationCount - 1);  	operations.Insert (index' constructor);  	break;  case MemberType.Destructor:  	Destructor destructor = AddDestructor ();  	operations.RemoveAt (OperationCount - 1);  	operations.Insert (index' destructor);  	break;  case MemberType.Property:  	Property property = AddProperty ();  	operations.RemoveAt (OperationCount - 1);  	operations.Insert (index' property);  	break;  case MemberType.Event:  	Event _event = AddEvent ();  	operations.RemoveAt (OperationCount - 1);  	operations.Insert (index' _event);  	break;  }  
Missing Default,NClass.Core,CompositeType,C:\repos\SamiDidier_NClass\src\Core\Entities\CompositeType.cs,SortMembers,The following switch statement is missing a default case: switch (sortingMode) {  case SortingMode.ByName:  	FieldList.Sort (MemberComparisonByName);  	OperationList.Sort (MemberComparisonByName);  	Changed ();  	break;  case SortingMode.ByAccess:  	FieldList.Sort (MemberComparisonByAccess);  	OperationList.Sort (MemberComparisonByAccess);  	Changed ();  	break;  case SortingMode.ByKind:  	FieldList.Sort (MemberComparisonByKind);  	OperationList.Sort (MemberComparisonByKind);  	Changed ();  	break;  }  
