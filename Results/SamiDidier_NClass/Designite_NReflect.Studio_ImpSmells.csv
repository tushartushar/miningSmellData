Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NReflect.Studio.Panels,MessagePanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\MessagePanel.cs,UpdateButtonText,Cyclomatic complexity of the method is 12
Complex Method,NReflect.Studio.Panels,ObjectComparePanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\ObjectComparePanel.cs,nodeControlResult_ValueNeeded,Cyclomatic complexity of the method is 20
Complex Method,NReflect.Studio.Panels,TestCasesPanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\TestCasesPanel.cs,nodeIconState_ValueNeeded,Cyclomatic complexity of the method is 16
Complex Method,NReflect.Studio.ObjectTree.Comparer,ObjectTreeModelComparer,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\Comparer\ObjectTreeModelComparer.cs,CompareRecur,Cyclomatic complexity of the method is 16
Complex Method,NReflect.Studio.ObjectTree,ObjectTree,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectTree.cs,trvTree_DragDrop,Cyclomatic complexity of the method is 9
Complex Method,NReflect.Studio.ObjectTree,ObjectValueNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectValueNodeControl.cs,GetNewValue,Cyclomatic complexity of the method is 8
Long Parameter List,NReflect.Studio.Panels,TestCasesPanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\TestCasesPanel.cs,nodeIconMessages_ValueNeeded,The method has 5 parameters.
Long Parameter List,NReflect.Studio.ObjectTree,ObjectValueNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectValueNodeControl.cs,GetEditControlPanel,The method has 5 parameters.
Long Identifier,NReflect.Studio.ObjectTree,ObjectTree,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectTree.cs,GetEquivalentField,The length of the parameter equivalentParentFieldDictionary is 31.
Long Statement,NReflect.Studio,CompileForm,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\CompileForm.cs,cmdRun_Click,The length of the statement  "	args.TestCases.AddRange (radioAll.Checked ? CoreData.Instance.TestCaseModel.TestCases.OfType<TestCaseCSharp> () : selectedTestCases.OfType<TestCaseCSharp> ()); " is 159.
Long Statement,NReflect.Studio,CompileForm,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\CompileForm.cs,cmdRun_Click,The length of the statement  "	CoreData.Instance.Messages.Add (new Message (MessageSeverity.Info' "Start to compile " + args.TestCases.Count + " test cases...")); " is 131.
Long Statement,NReflect.Studio,MainForm,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\MainForm.cs,RunTestCases,The length of the statement  "	CoreData.Instance.Messages.Add (new Message (MessageSeverity.Info' "Start to execute " + testCases.Count () + " test cases...")); " is 129.
Long Statement,NReflect.Studio,RunVisitorsForm,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\RunVisitorsForm.cs,cmdRun_Click,The length of the statement  "	CoreData.Instance.Messages.Add (new Message (MessageSeverity.Info' "Start to execute " + args.Visitors.Count + " visitors on " + args.TestCases.Count + " test cases...")); " is 171.
Long Statement,NReflect.Studio,TestCaseRunner,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\TestCaseRunner.cs,Compile,The length of the statement  "	CompilerResults compilerResults = Compile (testCases.Select (testCase => testCase.Code).ToArray ()' false' assemblyName); " is 121.
Long Statement,NReflect.Studio,TestCaseRunner,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\TestCaseRunner.cs,Comparer_CompareFields,The length of the statement  "		if (e.ExpectedField.Name == "FullName" && (e.ExpectedField.Parent.Value is NRAssembly || e.ExpectedField.Parent.Value is NRTypeUsage)) { " is 136.
Long Statement,NReflect.Studio,TestCaseRunner,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\TestCaseRunner.cs,Comparer_CompareFields,The length of the statement  "		else if (e.ExpectedField.Name == "TypeFullName" && (e.ExpectedField.Parent.Value is NRField || e.ExpectedField.Parent.Value is NRParameter || e.ExpectedField.Parent.Value is NRMethod)) { " is 186.
Long Statement,NReflect.Studio,TestCaseStateNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\TestCaseStateNodeControl.cs,Draw,The length of the statement  "		Rectangle rect = new Rectangle (context.Bounds.X + 1' context.Bounds.Y + 1' context.Bounds.Width - 3' context.Bounds.Height - 2); " is 129.
Long Statement,NReflect.Studio,TestCaseStateNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\TestCaseStateNodeControl.cs,Draw,The length of the statement  "			SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - testCase.Percent) * 255)' (int)(testCase.Percent * 255)' 0)); " is 125.
Long Statement,NReflect.Studio,TestCaseStateNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\TestCaseStateNodeControl.cs,Draw,The length of the statement  "			context.Graphics.DrawString (string.Format ("{0}%"' (int)(testCase.Percent * 100))' context.Font' Brushes.Black' rect' format); " is 127.
Long Statement,NReflect.Studio.Models,TestCaseModel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Models\TestCaseModel.cs,GetChildTestCases,The length of the statement  "	result = testCaseGroup.TestCases.OfType<TestCaseGroup> ().Aggregate (result' (current' testCaseBase) => current.Concat (GetChildTestCases (testCaseBase))); " is 155.
Long Statement,NReflect.Studio.Models,TestCaseModel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Models\TestCaseModel.cs,LoadTestCases,The length of the statement  "		CoreData.Instance.Messages.Add (new Message (MessageSeverity.Info' "Loading test cases successful. Loaded " + CountTestCases + " test cases in " + CountTestCaseGroups + " groups.")); " is 182.
Long Statement,NReflect.Studio.Panels,OptionsPanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\OptionsPanel.cs,LoadVisitorConfigPanels,The length of the statement  "		tabMain.TabPages.AddRange (assembly.GetTypes ().Where (t => t.IsSubclassOf (panelType)).Select (Activator.CreateInstance).Cast<UserControl> ().Select (panel =>  { " is 162.
Long Statement,NReflect.Studio.Panels,ObjectComparePanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\ObjectComparePanel.cs,expectedObjectTree_NewValueNeeded,The length of the statement  "	if (e.ObjectField != null && e.ObjectField.Parent is ObjectFieldClass && e.ObjectField.Parent.Value is NRAttributeValue) { " is 122.
Long Statement,NReflect.Studio.Panels,TestCasesPanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\TestCasesPanel.cs,trvTestCases_SizeChanged,The length of the statement  "	colTestCase.Width = trvTestCases.ClientSize.Width - colTestCaseMessages.Width - colState.Width - colTestCaseState.Width - SystemInformation.VerticalScrollBarWidth; " is 163.
Long Statement,NReflect.Studio.Panels,TestCasesPanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\TestCasesPanel.cs,nodeFileIcon_ValueNeeded,The length of the statement  "	e.Value = e.Node.Tag is TestCaseCSharp ? Resources.CSharpFile : (e.Node.Tag is TestCaseAssembly ? Resources.AssemblyFile : Resources.Folder); " is 141.
Long Statement,NReflect.Studio.ObjectTree.Comparer,ComparePercentageNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\Comparer\ComparePercentageNodeControl.cs,Draw,The length of the statement  "		Rectangle rect = new Rectangle (context.Bounds.X + 1' context.Bounds.Y + 1' context.Bounds.Width - 3' context.Bounds.Height - 2); " is 129.
Long Statement,NReflect.Studio.ObjectTree.Comparer,ComparePercentageNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\Comparer\ComparePercentageNodeControl.cs,Draw,The length of the statement  "			SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - compareResult.Percent) * 255)' (int)(compareResult.Percent * 255)' 0)); " is 135.
Long Statement,NReflect.Studio.ObjectTree.Comparer,ComparePercentageNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\Comparer\ComparePercentageNodeControl.cs,Draw,The length of the statement  "			context.Graphics.DrawString (string.Format ("{0}%"' (int)(compareResult.Percent * 100))' context.Font' Brushes.Black' rect' format); " is 132.
Long Statement,NReflect.Studio.ObjectTree,ObjectTree,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectTree.cs,ResizeColumns,The length of the statement  "		int delta = trvTree.ClientSize.Width - currentWidth - (trvTree.VerticalScrollBar != null ? (trvTree.VerticalScrollBar.Visible ? trvTree.VerticalScrollBar.Width : 0) : 0); " is 170.
Long Statement,NReflect.Studio.ObjectTree,ObjectTree,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectTree.cs,trvTree_DragOver,The length of the statement  "					if (parentDraggedCollection != null && parentDestCollection != null && parentDraggedCollection.ItemType == parentDestCollection.ItemType) { " is 139.
Long Statement,NReflect.Studio.ObjectTree,ObjectTree,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectTree.cs,trvTree_SelectionChanged,The length of the statement  "	OnSelectionChanged (new ObjectFieldEventArgs (trvTree.SelectedNode != null ? trvTree.SelectedNode.Tag as ObjectField : null)); " is 126.
Long Statement,NReflect.Studio.ObjectTree,ObjectTreeModelCreator,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectTreeModelCreator.cs,RefreshObjectField,The length of the statement  "			ObjectField innerField = CreateObjectField (innerProperty.Name' innerProperty.PropertyType' innerProperty.GetValue (o' null)' innerProperty); " is 141.
Long Statement,NReflect.Studio.ObjectTree,ObjectValueNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectValueNodeControl.cs,CanEdit,The length of the statement  "	return IsEditEnabled (node) && node != null && node.Tag is ObjectField && !(node.Tag is ObjectFieldCollection) && !(node.Tag is ObjectFieldClass) && (node.Tag as ObjectField).IsSetable && (node.Tag as ObjectField).Value != null; " is 228.
Long Statement,NReflect.Studio.ObjectTree,ObjectValueNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectValueNodeControl.cs,MouseDown,The length of the statement  "		else if (field != null && field.Parent is ObjectFieldCollection && GetIconRect (args.ControlBounds' Resources.Delete).Contains (args.ViewLocation)) { " is 149.
Long Statement,NReflect.Studio.ObjectTree,ObjectValueNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectValueNodeControl.cs,MouseDown,The length of the statement  "		else if (field != null && field.Parent != null && field.IsNullable && GetIconRect (args.ControlBounds' Resources.Null).Contains (args.ViewLocation)) { " is 150.
Long Statement,NReflect.Studio.Visitor,VisitorManager,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Visitor\VisitorManager.cs,LoadVisitors,The length of the statement  "	foreach (Type type in Assembly.GetAssembly (typeof(VisitorBase)).GetTypes ().Where (type => type.IsSubclassOf (typeof(VisitorBase)) && type.GetInterfaces ().Contains (typeof(IVisitor)))) { " is 188.
Complex Conditional,NReflect.Studio,TestCaseRunner,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\TestCaseRunner.cs,Comparer_CompareFields,The conditional expression  "e.ExpectedField.Name == "TypeFullName" && (e.ExpectedField.Parent.Value is NRField || e.ExpectedField.Parent.Value is NRParameter || e.ExpectedField.Parent.Value is NRMethod)"  is complex.
Complex Conditional,NReflect.Studio.Panels,ObjectComparePanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\ObjectComparePanel.cs,expectedObjectTree_Expanded,The conditional expression  "collection != null && collection.Count == 1 && (openOther || !toolStripButtonSynchronizeTrees.Checked)"  is complex.
Complex Conditional,NReflect.Studio.ObjectTree,ObjectTree,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectTree.cs,trvTree_DragOver,The conditional expression  "nodes != null && nodes.Length == 1 && parent != null && Editable"  is complex.
Complex Conditional,NReflect.Studio.ObjectTree,ObjectValueNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectValueNodeControl.cs,Draw,The conditional expression  "node == null || node.Tag == null || !(node.Tag is ObjectField) || !IsEditEnabled (node)"  is complex.
Complex Conditional,NReflect.Studio.ObjectTree,ObjectValueNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectValueNodeControl.cs,MouseDown,The conditional expression  "field != null && field.Parent != null && field.IsNullable && GetIconRect (args.ControlBounds' Resources.Null).Contains (args.ViewLocation)"  is complex.
Virtual Method Call from Constructor,NReflect.Studio,CoreView,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\CoreView.cs,CoreView,The constructor "CoreView" calls a virtual method "OnPropertyChanged".
Empty Catch Block,NReflect.Studio.Visitor,VisitorManager,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Visitor\VisitorManager.cs,LoadConfigs,The method has an empty catch block.
Magic Number,NReflect.Studio,CompileForm,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\CompileForm.cs,backgroundWorker_DoWork,The following statement contains a magic number: if (args != null) {  	if (args.CompileToSingleDll) {  		backgroundWorker.ReportProgress (0);  		TestCaseRunner.Instance.Compile (args.TestCases' args.DestinationPath);  		backgroundWorker.ReportProgress (100);  	}  	else {  		string testCaseDirectory = CoreData.Instance.TestCaseModel.TestCaseDirectory;  		int step = 0;  		foreach (TestCaseCSharp testCase in args.TestCases) {  			string path = "";  			if (testCase.Path.StartsWith (testCaseDirectory)) {  				path = testCase.Path.Substring (testCaseDirectory.Length);  				// Remove a leading '\' otherwise Path.Combine doesn't work.  				if (path.StartsWith ("\\")) {  					path = path.Substring (1);  				}  			}  			path = Path.Combine (args.DestinationPath' path);  			Directory.CreateDirectory (path);  			TestCaseRunner.Instance.Compile (new[] {  				testCase  			}' Path.Combine (path' testCase.Name + ".dll"));  			step++;  			backgroundWorker.ReportProgress ((int)(((double)step / args.TestCases.Count) * 100));  		}  	}  }  
Magic Number,NReflect.Studio,CompileForm,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\CompileForm.cs,backgroundWorker_DoWork,The following statement contains a magic number: if (args != null) {  	if (args.CompileToSingleDll) {  		backgroundWorker.ReportProgress (0);  		TestCaseRunner.Instance.Compile (args.TestCases' args.DestinationPath);  		backgroundWorker.ReportProgress (100);  	}  	else {  		string testCaseDirectory = CoreData.Instance.TestCaseModel.TestCaseDirectory;  		int step = 0;  		foreach (TestCaseCSharp testCase in args.TestCases) {  			string path = "";  			if (testCase.Path.StartsWith (testCaseDirectory)) {  				path = testCase.Path.Substring (testCaseDirectory.Length);  				// Remove a leading '\' otherwise Path.Combine doesn't work.  				if (path.StartsWith ("\\")) {  					path = path.Substring (1);  				}  			}  			path = Path.Combine (args.DestinationPath' path);  			Directory.CreateDirectory (path);  			TestCaseRunner.Instance.Compile (new[] {  				testCase  			}' Path.Combine (path' testCase.Name + ".dll"));  			step++;  			backgroundWorker.ReportProgress ((int)(((double)step / args.TestCases.Count) * 100));  		}  	}  }  
Magic Number,NReflect.Studio,CompileForm,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\CompileForm.cs,backgroundWorker_DoWork,The following statement contains a magic number: if (args.CompileToSingleDll) {  	backgroundWorker.ReportProgress (0);  	TestCaseRunner.Instance.Compile (args.TestCases' args.DestinationPath);  	backgroundWorker.ReportProgress (100);  }  else {  	string testCaseDirectory = CoreData.Instance.TestCaseModel.TestCaseDirectory;  	int step = 0;  	foreach (TestCaseCSharp testCase in args.TestCases) {  		string path = "";  		if (testCase.Path.StartsWith (testCaseDirectory)) {  			path = testCase.Path.Substring (testCaseDirectory.Length);  			// Remove a leading '\' otherwise Path.Combine doesn't work.  			if (path.StartsWith ("\\")) {  				path = path.Substring (1);  			}  		}  		path = Path.Combine (args.DestinationPath' path);  		Directory.CreateDirectory (path);  		TestCaseRunner.Instance.Compile (new[] {  			testCase  		}' Path.Combine (path' testCase.Name + ".dll"));  		step++;  		backgroundWorker.ReportProgress ((int)(((double)step / args.TestCases.Count) * 100));  	}  }  
Magic Number,NReflect.Studio,CompileForm,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\CompileForm.cs,backgroundWorker_DoWork,The following statement contains a magic number: if (args.CompileToSingleDll) {  	backgroundWorker.ReportProgress (0);  	TestCaseRunner.Instance.Compile (args.TestCases' args.DestinationPath);  	backgroundWorker.ReportProgress (100);  }  else {  	string testCaseDirectory = CoreData.Instance.TestCaseModel.TestCaseDirectory;  	int step = 0;  	foreach (TestCaseCSharp testCase in args.TestCases) {  		string path = "";  		if (testCase.Path.StartsWith (testCaseDirectory)) {  			path = testCase.Path.Substring (testCaseDirectory.Length);  			// Remove a leading '\' otherwise Path.Combine doesn't work.  			if (path.StartsWith ("\\")) {  				path = path.Substring (1);  			}  		}  		path = Path.Combine (args.DestinationPath' path);  		Directory.CreateDirectory (path);  		TestCaseRunner.Instance.Compile (new[] {  			testCase  		}' Path.Combine (path' testCase.Name + ".dll"));  		step++;  		backgroundWorker.ReportProgress ((int)(((double)step / args.TestCases.Count) * 100));  	}  }  
Magic Number,NReflect.Studio,CompileForm,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\CompileForm.cs,backgroundWorker_DoWork,The following statement contains a magic number: backgroundWorker.ReportProgress (100);  
Magic Number,NReflect.Studio,CompileForm,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\CompileForm.cs,backgroundWorker_DoWork,The following statement contains a magic number: foreach (TestCaseCSharp testCase in args.TestCases) {  	string path = "";  	if (testCase.Path.StartsWith (testCaseDirectory)) {  		path = testCase.Path.Substring (testCaseDirectory.Length);  		// Remove a leading '\' otherwise Path.Combine doesn't work.  		if (path.StartsWith ("\\")) {  			path = path.Substring (1);  		}  	}  	path = Path.Combine (args.DestinationPath' path);  	Directory.CreateDirectory (path);  	TestCaseRunner.Instance.Compile (new[] {  		testCase  	}' Path.Combine (path' testCase.Name + ".dll"));  	step++;  	backgroundWorker.ReportProgress ((int)(((double)step / args.TestCases.Count) * 100));  }  
Magic Number,NReflect.Studio,CompileForm,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\CompileForm.cs,backgroundWorker_DoWork,The following statement contains a magic number: backgroundWorker.ReportProgress ((int)(((double)step / args.TestCases.Count) * 100));  
Magic Number,NReflect.Studio,RunVisitorsForm,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\RunVisitorsForm.cs,backgroundWorker_DoWork,The following statement contains a magic number: if (args != null) {  	double steps = args.TestCases.Count * args.Visitors.Count;  	double step = 0;  	foreach (TestCase testCase in args.TestCases) {  		if (testCase.CurrentResult == null && args.RunTestCases) {  			// Run the test case.  			if (testCase is TestCaseCSharp) {  				TestCaseRunner.Instance.CompileAndReflect (testCase as TestCaseCSharp);  			}  			else {  				TestCaseRunner.Instance.Reflect (testCase as TestCaseAssembly);  			}  		}  		if (testCase.CurrentResult != null) {  			// Run the visitors and store the result.  			foreach (string visitor in args.Visitors) {  				RunAndSaveVisitor (visitor' testCase' args.DestinationPath);  				step++;  			}  		}  		else {  			step += args.Visitors.Count;  		}  		backgroundWorker.ReportProgress ((int)((step / steps) * 100));  	}  }  
Magic Number,NReflect.Studio,RunVisitorsForm,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\RunVisitorsForm.cs,backgroundWorker_DoWork,The following statement contains a magic number: foreach (TestCase testCase in args.TestCases) {  	if (testCase.CurrentResult == null && args.RunTestCases) {  		// Run the test case.  		if (testCase is TestCaseCSharp) {  			TestCaseRunner.Instance.CompileAndReflect (testCase as TestCaseCSharp);  		}  		else {  			TestCaseRunner.Instance.Reflect (testCase as TestCaseAssembly);  		}  	}  	if (testCase.CurrentResult != null) {  		// Run the visitors and store the result.  		foreach (string visitor in args.Visitors) {  			RunAndSaveVisitor (visitor' testCase' args.DestinationPath);  			step++;  		}  	}  	else {  		step += args.Visitors.Count;  	}  	backgroundWorker.ReportProgress ((int)((step / steps) * 100));  }  
Magic Number,NReflect.Studio,RunVisitorsForm,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\RunVisitorsForm.cs,backgroundWorker_DoWork,The following statement contains a magic number: backgroundWorker.ReportProgress ((int)((step / steps) * 100));  
Magic Number,NReflect.Studio,TestCaseStateNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\TestCaseStateNodeControl.cs,MeasureSize,The following statement contains a magic number: return new Size (10' context.Font.Height);  
Magic Number,NReflect.Studio,TestCaseStateNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\TestCaseStateNodeControl.cs,Draw,The following statement contains a magic number: if (testCase != null) {  	// Draw a white background  	Rectangle rect = new Rectangle (context.Bounds.X + 1' context.Bounds.Y + 1' context.Bounds.Width - 3' context.Bounds.Height - 2);  	context.Graphics.FillRectangle (Brushes.White' rect);  	StringFormat format = new StringFormat (StringFormatFlags.NoWrap) {  		Alignment = StringAlignment.Center'  		LineAlignment = StringAlignment.Center  	};  	if (testCase.State == TestCaseState.Unknown) {  		context.Graphics.DrawString ("-"' context.Font' Brushes.Black' rect' format);  	}  	else {  		SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - testCase.Percent) * 255)' (int)(testCase.Percent * 255)' 0));  		context.Graphics.FillRectangle (bgBrush' rect.X' rect.Y' (int)(rect.Width * testCase.Percent)' rect.Height);  		context.Graphics.DrawString (string.Format ("{0}%"' (int)(testCase.Percent * 100))' context.Font' Brushes.Black' rect' format);  	}  }  
Magic Number,NReflect.Studio,TestCaseStateNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\TestCaseStateNodeControl.cs,Draw,The following statement contains a magic number: if (testCase != null) {  	// Draw a white background  	Rectangle rect = new Rectangle (context.Bounds.X + 1' context.Bounds.Y + 1' context.Bounds.Width - 3' context.Bounds.Height - 2);  	context.Graphics.FillRectangle (Brushes.White' rect);  	StringFormat format = new StringFormat (StringFormatFlags.NoWrap) {  		Alignment = StringAlignment.Center'  		LineAlignment = StringAlignment.Center  	};  	if (testCase.State == TestCaseState.Unknown) {  		context.Graphics.DrawString ("-"' context.Font' Brushes.Black' rect' format);  	}  	else {  		SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - testCase.Percent) * 255)' (int)(testCase.Percent * 255)' 0));  		context.Graphics.FillRectangle (bgBrush' rect.X' rect.Y' (int)(rect.Width * testCase.Percent)' rect.Height);  		context.Graphics.DrawString (string.Format ("{0}%"' (int)(testCase.Percent * 100))' context.Font' Brushes.Black' rect' format);  	}  }  
Magic Number,NReflect.Studio,TestCaseStateNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\TestCaseStateNodeControl.cs,Draw,The following statement contains a magic number: if (testCase != null) {  	// Draw a white background  	Rectangle rect = new Rectangle (context.Bounds.X + 1' context.Bounds.Y + 1' context.Bounds.Width - 3' context.Bounds.Height - 2);  	context.Graphics.FillRectangle (Brushes.White' rect);  	StringFormat format = new StringFormat (StringFormatFlags.NoWrap) {  		Alignment = StringAlignment.Center'  		LineAlignment = StringAlignment.Center  	};  	if (testCase.State == TestCaseState.Unknown) {  		context.Graphics.DrawString ("-"' context.Font' Brushes.Black' rect' format);  	}  	else {  		SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - testCase.Percent) * 255)' (int)(testCase.Percent * 255)' 0));  		context.Graphics.FillRectangle (bgBrush' rect.X' rect.Y' (int)(rect.Width * testCase.Percent)' rect.Height);  		context.Graphics.DrawString (string.Format ("{0}%"' (int)(testCase.Percent * 100))' context.Font' Brushes.Black' rect' format);  	}  }  
Magic Number,NReflect.Studio,TestCaseStateNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\TestCaseStateNodeControl.cs,Draw,The following statement contains a magic number: if (testCase != null) {  	// Draw a white background  	Rectangle rect = new Rectangle (context.Bounds.X + 1' context.Bounds.Y + 1' context.Bounds.Width - 3' context.Bounds.Height - 2);  	context.Graphics.FillRectangle (Brushes.White' rect);  	StringFormat format = new StringFormat (StringFormatFlags.NoWrap) {  		Alignment = StringAlignment.Center'  		LineAlignment = StringAlignment.Center  	};  	if (testCase.State == TestCaseState.Unknown) {  		context.Graphics.DrawString ("-"' context.Font' Brushes.Black' rect' format);  	}  	else {  		SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - testCase.Percent) * 255)' (int)(testCase.Percent * 255)' 0));  		context.Graphics.FillRectangle (bgBrush' rect.X' rect.Y' (int)(rect.Width * testCase.Percent)' rect.Height);  		context.Graphics.DrawString (string.Format ("{0}%"' (int)(testCase.Percent * 100))' context.Font' Brushes.Black' rect' format);  	}  }  
Magic Number,NReflect.Studio,TestCaseStateNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\TestCaseStateNodeControl.cs,Draw,The following statement contains a magic number: if (testCase != null) {  	// Draw a white background  	Rectangle rect = new Rectangle (context.Bounds.X + 1' context.Bounds.Y + 1' context.Bounds.Width - 3' context.Bounds.Height - 2);  	context.Graphics.FillRectangle (Brushes.White' rect);  	StringFormat format = new StringFormat (StringFormatFlags.NoWrap) {  		Alignment = StringAlignment.Center'  		LineAlignment = StringAlignment.Center  	};  	if (testCase.State == TestCaseState.Unknown) {  		context.Graphics.DrawString ("-"' context.Font' Brushes.Black' rect' format);  	}  	else {  		SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - testCase.Percent) * 255)' (int)(testCase.Percent * 255)' 0));  		context.Graphics.FillRectangle (bgBrush' rect.X' rect.Y' (int)(rect.Width * testCase.Percent)' rect.Height);  		context.Graphics.DrawString (string.Format ("{0}%"' (int)(testCase.Percent * 100))' context.Font' Brushes.Black' rect' format);  	}  }  
Magic Number,NReflect.Studio,TestCaseStateNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\TestCaseStateNodeControl.cs,Draw,The following statement contains a magic number: if (testCase.State == TestCaseState.Unknown) {  	context.Graphics.DrawString ("-"' context.Font' Brushes.Black' rect' format);  }  else {  	SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - testCase.Percent) * 255)' (int)(testCase.Percent * 255)' 0));  	context.Graphics.FillRectangle (bgBrush' rect.X' rect.Y' (int)(rect.Width * testCase.Percent)' rect.Height);  	context.Graphics.DrawString (string.Format ("{0}%"' (int)(testCase.Percent * 100))' context.Font' Brushes.Black' rect' format);  }  
Magic Number,NReflect.Studio,TestCaseStateNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\TestCaseStateNodeControl.cs,Draw,The following statement contains a magic number: if (testCase.State == TestCaseState.Unknown) {  	context.Graphics.DrawString ("-"' context.Font' Brushes.Black' rect' format);  }  else {  	SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - testCase.Percent) * 255)' (int)(testCase.Percent * 255)' 0));  	context.Graphics.FillRectangle (bgBrush' rect.X' rect.Y' (int)(rect.Width * testCase.Percent)' rect.Height);  	context.Graphics.DrawString (string.Format ("{0}%"' (int)(testCase.Percent * 100))' context.Font' Brushes.Black' rect' format);  }  
Magic Number,NReflect.Studio,TestCaseStateNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\TestCaseStateNodeControl.cs,Draw,The following statement contains a magic number: if (testCase.State == TestCaseState.Unknown) {  	context.Graphics.DrawString ("-"' context.Font' Brushes.Black' rect' format);  }  else {  	SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - testCase.Percent) * 255)' (int)(testCase.Percent * 255)' 0));  	context.Graphics.FillRectangle (bgBrush' rect.X' rect.Y' (int)(rect.Width * testCase.Percent)' rect.Height);  	context.Graphics.DrawString (string.Format ("{0}%"' (int)(testCase.Percent * 100))' context.Font' Brushes.Black' rect' format);  }  
Magic Number,NReflect.Studio,TestCaseStateNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\TestCaseStateNodeControl.cs,Draw,The following statement contains a magic number: context.Graphics.DrawString (string.Format ("{0}%"' (int)(testCase.Percent * 100))' context.Font' Brushes.Black' rect' format);  
Magic Number,NReflect.Studio.Panels,BasePanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\BasePanel.cs,BasePanel,The following statement contains a magic number: ToolStripButton.Size = new Size (23' 22);  
Magic Number,NReflect.Studio.Panels,BasePanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\BasePanel.cs,BasePanel,The following statement contains a magic number: ToolStripButton.Size = new Size (23' 22);  
Magic Number,NReflect.Studio.Panels,BasePanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\BasePanel.cs,BasePanel,The following statement contains a magic number: ToolStripMenuItem.Size = new Size (164' 22);  
Magic Number,NReflect.Studio.Panels,BasePanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\BasePanel.cs,BasePanel,The following statement contains a magic number: ToolStripMenuItem.Size = new Size (164' 22);  
Magic Number,NReflect.Studio.Panels,ObjectComparePanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\ObjectComparePanel.cs,ObjectComparePanel,The following statement contains a magic number: treeColumnResult.Width += 2 * nodeControlResult.LeftMargin;  
Magic Number,NReflect.Studio.Panels,ObjectComparePanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\ObjectComparePanel.cs,ObjectComparePanel,The following statement contains a magic number: treeColumnResultCurrent.Width += 2 * nodeControlResult.LeftMargin;  
Magic Number,NReflect.Studio.Panels,ObjectComparePanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\ObjectComparePanel.cs,ObjectComparePanel,The following statement contains a magic number: currentObjectTree.AddExtraColumn (2' treeColumnResultCurrent' nodeControlResultCurrent);  
Magic Number,NReflect.Studio.Panels,ObjectComparePanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\ObjectComparePanel.cs,ObjectComparePanel,The following statement contains a magic number: currentObjectTree.AddExtraColumn (3' treeColumnPercentCurrent' nodeControlPercentCurrent);  
Magic Number,NReflect.Studio.Panels,TestCasesPanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\TestCasesPanel.cs,TestCasesPanel,The following statement contains a magic number: colState = new TreeColumn ("Percent"' 50);  
Magic Number,NReflect.Studio.Panels,TestCasesPanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\TestCasesPanel.cs,TestCasesPanel,The following statement contains a magic number: trvTestCases.Columns.Insert (3' colState);  
Magic Number,NReflect.Studio.ObjectTree.Comparer,ComparePercentageNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\Comparer\ComparePercentageNodeControl.cs,MeasureSize,The following statement contains a magic number: return new Size (10' context.Font.Height);  
Magic Number,NReflect.Studio.ObjectTree.Comparer,ComparePercentageNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\Comparer\ComparePercentageNodeControl.cs,Draw,The following statement contains a magic number: if (compareResult != null) {  	// Draw a white background  	Rectangle rect = new Rectangle (context.Bounds.X + 1' context.Bounds.Y + 1' context.Bounds.Width - 3' context.Bounds.Height - 2);  	context.Graphics.FillRectangle (Brushes.White' rect);  	StringFormat format = new StringFormat (StringFormatFlags.NoWrap) {  		Alignment = StringAlignment.Center'  		LineAlignment = StringAlignment.Center  	};  	if (compareResult.State != ResultState.Ignored) {  		SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - compareResult.Percent) * 255)' (int)(compareResult.Percent * 255)' 0));  		context.Graphics.FillRectangle (bgBrush' rect.X' rect.Y' (int)(rect.Width * compareResult.Percent)' rect.Height);  		context.Graphics.DrawString (string.Format ("{0}%"' (int)(compareResult.Percent * 100))' context.Font' Brushes.Black' rect' format);  	}  	else {  		context.Graphics.DrawString ("-"' context.Font' Brushes.Black' rect' format);  	}  }  
Magic Number,NReflect.Studio.ObjectTree.Comparer,ComparePercentageNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\Comparer\ComparePercentageNodeControl.cs,Draw,The following statement contains a magic number: if (compareResult != null) {  	// Draw a white background  	Rectangle rect = new Rectangle (context.Bounds.X + 1' context.Bounds.Y + 1' context.Bounds.Width - 3' context.Bounds.Height - 2);  	context.Graphics.FillRectangle (Brushes.White' rect);  	StringFormat format = new StringFormat (StringFormatFlags.NoWrap) {  		Alignment = StringAlignment.Center'  		LineAlignment = StringAlignment.Center  	};  	if (compareResult.State != ResultState.Ignored) {  		SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - compareResult.Percent) * 255)' (int)(compareResult.Percent * 255)' 0));  		context.Graphics.FillRectangle (bgBrush' rect.X' rect.Y' (int)(rect.Width * compareResult.Percent)' rect.Height);  		context.Graphics.DrawString (string.Format ("{0}%"' (int)(compareResult.Percent * 100))' context.Font' Brushes.Black' rect' format);  	}  	else {  		context.Graphics.DrawString ("-"' context.Font' Brushes.Black' rect' format);  	}  }  
Magic Number,NReflect.Studio.ObjectTree.Comparer,ComparePercentageNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\Comparer\ComparePercentageNodeControl.cs,Draw,The following statement contains a magic number: if (compareResult != null) {  	// Draw a white background  	Rectangle rect = new Rectangle (context.Bounds.X + 1' context.Bounds.Y + 1' context.Bounds.Width - 3' context.Bounds.Height - 2);  	context.Graphics.FillRectangle (Brushes.White' rect);  	StringFormat format = new StringFormat (StringFormatFlags.NoWrap) {  		Alignment = StringAlignment.Center'  		LineAlignment = StringAlignment.Center  	};  	if (compareResult.State != ResultState.Ignored) {  		SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - compareResult.Percent) * 255)' (int)(compareResult.Percent * 255)' 0));  		context.Graphics.FillRectangle (bgBrush' rect.X' rect.Y' (int)(rect.Width * compareResult.Percent)' rect.Height);  		context.Graphics.DrawString (string.Format ("{0}%"' (int)(compareResult.Percent * 100))' context.Font' Brushes.Black' rect' format);  	}  	else {  		context.Graphics.DrawString ("-"' context.Font' Brushes.Black' rect' format);  	}  }  
Magic Number,NReflect.Studio.ObjectTree.Comparer,ComparePercentageNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\Comparer\ComparePercentageNodeControl.cs,Draw,The following statement contains a magic number: if (compareResult != null) {  	// Draw a white background  	Rectangle rect = new Rectangle (context.Bounds.X + 1' context.Bounds.Y + 1' context.Bounds.Width - 3' context.Bounds.Height - 2);  	context.Graphics.FillRectangle (Brushes.White' rect);  	StringFormat format = new StringFormat (StringFormatFlags.NoWrap) {  		Alignment = StringAlignment.Center'  		LineAlignment = StringAlignment.Center  	};  	if (compareResult.State != ResultState.Ignored) {  		SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - compareResult.Percent) * 255)' (int)(compareResult.Percent * 255)' 0));  		context.Graphics.FillRectangle (bgBrush' rect.X' rect.Y' (int)(rect.Width * compareResult.Percent)' rect.Height);  		context.Graphics.DrawString (string.Format ("{0}%"' (int)(compareResult.Percent * 100))' context.Font' Brushes.Black' rect' format);  	}  	else {  		context.Graphics.DrawString ("-"' context.Font' Brushes.Black' rect' format);  	}  }  
Magic Number,NReflect.Studio.ObjectTree.Comparer,ComparePercentageNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\Comparer\ComparePercentageNodeControl.cs,Draw,The following statement contains a magic number: if (compareResult != null) {  	// Draw a white background  	Rectangle rect = new Rectangle (context.Bounds.X + 1' context.Bounds.Y + 1' context.Bounds.Width - 3' context.Bounds.Height - 2);  	context.Graphics.FillRectangle (Brushes.White' rect);  	StringFormat format = new StringFormat (StringFormatFlags.NoWrap) {  		Alignment = StringAlignment.Center'  		LineAlignment = StringAlignment.Center  	};  	if (compareResult.State != ResultState.Ignored) {  		SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - compareResult.Percent) * 255)' (int)(compareResult.Percent * 255)' 0));  		context.Graphics.FillRectangle (bgBrush' rect.X' rect.Y' (int)(rect.Width * compareResult.Percent)' rect.Height);  		context.Graphics.DrawString (string.Format ("{0}%"' (int)(compareResult.Percent * 100))' context.Font' Brushes.Black' rect' format);  	}  	else {  		context.Graphics.DrawString ("-"' context.Font' Brushes.Black' rect' format);  	}  }  
Magic Number,NReflect.Studio.ObjectTree.Comparer,ComparePercentageNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\Comparer\ComparePercentageNodeControl.cs,Draw,The following statement contains a magic number: if (compareResult.State != ResultState.Ignored) {  	SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - compareResult.Percent) * 255)' (int)(compareResult.Percent * 255)' 0));  	context.Graphics.FillRectangle (bgBrush' rect.X' rect.Y' (int)(rect.Width * compareResult.Percent)' rect.Height);  	context.Graphics.DrawString (string.Format ("{0}%"' (int)(compareResult.Percent * 100))' context.Font' Brushes.Black' rect' format);  }  else {  	context.Graphics.DrawString ("-"' context.Font' Brushes.Black' rect' format);  }  
Magic Number,NReflect.Studio.ObjectTree.Comparer,ComparePercentageNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\Comparer\ComparePercentageNodeControl.cs,Draw,The following statement contains a magic number: if (compareResult.State != ResultState.Ignored) {  	SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - compareResult.Percent) * 255)' (int)(compareResult.Percent * 255)' 0));  	context.Graphics.FillRectangle (bgBrush' rect.X' rect.Y' (int)(rect.Width * compareResult.Percent)' rect.Height);  	context.Graphics.DrawString (string.Format ("{0}%"' (int)(compareResult.Percent * 100))' context.Font' Brushes.Black' rect' format);  }  else {  	context.Graphics.DrawString ("-"' context.Font' Brushes.Black' rect' format);  }  
Magic Number,NReflect.Studio.ObjectTree.Comparer,ComparePercentageNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\Comparer\ComparePercentageNodeControl.cs,Draw,The following statement contains a magic number: if (compareResult.State != ResultState.Ignored) {  	SolidBrush bgBrush = new SolidBrush (Color.FromArgb ((int)((1 - compareResult.Percent) * 255)' (int)(compareResult.Percent * 255)' 0));  	context.Graphics.FillRectangle (bgBrush' rect.X' rect.Y' (int)(rect.Width * compareResult.Percent)' rect.Height);  	context.Graphics.DrawString (string.Format ("{0}%"' (int)(compareResult.Percent * 100))' context.Font' Brushes.Black' rect' format);  }  else {  	context.Graphics.DrawString ("-"' context.Font' Brushes.Black' rect' format);  }  
Magic Number,NReflect.Studio.ObjectTree.Comparer,ComparePercentageNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\Comparer\ComparePercentageNodeControl.cs,Draw,The following statement contains a magic number: context.Graphics.DrawString (string.Format ("{0}%"' (int)(compareResult.Percent * 100))' context.Font' Brushes.Black' rect' format);  
Magic Number,NReflect.Studio.ObjectTree.Model,ObjectField,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\Model\ObjectField.cs,GetTypeName,The following statement contains a magic number: if (type.GetGenericArguments ().Length > 0) {  	name.Length -= 2;  }  
Magic Number,NReflect.Studio.ObjectTree.Model,ObjectField,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\Model\ObjectField.cs,GetTypeName,The following statement contains a magic number: name.Length -= 2;  
Magic Number,NReflect.Studio.ObjectTree,ObjectTree,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectTree.cs,ObjectTree,The following statement contains a magic number: objectNameNodeControl = new ObjectNameNodeControl {  	DataPropertyName = "Name"'  	LeftMargin = 3'  	ParentColumn = colMember'  	EditEnabled = true'  	EditOnClick = true'  	Font = trvTree.Font  };  
Magic Number,NReflect.Studio.ObjectTree,ObjectTree,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectTree.cs,ResizeColumns,The following statement contains a magic number: if (AutoResizeColumns) {  	trvTree.AutoSizeColumn (colValue);  	trvTree.AutoSizeColumn (colType);  	int currentWidth = trvTree.Columns.Where (column => column.IsVisible).Sum (column => column.Width);  	int delta = trvTree.ClientSize.Width - currentWidth - (trvTree.VerticalScrollBar != null ? (trvTree.VerticalScrollBar.Visible ? trvTree.VerticalScrollBar.Width : 0) : 0);  	colValue.Width += delta;  	colValue.Width = Math.Max (colValue.Width' 50);  }  
Magic Number,NReflect.Studio.ObjectTree,ObjectTree,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectTree.cs,ResizeColumns,The following statement contains a magic number: colValue.Width = Math.Max (colValue.Width' 50);  
Magic Number,NReflect.Studio.ObjectTree,ObjectValueNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectValueNodeControl.cs,GetEditControlPanel,The following statement contains a magic number: panel.Resize += (sender' args) =>  {  	control.Width = panel.Width;  	control.Location = new Point (1' (panel.Height - control.Height - 1) / 2 - 1);  };  
Magic Number,NReflect.Studio.ObjectTree,ObjectValueNodeControl,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\ObjectTree\ObjectValueNodeControl.cs,GetEditControlPanel,The following statement contains a magic number: control.Location = new Point (1' (panel.Height - control.Height - 1) / 2 - 1);  
Missing Default,NReflect.Studio.Panels,TestCasesPanel,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Studio\Panels\TestCasesPanel.cs,nodeIconState_ValueNeeded,The following switch statement is missing a default case: switch (testCase.State) {  case TestCaseState.Unknown:  	e.Value = Resources.Unknown;  	break;  case TestCaseState.Success:  	e.Value = Resources.OK;  	break;  case TestCaseState.Fail:  	e.Value = Resources.Error;  	break;  case TestCaseState.CompilationFailed:  	e.Value = Resources.Error;  	break;  case TestCaseState.ReflectionFailed:  	e.Value = Resources.Error;  	break;  }  
