Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NReflect.Visitors,CSharpVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\CSharpVisitor.cs,Visit,Cyclomatic complexity of the method is 17
Complex Method,NReflect.Visitors,CSharpVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\CSharpVisitor.cs,Visit,Cyclomatic complexity of the method is 8
Long Parameter List,NReflect.Visitors,PrintTreeVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintTreeVisitor.cs,VisitEnities,The method has 6 parameters.
Long Statement,NReflect.Visitors,CSharpVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\CSharpVisitor.cs,Visit,The length of the statement  "	if (!string.IsNullOrWhiteSpace (nrClass.DeclaringTypeFullName) && (currentType != null && nrClass.DeclaringTypeFullName != currentType.FullName || currentType == null)) { " is 170.
Long Statement,NReflect.Visitors,CSharpVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\CSharpVisitor.cs,Visit,The length of the statement  "	if (!string.IsNullOrWhiteSpace (nrInterface.DeclaringTypeFullName) && (currentType != null && nrInterface.DeclaringTypeFullName != currentType.FullName || currentType == null)) { " is 178.
Long Statement,NReflect.Visitors,CSharpVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\CSharpVisitor.cs,Visit,The length of the statement  "	if (!string.IsNullOrWhiteSpace (nrDelegate.DeclaringTypeFullName) && (currentType != null && nrDelegate.DeclaringTypeFullName != currentType.FullName || currentType == null)) { " is 176.
Long Statement,NReflect.Visitors,CSharpVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\CSharpVisitor.cs,Visit,The length of the statement  "	if (!string.IsNullOrWhiteSpace (nrStruct.DeclaringTypeFullName) && (currentType != null && nrStruct.DeclaringTypeFullName != currentType.FullName || currentType == null)) { " is 172.
Long Statement,NReflect.Visitors,CSharpVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\CSharpVisitor.cs,Visit,The length of the statement  "	if (!string.IsNullOrWhiteSpace (nrEnum.DeclaringTypeFullName) && (currentType != null && nrEnum.DeclaringTypeFullName != currentType.FullName || currentType == null)) { " is 168.
Long Statement,NReflect.Visitors,PrintTreeVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintTreeVisitor.cs,Visit,The length of the statement  "		OutputLine ("NamedValue " + key + ": " + nrAttribute.NamedValues [key].Value + " : " + nrAttribute.NamedValues [key].Type); " is 123.
Long Statement,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,Visit,The length of the statement  "	Output (ToString (nrClass.AccessModifier) + ToString (nrClass.ClassModifier) + "class " + nrClass.Name + GetGenericDefinition (nrClass)); " is 137.
Long Statement,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,Visit,The length of the statement  "	Output (ToString (nrDelegate.AccessModifier) + "delegate " + ToString (nrDelegate.ReturnType) + " " + nrDelegate.Name + GetGenericDefinition (nrDelegate) + "("); " is 161.
Long Statement,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,Visit,The length of the statement  "	OutputLine (ToString (nrField.AccessModifier) + ToString (nrField.FieldModifier) + ToString (nrField.Type) + " " + nrField.Name + value); " is 137.
Long Statement,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,Visit,The length of the statement  "	Output (ToString (nrProperty.AccessModifier) + ToString (nrProperty.OperationModifier) + ToString (nrProperty.Type) + " " + nrProperty.Name); " is 141.
Long Statement,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,Visit,The length of the statement  "	Output (ToString (nrMethod.AccessModifier) + ToString (nrMethod.OperationModifier) + ToString (nrMethod.Type) + " " + nrMethod.Name + GetGenericDefinition (nrMethod) + "("); " is 173.
Long Statement,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,Visit,The length of the statement  "	Output (ToString (nrOperator.AccessModifier) + ToString (nrOperator.OperationModifier) + returnType + nrOperator.Name + "("); " is 125.
Long Statement,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,Visit,The length of the statement  "	Output (ToString (nrConstructor.AccessModifier) + ToString (nrConstructor.OperationModifier) + nrConstructor.Name + "("); " is 121.
Long Statement,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,Visit,The length of the statement  "	if (!nrTypeParameter.IsStruct && !nrTypeParameter.IsClass && nrTypeParameter.BaseTypes.Count <= 0 && !nrTypeParameter.IsConstructor && !nrTypeParameter.IsIn && !nrTypeParameter.IsOut) { " is 185.
Long Statement,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,ToString,The length of the statement  "		declaration = nrTypeUsage.GenericParameters.Aggregate (declaration' (current' genericParameter) => current + ToString (genericParameter) + "' "); " is 145.
Long Statement,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,GetAttribute,The length of the statement  "	result.Append (nrAttribute.Name.EndsWith ("Attribute") ? nrAttribute.Name.Substring (0' nrAttribute.Name.Length - "Attribute".Length) : nrAttribute.Name); " is 154.
Complex Conditional,NReflect.Visitors,CSharpVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\CSharpVisitor.cs,Visit,The conditional expression  "!string.IsNullOrWhiteSpace (nrClass.DeclaringTypeFullName) && (currentType != null && nrClass.DeclaringTypeFullName != currentType.FullName || currentType == null)"  is complex.
Complex Conditional,NReflect.Visitors,CSharpVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\CSharpVisitor.cs,Visit,The conditional expression  "!string.IsNullOrWhiteSpace (nrInterface.DeclaringTypeFullName) && (currentType != null && nrInterface.DeclaringTypeFullName != currentType.FullName || currentType == null)"  is complex.
Complex Conditional,NReflect.Visitors,CSharpVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\CSharpVisitor.cs,Visit,The conditional expression  "!string.IsNullOrWhiteSpace (nrDelegate.DeclaringTypeFullName) && (currentType != null && nrDelegate.DeclaringTypeFullName != currentType.FullName || currentType == null)"  is complex.
Complex Conditional,NReflect.Visitors,CSharpVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\CSharpVisitor.cs,Visit,The conditional expression  "!string.IsNullOrWhiteSpace (nrStruct.DeclaringTypeFullName) && (currentType != null && nrStruct.DeclaringTypeFullName != currentType.FullName || currentType == null)"  is complex.
Complex Conditional,NReflect.Visitors,CSharpVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\CSharpVisitor.cs,Visit,The conditional expression  "!string.IsNullOrWhiteSpace (nrEnum.DeclaringTypeFullName) && (currentType != null && nrEnum.DeclaringTypeFullName != currentType.FullName || currentType == null)"  is complex.
Complex Conditional,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,Visit,The conditional expression  "!nrTypeParameter.IsStruct && !nrTypeParameter.IsClass && nrTypeParameter.BaseTypes.Count <= 0 && !nrTypeParameter.IsConstructor && !nrTypeParameter.IsIn && !nrTypeParameter.IsOut"  is complex.
Magic Number,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,Visit,The following statement contains a magic number: result.Length -= 2;  
Magic Number,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,PrintImplementedInterfaces,The following statement contains a magic number: result.Length -= 2;  
Magic Number,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,ToString,The following statement contains a magic number: if (nrTypeUsage.GenericParameters.Count > 0) {  	declaration += "<";  	declaration = nrTypeUsage.GenericParameters.Aggregate (declaration' (current' genericParameter) => current + ToString (genericParameter) + "' ");  	declaration = declaration.Substring (0' declaration.Length - 2);  	declaration += ">";  }  
Magic Number,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,ToString,The following statement contains a magic number: declaration = declaration.Substring (0' declaration.Length - 2);  
Magic Number,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,GetAttribute,The following statement contains a magic number: if (nrAttribute.Values.Count > 0 || nrAttribute.NamedValues.Count > 0) {  	result.Append ("(");  	foreach (NRAttributeValue value in nrAttribute.Values) {  		result.Append (GetAttributeValueString (value) + "' ");  	}  	foreach (string key in nrAttribute.NamedValues.Keys) {  		result.AppendFormat ("{0} = {1}' "' key' GetAttributeValueString (nrAttribute.NamedValues [key]));  	}  	result.Length -= 2;  	result.Append (")");  }  
Magic Number,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,GetAttribute,The following statement contains a magic number: result.Length -= 2;  
Magic Number,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,GetAttributeValueString,The following statement contains a magic number: if (type != null && type.IsEnum) {  	try {  		string format = Enum.Format (type' value.Value' "F");  		StringBuilder result = new StringBuilder ();  		foreach (string constant in format.Split (new[] {  			"' "  		}' StringSplitOptions.RemoveEmptyEntries)) {  			result.Append (type.FullName + "." + constant + " || ");  		}  		if (result.Length > 0) {  			result.Length -= 4;  		}  		return result.ToString ();  	}  	catch (Exception) {  		return value.Value.ToString ();  	}  }  
Magic Number,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,GetAttributeValueString,The following statement contains a magic number: try {  	string format = Enum.Format (type' value.Value' "F");  	StringBuilder result = new StringBuilder ();  	foreach (string constant in format.Split (new[] {  		"' "  	}' StringSplitOptions.RemoveEmptyEntries)) {  		result.Append (type.FullName + "." + constant + " || ");  	}  	if (result.Length > 0) {  		result.Length -= 4;  	}  	return result.ToString ();  }  catch (Exception) {  	return value.Value.ToString ();  }  
Magic Number,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,GetAttributeValueString,The following statement contains a magic number: if (result.Length > 0) {  	result.Length -= 4;  }  
Magic Number,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,GetAttributeValueString,The following statement contains a magic number: result.Length -= 4;  
Magic Number,NReflect.Visitors,PrintVisitor,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\PrintVisitor.cs,GetGenericDefinition,The following statement contains a magic number: result.Length -= 2;  
Magic Number,NReflect.Visitors,VisitorBase,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect.Visitors\VisitorBase.cs,VisitorBase,The following statement contains a magic number: IndentSize = 2;  
