Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NReflect,ReflectionWorker,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\ReflectionWorker.cs,ReflectProperties,Cyclomatic complexity of the method is 9
Complex Method,NReflect,ReflectionWorker,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\ReflectionWorker.cs,GetTypeUsage,Cyclomatic complexity of the method is 15
Complex Method,NReflect,ReflectionWorker,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\ReflectionWorker.cs,GetTypeAccessModifier,Cyclomatic complexity of the method is 10
Complex Method,NReflect,RelationshipCreator,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\RelationshipCreator.cs,CreateRelationships,Cyclomatic complexity of the method is 26
Complex Method,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,Cyclomatic complexity of the method is 82
Complex Method,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,Cyclomatic complexity of the method is 10
Complex Method,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,Cyclomatic complexity of the method is 13
Complex Method,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,Cyclomatic complexity of the method is 8
Complex Method,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetGenericConstraint,Cyclomatic complexity of the method is 8
Long Parameter List,NReflect,ReflectionWorker,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\ReflectionWorker.cs,GetTypeUsage,The method has 5 parameters.
Long Parameter List,NReflect,RelationshipCreator,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\RelationshipCreator.cs,CreateRelationships,The method has 6 parameters.
Long Identifier,NReflect,ReflectionWorker,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\ReflectionWorker.cs,GetTypeUsage,The length of the parameter declaringTypeUsesOnlyGenericParam is 33.
Long Statement,NReflect,ReflectionWorker,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\ReflectionWorker.cs,ReflectProperties,The length of the statement  "				nrProperty.AccessModifier = nrProperty.GetterModifier > nrProperty.SetterModifier ? nrProperty.SetterModifier : nrProperty.GetterModifier; " is 138.
Long Statement,NReflect,ReflectionWorker,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\ReflectionWorker.cs,ReflectOperator,The length of the statement  "	nrOperator.OperatorType = operatorMethodsMap.ContainsKey (methodName) ? operatorMethodsMap [methodName] : OperatorType.Unknown; " is 127.
Long Statement,NReflect,ReflectionWorker,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\ReflectionWorker.cs,HasMemberAttribute,The length of the statement  "	return attributeDatas.Any (attributeData => attributeData.Constructor.DeclaringType != null && attributeData.Constructor.DeclaringType.FullName == type.FullName); " is 162.
Long Statement,NReflect,ReflectionWorker,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\ReflectionWorker.cs,GetTypeUsage,The length of the statement  "	CustomAttributeData dynamicAttributeData = customAttributeDatas.FirstOrDefault (ad => ad.Constructor != null && ad.Constructor.DeclaringType != null && ad.Constructor.DeclaringType.FullName != null && ad.Constructor.DeclaringType.FullName.Equals (typeof(DynamicAttribute).FullName)); " is 283.
Long Statement,NReflect,ReflectionWorker,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\ReflectionWorker.cs,GetTypeUsage,The length of the statement  "			ReadOnlyCollection<CustomAttributeTypedArgument> arguments = (ReadOnlyCollection<CustomAttributeTypedArgument>)dynamicAttributeData.ConstructorArguments [0].Value; " is 163.
Long Statement,NReflect,ReflectionWorker,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\ReflectionWorker.cs,GetTypeUsage,The length of the statement  "		bool declaringTypeUsesOnlyGenericParam = genericArguments.Take (declaringTypeGenericArgsCount).All (t => t.IsGenericParameter); " is 127.
Long Statement,NReflect,ReflectionWorker,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\ReflectionWorker.cs,GetTypeName,The length of the statement  "	else if (!type.IsGenericType && type.IsByRef && type.GetGenericArguments ().Length > 0 && type.FullName != null && type.FullName.StartsWith ("System.Nullable`1") && type.FullName.EndsWith ("&")) { " is 196.
Long Statement,NReflect,ReflectionWorker,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\ReflectionWorker.cs,GetAttributes,The length of the statement  "		if (attributeType != null && (attributeType == typeof(DynamicAttribute) || attributeType == typeof(ExtensionAttribute) || attributeType == typeof(OutAttribute) || attributeType == typeof(ParamArrayAttribute) || attributeType == typeof(OptionalAttribute))) { " is 257.
Long Statement,NReflect,ReflectionWorker,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\ReflectionWorker.cs,GetTypeParameters,The length of the statement  "		nrTypeParameter.IsConstructor = (attributes & GenericParameterAttributes.DefaultConstructorConstraint) != 0 && !nrTypeParameter.IsStruct; " is 137.
Long Statement,NReflect.Filter,IncludeFilter,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\Filter\IncludeFilter.cs,Reflect,The length of the statement  "	return Rules.Any (filterRule => filterRule.Element == FilterElements.Attribute) | Rules.Any (filterRule => filterRule.Element == FilterElements.AllElements); " is 157.
Long Statement,NReflect.Filter,IncludeFilter,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\Filter\IncludeFilter.cs,Reflect,The length of the statement  "	return Rules.Any (filterRule => filterRule.Element == FilterElements.AllElements | filterRule.Element == FilterElements.Module); " is 128.
Long Statement,NReflect.Filter,IncludeFilter,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\Filter\IncludeFilter.cs,Reflect,The length of the statement  "	filterModifiers |= nrOperation.OperationModifier == OperationModifier.Static ? FilterModifiers.Static : FilterModifiers.Instance; " is 129.
Long Statement,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The length of the statement  "	return String.Format ("{0}{1}class {2}{3}{4}{5}"' accessModifier' modifier' nrClass.Name' genericDecl' baseDecl' genericConstraint); " is 132.
Long Statement,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The length of the statement  "	return String.Format ("{0}struct {1}{2}{3}{4}"' accessModifier' nrStruct.Name' genericDecl' baseDecl' genericConstraint); " is 121.
Long Statement,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The length of the statement  "	return String.Format ("{0}interface {1}{2}{3}{4}"' accessModifier' nrInterface.Name' genericDecl' baseDecl' genericConstraint); " is 127.
Long Statement,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The length of the statement  "	return String.Format ("{0}delegate {1} {2}{3}({4}){5}"' accessModifier' nrDelegate.ReturnType.Declaration ()' nrDelegate.Name' genericDecl' nrDelegate.Parameters.Declaration ()' genericConstraint); " is 197.
Long Statement,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The length of the statement  "	return String.Format ("{0}{1}{2}({3})"' accessModifier' modifier' constructor.Name' constructor.Parameters.Declaration ()); " is 123.
Long Statement,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The length of the statement  "	return String.Format ("{0}{1}{2} {3}{4}({5})"' accessModifier' modifier' method.Type.Declaration ()' method.Name' genericDecl' method.Parameters.Declaration ()); " is 161.
Long Statement,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The length of the statement  "	return String.Format ("{0}{1}{2}{3}({4})"' accessModifier' modifier' returnType' name' nrOperator.Parameters.Declaration ()); " is 125.
Long Statement,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The length of the statement  "	return String.Format ("{0}{1}{2} {3}{4}{{ {5}{6}}}"' accessModifier' modifier' property.Type.Declaration ()' property.Name' parameter' getter' setter); " is 151.
Long Statement,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The length of the statement  "			result.Append (string.IsNullOrWhiteSpace (typeUsage.Namespace) || !UseNamespaces || (KnownNamespaces != null && KnownNamespaces.Contains (typeUsage.Namespace)) ? "" : typeUsage.Namespace + "."); " is 194.
Long Statement,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The length of the statement  "	string attributes = parameter.Attributes.Aggregate (""' (current' nrAttribute) => current + nrAttribute.Declaration ()); " is 120.
Long Statement,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The length of the statement  "	if (!nrTypeParameter.IsStruct && !nrTypeParameter.IsClass && nrTypeParameter.BaseTypes.Count <= 0 && !nrTypeParameter.IsConstructor && !nrTypeParameter.IsIn && !nrTypeParameter.IsOut) { " is 185.
Long Statement,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetAttribute,The length of the statement  "	result.Append (string.IsNullOrWhiteSpace (nrAttribute.Namespace) || !UseNamespaces || (KnownNamespaces != null && KnownNamespaces.Contains (nrAttribute.Namespace)) ? "" : nrAttribute.Namespace + "."); " is 200.
Long Statement,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetAttribute,The length of the statement  "	result.Append (nrAttribute.Name.EndsWith ("Attribute") ? nrAttribute.Name.Substring (0' nrAttribute.Name.Length - "Attribute".Length) : nrAttribute.Name); " is 154.
Long Statement,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetGenericConstraint,The length of the statement  "		if (nrTypeParameter.BaseTypes.Count == 0 && !nrTypeParameter.IsClass && !nrTypeParameter.IsConstructor && !nrTypeParameter.IsStruct) { " is 134.
Complex Conditional,NReflect,ReflectionWorker,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\ReflectionWorker.cs,GetTypeName,The conditional expression  "!type.IsGenericType && type.IsByRef && type.GetGenericArguments ().Length > 0 && type.FullName != null && type.FullName.StartsWith ("System.Nullable`1") && type.FullName.EndsWith ("&")"  is complex.
Complex Conditional,NReflect,ReflectionWorker,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\ReflectionWorker.cs,GetAttributes,The conditional expression  "attributeType != null && (attributeType == typeof(DynamicAttribute) || attributeType == typeof(ExtensionAttribute) || attributeType == typeof(OutAttribute) || attributeType == typeof(ParamArrayAttribute) || attributeType == typeof(OptionalAttribute))"  is complex.
Complex Conditional,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The conditional expression  "!nrTypeParameter.IsStruct && !nrTypeParameter.IsClass && nrTypeParameter.BaseTypes.Count <= 0 && !nrTypeParameter.IsConstructor && !nrTypeParameter.IsIn && !nrTypeParameter.IsOut"  is complex.
Complex Conditional,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetGenericConstraint,The conditional expression  "nrTypeParameter.BaseTypes.Count == 0 && !nrTypeParameter.IsClass && !nrTypeParameter.IsConstructor && !nrTypeParameter.IsStruct"  is complex.
Empty Catch Block,NReflect,ReflectionWorker,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\ReflectionWorker.cs,CurrentDomain_ReflectionOnlyAssemblyResolve,The method has an empty catch block.
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The following statement contains a magic number: if (typeUsage.IsDynamic) {  	result.Append ("dynamic");  }  else {  	string typeName = typeUsage.FullName;  	if (typeName != null && typeName.EndsWith ("&")) {  		typeName = typeName.Substring (0' typeName.Length - 1);  	}  	if (typeName != null && TypeReplacement.ContainsKey (typeName)) {  		result.Append (TypeReplacement [typeName]);  	}  	else {  		result.Append (string.IsNullOrWhiteSpace (typeUsage.Namespace) || !UseNamespaces || (KnownNamespaces != null && KnownNamespaces.Contains (typeUsage.Namespace)) ? "" : typeUsage.Namespace + ".");  		result.Append (GetDeclaringTypes (typeUsage.DeclaringType));  		result.Append (typeUsage.Name);  	}  	if (typeUsage.GenericParameters.Count > 0) {  		result.Append ("<");  		foreach (NRTypeUsage genericParameter in typeUsage.GenericParameters) {  			result.AppendFormat ("{0}' "' genericParameter.Declaration ());  		}  		result.Length -= 2;  		result.Append (">");  	}  	if (typeUsage.IsNullable) {  		result.Append ("?");  	}  }  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The following statement contains a magic number: if (typeUsage.GenericParameters.Count > 0) {  	result.Append ("<");  	foreach (NRTypeUsage genericParameter in typeUsage.GenericParameters) {  		result.AppendFormat ("{0}' "' genericParameter.Declaration ());  	}  	result.Length -= 2;  	result.Append (">");  }  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The following statement contains a magic number: result.Length -= 2;  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The following statement contains a magic number: if (result.Length > 2) {  	result.Length -= 2;  }  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The following statement contains a magic number: if (result.Length > 2) {  	result.Length -= 2;  }  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The following statement contains a magic number: result.Length -= 2;  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,Declaration,The following statement contains a magic number: result.Length -= 2;  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetDeclaringTypes,The following statement contains a magic number: if (declaringType.GenericParameters.Count > 0) {  	result.Append ("<");  	foreach (NRTypeUsage genericParameter in declaringType.GenericParameters) {  		result.AppendFormat ("{0}' "' genericParameter.Declaration ());  	}  	result.Length -= 2;  	result.Append (">");  }  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetDeclaringTypes,The following statement contains a magic number: result.Length -= 2;  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetAttribute,The following statement contains a magic number: if (nrAttribute.Values.Count > 0 || nrAttribute.NamedValues.Count > 0) {  	result.Append ("(");  	foreach (NRAttributeValue value in nrAttribute.Values) {  		result.Append (GetAttributeValueString (value) + "' ");  	}  	foreach (string key in nrAttribute.NamedValues.Keys) {  		result.AppendFormat ("{0} = {1}' "' key' GetAttributeValueString (nrAttribute.NamedValues [key]));  	}  	result.Length -= 2;  	result.Append (")");  }  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetAttribute,The following statement contains a magic number: result.Length -= 2;  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetAttributeValueString,The following statement contains a magic number: if (type != null && type.IsEnum) {  	try {  		string format = Enum.Format (type' value.Value' "F");  		StringBuilder result = new StringBuilder ();  		foreach (string constant in format.Split (new[] {  			"' "  		}' StringSplitOptions.RemoveEmptyEntries)) {  			result.Append (type.FullName + "." + constant + " || ");  		}  		if (result.Length > 0) {  			result.Length -= 4;  		}  		return result.ToString ();  	}  	catch (Exception) {  		return value.Value.ToString ();  	}  }  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetAttributeValueString,The following statement contains a magic number: try {  	string format = Enum.Format (type' value.Value' "F");  	StringBuilder result = new StringBuilder ();  	foreach (string constant in format.Split (new[] {  		"' "  	}' StringSplitOptions.RemoveEmptyEntries)) {  		result.Append (type.FullName + "." + constant + " || ");  	}  	if (result.Length > 0) {  		result.Length -= 4;  	}  	return result.ToString ();  }  catch (Exception) {  	return value.Value.ToString ();  }  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetAttributeValueString,The following statement contains a magic number: if (result.Length > 0) {  	result.Length -= 4;  }  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetAttributeValueString,The following statement contains a magic number: result.Length -= 4;  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetGenericDefinition,The following statement contains a magic number: result.Length -= 2;  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetGenericConstraint,The following statement contains a magic number: foreach (NRTypeParameter nrTypeParameter in nrTypeParameters) {  	if (nrTypeParameter.BaseTypes.Count == 0 && !nrTypeParameter.IsClass && !nrTypeParameter.IsConstructor && !nrTypeParameter.IsStruct) {  		continue;  	}  	result.AppendFormat (" where {0} : "' nrTypeParameter.Name);  	if (nrTypeParameter.IsClass) {  		result.Append ("class' ");  	}  	if (nrTypeParameter.IsStruct) {  		result.Append ("struct' ");  	}  	foreach (NRTypeUsage baseType in nrTypeParameter.BaseTypes) {  		result.AppendFormat ("{0}' "' baseType.Declaration ());  	}  	if (nrTypeParameter.IsConstructor) {  		result.Append ("new()' ");  	}  	result.Length -= 2;  }  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetGenericConstraint,The following statement contains a magic number: result.Length -= 2;  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetBaseTypeAndInterfaces,The following statement contains a magic number: result.Length -= 2;  
Magic Number,NReflect.NRCode,CSharp,C:\repos\SamiDidier_NClass\lib\NReflect_v0.9.4_src\NReflect\NRCode\CSharp.cs,GetImplementedInterfaces,The following statement contains a magic number: result.Length -= 2;  
