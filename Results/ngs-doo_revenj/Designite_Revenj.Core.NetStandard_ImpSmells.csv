Implementation smell,Namespace,Class,File,Method,Description
Long Method,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,Fastpath,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\FastPath.cs,FastpathV3,The method has 112 lines of code.
Long Method,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,PrepareDefaultTypesMap,The method has 100 lines of code.
Long Method,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,TypeInfoList,The method has 129 lines of code.
Long Method,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ExpectedTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,ChangeType,The method has 167 lines of code.
Long Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBufferedStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlBufferedStream.cs,Write,The method has 121 lines of code.
Long Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,GetClearCommandStream,The method has 133 lines of code.
Long Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectionStringBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectionStringBuilder.cs,SetValue,The method has 104 lines of code.
Long Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,Open,The method has 102 lines of code.
Long Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlSchema.cs,GetReservedWords,The method has 112 lines of code.
Long Method,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The method has 223 lines of code.
Long Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,ProcessBackendResponses_Ver_3,The method has 258 lines of code.
Long Method,Revenj.DatabasePersistence.Postgres.QueryGeneration.Visitors,SqlGeneratorExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Visitors\SqlGeneratorExpressionTreeVisitor.cs,VisitBinaryExpression,The method has 117 lines of code.
Long Method,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,GetHash,The method has 106 lines of code.
Long Method,Mono.Security.Protocol.Tls,SslClientStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslClientStream.cs,NegotiateAsyncWorker,The method has 142 lines of code.
Long Method,Mono.Security.Protocol.Tls,SslStreamBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,Read,The method has 124 lines of code.
Long Method,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetSymmetricAlgorithm,The method has 108 lines of code.
Long Method,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetBytes,The method has 121 lines of code.
Long Method,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,Parse,The method has 265 lines of code.
Complex Method,Revenj.DatabasePersistence.Postgres,PostgresOlapCubeQuery<TSource>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresOlapCubeQuery.cs,ValidateInput,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres,PostgresOlapCubeQuery<TSource>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresOlapCubeQuery.cs,PrepareSql,Cyclomatic complexity of the method is 17
Complex Method,Revenj.DatabasePersistence.Postgres,PostgresQueryManager,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresQueryManager.cs,EndQuery,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres,PostgresRecordConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresRecordConverter.cs,ParseRecord,Cyclomatic complexity of the method is 12
Complex Method,Revenj.DatabasePersistence.Postgres,PostgresRecordConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresRecordConverter.cs,ParseList,Cyclomatic complexity of the method is 13
Complex Method,Revenj.DatabasePersistence.Postgres,PostgresRecordConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresRecordConverter.cs,WriteSimpleUriList,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres,PostgresRecordConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresRecordConverter.cs,WriteCompositeUriList,Cyclomatic complexity of the method is 12
Complex Method,Revenj.DatabasePersistence.Postgres,PostgresTypedArray,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresTypedArray.cs,ParseCollection,Cyclomatic complexity of the method is 10
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,ArrayTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ArrayTuple.cs,BuildTuple,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,ArrayTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ArrayTuple.cs,InsertRecord,Cyclomatic complexity of the method is 14
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\BoolConverter.cs,ParseNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\BoolConverter.cs,ParseCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,ByteaConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ByteaConverter.cs,ParseCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,ByteaConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ByteaConverter.cs,ParseStreamCollection,Cyclomatic complexity of the method is 10
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,DoubleConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DoubleConverter.cs,ParseNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,DoubleConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DoubleConverter.cs,ParseCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,FloatConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\FloatConverter.cs,ParseNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,FloatConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\FloatConverter.cs,ParseCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,DictionaryTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\HstoreConverter.cs,InsertRecord,Cyclomatic complexity of the method is 28
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,PostgresTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\PostgresTuple.cs,EscapeBulkCopy,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,RecordTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\RecordTuple.cs,BuildTuple,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,RecordTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\RecordTuple.cs,InsertRecord,Cyclomatic complexity of the method is 14
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\StringConverter.cs,ParseStreamCollection,Cyclomatic complexity of the method is 12
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseTimestampUtc,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,ValueTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ValueTuple.cs,Escape,Cyclomatic complexity of the method is 10
Complex Method,Revenj.DatabasePersistence.Postgres.Converters,XmlTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\XmlConverter.cs,InsertRecord,Cyclomatic complexity of the method is 10
Complex Method,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ArrayBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\ArrayHandling.cs,ArrayChunkEnumeration,Cyclomatic complexity of the method is 9
Complex Method,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,IndexOf,Cyclomatic complexity of the method is 10
Complex Method,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,Substring,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToString,Cyclomatic complexity of the method is 16
Complex Method,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,Parse,Cyclomatic complexity of the method is 13
Complex Method,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToType,Cyclomatic complexity of the method is 15
Complex Method,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlInterval,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,Cyclomatic complexity of the method is 9
Complex Method,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlInterval,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,ToString,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,Fastpath,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\FastPath.cs,FastpathV3,Cyclomatic complexity of the method is 14
Complex Method,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ExpectedTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,ChangeType,Cyclomatic complexity of the method is 36
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBind,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlBind.cs,WriteToStream,Cyclomatic complexity of the method is 12
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBufferedStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlBufferedStream.cs,Read,Cyclomatic complexity of the method is 9
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBufferedStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlBufferedStream.cs,Write,Cyclomatic complexity of the method is 10
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,GetClearCommandStream,Cyclomatic complexity of the method is 19
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,GetParseCommandText,Cyclomatic complexity of the method is 11
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,GetPrepareCommandText,Cyclomatic complexity of the method is 11
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommandBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommandBuilder.cs,DeriveParameters,Cyclomatic complexity of the method is 11
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnection,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnection.cs,GetSchema,Cyclomatic complexity of the method is 14
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectionStringBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectionStringBuilder.cs,GetKey,Cyclomatic complexity of the method is 23
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectionStringBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectionStringBuilder.cs,GetKeyName,Cyclomatic complexity of the method is 22
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectionStringBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectionStringBuilder.cs,SetValue,Cyclomatic complexity of the method is 23
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,Open,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectorPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectorPool.cs,TimerElapsedHandler,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectorPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectorPool.cs,GetPooledConnector,Cyclomatic complexity of the method is 9
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectorPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectorPool.cs,UngetConnector,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,FillSchemaTable_v3,Cyclomatic complexity of the method is 12
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,ForwardsOnlyDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,UpdateOutputParameters,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,ForwardsOnlyDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,GetNextRow,Cyclomatic complexity of the method is 10
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlError,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlError.cs,NpgsqlError,Cyclomatic complexity of the method is 21
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,EmptySync,Cyclomatic complexity of the method is 9
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,ProcessBackendResponses_Ver_3,Cyclomatic complexity of the method is 36
Complex Method,Revenj.DatabasePersistence.Postgres.Npgsql,CompletedResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,CompletedResponse,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,LikeStringComparison,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,CompareString,Cyclomatic complexity of the method is 13
Complex Method,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,NullValuesImpedanceMismatch,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\NullValuesImpedanceMismatch.cs,TryMatch,Cyclomatic complexity of the method is 11
Complex Method,Revenj.DatabasePersistence.Postgres.QueryGeneration,QuerySourceConverterFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QuerySourceConverterFactory.cs,CreateResult,Cyclomatic complexity of the method is 12
Complex Method,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,FormatObject,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,GetFromPart,Cyclomatic complexity of the method is 12
Complex Method,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,GetQuerySourceFromExpression,Cyclomatic complexity of the method is 17
Complex Method,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,GetQueryableExpression,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,ProcessSetOperators,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,ProcessLimitAndOffsetOperators,Cyclomatic complexity of the method is 15
Complex Method,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,SubqueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\SubqueryParts.cs,BuildSqlString,Cyclomatic complexity of the method is 18
Complex Method,Revenj.DatabasePersistence.Postgres.QueryGeneration.Visitors,SqlGeneratorExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Visitors\SqlGeneratorExpressionTreeVisitor.cs,VisitBinaryExpression,Cyclomatic complexity of the method is 28
Complex Method,Remotion.Linq.Collections,ChangeResistantObservableCollectionEnumerator<T>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Collections\ChangeResistantObservableCollectionEnumerator.cs,Collection_CollectionChanged,Cyclomatic complexity of the method is 8
Complex Method,Remotion.Linq.Parsing,ExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitor.cs,VisitExpression,Cyclomatic complexity of the method is 19
Complex Method,Revenj.DomainPatterns,DomainTypeResolver,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\DomainTypeResolver.cs,TryToResolveTypeWithoutStrongName,Cyclomatic complexity of the method is 9
Complex Method,Revenj.Extensibility,AutofacObjectFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Container\AutofacObjectFactory.cs,BuildFactoryForService,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Extensibility,AutofacObjectFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Container\AutofacObjectFactory.cs,RegisterToContainer,Cyclomatic complexity of the method is 29
Complex Method,Revenj.Extensibility,PluginsProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Plugins\PluginsProvider.cs,FindPlugins,Cyclomatic complexity of the method is 10
Complex Method,Revenj.Extensibility.Autofac.Core.Activators.Reflection,AutowiringPropertyInjector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Activators\Reflection\AutowiringPropertyInjector.cs,InjectProperties,Cyclomatic complexity of the method is 11
Complex Method,Revenj.Extensibility.Autofac.Features.OpenGenerics,OpenGenericServiceBinder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\OpenGenerics\OpenGenericServiceBinder.cs,EnforceBindable,Cyclomatic complexity of the method is 9
Complex Method,Revenj.Extensibility.Autofac.Util,TypeExtensions,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Util\TypeExtensions.cs,IsCompatibleWithGenericParameterConstraints,Cyclomatic complexity of the method is 10
Complex Method,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,Cyclomatic complexity of the method is 16
Complex Method,Mono.Math.Prime,PrimalityTests,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime\PrimalityTests.cs,GetSPPRounds,Cyclomatic complexity of the method is 18
Complex Method,Mono.Math.Prime,PrimalityTests,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime\PrimalityTests.cs,RabinMillerTest,Cyclomatic complexity of the method is 8
Complex Method,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,Parse,Cyclomatic complexity of the method is 11
Complex Method,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,Compare,Cyclomatic complexity of the method is 9
Complex Method,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,gcd,Cyclomatic complexity of the method is 8
Complex Method,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,ProcessFirstBlock,Cyclomatic complexity of the method is 8
Complex Method,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,GetHash,Cyclomatic complexity of the method is 13
Complex Method,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,IsTrusted,Cyclomatic complexity of the method is 9
Complex Method,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,CheckSignature,Cyclomatic complexity of the method is 10
Complex Method,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,VerifySignature,Cyclomatic complexity of the method is 17
Complex Method,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,VerifyCounterSignature,Cyclomatic complexity of the method is 18
Complex Method,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,Save,Cyclomatic complexity of the method is 10
Complex Method,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,HashNameFromOid,Cyclomatic complexity of the method is 10
Complex Method,Mono.Security.Cryptography,EncryptedPrivateKeyInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS8.cs,Decode,Cyclomatic complexity of the method is 9
Complex Method,Mono.Security.Cryptography,RSAManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\RSAManaged.cs,GenerateKeyPair,Cyclomatic complexity of the method is 9
Complex Method,Mono.Security.Cryptography,RSAManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\RSAManaged.cs,DecryptValue,Cyclomatic complexity of the method is 8
Complex Method,Mono.Security.Cryptography,RSAManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\RSAManaged.cs,ImportParameters,Cyclomatic complexity of the method is 14
Complex Method,Mono.Security.Cryptography,RSAManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\RSAManaged.cs,Dispose,Cyclomatic complexity of the method is 11
Complex Method,Mono.Security.Cryptography,SymmetricTransform,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SymmetricTransform.cs,TransformBlock,Cyclomatic complexity of the method is 9
Complex Method,Mono.Security.Cryptography,SymmetricTransform,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SymmetricTransform.cs,FinalEncrypt,Cyclomatic complexity of the method is 10
Complex Method,Mono.Security.Cryptography,SymmetricTransform,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SymmetricTransform.cs,FinalDecrypt,Cyclomatic complexity of the method is 15
Complex Method,Mono.Security.Interface,Alert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Interface\Alert.cs,GetAlertMessage,Cyclomatic complexity of the method is 25
Complex Method,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerCertificate.cs,checkCertificateUsage,Cyclomatic complexity of the method is 12
Complex Method,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerCertificate.cs,LocalValidation,Cyclomatic complexity of the method is 11
Complex Method,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerCertificate.cs,Match,Cyclomatic complexity of the method is 8
Complex Method,Mono.Security.Protocol.Tls.Handshake.Server,TlsClientCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Server\TlsClientCertificate.cs,checkCertificateUsage,Cyclomatic complexity of the method is 10
Complex Method,Mono.Security.Protocol.Tls.Handshake.Server,TlsClientCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Server\TlsClientCertificate.cs,validateCertificates,Cyclomatic complexity of the method is 13
Complex Method,Mono.Security.Protocol.Tls,Alert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\Alert.cs,GetAlertMessage,Cyclomatic complexity of the method is 24
Complex Method,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,createEncryptionCipher,Cyclomatic complexity of the method is 8
Complex Method,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,createDecryptionCipher,Cyclomatic complexity of the method is 8
Complex Method,Mono.Security.Protocol.Tls,ClientRecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\ClientRecordProtocol.cs,createServerHandshakeMessage,Cyclomatic complexity of the method is 13
Complex Method,Mono.Security.Protocol.Tls,Context,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\Context.cs,ClearKeyInfo,Cyclomatic complexity of the method is 11
Complex Method,Mono.Security.Protocol.Tls,RecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\RecordProtocol.cs,InternalReceiveRecordCallback,Cyclomatic complexity of the method is 12
Complex Method,Mono.Security.Protocol.Tls,RecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\RecordProtocol.cs,ReceiveRecord,Cyclomatic complexity of the method is 13
Complex Method,Mono.Security.Protocol.Tls,ServerRecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\ServerRecordProtocol.cs,createClientHandshakeMessage,Cyclomatic complexity of the method is 10
Complex Method,Mono.Security.Protocol.Tls,ServerRecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\ServerRecordProtocol.cs,createServerHandshakeMessage,Cyclomatic complexity of the method is 8
Complex Method,Mono.Security.Protocol.Tls,SslClientStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslClientStream.cs,NegotiateAsyncWorker,Cyclomatic complexity of the method is 14
Complex Method,Mono.Security.Protocol.Tls,SslStreamBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,BeginRead,Cyclomatic complexity of the method is 8
Complex Method,Mono.Security.Protocol.Tls,SslStreamBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,InternalReadCallback_inner,Cyclomatic complexity of the method is 11
Complex Method,Mono.Security.Protocol.Tls,SslStreamBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,BeginWrite,Cyclomatic complexity of the method is 8
Complex Method,Mono.Security.Protocol.Tls,SslStreamBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,Read,Cyclomatic complexity of the method is 22
Complex Method,Mono.Security.X509.Extensions,ExtendedKeyUsageExtension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\ExtendedKeyUsageExtension.cs,ToString,Cyclomatic complexity of the method is 8
Complex Method,Mono.Security.X509.Extensions,GeneralNames,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\GeneralNames.cs,GeneralNames,Cyclomatic complexity of the method is 10
Complex Method,Mono.Security.X509.Extensions,GeneralNames,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\GeneralNames.cs,GeneralNames,Cyclomatic complexity of the method is 15
Complex Method,Mono.Security.X509.Extensions,GeneralNames,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\GeneralNames.cs,ToString,Cyclomatic complexity of the method is 11
Complex Method,Mono.Security.X509.Extensions,KeyAttributesExtension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\KeyAttributesExtension.cs,Decode,Cyclomatic complexity of the method is 13
Complex Method,Mono.Security.X509.Extensions,KeyAttributesExtension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\KeyAttributesExtension.cs,ToString,Cyclomatic complexity of the method is 24
Complex Method,Mono.Security.X509.Extensions,KeyUsageExtension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\KeyUsageExtension.cs,ToString,Cyclomatic complexity of the method is 18
Complex Method,Mono.Security.X509.Extensions,NetscapeCertTypeExtension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\NetscapeCertTypeExtension.cs,ToString,Cyclomatic complexity of the method is 14
Complex Method,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,Decode,Cyclomatic complexity of the method is 19
Complex Method,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetSymmetricAlgorithm,Cyclomatic complexity of the method is 14
Complex Method,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,ReadSafeBag,Cyclomatic complexity of the method is 20
Complex Method,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,Pkcs8ShroudedKeyBagSafeBag,Cyclomatic complexity of the method is 12
Complex Method,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,KeyBagSafeBag,Cyclomatic complexity of the method is 12
Complex Method,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,SecretBagSafeBag,Cyclomatic complexity of the method is 10
Complex Method,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,CertificateSafeBag,Cyclomatic complexity of the method is 10
Complex Method,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetBytes,Cyclomatic complexity of the method is 27
Complex Method,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,RemoveCertificate,Cyclomatic complexity of the method is 14
Complex Method,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetAsymmetricAlgorithm,Cyclomatic complexity of the method is 17
Complex Method,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetSecret,Cyclomatic complexity of the method is 11
Complex Method,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetCertificate,Cyclomatic complexity of the method is 11
Complex Method,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetAttributes,Cyclomatic complexity of the method is 13
Complex Method,Mono.Security.X509,DeriveBytes,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,Derive,Cyclomatic complexity of the method is 10
Complex Method,Mono.Security.X509,X501,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X501Name.cs,AppendEntry,Cyclomatic complexity of the method is 25
Complex Method,Mono.Security.X509,X501,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X501Name.cs,GetAttributeFromOid,Cyclomatic complexity of the method is 17
Complex Method,Mono.Security.X509,X509Builder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Builder.cs,GetOid,Cyclomatic complexity of the method is 8
Complex Method,Mono.Security.X509,X509Certificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Certificate.cs,Parse,Cyclomatic complexity of the method is 9
Complex Method,Mono.Security.X509,X509Chain,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Chain.cs,Build,Cyclomatic complexity of the method is 14
Complex Method,Mono.Security.X509,X509Crl,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509CRL.cs,Parse,Cyclomatic complexity of the method is 9
Complex Method,Mono.Security.X509,X509Crl,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509CRL.cs,VerifySignature,Cyclomatic complexity of the method is 10
Complex Method,Mono.Security.X509,X509Extension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Extension.cs,Equals,Cyclomatic complexity of the method is 8
Complex Method,Mono.Security,ASN1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1.cs,GetBytes,Cyclomatic complexity of the method is 11
Complex Method,Mono.Security,EnvelopedData,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,EnvelopedData,Cyclomatic complexity of the method is 9
Complex Method,Mono.Security,SignedData,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,SignedData,Cyclomatic complexity of the method is 9
Complex Method,Mono.Security,SignedData,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,GetASN1,Cyclomatic complexity of the method is 9
Complex Method,Mono.Security,SignerInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,SignerInfo,Cyclomatic complexity of the method is 9
Complex Method,Mono.Security,SignerInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,GetASN1,Cyclomatic complexity of the method is 9
Complex Method,Mono.Security,SortedSet,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,Compare,Cyclomatic complexity of the method is 9
Complex Method,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,Cyclomatic complexity of the method is 10
Complex Method,Mono.Security,StrongNameManager,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\StrongNameManager.cs,LoadVerificationSettings,Cyclomatic complexity of the method is 10
Complex Method,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,Parse,Cyclomatic complexity of the method is 63
Complex Method,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Serialize,Cyclomatic complexity of the method is 18
Complex Method,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeNullableObjectCollection,Cyclomatic complexity of the method is 10
Complex Method,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeNullableStructCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Skip,Cyclomatic complexity of the method is 14
Complex Method,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Memorize,Cyclomatic complexity of the method is 14
Complex Method,Revenj.Serialization,Deserializer<T>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Deserialize,Cyclomatic complexity of the method is 12
Complex Method,Revenj.Serialization,WireSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\WireSerialization.cs,Serialize,Cyclomatic complexity of the method is 9
Complex Method,Revenj.Serialization,WireSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\WireSerialization.cs,Deserialize,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization.Json.Converters,BinaryConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BinaryConverter.cs,Deserialize,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,Deserialize,Cyclomatic complexity of the method is 10
Complex Method,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeCollection,Cyclomatic complexity of the method is 22
Complex Method,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeNullableCollection,Cyclomatic complexity of the method is 26
Complex Method,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,Cyclomatic complexity of the method is 9
Complex Method,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeDate,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeDateNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,Cyclomatic complexity of the method is 12
Complex Method,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestampNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeOffsetNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeColorNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeRectangleF,Cyclomatic complexity of the method is 15
Complex Method,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeRectangleFNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,DeserializeNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeDecimalNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeShortNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeIntNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeLongNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToDouble,Cyclomatic complexity of the method is 9
Complex Method,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeDoubleNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToFloat,Cyclomatic complexity of the method is 9
Complex Method,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeFloatNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization.Json.Converters,PointConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\PointConverter.cs,DeserializePoint,Cyclomatic complexity of the method is 13
Complex Method,Revenj.Serialization.Json.Converters,PointConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\PointConverter.cs,DeserializePointF,Cyclomatic complexity of the method is 13
Complex Method,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,SerializeEscaped,Cyclomatic complexity of the method is 38
Complex Method,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,SerializePart,Cyclomatic complexity of the method is 38
Complex Method,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,DeserializeNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization.Json.Converters,TreePathConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\TreePathConverter.cs,DeserializeNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Serialization.Json.Converters,XmlConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\XmlConverter.cs,DeserializeNullableCollection,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Utility,AssemblyScanner,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\Reflection\AssemblyScanner.cs,GetAssemblies,Cyclomatic complexity of the method is 8
Complex Method,Revenj.Utility,TemporaryResources,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\TemporaryResources.cs,CreateRandomObject,Cyclomatic complexity of the method is 12
Long Parameter List,Revenj.DatabasePersistence.Postgres,BulkReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\BulkRead.cs,Analyze,The method has 5 parameters. Parameters: dimensionsAndFacts' order' filter' limit' offset
Long Parameter List,Revenj.DatabasePersistence.Postgres,IPostgresDatabaseQuery,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresDatabaseQuery.cs,Search,The method has 5 parameters. Parameters: filter' limit' offset' order' converter
Long Parameter List,Revenj.DatabasePersistence.Postgres,PostgresDatabaseQuery,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresDatabaseQuery.cs,Search,The method has 5 parameters. Parameters: filter' limit' offset' order' converter
Long Parameter List,Revenj.DatabasePersistence.Postgres,PostgresOlapCubeQuery<TSource>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresOlapCubeQuery.cs,Analyze,The method has 6 parameters. Parameters: dimensions' facts' order' filter' limit' offset
Long Parameter List,Revenj.DatabasePersistence.Postgres,PostgresOlapCubeQuery<TSource>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresOlapCubeQuery.cs,PrepareSql,The method has 6 parameters. Parameters: usedDimensions' usedFacts' order' filter' limit' offset
Long Parameter List,Revenj.DatabasePersistence.Postgres.Converters,HstoreConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\HstoreConverter.cs,ParseDictionary,The method has 5 parameters. Parameters: reader' context' quoteContext' cur' matchEnd
Long Parameter List,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlInterval,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,NpgsqlInterval,The method has 5 parameters. Parameters: days' hours' minutes' seconds' milliseconds
Long Parameter List,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlInterval,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,NpgsqlInterval,The method has 6 parameters. Parameters: months' days' hours' minutes' seconds' milliseconds
Long Parameter List,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlInterval,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,NpgsqlInterval,The method has 7 parameters. Parameters: years' months' days' hours' minutes' seconds' milliseconds
Long Parameter List,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeTZ,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,NpgsqlTimeTZ,The method has 5 parameters. Parameters: hours' minutes' seconds' microseconds' timeZone
Long Parameter List,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeStamp,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,NpgsqlTimeStamp,The method has 6 parameters. Parameters: year' month' day' hours' minutes' seconds
Long Parameter List,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeStampTZ,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,NpgsqlTimeStampTZ,The method has 7 parameters. Parameters: year' month' day' hours' minutes' seconds' timezone
Long Parameter List,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlBackendTypeInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,NpgsqlBackendTypeInfo,The method has 6 parameters. Parameters: OID' Name' NpgsqlDbType' DbType' Type' ConvertBackendToNative
Long Parameter List,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlBackendTypeInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,NpgsqlBackendTypeInfo,The method has 9 parameters. Parameters: OID' Name' NpgsqlDbType' DbType' Type' ConvertBackendToNative' frameworkType' convertProviderToFramework' convertFrameworkToProvider
Long Parameter List,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlNativeTypeInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,NpgsqlNativeTypeInfo,The method has 5 parameters. Parameters: Name' NpgsqlDbType' DbType' Quote' ConvertNativeToBackend
Long Parameter List,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlBackendTypeMapping,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,AddType,The method has 6 parameters. Parameters: OID' Name' NpgsqlDbType' DbType' Type' BackendConvert
Long Parameter List,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlNativeTypeMapping,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,AddType,The method has 5 parameters. Parameters: Name' NpgsqlDbType' DbType' Quote' NativeConvert
Long Parameter List,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBind,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlBind.cs,NpgsqlBind,The method has 5 parameters. Parameters: portalName' preparedStatementName' parameterFormatCodes' parameterValues' resultFormatCodes
Long Parameter List,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlStartupPacket,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlStartupPacket.cs,NpgsqlStartupPacket,The method has 6 parameters. Parameters: packet_size' database_name' user_name' arguments' unused' optional_tty
Long Parameter List,Revenj.DatabasePersistence.Postgres.Npgsql,ForwardsOnlyDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,Revenj.DatabasePersistence.Postgres.Npgsql,ForwardsOnlyDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Long Parameter List,Revenj.DatabasePersistence.Postgres.Npgsql,CachingDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,Revenj.DatabasePersistence.Postgres.Npgsql,CachingDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Long Parameter List,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlRow,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlRow.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlRow,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlRow.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Long Parameter List,Revenj.DatabasePersistence.Postgres.Npgsql,CachingRow,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlRow.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,Revenj.DatabasePersistence.Postgres.Npgsql,CachingRow,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlRow.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Long Parameter List,Revenj.DatabasePersistence.Postgres.Npgsql,ForwardsOnlyRow,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlRow.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,Revenj.DatabasePersistence.Postgres.Npgsql,ForwardsOnlyRow,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlRow.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Long Parameter List,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlParameter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Parameter\NpgsqlParameter.cs,NpgsqlParameter,The method has 10 parameters. Parameters: parameterName' parameterType' size' sourceColumn' direction' isNullable' precision' scale' sourceVersion' value
Long Parameter List,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlParameter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Parameter\NpgsqlParameter.cs,NpgsqlParameter,The method has 10 parameters. Parameters: parameterName' parameterType' size' sourceColumn' direction' isNullable' precision' scale' sourceVersion' value
Long Parameter List,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadChars,The method has 5 parameters. Parameters: stream' output' maxChars' maxRead' outputIdx
Long Parameter List,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadEscapedBytes,The method has 6 parameters. Parameters: stream' buffer' output' maxBytes' maxRead' outputIdx
Long Parameter List,Revenj.DatabasePersistence.Postgres.Npgsql,HashAlgorithm,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\HashAlgorithm.cs,TransformBlock,The method has 5 parameters. Parameters: inputBuffer' inputOffset' inputCount' outputBuffer' outputOffset
Long Parameter List,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,ArrayMethods,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\ArrayMethods.cs,TryMatch,The method has 5 parameters. Parameters: expression' queryBuilder' visitExpression' context' converter
Long Parameter List,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,DatabaseSpecificationFunctions,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\DatabaseSpecificationFunctions.cs,TryMatch,The method has 5 parameters. Parameters: expression' queryBuilder' visitExpression' context' converter
Long Parameter List,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,DateTimeMethods,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\DateTimeMethods.cs,TryMatch,The method has 5 parameters. Parameters: expression' queryBuilder' visitExpression' context' converter
Long Parameter List,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,DecimalMethods,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\DecimalMethods.cs,TryMatch,The method has 5 parameters. Parameters: expression' queryBuilder' visitExpression' context' converter
Long Parameter List,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,DictionaryMethods,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\DictionaryMethods.cs,TryMatch,The method has 5 parameters. Parameters: expression' queryBuilder' visitExpression' context' converter
Long Parameter List,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,ExpressionShortCircuiting,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\ExpressionShortCircuiting.cs,TryMatch,The method has 5 parameters. Parameters: expression' queryBuilder' visitExpression' context' converter
Long Parameter List,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,LikeStringComparison,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,TryMatch,The method has 5 parameters. Parameters: expression' queryBuilder' visitExpression' context' converter
Long Parameter List,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,LinqMethods,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\LinqMethods.cs,TryMatch,The method has 5 parameters. Parameters: expression' queryBuilder' visitExpression' context' converter
Long Parameter List,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,MathMethods,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\MathMethods.cs,TryMatch,The method has 5 parameters. Parameters: expression' queryBuilder' visitExpression' context' converter
Long Parameter List,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,NullValuesImpedanceMismatch,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\NullValuesImpedanceMismatch.cs,TryMatch,The method has 5 parameters. Parameters: expression' queryBuilder' visitExpression' context' converter
Long Parameter List,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,SetMethods,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\SetMethods.cs,TryMatch,The method has 5 parameters. Parameters: expression' queryBuilder' visitExpression' context' converter
Long Parameter List,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,StringMethods,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\StringMethods.cs,TryMatch,The method has 5 parameters. Parameters: expression' queryBuilder' visitExpression' context' converter
Long Parameter List,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,TreeMethods,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\TreeMethods.cs,TryMatch,The method has 5 parameters. Parameters: expression' queryBuilder' visitExpression' context' converter
Long Parameter List,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,MainQueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\MainQueryParts.cs,MainQueryParts,The method has 6 parameters. Parameters: locator' factory' simplifications' expressionMatchers' memberMatchers' projectionMatchers
Long Parameter List,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,QueryParts,The method has 7 parameters. Parameters: locator' context' converterFactory' simplifications' expressionMatchers' memberMatchers' projectionMatchers
Long Parameter List,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,AddSelectPart,The method has 5 parameters. Parameters: qs' sql' name' type' instancer
Long Parameter List,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,ProcessLimitAndOffsetOperators,The method has 5 parameters. Parameters: sb' limit' offset' first' single
Long Parameter List,Revenj.DatabasePersistence.Postgres.QueryGeneration.Visitors,IExpressionMatcher,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Visitors\IExpressionMatcher.cs,TryMatch,The method has 5 parameters. Parameters: expression' queryBuilder' visitExpression' context' converter
Long Parameter List,Remotion.Linq.Clauses,JoinClause,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\JoinClause.cs,JoinClause,The method has 5 parameters. Parameters: itemName' itemType' innerSequence' outerKeySelector' innerKeySelector
Long Parameter List,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupJoinExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupJoinExpressionNode.cs,GroupJoinExpressionNode,The method has 5 parameters. Parameters: parseInfo' innerSequence' outerKeySelector' innerKeySelector' resultSelector
Long Parameter List,Remotion.Linq.Parsing.Structure.IntermediateModel,JoinExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\JoinExpressionNode.cs,JoinExpressionNode,The method has 5 parameters. Parameters: parseInfo' innerSequence' outerKeySelector' innerKeySelector' resultSelector
Long Parameter List,Revenj.Extensibility,CastleDynamicProxyProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\DynamicProxy\CastleDynamicProxyProvider.cs,CreateInterfaceProxy,The method has 5 parameters. Parameters: interfaceToProxy' instance' typesToProxy' selector' interceptors
Long Parameter List,Revenj.Extensibility,CastleDynamicProxyProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\DynamicProxy\CastleDynamicProxyProvider.cs,CreateClassProxy,The method has 5 parameters. Parameters: classToProxy' typesToProxy' arguments' selector' interceptors
Long Parameter List,Revenj.Extensibility,IDynamicProxyProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\DynamicProxy\IDynamicProxyProvider.cs,CreateInterfaceProxy,The method has 5 parameters. Parameters: interfaceToProxy' instance' typesToProxy' selector' interceptors
Long Parameter List,Revenj.Extensibility,IDynamicProxyProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\DynamicProxy\IDynamicProxyProvider.cs,CreateClassProxy,The method has 5 parameters. Parameters: classToProxy' typesToProxy' arguments' selector' interceptors
Long Parameter List,Revenj.Extensibility,Setup,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Setup.cs,UseAutofac,The method has 6 parameters. Parameters: pluginAssemblies' pluginPaths' withExternalConfiguration' loadModules' withAspects' dslAspects
Long Parameter List,Revenj.Extensibility,AutofacContainerBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Setup.cs,AutofacContainerBuilder,The method has 5 parameters. Parameters: pluginAssemblies' pluginPaths' loadModules' withAspects' dslAspects
Long Parameter List,Revenj.Extensibility.Autofac.Builder,RegistrationBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Builder\RegistrationBuilder.cs,CreateRegistration,The method has 5 parameters. Parameters: id' data' activator' services' target
Long Parameter List,Revenj.Extensibility.Autofac,RegistrationExtensions,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\RegistrationExtensions.cs,RegisterGenericDecorator,The method has 5 parameters. Parameters: builder' decoratorType' decoratedServiceType' fromKey' toKey
Long Parameter List,Revenj.Extensibility.Autofac.Core,ActivatedEventArgs<T>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\ActivatedEventArgs.cs,ActivatedEventArgs,The method has 5 parameters. Parameters: service' context' component' parameters' instance
Long Parameter List,Revenj.Extensibility.Autofac.Core,ActivatingEventArgs<T>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\ActivatingEventArgs.cs,ActivatingEventArgs,The method has 5 parameters. Parameters: service' context' component' parameters' instance
Long Parameter List,Revenj.Extensibility.Autofac.Core.Activators.Reflection,ReflectionActivator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Activators\Reflection\ReflectionActivator.cs,ReflectionActivator,The method has 5 parameters. Parameters: implementationType' constructorFinder' constructorSelector' configuredParameters' configuredProperties
Long Parameter List,Revenj.Extensibility.Autofac.Core.Registration,ComponentRegistration,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Registration\ComponentRegistration.cs,ComponentRegistration,The method has 7 parameters. Parameters: id' activator' lifetime' sharing' ownership' services' metadata
Long Parameter List,Revenj.Extensibility.Autofac.Core.Registration,ComponentRegistration,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Registration\ComponentRegistration.cs,ComponentRegistration,The method has 8 parameters. Parameters: id' activator' lifetime' sharing' ownership' services' metadata' target
Long Parameter List,Revenj.Extensibility.Autofac.Core.Resolving,InstanceLookup,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Resolving\InstanceLookup.cs,InstanceLookup,The method has 5 parameters. Parameters: service' registration' scope' mostNestedVisibleScope' parameters
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The method has 6 parameters. Parameters: s' info' pm' r' c' p
Long Parameter List,Revenj.Extensibility.Autofac.Features.OpenGenerics,OpenGenericRegistrationExtensions,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\OpenGenerics\OpenGenericRegistrationExtensions.cs,RegisterGenericDecorator,The method has 5 parameters. Parameters: builder' decoratorType' decoratedServiceType' fromKey' toKey
Long Parameter List,Revenj.Extensibility.Autofac.Features.OpenGenerics,OpenGenericServiceBinder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\OpenGenerics\OpenGenericServiceBinder.cs,TryBindServiceType,The method has 5 parameters. Parameters: service' configuredOpenGenericServices' openGenericImplementationType' constructedImplementationType' constructedServices
Long Parameter List,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,Multiply,The method has 8 parameters. Parameters: x' xOffset' xLen' y' yOffset' yLen' d' dOffset
Long Parameter List,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,MultiplyMod2p32pmod,The method has 9 parameters. Parameters: x' xOffset' xLen' y' yOffest' yLen' d' dOffset' mod
Long Parameter List,Mono.Security.Cryptography,ARC4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\ARC4Managed.cs,TransformBlock,The method has 5 parameters. Parameters: inputBuffer' inputOffset' inputCount' outputBuffer' outputOffset
Long Parameter List,Mono.Security.Cryptography,ARC4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\ARC4Managed.cs,InternalTransformBlock,The method has 5 parameters. Parameters: inputBuffer' inputOffset' inputCount' outputBuffer' outputOffset
Long Parameter List,Mono.Security.Cryptography,DiffieHellmanManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\DiffieHellmanManaged.cs,Initialize,The method has 5 parameters. Parameters: p' g' x' secretLen' checkInput
Long Parameter List,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,FF,The method has 6 parameters. Parameters: a' b' c' d' x' s
Long Parameter List,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,GG,The method has 6 parameters. Parameters: a' b' c' d' x' s
Long Parameter List,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,HH,The method has 6 parameters. Parameters: a' b' c' d' x' s
Long Parameter List,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Verify_v15,The method has 5 parameters. Parameters: rsa' hash' hashValue' signature' tryNonStandardEncoding
Long Parameter List,Mono.Security.Cryptography,SymmetricTransform,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SymmetricTransform.cs,TransformBlock,The method has 5 parameters. Parameters: inputBuffer' inputOffset' inputCount' outputBuffer' outputOffset
Long Parameter List,Mono.Security.Cryptography,SymmetricTransform,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SymmetricTransform.cs,InternalTransformBlock,The method has 5 parameters. Parameters: inputBuffer' inputOffset' inputCount' outputBuffer' outputOffset
Long Parameter List,Mono.Security.Interface,ICertificateValidator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Interface\CertificateValidationHelper.cs,SelectClientCertificate,The method has 5 parameters. Parameters: targetHost' localCertificates' remoteCertificate' acceptableIssuers' clientCertificate
Long Parameter List,Mono.Security.Interface,IMonoSslStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Interface\IMonoSslStream.cs,BeginAuthenticateAsClient,The method has 6 parameters. Parameters: targetHost' clientCertificates' enabledSslProtocols' checkCertificateRevocation' asyncCallback' asyncState
Long Parameter List,Mono.Security.Interface,IMonoSslStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Interface\IMonoSslStream.cs,BeginAuthenticateAsServer,The method has 6 parameters. Parameters: serverCertificate' clientCertificateRequired' enabledSslProtocols' checkCertificateRevocation' asyncCallback' asyncState
Long Parameter List,Mono.Security.Interface,IMonoSslStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Interface\IMonoSslStream.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' asyncCallback' asyncState
Long Parameter List,Mono.Security.Interface,IMonoSslStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Interface\IMonoSslStream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' asyncCallback' asyncState
Long Parameter List,Mono.Security.Interface,MonoTlsProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Interface\MonoTlsProvider.cs,ValidateCertificate,The method has 8 parameters. Parameters: validator' targetHost' serverMode' certificates' wantsChain' chain' errors' status11
Long Parameter List,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute,The method has 7 parameters. Parameters: type2' level' username' password' domain' lm' ntlm
Long Parameter List,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,CipherSuite,The method has 12 parameters. Parameters: code' name' cipherAlgorithmType' hashAlgorithmType' exchangeAlgorithmType' exportable' blockMode' keyMaterialSize' expandedKeyMaterialSize' effectiveKeyBits' ivSize' blockSize
Long Parameter List,Mono.Security.Protocol.Tls,CipherSuiteCollection,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteCollection.cs,Add,The method has 12 parameters. Parameters: code' name' cipherType' hashType' exchangeType' exportable' blockMode' keyMaterialSize' expandedKeyMaterialSize' effectiveKeyBytes' ivSize' blockSize
Long Parameter List,Mono.Security.Protocol.Tls,ServerContext,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\ServerContext.cs,ServerContext,The method has 5 parameters. Parameters: stream' securityProtocolType' serverCertificate' clientCertificateRequired' requestClientCertificate
Long Parameter List,Mono.Security.Protocol.Tls,SslCipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslCipherSuite.cs,SslCipherSuite,The method has 12 parameters. Parameters: code' name' cipherAlgorithmType' hashAlgorithmType' exchangeAlgorithmType' exportable' blockMode' keyMaterialSize' expandedKeyMaterialSize' effectiveKeyBytes' ivSize' blockSize
Long Parameter List,Mono.Security.Protocol.Tls,SslClientStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslClientStream.cs,SslClientStream,The method has 5 parameters. Parameters: stream' targetHost' ownsStream' securityProtocolType' clientCertificates
Long Parameter List,Mono.Security.Protocol.Tls,SslServerStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslServerStream.cs,SslServerStream,The method has 5 parameters. Parameters: stream' serverCertificate' clientCertificateRequired' requestClientCertificate' ownsStream
Long Parameter List,Mono.Security.Protocol.Tls,SslServerStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslServerStream.cs,SslServerStream,The method has 5 parameters. Parameters: stream' serverCertificate' clientCertificateRequired' ownsStream' securityProtocolType
Long Parameter List,Mono.Security.Protocol.Tls,SslServerStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslServerStream.cs,SslServerStream,The method has 6 parameters. Parameters: stream' serverCertificate' clientCertificateRequired' requestClientCertificate' ownsStream' securityProtocolType
Long Parameter List,Mono.Security.Protocol.Tls,SslStreamBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,Mono.Security.Protocol.Tls,SslStreamBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,InternalReadCallback_inner,The method has 5 parameters. Parameters: internalResult' recbuf' state' didRead' n
Long Parameter List,Mono.Security.Protocol.Tls,SslStreamBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,Mono.Security.Protocol.Tls,InternalAsyncResult,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,InternalAsyncResult,The method has 7 parameters. Parameters: userCallback' userState' buffer' offset' count' fromWrite' proceedAfterHandshake
Long Parameter List,Mono.Security.Protocol.Tls,TlsCipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsCipherSuite.cs,TlsCipherSuite,The method has 12 parameters. Parameters: code' name' cipherAlgorithmType' hashAlgorithmType' exchangeAlgorithmType' exportable' blockMode' keyMaterialSize' expandedKeyMaterialSize' effectiveKeyBytes' ivSize' blockSize
Long Parameter List,Mono.Security.X509.Stores,FileCertificateStore,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Stores\FileCertificateStore.cs,Open,The method has 5 parameters. Parameters: name' location' readOnly' createIfNonExisting' includeArchives
Long Parameter List,Mono.Security.X509.Stores,ICertificateStore,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Stores\ICertificateStore.cs,Open,The method has 5 parameters. Parameters: name' location' readOnly' createIfNonExisting' includeArchives
Long Parameter List,Mono.Security,ASN1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1.cs,DecodeTLV,The method has 5 parameters. Parameters: asn1' pos' tag' length' content
Long Parameter List,Revenj.Serialization,GenericDataContractResolver,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\GenericDataContractResolver.cs,TryResolveType,The method has 5 parameters. Parameters: type' declaredType' knownTypeResolver' typeName' typeNamespace
Long Identifier,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,,The length of the parameter functionNeedsColumnListDefinition is 33.
Long Identifier,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnection,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnection.cs,,The length of the parameter ProvideClientCertificatesCallbackDelegate is 41.
Long Identifier,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnection,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnection.cs,,The length of the parameter CertificateSelectionCallbackDelegate is 36.
Long Identifier,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnection,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnection.cs,,The length of the parameter CertificateValidationCallbackDelegate is 37.
Long Identifier,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnection,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnection.cs,,The length of the parameter PrivateKeySelectionCallbackDelegate is 35.
Long Identifier,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlRowDescription,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlRowDescription.cs,,The length of the parameter _caseInsensitiveNameIndexTable is 30.
Long Identifier,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlTransaction,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlTransaction.cs,,The length of the parameter Exception_SavePointNotSupported is 31.
Long Identifier,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlTransaction,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlTransaction.cs,,The length of the parameter Exception_SavePointWithSemicolon is 32.
Long Identifier,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlParameter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Parameter\NpgsqlParameter.cs,,The length of the parameter Exception_ParameterTypeIsOnlyArray is 34.
Long Identifier,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectedState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlConnectedState.cs,,The length of the parameter Exception_AuthenticationMethodNotSupported is 42.
Long Identifier,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectedState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlConnectedState.cs,,The length of the parameter Log_AuthenticationClearTextRequest is 34.
Long Identifier,Remotion.Linq.Clauses.Expressions,ExtensionExpression,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\Expressions\ExtensionExpression.cs,,The length of the parameter DefaultExtensionExpressionNodeType is 34.
Long Identifier,Remotion.Linq.Clauses.Expressions,IPartialEvaluationExceptionExpressionVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\Expressions\IPartialEvaluationExceptionExpressionVisitor.cs,VisitPartialEvaluationExceptionExpression,The length of the parameter partialEvaluationExceptionExpression is 36.
Long Identifier,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitUnknownNonExtensionExpression,The length of the parameter expressionAsExtensionExpression is 31.
Long Identifier,Remotion.Linq.Parsing.ExpressionTreeVisitors,SubQueryFindingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\SubQueryFindingExpressionTreeVisitor.cs,VisitExpression,The length of the parameter potentialQueryOperatorExpression is 32.
Long Identifier,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,AttributeEvaluatingExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\AttributeEvaluatingExpressionTransformer.cs,Transform,The length of the parameter methodCallExpressionTransformerProvider is 39.
Long Identifier,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,AttributeEvaluatingExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\AttributeEvaluatingExpressionTransformer.cs,Transform,The length of the parameter methodCallExpressionTransformerProvider is 39.
Long Identifier,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,AttributeEvaluatingExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\AttributeEvaluatingExpressionTransformer.cs,,The length of the parameter MethodCallExpressionTransformerCache is 36.
Long Identifier,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,VBCompareStringExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\VBCompareStringExpressionTransformer.cs,Transform,The length of the parameter leftSideAsMethodCallExpression is 30.
Long Identifier,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,VBCompareStringExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\VBCompareStringExpressionTransformer.cs,Transform,The length of the parameter leftSideArgument2AsConstantExpression is 37.
Long Identifier,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,VBCompareStringExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\VBCompareStringExpressionTransformer.cs,GetExpressionForNodeType,The length of the parameter leftSideAsMethodCallExpression is 30.
Long Identifier,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,VBCompareStringExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\VBCompareStringExpressionTransformer.cs,GetExpressionForNodeType,The length of the parameter leftSideArgument2AsConstantExpression is 37.
Long Identifier,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,VBCompareStringExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\VBCompareStringExpressionTransformer.cs,,The length of the parameter c_vbCompareStringOperatorMethodName is 35.
Long Identifier,Remotion.Linq.Parsing.ExpressionTreeVisitors.TreeEvaluation,EvaluatableTreeFindingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\TreeEvaluation\EvaluatableTreeFindingExpressionTreeVisitor.cs,VisitPartialEvaluationExceptionExpression,The length of the parameter partialEvaluationExceptionExpression is 36.
Long Identifier,Remotion.Linq.Parsing.Structure,MethodCallExpressionParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\MethodCallExpressionParser.cs,Parse,The length of the parameter additionalConstructorParameters is 31.
Long Identifier,Remotion.Linq.Parsing.Structure,MethodCallExpressionParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\MethodCallExpressionParser.cs,ProcessArgumentExpression,The length of the parameter parametersWithSubQueriesDetected is 32.
Long Identifier,Remotion.Linq.Parsing.Structure,MethodCallExpressionParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\MethodCallExpressionParser.cs,CreateExpressionNode,The length of the parameter additionalConstructorParameters is 31.
Long Identifier,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupByWithResultSelectorExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupByWithResultSelectorExpressionNode.cs,GroupByWithResultSelectorExpressionNode,The length of the parameter elementSelectorOrResultSelector is 31.
Long Identifier,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupByWithResultSelectorExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupByWithResultSelectorExpressionNode.cs,CreateParseInfoWithGroupNode,The length of the parameter elementSelectorOrResultSelector is 31.
Long Identifier,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupByWithResultSelectorExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupByWithResultSelectorExpressionNode.cs,CreateParseInfoWithGroupNode,The length of the parameter simulatedGroupByCallWithoutResultSelector is 41.
Long Identifier,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupByWithResultSelectorExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupByWithResultSelectorExpressionNode.cs,CreateSelectorForSelectNode,The length of the parameter elementSelectorOrResultSelector is 31.
Long Identifier,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupByWithResultSelectorExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupByWithResultSelectorExpressionNode.cs,CreateSelectorForSelectNode,The length of the parameter bodyWithGroupingAndKeyReplaced is 30.
Long Identifier,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupByWithResultSelectorExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupByWithResultSelectorExpressionNode.cs,GetOptionalElementSelector,The length of the parameter elementSelectorOrResultSelector is 31.
Long Identifier,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupByWithResultSelectorExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupByWithResultSelectorExpressionNode.cs,GetResultSelector,The length of the parameter elementSelectorOrResultSelector is 31.
Long Identifier,Remotion.Linq.Parsing.Structure.IntermediateModel,MethodCallExpressionNodeFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\MethodCallExpressionNodeFactory.cs,CreateExpressionNode,The length of the parameter additionalConstructorParameters is 31.
Long Identifier,Remotion.Linq.Parsing.Structure.IntermediateModel,MethodCallExpressionNodeFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\MethodCallExpressionNodeFactory.cs,GetParameterArray,The length of the parameter additionalConstructorParameters is 31.
Long Identifier,Remotion.Linq.Parsing.Structure.NodeTypeProviders,MethodInfoBasedNodeTypeRegistry,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\NodeTypeProviders\MethodInfoBasedNodeTypeRegistry.cs,,The length of the parameter s_genericMethodDefinitionCandidates is 35.
Long Identifier,Remotion.Linq.Utilities,ReflectionUtility,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Utilities\ReflectionUtility.cs,TryGetItemTypeOfClosedGenericIEnumerable,The length of the parameter implementedEnumerableInterface is 30.
Long Identifier,Revenj.Extensibility,AspectRepository,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Aspects\AspectRepository.cs,,The length of the parameter BeforeCreationAspectDictionary is 30.
Long Identifier,Revenj.Extensibility.Autofac.Core.Registration,ComponentRegistry,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Registration\ComponentRegistry.cs,,The length of the parameter _dynamicRegistrationSourcesArray is 32.
Long Identifier,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,CreateFuncGenerator,The length of the parameter activatorComponentRegistrationParam is 35.
Long Identifier,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,CreateGenerator,The length of the parameter activatorComponentRegistrationParam is 35.
Long Identifier,Revenj.Extensibility.Autofac.Features.OpenGenerics,OpenGenericServiceBinder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\OpenGenerics\OpenGenericServiceBinder.cs,TryBindServiceType,The length of the parameter constructedImplementationTypeTmp is 32.
Long Identifier,Revenj.Extensibility.Autofac.Features.OpenGenerics,OpenGenericServiceBinder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\OpenGenerics\OpenGenericServiceBinder.cs,TryMapImplementationGenericArguments,The length of the parameter implementationGenericArgumentDefinitions is 40.
Long Identifier,Revenj.Extensibility.Autofac.Features.OpenGenerics,OpenGenericServiceBinder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\OpenGenerics\OpenGenericServiceBinder.cs,TryMapImplementationGenericArguments,The length of the parameter serviceArgumentDefinitionToArgumentMapping is 42.
Long Identifier,Revenj.Extensibility.Autofac.Features.OpenGenerics,OpenGenericServiceBinder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\OpenGenerics\OpenGenericServiceBinder.cs,TryFindServiceArgumentForImplementationArgumentDefinition,The length of the parameter implementationGenericArgumentDefinition is 39.
Long Identifier,Revenj.Extensibility.Autofac.Features.OpenGenerics,OpenGenericServiceBinder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\OpenGenerics\OpenGenericServiceBinder.cs,TryFindServiceArgumentForImplementationArgumentDefinition,The length of the parameter serviceArgumentDefinitionToArgument is 35.
Long Identifier,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,Save,The length of the parameter WIN_CERT_TYPE_PKCS_SIGNED_DATA is 30.
Long Identifier,Mono.Security.Interface,MonoTlsSettings,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Interface\MonoTlsSettings.cs,,The length of the parameter useServicePointManagerCallback is 30.
Long Statement,DSL,Core,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Core.cs,Setup,The length of the statement  "			return Setup(builder' withAspects' externalConfiguration' setupDatabase != null ? new[] { setupDatabase } : new Action<IObjectFactoryBuilder>[0]); " is 146.
Long Statement,DSL,Core,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Core.cs,ConfigureSerialization,The length of the statement  "			builder.RegisterType<GenericDeserializationBinder' GenericDeserializationBinder' SerializationBinder>(InstanceScope.Singleton); " is 127.
Long Statement,DSL,Core,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Core.cs,ConfigureSerialization,The length of the statement  "			builder.RegisterType(typeof(JsonSerialization)' InstanceScope.Singleton' false' typeof(ISerialization<string>)' typeof(ISerialization<TextReader>)); " is 148.
Long Statement,DSL,Core,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Core.cs,ConfigureSerialization,The length of the statement  "			builder.RegisterType(typeof(ProtobufSerialization)' InstanceScope.Singleton' false' typeof(ISerialization<MemoryStream>)' typeof(ISerialization<Stream>)); " is 154.
Long Statement,Revenj,Postgres,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Core.cs,Setup,The length of the statement  "			return DSL.Core.Setup(withAspects' externalConfiguration' b => Revenj.DatabasePersistence.Postgres.Setup.ConfigurePostgres(b' connectionString)); " is 145.
Long Statement,Revenj,PostgresModule,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Setup.cs,Load,The length of the statement  "			var cs = ConfigurationManager.AppSettings["Revenj.ConnectionString"] ?? ConfigurationManager.AppSettings["ConnectionString"]; " is 125.
Long Statement,Revenj,PostgresModule,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Setup.cs,Load,The length of the statement  "				throw new ConfigurationErrorsException(@"ConnectionString is missing from configuration. Add ConnectionString to <appSettings> " is 126.
Long Statement,Revenj,PostgresModule,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Setup.cs,Load,The length of the statement  "Example: <add key=""ConnectionString"" value=""server=postgres.localhost;port=5432;database=MyDatabase;user=postgres;password=123456;encoding=unicode"" />"); " is 157.
Long Statement,Revenj.DatabasePersistence.Postgres,BulkReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\BulkRead.cs,Execute,The length of the statement  "					com = PostgresCommandFactory.PreparedCommand(Stream' preparedCommand.Name' preparedCommand.Query' preparedCommand.Types); " is 121.
Long Statement,Revenj.DatabasePersistence.Postgres,PostgresDatabaseNotification,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresDatabaseNotification.cs,Connection_Notification,The length of the statement  "					TraceSource.TraceEvent(TraceEventType.Verbose' 5137' "Postgres notification: {0} with {1}"' e.Condition' e.AdditionalInformation); " is 130.
Long Statement,Revenj.DatabasePersistence.Postgres,PostgresDatabaseNotification,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresDatabaseNotification.cs,Track,The length of the statement  "				}).Select(it => new KeyValuePair<string[]' Lazy<T[]>>(it.URI' new Lazy<T[]>(() => GetRepository<T>(it.Name).Find(it.URI) as T[]))); " is 131.
Long Statement,Revenj.DatabasePersistence.Postgres,PostgresDatabaseQuery,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresDatabaseQuery.cs,LogError,The length of the statement  "			TraceSource.TraceEvent(TraceEventType.Information' error' "{0}:{1} - {2}"' Connection.Host' Connection.Port' Connection.Database); " is 130.
Long Statement,Revenj.DatabasePersistence.Postgres,PostgresDatabaseQuery,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresDatabaseQuery.cs,PrepareCommand,The length of the statement  "				TraceSource.TraceEvent(TraceEventType.Information' 5110' "{0}:{1} - {2}"' Connection.Host' Connection.Port' Connection.Database); " is 129.
Long Statement,Revenj.DatabasePersistence.Postgres,PostgresDatabaseQuery,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresDatabaseQuery.cs,AddSource,The length of the statement  "					throw new FrameworkException("Unknown data source for type: " + typeof(T).FullName + ". Only queryable types can be used as data source"); " is 138.
Long Statement,Revenj.DatabasePersistence.Postgres,PostgresQueryManager,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresQueryManager.cs,StartQuery,The length of the statement  "				TraceSource.TraceEvent(TraceEventType.Information' 5101' "Transactions: {0}' connections: {1}"' OpenTransactions.Count' OpenConnections.Count); " is 143.
Long Statement,Revenj.DatabasePersistence.Postgres,Setup,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Setup.cs,ConfigurePostgres,The length of the statement  "			builder.RegisterType<PostgresDatabaseNotification' IDataChangeNotification' IEagerNotification>(InstanceScope.Singleton); " is 121.
Long Statement,Revenj.DatabasePersistence.Postgres,Setup,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Setup.cs,ConfigurePostgres,The length of the statement  "			builder.RegisterType<PostgresObjectFactory' IPostgresConverterRepository' IPostgresConverterFactory>(InstanceScope.Singleton); " is 126.
Long Statement,Revenj.DatabasePersistence.Postgres.Converters,ArrayTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ArrayTuple.cs,InsertArray,The length of the statement  "			throw new FrameworkException("Should not happen. Insert array called on array tuple. Nested arrays are invalid construct."); " is 124.
Long Statement,Revenj.DatabasePersistence.Postgres.Converters,EmptyArrayTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ArrayTuple.cs,InsertArray,The length of the statement  "				throw new FrameworkException("Should not happen. Insert array called on array tuple. Nested arrays are invalid construct."); " is 124.
Long Statement,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The length of the statement  "			int micro = (int)(value.Ticks - new DateTime(value.Year' value.Month' value.Day' value.Hour' value.Minute' value.Second' value.Kind).Ticks) / 10; " is 145.
Long Statement,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The length of the statement  "			int micro = (int)(value.ToUniversalTime().Ticks - new DateTime(value.Year' value.Month' value.Day' value.Hour' value.Minute' value.Second' DateTimeKind.Utc).Ticks) / 10; " is 169.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ArrayBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\ArrayHandling.cs,ToArrayList,The length of the statement  "			//We're either dealing with a 1-dimension array or treating a row of an n-dimension array. In either case parse the elements and put them in our ArrayList " is 154.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,Contains,The length of the statement  "			foreach (uint chunk in EnumChunks(item))//because last chunk is zero-filled in unused portion' it is safe to check it if searching for true " is 139.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,Concat,The length of the statement  "			else if (_lastChunkLen == 0)//Not only more efficient case with special handling' but also reasonably likely to appear in real use quite often. " is 143.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToString,The length of the statement  "						return (_chunks[0] & 0x80000000u) == 0 ? "0" : "1";//both safe in this case for all lengths' and allows for some backwards compatibility from threating bit(1) as if it were boolean. " is 181.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlInterval,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,ToString,The length of the statement  "				sb.Append(Math.Abs(Hours).ToString("D2")).Append(':').Append(Math.Abs(Minutes).ToString("D2")).Append(':').Append(Math.Abs(seconds).ToString("0#.######"' System.Globalization.CultureInfo.InvariantCulture.NumberFormat)); " is 219.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BasicNativeToBackendTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToBasicType,The length of the statement  "			return (((IFormattable)((IConvertible)NativeData).ToType(typeof(T)' null)).ToString(null' CultureInfo.InvariantCulture.NumberFormat)); " is 134.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,PrepareDefaultTypesMap,The length of the statement  "			nativeTypeMapping.AddType("int2"' NpgsqlDbType.Smallint' DbType.Int16' false' BasicNativeToBackendTypeConverter.ToBasicType<short>); " is 132.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,PrepareDefaultTypesMap,The length of the statement  "			nativeTypeMapping.AddType("int4"' NpgsqlDbType.Integer' DbType.Int32' false' BasicNativeToBackendTypeConverter.ToBasicType<int>); " is 129.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,PrepareDefaultTypesMap,The length of the statement  "			nativeTypeMapping.AddType("int8"' NpgsqlDbType.Bigint' DbType.Int64' false' BasicNativeToBackendTypeConverter.ToBasicType<long>); " is 129.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,PrepareDefaultTypesMap,The length of the statement  "			nativeTypeMapping.AddType("float4"' NpgsqlDbType.Real' DbType.Single' true' new ConvertNativeToBackendHandler(BasicNativeToBackendTypeConverter.ToSingleDouble)); " is 161.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,PrepareDefaultTypesMap,The length of the statement  "			nativeTypeMapping.AddType("float8"' NpgsqlDbType.Double' DbType.Double' true' new ConvertNativeToBackendHandler(BasicNativeToBackendTypeConverter.ToSingleDouble)); " is 163.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,PrepareDefaultTypesMap,The length of the statement  "			nativeTypeMapping.AddType("numeric"' NpgsqlDbType.Numeric' DbType.Decimal' true' BasicNativeToBackendTypeConverter.ToBasicType<decimal>); " is 137.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,TypeInfoList,The length of the statement  "										  npgsqlmacaddr => (npgsqlmacaddr is PhysicalAddress ? (NpgsqlMacAddress)(PhysicalAddress)npgsqlmacaddr : npgsqlmacaddr)); " is 120.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,TypeInfoList,The length of the statement  "												  typeof(TimeSpan)' interval => (TimeSpan)(NpgsqlInterval)interval' intervalNpgsql => (intervalNpgsql is TimeSpan ? (NpgsqlInterval)(TimeSpan)intervalNpgsql : intervalNpgsql)); " is 174.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,TypeInfoList,The length of the statement  "											  typeof(DateTime)' date => (DateTime)(NpgsqlDate)date' npgsqlDate => (npgsqlDate is DateTime ? (NpgsqlDate)(DateTime)npgsqlDate : npgsqlDate)); " is 142.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,TypeInfoList,The length of the statement  "											  typeof(DateTime)' time => time is DateTime ? time : (DateTime)(NpgsqlTime)time' npgsqlTime => (npgsqlTime is TimeSpan ? (NpgsqlTime)(TimeSpan)npgsqlTime : npgsqlTime)); " is 168.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,TypeInfoList,The length of the statement  "											  typeof(DateTime)' timetz => (DateTime)(NpgsqlTimeTZ)timetz' npgsqlTimetz => (npgsqlTimetz is TimeSpan ? (NpgsqlTimeTZ)(TimeSpan)npgsqlTimetz : npgsqlTimetz)); " is 158.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,TypeInfoList,The length of the statement  "											  typeof(DateTime)' timestamp => (DateTime)(NpgsqlTimeStamp)timestamp' npgsqlTimestamp => (npgsqlTimestamp is DateTime ? (NpgsqlTimeStamp)(DateTime)npgsqlTimestamp : npgsqlTimestamp)); " is 182.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,TypeInfoList,The length of the statement  "							  typeof(DateTime)' timestamp => (DateTime)(NpgsqlTimeStampTZ)timestamp' npgsqlTimestampTZ => (npgsqlTimestampTZ is DateTime ? (NpgsqlTimeStampTZ)(DateTime)npgsqlTimestampTZ : npgsqlTimestampTZ)); " is 194.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,TypeInfoList,The length of the statement  "											  typeof(DateTime)' timestamptz => ((DateTime)(NpgsqlTimeStampTZ)timestamptz).ToLocalTime()' npgsqlTimestampTZ => (npgsqlTimestampTZ is DateTime ? (NpgsqlTimeStampTZ)(DateTime)npgsqlTimestampTZ : npgsqlTimestampTZ is DateTimeOffset ? (NpgsqlTimeStampTZ)(DateTimeOffset)npgsqlTimestampTZ : npgsqlTimestampTZ)); " is 307.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlNativeTypeInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,ConvertToBackendPlainQuery,The length of the statement  "					(this.Quote ? QuoteString(_ConvertNativeToBackend(this' NativeData' false)) : _ConvertNativeToBackend(this' NativeData' false)); " is 128.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ExpectedTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,ChangeType,The length of the statement  "					return new DateTimeOffset(timetz.Ticks' new TimeSpan(timetz.TimeZone.Hours' timetz.TimeZone.Minutes' timetz.TimeZone.Seconds)); " is 127.
Long Statement,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ExpectedTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,ChangeType,The length of the statement  "					return new DateTimeOffset(timestamptz.Ticks' new TimeSpan(timestamptz.TimeZone.Hours' timestamptz.TimeZone.Minutes' timestamptz.TimeZone.Seconds)); " is 147.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCopySerializer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Copy\NpgsqlCopySerializer.cs,AddDateTime,The length of the statement  "			AddString(string.Format("{0}-{1}-{2} {3}:{4}:{5}.{6}"' fieldValue.Year' fieldValue.Month' fieldValue.Day' fieldValue.Hour' fieldValue.Minute' fieldValue.Second' fieldValue.Millisecond)); " is 186.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlQuery,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlQuery.cs,Send,The length of the statement  "			// Workaround for seek exceptions when running under ms.net. TODO: Check why Npgsql may be letting behind data in the stream. " is 125.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBufferedStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlBufferedStream.cs,Flush,The length of the statement  "				// However' if we do not forward the Flush to the underlying stream' we may have problems when chaining several streams. " is 120.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBufferedStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlBufferedStream.cs,ClearReadBufferBeforeWrite,The length of the statement  "				throw new NotSupportedException("Cannot write to a BufferedStream while the read buffer is not empty if the underlying stream is not seekable. Ensure that the stream underlying this BufferedStream can seek or avoid interleaving read and write operations on this BufferedStream."); " is 280.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBufferedStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlBufferedStream.cs,FlushWrite,The length of the statement  "							"BufferedStream: Write buffer must be allocated and write position must be in the bounds of the buffer in FlushWrite!"); " is 120.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBufferedStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlBufferedStream.cs,Read,The length of the statement  "				throw new ArgumentException("Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection."); " is 178.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBufferedStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlBufferedStream.cs,Write,The length of the statement  "				throw new ArgumentException("Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection."); " is 178.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBufferedStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlBufferedStream.cs,WriteByte,The length of the statement  "			// We should not be flushing here' but only writing to the underlying stream' but previous version flushed' so we keep this. " is 124.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBufferedStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlBufferedStream.cs,Seek,The length of the statement  "			// If the seek destination is still within the data currently in the buffer' we want to keep the buffer data and continue using it. " is 131.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,ExecuteReader,The length of the statement  "						//Adjust behaviour so source reader is sequential access - for speed - and doesn't close the connection - or it'll do so at the wrong time. " is 139.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,GetReader,The length of the statement  "						reader = forwardReader.Process(connector.ExecuteEnum(new NpgsqlExecute(bind.PortalName' 0))' cb' connector.BlockNotificationThread()' true); " is 140.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,PassEscapedArray,The length of the statement  "			int endAt = array.Length - 1;//leave last char for separate append as we don't have to continually check we're safe to add the next char too. " is 141.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,PassParam,The length of the statement  "			// Add parentheses wrapping parameter value before the type cast to avoid problems with Int16.MinValue' Int32.MinValue and Int64.MinValue " is 137.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,PassParam,The length of the statement  "						//We could test to see if \ is used anywhere' but then we could be doing quite an expensive check (if the value is large) for little gain. " is 138.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,GetClearCommandStream,The length of the statement  "					// Check if just procedure name was passed. If so' does not replace parameter names and just pass parameter values in order they were added in parameters collection. Also check if command text finishes in a ";" which would make Npgsql incorrectly append a "()" when executing this command text. " is 294.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,GetClearCommandStream,The length of the statement  "				var parameterIndex = new Dictionary<string' NpgsqlParameter>(parameters.Count' StringComparer.InvariantCultureIgnoreCase); " is 122.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,GetClearCommandStream,The length of the statement  "				var len = parameters.Where(it => it.Direction == ParameterDirection.Input || it.Direction == ParameterDirection.InputOutput).Count(); " is 133.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,CheckFunctionNeedsColumnDefinitionList,The length of the statement  "				"select count(*) > 0 from pg_proc p left join pg_namespace n on p.pronamespace = n.oid where " + predicate + " and n.nspname=:nspname"; " is 135.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,CheckFunctionNeedsColumnDefinitionList,The length of the statement  "				// Instead of defaulting don't use the nspname' as an alternative' query pg_proc and pg_namespace to try and determine the nspname. " is 131.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,CheckFunctionNeedsColumnDefinitionList,The length of the statement  "				//schemaName = "public"; // This was removed after build 0.99.3 because the assumption that a function is in public is often incorrect. " is 135.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,GetPreparedCommandStream,The length of the statement  "				// Add parentheses wrapping parameter value before the type cast to avoid problems with Int16.MinValue' Int32.MinValue and Int64.MinValue " is 137.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,GetParseCommandText,The length of the statement  "				// Check if just procedure name was passed. If so' does not replace parameter names and just pass parameter values in order they were added in parameters collection. " is 165.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,GetParseCommandText,The length of the statement  "				parseCommand = string.Format("select * from {0}"' parseCommand); // This syntax is only available in 7.3+ as well SupportsPrepare. " is 130.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,GetParseCommandText,The length of the statement  "								parseCommand = ReplaceParameterValue(parseCommand' parameterName' string.Format("${0}::{1}{2}"' (i + 1)' parameters[i].TypeInfo.CastName' parameterSize)); " is 154.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,GetPrepareCommandText,The length of the statement  "				// Check if just procedure name was passed. If so' does not replace parameter names and just pass parameter values in order they were added in parameters collection. " is 165.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommandBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommandBuilder.cs,DeriveParameters,The length of the statement  "			// Updated after 0.99.3 to support the optional existence of a name qualifying schema and case insensitivity when the schema ror procedure name do not contain a quote. " is 167.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommandBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommandBuilder.cs,DeriveParameters,The length of the statement  "					"select proargnames' proargtypes from pg_proc p left join pg_namespace n on p.pronamespace = n.oid where proname=:proname and n.nspname=:nspname"; " is 146.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectionStringBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectionStringBuilder.cs,SetValue,The length of the statement  "							throw new ArgumentException("Attempt to set compatibility with version " + value + " when using version " + THIS_VERSION); " is 122.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,ReleasePlansPortals,The length of the statement  "						using (NpgsqlCommand cmd = new NpgsqlCommand(String.Format("deallocate \"{0}\";"' _planNamePrefix + i.ToString())' this)) " is 121.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,ReleasePlansPortals,The length of the statement  "					// Ignore any error which may occur when releasing portals as this portal name may not be valid anymore. i.e.: the portal name was used on a prepared query which had errors. " is 173.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,ReleasePlansPortals,The length of the statement  "				// Ignore any error which may occur when releasing portals as this portal name may not be valid anymore. i.e.: the portal name was used on a prepared query which had errors. " is 173.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,Open,The length of the statement  "				|| !string.Equals(clientEncodingParam.ParameterValue' "UTF8"' StringComparison.OrdinalIgnoreCase) && !string.Equals(clientEncodingParam.ParameterValue' "UNICODE"' StringComparison.OrdinalIgnoreCase)) " is 199.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,CheckStringConformanceRequirements,The length of the statement  "			if (_serverParameters.TryGetValue("escape_string_warning"' out warning) && warning.ParameterValue == "on")//try the most commonly set at time of coding first " is 157.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlContextHolder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,ProcessServerMessages,The length of the statement  "						//To give runtime chance to release correctly the lock. See http://pgfoundry.org/forum/message.php?msg_id=1002650 for more information. " is 135.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectorPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectorPool.cs,ReleaseConnector,The length of the statement  "			if (Connector.CurrentReader != null && (Thread.CurrentThread.ThreadState & (ThreadState.Aborted | ThreadState.AbortRequested)) == 0) " is 132.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectorPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectorPool.cs,UngetConnector,The length of the statement  "						//If the connector fails to release its resources then it is probably broken' so make sure we don't add it to the queue. " is 120.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,GetPrimaryKeys,The length of the statement  "				"select a.attname from pg_catalog.pg_class ct' pg_catalog.pg_class ci' pg_catalog.pg_attribute a' pg_catalog.pg_index i  WHERE ct.oid=i.indrelid AND ci.oid=i.indexrelid  AND a.attrelid=ci.oid AND i.indisprimary AND ct.relname = :tablename"; " is 240.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,GetKeys,The length of the statement  "				"select a.attname' ci.relname' i.indisprimary from pg_catalog.pg_class ct' pg_catalog.pg_class ci' pg_catalog.pg_attribute a' pg_catalog.pg_index i WHERE ct.oid=i.indrelid AND ci.oid=i.indexrelid AND a.attrelid=ci.oid AND i.indisunique AND ct.oid = :tableOid order by ci.relname"; " is 280.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,IsNullable,The length of the statement  "			string lookupKey = string.Format("{0}'{1}"' CurrentDescription[FieldIndex].TableOID' CurrentDescription[FieldIndex].ColumnAttributeNumber); " is 139.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,GetBaseColumnName,The length of the statement  "			string lookupKey = string.Format("{0}'{1}"' CurrentDescription[FieldIndex].TableOID' CurrentDescription[FieldIndex].ColumnAttributeNumber); " is 139.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,IsAutoIncrement,The length of the statement  "			string lookupKey = string.Format("{0}'{1}"' CurrentDescription[FieldIndex].TableOID' CurrentDescription[FieldIndex].ColumnAttributeNumber); " is 139.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,GetTablesFromOids,The length of the statement  "					"SELECT current_database()' nc.nspname' c.relname' c.oid FROM pg_namespace nc' pg_class c WHERE c.relnamespace = nc.oid AND (c.relkind = 'r' OR c.relkind = 'v') AND c.oid IN ("); " is 178.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,GetColumns,The length of the statement  "				"SELECT a.attname AS column_name' a.attnotnull AS column_notnull' a.attrelid AS table_id' a.attnum AS column_num' d.adsrc as column_default"); " is 142.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,GetColumns,The length of the statement  "				" FROM pg_attribute a LEFT OUTER JOIN pg_attrdef d ON a.attrelid = d.adrelid AND a.attnum = d.adnum WHERE a.attnum > 0 AND ("); " is 127.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlPromotableSinglePhaseNotification,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlPromotableSinglePhaseNotification.cs,CreateResourceManager,The length of the statement  "				AppDomain rmDomain = AppDomain.CreateDomain("NpgsqlResourceManager"' AppDomain.CurrentDomain.Evidence' AppDomain.CurrentDomain.SetupInformation); " is 145.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlRowDescription,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlRowDescription.cs,InitDictionary,The length of the statement  "				_caseInsensitiveNameIndexTable = new Dictionary<string' int>(fields_data.Length' StringComparer.InvariantCultureIgnoreCase); " is 124.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlRowDescription,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlRowDescription.cs,InitDictionary,The length of the statement  "				_caseInsensitiveNameIndexTable = new Dictionary<string' int>(fields_data.Length' KanaWidthCaseInsensitiveComparator.INSTANCE); " is 126.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlRowDescription,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlRowDescription.cs,FieldIndex,The length of the statement  "			if (_field_name_index_table.TryGetValue(fieldName' out ret) || _caseInsensitiveNameIndexTable.TryGetValue(fieldName' out ret)) " is 126.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlSchema.cs,GetDatabases,The length of the statement  "				"SELECT d.datname AS database_name' u.usename AS owner' pg_catalog.pg_encoding_to_char(d.encoding) AS encoding FROM pg_catalog.pg_database d LEFT JOIN pg_catalog.pg_user u ON d.datdba = u.usesysid"); " is 199.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlSchema.cs,GetColumns,The length of the statement  "				"SELECT table_catalog' table_schema' table_name' column_name' ordinal_position' column_default' is_nullable' udt_name AS data_type' character_maximum_length' character_octet_length' numeric_precision' numeric_precision_radix' numeric_scale' datetime_precision' character_set_catalog' character_set_schema' character_set_name' collation_catalog FROM information_schema.columns"); " is 378.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlSchema,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlSchema.cs,GetIndexColumns,The length of the statement  "					BuildCommand(getIndexColumns' restrictions' false' "current_database()"' "n.nspname"' "t.relname"' "i.relname"' "a.attname")) " is 125.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,ProcessBackendResponsesEnum,The length of the statement  "					// throw an exception instead of trying to cancel query. This helps to prevent loop as CancelRequest will also try to stablish a connection and sends commands. " is 159.
Long Statement,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,ProcessBackendResponsesEnum,The length of the statement  "						// Changed message again to report about the two possible timeouts: connection or command as the establishment timeout only was confusing users when the timeout was a command timeout. " is 183.
Long Statement,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,LikeStringComparison,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,EscapeForLike,The length of the statement  "					visitExpression(ConstantExpression.Constant(value.Replace(@"\"' @"\\").Replace("_"' "\\_").Replace("%"' "\\%")' typeof(string))); " is 129.
Long Statement,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,SetMethods,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\SetMethods.cs,TryMatch,The length of the statement  "			if (dt.IsGenericType && dt.GetGenericTypeDefinition() == typeof(HashSet<>) && SupportedMethods.TryGetValue(mce.Method.Name' out mcd)) " is 133.
Long Statement,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,StringMethods,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\StringMethods.cs,EscapeForLike,The length of the statement  "					visitExpression(ConstantExpression.Constant(value.Replace(@"\"' @"\\").Replace("_"' "\\_").Replace("%"' "\\%")' typeof(string))); " is 129.
Long Statement,Revenj.DatabasePersistence.Postgres.Plugins.ProjectionSimplifications,CountProjection,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ProjectionSimplifications\CountProjection.cs,TryMatch,The length of the statement  "				&& (sq.QueryModel.ResultOperators[0] is CountResultOperator || sq.QueryModel.ResultOperators[0] is LongCountResultOperator) " is 123.
Long Statement,Revenj.DatabasePersistence.Postgres.Plugins.QuerySimplifications,ContainsSubquery,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\QuerySimplifications\ContainsSubquery.cs,Simplify,The length of the statement  "				: exp + " = ANY(" + (pe != null ? query.Context.Name + "\"" + pe.Name + "\"" : parts.GetSqlExpression(parts.MainFrom.FromExpression)) + ")"; " is 140.
Long Statement,Revenj.DatabasePersistence.Postgres.Plugins.QuerySimplifications,ContainsSubquery,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\QuerySimplifications\ContainsSubquery.cs,FormatInQuery,The length of the statement  "					? exp + " = " + Revenj.DatabasePersistence.Postgres.NpgsqlTypes.TypeConverter.Convert(query.MainFrom.ItemType' array[0]) " is 120.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration,QueryExecutor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryExecutor.cs,ExecuteScalar,The length of the statement  "			var seedAggregate = queryModel.ResultOperators.LastOrDefault(it => it is AggregateFromSeedResultOperator) as AggregateFromSeedResultOperator; " is 141.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration,QueryExecutor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryExecutor.cs,ExecuteScalar,The length of the statement  "			var aggregate = queryModel.ResultOperators.LastOrDefault(it => it is AggregateResultOperator) as AggregateResultOperator; " is 121.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration,QueryExecutor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryExecutor.cs,ExecuteSingle,The length of the statement  "			return returnDefaultWhenEmpty ? ExecuteCollection<T>(queryModel).SingleOrDefault() : ExecuteCollection<T>(queryModel).Single(); " is 127.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration,SelectSubqueryData,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\SelectSubqueryData.cs,Create,The length of the statement  "				selects.Add(new KeyValuePair<IQuerySource' Func<object' BufferedTextReader' object>>(factory.QuerySource' factory.Instancer)); " is 126.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,GetFromPart,The length of the statement  "				sb.AppendFormat("FROM {0}"' GetQuerySourceFromExpression(MainFrom.ItemName' MainFrom.ItemType' MainFrom.FromExpression)); " is 121.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,GetInnerFromPart,The length of the statement  "			sb.AppendFormat(" FROM {0}"' GetQuerySourceFromExpression(MainFrom.ItemName' MainFrom.ItemType' MainFrom.FromExpression)); " is 122.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,GetOrderPart,The length of the statement  "	"' OrderBy.Last().Orderings.Select(o => GetSqlExpression(o.Expression) + (o.OrderingDirection == OrderingDirection.Desc ? " DESC " : " ASC ")))); " is 145.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,GetQuerySourceFromExpression,The length of the statement  "					return "(" + subquery.BuildSqlString(true).Replace("\"" + sqe.QueryModel.MainFromClause.ItemName + "\""' "\"" + name + "\"") + ") \"" + name + "\""; " is 148.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,GetQuerySourceFromExpression,The length of the statement  "				var inner = string.Join(" UNION ALL "' nae.Expressions.Select(it => "SELECT {0} AS \"{1}\"".With(GetSqlExpression(it)' name))); " is 127.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,ProcessLimitAndOffsetOperators,The length of the statement  "				throw new NotSupportedException("Unsupported combination of limits and offsets in query. More than one offset and more than one limit found."); " is 143.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration.Visitors,ProjectorBuildingExpressionTreeVisitor<T>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Visitors\ProjectorBuildingExpressionTreeVisitor.cs,BuildProjector,The length of the statement  "			// The visitor gives us the projector's body. It simply replaces all QuerySourceReferenceExpressions with calls to ResultObjectMapping.GetObject<T>(). " is 150.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration.Visitors,ProjectorBuildingExpressionTreeVisitor<T>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Visitors\ProjectorBuildingExpressionTreeVisitor.cs,VisitQuerySourceReferenceExpression,The length of the statement  "			// Substitute generic parameter "T" of ResultObjectMapping.GetObject<T>() with type of query source item' then return a call to that method " is 139.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration.Visitors,SelectGeneratorExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Visitors\SelectExpressionTreeVisitor.cs,VisitSubQueryExpression,The length of the statement  "			var projector = (IExecuteFunc)Activator.CreateInstance(typeof(GenericProjection<>).MakeGenericType(selector.Type)' model); " is 122.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration.Visitors,SqlGeneratorExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Visitors\SqlGeneratorExpressionTreeVisitor.cs,VisitConstantExpression,The length of the statement  "					SqlExpression.Append('\'').Append(value).Append("'::\"").Append(type.Namespace).Append("\".\"").Append(type.Name).Append('"'); " is 126.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration.Visitors,SqlGeneratorExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Visitors\SqlGeneratorExpressionTreeVisitor.cs,VisitMethodCallExpression,The length of the statement  "			var attr = expression.Method.GetCustomAttributes(typeof(DatabaseFunctionAttribute)' false) as DatabaseFunctionAttribute[]; " is 122.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration.Visitors,SubqueryGeneratorQueryModelVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Visitors\SubqueryGeneratorQueryModelVisitor.cs,ParseSubquery,The length of the statement  "			var visitor = new SubqueryGeneratorQueryModelVisitor(parentQuery' canQueryInMemory' queryModel.SelectClause.Selector' context); " is 127.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration.Visitors,SubquerySelectExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Visitors\SubquerySelectExpressionTreeVisitor.cs,VisitMemberAssignment,The length of the statement  "				Query.Selects[cnt].Sql = "\"{0}\" AS \"{1}\"".With(Query.Selects[cnt].Name' Query.ConverterFactory.GetName(memberAssigment.Member)); " is 132.
Long Statement,Revenj.DatabasePersistence.Postgres.QueryGeneration.Visitors,SubquerySelectExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Visitors\SubquerySelectExpressionTreeVisitor.cs,CreateUnhandledItemException,The length of the statement  "			var message = string.Format("The expression '{0}' (type: {1}) is not supported by this LINQ provider."' itemText' typeof(T)); " is 125.
Long Statement,Remotion.Linq.Clauses,FromClauseBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\FromClauseBase.cs,ToString,The length of the statement  "			var result = string.Format("from {0} {1} in {2}"' ItemType.Name' ItemName' FormattingExpressionTreeVisitor.Format(FromExpression)); " is 131.
Long Statement,Remotion.Linq.Clauses,Ordering,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\Ordering.cs,ToString,The length of the statement  "			return FormattingExpressionTreeVisitor.Format(Expression) + (OrderingDirection == OrderingDirection.Asc ? " asc" : " desc"); " is 124.
Long Statement,Remotion.Linq.Clauses,QuerySourceMapping,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\QuerySourceMapping.cs,ReplaceMapping,The length of the statement  "				throw new InvalidOperationException("Query source has not been associated with an expression' cannot replace its mapping."); " is 124.
Long Statement,Remotion.Linq.Clauses,ResultOperatorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\ResultOperatorBase.cs,InvokeExecuteMethod,The length of the statement  "				var message = string.Format("Cannot call method '{0}' on input of type '{1}': {2}"' method.Name' input.GetType()' ex.Message); " is 126.
Long Statement,Remotion.Linq.Clauses.ExpressionTreeVisitors,AccessorFindingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\ExpressionTreeVisitors\AccessorFindingExpressionTreeVisitor.cs,FindAccessorLambda,The length of the statement  "					string.Format("The inputParameter's type '{0}' must match the fullExpression's type '{1}'."' fullExpression.Type' inputParameter.Type)' " is 135.
Long Statement,Remotion.Linq.Clauses.ExpressionTreeVisitors,AccessorFindingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\ExpressionTreeVisitors\AccessorFindingExpressionTreeVisitor.cs,FindAccessorLambda,The length of the statement  "					"The given expression '{0}' does not contain the searched expression '{1}' in a nested NewExpression with member assignments or a " " is 131.
Long Statement,Remotion.Linq.Clauses.ExpressionTreeVisitors,ReferenceReplacingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\ExpressionTreeVisitors\ReferenceReplacingExpressionTreeVisitor.cs,ReplaceClauseReferences,The length of the statement  "			return new ReferenceReplacingExpressionTreeVisitor(querySourceMapping' throwOnUnmappedReferences).VisitExpression(expression); " is 126.
Long Statement,Remotion.Linq.Clauses.ExpressionTreeVisitors,ReferenceReplacingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\ExpressionTreeVisitors\ReferenceReplacingExpressionTreeVisitor.cs,VisitQuerySourceReferenceExpression,The length of the statement  "				var message = "Cannot replace reference to clause '" + expression.ReferencedQuerySource.ItemName + "'' there is no mapped expression."; " is 135.
Long Statement,Remotion.Linq.Clauses.ExpressionTreeVisitors,ReferenceReplacingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\ExpressionTreeVisitors\ReferenceReplacingExpressionTreeVisitor.cs,VisitSubQueryExpression,The length of the statement  "			expression.QueryModel.TransformExpressions(ex => ReplaceClauseReferences(ex' _querySourceMapping' _throwOnUnmappedReferences)); " is 127.
Long Statement,Remotion.Linq.Clauses.ExpressionTreeVisitors,ReverseResolvingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\ExpressionTreeVisitors\ReverseResolvingExpressionTreeVisitor.cs,VisitQuerySourceReferenceExpression,The length of the statement  "				var accessorLambda = AccessorFindingExpressionTreeVisitor.FindAccessorLambda(expression' _itemExpression' _lambdaParameter); " is 124.
Long Statement,Remotion.Linq.Clauses.ExpressionTreeVisitors,ReverseResolvingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\ExpressionTreeVisitors\ReverseResolvingExpressionTreeVisitor.cs,VisitQuerySourceReferenceExpression,The length of the statement  "					"Cannot create a LambdaExpression that retrieves the value of '{0}' from items with a structure of '{1}'. The item expression does not " " is 136.
Long Statement,Remotion.Linq.Clauses.ResultOperators,AggregateFromSeedResultOperator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\ResultOperators\AggregateFromSeedResultOperator.cs,GetOutputDataInfo,The length of the statement  "					"The seed expression and the aggregating function don't have matching types. The seed is of type '{0}'' but the function aggregates '{1}'."' " is 140.
Long Statement,Remotion.Linq.Clauses.ResultOperators,AggregateFromSeedResultOperator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\ResultOperators\AggregateFromSeedResultOperator.cs,GetOutputDataInfo,The length of the statement  "			var resultTransformedType = OptionalResultSelector != null ? OptionalResultSelector.Type.GetGenericArguments()[0] : null; " is 121.
Long Statement,Remotion.Linq.Clauses.ResultOperators,ConcatResultOperator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\ResultOperators\ConcatResultOperator.cs,GetOutputDataInfo,The length of the statement  "			return new StreamedSequenceInfo(typeof(IQueryable<>).MakeGenericType(_itemType)' new QuerySourceReferenceExpression(this)); " is 123.
Long Statement,Remotion.Linq.Clauses.ResultOperators,DefaultIfEmptyResultOperator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\ResultOperators\DefaultIfEmptyResultOperator.cs,ExecuteInMemory,The length of the statement  "				OptionalDefaultValue != null ? sequence.DefaultIfEmpty((T)GetConstantOptionalDefaultValue()) : sequence.DefaultIfEmpty(); " is 121.
Long Statement,Remotion.Linq.Clauses.ResultOperators,GroupResultOperator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\ResultOperators\GroupResultOperator.cs,ExecuteGroupingInMemory,The length of the statement  "			var keySelectorLambda = ReverseResolvingExpressionTreeVisitor.ReverseResolve(input.DataInfo.ItemExpression' KeySelector); " is 121.
Long Statement,Remotion.Linq.Clauses.ResultOperators,GroupResultOperator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\ResultOperators\GroupResultOperator.cs,ExecuteGroupingInMemory,The length of the statement  "			var elementSelectorLambda = ReverseResolvingExpressionTreeVisitor.ReverseResolve(input.DataInfo.ItemExpression' ElementSelector); " is 129.
Long Statement,Remotion.Linq.Clauses.ResultOperators,GroupResultOperator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\ResultOperators\GroupResultOperator.cs,GetOutputDataInfo,The length of the statement  "			return new StreamedSequenceInfo(typeof(IQueryable<>).MakeGenericType(ItemType)' new QuerySourceReferenceExpression(this)); " is 122.
Long Statement,Remotion.Linq.Clauses.ResultOperators,SequenceTypePreservingResultOperatorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\ResultOperators\SequenceTypePreservingResultOperatorBase.cs,GetOutputDataInfo,The length of the statement  "			return new StreamedSequenceInfo(typeof(IQueryable<>).MakeGenericType(inputSequenceInfo.ResultItemType)' inputSequenceInfo.ItemExpression); " is 138.
Long Statement,Remotion.Linq.Clauses.ResultOperators,UnionResultOperator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\ResultOperators\UnionResultOperator.cs,GetOutputDataInfo,The length of the statement  "			return new StreamedSequenceInfo(typeof(IQueryable<>).MakeGenericType(_itemType)' new QuerySourceReferenceExpression(this)); " is 123.
Long Statement,Remotion.Linq.Clauses.StreamedData,StreamedScalarValueInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\StreamedData\StreamedScalarValueInfo.cs,ExecuteQueryModel,The length of the statement  "			// wrap executeMethod into a delegate instead of calling Invoke in order to allow for exceptions that are bubbled up correctly " is 126.
Long Statement,Remotion.Linq.Clauses.StreamedData,StreamedScalarValueInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\StreamedData\StreamedScalarValueInfo.cs,ExecuteQueryModel,The length of the statement  "			var func = (Func<QueryModel' IQueryExecutor' object>)Delegate.CreateDelegate(typeof(Func<QueryModel' IQueryExecutor' object>)' this' executeMethod); " is 148.
Long Statement,Remotion.Linq.Clauses.StreamedData,StreamedSequenceInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\StreamedData\StreamedSequenceInfo.cs,MakeClosedGenericExecuteMethod,The length of the statement  "				throw new ArgumentException("GenericMethodDefinition must have exactly one generic parameter."' "genericMethodDefinition"); " is 123.
Long Statement,Remotion.Linq.Clauses.StreamedData,StreamedSequenceInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\StreamedData\StreamedSequenceInfo.cs,ExecuteQueryModel,The length of the statement  "			// wrap executeMethod into a delegate instead of calling Invoke in order to allow for exceptions that are bubbled up correctly " is 126.
Long Statement,Remotion.Linq.Clauses.StreamedData,StreamedSequenceInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\StreamedData\StreamedSequenceInfo.cs,ExecuteQueryModel,The length of the statement  "				(Func<QueryModel' IQueryExecutor' IEnumerable>)Delegate.CreateDelegate(typeof(Func<QueryModel' IQueryExecutor' IEnumerable>)' this' executeMethod); " is 147.
Long Statement,Remotion.Linq.Clauses.StreamedData,StreamedSingleValueInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\StreamedData\StreamedSingleValueInfo.cs,ExecuteQueryModel,The length of the statement  "			// wrap executeMethod into a delegate instead of calling Invoke in order to allow for exceptions that are bubbled up correctly " is 126.
Long Statement,Remotion.Linq.Clauses.StreamedData,StreamedSingleValueInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\StreamedData\StreamedSingleValueInfo.cs,ExecuteQueryModel,The length of the statement  "			var func = (Func<QueryModel' IQueryExecutor' object>)Delegate.CreateDelegate(typeof(Func<QueryModel' IQueryExecutor' object>)' this' executeMethod); " is 148.
Long Statement,Remotion.Linq.Clauses.StreamedData,StreamedValue,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\StreamedData\StreamedValue.cs,GetTypedValue,The length of the statement  "				string message = string.Format("Cannot retrieve the current value as type '{0}' because it is null."' typeof(T).FullName); " is 122.
Long Statement,Remotion.Linq.Clauses.StreamedData,StreamedValueInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\StreamedData\StreamedValueInfo.cs,AdjustDataType,The length of the statement  "				var message = string.Format("'{0}' cannot be used as the new data type for a value of type '{1}'."' dataType' DataType); " is 120.
Long Statement,Remotion.Linq.Clauses.StreamedData,StreamedValueInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Clauses\StreamedData\StreamedValueInfo.cs,MakeClosedGenericExecuteMethod,The length of the statement  "				throw new ArgumentException("GenericMethodDefinition must have exactly one generic parameter."' "genericMethodDefinition"); " is 123.
Long Statement,Remotion.Linq.Collections,ObservableCollectionExtensions,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Collections\ObservableCollectionExtensions.cs,AsChangeResistantEnumerableWithIndex,The length of the statement  "			using (var enumerator = (ChangeResistantObservableCollectionEnumerator<T>)collection.AsChangeResistantEnumerable().GetEnumerator()) " is 131.
Long Statement,Remotion.Linq,DefaultQueryProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\DefaultQueryProvider.cs,CheckQueryableType,The length of the statement  "					"Expected the generic type definition of an implementation of IQueryable<T> with exactly one type argument' but found {0} arguments on '{1}."' " is 142.
Long Statement,Remotion.Linq,QueryModel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\QueryModel.cs,GetOutputDataInfo,The length of the statement  "				.Aggregate((IStreamedDataInfo)SelectClause.GetOutputDataInfo()' (current' resultOperator) => resultOperator.GetOutputDataInfo(current)); " is 136.
Long Statement,Remotion.Linq,QueryModel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\QueryModel.cs,Clone,The length of the statement  "			clone.TransformExpressions(ex => CloningExpressionTreeVisitor.AdjustExpressionAfterCloning(ex' cloneContext.QuerySourceMapping)); " is 129.
Long Statement,Remotion.Linq,QueryModelBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\QueryModelBuilder.cs,AddClause,The length of the statement  "				"Cannot add clause of type '{0}' to a query model. Only instances of IBodyClause' MainFromClause' or ISelectGroupClause are supported."' " is 136.
Long Statement,Remotion.Linq.Parsing,ExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitor.cs,IsUnknownNonExtensionExpression,The length of the statement  "			return !IsSupportedStandardExpression(expression) && !IsExtensionExpression(expression) && !IsRelinqExpression(expression); " is 123.
Long Statement,Remotion.Linq.Parsing,ExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitor.cs,VisitAndConvert,The length of the statement  "					"When called from '{0}'' expressions of type '{1}' can only be replaced with other non-null expressions of type '{2}'."' " is 120.
Long Statement,Remotion.Linq.Parsing,ExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitor.cs,VisitList,The length of the statement  "					throw new NotSupportedException("The current list only supports objects of type '" + typeof(T).Name + "' as its elements."); " is 124.
Long Statement,Remotion.Linq.Parsing,ExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitor.cs,VisitUnknownNonExtensionExpression,The length of the statement  "			var message = string.Format("Expression type '{0}' is not supported by this {1}."' expression.GetType().Name' GetType().Name); " is 126.
Long Statement,Remotion.Linq.Parsing,ExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitor.cs,VisitBinaryExpression,The length of the statement  "				return Expression.MakeBinary(expression.NodeType' newLeft' newRight' expression.IsLiftedToNull' expression.Method' newConversion); " is 130.
Long Statement,Remotion.Linq.Parsing,ExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitor.cs,VisitLambdaExpression,The length of the statement  "			ReadOnlyCollection<ParameterExpression> newParameters = VisitAndConvert(expression.Parameters' "VisitLambdaExpression"); " is 120.
Long Statement,Remotion.Linq.Parsing,ExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitor.cs,VisitNewExpression,The length of the statement  "					return Expression.New(expression.Constructor' AdjustArgumentsForNewExpression(newArguments' expression.Members)' expression.Members); " is 133.
Long Statement,Remotion.Linq.Parsing,ExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitor.cs,VisitListInitExpression,The length of the statement  "				throw new NotSupportedException("ListInitExpressions only support non-null instances of type 'NewExpression' as their NewExpression member."); " is 142.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitExtensionExpression,The length of the statement  "				return VisitUnhandledItem<ExtensionExpression' Expression>(expression' "VisitExtensionExpression"' BaseVisitExtensionExpression); " is 129.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitUnknownNonExtensionExpression,The length of the statement  "			return VisitUnhandledItem<Expression' Expression>(expression' "VisitUnknownNonExtensionExpression"' BaseVisitUnknownNonExtensionExpression); " is 140.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitBinaryExpression,The length of the statement  "			return VisitUnhandledItem<BinaryExpression' Expression>(expression' "VisitBinaryExpression"' BaseVisitBinaryExpression); " is 120.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitTypeBinaryExpression,The length of the statement  "			return VisitUnhandledItem<TypeBinaryExpression' Expression>(expression' "VisitTypeBinaryExpression"' BaseVisitTypeBinaryExpression); " is 132.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitConstantExpression,The length of the statement  "			return VisitUnhandledItem<ConstantExpression' Expression>(expression' "VisitConstantExpression"' BaseVisitConstantExpression); " is 126.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitConditionalExpression,The length of the statement  "			return VisitUnhandledItem<ConditionalExpression' Expression>(expression' "VisitConditionalExpression"' BaseVisitConditionalExpression); " is 135.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitParameterExpression,The length of the statement  "			return VisitUnhandledItem<ParameterExpression' Expression>(expression' "VisitParameterExpression"' BaseVisitParameterExpression); " is 129.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitLambdaExpression,The length of the statement  "			return VisitUnhandledItem<LambdaExpression' Expression>(expression' "VisitLambdaExpression"' BaseVisitLambdaExpression); " is 120.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitMethodCallExpression,The length of the statement  "			return VisitUnhandledItem<MethodCallExpression' Expression>(expression' "VisitMethodCallExpression"' BaseVisitMethodCallExpression); " is 132.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitInvocationExpression,The length of the statement  "			return VisitUnhandledItem<InvocationExpression' Expression>(expression' "VisitInvocationExpression"' BaseVisitInvocationExpression); " is 132.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitMemberExpression,The length of the statement  "			return VisitUnhandledItem<MemberExpression' Expression>(expression' "VisitMemberExpression"' BaseVisitMemberExpression); " is 120.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitNewArrayExpression,The length of the statement  "			return VisitUnhandledItem<NewArrayExpression' Expression>(expression' "VisitNewArrayExpression"' BaseVisitNewArrayExpression); " is 126.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitMemberInitExpression,The length of the statement  "			return VisitUnhandledItem<MemberInitExpression' Expression>(expression' "VisitMemberInitExpression"' BaseVisitMemberInitExpression); " is 132.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitListInitExpression,The length of the statement  "			return VisitUnhandledItem<ListInitExpression' Expression>(expression' "VisitListInitExpression"' BaseVisitListInitExpression); " is 126.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitMemberAssignment,The length of the statement  "			return VisitUnhandledItem<MemberAssignment' MemberBinding>(memberAssigment' "VisitMemberAssignment"' BaseVisitMemberAssignment); " is 128.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitMemberMemberBinding,The length of the statement  "			return VisitUnhandledItem<MemberMemberBinding' MemberBinding>(binding' "VisitMemberMemberBinding"' BaseVisitMemberMemberBinding); " is 129.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitMemberListBinding,The length of the statement  "			return VisitUnhandledItem<MemberListBinding' MemberBinding>(listBinding' "VisitMemberListBinding"' BaseVisitMemberListBinding); " is 127.
Long Statement,Remotion.Linq.Parsing,ThrowingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ThrowingExpressionTreeVisitor.cs,VisitSubQueryExpression,The length of the statement  "			return VisitUnhandledItem<SubQueryExpression' Expression>(expression' "VisitSubQueryExpression"' BaseVisitSubQueryExpression); " is 126.
Long Statement,Remotion.Linq.Parsing,TupleExpressionBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\TupleExpressionBuilder.cs,GetExpressionsFromTuple,The length of the statement  "			while (tupleExpression.Type.IsGenericType && tupleExpression.Type.GetGenericTypeDefinition() == typeof(KeyValuePair<'>)) " is 120.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.MemberBindings,PropertyInfoBinding,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\MemberBindings\PropertyInfoBinding.cs,MatchesReadAccess,The length of the statement  "			if (methodInfo != null && ((PropertyInfo)BoundMember).CanRead && methodInfo == ((PropertyInfo)BoundMember).GetGetMethod()) " is 122.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors,PartialEvaluatingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\PartialEvaluatingExpressionTreeVisitor.cs,EvaluateSubtree,The length of the statement  "			Expression<Func<object>> lambdaWithoutParameters = Expression.Lambda<Func<object>>(Expression.Convert(subtree' typeof(object))); " is 128.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors,PartialEvaluatingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\PartialEvaluatingExpressionTreeVisitor.cs,EvaluateSubtree,The length of the statement  "				return new EvaluateResult { Continue = false' Result = Expression.Convert(Expression.Constant(Enum.ToObject(ua.Operand.Type' value))' ua.Type) }; " is 145.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors,PartialEvaluatingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\PartialEvaluatingExpressionTreeVisitor.cs,EvaluateSubtree,The length of the statement  "				return new EvaluateResult { Continue = false' Result = Expression.Convert(Expression.Constant(Enum.ToObject(ua.Operand.Type.GetGenericArguments()[0]' value))' ua.Type) }; " is 170.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors,SubQueryFindingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\SubQueryFindingExpressionTreeVisitor.cs,VisitExpression,The length of the statement  "			if (potentialQueryOperatorExpression != null && _nodeTypeProvider.IsRegistered(potentialQueryOperatorExpression.Method)) " is 120.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors,TransparentIdentifierRemovingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\TransparentIdentifierRemovingExpressionTreeVisitor.cs,ReplaceTransparentIdentifiers,The length of the statement  "				expressionAfterRemove = new TransparentIdentifierRemovingExpressionTreeVisitor().VisitExpression(expressionAfterRemove); " is 120.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation,ExpressionTransformerRegistry,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\ExpressionTransformerRegistry.cs,TransformExpression,The length of the statement  "						"A '{0}' with node type '{1}' cannot be handled by the IExpressionTransformer<{2}>. The transformer was probably registered for " " is 129.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,MemberAddingNewExpressionTransformerBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\MemberAddingNewExpressionTransformerBase.cs,GetMemberForNewExpression,The length of the statement  "			// In .NET 4' Expression.New (...) will convert the get method into a property. That way' the generated NewExpression will look exactly like " is 140.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,MethodCallExpressionTransformerAttribute,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\MethodCallExpressionTransformerAttribute.cs,GetExpressionTransformer,The length of the statement  "					"The method call transformer '{0}' has no public default constructor and therefore cannot be used with the MethodCallExpressionTransformerAttribute."' " is 150.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,NullableValueTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\NullableValueTransformer.cs,IsDeclaredByNullableType,The length of the statement  "			return memberInfo.DeclaringType.IsGenericType && memberInfo.DeclaringType.GetGenericTypeDefinition() == typeof(Nullable<>); " is 123.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,TupleNewExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\TupleNewExpressionTransformer.cs,GetMembers,The length of the statement  "			return arguments.Select((expr' i) => GetMemberForNewExpression(constructorInfo.DeclaringType' "Item" + (i + 1))).ToArray(); " is 123.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,VBCompareStringExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\VBCompareStringExpressionTransformer.cs,Transform,The length of the statement  "			if (leftSideAsMethodCallExpression != null && (IsVBOperator(leftSideAsMethodCallExpression.Method' c_vbCompareStringOperatorMethodName))) " is 137.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,VBCompareStringExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\VBCompareStringExpressionTransformer.cs,GetExpressionForNodeType,The length of the statement  "					binaryExpression = Expression.Equal(leftSideAsMethodCallExpression.Arguments[0]' leftSideAsMethodCallExpression.Arguments[1]); " is 126.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,VBCompareStringExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\VBCompareStringExpressionTransformer.cs,GetExpressionForNodeType,The length of the statement  "					binaryExpression = Expression.NotEqual(leftSideAsMethodCallExpression.Arguments[0]' leftSideAsMethodCallExpression.Arguments[1]); " is 129.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,VBCompareStringExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\VBCompareStringExpressionTransformer.cs,GetExpressionForNodeType,The length of the statement  "			var vbExpression = new VBStringComparisonExpression(methodCallExpression' (bool)leftSideArgument2AsConstantExpression.Value); " is 125.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,VBCompareStringExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\VBCompareStringExpressionTransformer.cs,GetExpressionForNodeType,The length of the statement  "				string.Format("Binary expression with node type '{0}' is not supported in a VB string comparison."' expression.NodeType)); " is 122.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,VBInformationIsNothingExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\VBInformationIsNothingExpressionTransformer.cs,IsVBIsNothing,The length of the statement  "			return operatorMethod.DeclaringType.FullName == c_vbInformationClassName && operatorMethod.Name == c_vbIsNothingMethodName; " is 123.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.TreeEvaluation,EvaluatableTreeFindingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\TreeEvaluation\EvaluatableTreeFindingExpressionTreeVisitor.cs,VisitExpression,The length of the statement  "			// To find these nodes' first assume that the current subtree is evaluatable iff it is one of the standard nodes. Store the evaluatability  " is 138.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.TreeEvaluation,EvaluatableTreeFindingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\TreeEvaluation\EvaluatableTreeFindingExpressionTreeVisitor.cs,VisitExpression,The length of the statement  "			// Then call the specific Visit... method for this expression. This will determine if this node by itself is not evaluatable by setting  " is 135.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.TreeEvaluation,EvaluatableTreeFindingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\TreeEvaluation\EvaluatableTreeFindingExpressionTreeVisitor.cs,VisitExpression,The length of the statement  "			// _isCurrentSubtreeEvaluatable to false if it isn't. It will also investigate the evaluatability info of the child nodes and set  " is 129.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.TreeEvaluation,EvaluatableTreeFindingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\TreeEvaluation\EvaluatableTreeFindingExpressionTreeVisitor.cs,VisitExpression,The length of the statement  "			_isCurrentSubtreeEvaluatable &= isParentNodeEvaluatable; // the _isCurrentSubtreeEvaluatable flag now relates to the parent node again " is 134.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.TreeEvaluation,EvaluatableTreeFindingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\TreeEvaluation\EvaluatableTreeFindingExpressionTreeVisitor.cs,VisitMemberInitExpression,The length of the statement  "			// Visit the NewExpression only if the List initializers is evaluatable. It makes no sense to evaluate the ListExpression if the initializers " is 141.
Long Statement,Remotion.Linq.Parsing.ExpressionTreeVisitors.TreeEvaluation,EvaluatableTreeFindingExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\TreeEvaluation\EvaluatableTreeFindingExpressionTreeVisitor.cs,VisitListInitExpression,The length of the statement  "			// Visit the NewExpression only if the List initializers is evaluatable. It makes no sense to evaluate the NewExpression if the initializers " is 140.
Long Statement,Remotion.Linq.Parsing.Structure,ExpressionTreeParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\ExpressionTreeParser.cs,ParseTree,The length of the statement  "					string.Format("Expressions of type void ('{0}') are not supported."' FormattingExpressionTreeVisitor.Format(expressionTree))); " is 126.
Long Statement,Remotion.Linq.Parsing.Structure,ExpressionTreeParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\ExpressionTreeParser.cs,ParseNonQueryOperatorExpression,The length of the statement  "					"Cannot parse expression '{0}' as it has an unsupported type. Only query sources (that is' expressions that implement IEnumerable) " " is 132.
Long Statement,Remotion.Linq.Parsing.Structure,MethodCallExpressionParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\MethodCallExpressionParser.cs,ProcessArgumentExpression,The length of the statement  "			// First' convert the argument expressions to their actual values - this unwraps ConstantantExpressions and UnaryExpressions " is 124.
Long Statement,Remotion.Linq.Parsing.Structure,MethodCallExpressionParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\MethodCallExpressionParser.cs,ProcessArgumentExpression,The length of the statement  "			var parametersWithSubQueriesDetected = SubQueryFindingExpressionTreeVisitor.Process(convertedParameters' _nodeTypeProvider); " is 124.
Long Statement,Remotion.Linq.Parsing.Structure,MethodCallExpressionParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\MethodCallExpressionParser.cs,UnwrapArgumentExpression,The length of the statement  "			// Each argument of a MethodCallExpression will either be a UnaryExpression/Quote' which represents an expression passed to a Queryable method' " is 143.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,AggregateExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\AggregateExpressionNode.cs,GetResolvedFunc,The length of the statement  "				r => Expression.Lambda(r.GetResolvedExpression(Func.Body' Func.Parameters[1]' clauseGenerationContext)' Func.Parameters[0])); " is 125.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,AggregateFromSeedExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\AggregateFromSeedExpressionNode.cs,GetResolvedFunc,The length of the statement  "				r => Expression.Lambda(r.GetResolvedExpression(Func.Body' Func.Parameters[1]' clauseGenerationContext)' Func.Parameters[0])); " is 125.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,AllExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\AllExpressionNode.cs,GetResolvedPredicate,The length of the statement  "			return _cachedPredicate.GetOrCreate(r => r.GetResolvedExpression(Predicate.Body' Predicate.Parameters[0]' clauseGenerationContext)); " is 132.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,CastExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\CastExpressionNode.cs,Resolve,The length of the statement  "			var expressionWithCast = ReplacingExpressionTreeVisitor.Replace(inputParameter' convertExpression' expressionToBeResolved); " is 123.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,DefaultIfEmptyExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\DefaultIfEmptyExpressionNode.cs,Resolve,The length of the statement  "			// this simply streams its input data to the output without modifying its structure' so we resolve by passing on the data to the previous node " is 142.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,DistinctExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\DistinctExpressionNode.cs,Resolve,The length of the statement  "			// this simply streams its input data to the output without modifying its structure' so we resolve by passing on the data to the previous node " is 142.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,ExceptExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\ExceptExpressionNode.cs,Resolve,The length of the statement  "			// this simply streams its input data to the output without modifying its structure' so we resolve by passing on the data to the previous node " is 142.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,ExpressionResolver,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\ExpressionResolver.cs,GetResolvedExpression,The length of the statement  "			resolvedExpression = TransparentIdentifierRemovingExpressionTreeVisitor.ReplaceTransparentIdentifiers(resolvedExpression); " is 122.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupByExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupByExpressionNode.cs,GetResolvedKeySelector,The length of the statement  "			return _cachedKeySelector.GetOrCreate(r => r.GetResolvedExpression(KeySelector.Body' KeySelector.Parameters[0]' clauseGenerationContext)); " is 138.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupByExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupByExpressionNode.cs,GetResolvedOptionalElementSelector,The length of the statement  "					r => r.GetResolvedExpression(OptionalElementSelector.Body' OptionalElementSelector.Parameters[0]' clauseGenerationContext)); " is 124.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupByExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupByExpressionNode.cs,CreateResultOperator,The length of the statement  "				resolvedElementSelector = Source.Resolve(KeySelector.Parameters[0]' KeySelector.Parameters[0]' clauseGenerationContext); " is 120.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupByWithResultSelectorExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupByWithResultSelectorExpressionNode.cs,CreateParseInfoWithGroupNode,The length of the statement  "			var simulatedParseInfo = new MethodCallExpressionParseInfo(parseInfo.AssociatedIdentifier' parseInfo.Source' simulatedGroupByCallWithoutResultSelector); " is 152.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupByWithResultSelectorExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupByWithResultSelectorExpressionNode.cs,CreateParseInfoWithGroupNode,The length of the statement  "			return new MethodCallExpressionParseInfo(parseInfo.AssociatedIdentifier' groupBySourceNode' parseInfo.ParsedExpression); " is 120.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupByWithResultSelectorExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupByWithResultSelectorExpressionNode.cs,CreateSelectorForSelectNode,The length of the statement  "			// If there is an element selector' the element type will be that returned by the element selector. Otherwise' it will be the type flowing into " is 143.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupByWithResultSelectorExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupByWithResultSelectorExpressionNode.cs,CreateSelectorForSelectNode,The length of the statement  "			var bodyWithGroupingAndKeyReplaced = MultiReplacingExpressionTreeVisitor.Replace(expressionMapping' resultSelector.Body); " is 121.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupJoinExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupJoinExpressionNode.cs,GetResolvedResultSelector,The length of the statement  "				QuerySourceExpressionNodeUtility.ReplaceParameterWithReference(this' ResultSelector.Parameters[1]' ResultSelector.Body' clauseGenerationContext)' " is 145.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupJoinExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupJoinExpressionNode.cs,Resolve,The length of the statement  "			// so we first resolve the result selector' then we substitute the result for the inputParameter in the expressionToBeResolved " is 126.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupJoinExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupJoinExpressionNode.cs,ApplyNodeSpecificSemantics,The length of the statement  "			var groupJoinClause = new GroupJoinClause(ResultSelector.Parameters[1].Name' ResultSelector.Parameters[1].Type' joinClause); " is 124.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,IntersectExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\IntersectExpressionNode.cs,Resolve,The length of the statement  "			// this simply streams its input data to the output without modifying its structure' so we resolve by passing on the data to the previous node " is 142.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,JoinExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\JoinExpressionNode.cs,GetResolvedResultSelector,The length of the statement  "				QuerySourceExpressionNodeUtility.ReplaceParameterWithReference(this' ResultSelector.Parameters[1]' ResultSelector.Body' clauseGenerationContext)' " is 145.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,JoinExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\JoinExpressionNode.cs,Resolve,The length of the statement  "			// so we first resolve the result selector' then we substitute the result for the inputParameter in the expressionToBeResolved " is 126.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,JoinExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\JoinExpressionNode.cs,ApplyNodeSpecificSemantics,The length of the statement  "			// The resolved inner key selector has a back-reference to the clause' so we need to create the clause with a dummy selector before we can  " is 138.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,MainSourceExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\MainSourceExpressionNode.cs,Apply,The length of the statement  "				throw new ArgumentException("QueryModel has to be null because MainSourceExpressionNode marks the start of a query."' "queryModel"); " is 132.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,MethodCallExpressionNodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\MethodCallExpressionNodeBase.cs,WrapQueryModel,The length of the statement  "			// change the Source of this node so that Resolve will later correctly go to the new main from clause we create for the sub query " is 129.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,MethodCallExpressionNodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\MethodCallExpressionNodeBase.cs,CreateResolveNotSupportedException,The length of the statement  "				GetType().Name + " does not support resolving of expressions' because it does not stream any data to the following node."); " is 123.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,MethodCallExpressionNodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\MethodCallExpressionNodeBase.cs,CreateOutputParameterNotSupportedException,The length of the statement  "				GetType().Name + " does not support creating a parameter for its output because it does not stream any data to the following node."); " is 133.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,MethodCallExpressionNodeFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\MethodCallExpressionNodeFactory.cs,CreateExpressionNode,The length of the statement  "					"Expression node type '{0}' contains too many constructors. It must only contain a single constructor' allowing null to be passed for any optional arguments."' " is 159.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,MethodCallExpressionNodeFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\MethodCallExpressionNodeFactory.cs,GetArgumentMismatchMessage,The length of the statement  "					"{0} If you tried to pass a delegate instead of a LambdaExpression' this is not supported because delegates are not parsable expressions."' " is 139.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,MethodCallExpressionNodeFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\MethodCallExpressionNodeFactory.cs,GetParameterArray,The length of the statement  "					"The constructor of expression node type '{0}' only takes {1} parameters' but you specified {2} (including the parse info parameter)."' " is 135.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,OfTypeExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\OfTypeExpressionNode.cs,Resolve,The length of the statement  "			var expressionWithCast = ReplacingExpressionTreeVisitor.Replace(inputParameter' convertExpression' expressionToBeResolved); " is 123.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,OrderByDescendingExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\OrderByDescendingExpressionNode.cs,GetResolvedKeySelector,The length of the statement  "			return _cachedSelector.GetOrCreate(r => r.GetResolvedExpression(KeySelector.Body' KeySelector.Parameters[0]' clauseGenerationContext)); " is 135.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,OrderByDescendingExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\OrderByDescendingExpressionNode.cs,Resolve,The length of the statement  "			// this simply streams its input data to the output without modifying its structure' so we resolve by passing on the data to the previous node " is 142.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,OrderByExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\OrderByExpressionNode.cs,GetResolvedKeySelector,The length of the statement  "			return _cachedSelector.GetOrCreate(r => r.GetResolvedExpression(KeySelector.Body' KeySelector.Parameters[0]' clauseGenerationContext)); " is 135.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,OrderByExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\OrderByExpressionNode.cs,Resolve,The length of the statement  "			// this simply streams its input data to the output without modifying its structure' so we resolve by passing on the data to the previous node " is 142.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,QuerySourceExpressionNodeUtility,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\QuerySourceExpressionNodeUtility.cs,GetQuerySourceForNode,The length of the statement  "					"Cannot retrieve an IQuerySource for the given {0}. Be sure to call Apply before calling methods that require IQuerySources' and pass in " " is 138.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,QuerySourceSetOperationExpressionNodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\QuerySourceSetOperationExpressionNodeBase.cs,Resolve,The length of the statement  "			// UnionResultOperator is a query source' so expressions resolve their input parameter with the UnionResultOperator created by this node. " is 137.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,QuerySourceSetOperationExpressionNodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\QuerySourceSetOperationExpressionNodeBase.cs,Resolve,The length of the statement  "			return QuerySourceExpressionNodeUtility.ReplaceParameterWithReference(this' inputParameter' expressionToBeResolved' clauseGenerationContext); " is 141.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,ResultOperatorExpressionNodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\ResultOperatorExpressionNodeBase.cs,WrapQueryModelAfterEndOfQuery,The length of the statement  "			// Result operators can safely be appended to the previous query model even after another result operator' so do not wrap the previous " is 134.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,ReverseExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\ReverseExpressionNode.cs,Resolve,The length of the statement  "			// this simply streams its input data to the output without modifying its structure' so we resolve by passing on the data to the previous node " is 142.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,SelectExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\SelectExpressionNode.cs,GetResolvedSelector,The length of the statement  "			return _cachedSelector.GetOrCreate(r => r.GetResolvedExpression(Selector.Body' Selector.Parameters[0]' clauseGenerationContext)); " is 129.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,SelectManyExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\SelectManyExpressionNode.cs,GetResolvedResultSelector,The length of the statement  "			// we resolve the selector by first substituting j by a QuerySourceReferenceExpression pointing back to us' before asking the previous node  " is 139.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,SelectManyExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\SelectManyExpressionNode.cs,GetResolvedResultSelector,The length of the statement  "						 QuerySourceExpressionNodeUtility.ReplaceParameterWithReference(this' ResultSelector.Parameters[1]' ResultSelector.Body' clauseGenerationContext)' " is 145.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,SelectManyExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\SelectManyExpressionNode.cs,Resolve,The length of the statement  "			// so we first resolve the result selector' then we substitute the result for the inputParameter in the expressionToBeResolved " is 126.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,SelectManyExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\SelectManyExpressionNode.cs,ApplyNodeSpecificSemantics,The length of the statement  "			var clause = new AdditionalFromClause(ResultSelector.Parameters[1].Name' ResultSelector.Parameters[1].Type' resolvedCollectionSelector); " is 136.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,SkipExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\SkipExpressionNode.cs,Resolve,The length of the statement  "			// this simply streams its input data to the output without modifying its structure' so we resolve by passing on the data to the previous node " is 142.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,TakeExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\TakeExpressionNode.cs,Resolve,The length of the statement  "			// this simply streams its input data to the output without modifying its structure' so we resolve by passing on the data to the previous node " is 142.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,ThenByDescendingExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\ThenByDescendingExpressionNode.cs,GetResolvedKeySelector,The length of the statement  "			return _cachedSelector.GetOrCreate(r => r.GetResolvedExpression(KeySelector.Body' KeySelector.Parameters[0]' clauseGenerationContext)); " is 135.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,ThenByDescendingExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\ThenByDescendingExpressionNode.cs,Resolve,The length of the statement  "			// this simply streams its input data to the output without modifying its structure' so we resolve by passing on the data to the previous node " is 142.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,ThenByDescendingExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\ThenByDescendingExpressionNode.cs,ApplyNodeSpecificSemantics,The length of the statement  "				throw new NotSupportedException("ThenByDescending expressions must follow OrderBy' OrderByDescending' ThenBy' or ThenByDescending expressions."); " is 145.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,ThenByExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\ThenByExpressionNode.cs,GetResolvedKeySelector,The length of the statement  "			return _cachedSelector.GetOrCreate(r => r.GetResolvedExpression(KeySelector.Body' KeySelector.Parameters[0]' clauseGenerationContext)); " is 135.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,ThenByExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\ThenByExpressionNode.cs,Resolve,The length of the statement  "			// this simply streams its input data to the output without modifying its structure' so we resolve by passing on the data to the previous node " is 142.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,ThenByExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\ThenByExpressionNode.cs,ApplyNodeSpecificSemantics,The length of the statement  "				throw new NotSupportedException("ThenByDescending expressions must follow OrderBy' OrderByDescending' ThenBy' or ThenByDescending expressions."); " is 145.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,WhereExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\WhereExpressionNode.cs,GetResolvedPredicate,The length of the statement  "			return _cachedPredicate.GetOrCreate(r => r.GetResolvedExpression(Predicate.Body' Predicate.Parameters[0]' clauseGenerationContext)); " is 132.
Long Statement,Remotion.Linq.Parsing.Structure.IntermediateModel,WhereExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\WhereExpressionNode.cs,Resolve,The length of the statement  "			// this simply streams its input data to the output without modifying its structure' so we resolve by passing on the data to the previous node " is 142.
Long Statement,Remotion.Linq.Parsing.Structure.NodeTypeProviders,MethodInfoBasedNodeTypeRegistry,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\NodeTypeProviders\MethodInfoBasedNodeTypeRegistry.cs,GetRegisterableMethodDefinition,The length of the statement  "			// return (MethodInfo) MethodBase.GetMethodFromHandle (genericMethodDefinition.MethodHandle' declaringTypeDefinition.TypeHandle); " is 129.
Long Statement,Remotion.Linq.Parsing.Structure.NodeTypeProviders,MethodInfoBasedNodeTypeRegistry,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\NodeTypeProviders\MethodInfoBasedNodeTypeRegistry.cs,GetRegisterableMethodDefinition,The length of the statement  "					"A generic method definition cannot be resolved for method '{0}' on type '{1}' because a distinct match is not possible. " " is 122.
Long Statement,Remotion.Linq.Parsing.Structure.NodeTypeProviders,MethodInfoBasedNodeTypeRegistry,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\NodeTypeProviders\MethodInfoBasedNodeTypeRegistry.cs,GetGenericMethodDefinitionCandidates,The length of the statement  "				.Where(c => c.Method.Name == referenceMethodDefinition.Name && c.SignatureTypes.Length == referenceMethodSignature.Length) " is 122.
Long Statement,Remotion.Linq.Parsing.Structure.NodeTypeProviders,MethodInfoBasedNodeTypeRegistry,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\NodeTypeProviders\MethodInfoBasedNodeTypeRegistry.cs,Register,The length of the statement  "						"Cannot register method '{0}' in closed generic type '{1}'' try to register its equivalent in the generic type definition instead."' " is 132.
Long Statement,Remotion.Linq.Transformations,SubQueryFromClauseFlattener,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Transformations\SubQueryFromClauseFlattener.cs,FlattenSubQuery,The length of the statement  "			queryModel.TransformExpressions(ex => ReferenceReplacingExpressionTreeVisitor.ReplaceClauseReferences(ex' innerSelectorMapping' false)); " is 136.
Long Statement,Remotion.Linq.Transformations,SubQueryFromClauseFlattener,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Transformations\SubQueryFromClauseFlattener.cs,FlattenSubQuery,The length of the statement  "			queryModel.TransformExpressions(ex => ReferenceReplacingExpressionTreeVisitor.ReplaceClauseReferences(ex' innerBodyClauseMapping' false)); " is 138.
Long Statement,Remotion.Linq.Utilities,ReflectionUtility,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Utilities\ReflectionUtility.cs,GetMethod,The length of the statement  "			throw new ArgumentException(string.Format("Cannot extract a method from the given expression '{0}'."' wrappedCall.Body)' "wrappedCall"); " is 136.
Long Statement,Remotion.Linq.Utilities,ReflectionUtility,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Utilities\ReflectionUtility.cs,CheckTypeIsClosedGenericIEnumerable,The length of the statement  "				var message = string.Format("Expected a closed generic type implementing IEnumerable<T>' but found '{0}'."' enumerableType); " is 124.
Long Statement,Remotion.Linq.Utilities,ReflectionUtility,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Utilities\ReflectionUtility.cs,GetItemTypeOfClosedGenericIEnumerable,The length of the statement  "				var message = string.Format("Expected a closed generic type implementing IEnumerable<T>' but found '{0}'."' enumerableType); " is 124.
Long Statement,Remotion.Linq.Utilities,ReflectionUtility,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Utilities\ReflectionUtility.cs,TryGetItemTypeOfClosedGenericIEnumerable,The length of the statement  "			if (possibleEnumerableTypeInfo.IsGenericType && possibleEnumerableTypeInfo.GetGenericTypeDefinition() == typeof(IEnumerable<>)) " is 127.
Long Statement,Revenj.Extensibility,AspectRepository,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Aspects\AspectRepository.cs,Initialize,The length of the statement  "				AroundMethodAspectDictionary = new Dictionary<KeyValuePair<Type' MethodInfo>' List<Func<object' object[]' Func<object[]' object>' object>>>(); " is 142.
Long Statement,Revenj.Extensibility,AspectRepository,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Aspects\AspectRepository.cs,Initialize,The length of the statement  "				AfterMethodAspectDictionary = new Dictionary<KeyValuePair<Type' MethodInfo>' List<Func<object' object[]' object' object>>>(); " is 125.
Long Statement,Revenj.Extensibility,AspectRepository,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Aspects\AspectRepository.cs,GetInterceptors,The length of the statement  "			var around = CreateInterceptorDictionary<Func<object' object[]' Func<object[]' object>' object>>(type' a => a.AroundMethodAspectDictionary); " is 140.
Long Statement,Revenj.Extensibility,AspectRepository,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Aspects\AspectRepository.cs,GetInterceptors,The length of the statement  "			var after = CreateInterceptorDictionary<Func<object' object[]' object' object>>(type' a => a.AfterMethodAspectDictionary); " is 122.
Long Statement,Revenj.Extensibility,AutofacObjectFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Container\AutofacObjectFactory.cs,CreateScope,The length of the statement  "			factory.AutofacBuilders.Add(cb => cb.RegisterInstance(factory).As<IObjectFactory>().As<IServiceProvider>().ExternallyOwned()); " is 126.
Long Statement,Revenj.Extensibility,PluginsProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Plugins\PluginsProvider.cs,FindPlugins,The length of the statement  "					throw new FrameworkException("Error loading plugins for " + typeof(TService).FullName + ". " + ex.InnerException.Message' ex.InnerException); " is 141.
Long Statement,Revenj.Extensibility.Autofac.Builder,RegistrationBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Builder\RegistrationBuilder.cs,CreateRegistration,The length of the statement  "			//TODO: this probably protects against some invalid registrations' but since none of the tests fail' let's ignore it for now " is 124.
Long Statement,Revenj.Extensibility.Autofac.Builder,RegistrationBuilder<TLimit;TActivatorData;TRegistrationStyle>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Builder\RegistrationBuilderOfTLAR.cs,As,The length of the statement  "			return As(new TypedService(typeof(TService1))' new TypedService(typeof(TService2))' new TypedService(typeof(TService3))); " is 121.
Long Statement,Revenj.Extensibility.Autofac.Builder,RegistrationBuilder<TLimit;TActivatorData;TRegistrationStyle>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Builder\RegistrationBuilderOfTLAR.cs,PropertiesAutowired,The length of the statement  "				RegistrationData.ActivatingHandlers.Add((s' e) => injector.InjectProperties(e.Context' e.Instance' !preserveSetValues)); " is 120.
Long Statement,Revenj.Extensibility.Autofac.Configuration,TypeManipulation,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Configuration\TypeManipulation.cs,ChangeToCompatibleType,The length of the statement  "                throw new ConfigurationErrorsException(String.Format("Cannot convert type from {0} to {1}."' value.GetType()' destinationType)); " is 128.
Long Statement,Revenj.Extensibility.Autofac,RegistrationExtensions,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\RegistrationExtensions.cs,WithMetadataFrom,The length of the statement  "			var metadataProperties = attrType.GetProperties(BindingFlags.GetProperty | BindingFlags.Public | BindingFlags.Instance); " is 120.
Long Statement,Revenj.Extensibility.Autofac,RegistrationExtensions,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\RegistrationExtensions.cs,WithMetadataFrom,The length of the statement  "					throw new ArgumentException(string.Format("A metadata attribute of type {0} was not found on {1}."' typeof(TAttribute)' t)); " is 124.
Long Statement,Revenj.Extensibility.Autofac,RegistrationExtensions,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\RegistrationExtensions.cs,WithMetadataFrom,The length of the statement  "					throw new ArgumentException(string.Format("More than one metadata attribute of type {0} was found on {1}."' typeof(TAttribute)' t)); " is 132.
Long Statement,Revenj.Extensibility.Autofac,RegistrationExtensions,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\RegistrationExtensions.cs,RegisterGenericDecorator,The length of the statement  "			return OpenGenericRegistrationExtensions.RegisterGenericDecorator(builder' decoratorType' decoratedServiceType' fromKey' toKey); " is 128.
Long Statement,Revenj.Extensibility.Autofac,RegistrationExtensions,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\RegistrationExtensions.cs,RegisterDecorator,The length of the statement  "			return LightweightAdapterRegistrationExtensions.RegisterDecorator<TService>(builder' (c' p' f) => decorator(c' f)' fromKey' toKey); " is 131.
Long Statement,Revenj.Extensibility.Autofac,RegistrationExtensions,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\RegistrationExtensions.cs,RegisterDecorator,The length of the statement  "			return LightweightAdapterRegistrationExtensions.RegisterDecorator<TService>(builder' (c' p' f) => decorator(f)' fromKey' toKey); " is 128.
Long Statement,Revenj.Extensibility.Autofac,TypeExtensions,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\TypeExtensions.cs,IsClosedTypeOf,The length of the statement  "				throw new ArgumentException(string.Format("The type '{0}' is not an open generic class or interface type."' openGeneric.FullName)); " is 131.
Long Statement,Revenj.Extensibility.Autofac.Core.Activators.Reflection,ConstructorParameterBinding,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Activators\Reflection\ConstructorParameterBinding.cs,Instantiate,The length of the statement  "					string.Format(CultureInfo.CurrentCulture' "An exception was thrown while invoking the constructor '{0}' on type '{1}'."' TargetConstructor' TargetConstructor.DeclaringType.Name)' ex.InnerException); " is 198.
Long Statement,Revenj.Extensibility.Autofac.Core.Activators.Reflection,ConstructorParameterBinding,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Activators\Reflection\ConstructorParameterBinding.cs,Instantiate,The length of the statement  "					string.Format(CultureInfo.CurrentCulture' "An exception was thrown while invoking the constructor '{0}' on type '{1}'."' TargetConstructor' TargetConstructor.DeclaringType.Name)' ex); " is 183.
Long Statement,Revenj.Extensibility.Autofac.Core.Activators.Reflection,MatchingSignatureConstructorSelector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Activators\Reflection\MatchingSignatureConstructorSelector.cs,SelectConstructorBinding,The length of the statement  "				throw new DependencyResolutionException(string.Format("The required constructor on type '{0}'  with signature '{1}' is unavailable."' targetTypeName' signature)); " is 162.
Long Statement,Revenj.Extensibility.Autofac.Core.Activators.Reflection,MatchingSignatureConstructorSelector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Activators\Reflection\MatchingSignatureConstructorSelector.cs,SelectConstructorBinding,The length of the statement  "			throw new DependencyResolutionException(string.Format("More than one constructor matches the signature '{0}'."' signature)); " is 124.
Long Statement,Revenj.Extensibility.Autofac.Core.Activators.Reflection,MostParametersConstructorSelector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Activators\Reflection\MostParametersConstructorSelector.cs,SelectConstructorBinding,The length of the statement  "                .Select(binding => new { Binding = binding' ConstructorParameterLength = binding.TargetConstructor.GetParameters().Length }); " is 125.
Long Statement,Revenj.Extensibility.Autofac.Core.Activators.Reflection,MostParametersConstructorSelector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Activators\Reflection\MostParametersConstructorSelector.cs,SelectConstructorBinding,The length of the statement  "                "Cannot choose between multiple constructors with equal length {0} on type '{1}'. Select the constructor explicitly' with the UsingConstructor() configuration method' when the component is registered."' " is 202.
Long Statement,Revenj.Extensibility.Autofac.Core.Activators.Reflection,ReflectionActivator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Activators\Reflection\ReflectionActivator.cs,GetFactory,The length of the statement  "			var _defaultParameters = _configuredParameters.Concat(new Parameter[] { new AutowiringParameter()' new DefaultValueParameter() }); " is 130.
Long Statement,Revenj.Extensibility.Autofac.Core.Activators.Reflection,ReflectionActivator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Activators\Reflection\ReflectionActivator.cs,GetFactory,The length of the statement  "				throw new DependencyResolutionException(string.Format("No constructors on type '{0}' can be found with '{1}'."' _implementationType' _constructorFinder)); " is 154.
Long Statement,Revenj.Extensibility.Autofac.Core.Activators.Reflection,ReflectionActivator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Activators\Reflection\ReflectionActivator.cs,GetBindingFailureMessage,The length of the statement  "				"None of the constructors found with '{0}' on type '{1}' can be invoked with the available services and parameters:{2}"' " is 120.
Long Statement,Revenj.Extensibility.Autofac.Core.Lifetime,LifetimeScope,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Lifetime\LifetimeScope.cs,CheckNotDisposed,The length of the statement  "				throw new ObjectDisposedException("Instances cannot be resolved and nested lifetimes cannot be created from this LifetimeScope as it has already been disposed."' innerException: null); " is 184.
Long Statement,Revenj.Extensibility.Autofac.Core.Lifetime,MatchingScopeLifetime,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Lifetime\MatchingScopeLifetime.cs,FindScope,The length of the statement  "				CultureInfo.CurrentCulture' "No scope with a Tag matching '{0}' is visible from the scope in which the instance was requested. This generally indicates that a component registered as per-HTTP request is being reqested by a SingleInstance() component (or a similar scenario.) Under the web integration always request dependencies from the DependencyResolver.Current or ILifetimeScopeProvider.RequestLifetime' never from the container itself."' _matchExpressionCode)); " is 466.
Long Statement,Revenj.Extensibility.Autofac.Core.Registration,ComponentRegistry,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Registration\ComponentRegistry.cs,UpdateInitialisedAdapters,The length of the statement  "				"[Autofac] Component '{0}' provides services that have already been adapted. Consider refactoring to ContainerBuilder.Build() rather than Update()."' " is 149.
Long Statement,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,CreateFuncGenerator,The length of the statement  "			var activatorParams = new[] { activatorServiceParam' activatorComponentRegistrationParam' activatorContextParam' activatorParamsParam }; " is 136.
Long Statement,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,CreateFuncGenerator,The length of the statement  "			var actualParams = new Expression[] { activatorServiceParam' actualInfoParam' actualPmParam' activatorComponentRegistrationParam' activatorContextParam' activatorParamsParam }; " is 176.
Long Statement,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,CreateFuncGenerator,The length of the statement  "			var activator = Expression.Lambda<Func<Service' IComponentRegistration' IComponentContext' IEnumerable<Parameter>' Delegate>>(methodCall' activatorParams); " is 155.
Long Statement,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,CreateGenerator,The length of the statement  "			var activatorParams = new[] { activatorServiceParam' activatorComponentRegistrationParam' activatorContextParam' activatorParamsParam }; " is 136.
Long Statement,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,CreateGenerator,The length of the statement  "			var resolveCall = makeResolveCall(activatorServiceParam' activatorComponentRegistrationParam' activatorContextParam' resolveParameterArray); " is 140.
Long Statement,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,CreateGenerator,The length of the statement  "			var activator = Expression.Lambda<Func<Service' IComponentRegistration' IComponentContext' IEnumerable<Parameter>' Delegate>>(creator' activatorParams); " is 152.
Long Statement,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The length of the statement  "					MapParameters(info' pm' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15)); " is 121.
Long Statement,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeServiceCall,The length of the statement  "					MapParameters(info' pm' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg16)); " is 121.
Long Statement,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The length of the statement  "					MapParameters(info' pm' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15)) " is 120.
Long Statement,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,MakeLookupCall,The length of the statement  "					MapParameters(info' pm' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' arg16)) " is 127.
Long Statement,Revenj.Extensibility.Autofac.Features.GeneratedFactories,GeneratedFactoryRegistrationSource,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\GeneratedFactoryRegistrationSource.cs,RegistrationsFor,The length of the statement  "						var rb = RegistrationBuilder.ForDelegate(ts.ServiceType' (c' p) => factory.Value.GenerateFactory(resultTypeService' r.Target' c' p)) " is 132.
Long Statement,Revenj.Extensibility.Autofac.Features.LazyDependencies,LazyRegistrationSource,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\LazyDependencies\LazyRegistrationSource.cs,GetOrCreate,The length of the statement  "				var lambda = Expression.Lambda<Func<Service' IComponentRegistration' IComponentRegistration>>(body' new[] { paramService' paramCR }); " is 133.
Long Statement,Revenj.Extensibility.Autofac.Features.OpenGenerics,OpenGenericDecoratorRegistrationSource,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\OpenGenerics\OpenGenericDecoratorRegistrationSource.cs,RegistrationsFor,The length of the statement  "			if (OpenGenericServiceBinder.TryBindServiceType(service' _registrationData.Services' _activatorData.ImplementationType' out constructedImplementationType' out services)) " is 169.
Long Statement,Revenj.Extensibility.Autofac.Features.OpenGenerics,OpenGenericRegistrationSource,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\OpenGenerics\OpenGenericRegistrationSource.cs,RegistrationsFor,The length of the statement  "			if (OpenGenericServiceBinder.TryBindServiceType(service' _registrationData.Services' _activatorData.ImplementationType' out constructedImplementationType' out services)) " is 169.
Long Statement,Revenj.Extensibility.Autofac.Features.OpenGenerics,OpenGenericServiceBinder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\OpenGenerics\OpenGenericServiceBinder.cs,TryMapImplementationGenericArguments,The length of the statement  "			var serviceArgumentDefinitionToArgumentMapping = serviceArgumentDefinitions.Zip(serviceGenericArguments' (a' b) => new KeyValuePair<Type' Type>(a' b)); " is 151.
Long Statement,Revenj.Extensibility.Autofac.Features.OpenGenerics,OpenGenericServiceBinder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\OpenGenerics\OpenGenericServiceBinder.cs,TryFindServiceArgumentForImplementationArgumentDefinition,The length of the statement  "					implementationGenericArgumentDefinition' argdef.Key.GetGenericArguments().Zip(argdef.Value.GetGenericArguments()' (a' b) => new KeyValuePair<Type' Type>(a' b)))) " is 161.
Long Statement,Revenj.Extensibility.Autofac.Features.OpenGenerics,OpenGenericServiceBinder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\OpenGenerics\OpenGenericServiceBinder.cs,EnforceBindable,The length of the statement  "						throw new ArgumentException(string.Format("The implementation type '{0}' does not support the interface '{1}'."' implementationType' service)); " is 143.
Long Statement,Revenj.Extensibility.Autofac.Features.OpenGenerics,OpenGenericServiceBinder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\OpenGenerics\OpenGenericServiceBinder.cs,EnforceBindable,The length of the statement  "					if (!Traverse.Across(implementationType' t => t.BaseType).Any(t => IsCompatibleGenericClassDefinition(t' service.ServiceType))) " is 127.
Long Statement,Revenj.Extensibility.Autofac.Features.OpenGenerics,OpenGenericServiceBinder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\OpenGenerics\OpenGenericServiceBinder.cs,EnforceBindable,The length of the statement  "						throw new ArgumentException(string.Format("The service '{1}' is not assignable from implementation type '{0}'."' implementationType' service)); " is 143.
Long Statement,Revenj.Extensibility.Autofac.Features.OpenGenerics,OpenGenericServiceBinder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\OpenGenerics\OpenGenericServiceBinder.cs,IsCompatibleGenericClassDefinition,The length of the statement  "			return implementor == serviceType || implementor.IsGenericType && implementor.GetGenericTypeDefinition() == serviceType; " is 120.
Long Statement,Revenj.Extensibility.Autofac.Integration.Mef,ExportConfigurationBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Integration\Mef\ExportConfigurationBuilder.cs,As,The length of the statement  "            WithMetadata(CompositionConstants.ExportTypeIdentityMetadataName' AttributedModelServices.GetTypeIdentity(typeof(TContract))); " is 126.
Long Statement,Revenj.Extensibility.Autofac.Integration.Mef,ExportConfigurationBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Integration\Mef\ExportConfigurationBuilder.cs,AsNamed,The length of the statement  "            WithMetadata(CompositionConstants.ExportTypeIdentityMetadataName' AttributedModelServices.GetTypeIdentity(typeof(TExportedValue))); " is 131.
Long Statement,Revenj.Extensibility.Autofac.Integration.Mef,RegistrationExtensions,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Integration\Mef\RegistrationExtensions.cs,FindType,The length of the statement  "				throw new InvalidOperationException("Multiple packages (" + all.Count() + ") for " + exportTypeIdentity + " found in plugins: " + string.Join("' "' all.Take(3))); " is 162.
Long Statement,Revenj.Extensibility.Autofac.Integration.Mef,RegistrationExtensions,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Integration\Mef\RegistrationExtensions.cs,AttachExport,The length of the statement  "			var contractService = new ContractBasedService(exportConfiguration.ContractName' exportConfiguration.ExportTypeIdentity); " is 121.
Long Statement,Revenj.Extensibility.Autofac.Integration.Mef,RegistrationExtensions,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Integration\Mef\RegistrationExtensions.cs,SetImports,The length of the statement  "					throw new NotSupportedException(string.Format("Import '{0}' is not supported: only contract-based imports are supported."' import)); " is 132.
Long Statement,Revenj.Extensibility.Autofac.Util,Enforce,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Util\Enforce.cs,ArgumentElementNotNull,The length of the statement  "				throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "The sequence provided as argument '{0}' cannot contain null elements."' name)); " is 150.
Long Statement,Mono.Math,ModulusRing,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BarrettReduction,The length of the statement  "				Kernel.MultiplyMod2p32pmod (q3.data' (int)kPlusOne' (int)q3.length - (int)kPlusOne' n.data' 0' (int)n.length' r2.data' 0' (int)kPlusOne); " is 137.
Long Statement,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,Header,The length of the statement  "			// pkcs7.SignerInfo.AuthenticatedAttributes.Add (Attribute (spcStatementType' new ASN1 (0x30' ASN1Convert.FromOid (commercialCodeSigning).GetBytes ()))); " is 153.
Long Statement,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The length of the statement  "				t1 = h + (((e >> 6) | (e << 26)) ^ ((e >> 11) | (e << 21)) ^ ((e >> 25) | (e << 7))) + ((e & f) ^ (~e & g)) + K1[i] + buff[i]; " is 126.
Long Statement,Mono.Security.Interface,Alert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Interface\Alert.cs,GetAlertMessage,The length of the statement  "					return "A message could not be decoded because some field was out of the specified range or the length of the message was incorrect."; " is 134.
Long Statement,Mono.Security.Interface,Alert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Interface\Alert.cs,GetAlertMessage,The length of the statement  "					return "TLSCiphertext decrypted in an invalid way: either it wasn`t an even multiple of the block length or its padding values' when checked' weren`t correct."; " is 160.
Long Statement,Mono.Security.Interface,Alert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Interface\Alert.cs,GetAlertMessage,The length of the statement  "					return "Handshake cryptographic operation failed' including being unable to correctly verify a signature' decrypt a key exchange' or validate finished message."; " is 161.
Long Statement,Mono.Security.Interface,Alert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Interface\Alert.cs,GetAlertMessage,The length of the statement  "					return "Negotiation has failed specifically because the server requires ciphers more secure than those supported by the client."; " is 129.
Long Statement,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerCertificate.cs,LocalValidation,The length of the statement  "			// http://groups.google.ca/groups?q=IIS+server+certificate+chain&hl=en&lr=&ie=UTF-8&oe=UTF-8&selm=85058s%24avd%241%40nnrp1.deja.com&rnum=3 " is 138.
Long Statement,Mono.Security.Protocol.Tls,Alert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\Alert.cs,GetAlertMessage,The length of the statement  "					return "A message could not be decoded because some field was out of the specified range or the length of the message was incorrect."; " is 134.
Long Statement,Mono.Security.Protocol.Tls,Alert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\Alert.cs,GetAlertMessage,The length of the statement  "					return "TLSCiphertext decrypted in an invalid way: either it wasn`t an even multiple of the block length or its padding values' when checked' weren`t correct."; " is 160.
Long Statement,Mono.Security.Protocol.Tls,Alert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\Alert.cs,GetAlertMessage,The length of the statement  "					return "Handshake cryptographic operation failed' including being unable to correctly verify a signature' decrypt a key exchange' or validate finished message."; " is 161.
Long Statement,Mono.Security.Protocol.Tls,Alert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\Alert.cs,GetAlertMessage,The length of the statement  "					return "Negotiation has failed specifically because the server requires ciphers more secure than those supported by the client."; " is 129.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			scs.Add((0x00 << 0x08) | 0x35' "TLS_RSA_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 32' 32' 256' 16' 16); " is 182.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			scs.Add((0x00 << 0x08) | 0x2F' "TLS_RSA_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 16' 16' 128' 16' 16); " is 182.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			scs.Add((0x00 << 0x08) | 0x0A' "TLS_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 24' 24' 168' 8' 8); " is 182.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			scs.Add((0x00 << 0x08) | 0x05' "TLS_RSA_WITH_RC4_128_SHA"' CipherAlgorithmType.Rc4' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' false' 16' 16' 128' 0' 0); " is 172.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			scs.Add((0x00 << 0x08) | 0x04' "TLS_RSA_WITH_RC4_128_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' false' false' 16' 16' 128' 0' 0); " is 171.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			scs.Add((0x00 << 0x08) | 0x09' "TLS_RSA_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 8' 8' 56' 8' 8); " is 168.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x03' "TLS_RSA_EXPORT_WITH_RC4_40_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' true' false' 5' 16' 40' 0' 0); " is 177.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x06' "TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5"' CipherAlgorithmType.Rc2' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' true' true' 5' 16' 40' 8' 8); " is 180.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x08' "TLS_RSA_EXPORT_WITH_DES40_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' true' true' 5' 8' 40' 8' 8); " is 179.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x60' "TLS_RSA_EXPORT_WITH_RC4_56_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' true' false' 7' 16' 56' 0' 0); " is 177.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x61' "TLS_RSA_EXPORT_WITH_RC2_CBC_56_MD5"' CipherAlgorithmType.Rc2' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' true' true' 7' 16' 56' 8' 8); " is 180.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x62' "TLS_RSA_EXPORT_WITH_DES_CBC_56_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' true' true' 8' 8' 64' 8' 8); " is 180.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x64' "TLS_RSA_EXPORT_WITH_RC4_56_SHA"' CipherAlgorithmType.Rc4' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' true' false' 7' 16' 56' 0' 0); " is 178.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add(0' "TLS_NULL_WITH_NULL_NULL"' CipherAlgorithmType.None' HashAlgorithmType.None' ExchangeAlgorithmType.None' true' false' 0' 0' 0' 0' 0); " is 147.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x01' "TLS_RSA_WITH_NULL_MD5"' CipherAlgorithmType.None' HashAlgorithmType.Md5' ExchangeAlgorithmType.None' true' false' 0' 0' 0' 0' 0); " is 164.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x02' "TLS_RSA_WITH_NULL_SHA"' CipherAlgorithmType.None' HashAlgorithmType.Sha1' ExchangeAlgorithmType.None' true' false' 0' 0' 0' 0' 0); " is 165.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x03' "TLS_RSA_EXPORT_WITH_RC4_40_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' true' false' 5' 16' 40' 0' 0); " is 177.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x05' "TLS_RSA_WITH_RC4_128_SHA"' CipherAlgorithmType.Rc4' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaSign' false' false' 16' 16' 128' 0' 0); " is 175.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x04' "TLS_RSA_WITH_RC4_128_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaSign' false' false' 16' 16' 128' 0' 0);			 " is 174.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x06' "TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5"' CipherAlgorithmType.Rc2' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' true' true' 5' 16' 40' 8' 8); " is 180.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x07' "TLS_RSA_WITH_IDEA_CBC_SHA"' "IDEA"' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaSign' false' true' 16' 16' 128' 8' 8); " is 158.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x08' "TLS_RSA_EXPORT_WITH_DES40_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' true' true' 5' 8' 40' 8' 8); " is 179.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x09' "TLS_RSA_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaSign' false' true' 8' 8' 56' 8' 8); " is 171.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x0A' "TLS_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaSign' false' true' 24' 24' 168' 8' 8); " is 185.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x0B' "TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' true' true' 5' 8' 40' 8' 8); " is 188.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x0C' "TLS_DH_DSS_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' false' ExchangeAlgorithmType.DiffieHellman' true' 8' 8' 56' 8' 8); " is 180.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x0D' "TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 24' 24' 168' 8' 8); " is 194.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x0E' "TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' true' true' 5' 8' 40' 8' 8); " is 188.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x0F' "TLS_DH_RSA_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' false' ExchangeAlgorithmType.DiffieHellman' true' 8' 8' 56' 8' 8); " is 180.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x10' "TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 24' 24' 168' 8' 8); " is 194.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x11' "TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' true' true' 5' 8' 40' 8' 8); " is 189.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x12' "TLS_DHE_DSS_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 8' 8' 56' 8' 8); " is 181.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x13' "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 24' 24' 168' 8' 8); " is 195.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x14' "TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' true' true' 5' 8' 40' 8' 8); " is 189.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x15' "TLS_DHE_RSA_WITH_DES_CBC_SHA"' HashAlgorithmType.Sha1' CipherAlgorithmType.Des' false' ExchangeAlgorithmType.DiffieHellman' true' 8' 8' 56' 8' 8); " is 181.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x16' "TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 24' 24' 168' 8' 8); " is 195.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x17' "TLS_DH_anon_EXPORT_WITH_RC4_40_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.DiffieHellman' true' false' 5' 16' 40' 0' 0); " is 187.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x18' "TLS_DH_anon_WITH_RC4_128_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' false' ExchangeAlgorithmType.DiffieHellman' false' 16' 16' 128' 0' 0); " is 184.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x19' "TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 5' 8' 40' 8' 8); " is 190.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x1A' "TLS_DH_anon_WITH_DES_CBC_SHA"' "DES4"' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 8' 8' 56' 8' 8); " is 164.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x1B' "TLS_DH_anon_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 24' 24' 168' 8' 8); " is 195.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x2F' "TLS_RSA_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaSign' false' true' 16' 16' 128' 16' 16); " is 185.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x30' "TLS_DH_DSS_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 16' 16' 128' 8' 8); " is 192.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x31' "TLS_DH_RSA_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 16' 16' 128' 8' 8); " is 192.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x32' "TLS_DHE_DSS_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 16' 16' 128' 8' 8); " is 193.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x33' "TLS_DHE_RSA_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 16' 16' 128' 8' 8); " is 193.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x34' "TLS_DH_anon_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 16' 16' 128' 8' 8); " is 193.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x35' "TLS_RSA_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaSign' false' true' 32' 32' 256' 16' 16); " is 185.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x36' "TLS_DH_DSS_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 32' 32' 256' 16' 16); " is 194.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x37' "TLS_DH_RSA_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 32' 32' 256' 16' 16); " is 194.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x38' "TLS_DHE_DSS_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 32' 32' 256' 16' 16); " is 195.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x39' "TLS_DHE_RSA_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 32' 32' 256' 16' 16); " is 195.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x3A' "TLS_DH_anon_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 32' 32' 256' 16' 16); " is 195.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			scs.Add((0x00 << 0x08) | 0x35' "SSL_RSA_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 32' 32' 256' 16' 16); " is 182.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			scs.Add((0x00 << 0x08) | 0x2F' "SSL_RSA_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 16' 16' 128' 16' 16); " is 182.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			scs.Add((0x00 << 0x08) | 0x0A' "SSL_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 24' 24' 168' 8' 8); " is 182.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			scs.Add((0x00 << 0x08) | 0x05' "SSL_RSA_WITH_RC4_128_SHA"' CipherAlgorithmType.Rc4' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' false' 16' 16' 128' 0' 0); " is 172.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			scs.Add((0x00 << 0x08) | 0x04' "SSL_RSA_WITH_RC4_128_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' false' false' 16' 16' 128' 0' 0); " is 171.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			scs.Add((0x00 << 0x08) | 0x09' "SSL_RSA_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 8' 8' 56' 8' 8); " is 168.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x03' "SSL_RSA_EXPORT_WITH_RC4_40_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' true' false' 5' 16' 40' 0' 0); " is 177.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x06' "SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5"' CipherAlgorithmType.Rc2' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' true' true' 5' 16' 40' 8' 8); " is 180.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x08' "SSL_RSA_EXPORT_WITH_DES40_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' true' true' 5' 8' 40' 8' 8); " is 179.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x60' "SSL_RSA_EXPORT_WITH_RC4_56_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' true' false' 7' 16' 56' 0' 0); " is 177.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x61' "SSL_RSA_EXPORT_WITH_RC2_CBC_56_MD5"' CipherAlgorithmType.Rc2' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' true' true' 7' 16' 56' 8' 8); " is 180.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x62' "SSL_RSA_EXPORT_WITH_DES_CBC_56_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' true' true' 8' 8' 64' 8' 8); " is 180.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x64' "SSL_RSA_EXPORT_WITH_RC4_56_SHA"' CipherAlgorithmType.Rc4' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' true' false' 7' 16' 56' 0' 0); " is 178.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x01' "SSL_RSA_WITH_NULL_MD5"' CipherAlgorithmType.None' HashAlgorithmType.Md5' ExchangeAlgorithmType.None' true' false' 0' 0' 0' 0' 0); " is 164.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x02' "SSL_RSA_WITH_NULL_SHA"' CipherAlgorithmType.None' HashAlgorithmType.Sha1' true' ExchangeAlgorithmType.None' false' 0' 0' 0' 0' 0); " is 165.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x03' "SSL_RSA_EXPORT_WITH_RC4_40_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' true' false' 5' 16' 40' 0' 0); " is 177.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x05' "SSL_RSA_WITH_RC4_128_SHA"' CipherAlgorithmType.Rc4' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaSign' false' false' 16' 16' 128' 0' 0); " is 175.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x04' "SSL_RSA_WITH_RC4_128_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaSign' false' false' 16' 16' 128' 0' 0);			 " is 174.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x06' "SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5"' CipherAlgorithmType.Rc2' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' true' true' 5' 16' 40' 8' 8); " is 180.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x07' "SSL_RSA_WITH_IDEA_CBC_SHA"' "IDEA"' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaSign' false' true' 16' 16' 128' 8' 8); " is 158.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x08' "SSL_RSA_EXPORT_WITH_DES40_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyEx' true' true' 5' 8' 40' 8' 8); " is 180.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x09' "SSL_RSA_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaSign' false' true' 8' 8' 56' 8' 8); " is 171.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x0A' "SSL_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaSign' false' true' 24' 24' 168' 8' 8); " is 185.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x0B' "SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' true' true' 5' 8' 40' 8' 8); " is 188.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x0C' "SSL_DH_DSS_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 8' 8' 56' 8' 8); " is 180.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x0D' "SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 24' 24' 168' 8' 8); " is 194.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x0E' "SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' true' true' 5' 8' 40' 8' 8); " is 188.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x0F' "SSL_DH_RSA_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 8' 8' 56' 8' 8); " is 180.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x10' "SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 24' 24' 168' 8' 8); " is 194.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x11' "SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' true' true' 5' 8' 40' 8' 8); " is 189.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x12' "SSL_DHE_DSS_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 8' 8' 56' 8' 8); " is 181.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x13' "SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 24' 24' 168' 8' 8); " is 195.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x14' "SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' true' true' 5' 8' 40' 8' 8); " is 189.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x15' "SSL_DHE_RSA_WITH_DES_CBC_SHA"' HashAlgorithmType.Sha1' CipherAlgorithmType.Des' ExchangeAlgorithmType.DiffieHellman' false' true' 8' 8' 56' 8' 8); " is 181.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x16' "SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 24' 24' 168' 8' 8); " is 195.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x17' "SSL_DH_anon_EXPORT_WITH_RC4_40_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.DiffieHellman' true' false' 5' 16' 40' 0' 0); " is 187.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x18' "SSL_DH_anon_WITH_RC4_128_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' false' ExchangeAlgorithmType.DiffieHellman' false' 16' 16' 128' 0' 0); " is 184.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x19' "SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 5' 8' 40' 8' 8); " is 190.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x1A' "SSL_DH_anon_WITH_DES_CBC_SHA"' "DES4"' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 8' 8' 56' 8' 8); " is 164.
Long Statement,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The length of the statement  "			// scs.Add((0x00 << 0x08) | 0x1B' "SSL_DH_anon_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.DiffieHellman' false' true' 24' 24' 168' 8' 8); " is 195.
Long Statement,Mono.Security.Protocol.Tls,ClientRecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\ClientRecordProtocol.cs,createServerHandshakeMessage,The length of the statement  "					bool check = context.AbbreviatedHandshake ? (last == HandshakeType.ServerHello) : (last == HandshakeType.ServerHelloDone); " is 122.
Long Statement,Mono.Security.Protocol.Tls,ClientRecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\ClientRecordProtocol.cs,createServerHandshakeMessage,The length of the statement  "			throw new TlsException (AlertDescription.HandshakeFailiure' String.Format ("Protocol error' unexpected protocol transition from {0} to {1}"' last' type)); " is 154.
Long Statement,Mono.Security.Protocol.Tls,RecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\RecordProtocol.cs,BeginReceiveRecord,The length of the statement  "			record.BeginRead(internalResult.InitialBuffer' 0' internalResult.InitialBuffer.Length' new AsyncCallback(InternalReceiveRecordCallback)' internalResult); " is 153.
Long Statement,Mono.Security.Protocol.Tls,RecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\RecordProtocol.cs,SendAlert,The length of the statement  "				ex = new IOException (string.Format ("Error while sending TLS Alert ({0}:{1}): {2}"' alert.Level' alert.Description' ex)' alertEx); " is 131.
Long Statement,Mono.Security.Protocol.Tls,RecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\RecordProtocol.cs,BeginSendRecord,The length of the statement  "			this.BeginSendRecord(msg.ContentType' msg.EncodeMessage()' new AsyncCallback(InternalSendRecordCallback)' internalResult); " is 122.
Long Statement,Mono.Security.Protocol.Tls,ServerRecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\ServerRecordProtocol.cs,createClientHandshakeMessage,The length of the statement  "			throw new TlsException (AlertDescription.HandshakeFailiure' String.Format ("Protocol error' unexpected protocol transition from {0} to {1}"' last' type)); " is 154.
Long Statement,Mono.Security.Protocol.Tls,SslClientStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslClientStream.cs,RaiseClientCertificateSelection,The length of the statement  "			return base.RaiseLocalCertificateSelection(clientCertificates' serverCertificate' targetHost' serverRequestedCertificates); " is 123.
Long Statement,Mono.Security.Protocol.Tls,SslStreamBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,BeginRead,The length of the statement  "				throw new ArgumentOutOfRangeException("count is less than the length of buffer minus the value of the offset parameter."); " is 122.
Long Statement,Mono.Security.Protocol.Tls,SslStreamBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,BeginWrite,The length of the statement  "				throw new ArgumentOutOfRangeException("count is less than the length of buffer minus the value of the offset parameter."); " is 122.
Long Statement,Mono.Security.Protocol.Tls,SslStreamBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,Read,The length of the statement  "				throw new ArgumentOutOfRangeException("count is less than the length of buffer minus the value of the offset parameter."); " is 122.
Long Statement,Mono.Security.Protocol.Tls,SslStreamBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,Write,The length of the statement  "				throw new ArgumentOutOfRangeException("count is less than the length of buffer minus the value of the offset parameter."); " is 122.
Long Statement,Mono.Security.X509,X509Store,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Store.cs,Import,The length of the statement  "			if (_storePath.StartsWith (X509StoreManager.LocalMachinePath) || _storePath.StartsWith(X509StoreManager.NewLocalMachinePath)) " is 125.
Long Statement,Mono.Security.X509,X509Store,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Store.cs,LoadCertificate,The length of the statement  "			if (_storePath.StartsWith (X509StoreManager.LocalMachinePath) || _storePath.StartsWith(X509StoreManager.NewLocalMachinePath)) " is 125.
Long Statement,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,IsAssemblyStrongnamed,The length of the statement  "						string config = System.Runtime.InteropServices.RuntimeEnvironment.SystemConfigurationFile;//Environment.GetMachineConfigPath (); " is 128.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,FillName,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,FillName,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,FillName,The length of the statement  "			if (nextToken != ':') throw new SerializationException("Expecting ':' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 139.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,CalcHash,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,CalcHash,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeObjectCollection,The length of the statement  "			if (nextToken != '{') throw new SerializationException("Expecting '{' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 139.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeObjectCollection,The length of the statement  "				if (GetNextToken(sr) != '{') throw new SerializationException("Expecting '{' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 146.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeObjectCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 122.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 122.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeNullableObjectCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + PositionInStream(sr) + " for string value. Expecting '\"' or null"); " is 143.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeNullableObjectCollection,The length of the statement  "			else if (nextToken != '{') throw new SerializationException("Expecting '{' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 144.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeNullableObjectCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + PositionInStream(sr) + " for string value. Expecting '\"' or null"); " is 143.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeNullableObjectCollection,The length of the statement  "				else if (nextToken != '{') throw new SerializationException("Expecting '{' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 144.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeNullableObjectCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 122.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + PositionInStream(sr) + " for string value. Expecting '\"' or null"); " is 143.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + PositionInStream(sr) + " for string value. Expecting '\"' or null"); " is 143.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeNullableCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeNullableStructCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + PositionInStream(sr) + " for string value. Expecting '\"' or null"); " is 143.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeNullableStructCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + PositionInStream(sr) + " for string value. Expecting '\"' or null"); " is 143.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,DeserializeNullableStructCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 122.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Skip,The length of the statement  "				else throw new SerializationException("Expecting '\"' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 123.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Skip,The length of the statement  "				if (nextToken != ':') throw new SerializationException("Expecting ':' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 139.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Skip,The length of the statement  "					else throw new SerializationException("Expecting '\"' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 123.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Skip,The length of the statement  "					if (nextToken != ':') throw new SerializationException("Expecting ':' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 139.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Skip,The length of the statement  "				if (nextToken != '}') throw new SerializationException("Expecting '}' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 139.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Skip,The length of the statement  "				if (nextToken != ']') throw new SerializationException("Expecting ']' at position " + PositionInStream(sr) + ". Found " + (char)nextToken); " is 139.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Memorize,The length of the statement  "				else throw new SerializationException("Expecting '\"' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 141.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Memorize,The length of the statement  "				if (nextToken != ':') throw new SerializationException("Expecting ':' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Memorize,The length of the statement  "					else throw new SerializationException("Expecting '\"' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 141.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Memorize,The length of the statement  "					if (nextToken != ':') throw new SerializationException("Expecting ':' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Memorize,The length of the statement  "				if (nextToken != '}') throw new SerializationException("Expecting '}' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Memorize,The length of the statement  "				if (nextToken != ']') throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization,XmlSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\XmlSerialization.cs,Deserialize,The length of the statement  "Root element should embed type attribute with class name or you should provide appropriate type T to Deserialize<T> method. " is 123.
Long Statement,Revenj.Serialization.Json.Converters,BinaryConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BinaryConverter.cs,Deserialize,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 158.
Long Statement,Revenj.Serialization.Json.Converters,BinaryConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BinaryConverter.cs,Deserialize,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + JsonSerialization.PositionInStream(sr) + ". Found end of stream."); " is 154.
Long Statement,Revenj.Serialization.Json.Converters,BinaryConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BinaryConverter.cs,DeserializeStream,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 158.
Long Statement,Revenj.Serialization.Json.Converters,BinaryConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BinaryConverter.cs,DeserializeStream,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + JsonSerialization.PositionInStream(sr) + ". Found end of stream."); " is 154.
Long Statement,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,Deserialize,The length of the statement  "			throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for boolean value. Expecting true or false"); " is 158.
Long Statement,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for boolean value. Expecting true or false"); " is 163.
Long Statement,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for boolean value. Expecting true or false"); " is 163.
Long Statement,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeCollection,The length of the statement  "			else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for boolean value. Expecting true or false"); " is 163.
Long Statement,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for boolean value. Expecting true or false"); " is 163.
Long Statement,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for boolean value. Expecting true or false"); " is 163.
Long Statement,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for boolean value. Expecting true or false"); " is 163.
Long Statement,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for boolean value. Expecting true' false or null"); " is 169.
Long Statement,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for boolean value. Expecting true' false or null"); " is 169.
Long Statement,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for boolean value. Expecting true' false or null"); " is 169.
Long Statement,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeNullableCollection,The length of the statement  "			else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for boolean value. Expecting true' false or null"); " is 169.
Long Statement,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for boolean value. Expecting true' false or null"); " is 169.
Long Statement,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for boolean value. Expecting true' false or null"); " is 169.
Long Statement,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for boolean value. Expecting true' false or null"); " is 169.
Long Statement,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for boolean value. Expecting true or false"); " is 163.
Long Statement,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeNullableCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The length of the statement  "			int nano = (int)(value.Ticks - new DateTime(value.Year' value.Month' value.Day' value.Hour' value.Minute' value.Second' value.Kind).Ticks); " is 139.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The length of the statement  "			int nano = (int)(value.ToUniversalTime().Ticks - new DateTime(value.Year' value.Month' value.Day' value.Hour' value.Minute' value.Second' DateTimeKind.Utc).Ticks); " is 163.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeDate,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 158.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeDate,The length of the statement  "				if ((nextToken = sr.Read()) != '-') throw new SerializationException("Expecting '-' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 171.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeDate,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 158.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeDateCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeDateNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for DateTime value. Expecting date or null"); " is 163.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeDateNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for DateTime value. Expecting date or null"); " is 163.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeDateNullableCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 158.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The length of the statement  "									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48); " is 120.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The length of the statement  "									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48); " is 146.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The length of the statement  "									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48); " is 171.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The length of the statement  "									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48; " is 189.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The length of the statement  "					return DateTime.Parse(new string(buffer' 0' i)' Invariant' DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal); " is 126.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The length of the statement  "				throw new SerializationException("Error parsing timestamp at " + JsonSerialization.PositionInStream(sr) + ". " + ex.Message' ex); " is 129.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestampCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestampNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for DateTime value. Expecting timestamp or null"); " is 168.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestampNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for DateTime value. Expecting timestamp or null"); " is 168.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestampNullableCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeOffset,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 158.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeOffset,The length of the statement  "					return DateTimeOffset.Parse(new string(buffer' 0' i)' Invariant' DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal); " is 132.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeOffset,The length of the statement  "				throw new SerializationException("Error parsing timestamp at " + JsonSerialization.PositionInStream(sr) + ". " + ex.Message' ex); " is 129.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeOffsetCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeOffsetNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for DateTime value. Expecting timestamp or null"); " is 168.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeOffsetNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for DateTime value. Expecting timestamp or null"); " is 168.
Long Statement,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeOffsetNullableCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,DictionaryConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DictionaryConverter.cs,Deserialize,The length of the statement  "			if (nextToken != '{') throw new SerializationException("Expecting '{' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization.Json.Converters,DictionaryConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DictionaryConverter.cs,Deserialize,The length of the statement  "			if (nextToken != ':') throw new SerializationException("Expecting ':' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization.Json.Converters,DictionaryConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DictionaryConverter.cs,Deserialize,The length of the statement  "				if (nextToken != ':') throw new SerializationException("Expecting ':' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization.Json.Converters,DictionaryConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DictionaryConverter.cs,Deserialize,The length of the statement  "			if (nextToken != '}') throw new SerializationException("Expecting '}' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeColorCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeColorNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for Color value. Expecting number' string or null"); " is 170.
Long Statement,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeColorNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for Color value. Expecting number' string or null"); " is 170.
Long Statement,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeColorNullableCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeRectangleF,The length of the statement  "			if (nextToken != '{') throw new SerializationException("Expecting '{' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeRectangleF,The length of the statement  "			if (nextToken != ':') throw new SerializationException("Expecting ':' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeRectangleF,The length of the statement  "					throw new SerializationException("Expecting 'X'' 'Y'' 'Width' or 'Height' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + name); " is 150.
Long Statement,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeRectangleF,The length of the statement  "				if (nextToken != ':') throw new SerializationException("Expecting ':' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeRectangleF,The length of the statement  "						throw new SerializationException("Expecting 'X'' 'Y'' 'Width' or 'Height' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + name); " is 150.
Long Statement,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeRectangleF,The length of the statement  "			if (nextToken != '}') throw new SerializationException("Expecting '}' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeRectangleFCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeRectangleFNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for Color value. Expecting number' string or null"); " is 170.
Long Statement,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeRectangleFNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for Color value. Expecting number' string or null"); " is 170.
Long Statement,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeRectangleFNullableCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Deserialize,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 158.
Long Statement,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Deserialize,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 158.
Long Statement,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,DeserializeCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,DeserializeNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for guid value. Expecting '\"' or null"); " is 159.
Long Statement,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,DeserializeNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for guid value. Expecting '\"' or null"); " is 159.
Long Statement,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,DeserializeNullableCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,NetConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NetConverter.cs,DeserializeNullableIP,The length of the statement  "				throw new SerializationException("Invalid null value found at " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 137.
Long Statement,Revenj.Serialization.Json.Converters,NetConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NetConverter.cs,DeserializeIP,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 158.
Long Statement,Revenj.Serialization.Json.Converters,NetConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NetConverter.cs,DeserializeIP,The length of the statement  "					throw new SerializationException("Error parsing IP address at " + JsonSerialization.PositionInStream(sr) + ". " + ex.Message' ex); " is 130.
Long Statement,Revenj.Serialization.Json.Converters,NetConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NetConverter.cs,DeserializeIP,The length of the statement  "			throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for ip value. Expecting \""); " is 142.
Long Statement,Revenj.Serialization.Json.Converters,NetConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NetConverter.cs,DeserializeNullableUri,The length of the statement  "				throw new SerializationException("Invalid null value found at " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 137.
Long Statement,Revenj.Serialization.Json.Converters,NetConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NetConverter.cs,DeserializeUri,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 158.
Long Statement,Revenj.Serialization.Json.Converters,NetConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NetConverter.cs,DeserializeUri,The length of the statement  "				throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for Uri value. Expecting \""); " is 143.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeDecimal,The length of the statement  "					throw new SerializationException("Error parsing decimal at " + JsonSerialization.PositionInStream(sr) + ". " + ex.Message' ex); " is 127.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeDecimal,The length of the statement  "				throw new SerializationException("Error parsing decimal at " + JsonSerialization.PositionInStream(sr) + ". " + ex.Message' ex); " is 127.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToDecimal,The length of the statement  "						throw new SerializationException("Multiple '.' found in decimal value: " + new string(buf' 0' len) + ". At position" + JsonSerialization.PositionInStream(sr)); " is 159.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToDecimalGeneric,The length of the statement  "			return decimal.Parse(new string(buf' 0' len)' NumberStyles.AllowDecimalPoint | NumberStyles.AllowExponent | NumberStyles.AllowLeadingSign' Invariant); " is 150.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeDecimalCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeDecimalNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for decimal value. Expecting number or null"); " is 164.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeDecimalNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for decimal value. Expecting number or null"); " is 164.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeDecimalNullableCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeShort,The length of the statement  "					throw new SerializationException("Error parsing short at " + JsonSerialization.PositionInStream(sr) + ". " + ex.Message' ex); " is 125.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeShort,The length of the statement  "				throw new SerializationException("Error parsing short at " + JsonSerialization.PositionInStream(sr) + ". " + ex.Message' ex); " is 125.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToShortGeneric,The length of the statement  "			return short.Parse(new string(buf' 0' len)' NumberStyles.AllowDecimalPoint | NumberStyles.AllowExponent | NumberStyles.AllowLeadingSign' Invariant); " is 148.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeShortCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeShortNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for short value. Expecting number or null"); " is 162.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeShortNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for short value. Expecting number or null"); " is 162.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeShortNullableCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeInt,The length of the statement  "					throw new SerializationException("Error parsing int at " + JsonSerialization.PositionInStream(sr) + ". " + ex.Message' ex); " is 123.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeInt,The length of the statement  "				throw new SerializationException("Error parsing int at " + JsonSerialization.PositionInStream(sr) + ". " + ex.Message' ex); " is 123.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToIntGeneric,The length of the statement  "			return int.Parse(new string(buf' 0' len)' NumberStyles.AllowDecimalPoint | NumberStyles.AllowExponent | NumberStyles.AllowLeadingSign' Invariant); " is 146.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeIntCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeIntNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for int value. Expecting number or null"); " is 160.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeIntNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for int value. Expecting number or null"); " is 160.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeIntNullableCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeLong,The length of the statement  "					throw new SerializationException("Error parsing long at " + JsonSerialization.PositionInStream(sr) + ". " + ex.Message' ex); " is 124.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeLong,The length of the statement  "				throw new SerializationException("Error parsing long at " + JsonSerialization.PositionInStream(sr) + ". " + ex.Message' ex); " is 124.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToLongGeneric,The length of the statement  "			return long.Parse(new string(buf' 0' len)' NumberStyles.AllowDecimalPoint | NumberStyles.AllowExponent | NumberStyles.AllowLeadingSign' Invariant); " is 147.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeLongCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeLongNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for long value. Expecting number or null"); " is 161.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeLongNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for long value. Expecting number or null"); " is 161.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeLongNullableCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeDouble,The length of the statement  "					throw new SerializationException("Error parsing double at " + JsonSerialization.PositionInStream(sr) + ". " + ex.Message' ex); " is 126.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeDouble,The length of the statement  "				throw new SerializationException("Error parsing double at " + JsonSerialization.PositionInStream(sr) + ". " + ex.Message' ex); " is 126.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToDoubleGeneric,The length of the statement  "			return double.Parse(new string(buf' 0' len)' NumberStyles.AllowDecimalPoint | NumberStyles.AllowExponent | NumberStyles.AllowLeadingSign' Invariant); " is 149.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeDoubleCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeDoubleNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for double value. Expecting number or null"); " is 163.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeDoubleNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for double value. Expecting number or null"); " is 163.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeDoubleNullableCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeFloat,The length of the statement  "					throw new SerializationException("Error parsing float at " + JsonSerialization.PositionInStream(sr) + ". " + ex.Message' ex); " is 125.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeFloat,The length of the statement  "				throw new SerializationException("Error parsing float at " + JsonSerialization.PositionInStream(sr) + ". " + ex.Message' ex); " is 125.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToFloatGeneric,The length of the statement  "			return float.Parse(new string(buf' 0' len)' NumberStyles.AllowDecimalPoint | NumberStyles.AllowExponent | NumberStyles.AllowLeadingSign' Invariant); " is 148.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeFloatCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeFloatNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for float value. Expecting number or null"); " is 162.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeFloatNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for float value. Expecting number or null"); " is 162.
Long Statement,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeFloatNullableCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,PointConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\PointConverter.cs,DeserializePoint,The length of the statement  "			if (nextToken != '{') throw new SerializationException("Expecting '{' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization.Json.Converters,PointConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\PointConverter.cs,DeserializePoint,The length of the statement  "			if (nextToken != ':') throw new SerializationException("Expecting ':' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization.Json.Converters,PointConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\PointConverter.cs,DeserializePoint,The length of the statement  "					throw new SerializationException("Expecting 'X' or 'Y' as property names at position " + JsonSerialization.PositionInStream(sr) + ". Found " + firstName); " is 154.
Long Statement,Revenj.Serialization.Json.Converters,PointConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\PointConverter.cs,DeserializePoint,The length of the statement  "			if (nextToken != ''') throw new SerializationException("Expecting ''' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization.Json.Converters,PointConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\PointConverter.cs,DeserializePoint,The length of the statement  "			if (nextToken != ':') throw new SerializationException("Expecting ':' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization.Json.Converters,PointConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\PointConverter.cs,DeserializePoint,The length of the statement  "				else throw new SerializationException("Expecting '}' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,PointConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\PointConverter.cs,DeserializePoint,The length of the statement  "			throw new SerializationException("Expecting 'X' and 'Y' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + firstName + " and " + secondName); " is 160.
Long Statement,Revenj.Serialization.Json.Converters,PointConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\PointConverter.cs,DeserializePointF,The length of the statement  "			if (nextToken != '{') throw new SerializationException("Expecting '{' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization.Json.Converters,PointConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\PointConverter.cs,DeserializePointF,The length of the statement  "			if (nextToken != ':') throw new SerializationException("Expecting ':' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization.Json.Converters,PointConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\PointConverter.cs,DeserializePointF,The length of the statement  "					throw new SerializationException("Expecting 'X' or 'Y' as property names at position " + JsonSerialization.PositionInStream(sr) + ". Found " + firstName); " is 154.
Long Statement,Revenj.Serialization.Json.Converters,PointConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\PointConverter.cs,DeserializePointF,The length of the statement  "			if (nextToken != ''') throw new SerializationException("Expecting ''' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization.Json.Converters,PointConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\PointConverter.cs,DeserializePointF,The length of the statement  "			if (nextToken != ':') throw new SerializationException("Expecting ':' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 157.
Long Statement,Revenj.Serialization.Json.Converters,PointConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\PointConverter.cs,DeserializePointF,The length of the statement  "				else throw new SerializationException("Expecting '}' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,PointConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\PointConverter.cs,DeserializePointF,The length of the statement  "			throw new SerializationException("Expecting 'X' and 'Y' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + firstName + " and " + secondName); " is 160.
Long Statement,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,DeserializeNullable,The length of the statement  "				throw new SerializationException("Invalid null value found at " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 137.
Long Statement,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,Deserialize,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 158.
Long Statement,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,DeserializeCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,DeserializeNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for string value. Expecting '\"' or null"); " is 161.
Long Statement,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,DeserializeNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for string value. Expecting '\"' or null"); " is 161.
Long Statement,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,DeserializeNullableCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,TreePathConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\TreePathConverter.cs,DeserializeNullable,The length of the statement  "				throw new SerializationException("Invalid null value found at " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 137.
Long Statement,Revenj.Serialization.Json.Converters,TreePathConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\TreePathConverter.cs,Deserialize,The length of the statement  "			if (nextToken != '"') throw new SerializationException("Expecting '\"' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 158.
Long Statement,Revenj.Serialization.Json.Converters,TreePathConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\TreePathConverter.cs,DeserializeCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,TreePathConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\TreePathConverter.cs,DeserializeNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for string value. Expecting '\"' or null"); " is 161.
Long Statement,Revenj.Serialization.Json.Converters,TreePathConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\TreePathConverter.cs,DeserializeNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for string value. Expecting '\"' or null"); " is 161.
Long Statement,Revenj.Serialization.Json.Converters,TreePathConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\TreePathConverter.cs,DeserializeNullableCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,XmlConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\XmlConverter.cs,Deserialize,The length of the statement  "					throw new SerializationException("Error parsing XML at " + JsonSerialization.PositionInStream(sr) + ". " + ex.Message' ex); " is 123.
Long Statement,Revenj.Serialization.Json.Converters,XmlConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\XmlConverter.cs,DeserializeNullable,The length of the statement  "				throw new SerializationException("Invalid null value found at " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 137.
Long Statement,Revenj.Serialization.Json.Converters,XmlConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\XmlConverter.cs,DeserializeCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Serialization.Json.Converters,XmlConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\XmlConverter.cs,DeserializeNullableCollection,The length of the statement  "				else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for xml value. Expecting string' object or null"); " is 168.
Long Statement,Revenj.Serialization.Json.Converters,XmlConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\XmlConverter.cs,DeserializeNullableCollection,The length of the statement  "					else throw new SerializationException("Invalid value found at position " + JsonSerialization.PositionInStream(sr) + " for xml value. Expecting string' object or null"); " is 168.
Long Statement,Revenj.Serialization.Json.Converters,XmlConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\XmlConverter.cs,DeserializeNullableCollection,The length of the statement  "				else throw new SerializationException("Expecting ']' at position " + JsonSerialization.PositionInStream(sr) + ". Found " + (char)nextToken); " is 140.
Long Statement,Revenj.Utility,Sorting,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\TopologicalSort.cs,TopologicalSort,The length of the statement  "					throw new ArgumentException("Provided graph has circular dependency. Topological sort can't be performed on graph with circular dependency."); " is 142.
Complex Conditional,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The conditional expression  "value.Year == 1 && value.Month == 1 && value.Day == 1 && (value.Hour - hours) < 0"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,Contains,The conditional expression  "item && (chunk != 0) || !item && chunk != 0xFFFFFFFFu"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,NpgsqlDate,The conditional expression  "year == 0 || year < MinYear || year > MaxYear || month < 1 || month > 12 || day < 1 ||  				(day > (IsLeap(year) ? 366 : 365))"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTime,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,The conditional expression  "hours < 0 || hours > 24 || minutes < 0 || minutes > 59 || seconds < 0m || seconds >= 60 ||  					(hours == 24 && (minutes != 0 || seconds != 0m))"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BasicNativeToBackendTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToBinary,The conditional expression  "b >= 0x20 && b < 0x7F && b != 0x27 && b != 0x5C"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlMacAddress,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,NpgsqlMacAddress,The conditional expression  "(c >= '0' && c <= '9') || (c >= 'A' && c <= 'F')"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBind,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlBind.cs,WriteToStream,The conditional expression  "((_parameterFormatCodes.Length == 1) && (_parameterFormatCodes[0] == (Int16)FormatCode.Binary)) ||  							((_parameterFormatCodes.Length != 1) && (_parameterFormatCodes[i] == (Int16)FormatCode.Binary))"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBind,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlBind.cs,WriteToStream,The conditional expression  "((_parameterFormatCodes.Length == 1) && (_parameterFormatCodes[0] == (Int16)FormatCode.Binary)) ||  						((_parameterFormatCodes.Length != 1) && (_parameterFormatCodes[i] == (Int16)FormatCode.Binary))"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,FillSchemaTable_v2,The conditional expression  "CurrentDescription[i].TypeModifier != -1 && CurrentDescription[i].TypeInfo != null &&  					(CurrentDescription[i].TypeInfo.Name == "varchar" || CurrentDescription[i].TypeInfo.Name == "bpchar")"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,FillSchemaTable_v2,The conditional expression  "CurrentDescription[i].TypeModifier != -1 && CurrentDescription[i].TypeInfo != null &&  						 (CurrentDescription[i].TypeInfo.Name == "bit" || CurrentDescription[i].TypeInfo.Name == "varbit")"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,FillSchemaTable_v3,The conditional expression  "CurrentDescription[i].TypeModifier != -1 && CurrentDescription[i].TypeInfo != null &&  					(CurrentDescription[i].TypeInfo.Name == "varchar" || CurrentDescription[i].TypeInfo.Name == "bpchar")"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,FillSchemaTable_v3,The conditional expression  "CurrentDescription[i].TypeModifier != -1 && CurrentDescription[i].TypeInfo != null &&  						 (CurrentDescription[i].TypeInfo.Name == "bit" || CurrentDescription[i].TypeInfo.Name == "varbit")"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.Npgsql,ForwardsOnlyDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,GetNextRow,The conditional expression  "((_behavior & CommandBehavior.SingleRow) != 0 && CurrentRow != null && _pendingDescription == null) ||  				((_behavior & CommandBehavior.SchemaOnly) != 0)"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,LikeStringComparison,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,TryMatch,The conditional expression  "ceZero == null || ceMethod == null || !ceZero.Value.Equals(0) || !CompareMethods.Contains(ceMethod.Method)"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,LikeStringComparison,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,TryMatch,The conditional expression  "ceZero == null || ceMethod == null || !ceZero.Value.Equals(0) || !CompareMethods.Contains(ceMethod.Method)"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.Plugins.ProjectionSimplifications,CountProjection,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ProjectionSimplifications\CountProjection.cs,CheckShortCircuitCount,The conditional expression  "mq != null && subquery.Joins.Count == 0 && subquery.AdditionalJoins.Count == 0 && subquery.Conditions.Count == 0"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,TryToSimplifyMainFrom,The conditional expression  "subquery.Conditions.Count > 0  					|| subquery.Joins.Count > 0  					|| subquery.ResultOperators.Any(it => it is CastResultOperator == false && it is DefaultIfEmptyResultOperator == false)  					|| subquery.AdditionalJoins.Count > 0"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.QueryGeneration.Visitors,SqlGeneratorExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Visitors\SqlGeneratorExpressionTreeVisitor.cs,VisitBinaryExpression,The conditional expression  "left.Type == typeof(int) && right.Type == typeof(int)  				&& (left.NodeType == ExpressionType.Convert && right.NodeType == ExpressionType.Constant  					|| left.NodeType == ExpressionType.Constant && right.NodeType == ExpressionType.Convert)"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Postgres.QueryGeneration.Visitors,SqlGeneratorExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Visitors\SqlGeneratorExpressionTreeVisitor.cs,VisitBinaryExpression,The conditional expression  "(expression.NodeType == ExpressionType.NotEqual || expression.NodeType == ExpressionType.Equal)  				&& (nullLeft || nullRight)"  is complex.
Complex Conditional,Remotion.Linq.Parsing.ExpressionTreeVisitors.TreeEvaluation,PartialEvaluationInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\TreeEvaluation\PartialEvaluationInfo.cs,AddEvaluatableExpression,The conditional expression  "me.Member == Now || me.Member == UtcNow || me.Member == Today || me.Member == Principal"  is complex.
Complex Conditional,Revenj.DomainPatterns,SystemStartupAspect,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\Aspects\SystemStartupAspect.cs,Initialize,The conditional expression  "t.IsClass && (t.IsPublic || t.IsNestedPublic)  					&& typeof(ISystemStartup).IsAssignableFrom(t)"  is complex.
Complex Conditional,Revenj.Extensibility,CastleInterceptor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\DynamicProxy\CastleInterceptor.cs,Intercept,The conditional expression  "BeforeAspects != null  				&& (BeforeAspects.TryGetValue(method' out beforeList)  				|| method.IsGenericMethod && BeforeAspects.TryGetValue(method.GetGenericMethodDefinition()' out beforeList))"  is complex.
Complex Conditional,Revenj.Extensibility,CastleInterceptor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\DynamicProxy\CastleInterceptor.cs,Intercept,The conditional expression  "AroundAspects != null  				&& (AroundAspects.TryGetValue(method' out aroundList)  				|| method.IsGenericMethod && AroundAspects.TryGetValue(method.GetGenericMethodDefinition()' out aroundList))"  is complex.
Complex Conditional,Revenj.Extensibility,CastleInterceptor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\DynamicProxy\CastleInterceptor.cs,Intercept,The conditional expression  "AfterAspects != null  				&& (AfterAspects.TryGetValue(method' out afterList)  				|| method.IsGenericMethod && AfterAspects.TryGetValue(method.GetGenericMethodDefinition()' out afterList))"  is complex.
Complex Conditional,Revenj.Extensibility,AutofacContainerBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Setup.cs,AutofacContainerBuilder,The conditional expression  "m.IsPublic && !m.IsAbstract && typeof(Revenj.Extensibility.Autofac.Module).IsAssignableFrom(m) && m.GetConstructor(new Type[0]) != null"  is complex.
Complex Conditional,Revenj.Extensibility.Autofac.Features.ResolveAnything,AnyConcreteTypeNotAlreadyRegisteredSource,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\ResolveAnything\AnyConcreteTypeNotAlreadyRegisteredSource.cs,RegistrationsFor,The conditional expression  "ts == null ||  				!ts.ServiceType.IsClass ||  				ts.ServiceType.IsSubclassOf(typeof(Delegate)) ||  				ts.ServiceType.IsAbstract ||  				!_predicate(ts.ServiceType) ||  				registrationAccessor(service).Any()"  is complex.
Complex Conditional,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlob,The conditional expression  "(blob [offset]   != 0x07) ||				// PRIVATEKEYBLOB (0x07)  				    (blob [offset+1] != 0x02) ||				// Version (0x02)  				    (blob [offset+2] != 0x00) ||				// Reserved (word)  				    (blob [offset+3] != 0x00) ||  				    (ToUInt32LE (blob' offset+8) != 0x32415352)"  is complex.
Complex Conditional,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlobDSA,The conditional expression  "(blob [offset] != 0x07) ||				// PRIVATEKEYBLOB (0x07)  				    (blob [offset + 1] != 0x02) ||			// Version (0x02)  				    (blob [offset + 2] != 0x00) ||			// Reserved (word)  				    (blob [offset + 3] != 0x00) ||  				    (ToUInt32LE (blob' offset + 8) != 0x32535344)"  is complex.
Complex Conditional,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlob,The conditional expression  "(blob [offset]   != 0x06) ||				// PUBLICKEYBLOB (0x06)  				    (blob [offset+1] != 0x02) ||				// Version (0x02)  				    (blob [offset+2] != 0x00) ||				// Reserved (word)  				    (blob [offset+3] != 0x00) ||   				    (ToUInt32LE (blob' offset+8) != 0x31415352)"  is complex.
Complex Conditional,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlobDSA,The conditional expression  "(blob [offset] != 0x06) ||				// PUBLICKEYBLOB (0x06)  				    (blob [offset + 1] != 0x02) ||			// Version (0x02)  				    (blob [offset + 2] != 0x00) ||			// Reserved (word)  				    (blob [offset + 3] != 0x00) ||  				    (ToUInt32LE (blob' offset + 8) != 0x31535344)"  is complex.
Complex Conditional,Mono.Security.Cryptography,DiffieHellmanManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\DiffieHellmanManaged.cs,Initialize,The conditional expression  "!p.IsProbablePrime() || g <= 0 || g >= p || (x != null && (x <= 0 || x > p - 2))"  is complex.
Complex Conditional,Mono.Security.Cryptography,RSAManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\RSAManaged.cs,ExportParameters,The conditional expression  "(p != null) && (q != null) && (dp != null) && (dq != null) && (qInv != null)"  is complex.
Complex Conditional,Mono.Security.Cryptography,SymmetricTransform,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SymmetricTransform.cs,TransformBlock,The conditional expression  "!encrypt && (0 > len) && ((padmode == PaddingMode.None) || (padmode == PaddingMode.Zeros))"  is complex.
Complex Conditional,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,Parse,The conditional expression  "(l > 0 && l < 5)  							&&(StrEquals("amp"' sbChars' sbLen' l)  							|| StrEquals("apos"' sbChars' sbLen' l)  							|| StrEquals("quot"' sbChars' sbLen' l)  							|| StrEquals("lt"' sbChars' sbLen' l)  							|| StrEquals("gt"' sbChars' sbLen' l))"  is complex.
Complex Conditional,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Skip,The conditional expression  "nextToken != ''' && nextToken != '}' && nextToken != ']' && nextToken != -1"  is complex.
Complex Conditional,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Memorize,The conditional expression  "nextToken != ''' && nextToken != '}' && nextToken != ']' && nextToken != -1"  is complex.
Complex Conditional,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,Deserialize,The conditional expression  "sr.Read() == 'a' && sr.Read() == 'l' && sr.Read() == 's' && sr.Read() == 'e'"  is complex.
Complex Conditional,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,Deserialize,The conditional expression  "sr.Read() == 'r' && sr.Read() == 'u' && sr.Read() == 'e' && sr.Read() == '"'"  is complex.
Complex Conditional,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,Deserialize,The conditional expression  "sr.Read() == 'a' && sr.Read() == 'l' && sr.Read() == 's' && sr.Read() == 'e' && sr.Read() == '"'"  is complex.
Complex Conditional,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeCollection,The conditional expression  "sr.Read() == 'a' && sr.Read() == 'l' && sr.Read() == 's' && sr.Read() == 'e'"  is complex.
Complex Conditional,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeCollection,The conditional expression  "sr.Read() == 'r' && sr.Read() == 'u' && sr.Read() == 'e' && sr.Read() == '"'"  is complex.
Complex Conditional,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeCollection,The conditional expression  "sr.Read() == 'a' && sr.Read() == 'l' && sr.Read() == 's' && sr.Read() == 'e' && sr.Read() == '"'"  is complex.
Complex Conditional,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeCollection,The conditional expression  "sr.Read() == 'a' && sr.Read() == 'l' && sr.Read() == 's' && sr.Read() == 'e'"  is complex.
Complex Conditional,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeCollection,The conditional expression  "sr.Read() == 'r' && sr.Read() == 'u' && sr.Read() == 'e' && sr.Read() == '"'"  is complex.
Complex Conditional,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeCollection,The conditional expression  "sr.Read() == 'a' && sr.Read() == 'l' && sr.Read() == 's' && sr.Read() == 'e' && sr.Read() == '"'"  is complex.
Complex Conditional,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeNullableCollection,The conditional expression  "sr.Read() == 'a' && sr.Read() == 'l' && sr.Read() == 's' && sr.Read() == 'e'"  is complex.
Complex Conditional,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeNullableCollection,The conditional expression  "sr.Read() == 'r' && sr.Read() == 'u' && sr.Read() == 'e' && sr.Read() == '"'"  is complex.
Complex Conditional,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeNullableCollection,The conditional expression  "sr.Read() == 'a' && sr.Read() == 'l' && sr.Read() == 's' && sr.Read() == 'e' && sr.Read() == '"'"  is complex.
Complex Conditional,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeNullableCollection,The conditional expression  "sr.Read() == 'a' && sr.Read() == 'l' && sr.Read() == 's' && sr.Read() == 'e'"  is complex.
Complex Conditional,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeNullableCollection,The conditional expression  "sr.Read() == 'r' && sr.Read() == 'u' && sr.Read() == 'e' && sr.Read() == '"'"  is complex.
Complex Conditional,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeNullableCollection,The conditional expression  "sr.Read() == 'a' && sr.Read() == 'l' && sr.Read() == 's' && sr.Read() == 'e' && sr.Read() == '"'"  is complex.
Complex Conditional,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The conditional expression  "i > 18 && i < 29 && buffer[4] == '-' && buffer[7] == '-'  						&& (buffer[10] == 'T' || buffer[10] == 't' || buffer[10] == ' ')  						&& buffer[13] == ':' && buffer[16] == ':' && AllDigits(buffer' 20' i - 1)"  is complex.
Complex Conditional,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The conditional expression  "buffer[8] != '-' || buffer[13] != '-' || buffer[18] != '-' || buffer[23] != '-'"  is complex.
Complex Conditional,Revenj.Utility,BufferedTextReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\Streams\BufferedTextReader.cs,ReadNumber,The conditional expression  "ch >= '0' && ch <= '9' || ch == '.' || ch == '+' || ch == '-' || ch == 'e' || ch == 'E'"  is complex.
Virtual Method Call from Constructor,Mono.Security.X509,X509Extension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Extension.cs,X509Extension,The constructor "X509Extension" calls a virtual method "Decode".
Virtual Method Call from Constructor,Mono.Security.X509,X509Extension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Extension.cs,X509Extension,The constructor "X509Extension" calls a virtual method "Decode".
Virtual Method Call from Constructor,Mono.Security,SignedData,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,SignedData,The constructor "SignedData" calls a virtual method "GetBytes".
Virtual Method Call from Constructor,Mono.Security,SignedData,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,SignedData,The constructor "SignedData" calls a virtual method "GetBytes".
Empty Catch Block,Revenj.DatabasePersistence.Postgres,PostgresConnectionPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresConnectionPool.cs,Take,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres,PostgresDatabaseQuery,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresDatabaseQuery.cs,PrepareCommand,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,StringRowReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlAsciiRow.cs,AbandonShip,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,StringRowReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlAsciiRow.cs,AbandonShip,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,Cancel,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnection,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnection.cs,CheckConnectionOpen,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,ReleasePlansPortals,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,ReleasePlansPortals,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,FireNotice,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,FireNotification,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,Open,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,Close,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectorPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectorPool.cs,CleanUpConnectorMethod,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectorPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectorPool.cs,ClearQueue,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlReadyState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlReadyState.cs,Close,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlReadyState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlReadyState.cs,Close,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,Close,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,ProcessBackendResponsesEnum,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,ProcessBackendResponsesEnum,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,ProcessExistingBackendResponses,The method has an empty catch block.
Empty Catch Block,Mono.Security.Protocol.Tls.Handshake.Client,TlsClientCertificateVerify,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsClientCertificateVerify.cs,ProcessAsSsl3,The method has an empty catch block.
Empty Catch Block,Mono.Security.Protocol.Tls.Handshake.Client,TlsClientCertificateVerify,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsClientCertificateVerify.cs,ProcessAsTls1,The method has an empty catch block.
Empty Catch Block,Mono.Security.Protocol.Tls,SslClientStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslClientStream.cs,NegotiateAsyncWorker,The method has an empty catch block.
Empty Catch Block,Mono.Security.Protocol.Tls,SslClientStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslClientStream.cs,NegotiateAsyncWorker,The method has an empty catch block.
Empty Catch Block,Mono.Security.Protocol.Tls,SslStreamBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Mono.Security.X509,X509Extension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Extension.cs,X509Extension,The method has an empty catch block.
Empty Catch Block,Mono.Security.X509,X509Store,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Store.cs,BuildCertificatesCollection,The method has an empty catch block.
Empty Catch Block,Mono.Security.X509,X509Store,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Store.cs,BuildCrlsCollection,The method has an empty catch block.
Empty Catch Block,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,PositionInStream,The method has an empty catch block.
Empty Catch Block,Revenj.Serialization,Deserializer<T>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,Deserializer,The method has an empty catch block.
Empty Catch Block,Revenj.Utility,PdfConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\PdfConverter.cs,RunConverter,The method has an empty catch block.
Empty Catch Block,Revenj.Utility,TemporaryResources,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\TemporaryResources.cs,LoadAssembly,The method has an empty catch block.
Empty Catch Block,Revenj.Utility,TemporaryResources,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\TemporaryResources.cs,LoadDynamicAssembly,The method has an empty catch block.
Empty Catch Block,Revenj.Utility,TemporaryResources,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\TemporaryResources.cs,InitializeDirectory,The method has an empty catch block.
Empty Catch Block,Revenj.Utility,TemporaryResources,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\TemporaryResources.cs,InitializeDirectory,The method has an empty catch block.
Magic Number,Revenj.DatabasePersistence.Postgres,BulkReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\BulkRead.cs,Execute,The following statement contains a magic number: Stream.SetLength(Stream.Length - 2);
Magic Number,Revenj.DatabasePersistence.Postgres,BulkReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\BulkRead.cs,Analyze,The following statement contains a magic number: ResultActions.Add((dr' ind) =>  				{  					var obj = dr.GetValue(ind);  					var tr = obj as TextReader;  					var btr = tr != null ? Stream.UseBufferedReader(tr) : Stream.UseBufferedReader(obj.ToString());  					PostgresTypedArray.ParseCollection(btr' 0' Locator' (rdr' _' __' ___) =>  					{  						rdr.Read(3);  						var args = new object[converters.Length];  						for (int x = 0; x < converters.Length; x++)  							args[x] = converters[x](rdr' 1);  						rdr.Read(3);  						return table.Rows.Add(args);  					});  					if (tr != null) tr.Dispose();  					return table;  				});
Magic Number,Revenj.DatabasePersistence.Postgres,BulkReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\BulkRead.cs,Analyze,The following statement contains a magic number: ResultActions.Add((dr' ind) =>  				{  					var obj = dr.GetValue(ind);  					var tr = obj as TextReader;  					var btr = tr != null ? Stream.UseBufferedReader(tr) : Stream.UseBufferedReader(obj.ToString());  					PostgresTypedArray.ParseCollection(btr' 0' Locator' (rdr' _' __' ___) =>  					{  						rdr.Read(3);  						var args = new object[converters.Length];  						for (int x = 0; x < converters.Length; x++)  							args[x] = converters[x](rdr' 1);  						rdr.Read(3);  						return table.Rows.Add(args);  					});  					if (tr != null) tr.Dispose();  					return table;  				});
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresConnectionPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresConnectionPool.cs,PostgresConnectionPool,The following statement contains a magic number: Size = Math.Min(Environment.ProcessorCount' 20);
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresConnectionPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresConnectionPool.cs,PostgresConnectionPool,The following statement contains a magic number: p == 4 || p == 6 || p == 128
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresConnectionPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresConnectionPool.cs,PostgresConnectionPool,The following statement contains a magic number: p == 4 || p == 6 || p == 128
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresConnectionPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresConnectionPool.cs,PostgresConnectionPool,The following statement contains a magic number: p == 4 || p == 6 || p == 128
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresConnectionPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresConnectionPool.cs,Release,The following statement contains a magic number: switch (Mode)  			{  				case PoolMode.None:  					try { connection.Close(); }  					catch (Exception ex)  					{  						if (valid)  							TraceSource.TraceEvent(TraceEventType.Error' 5011' "{0}"' ex);  					}  					break;  				default:  					if (valid && connection.State == ConnectionState.Open && Connections.Count < Size)  					{  						Connections.Add(connection);  					}  					else  					{  						try { connection.Close(); }  						catch (Exception ex)  						{  							if (valid)  								TraceSource.TraceEvent(TraceEventType.Error' 5012' "{0}"' ex);  						}  						if (Connections.Count < Size)  							Connections.Add(Info.GetConnection());  					}  					break;  			}
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresConnectionPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresConnectionPool.cs,Release,The following statement contains a magic number: switch (Mode)  			{  				case PoolMode.None:  					try { connection.Close(); }  					catch (Exception ex)  					{  						if (valid)  							TraceSource.TraceEvent(TraceEventType.Error' 5011' "{0}"' ex);  					}  					break;  				default:  					if (valid && connection.State == ConnectionState.Open && Connections.Count < Size)  					{  						Connections.Add(connection);  					}  					else  					{  						try { connection.Close(); }  						catch (Exception ex)  						{  							if (valid)  								TraceSource.TraceEvent(TraceEventType.Error' 5012' "{0}"' ex);  						}  						if (Connections.Count < Size)  							Connections.Add(Info.GetConnection());  					}  					break;  			}
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresDatabaseNotification,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresDatabaseNotification.cs,SetUpConnection,The following statement contains a magic number: TraceSource.TraceEvent(TraceEventType.Critical' 5130' "Retry count exceeded: {0}"' connectionString);
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresDatabaseNotification,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresDatabaseNotification.cs,SetUpConnection,The following statement contains a magic number: RetryCount = 30;
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresDatabaseNotification,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresDatabaseNotification.cs,SetUpConnection,The following statement contains a magic number: RetryCount > 60
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresDatabaseNotification,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresDatabaseNotification.cs,Connection_Notification,The following statement contains a magic number: TraceSource.TraceEvent(TraceEventType.Verbose' 5137' "Postgres notification: {0} with {1}"' e.Condition' e.AdditionalInformation);
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresDatabaseNotification,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresDatabaseNotification.cs,Connection_Notification,The following statement contains a magic number: var array = e.AdditionalInformation.Substring(firstSeparator + secondSeparator + 2).Trim();
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresDatabaseQuery,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresDatabaseQuery.cs,FormatException,The following statement contains a magic number: return new FrameworkException(ex.Message + details + @"  SQL: " + ex.ErrorSql.Substring(0' Math.Min(ex.ErrorSql.Length' 200))' ex);
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresOlapCubeQuery<TSource>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresOlapCubeQuery.cs,PrepareSql,The following statement contains a magic number: sb.Length -= 2;
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresRecordConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresRecordConverter.cs,ParseList,The following statement contains a magic number: value.Length == 2
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresRecordConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresRecordConverter.cs,BuildSimpleUriList,The following statement contains a magic number: var sb = new StringBuilder(uris.Count * 40);
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresRecordConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresRecordConverter.cs,BuildCompositeUriList,The following statement contains a magic number: var sb = new StringBuilder(uris.Count * 40);
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresTypedArray,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresTypedArray.cs,ParseCollection,The following statement contains a magic number: reader.Read(context + 2);
Magic Number,Revenj.DatabasePersistence.Postgres,PostgresTypedArray,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\PostgresTypedArray.cs,ParseCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres,Setup,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Setup.cs,Setup,The following statement contains a magic number: MinBatchSize = 1000;
Magic Number,Revenj.DatabasePersistence.Postgres,Setup,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Setup.cs,Setup,The following statement contains a magic number: MaxObjectSize = 1024 * 1024;
Magic Number,Revenj.DatabasePersistence.Postgres,Setup,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Setup.cs,Setup,The following statement contains a magic number: MaxObjectSize = 1024 * 1024;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\BoolConverter.cs,SerializeURI,The following statement contains a magic number: buf[pos + 2] = 'u';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\BoolConverter.cs,SerializeURI,The following statement contains a magic number: buf[pos + 3] = 'e';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\BoolConverter.cs,SerializeURI,The following statement contains a magic number: return pos + 4;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\BoolConverter.cs,SerializeURI,The following statement contains a magic number: buf[pos + 2] = 'l';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\BoolConverter.cs,SerializeURI,The following statement contains a magic number: buf[pos + 3] = 's';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\BoolConverter.cs,SerializeURI,The following statement contains a magic number: buf[pos + 4] = 'e';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\BoolConverter.cs,SerializeURI,The following statement contains a magic number: return pos + 5;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,ByteaConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ByteaConverter.cs,FromDatabase,The following statement contains a magic number: var data = new byte[value.Length / 2 - 1];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,ByteaConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ByteaConverter.cs,FromDatabase,The following statement contains a magic number: var pos = 2;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,ByteaConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ByteaConverter.cs,FromDatabase,The following statement contains a magic number: data[i] = (byte)((CharLookup[value[pos++]] << 4) + CharLookup[value[pos++]]);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,ByteaConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ByteaConverter.cs,Parse,The following statement contains a magic number: var list = new List<byte>(1024);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,ByteaConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ByteaConverter.cs,Parse,The following statement contains a magic number: list.Add((byte)((CharLookup[cur] << 4) + CharLookup[reader.Read()]));
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,ByteaConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ByteaConverter.cs,ParseCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,ByteaConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ByteaConverter.cs,ParseStream,The following statement contains a magic number: bytes[ind++] = (byte)((CharLookup[cur] << 4) + CharLookup[reader.Read()]);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,ByteaConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ByteaConverter.cs,ParseStreamCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,ByteaConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ByteaConverter.cs,Serialize,The following statement contains a magic number: var cnt = 2;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,ByteaConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ByteaConverter.cs,Serialize,The following statement contains a magic number: buf[cnt++] = CharMap[b >> 4];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,ByteaConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ByteaConverter.cs,Serialize,The following statement contains a magic number: return pos + 2 + value.Length * 2;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,ByteaConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ByteaConverter.cs,Serialize,The following statement contains a magic number: return pos + 2 + value.Length * 2;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,ByteTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ByteaConverter.cs,BuildArray,The following statement contains a magic number: sw.Write(CharMap[b >> 4]);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,Serialize,The following statement contains a magic number: buf[start + 4] = '-';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Month' buf' start + 5);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,Serialize,The following statement contains a magic number: buf[start + 7] = '-';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Day' buf' start + 8);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,ParseDate,The following statement contains a magic number: var read = reader.Read(buf' 1' 9);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,ParseDate,The following statement contains a magic number: i < 10
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,ParseDate,The following statement contains a magic number: buf[4] != '-'
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,ParseDate,The following statement contains a magic number: return new DateTime(NumberConverter.Read4(buf' 0)' NumberConverter.Read2(buf' 5)' NumberConverter.Read2(buf' 8));
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,ParseDate,The following statement contains a magic number: return new DateTime(NumberConverter.Read4(buf' 0)' NumberConverter.Read2(buf' 5)' NumberConverter.Read2(buf' 8));
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,ParseDateSlow,The following statement contains a magic number: int foundAt = 4;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,ParseDateSlow,The following statement contains a magic number: i < 5
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,ParseDateSlow,The following statement contains a magic number: return new DateTime(year' NumberConverter.Read2(newBuf' 0)' NumberConverter.Read2(newBuf' 3));
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,ParseNullableCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,ParseCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,InsertRecord,The following statement contains a magic number: sw.Write(buf' 0' 10);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,BuildTuple,The following statement contains a magic number: var buf = new char[12];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,BuildTuple,The following statement contains a magic number: buf[11] = '\'';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DateTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DateConverter.cs,BuildTuple,The following statement contains a magic number: return new string(buf' 0' 12);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DecimalConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DecimalConverter.cs,ParseDecimal,The following statement contains a magic number: size > 18
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DecimalConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DecimalConverter.cs,ParseDecimal,The following statement contains a magic number: return new decimal((int)value' (int)(value >> 32)' 0' neg' (byte)scale);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DecimalConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DecimalConverter.cs,ParseNullableCollection,The following statement contains a magic number: reader.Read(context + 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DecimalConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DecimalConverter.cs,ParseNullableCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DecimalConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DecimalConverter.cs,ParseCollection,The following statement contains a magic number: reader.Read(context + 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DecimalConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DecimalConverter.cs,ParseCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DoubleConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DoubleConverter.cs,ParseNullableCollection,The following statement contains a magic number: cur = reader.Read(3);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,DoubleConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\DoubleConverter.cs,ParseCollection,The following statement contains a magic number: cur = reader.Read(3);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,FloatConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\FloatConverter.cs,ParseNullableCollection,The following statement contains a magic number: cur = reader.Read(3);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,FloatConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\FloatConverter.cs,ParseCollection,The following statement contains a magic number: cur = reader.Read(3);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,GuidConverter,The following statement contains a magic number: Lookup = new Pair[256];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,GuidConverter,The following statement contains a magic number: Values[c - '0'] = (byte)(c - 'a' + 10);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,GuidConverter,The following statement contains a magic number: Values[c - '0'] = (byte)(c - 'A' + 10);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: var l = Lookup[(a >> 24) & 255];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: var l = Lookup[(a >> 24) & 255];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[(a >> 16) & 255];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[(a >> 16) & 255];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 2] = l.First;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 3] = l.Second;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[(a >> 8) & 255];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[(a >> 8) & 255];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 4] = l.First;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 5] = l.Second;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[a & 255];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 6] = l.First;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 7] = l.Second;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 8] = '-';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[(b >> 8) & 255];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[(b >> 8) & 255];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 9] = l.First;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 10] = l.Second;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[b & 255];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 11] = l.First;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 12] = l.Second;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 13] = '-';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[(c >> 8) & 255];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[(c >> 8) & 255];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 14] = l.First;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 15] = l.Second;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[c & 255];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 16] = l.First;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 17] = l.Second;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 18] = '-';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 19] = l.First;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 20] = l.Second;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 21] = l.First;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 22] = l.Second;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 23] = '-';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 24] = l.First;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 25] = l.Second;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 26] = l.First;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 27] = l.Second;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 28] = l.First;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 29] = l.Second;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 30] = l.First;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 31] = l.Second;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 32] = l.First;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 33] = l.Second;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 34] = l.First;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buf[start + 35] = l.Second;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid,The following statement contains a magic number: int read = reader.Read(buf' 1' 36);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid,The following statement contains a magic number: i < 37 && i < buf.Length
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: a = (a << 4) + Values[buffer[x] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: x < 8 && x < buffer.Length
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: b = (b << 4) + Values[buffer[x] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: x < 13 && x < buffer.Length
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: c = (c << 4) + Values[buffer[x] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: x < 18 && x < buffer.Length
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int d = (Values[buffer[19] - '0'] << 4) + Values[buffer[20] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int d = (Values[buffer[19] - '0'] << 4) + Values[buffer[20] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int d = (Values[buffer[19] - '0'] << 4) + Values[buffer[20] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int e = (Values[buffer[21] - '0'] << 4) + Values[buffer[22] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int e = (Values[buffer[21] - '0'] << 4) + Values[buffer[22] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int e = (Values[buffer[21] - '0'] << 4) + Values[buffer[22] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int f = (Values[buffer[24] - '0'] << 4) + Values[buffer[25] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int f = (Values[buffer[24] - '0'] << 4) + Values[buffer[25] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int f = (Values[buffer[24] - '0'] << 4) + Values[buffer[25] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int g = (Values[buffer[26] - '0'] << 4) + Values[buffer[27] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int g = (Values[buffer[26] - '0'] << 4) + Values[buffer[27] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int g = (Values[buffer[26] - '0'] << 4) + Values[buffer[27] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int h = (Values[buffer[28] - '0'] << 4) + Values[buffer[29] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int h = (Values[buffer[28] - '0'] << 4) + Values[buffer[29] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int h = (Values[buffer[28] - '0'] << 4) + Values[buffer[29] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int i = (Values[buffer[30] - '0'] << 4) + Values[buffer[31] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int i = (Values[buffer[30] - '0'] << 4) + Values[buffer[31] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int i = (Values[buffer[30] - '0'] << 4) + Values[buffer[31] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int j = (Values[buffer[32] - '0'] << 4) + Values[buffer[33] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int j = (Values[buffer[32] - '0'] << 4) + Values[buffer[33] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int j = (Values[buffer[32] - '0'] << 4) + Values[buffer[33] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int k = (Values[buffer[34] - '0'] << 4) + Values[buffer[35] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int k = (Values[buffer[34] - '0'] << 4) + Values[buffer[35] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int k = (Values[buffer[34] - '0'] << 4) + Values[buffer[35] - '0'];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseCollectionGuid,The following statement contains a magic number: int read = reader.Read(buf' 1' 35);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseCollectionGuid,The following statement contains a magic number: i < 36
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseNullableCollection,The following statement contains a magic number: reader.Read(context + 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseNullableCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseCollection,The following statement contains a magic number: reader.Read(context + 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,ParseCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: var hi = (value >> 4) & 15;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: var hi = (value >> 4) & 15;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: var lo = value & 15;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: First = (char)(hi < 10 ? '0' + hi : 'a' + hi - 10);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: First = (char)(hi < 10 ? '0' + hi : 'a' + hi - 10);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: Second = (char)(lo < 10 ? '0' + lo : 'a' + lo - 10);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: Second = (char)(lo < 10 ? '0' + lo : 'a' + lo - 10);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: First = (char)((number / 10) + '0');
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: Second = (char)((number % 10) + '0');
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: Offset = number < 10 ? (byte)1 : (byte)0;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,InsertRecord,The following statement contains a magic number: sw.Write(buf' 0' 36);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,BuildTuple,The following statement contains a magic number: var buf = new char[38];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,GuidTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\GuidConverter.cs,BuildTuple,The following statement contains a magic number: buf[37] = '\'';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,HstoreConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\HstoreConverter.cs,FromDatabase,The following statement contains a magic number: var parts = value.Substring(1' value.Length - 2).Split(new[] { "\"' \""' "\"'\"" }' StringSplitOptions.None);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,HstoreConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\HstoreConverter.cs,ParseDictionary,The following statement contains a magic number: cur = reader.Read(2);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,HstoreConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\HstoreConverter.cs,ParseDictionary,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,HstoreConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\HstoreConverter.cs,ParseCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,ParseInt,The following statement contains a magic number: res = (res << 3) + (res << 1) - (cur - 48);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,ParseInt,The following statement contains a magic number: res = (res << 3) + (res << 1) - (cur - 48);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,ParseNullableCollection,The following statement contains a magic number: reader.Read(context + 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,ParseNullableCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,ParseCollection,The following statement contains a magic number: reader.Read(context + 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,ParseCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,ParsePositive,The following statement contains a magic number: res = res * 10 + (source[i] - 48);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,ParsePositive,The following statement contains a magic number: res = res * 10 + (source[i] - 48);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,ToString,The following statement contains a magic number: int pos = 11;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,ToString,The following statement contains a magic number: var div = abs / 100;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,ToString,The following statement contains a magic number: var rem = abs - div * 100;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,ToString,The following statement contains a magic number: return new string(buf' pos' 12 - pos);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,Serialize,The following statement contains a magic number: "-2147483648".CopyTo(0' buf' start' 11);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,Serialize,The following statement contains a magic number: return start + 11;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,Serialize,The following statement contains a magic number: pos = start + 11;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,Serialize,The following statement contains a magic number: var div = abs / 100;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,Serialize,The following statement contains a magic number: var rem = abs - div * 100;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,Serialize,The following statement contains a magic number: len = start + 12 - pos;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,InsertRecord,The following statement contains a magic number: int pos = 10;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,InsertRecord,The following statement contains a magic number: var div = abs / 100;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,InsertRecord,The following statement contains a magic number: var rem = abs - div * 100;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,IntTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\IntConverter.cs,InsertRecord,The following statement contains a magic number: sw.Write(buf' pos + 1' 10 - pos);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,LongConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\LongConverter.cs,ParseLong,The following statement contains a magic number: res = (res << 3) + (res << 1) - (cur - 48);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,LongConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\LongConverter.cs,ParseLong,The following statement contains a magic number: res = (res << 3) + (res << 1) - (cur - 48);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,LongConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\LongConverter.cs,ParseNullableCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,LongConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\LongConverter.cs,ParseCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,LongConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\LongConverter.cs,Serialize,The following statement contains a magic number: "-9223372036854775808".CopyTo(0' buf' start' 20);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,LongConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\LongConverter.cs,Serialize,The following statement contains a magic number: return start + 20;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,LongConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\LongConverter.cs,Serialize,The following statement contains a magic number: pos = start + 21;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,LongConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\LongConverter.cs,Serialize,The following statement contains a magic number: var div = abs / 100;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,LongConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\LongConverter.cs,Serialize,The following statement contains a magic number: var rem = abs - div * 100;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,LongConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\LongConverter.cs,Serialize,The following statement contains a magic number: len = start + 22 - pos;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,LongTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\LongConverter.cs,InsertRecord,The following statement contains a magic number: int pos = 20;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,LongTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\LongConverter.cs,InsertRecord,The following statement contains a magic number: var div = abs / 100;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,LongTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\LongConverter.cs,InsertRecord,The following statement contains a magic number: var rem = abs - div * 100;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,LongTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\LongConverter.cs,InsertRecord,The following statement contains a magic number: sw.Write(buf' pos + 1' 20 - pos);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,NumberConverter,The following statement contains a magic number: Numbers = new Pair[100];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,Write4,The following statement contains a magic number: var div = number / 100;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,Write4,The following statement contains a magic number: var rem = number - div * 100;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,Write4,The following statement contains a magic number: buffer[start + 2] = pair2.First;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,Write4,The following statement contains a magic number: buffer[start + 3] = pair2.Second;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,Read2,The following statement contains a magic number: int first = source[start] - 48;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,Read2,The following statement contains a magic number: return (first << 3) + (first << 1) + source[start + 1] - 48;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,Read2,The following statement contains a magic number: return (first << 3) + (first << 1) + source[start + 1] - 48;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,Read4,The following statement contains a magic number: int first = source[start] - 48;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,Read4,The following statement contains a magic number: var second = source[start + 1] - 48;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,Read4,The following statement contains a magic number: var third = source[start + 2] - 48;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,Read4,The following statement contains a magic number: var third = source[start + 2] - 48;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,Read4,The following statement contains a magic number: return first * 1000 + second * 100 + (third << 3) + (third << 1) + source[start + 3] - 48;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,Read4,The following statement contains a magic number: return first * 1000 + second * 100 + (third << 3) + (third << 1) + source[start + 3] - 48;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,Read4,The following statement contains a magic number: return first * 1000 + second * 100 + (third << 3) + (third << 1) + source[start + 3] - 48;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,Read4,The following statement contains a magic number: return first * 1000 + second * 100 + (third << 3) + (third << 1) + source[start + 3] - 48;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,Read4,The following statement contains a magic number: return first * 1000 + second * 100 + (third << 3) + (third << 1) + source[start + 3] - 48;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,TryParsePositiveInt,The following statement contains a magic number: value = (value << 3) + (value << 1) + number[i] - '0';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,ParseLong,The following statement contains a magic number: value = (value << 3) + (value << 2) - number[i] + '0';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\NumberConverter.cs,ParseLong,The following statement contains a magic number: value = (value << 3) + (value << 2) - number[i] + '0';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,PostgresTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\PostgresTuple.cs,BuildQuoteEscape,The following statement contains a magic number: sb.Insert(i * 2' sb[i * 2]);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,PostgresTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\PostgresTuple.cs,BuildQuoteEscape,The following statement contains a magic number: sb.Insert(i * 2' sb[i * 2]);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,PostgresTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\PostgresTuple.cs,InitSlashes,The following statement contains a magic number: var arr = new string[20];
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,SecretConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\SecretConverter.cs,ExtractBytesAndEcrypt,The following statement contains a magic number: int len = Marshal.ReadInt32(bstr' -4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,ShortConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ShortConverter.cs,ParseNullableCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,ShortConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ShortConverter.cs,ParseCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\StringConverter.cs,ParseCollection,The following statement contains a magic number: reader.Read(context + 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: buffer[pos + 4] = '-';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: buffer[pos + 7] = '-';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: buffer[pos + 10] = ' ';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: buffer[pos + 13] = ':';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: buffer[pos + 16] = ':';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Month' buffer' pos + 5);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Day' buffer' pos + 8);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Hour' buffer' pos + 11);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Minute' buffer' pos + 14);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Second' buffer' pos + 17);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: int micro = (int)(value.Ticks - new DateTime(value.Year' value.Month' value.Day' value.Hour' value.Minute' value.Second' value.Kind).Ticks) / 10;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: int end = pos + 19;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: buffer[pos + 19] = '.';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: var div = micro / 100;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: var rem = micro - div * 100;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write4(div' buffer' 20);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(rem' buffer' 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: end = pos + 25;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: return end + 3;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: buffer[pos + 4] = '-';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: buffer[pos + 7] = '-';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: buffer[pos + 10] = ' ';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: buffer[pos + 13] = ':';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: buffer[pos + 16] = ':';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Month' buffer' pos + 5);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Day' buffer' pos + 8);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Hour' buffer' pos + 11);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Minute' buffer' pos + 14);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Second' buffer' pos + 17);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: int micro = (int)(value.ToUniversalTime().Ticks - new DateTime(value.Year' value.Month' value.Day' value.Hour' value.Minute' value.Second' DateTimeKind.Utc).Ticks) / 10;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: int end = pos + 19;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: buffer[pos + 19] = '.';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: var div = micro / 100;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: var rem = micro - div * 100;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write4(div' buffer' 20);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(rem' buffer' 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: end = pos + 25;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,Serialize,The following statement contains a magic number: return end + 3;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseTimestampUtc,The following statement contains a magic number: buf[10] != ' '
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseTimestampUtc,The following statement contains a magic number: var month = NumberConverter.Read2(buf' 5);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseTimestampUtc,The following statement contains a magic number: var date = NumberConverter.Read2(buf' 8);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseTimestampUtc,The following statement contains a magic number: var hour = NumberConverter.Read2(buf' 11);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseTimestampUtc,The following statement contains a magic number: var minutes = NumberConverter.Read2(buf' 14);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseTimestampUtc,The following statement contains a magic number: var seconds = NumberConverter.Read2(buf' 17);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseTimestampUtc,The following statement contains a magic number: var max = len - 3;
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseTimestampUtc,The following statement contains a magic number: nano += TimestampReminder[r] * (buf[i] - 48);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseTimestampUtc,The following statement contains a magic number: var pos = buf[len - 3] == '+';
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseTimestampUtc,The following statement contains a magic number: var offset = NumberConverter.Read2(buf' len - 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseTimestampUtc,The following statement contains a magic number: buf[19] == '.'
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseNullableCollection,The following statement contains a magic number: reader.Read(context + 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseNullableCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseCollection,The following statement contains a magic number: reader.Read(context + 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseCollection,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseNullableCollectionUtc,The following statement contains a magic number: reader.Read(context + 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseNullableCollectionUtc,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseCollectionUtc,The following statement contains a magic number: reader.Read(context + 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,ParseCollectionUtc,The following statement contains a magic number: cur = reader.Read(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Converters,TimestampTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\TimestampConverter.cs,BuildTuple,The following statement contains a magic number: var buf = new char[32];
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ArrayBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\ArrayHandling.cs,ToArrayList,The following statement contains a magic number: string stripBraces = BackendData.Trim().Substring(1' BackendData.Length - 2).Trim();
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,BitString,The following statement contains a magic number: ++curChunkLen == 32
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,BitString,The following statement contains a magic number: _chunks = new List<uint>((count + 31) / 32);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,BitString,The following statement contains a magic number: _chunks = new List<uint>((count + 31) / 32);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,BitString,The following statement contains a magic number: i < count / 32
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,BitString,The following statement contains a magic number: count % 32 != 0
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,BitString,The following statement contains a magic number: _lastChunkLen = count % 32;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,BitString,The following statement contains a magic number: int bitCount = 32;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,IndexOf,The following statement contains a magic number: return chunkCount * 32 + i;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,IndexOf,The following statement contains a magic number: i != 32
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,GetEnumerator,The following statement contains a magic number: i != 31 - _lastChunkLen
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,GetHashCode,The following statement contains a magic number: ret ^= Npgsql.PGUtil.RotateShift((int)chunk' ret % 32);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,XFormatString,The following statement contains a magic number: !ignoreTrailingBits && _lastChunkLen % 4 != 0
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,XFormatString,The following statement contains a magic number: sb.Length -= (32 - _lastChunkLen + 3) / 4;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,XFormatString,The following statement contains a magic number: sb.Length -= (32 - _lastChunkLen + 3) / 4;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,XFormatString,The following statement contains a magic number: sb.Length -= (32 - _lastChunkLen + 3) / 4;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToString,The following statement contains a magic number: switch (format[0])  			{  				case 'b':  				case 'B':  					return ZeroPad(BFormatString()' padTo).ToString();  				case 'x':  					return ZeroPad(XFormatString(false' false)' padTo).ToString();  				case 'X':  					return ZeroPad(XFormatString(true' false)' padTo).ToString();  				case 'g':  					return ZeroPad(BFormatString()' padTo).Insert(0' "b'").Append('\'').ToString();  				case 'G':  					return ZeroPad(BFormatString()' padTo).Insert(0' "B'").Append('\'').ToString();  				case 'y':  					return ZeroPad(XFormatString(false' false)' padTo).Insert(0' "x'").Append('\'').ToString();  				case 'Y':  					return ZeroPad(XFormatString(true' false)' padTo).Insert(0' "X'").Append('\'').ToString();  				case 'c':  					return ToString((_lastChunkLen % 4 == 0 ? "y" : "g") + padTo.ToString());  				case 'C':  					return ToString((_lastChunkLen % 4 == 0 ? "Y" : "G") + padTo.ToString());  				case 'e':  					return ToString("E" + padTo.ToString()).ToLowerInvariant();  				case 'E':  					if (_lastChunkLen == 1 && _chunks.Count == 1)  						return (_chunks[0] & 0x80000000u) == 0 ? "0" : "1";//both safe in this case for all lengths' and allows for some backwards compatibility from threating bit(1) as if it were boolean.  					else if (_lastChunkLen % 4 == 0)  						return ToString("Y" + padTo.ToString());  					else if (Length < 9)  						return ToString("G" + padTo.ToString());  					else  					{  						StringBuilder sb = XFormatString(true' true).Insert(0' "X'");  						sb.Append("\'||B\'");  						uint lastNibble = _chunks[_chunks.Count - 1] << (_lastChunkLen / 4 * 4);  						for (int i = 0; i < _lastChunkLen % 4; ++i)  						{  							uint mask = 0x80000000u >> i;  							sb.Append((lastNibble & mask) != 0 ? '1' : '0');  						}  						return sb.Append('\'').ToString();  					}  				default:  					throw new FormatException();  			}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToString,The following statement contains a magic number: switch (format[0])  			{  				case 'b':  				case 'B':  					return ZeroPad(BFormatString()' padTo).ToString();  				case 'x':  					return ZeroPad(XFormatString(false' false)' padTo).ToString();  				case 'X':  					return ZeroPad(XFormatString(true' false)' padTo).ToString();  				case 'g':  					return ZeroPad(BFormatString()' padTo).Insert(0' "b'").Append('\'').ToString();  				case 'G':  					return ZeroPad(BFormatString()' padTo).Insert(0' "B'").Append('\'').ToString();  				case 'y':  					return ZeroPad(XFormatString(false' false)' padTo).Insert(0' "x'").Append('\'').ToString();  				case 'Y':  					return ZeroPad(XFormatString(true' false)' padTo).Insert(0' "X'").Append('\'').ToString();  				case 'c':  					return ToString((_lastChunkLen % 4 == 0 ? "y" : "g") + padTo.ToString());  				case 'C':  					return ToString((_lastChunkLen % 4 == 0 ? "Y" : "G") + padTo.ToString());  				case 'e':  					return ToString("E" + padTo.ToString()).ToLowerInvariant();  				case 'E':  					if (_lastChunkLen == 1 && _chunks.Count == 1)  						return (_chunks[0] & 0x80000000u) == 0 ? "0" : "1";//both safe in this case for all lengths' and allows for some backwards compatibility from threating bit(1) as if it were boolean.  					else if (_lastChunkLen % 4 == 0)  						return ToString("Y" + padTo.ToString());  					else if (Length < 9)  						return ToString("G" + padTo.ToString());  					else  					{  						StringBuilder sb = XFormatString(true' true).Insert(0' "X'");  						sb.Append("\'||B\'");  						uint lastNibble = _chunks[_chunks.Count - 1] << (_lastChunkLen / 4 * 4);  						for (int i = 0; i < _lastChunkLen % 4; ++i)  						{  							uint mask = 0x80000000u >> i;  							sb.Append((lastNibble & mask) != 0 ? '1' : '0');  						}  						return sb.Append('\'').ToString();  					}  				default:  					throw new FormatException();  			}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToString,The following statement contains a magic number: switch (format[0])  			{  				case 'b':  				case 'B':  					return ZeroPad(BFormatString()' padTo).ToString();  				case 'x':  					return ZeroPad(XFormatString(false' false)' padTo).ToString();  				case 'X':  					return ZeroPad(XFormatString(true' false)' padTo).ToString();  				case 'g':  					return ZeroPad(BFormatString()' padTo).Insert(0' "b'").Append('\'').ToString();  				case 'G':  					return ZeroPad(BFormatString()' padTo).Insert(0' "B'").Append('\'').ToString();  				case 'y':  					return ZeroPad(XFormatString(false' false)' padTo).Insert(0' "x'").Append('\'').ToString();  				case 'Y':  					return ZeroPad(XFormatString(true' false)' padTo).Insert(0' "X'").Append('\'').ToString();  				case 'c':  					return ToString((_lastChunkLen % 4 == 0 ? "y" : "g") + padTo.ToString());  				case 'C':  					return ToString((_lastChunkLen % 4 == 0 ? "Y" : "G") + padTo.ToString());  				case 'e':  					return ToString("E" + padTo.ToString()).ToLowerInvariant();  				case 'E':  					if (_lastChunkLen == 1 && _chunks.Count == 1)  						return (_chunks[0] & 0x80000000u) == 0 ? "0" : "1";//both safe in this case for all lengths' and allows for some backwards compatibility from threating bit(1) as if it were boolean.  					else if (_lastChunkLen % 4 == 0)  						return ToString("Y" + padTo.ToString());  					else if (Length < 9)  						return ToString("G" + padTo.ToString());  					else  					{  						StringBuilder sb = XFormatString(true' true).Insert(0' "X'");  						sb.Append("\'||B\'");  						uint lastNibble = _chunks[_chunks.Count - 1] << (_lastChunkLen / 4 * 4);  						for (int i = 0; i < _lastChunkLen % 4; ++i)  						{  							uint mask = 0x80000000u >> i;  							sb.Append((lastNibble & mask) != 0 ? '1' : '0');  						}  						return sb.Append('\'').ToString();  					}  				default:  					throw new FormatException();  			}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToString,The following statement contains a magic number: switch (format[0])  			{  				case 'b':  				case 'B':  					return ZeroPad(BFormatString()' padTo).ToString();  				case 'x':  					return ZeroPad(XFormatString(false' false)' padTo).ToString();  				case 'X':  					return ZeroPad(XFormatString(true' false)' padTo).ToString();  				case 'g':  					return ZeroPad(BFormatString()' padTo).Insert(0' "b'").Append('\'').ToString();  				case 'G':  					return ZeroPad(BFormatString()' padTo).Insert(0' "B'").Append('\'').ToString();  				case 'y':  					return ZeroPad(XFormatString(false' false)' padTo).Insert(0' "x'").Append('\'').ToString();  				case 'Y':  					return ZeroPad(XFormatString(true' false)' padTo).Insert(0' "X'").Append('\'').ToString();  				case 'c':  					return ToString((_lastChunkLen % 4 == 0 ? "y" : "g") + padTo.ToString());  				case 'C':  					return ToString((_lastChunkLen % 4 == 0 ? "Y" : "G") + padTo.ToString());  				case 'e':  					return ToString("E" + padTo.ToString()).ToLowerInvariant();  				case 'E':  					if (_lastChunkLen == 1 && _chunks.Count == 1)  						return (_chunks[0] & 0x80000000u) == 0 ? "0" : "1";//both safe in this case for all lengths' and allows for some backwards compatibility from threating bit(1) as if it were boolean.  					else if (_lastChunkLen % 4 == 0)  						return ToString("Y" + padTo.ToString());  					else if (Length < 9)  						return ToString("G" + padTo.ToString());  					else  					{  						StringBuilder sb = XFormatString(true' true).Insert(0' "X'");  						sb.Append("\'||B\'");  						uint lastNibble = _chunks[_chunks.Count - 1] << (_lastChunkLen / 4 * 4);  						for (int i = 0; i < _lastChunkLen % 4; ++i)  						{  							uint mask = 0x80000000u >> i;  							sb.Append((lastNibble & mask) != 0 ? '1' : '0');  						}  						return sb.Append('\'').ToString();  					}  				default:  					throw new FormatException();  			}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToString,The following statement contains a magic number: switch (format[0])  			{  				case 'b':  				case 'B':  					return ZeroPad(BFormatString()' padTo).ToString();  				case 'x':  					return ZeroPad(XFormatString(false' false)' padTo).ToString();  				case 'X':  					return ZeroPad(XFormatString(true' false)' padTo).ToString();  				case 'g':  					return ZeroPad(BFormatString()' padTo).Insert(0' "b'").Append('\'').ToString();  				case 'G':  					return ZeroPad(BFormatString()' padTo).Insert(0' "B'").Append('\'').ToString();  				case 'y':  					return ZeroPad(XFormatString(false' false)' padTo).Insert(0' "x'").Append('\'').ToString();  				case 'Y':  					return ZeroPad(XFormatString(true' false)' padTo).Insert(0' "X'").Append('\'').ToString();  				case 'c':  					return ToString((_lastChunkLen % 4 == 0 ? "y" : "g") + padTo.ToString());  				case 'C':  					return ToString((_lastChunkLen % 4 == 0 ? "Y" : "G") + padTo.ToString());  				case 'e':  					return ToString("E" + padTo.ToString()).ToLowerInvariant();  				case 'E':  					if (_lastChunkLen == 1 && _chunks.Count == 1)  						return (_chunks[0] & 0x80000000u) == 0 ? "0" : "1";//both safe in this case for all lengths' and allows for some backwards compatibility from threating bit(1) as if it were boolean.  					else if (_lastChunkLen % 4 == 0)  						return ToString("Y" + padTo.ToString());  					else if (Length < 9)  						return ToString("G" + padTo.ToString());  					else  					{  						StringBuilder sb = XFormatString(true' true).Insert(0' "X'");  						sb.Append("\'||B\'");  						uint lastNibble = _chunks[_chunks.Count - 1] << (_lastChunkLen / 4 * 4);  						for (int i = 0; i < _lastChunkLen % 4; ++i)  						{  							uint mask = 0x80000000u >> i;  							sb.Append((lastNibble & mask) != 0 ? '1' : '0');  						}  						return sb.Append('\'').ToString();  					}  				default:  					throw new FormatException();  			}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToString,The following statement contains a magic number: switch (format[0])  			{  				case 'b':  				case 'B':  					return ZeroPad(BFormatString()' padTo).ToString();  				case 'x':  					return ZeroPad(XFormatString(false' false)' padTo).ToString();  				case 'X':  					return ZeroPad(XFormatString(true' false)' padTo).ToString();  				case 'g':  					return ZeroPad(BFormatString()' padTo).Insert(0' "b'").Append('\'').ToString();  				case 'G':  					return ZeroPad(BFormatString()' padTo).Insert(0' "B'").Append('\'').ToString();  				case 'y':  					return ZeroPad(XFormatString(false' false)' padTo).Insert(0' "x'").Append('\'').ToString();  				case 'Y':  					return ZeroPad(XFormatString(true' false)' padTo).Insert(0' "X'").Append('\'').ToString();  				case 'c':  					return ToString((_lastChunkLen % 4 == 0 ? "y" : "g") + padTo.ToString());  				case 'C':  					return ToString((_lastChunkLen % 4 == 0 ? "Y" : "G") + padTo.ToString());  				case 'e':  					return ToString("E" + padTo.ToString()).ToLowerInvariant();  				case 'E':  					if (_lastChunkLen == 1 && _chunks.Count == 1)  						return (_chunks[0] & 0x80000000u) == 0 ? "0" : "1";//both safe in this case for all lengths' and allows for some backwards compatibility from threating bit(1) as if it were boolean.  					else if (_lastChunkLen % 4 == 0)  						return ToString("Y" + padTo.ToString());  					else if (Length < 9)  						return ToString("G" + padTo.ToString());  					else  					{  						StringBuilder sb = XFormatString(true' true).Insert(0' "X'");  						sb.Append("\'||B\'");  						uint lastNibble = _chunks[_chunks.Count - 1] << (_lastChunkLen / 4 * 4);  						for (int i = 0; i < _lastChunkLen % 4; ++i)  						{  							uint mask = 0x80000000u >> i;  							sb.Append((lastNibble & mask) != 0 ? '1' : '0');  						}  						return sb.Append('\'').ToString();  					}  				default:  					throw new FormatException();  			}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToString,The following statement contains a magic number: switch (format[0])  			{  				case 'b':  				case 'B':  					return ZeroPad(BFormatString()' padTo).ToString();  				case 'x':  					return ZeroPad(XFormatString(false' false)' padTo).ToString();  				case 'X':  					return ZeroPad(XFormatString(true' false)' padTo).ToString();  				case 'g':  					return ZeroPad(BFormatString()' padTo).Insert(0' "b'").Append('\'').ToString();  				case 'G':  					return ZeroPad(BFormatString()' padTo).Insert(0' "B'").Append('\'').ToString();  				case 'y':  					return ZeroPad(XFormatString(false' false)' padTo).Insert(0' "x'").Append('\'').ToString();  				case 'Y':  					return ZeroPad(XFormatString(true' false)' padTo).Insert(0' "X'").Append('\'').ToString();  				case 'c':  					return ToString((_lastChunkLen % 4 == 0 ? "y" : "g") + padTo.ToString());  				case 'C':  					return ToString((_lastChunkLen % 4 == 0 ? "Y" : "G") + padTo.ToString());  				case 'e':  					return ToString("E" + padTo.ToString()).ToLowerInvariant();  				case 'E':  					if (_lastChunkLen == 1 && _chunks.Count == 1)  						return (_chunks[0] & 0x80000000u) == 0 ? "0" : "1";//both safe in this case for all lengths' and allows for some backwards compatibility from threating bit(1) as if it were boolean.  					else if (_lastChunkLen % 4 == 0)  						return ToString("Y" + padTo.ToString());  					else if (Length < 9)  						return ToString("G" + padTo.ToString());  					else  					{  						StringBuilder sb = XFormatString(true' true).Insert(0' "X'");  						sb.Append("\'||B\'");  						uint lastNibble = _chunks[_chunks.Count - 1] << (_lastChunkLen / 4 * 4);  						for (int i = 0; i < _lastChunkLen % 4; ++i)  						{  							uint mask = 0x80000000u >> i;  							sb.Append((lastNibble & mask) != 0 ? '1' : '0');  						}  						return sb.Append('\'').ToString();  					}  				default:  					throw new FormatException();  			}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToByte,The following statement contains a magic number: _lastChunkLen > 8
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToUInt16,The following statement contains a magic number: _lastChunkLen > 16
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToUInt64,The following statement contains a magic number: switch (_chunks.Count)  			{  				case 0:  				case 1:  					return ToUInt32();  				case 2:  					return (((ulong)_chunks[0]) << 32 | (ulong)_chunks[1]) >> 32 - _lastChunkLen;  				default:  					throw new InvalidCastException();  			}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToUInt64,The following statement contains a magic number: switch (_chunks.Count)  			{  				case 0:  				case 1:  					return ToUInt32();  				case 2:  					return (((ulong)_chunks[0]) << 32 | (ulong)_chunks[1]) >> 32 - _lastChunkLen;  				default:  					throw new InvalidCastException();  			}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToUInt64,The following statement contains a magic number: switch (_chunks.Count)  			{  				case 0:  				case 1:  					return ToUInt32();  				case 2:  					return (((ulong)_chunks[0]) << 32 | (ulong)_chunks[1]) >> 32 - _lastChunkLen;  				default:  					throw new InvalidCastException();  			}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToByteEnumerable,The following statement contains a magic number: _lastChunkLen % 8 != 0
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToByteEnumerable,The following statement contains a magic number: i > 24 - _lastChunkLen
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToUInt16Enumerable,The following statement contains a magic number: _lastChunkLen % 16 != 0
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToUInt16Enumerable,The following statement contains a magic number: yield return (ushort)(chunk >> 16);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToUInt16Enumerable,The following statement contains a magic number: yield return (ushort)(_chunks[_chunks.Count] >> 16);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToUInt16Enumerable,The following statement contains a magic number: _lastChunkLen == 16
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToUInt64Enumerable,The following statement contains a magic number: _lastChunkLen != 0 || _chunks.Count % 2 != 0
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BitString,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\BitString.cs,ToUInt64Enumerable,The following statement contains a magic number: yield return (ulong)_chunks[i] << 32 | (ulong)_chunks[i + 1];
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlInterval,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,The following statement contains a magic number: str = SafeSubstring(str' idx + 5);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlInterval,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,The following statement contains a magic number: str = SafeSubstring(str' idx + 4);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlInterval,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,The following statement contains a magic number: str = SafeSubstring(str' idx + 4).Trim();
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlInterval,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,The following statement contains a magic number: switch (parts.Length) //One of those times that fall-through would actually be good.  					{  						case 1:  							hours = int.Parse(parts[0]);  							break;  						case 2:  							hours = int.Parse(parts[0]);  							minutes = int.Parse(parts[1]);  							break;  						default:  							hours = int.Parse(parts[0]);  							minutes = int.Parse(parts[1]);  							seconds = decimal.Parse(parts[2]' System.Globalization.CultureInfo.InvariantCulture.NumberFormat);  							break;  					}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlInterval,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,The following statement contains a magic number: switch (parts.Length) //One of those times that fall-through would actually be good.  					{  						case 1:  							hours = int.Parse(parts[0]);  							break;  						case 2:  							hours = int.Parse(parts[0]);  							minutes = int.Parse(parts[1]);  							break;  						default:  							hours = int.Parse(parts[0]);  							minutes = int.Parse(parts[1]);  							seconds = decimal.Parse(parts[2]' System.Globalization.CultureInfo.InvariantCulture.NumberFormat);  							break;  					}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlInterval,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,ToString,The following statement contains a magic number: decimal seconds = _ticks / (decimal)TicksPerSecond - (_ticks / TicksPerMinute) * 60;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,NpgsqlDate,The following statement contains a magic number: year == 0 || year < MinYear || year > MaxYear || month < 1 || month > 12 || day < 1 ||  				(day > (IsLeap(year) ? 366 : 365))
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,NpgsqlDate,The following statement contains a magic number: year == 0 || year < MinYear || year > MaxYear || month < 1 || month > 12 || day < 1 ||  				(day > (IsLeap(year) ? 366 : 365))
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,NpgsqlDate,The following statement contains a magic number: year == 0 || year < MinYear || year > MaxYear || month < 1 || month > 12 || day < 1 ||  				(day > (IsLeap(year) ? 366 : 365))
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,DaysForYears,The following statement contains a magic number: return calcYear / 400 * DaysIn4Centuries //Blocks of 400 years with their leap and common years  				   + calcYear % 400 / 100 * DaysInCentury //Remaining blocks of 100 years with their leap and common years  				   + calcYear % 100 / 4 * DaysIn4Years //Remaining blocks of 4 years with their leap and common years  				   + calcYear % 4 * DaysInYear //Remaining years' all common  				   + (calcYear < 0 ? -1 : 0);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,DaysForYears,The following statement contains a magic number: return calcYear / 400 * DaysIn4Centuries //Blocks of 400 years with their leap and common years  				   + calcYear % 400 / 100 * DaysInCentury //Remaining blocks of 100 years with their leap and common years  				   + calcYear % 100 / 4 * DaysIn4Years //Remaining blocks of 4 years with their leap and common years  				   + calcYear % 4 * DaysInYear //Remaining years' all common  				   + (calcYear < 0 ? -1 : 0);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,DaysForYears,The following statement contains a magic number: return calcYear / 400 * DaysIn4Centuries //Blocks of 400 years with their leap and common years  				   + calcYear % 400 / 100 * DaysInCentury //Remaining blocks of 100 years with their leap and common years  				   + calcYear % 100 / 4 * DaysIn4Years //Remaining blocks of 4 years with their leap and common years  				   + calcYear % 4 * DaysInYear //Remaining years' all common  				   + (calcYear < 0 ? -1 : 0);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,DaysForYears,The following statement contains a magic number: return calcYear / 400 * DaysIn4Centuries //Blocks of 400 years with their leap and common years  				   + calcYear % 400 / 100 * DaysInCentury //Remaining blocks of 100 years with their leap and common years  				   + calcYear % 100 / 4 * DaysIn4Years //Remaining blocks of 4 years with their leap and common years  				   + calcYear % 4 * DaysInYear //Remaining years' all common  				   + (calcYear < 0 ? -1 : 0);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,DaysForYears,The following statement contains a magic number: return calcYear / 400 * DaysIn4Centuries //Blocks of 400 years with their leap and common years  				   + calcYear % 400 / 100 * DaysInCentury //Remaining blocks of 100 years with their leap and common years  				   + calcYear % 100 / 4 * DaysIn4Years //Remaining blocks of 4 years with their leap and common years  				   + calcYear % 4 * DaysInYear //Remaining years' all common  				   + (calcYear < 0 ? -1 : 0);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,DaysForYears,The following statement contains a magic number: return calcYear / 400 * DaysIn4Centuries //Blocks of 400 years with their leap and common years  				   + calcYear % 400 / 100 * DaysInCentury //Remaining blocks of 100 years with their leap and common years  				   + calcYear % 100 / 4 * DaysIn4Years //Remaining blocks of 4 years with their leap and common years  				   + calcYear % 4 * DaysInYear //Remaining years' all common  				   + (calcYear < 0 ? -1 : 0);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,IsLeap,The following statement contains a magic number: return (year % 4 == 0) && ((year % 100 != 0) || (year % 400 == 0));
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,IsLeap,The following statement contains a magic number: return (year % 4 == 0) && ((year % 100 != 0) || (year % 400 == 0));
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,IsLeap,The following statement contains a magic number: return (year % 4 == 0) && ((year % 100 != 0) || (year % 400 == 0));
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,AddMonths,The following statement contains a magic number: newMonth -= 12;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,AddMonths,The following statement contains a magic number: newMonth > 12
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlDate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,AddMonths,The following statement contains a magic number: newMonth += 12;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeZone,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,NpgsqlTimeZone,The following statement contains a magic number: _totalSeconds = hours * 60 * 60 + minutes * 60 + seconds;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeZone,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,NpgsqlTimeZone,The following statement contains a magic number: _totalSeconds = hours * 60 * 60 + minutes * 60 + seconds;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeZone,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,NpgsqlTimeZone,The following statement contains a magic number: _totalSeconds = hours * 60 * 60 + minutes * 60 + seconds;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeZone,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,SolarTimeZone,The following statement contains a magic number: return new NpgsqlTimeZone((long)(longitude / 15m * NpgsqlInterval.TicksPerHour));
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeZone,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,LocalTimeZone,The following statement contains a magic number: date.Year >= 1902 && date.Year <= 2038
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeZone,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,LocalTimeZone,The following statement contains a magic number: date.Year >= 1902 && date.Year <= 2038
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeZone,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,The following statement contains a magic number: switch (parts.Length) //One of those times that fall-through would actually be good.  				{  					case 1:  						hours = int.Parse(parts[0]);  						minutes = seconds = 0;  						break;  					case 2:  						hours = int.Parse(parts[0]);  						minutes = int.Parse(parts[1]);  						seconds = 0;  						break;  					default:  						hours = int.Parse(parts[0]);  						minutes = int.Parse(parts[1]);  						seconds = int.Parse(parts[2]);  						break;  				}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeZone,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,The following statement contains a magic number: switch (parts.Length) //One of those times that fall-through would actually be good.  				{  					case 1:  						hours = int.Parse(parts[0]);  						minutes = seconds = 0;  						break;  					case 2:  						hours = int.Parse(parts[0]);  						minutes = int.Parse(parts[1]);  						seconds = 0;  						break;  					default:  						hours = int.Parse(parts[0]);  						minutes = int.Parse(parts[1]);  						seconds = int.Parse(parts[2]);  						break;  				}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeZone,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,The following statement contains a magic number: int totalSeconds = (hours * 60 * 60 + minutes * 60 + seconds) * (neg ? -1 : 1);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeZone,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,The following statement contains a magic number: int totalSeconds = (hours * 60 * 60 + minutes * 60 + seconds) * (neg ? -1 : 1);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeZone,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,The following statement contains a magic number: int totalSeconds = (hours * 60 * 60 + minutes * 60 + seconds) * (neg ? -1 : 1);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTime,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,ToString,The following statement contains a magic number: decimal seconds = _ticks / (decimal)NpgsqlInterval.TicksPerSecond - (_ticks / NpgsqlInterval.TicksPerMinute) * 60;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTime,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,The following statement contains a magic number: switch (parts.Length) //One of those times that fall-through would actually be good.  				{  					case 1:  						hours = int.Parse(parts[0]);  						break;  					case 2:  						hours = int.Parse(parts[0]);  						minutes = int.Parse(parts[1]);  						break;  					default:  						hours = int.Parse(parts[0]);  						minutes = int.Parse(parts[1]);  						seconds = decimal.Parse(parts[2]' System.Globalization.CultureInfo.InvariantCulture.NumberFormat);  						break;  				}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTime,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,The following statement contains a magic number: switch (parts.Length) //One of those times that fall-through would actually be good.  				{  					case 1:  						hours = int.Parse(parts[0]);  						break;  					case 2:  						hours = int.Parse(parts[0]);  						minutes = int.Parse(parts[1]);  						break;  					default:  						hours = int.Parse(parts[0]);  						minutes = int.Parse(parts[1]);  						seconds = decimal.Parse(parts[2]' System.Globalization.CultureInfo.InvariantCulture.NumberFormat);  						break;  				}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTime,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,The following statement contains a magic number: hours < 0 || hours > 24 || minutes < 0 || minutes > 59 || seconds < 0m || seconds >= 60 ||  					(hours == 24 && (minutes != 0 || seconds != 0m))
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTime,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,The following statement contains a magic number: hours < 0 || hours > 24 || minutes < 0 || minutes > 59 || seconds < 0m || seconds >= 60 ||  					(hours == 24 && (minutes != 0 || seconds != 0m))
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTime,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,The following statement contains a magic number: hours < 0 || hours > 24 || minutes < 0 || minutes > 59 || seconds < 0m || seconds >= 60 ||  					(hours == 24 && (minutes != 0 || seconds != 0m))
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTime,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Parse,The following statement contains a magic number: hours < 0 || hours > 24 || minutes < 0 || minutes > 59 || seconds < 0m || seconds >= 60 ||  					(hours == 24 && (minutes != 0 || seconds != 0m))
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeTZ,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,GetHashCode,The following statement contains a magic number: return _localTime.GetHashCode() ^ PGUtil.RotateShift(_timeZone.GetHashCode()' 24);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeStamp,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,GetHashCode,The following statement contains a magic number: switch (_type)  			{  				case TimeType.Infinity:  					return int.MaxValue;  				case TimeType.MinusInfinity:  					return int.MinValue;  				default:  					return _date.GetHashCode() ^ PGUtil.RotateShift(_time.GetHashCode()' 16);  			}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeStampTZ,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,GetHashCode,The following statement contains a magic number: switch (_type)  			{  				case TimeType.Infinity:  					return int.MaxValue;  				case TimeType.MinusInfinity:  					return int.MinValue;  				default:  					return _date.GetHashCode() ^ PGUtil.RotateShift(_time.GetHashCode()' 16);  			}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,Fastpath,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\FastPath.cs,FastpathV3,The following statement contains a magic number: l_msgLen += 16;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,Fastpath,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\FastPath.cs,FastpathV3,The following statement contains a magic number: switch (c)  					{  						case 'A': // Asynchronous Notify  							Int32 msglen = PGUtil.ReadInt32(stream' buffer);  							Int32 pid = PGUtil.ReadInt32(stream' buffer);  							String msg = PGUtil.ReadString(stream' queue);  							PGUtil.ReadString(stream' queue);  							String param = PGUtil.ReadString(stream' queue);    							break;  						//------------------------------  						// Error message returned  						case 'E':  							NpgsqlError e = new NpgsqlError(stream' buffer' queue);  							throw new NpgsqlException(e.ToString());    						//------------------------------  						// Notice from backend  						case 'N':  							Int32 l_nlen = PGUtil.ReadInt32(stream' buffer);    							conn.Connector.FireNotice(new NpgsqlError(stream' buffer' queue));    							break;    						case 'V':  							Int32 l_msgLen = PGUtil.ReadInt32(stream' buffer);  							Int32 l_valueLen = PGUtil.ReadInt32(stream' buffer);    							if (l_valueLen == -1)  							{  								//null value  							}  							else if (l_valueLen == 0)  							{  								result = new Byte[0];  							}  							else  							{  								// Return an Integer if  								if (resulttype)  								{  									result = PGUtil.ReadInt32(stream' buffer);  								}  								else  								{  									Byte[] buf = new Byte[l_valueLen];    									Int32 bytes_from_stream = 0;  									Int32 total_bytes_read = 0;  									Int32 size = l_valueLen;  									do  									{  										bytes_from_stream = stream.Read(buf' total_bytes_read' size);  										total_bytes_read += bytes_from_stream;  										size -= bytes_from_stream;  									}  									while (size > 0);    									result = buf;  								}  							}  							break;    						case 'Z':  							//TODO: use size better  							if (PGUtil.ReadInt32(stream' buffer) != 5)  							{  								throw new NpgsqlException("Received Z");  							}  							//TODO: handle transaction status  							Char l_tStatus = (Char)stream.ReadByte();  							l_endQuery = true;  							break;    						default:  							throw new NpgsqlException(string.Format("postgresql.fp.protocol received {0}"' c));  					}
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,FastpathArg,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\FastPathArg.cs,Send,The following statement contains a magic number: PGUtil.WriteInt32(s' 4);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,FastpathArg,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\FastPathArg.cs,SendSize,The following statement contains a magic number: return 8;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,LargeObject,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\LargeObject.cs,LargeObject,The following statement contains a magic number: FastpathArg[] args = new FastpathArg[2];
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,LargeObject,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\LargeObject.cs,Read,The following statement contains a magic number: FastpathArg[] args = new FastpathArg[2];
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,LargeObject,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\LargeObject.cs,Write,The following statement contains a magic number: FastpathArg[] args = new FastpathArg[2];
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,LargeObject,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\LargeObject.cs,Seek,The following statement contains a magic number: FastpathArg[] args = new FastpathArg[3];
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,LargeObject,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\LargeObject.cs,Seek,The following statement contains a magic number: args[2] = new FastpathArg(refi);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,LargeObjectManager,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\LargeObjectManager.cs,LargeObjectManager,The following statement contains a magic number: conn.PostgreSqlVersion > new Version(7' 3' 0)
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,LargeObjectManager,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\LargeObjectManager.cs,LargeObjectManager,The following statement contains a magic number: conn.PostgreSqlVersion > new Version(7' 3' 0)
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,LargeObjectManager,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\LargeObjectManager.cs,LargeObjectManager,The following statement contains a magic number: conn.PostgreSqlVersion > new Version(7' 3' 0)
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,LargeObjectManager,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\LargeObjectManager.cs,LargeObjectManager,The following statement contains a magic number: conn.PostgreSqlVersion > new Version(7' 3' 0)
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BasicBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToBinary,The following statement contains a magic number: byte[] data = new byte[byteAStringLength / 2 - 1];
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BasicBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToBinary,The following statement contains a magic number: data[i] = (byte)((CharLookup[BackendData[i * 2 + 2]] << 4) + CharLookup[BackendData[i * 2 + 3]]);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BasicBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToBinary,The following statement contains a magic number: data[i] = (byte)((CharLookup[BackendData[i * 2 + 2]] << 4) + CharLookup[BackendData[i * 2 + 3]]);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BasicBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToBinary,The following statement contains a magic number: data[i] = (byte)((CharLookup[BackendData[i * 2 + 2]] << 4) + CharLookup[BackendData[i * 2 + 3]]);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BasicBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToBinary,The following statement contains a magic number: data[i] = (byte)((CharLookup[BackendData[i * 2 + 2]] << 4) + CharLookup[BackendData[i * 2 + 3]]);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BasicBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToBinary,The following statement contains a magic number: data[i] = (byte)((CharLookup[BackendData[i * 2 + 2]] << 4) + CharLookup[BackendData[i * 2 + 3]]);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BasicBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToMoney,The following statement contains a magic number: return Convert.ToDecimal(EXCLUDE_DIGITS.Replace(BackendData' string.Empty)' CultureInfo.InvariantCulture) / 100m;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,BasicNativeToBackendTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToBinary,The following statement contains a magic number: StringBuilder res = new StringBuilder(byteArray.Length * 5);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ExtendedBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToPoint,The following statement contains a magic number: return  				new NpgsqlPoint(Single.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'  								Single.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat));
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ExtendedBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToBox,The following statement contains a magic number: return  				new NpgsqlBox(  					new NpgsqlPoint(Single.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'  									Single.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat))'  					new NpgsqlPoint(Single.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'  									Single.Parse(m.Groups[4].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)));
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ExtendedBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToBox,The following statement contains a magic number: return  				new NpgsqlBox(  					new NpgsqlPoint(Single.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'  									Single.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat))'  					new NpgsqlPoint(Single.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'  									Single.Parse(m.Groups[4].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)));
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ExtendedBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToBox,The following statement contains a magic number: return  				new NpgsqlBox(  					new NpgsqlPoint(Single.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'  									Single.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat))'  					new NpgsqlPoint(Single.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'  									Single.Parse(m.Groups[4].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)));
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ExtendedBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToLSeg,The following statement contains a magic number: return  				new NpgsqlLSeg(  					new NpgsqlPoint(Single.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'  									Single.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat))'  					new NpgsqlPoint(Single.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'  									Single.Parse(m.Groups[4].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)));
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ExtendedBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToLSeg,The following statement contains a magic number: return  				new NpgsqlLSeg(  					new NpgsqlPoint(Single.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'  									Single.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat))'  					new NpgsqlPoint(Single.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'  									Single.Parse(m.Groups[4].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)));
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ExtendedBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToLSeg,The following statement contains a magic number: return  				new NpgsqlLSeg(  					new NpgsqlPoint(Single.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'  									Single.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat))'  					new NpgsqlPoint(Single.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'  									Single.Parse(m.Groups[4].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)));
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ExtendedBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToPath,The following statement contains a magic number: points.Add(  						new NpgsqlPoint(  							Single.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'  							Single.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)));
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ExtendedBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToPolygon,The following statement contains a magic number: String group2 = m.Groups[2].ToString();
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ExtendedBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToCircle,The following statement contains a magic number: return  				new NpgsqlCircle(  					new NpgsqlPoint(Single.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'  									Single.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat))'  					Single.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat));
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ExtendedBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypeConverters.cs,ToCircle,The following statement contains a magic number: return  				new NpgsqlCircle(  					new NpgsqlPoint(Single.Parse(m.Groups[1].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat)'  									Single.Parse(m.Groups[2].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat))'  					Single.Parse(m.Groups[3].ToString()' NumberStyles.Any' CultureInfo.InvariantCulture.NumberFormat));
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlPoint,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,GetHashCode,The following statement contains a magic number: return X.GetHashCode() ^ PGUtil.RotateShift(Y.GetHashCode()' sizeof (int)/2);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlBox,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,GetHashCode,The following statement contains a magic number: return                  Top.GetHashCode() ^ PGUtil.RotateShift(Right.GetHashCode()' sizeof (int)/4) ^                  PGUtil.RotateShift(Bottom.GetHashCode()' sizeof (int)/2) ^                  PGUtil.RotateShift(LowerLeft.GetHashCode()' sizeof (int)*3/4);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlBox,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,GetHashCode,The following statement contains a magic number: return                  Top.GetHashCode() ^ PGUtil.RotateShift(Right.GetHashCode()' sizeof (int)/4) ^                  PGUtil.RotateShift(Bottom.GetHashCode()' sizeof (int)/2) ^                  PGUtil.RotateShift(LowerLeft.GetHashCode()' sizeof (int)*3/4);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlBox,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,GetHashCode,The following statement contains a magic number: return                  Top.GetHashCode() ^ PGUtil.RotateShift(Right.GetHashCode()' sizeof (int)/4) ^                  PGUtil.RotateShift(Bottom.GetHashCode()' sizeof (int)/2) ^                  PGUtil.RotateShift(LowerLeft.GetHashCode()' sizeof (int)*3/4);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlBox,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,GetHashCode,The following statement contains a magic number: return                  Top.GetHashCode() ^ PGUtil.RotateShift(Right.GetHashCode()' sizeof (int)/4) ^                  PGUtil.RotateShift(Bottom.GetHashCode()' sizeof (int)/2) ^                  PGUtil.RotateShift(LowerLeft.GetHashCode()' sizeof (int)*3/4);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlLSeg,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,GetHashCode,The following statement contains a magic number: return                  Start.X.GetHashCode() ^ PGUtil.RotateShift(Start.Y.GetHashCode()' sizeof (int)/4) ^                  PGUtil.RotateShift(End.X.GetHashCode()' sizeof (int)/2) ^ PGUtil.RotateShift(End.Y.GetHashCode()' sizeof (int)*3/4);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlLSeg,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,GetHashCode,The following statement contains a magic number: return                  Start.X.GetHashCode() ^ PGUtil.RotateShift(Start.Y.GetHashCode()' sizeof (int)/4) ^                  PGUtil.RotateShift(End.X.GetHashCode()' sizeof (int)/2) ^ PGUtil.RotateShift(End.Y.GetHashCode()' sizeof (int)*3/4);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlLSeg,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,GetHashCode,The following statement contains a magic number: return                  Start.X.GetHashCode() ^ PGUtil.RotateShift(Start.Y.GetHashCode()' sizeof (int)/4) ^                  PGUtil.RotateShift(End.X.GetHashCode()' sizeof (int)/2) ^ PGUtil.RotateShift(End.Y.GetHashCode()' sizeof (int)*3/4);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlLSeg,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,GetHashCode,The following statement contains a magic number: return                  Start.X.GetHashCode() ^ PGUtil.RotateShift(Start.Y.GetHashCode()' sizeof (int)/4) ^                  PGUtil.RotateShift(End.X.GetHashCode()' sizeof (int)/2) ^ PGUtil.RotateShift(End.Y.GetHashCode()' sizeof (int)*3/4);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlPath,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,GetHashCode,The following statement contains a magic number: int ret = 266370105;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlPolygon,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,GetHashCode,The following statement contains a magic number: int ret = 266370105;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlCircle,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,GetHashCode,The following statement contains a magic number: return                  Center.X.GetHashCode() ^ PGUtil.RotateShift(Center.Y.GetHashCode()' sizeof (int)/4) ^                  PGUtil.RotateShift(Radius.GetHashCode()' sizeof (int)/2);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlCircle,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,GetHashCode,The following statement contains a magic number: return                  Center.X.GetHashCode() ^ PGUtil.RotateShift(Center.Y.GetHashCode()' sizeof (int)/4) ^                  PGUtil.RotateShift(Radius.GetHashCode()' sizeof (int)/2);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlInet,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,NpgsqlInet,The following statement contains a magic number: this.mask = 32;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlInet,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,ToString,The following statement contains a magic number: mask != 32
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlInet,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,GetHashCode,The following statement contains a magic number: return PGUtil.RotateShift(addr.GetHashCode()' mask%32);
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlMacAddress,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypes.cs,GetHashCode,The following statement contains a magic number: int ret = 266370105;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,LoadTypesMappings,The following statement contains a magic number: id = id * 10 + oid[i] - 48;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTypesHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,LoadTypesMappings,The following statement contains a magic number: id = id * 10 + oid[i] - 48;
Magic Number,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlNativeTypeInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\NpgsqlTypesHelper.cs,NpgsqlNativeTypeInfo,The following statement contains a magic number: ni.NumberDecimalDigits = 15;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,ByteBuffer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\ByteBuffer.cs,Add,The following statement contains a magic number: var newBuffer = new byte[Buffer.Length * 2];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,ByteBuffer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\ByteBuffer.cs,TryGetInt,The following statement contains a magic number: value = (value << 3) + (value << 1) + Buffer[i] - '0';
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,ByteBuffer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\ByteBuffer.cs,GetLong,The following statement contains a magic number: value = (value << 3) + (value << 1) + Buffer[i] - '0';
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCopySerializer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Copy\NpgsqlCopySerializer.cs,EscapeSequenceFor,The following statement contains a magic number: return  				c == '\t'  					? esc_t  					: c == '\n'  						? esc_n  						: c == '\r'  							? esc_r  							: c == '\b'  								? esc_b  								: c == '\f'  									? esc_f  									: c == '\v'  										? esc_v  										: (c < 32 || c > 127)  											? new byte[] { (byte)('0' + ((c / 64) & 7))' (byte)('0' + ((c / 8) & 7))' (byte)('0' + (c & 7)) }  											: new byte[] { (byte)c };
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCopySerializer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Copy\NpgsqlCopySerializer.cs,EscapeSequenceFor,The following statement contains a magic number: return  				c == '\t'  					? esc_t  					: c == '\n'  						? esc_n  						: c == '\r'  							? esc_r  							: c == '\b'  								? esc_b  								: c == '\f'  									? esc_f  									: c == '\v'  										? esc_v  										: (c < 32 || c > 127)  											? new byte[] { (byte)('0' + ((c / 64) & 7))' (byte)('0' + ((c / 8) & 7))' (byte)('0' + (c & 7)) }  											: new byte[] { (byte)c };
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCopySerializer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Copy\NpgsqlCopySerializer.cs,EscapeSequenceFor,The following statement contains a magic number: return  				c == '\t'  					? esc_t  					: c == '\n'  						? esc_n  						: c == '\r'  							? esc_r  							: c == '\b'  								? esc_b  								: c == '\f'  									? esc_f  									: c == '\v'  										? esc_v  										: (c < 32 || c > 127)  											? new byte[] { (byte)('0' + ((c / 64) & 7))' (byte)('0' + ((c / 8) & 7))' (byte)('0' + (c & 7)) }  											: new byte[] { (byte)c };
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCopySerializer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Copy\NpgsqlCopySerializer.cs,EscapeSequenceFor,The following statement contains a magic number: return  				c == '\t'  					? esc_t  					: c == '\n'  						? esc_n  						: c == '\r'  							? esc_r  							: c == '\b'  								? esc_b  								: c == '\f'  									? esc_f  									: c == '\v'  										? esc_v  										: (c < 32 || c > 127)  											? new byte[] { (byte)('0' + ((c / 64) & 7))' (byte)('0' + ((c / 8) & 7))' (byte)('0' + (c & 7)) }  											: new byte[] { (byte)c };
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCopySerializer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Copy\NpgsqlCopySerializer.cs,EscapeSequenceFor,The following statement contains a magic number: return  				c == '\t'  					? esc_t  					: c == '\n'  						? esc_n  						: c == '\r'  							? esc_r  							: c == '\b'  								? esc_b  								: c == '\f'  									? esc_f  									: c == '\v'  										? esc_v  										: (c < 32 || c > 127)  											? new byte[] { (byte)('0' + ((c / 64) & 7))' (byte)('0' + ((c / 8) & 7))' (byte)('0' + (c & 7)) }  											: new byte[] { (byte)c };
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCopySerializer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Copy\NpgsqlCopySerializer.cs,EscapeSequenceFor,The following statement contains a magic number: return  				c == '\t'  					? esc_t  					: c == '\n'  						? esc_n  						: c == '\r'  							? esc_r  							: c == '\b'  								? esc_b  								: c == '\f'  									? esc_f  									: c == '\v'  										? esc_v  										: (c < 32 || c > 127)  											? new byte[] { (byte)('0' + ((c / 64) & 7))' (byte)('0' + ((c / 8) & 7))' (byte)('0' + (c & 7)) }  											: new byte[] { (byte)c };
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCopySerializer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Copy\NpgsqlCopySerializer.cs,EscapeSequenceFor,The following statement contains a magic number: return  				c == '\t'  					? esc_t  					: c == '\n'  						? esc_n  						: c == '\r'  							? esc_r  							: c == '\b'  								? esc_b  								: c == '\f'  									? esc_f  									: c == '\v'  										? esc_v  										: (c < 32 || c > 127)  											? new byte[] { (byte)('0' + ((c / 64) & 7))' (byte)('0' + ((c / 8) & 7))' (byte)('0' + (c & 7)) }  											: new byte[] { (byte)c };
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBind,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlBind.cs,WriteToStream,The following statement contains a magic number: Int32 messageLength = 4 + UTF8Encoding.GetByteCount(_portalName) + 1 +  								  UTF8Encoding.GetByteCount(_preparedStatementName) + 1 + 2 + (_parameterFormatCodes.Length * 2) +  								  2;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBind,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlBind.cs,WriteToStream,The following statement contains a magic number: Int32 messageLength = 4 + UTF8Encoding.GetByteCount(_portalName) + 1 +  								  UTF8Encoding.GetByteCount(_preparedStatementName) + 1 + 2 + (_parameterFormatCodes.Length * 2) +  								  2;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBind,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlBind.cs,WriteToStream,The following statement contains a magic number: Int32 messageLength = 4 + UTF8Encoding.GetByteCount(_portalName) + 1 +  								  UTF8Encoding.GetByteCount(_preparedStatementName) + 1 + 2 + (_parameterFormatCodes.Length * 2) +  								  2;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBind,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlBind.cs,WriteToStream,The following statement contains a magic number: Int32 messageLength = 4 + UTF8Encoding.GetByteCount(_portalName) + 1 +  								  UTF8Encoding.GetByteCount(_preparedStatementName) + 1 + 2 + (_parameterFormatCodes.Length * 2) +  								  2;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBind,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlBind.cs,WriteToStream,The following statement contains a magic number: messageLength += 4;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBind,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlBind.cs,WriteToStream,The following statement contains a magic number: messageLength += 2 + (_resultFormatCodes.Length * 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBind,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlBind.cs,WriteToStream,The following statement contains a magic number: messageLength += 2 + (_resultFormatCodes.Length * 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDescribe,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlDescribe.cs,Send,The following statement contains a magic number: PGUtil.WriteInt32(outputStream' 4 + 1 + UTF8Encoding.GetByteCount(portal) + 1);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlExecute,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlExecute.cs,WriteToStream,The following statement contains a magic number: PGUtil.WriteInt32(outputStream' 4 + UTF8Encoding.GetByteCount(_portalName) + 1 + 4);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlExecute,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlExecute.cs,WriteToStream,The following statement contains a magic number: PGUtil.WriteInt32(outputStream' 4 + UTF8Encoding.GetByteCount(_portalName) + 1 + 4);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlFlush,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlFlush.cs,WriteToStream,The following statement contains a magic number: PGUtil.WriteInt32(outputStream' 4);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlParse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlParse.cs,WriteToStream,The following statement contains a magic number: Int32 messageLength = 4 + UTF8Encoding.GetByteCount(_prepareName) + 1 + UTF8Encoding.GetByteCount(_queryString) + 1 +  								  2 + (_parameterIDs.Length * 4);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlParse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlParse.cs,WriteToStream,The following statement contains a magic number: Int32 messageLength = 4 + UTF8Encoding.GetByteCount(_prepareName) + 1 + UTF8Encoding.GetByteCount(_queryString) + 1 +  								  2 + (_parameterIDs.Length * 4);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlParse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlParse.cs,WriteToStream,The following statement contains a magic number: Int32 messageLength = 4 + UTF8Encoding.GetByteCount(_prepareName) + 1 + UTF8Encoding.GetByteCount(_queryString) + 1 +  								  2 + (_parameterIDs.Length * 4);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlPasswordPacket,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlPasswordPacket.cs,WriteToStream,The following statement contains a magic number: PGUtil.WriteInt32(outputStream' 4 + password.Length + 1);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlQuery,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlQuery.cs,Send,The following statement contains a magic number: PGUtil.WriteInt32(stream' 4 + (int)commandStream.Length + 1);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlStartupPacket,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlStartupPacket.cs,WriteToStream,The following statement contains a magic number: PGUtil.WriteInt32(output_stream'  							  4 + 4 + 5 + (UTF8Encoding.GetByteCount(user_name) + 1) + 9 +  							  (UTF8Encoding.GetByteCount(database_name) + 1) + 10 + 4 + 1);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlStartupPacket,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlStartupPacket.cs,WriteToStream,The following statement contains a magic number: PGUtil.WriteInt32(output_stream'  							  4 + 4 + 5 + (UTF8Encoding.GetByteCount(user_name) + 1) + 9 +  							  (UTF8Encoding.GetByteCount(database_name) + 1) + 10 + 4 + 1);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlStartupPacket,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlStartupPacket.cs,WriteToStream,The following statement contains a magic number: PGUtil.WriteInt32(output_stream'  							  4 + 4 + 5 + (UTF8Encoding.GetByteCount(user_name) + 1) + 9 +  							  (UTF8Encoding.GetByteCount(database_name) + 1) + 10 + 4 + 1);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlStartupPacket,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlStartupPacket.cs,WriteToStream,The following statement contains a magic number: PGUtil.WriteInt32(output_stream'  							  4 + 4 + 5 + (UTF8Encoding.GetByteCount(user_name) + 1) + 9 +  							  (UTF8Encoding.GetByteCount(database_name) + 1) + 10 + 4 + 1);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlStartupPacket,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlStartupPacket.cs,WriteToStream,The following statement contains a magic number: PGUtil.WriteInt32(output_stream'  							  4 + 4 + 5 + (UTF8Encoding.GetByteCount(user_name) + 1) + 9 +  							  (UTF8Encoding.GetByteCount(database_name) + 1) + 10 + 4 + 1);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlStartupPacket,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlStartupPacket.cs,WriteToStream,The following statement contains a magic number: PGUtil.WriteInt32(output_stream'  							  4 + 4 + 5 + (UTF8Encoding.GetByteCount(user_name) + 1) + 9 +  							  (UTF8Encoding.GetByteCount(database_name) + 1) + 10 + 4 + 1);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlStartupPacket,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlStartupPacket.cs,WriteToStream,The following statement contains a magic number: PGUtil.WriteInt32(output_stream' 196608);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlSync,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Message\NpgsqlSync.cs,Send,The following statement contains a magic number: PGUtil.WriteInt32(stream' 4);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,StringRowReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlAsciiRow.cs,ReadNext,The following statement contains a magic number: fieldSize >= 32768
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,StringRowReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlAsciiRow.cs,AbandonShip,The following statement contains a magic number: PGUtil.WriteInt32(Stream' 4);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlBackEndKeyData,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlBackEndKeyData.cs,NpgsqlBackEndKeyData,The following statement contains a magic number: PGUtil.EatShortStreamBytes(stream' 4);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,NpgsqlCommand,The following statement contains a magic number: timeout = 20;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,NpgsqlCommand,The following statement contains a magic number: timeout = 20;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,CheckFunctionNeedsColumnDefinitionList,The following statement contains a magic number: fullName.Length == 2
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,CheckFunctionNeedsColumnDefinitionList,The following statement contains a magic number: c.Parameters[2].Value = schemaName;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,ReplaceParameterValue,The following statement contains a magic number: String spaces = new String(' '' match.Length - 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,ReplaceParameterValue,The following statement contains a magic number: (match.Length - parameterName.Length) == 3
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectionStringBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectionStringBuilder.cs,NpgsqlConnectionStringBuilder,The following statement contains a magic number: defaults.Add(Keywords.Port' 5432);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectionStringBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectionStringBuilder.cs,NpgsqlConnectionStringBuilder,The following statement contains a magic number: defaults.Add(Keywords.Timeout' 15);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectionStringBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectionStringBuilder.cs,NpgsqlConnectionStringBuilder,The following statement contains a magic number: defaults.Add(Keywords.ConnectionLifeTime' 15);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectionStringBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectionStringBuilder.cs,NpgsqlConnectionStringBuilder,The following statement contains a magic number: defaults.Add(Keywords.MaxPoolSize' 20);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,ProcessServerVersion,The following statement contains a magic number: this._supportsPrepare = (ServerVersion >= new Version(7' 3' 0));
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,ProcessServerVersion,The following statement contains a magic number: this._supportsPrepare = (ServerVersion >= new Version(7' 3' 0));
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,ProcessServerVersion,The following statement contains a magic number: this._supportsSavepoint = (ServerVersion >= new Version(8' 0' 0));
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlContextHolder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnector.cs,ProcessServerMessages,The following statement contains a magic number: this.connector.Socket.Poll(100' SelectMode.SelectRead)
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectorPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectorPool.cs,StartTimer,The following statement contains a magic number: Timer = new Timer(1000);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectorPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectorPool.cs,TimerElapsedHandler,The following statement contains a magic number: Int32 toBeClosed = (diff + 1) / 2;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectorPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectorPool.cs,TimerElapsedHandler,The following statement contains a magic number: diff = 2;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectorPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectorPool.cs,TimerElapsedHandler,The following statement contains a magic number: diff < 2
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectorPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectorPool.cs,TimerElapsedHandler,The following statement contains a magic number: Queue.InactiveTime -= Queue.ConnectionLifeTime / (int)(Math.Log(diff) / Math.Log(2));
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectorPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectorPool.cs,RequestConnector,The following statement contains a magic number: Int32 timeoutMilliseconds = Connection.Timeout * 1000;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectorPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectorPool.cs,RequestConnector,The following statement contains a magic number: Int32 ST = timeoutMilliseconds > 100 ? 100 : timeoutMilliseconds;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectorPool,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectorPool.cs,RequestConnector,The following statement contains a magic number: Int32 ST = timeoutMilliseconds > 100 ? 100 : timeoutMilliseconds;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,FillSchemaTable_v2,The following statement contains a magic number: row["ColumnSize"] = CurrentDescription[i].TypeModifier - 4;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,FillSchemaTable_v2,The following statement contains a magic number: row["NumericPrecision"] = ((CurrentDescription[i].TypeModifier - 4) >> 16) & ushort.MaxValue;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,FillSchemaTable_v2,The following statement contains a magic number: row["NumericPrecision"] = ((CurrentDescription[i].TypeModifier - 4) >> 16) & ushort.MaxValue;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,FillSchemaTable_v2,The following statement contains a magic number: row["NumericScale"] = (CurrentDescription[i].TypeModifier - 4) & ushort.MaxValue;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,FillSchemaTable_v3,The following statement contains a magic number: row["ColumnSize"] = CurrentDescription[i].TypeModifier - 4;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,FillSchemaTable_v3,The following statement contains a magic number: row["NumericPrecision"] = ((CurrentDescription[i].TypeModifier - 4) >> 16) & ushort.MaxValue;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,FillSchemaTable_v3,The following statement contains a magic number: row["NumericPrecision"] = ((CurrentDescription[i].TypeModifier - 4) >> 16) & ushort.MaxValue;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,FillSchemaTable_v3,The following statement contains a magic number: row["NumericScale"] = (CurrentDescription[i].TypeModifier - 4) & ushort.MaxValue;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,GetKeys,The following statement contains a magic number: dr.GetBoolean(2)
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlDataReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,GetTableNameFromQuery,The following statement contains a magic number: String tableName = _command.CommandText.Substring(fromClauseIndex + 4).Trim();
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,Table,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,Table,The following statement contains a magic number: Name = rdr.GetString(2);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,Table,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,Table,The following statement contains a magic number: Id = rdr.GetInt64(3);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,Column,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,Column,The following statement contains a magic number: TableId = rdr.GetInt64(2);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,Column,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,Column,The following statement contains a magic number: ColumnNum = rdr.GetInt16(3);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,Column,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlDataReader.cs,Column,The following statement contains a magic number: ColumnDefault = rdr.GetValue(4);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlError,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlError.cs,NpgsqlError,The following statement contains a magic number: string[] v2Parts = ("FATA" + PGUtil.ReadString(stream' queue)).Split(new char[] { ':' }' 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlError,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlError.cs,NpgsqlError,The following statement contains a magic number: v2Parts.Length == 2
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlError,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlError.cs,NpgsqlError,The following statement contains a magic number: PGUtil.ReadInt32(stream' buffer) == 1178686529
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlMediator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlMediator.cs,NpgsqlMediator,The following statement contains a magic number: CommandTimeout = 20;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlMediator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlMediator.cs,NpgsqlMediator,The following statement contains a magic number: CopyBufferSize = 8192;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlMediator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlMediator.cs,ResetResponses,The following statement contains a magic number: CommandTimeout = 20;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlRowDescription,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlRowDescription.cs,NpgsqlRowDescription,The following statement contains a magic number: fields_data = new FieldData[16];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlRowDescription,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlRowDescription.cs,Process,The following statement contains a magic number: PGUtil.EatStreamBytes(stream' 4);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlParameterStatus,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Parameter\NpgsqlParameterStatus.cs,NpgsqlParameterStatus,The following statement contains a magic number: PGUtil.EatStreamBytes(stream' 4);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadChar,The following statement contains a magic number: i != 4
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadChars,The following statement contains a magic number: byte[] buffer = new byte[Math.Min(maxRead' maxChars * 4)];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ValidUTF8Ending,The following statement contains a magic number: examine = buffer[index + count - 2 - i];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ValidUTF8Ending,The following statement contains a magic number: i + 2 <= count
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,CheckedStreamRead,The following statement contains a magic number: int readSize = size > 8192 ? 8192 : size;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,CheckedStreamRead,The following statement contains a magic number: int readSize = size > 8192 ? 8192 : size;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadEscapedBytes,The following statement contains a magic number: switch (c = ReadChar(stream' buffer))  					{  						case '0':  						case '1':  						case '2':  						case '3':  						case '4':  						case '5':  						case '6':  						case '7':  						case '8':  						case '9':  							maxRead -= 2;  							output[outputIdx++] =  								(byte)  								((int.Parse(c.ToString()) << 6) | (int.Parse(ReadChar(stream' buffer).ToString()) << 3) |  								 int.Parse(ReadChar(stream' buffer).ToString()));  							break;  						default:  							output[outputIdx++] = (byte)c;  							break;  					}
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadEscapedBytes,The following statement contains a magic number: switch (c = ReadChar(stream' buffer))  					{  						case '0':  						case '1':  						case '2':  						case '3':  						case '4':  						case '5':  						case '6':  						case '7':  						case '8':  						case '9':  							maxRead -= 2;  							output[outputIdx++] =  								(byte)  								((int.Parse(c.ToString()) << 6) | (int.Parse(ReadChar(stream' buffer).ToString()) << 3) |  								 int.Parse(ReadChar(stream' buffer).ToString()));  							break;  						default:  							output[outputIdx++] = (byte)c;  							break;  					}
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadEscapedBytes,The following statement contains a magic number: switch (c = ReadChar(stream' buffer))  					{  						case '0':  						case '1':  						case '2':  						case '3':  						case '4':  						case '5':  						case '6':  						case '7':  						case '8':  						case '9':  							maxRead -= 2;  							output[outputIdx++] =  								(byte)  								((int.Parse(c.ToString()) << 6) | (int.Parse(ReadChar(stream' buffer).ToString()) << 3) |  								 int.Parse(ReadChar(stream' buffer).ToString()));  							break;  						default:  							output[outputIdx++] = (byte)c;  							break;  					}
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,SkipEscapedBytes,The following statement contains a magic number: switch (ReadChar(stream' buffer))  					{  						case '0':  						case '1':  						case '2':  						case '3':  						case '4':  						case '5':  						case '6':  						case '7':  						case '8':  						case '9':  							maxRead -= 2;  							EatStreamBytes(stream' 2); //note assumes all representations of '0' through '9' are single-byte.  							break;  					}
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,SkipEscapedBytes,The following statement contains a magic number: switch (ReadChar(stream' buffer))  					{  						case '0':  						case '1':  						case '2':  						case '3':  						case '4':  						case '5':  						case '6':  						case '7':  						case '8':  						case '9':  							maxRead -= 2;  							EatStreamBytes(stream' 2); //note assumes all representations of '0' through '9' are single-byte.  							break;  					}
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,WriteInt32,The following statement contains a magic number: stream.WriteByte((byte)(number >> 8));
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,WriteInt32,The following statement contains a magic number: stream.WriteByte((byte)(number >> 16));
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,WriteInt32,The following statement contains a magic number: stream.WriteByte((byte)(number >> 24));
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadInt32,The following statement contains a magic number: CheckedStreamReadShort(stream' buffer' 0' 4);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadInt32,The following statement contains a magic number: var value = buffer[0] + (buffer[1] << 8) + (buffer[2] << 16) + (buffer[3] << 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadInt32,The following statement contains a magic number: var value = buffer[0] + (buffer[1] << 8) + (buffer[2] << 16) + (buffer[3] << 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadInt32,The following statement contains a magic number: var value = buffer[0] + (buffer[1] << 8) + (buffer[2] << 16) + (buffer[3] << 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadInt32,The following statement contains a magic number: var value = buffer[0] + (buffer[1] << 8) + (buffer[2] << 16) + (buffer[3] << 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadInt32,The following statement contains a magic number: var value = buffer[0] + (buffer[1] << 8) + (buffer[2] << 16) + (buffer[3] << 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,WriteInt16,The following statement contains a magic number: stream.WriteByte((byte)(number >> 8));
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadInt16,The following statement contains a magic number: CheckedStreamReadShort(stream' buffer' 2' 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadInt16,The following statement contains a magic number: CheckedStreamReadShort(stream' buffer' 2' 2);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadInt16,The following statement contains a magic number: var value = buffer[2] + (buffer[3] << 8);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadInt16,The following statement contains a magic number: var value = buffer[2] + (buffer[3] << 8);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,ReadInt16,The following statement contains a magic number: var value = buffer[2] + (buffer[3] << 8);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5.cs,MD5,The following statement contains a magic number: HashSizeValue = 128;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,MD5CryptoServiceProvider,The following statement contains a magic number: _H = new uint[4];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,HashFinal,The following statement contains a magic number: byte[] hash = new byte[16];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,HashFinal,The following statement contains a magic number: hash[i * 4 + j] = (byte)(_H[i] >> j * 8);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,HashFinal,The following statement contains a magic number: hash[i * 4 + j] = (byte)(_H[i] >> j * 8);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,HashFinal,The following statement contains a magic number: j < 4
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,HashFinal,The following statement contains a magic number: i < 4
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,Initialize,The following statement contains a magic number: _H[2] = 0x98badcfe;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,Initialize,The following statement contains a magic number: _H[3] = 0x10325476;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: uint[] buff = new uint[16];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (inputBuffer[inputOffset + 4 * i]) | (((uint)(inputBuffer[inputOffset + 4 * i + 1])) << 8) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 2])) << 16) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 3])) << 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (inputBuffer[inputOffset + 4 * i]) | (((uint)(inputBuffer[inputOffset + 4 * i + 1])) << 8) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 2])) << 16) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 3])) << 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (inputBuffer[inputOffset + 4 * i]) | (((uint)(inputBuffer[inputOffset + 4 * i + 1])) << 8) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 2])) << 16) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 3])) << 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (inputBuffer[inputOffset + 4 * i]) | (((uint)(inputBuffer[inputOffset + 4 * i + 1])) << 8) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 2])) << 16) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 3])) << 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (inputBuffer[inputOffset + 4 * i]) | (((uint)(inputBuffer[inputOffset + 4 * i + 1])) << 8) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 2])) << 16) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 3])) << 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (inputBuffer[inputOffset + 4 * i]) | (((uint)(inputBuffer[inputOffset + 4 * i + 1])) << 8) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 2])) << 16) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 3])) << 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (inputBuffer[inputOffset + 4 * i]) | (((uint)(inputBuffer[inputOffset + 4 * i + 1])) << 8) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 2])) << 16) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 3])) << 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (inputBuffer[inputOffset + 4 * i]) | (((uint)(inputBuffer[inputOffset + 4 * i + 1])) << 8) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 2])) << 16) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 3])) << 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (inputBuffer[inputOffset + 4 * i]) | (((uint)(inputBuffer[inputOffset + 4 * i + 1])) << 8) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 2])) << 16) |  						  (((uint)(inputBuffer[inputOffset + 4 * i + 3])) << 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: i < 16
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = _H[2];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = _H[3];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 7) | (a >> 25);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 7) | (a >> 25);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 12) | (d >> 20);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 12) | (d >> 20);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c += (((a ^ b) & d) ^ b) + (uint)Constants.C2 + buff[2];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 17) | (c >> 15);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 17) | (c >> 15);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b += (((d ^ a) & c) ^ a) + (uint)Constants.C3 + buff[3];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 22) | (b >> 10);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 22) | (b >> 10);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a += (((c ^ d) & b) ^ d) + (uint)Constants.C4 + buff[4];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 7) | (a >> 25);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 7) | (a >> 25);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d += (((b ^ c) & a) ^ c) + (uint)Constants.C5 + buff[5];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 12) | (d >> 20);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 12) | (d >> 20);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c += (((a ^ b) & d) ^ b) + (uint)Constants.C6 + buff[6];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 17) | (c >> 15);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 17) | (c >> 15);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b += (((d ^ a) & c) ^ a) + (uint)Constants.C7 + buff[7];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 22) | (b >> 10);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 22) | (b >> 10);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a += (((c ^ d) & b) ^ d) + (uint)Constants.C8 + buff[8];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 7) | (a >> 25);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 7) | (a >> 25);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d += (((b ^ c) & a) ^ c) + (uint)Constants.C9 + buff[9];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 12) | (d >> 20);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 12) | (d >> 20);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c += (((a ^ b) & d) ^ b) + (uint)Constants.C10 + buff[10];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 17) | (c >> 15);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 17) | (c >> 15);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b += (((d ^ a) & c) ^ a) + (uint)Constants.C11 + buff[11];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 22) | (b >> 10);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 22) | (b >> 10);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a += (((c ^ d) & b) ^ d) + (uint)Constants.C12 + buff[12];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 7) | (a >> 25);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 7) | (a >> 25);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d += (((b ^ c) & a) ^ c) + (uint)Constants.C13 + buff[13];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 12) | (d >> 20);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 12) | (d >> 20);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c += (((a ^ b) & d) ^ b) + (uint)Constants.C14 + buff[14];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 17) | (c >> 15);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 17) | (c >> 15);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b += (((d ^ a) & c) ^ a) + (uint)Constants.C15 + buff[15];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 22) | (b >> 10);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 22) | (b >> 10);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 5) | (a >> 27);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 5) | (a >> 27);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d += (((a ^ b) & c) ^ b) + (uint)Constants.C17 + buff[6];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 9) | (d >> 23);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 9) | (d >> 23);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c += (((d ^ a) & b) ^ a) + (uint)Constants.C18 + buff[11];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 14) | (c >> 18);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 14) | (c >> 18);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 20) | (b >> 12);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 20) | (b >> 12);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a += (((b ^ c) & d) ^ c) + (uint)Constants.C20 + buff[5];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 5) | (a >> 27);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 5) | (a >> 27);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d += (((a ^ b) & c) ^ b) + (uint)Constants.C21 + buff[10];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 9) | (d >> 23);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 9) | (d >> 23);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c += (((d ^ a) & b) ^ a) + (uint)Constants.C22 + buff[15];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 14) | (c >> 18);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 14) | (c >> 18);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b += (((c ^ d) & a) ^ d) + (uint)Constants.C23 + buff[4];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 20) | (b >> 12);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 20) | (b >> 12);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a += (((b ^ c) & d) ^ c) + (uint)Constants.C24 + buff[9];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 5) | (a >> 27);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 5) | (a >> 27);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d += (((a ^ b) & c) ^ b) + (uint)Constants.C25 + buff[14];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 9) | (d >> 23);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 9) | (d >> 23);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c += (((d ^ a) & b) ^ a) + (uint)Constants.C26 + buff[3];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 14) | (c >> 18);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 14) | (c >> 18);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b += (((c ^ d) & a) ^ d) + (uint)Constants.C27 + buff[8];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 20) | (b >> 12);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 20) | (b >> 12);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a += (((b ^ c) & d) ^ c) + (uint)Constants.C28 + buff[13];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 5) | (a >> 27);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 5) | (a >> 27);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d += (((a ^ b) & c) ^ b) + (uint)Constants.C29 + buff[2];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 9) | (d >> 23);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 9) | (d >> 23);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c += (((d ^ a) & b) ^ a) + (uint)Constants.C30 + buff[7];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 14) | (c >> 18);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 14) | (c >> 18);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b += (((c ^ d) & a) ^ d) + (uint)Constants.C31 + buff[12];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 20) | (b >> 12);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 20) | (b >> 12);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a += (b ^ c ^ d) + (uint)Constants.C32 + buff[5];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 4) | (a >> 28);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 4) | (a >> 28);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d += (a ^ b ^ c) + (uint)Constants.C33 + buff[8];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 11) | (d >> 21);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 11) | (d >> 21);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c += (d ^ a ^ b) + (uint)Constants.C34 + buff[11];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 16) | (c >> 16);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 16) | (c >> 16);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b += (c ^ d ^ a) + (uint)Constants.C35 + buff[14];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 23) | (b >> 9);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 23) | (b >> 9);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 4) | (a >> 28);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 4) | (a >> 28);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d += (a ^ b ^ c) + (uint)Constants.C37 + buff[4];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 11) | (d >> 21);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 11) | (d >> 21);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c += (d ^ a ^ b) + (uint)Constants.C38 + buff[7];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 16) | (c >> 16);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 16) | (c >> 16);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b += (c ^ d ^ a) + (uint)Constants.C39 + buff[10];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 23) | (b >> 9);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 23) | (b >> 9);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a += (b ^ c ^ d) + (uint)Constants.C40 + buff[13];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 4) | (a >> 28);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 4) | (a >> 28);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 11) | (d >> 21);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 11) | (d >> 21);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c += (d ^ a ^ b) + (uint)Constants.C42 + buff[3];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 16) | (c >> 16);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 16) | (c >> 16);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b += (c ^ d ^ a) + (uint)Constants.C43 + buff[6];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 23) | (b >> 9);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 23) | (b >> 9);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a += (b ^ c ^ d) + (uint)Constants.C44 + buff[9];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 4) | (a >> 28);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 4) | (a >> 28);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d += (a ^ b ^ c) + (uint)Constants.C45 + buff[12];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 11) | (d >> 21);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 11) | (d >> 21);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c += (d ^ a ^ b) + (uint)Constants.C46 + buff[15];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 16) | (c >> 16);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 16) | (c >> 16);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b += (c ^ d ^ a) + (uint)Constants.C47 + buff[2];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 23) | (b >> 9);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 23) | (b >> 9);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 6) | (a >> 26);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 6) | (a >> 26);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d += (((~c) | a) ^ b) + (uint)Constants.C49 + buff[7];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 10) | (d >> 22);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 10) | (d >> 22);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c += (((~b) | d) ^ a) + (uint)Constants.C50 + buff[14];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 15) | (c >> 17);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 15) | (c >> 17);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b += (((~a) | c) ^ d) + (uint)Constants.C51 + buff[5];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 21) | (b >> 11);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 21) | (b >> 11);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a += (((~d) | b) ^ c) + (uint)Constants.C52 + buff[12];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 6) | (a >> 26);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 6) | (a >> 26);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d += (((~c) | a) ^ b) + (uint)Constants.C53 + buff[3];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 10) | (d >> 22);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 10) | (d >> 22);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c += (((~b) | d) ^ a) + (uint)Constants.C54 + buff[10];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 15) | (c >> 17);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 15) | (c >> 17);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 21) | (b >> 11);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 21) | (b >> 11);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a += (((~d) | b) ^ c) + (uint)Constants.C56 + buff[8];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 6) | (a >> 26);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 6) | (a >> 26);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d += (((~c) | a) ^ b) + (uint)Constants.C57 + buff[15];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 10) | (d >> 22);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 10) | (d >> 22);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c += (((~b) | d) ^ a) + (uint)Constants.C58 + buff[6];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 15) | (c >> 17);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 15) | (c >> 17);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b += (((~a) | c) ^ d) + (uint)Constants.C59 + buff[13];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 21) | (b >> 11);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 21) | (b >> 11);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a += (((~d) | b) ^ c) + (uint)Constants.C60 + buff[4];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 6) | (a >> 26);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: a = (a << 6) | (a >> 26);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d += (((~c) | a) ^ b) + (uint)Constants.C61 + buff[11];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 10) | (d >> 22);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: d = (d << 10) | (d >> 22);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c += (((~b) | d) ^ a) + (uint)Constants.C62 + buff[2];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 15) | (c >> 17);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: c = (c << 15) | (c >> 17);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b += (((~a) | c) ^ d) + (uint)Constants.C63 + buff[9];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 21) | (b >> 11);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: b = (b << 21) | (b >> 11);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: _H[2] += c;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessBlock,The following statement contains a magic number: _H[3] += d;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessFinalBlock,The following statement contains a magic number: paddingSize = (int)(56 - (inputCount + count) % BLOCK_SIZE_BYTES);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessFinalBlock,The following statement contains a magic number: fooBuffer = new byte[inputCount + paddingSize + 8];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessFinalBlock,The following statement contains a magic number: size *= 8;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessFinalBlock,The following statement contains a magic number: fooBuffer[inputCount + paddingSize + 1] = (byte)((size) >> 8);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessFinalBlock,The following statement contains a magic number: fooBuffer[inputCount + paddingSize + 2] = (byte)((size) >> 16);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessFinalBlock,The following statement contains a magic number: fooBuffer[inputCount + paddingSize + 2] = (byte)((size) >> 16);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessFinalBlock,The following statement contains a magic number: fooBuffer[inputCount + paddingSize + 3] = (byte)((size) >> 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessFinalBlock,The following statement contains a magic number: fooBuffer[inputCount + paddingSize + 3] = (byte)((size) >> 24);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessFinalBlock,The following statement contains a magic number: fooBuffer[inputCount + paddingSize + 4] = 0x00;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessFinalBlock,The following statement contains a magic number: fooBuffer[inputCount + paddingSize + 5] = 0x00;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessFinalBlock,The following statement contains a magic number: fooBuffer[inputCount + paddingSize + 6] = 0x00;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessFinalBlock,The following statement contains a magic number: fooBuffer[inputCount + paddingSize + 7] = 0x00;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessFinalBlock,The following statement contains a magic number: ProcessBlock(fooBuffer' 64);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessFinalBlock,The following statement contains a magic number: inputCount + paddingSize + 8 == 128
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,MD5CryptoServiceProvider,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\Security\MD5CryptoServiceProvider.cs,ProcessFinalBlock,The following statement contains a magic number: inputCount + paddingSize + 8 == 128
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlClosedState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlClosedState.cs,Open,The following statement contains a magic number: !result.AsyncWaitHandle.WaitOne(context.ConnectionTimeout * 1000' true)
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlClosedState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlClosedState.cs,Open,The following statement contains a magic number: PGUtil.WriteInt32(stream' 8);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlClosedState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlClosedState.cs,Open,The following statement contains a magic number: PGUtil.WriteInt32(stream' 80877103);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectedState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlConnectedState.cs,Startup,The following statement contains a magic number: NpgsqlStartupPacket startupPacket = new NpgsqlStartupPacket(296' //Not used.  																		context.Database'  																		context.UserName' ""' ""' "");
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCopyInState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlCopyInState.cs,SendCopyData,The following statement contains a magic number: PGUtil.WriteInt32(toServer' len + 4);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCopyInState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlCopyInState.cs,SendCopyDone,The following statement contains a magic number: PGUtil.WriteInt32(toServer' 4);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCopyInState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlCopyInState.cs,SendCopyFail,The following statement contains a magic number: PGUtil.WriteInt32(toServer' 4 + buf.Length);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlReadyState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlReadyState.cs,Close,The following statement contains a magic number: PGUtil.WriteInt32(stream' 4);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,TestNotify,The following statement contains a magic number: byte[] convertBuffer = new byte[36];
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,TestNotify,The following statement contains a magic number: buffer.Count > 35
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,EmptySync,The following statement contains a magic number: switch (newByte = stm.ReadByte())  				{  					case -1:  						throw new EndOfStreamException();  					case 'E':  					case 'I':  					case 'T':  						if (buffer.Count > 4)  						{  							bool match = true;  							int i = 0;  							foreach (byte cmp in buffer)  							{  								if (cmp != messageSought[i++])  								{  									match = false;  									break;  								}  							}  							if (match)  							{  								return;  							}  						}  						break;  					default:  						buffer.Enqueue(newByte);  						if (buffer.Count > 5)  						{  							buffer.Dequeue();  						}  						break;  				}
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,EmptySync,The following statement contains a magic number: switch (newByte = stm.ReadByte())  				{  					case -1:  						throw new EndOfStreamException();  					case 'E':  					case 'I':  					case 'T':  						if (buffer.Count > 4)  						{  							bool match = true;  							int i = 0;  							foreach (byte cmp in buffer)  							{  								if (cmp != messageSought[i++])  								{  									match = false;  									break;  								}  							}  							if (match)  							{  								return;  							}  						}  						break;  					default:  						buffer.Enqueue(newByte);  						if (buffer.Count > 5)  						{  							buffer.Dequeue();  						}  						break;  				}
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,CheckForContextSocketAvailability,The following statement contains a magic number: const int limitOfSeconds = 2147;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,CheckForContextSocketAvailability,The following statement contains a magic number: socketPoolResponse = context.Socket.Poll(1000000 * limitOfSeconds' SelectMode.SelectRead);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,CheckForContextSocketAvailability,The following statement contains a magic number: return socketPoolResponse || context.Socket.Poll(1000000 * secondsToWait' SelectMode.SelectRead);
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,ProcessBackendResponses_Ver_3,The following statement contains a magic number: switch (message)  					{  						case BackEndMessageCode.ErrorResponse:    							NpgsqlError error = new NpgsqlError(stream' buffer' queue);  							error.ErrorSql = mediator.SqlSent;    							if (errors == null) errors = new List<NpgsqlError>();  							errors.Add(error);    							// Return imediately if it is in the startup state or connected state as  							// there is no more messages to consume.  							// Possible error in the NpgsqlStartupState:  							//        Invalid password.  							// Possible error in the NpgsqlConnectedState:  							//        No pg_hba.conf configured.    							if (!context.RequireReadyForQuery)  							{  								throw new NpgsqlException(errors);  							}    							break;  						case BackEndMessageCode.AuthenticationRequest:    							// Get the length in case we're getting AuthenticationGSSContinue   							int authDataLength = PGUtil.ReadInt32(stream' buffer) - 8;    							AuthenticationRequestType authType = (AuthenticationRequestType)PGUtil.ReadInt32(stream' buffer);  							switch (authType)  							{  								case AuthenticationRequestType.AuthenticationOk:  									break;  								case AuthenticationRequestType.AuthenticationClearTextPassword:  									// Send the PasswordPacket.    									ChangeState(context' NpgsqlStartupState.Instance);  									context.Authenticate(context.Password);    									break;  								case AuthenticationRequestType.AuthenticationMD5Password:  									// Now do the "MD5-Thing"  									// for this the Password has to be:  									// 1. md5-hashed with the username as salt  									// 2. md5-hashed again with the salt we get from the backend      									MD5 md5 = MD5.Create();      									// 1.  									byte[] passwd = context.Password;  									byte[] saltUserName = ENCODING_UTF8.GetBytes(context.UserName);    									byte[] crypt_buf = new byte[passwd.Length + saltUserName.Length];    									passwd.CopyTo(crypt_buf' 0);  									saltUserName.CopyTo(crypt_buf' passwd.Length);      									StringBuilder sb = new StringBuilder();  									byte[] hashResult = md5.ComputeHash(crypt_buf);  									foreach (byte b in hashResult)  									{  										sb.Append(b.ToString("x2"));  									}      									String prehash = sb.ToString();    									byte[] prehashbytes = ENCODING_UTF8.GetBytes(prehash);  									crypt_buf = new byte[prehashbytes.Length + 4];      									stream.Read(crypt_buf' prehashbytes.Length' 4);  									// Send the PasswordPacket.  									ChangeState(context' NpgsqlStartupState.Instance);      									// 2.  									prehashbytes.CopyTo(crypt_buf' 0);    									sb = new StringBuilder("md5"); // This is needed as the backend expects md5 result starts with "md5"  									hashResult = md5.ComputeHash(crypt_buf);  									foreach (byte b in hashResult)  									{  										sb.Append(b.ToString("x2"));  									}    									context.Authenticate(ENCODING_UTF8.GetBytes(sb.ToString()));    									break;  #if WINDOWS && UNMANAGED    								case AuthenticationRequestType.AuthenticationSSPI:  									{  										if (context.IntegratedSecurity)  										{  											// For SSPI we have to get the IP-Address (hostname doesn't work)  											string ipAddressString = ((IPEndPoint)context.Socket.RemoteEndPoint).Address.ToString();  											context.SSPI = new SSPIHandler(ipAddressString' "POSTGRES");  											ChangeState(context' NpgsqlStartupState.Instance);  											context.Authenticate(context.SSPI.Continue(null));  											break;  										}  										else  										{  											// TODO: correct exception  											throw new Exception();  										}  									}      								case AuthenticationRequestType.AuthenticationGSSContinue:  									{  										byte[] authData = new byte[authDataLength];  										PGUtil.CheckedStreamRead(stream' authData' 0' authDataLength);  										byte[] passwd_read = context.SSPI.Continue(authData);  										if (passwd_read.Length != 0)  										{  											context.Authenticate(passwd_read);  										}  										break;  									}    #endif    								default:  									// Only AuthenticationClearTextPassword and AuthenticationMD5Password supported for now.  									if (errors == null) errors = new List<NpgsqlError>();  									errors.Add(  										new NpgsqlError(String.Format(resman.GetString("Exception_AuthenticationMethodNotSupported")' authType)));  									throw new NpgsqlException(errors);  							}  							break;  						case BackEndMessageCode.RowDescription:  							yield return context.RowDescription();  							break;  						case BackEndMessageCode.ParameterDescription:    							// Do nothing'for instance'  just read...  							int length = PGUtil.ReadInt32(stream' buffer);  							int nb_param = PGUtil.ReadInt16(stream' buffer);  							//WTF  							for (int i = 0; i < nb_param; i++)  							{  								int typeoid = PGUtil.ReadInt32(stream' buffer);  							}    							break;    						case BackEndMessageCode.DataRow:  							yield return context.NextRow();  							break;    						case BackEndMessageCode.ReadyForQuery:    							// Possible status bytes returned:  							//   I = Idle (no transaction active).  							//   T = In transaction' ready for more.  							//   E = Error in transaction' queries will fail until transaction aborted.  							// Just eat the status byte' we have no use for it at this time.  							PGUtil.ReadInt32(stream' buffer);  							stream.ReadByte();    							ChangeState(context' NpgsqlReadyState.Instance);    							if (errors != null)  							{  								throw new NpgsqlException(errors);  							}    							yield break;    						case BackEndMessageCode.BackendKeyData:  							// BackendKeyData message.  							NpgsqlBackEndKeyData backend_keydata = new NpgsqlBackEndKeyData(stream' buffer);  							context.BackEndKeyData = backend_keydata;      							// Wait for ReadForQuery message  							break;    						case BackEndMessageCode.NoticeResponse:  							// Notices and errors are identical except that we  							// just throw notices away completely ignored.  							context.FireNotice(new NpgsqlError(stream' buffer' queue));  							break;    						case BackEndMessageCode.CompletedResponse:  							PGUtil.ReadInt32(stream' buffer);  							yield return new CompletedResponse(stream' queue);  							break;  						case BackEndMessageCode.ParseComplete:  							// Just read up the message length.  							PGUtil.ReadInt32(stream' buffer);  							yield break;  						case BackEndMessageCode.BindComplete:  							// Just read up the message length.  							PGUtil.ReadInt32(stream' buffer);  							yield break;  						case BackEndMessageCode.EmptyQueryResponse:  							PGUtil.ReadInt32(stream' buffer);  							break;  						case BackEndMessageCode.NotificationResponse:  							// Eat the length  							PGUtil.ReadInt32(stream' buffer);  							context.FireNotification(new NpgsqlNotificationEventArgs(stream' true' buffer' queue));  							if (context.IsNotificationThreadRunning)  							{  								yield break;  							}  							break;  						case BackEndMessageCode.ParameterStatus:  							NpgsqlParameterStatus parameterStatus = new NpgsqlParameterStatus(stream' queue);    							context.AddParameterStatus(parameterStatus);    							if (parameterStatus.Parameter == "server_version")  							{  								// Deal with this here so that if there are   								// changes in a future backend version' we can handle it here in the  								// protocol handler and leave everybody else put of it.  								string versionString = parameterStatus.ParameterValue.Trim();  								for (int idx = 0; idx != versionString.Length; ++idx)  								{  									char c = parameterStatus.ParameterValue[idx];  									if (!char.IsDigit(c) && c != '.')  									{  										versionString = versionString.Substring(0' idx);  										break;  									}  								}  								context.ServerVersion = new Version(versionString);  							}  							break;  						case BackEndMessageCode.NoData:  							// This nodata message may be generated by prepare commands issued with queries which doesn't return rows  							// for example insert' update or delete.  							// Just eat the message.  							PGUtil.ReadInt32(stream' buffer);  							break;    						case BackEndMessageCode.CopyInResponse:  							// Enter COPY sub protocol and start pushing data to server  							ChangeState(context' NpgsqlCopyInState.Instance);  							PGUtil.ReadInt32(stream' buffer); // length redundant  							context.CurrentState.StartCopy(context' ReadCopyHeader(stream' buffer));  							yield break;  						// Either StartCopy called us again to finish the operation or control should be passed for user to feed copy data    						case BackEndMessageCode.CopyOutResponse:  							// Enter COPY sub protocol and start pulling data from server  							ChangeState(context' NpgsqlCopyOutState.Instance);  							PGUtil.ReadInt32(stream' buffer); // length redundant  							context.CurrentState.StartCopy(context' ReadCopyHeader(stream' buffer));  							yield break;  						// Either StartCopy called us again to finish the operation or control should be passed for user to feed copy data    						case BackEndMessageCode.CopyData:  							Int32 len = PGUtil.ReadInt32(stream' buffer) - 4;  							byte[] buf = new byte[len];  							PGUtil.ReadBytes(stream' buf' 0' len);  							context.Mediator.ReceivedCopyData = buf;  							yield break; // read data from server one chunk at a time while staying in copy operation mode    						case BackEndMessageCode.CopyDone:  							PGUtil.ReadInt32(stream' buffer); // CopyDone can not have content so this is always 4  							// This will be followed by normal CommandComplete + ReadyForQuery so no op needed  							break;    						case BackEndMessageCode.IO_ERROR:  							// Connection broken. Mono returns -1 instead of throwing an exception as ms.net does.  							throw new IOException();    						default:  							// This could mean a number of things  							//   We've gotten out of sync with the backend?  							//   We need to implement this type?  							//   Backend has gone insane?  							// FIXME  							// what exception should we really throw here?  							throw new NotSupportedException(String.Format("Backend sent unrecognized response type: {0}"' (Char)message));  					}
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,ProcessBackendResponses_Ver_3,The following statement contains a magic number: switch (message)  					{  						case BackEndMessageCode.ErrorResponse:    							NpgsqlError error = new NpgsqlError(stream' buffer' queue);  							error.ErrorSql = mediator.SqlSent;    							if (errors == null) errors = new List<NpgsqlError>();  							errors.Add(error);    							// Return imediately if it is in the startup state or connected state as  							// there is no more messages to consume.  							// Possible error in the NpgsqlStartupState:  							//        Invalid password.  							// Possible error in the NpgsqlConnectedState:  							//        No pg_hba.conf configured.    							if (!context.RequireReadyForQuery)  							{  								throw new NpgsqlException(errors);  							}    							break;  						case BackEndMessageCode.AuthenticationRequest:    							// Get the length in case we're getting AuthenticationGSSContinue   							int authDataLength = PGUtil.ReadInt32(stream' buffer) - 8;    							AuthenticationRequestType authType = (AuthenticationRequestType)PGUtil.ReadInt32(stream' buffer);  							switch (authType)  							{  								case AuthenticationRequestType.AuthenticationOk:  									break;  								case AuthenticationRequestType.AuthenticationClearTextPassword:  									// Send the PasswordPacket.    									ChangeState(context' NpgsqlStartupState.Instance);  									context.Authenticate(context.Password);    									break;  								case AuthenticationRequestType.AuthenticationMD5Password:  									// Now do the "MD5-Thing"  									// for this the Password has to be:  									// 1. md5-hashed with the username as salt  									// 2. md5-hashed again with the salt we get from the backend      									MD5 md5 = MD5.Create();      									// 1.  									byte[] passwd = context.Password;  									byte[] saltUserName = ENCODING_UTF8.GetBytes(context.UserName);    									byte[] crypt_buf = new byte[passwd.Length + saltUserName.Length];    									passwd.CopyTo(crypt_buf' 0);  									saltUserName.CopyTo(crypt_buf' passwd.Length);      									StringBuilder sb = new StringBuilder();  									byte[] hashResult = md5.ComputeHash(crypt_buf);  									foreach (byte b in hashResult)  									{  										sb.Append(b.ToString("x2"));  									}      									String prehash = sb.ToString();    									byte[] prehashbytes = ENCODING_UTF8.GetBytes(prehash);  									crypt_buf = new byte[prehashbytes.Length + 4];      									stream.Read(crypt_buf' prehashbytes.Length' 4);  									// Send the PasswordPacket.  									ChangeState(context' NpgsqlStartupState.Instance);      									// 2.  									prehashbytes.CopyTo(crypt_buf' 0);    									sb = new StringBuilder("md5"); // This is needed as the backend expects md5 result starts with "md5"  									hashResult = md5.ComputeHash(crypt_buf);  									foreach (byte b in hashResult)  									{  										sb.Append(b.ToString("x2"));  									}    									context.Authenticate(ENCODING_UTF8.GetBytes(sb.ToString()));    									break;  #if WINDOWS && UNMANAGED    								case AuthenticationRequestType.AuthenticationSSPI:  									{  										if (context.IntegratedSecurity)  										{  											// For SSPI we have to get the IP-Address (hostname doesn't work)  											string ipAddressString = ((IPEndPoint)context.Socket.RemoteEndPoint).Address.ToString();  											context.SSPI = new SSPIHandler(ipAddressString' "POSTGRES");  											ChangeState(context' NpgsqlStartupState.Instance);  											context.Authenticate(context.SSPI.Continue(null));  											break;  										}  										else  										{  											// TODO: correct exception  											throw new Exception();  										}  									}      								case AuthenticationRequestType.AuthenticationGSSContinue:  									{  										byte[] authData = new byte[authDataLength];  										PGUtil.CheckedStreamRead(stream' authData' 0' authDataLength);  										byte[] passwd_read = context.SSPI.Continue(authData);  										if (passwd_read.Length != 0)  										{  											context.Authenticate(passwd_read);  										}  										break;  									}    #endif    								default:  									// Only AuthenticationClearTextPassword and AuthenticationMD5Password supported for now.  									if (errors == null) errors = new List<NpgsqlError>();  									errors.Add(  										new NpgsqlError(String.Format(resman.GetString("Exception_AuthenticationMethodNotSupported")' authType)));  									throw new NpgsqlException(errors);  							}  							break;  						case BackEndMessageCode.RowDescription:  							yield return context.RowDescription();  							break;  						case BackEndMessageCode.ParameterDescription:    							// Do nothing'for instance'  just read...  							int length = PGUtil.ReadInt32(stream' buffer);  							int nb_param = PGUtil.ReadInt16(stream' buffer);  							//WTF  							for (int i = 0; i < nb_param; i++)  							{  								int typeoid = PGUtil.ReadInt32(stream' buffer);  							}    							break;    						case BackEndMessageCode.DataRow:  							yield return context.NextRow();  							break;    						case BackEndMessageCode.ReadyForQuery:    							// Possible status bytes returned:  							//   I = Idle (no transaction active).  							//   T = In transaction' ready for more.  							//   E = Error in transaction' queries will fail until transaction aborted.  							// Just eat the status byte' we have no use for it at this time.  							PGUtil.ReadInt32(stream' buffer);  							stream.ReadByte();    							ChangeState(context' NpgsqlReadyState.Instance);    							if (errors != null)  							{  								throw new NpgsqlException(errors);  							}    							yield break;    						case BackEndMessageCode.BackendKeyData:  							// BackendKeyData message.  							NpgsqlBackEndKeyData backend_keydata = new NpgsqlBackEndKeyData(stream' buffer);  							context.BackEndKeyData = backend_keydata;      							// Wait for ReadForQuery message  							break;    						case BackEndMessageCode.NoticeResponse:  							// Notices and errors are identical except that we  							// just throw notices away completely ignored.  							context.FireNotice(new NpgsqlError(stream' buffer' queue));  							break;    						case BackEndMessageCode.CompletedResponse:  							PGUtil.ReadInt32(stream' buffer);  							yield return new CompletedResponse(stream' queue);  							break;  						case BackEndMessageCode.ParseComplete:  							// Just read up the message length.  							PGUtil.ReadInt32(stream' buffer);  							yield break;  						case BackEndMessageCode.BindComplete:  							// Just read up the message length.  							PGUtil.ReadInt32(stream' buffer);  							yield break;  						case BackEndMessageCode.EmptyQueryResponse:  							PGUtil.ReadInt32(stream' buffer);  							break;  						case BackEndMessageCode.NotificationResponse:  							// Eat the length  							PGUtil.ReadInt32(stream' buffer);  							context.FireNotification(new NpgsqlNotificationEventArgs(stream' true' buffer' queue));  							if (context.IsNotificationThreadRunning)  							{  								yield break;  							}  							break;  						case BackEndMessageCode.ParameterStatus:  							NpgsqlParameterStatus parameterStatus = new NpgsqlParameterStatus(stream' queue);    							context.AddParameterStatus(parameterStatus);    							if (parameterStatus.Parameter == "server_version")  							{  								// Deal with this here so that if there are   								// changes in a future backend version' we can handle it here in the  								// protocol handler and leave everybody else put of it.  								string versionString = parameterStatus.ParameterValue.Trim();  								for (int idx = 0; idx != versionString.Length; ++idx)  								{  									char c = parameterStatus.ParameterValue[idx];  									if (!char.IsDigit(c) && c != '.')  									{  										versionString = versionString.Substring(0' idx);  										break;  									}  								}  								context.ServerVersion = new Version(versionString);  							}  							break;  						case BackEndMessageCode.NoData:  							// This nodata message may be generated by prepare commands issued with queries which doesn't return rows  							// for example insert' update or delete.  							// Just eat the message.  							PGUtil.ReadInt32(stream' buffer);  							break;    						case BackEndMessageCode.CopyInResponse:  							// Enter COPY sub protocol and start pushing data to server  							ChangeState(context' NpgsqlCopyInState.Instance);  							PGUtil.ReadInt32(stream' buffer); // length redundant  							context.CurrentState.StartCopy(context' ReadCopyHeader(stream' buffer));  							yield break;  						// Either StartCopy called us again to finish the operation or control should be passed for user to feed copy data    						case BackEndMessageCode.CopyOutResponse:  							// Enter COPY sub protocol and start pulling data from server  							ChangeState(context' NpgsqlCopyOutState.Instance);  							PGUtil.ReadInt32(stream' buffer); // length redundant  							context.CurrentState.StartCopy(context' ReadCopyHeader(stream' buffer));  							yield break;  						// Either StartCopy called us again to finish the operation or control should be passed for user to feed copy data    						case BackEndMessageCode.CopyData:  							Int32 len = PGUtil.ReadInt32(stream' buffer) - 4;  							byte[] buf = new byte[len];  							PGUtil.ReadBytes(stream' buf' 0' len);  							context.Mediator.ReceivedCopyData = buf;  							yield break; // read data from server one chunk at a time while staying in copy operation mode    						case BackEndMessageCode.CopyDone:  							PGUtil.ReadInt32(stream' buffer); // CopyDone can not have content so this is always 4  							// This will be followed by normal CommandComplete + ReadyForQuery so no op needed  							break;    						case BackEndMessageCode.IO_ERROR:  							// Connection broken. Mono returns -1 instead of throwing an exception as ms.net does.  							throw new IOException();    						default:  							// This could mean a number of things  							//   We've gotten out of sync with the backend?  							//   We need to implement this type?  							//   Backend has gone insane?  							// FIXME  							// what exception should we really throw here?  							throw new NotSupportedException(String.Format("Backend sent unrecognized response type: {0}"' (Char)message));  					}
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,ProcessBackendResponses_Ver_3,The following statement contains a magic number: switch (message)  					{  						case BackEndMessageCode.ErrorResponse:    							NpgsqlError error = new NpgsqlError(stream' buffer' queue);  							error.ErrorSql = mediator.SqlSent;    							if (errors == null) errors = new List<NpgsqlError>();  							errors.Add(error);    							// Return imediately if it is in the startup state or connected state as  							// there is no more messages to consume.  							// Possible error in the NpgsqlStartupState:  							//        Invalid password.  							// Possible error in the NpgsqlConnectedState:  							//        No pg_hba.conf configured.    							if (!context.RequireReadyForQuery)  							{  								throw new NpgsqlException(errors);  							}    							break;  						case BackEndMessageCode.AuthenticationRequest:    							// Get the length in case we're getting AuthenticationGSSContinue   							int authDataLength = PGUtil.ReadInt32(stream' buffer) - 8;    							AuthenticationRequestType authType = (AuthenticationRequestType)PGUtil.ReadInt32(stream' buffer);  							switch (authType)  							{  								case AuthenticationRequestType.AuthenticationOk:  									break;  								case AuthenticationRequestType.AuthenticationClearTextPassword:  									// Send the PasswordPacket.    									ChangeState(context' NpgsqlStartupState.Instance);  									context.Authenticate(context.Password);    									break;  								case AuthenticationRequestType.AuthenticationMD5Password:  									// Now do the "MD5-Thing"  									// for this the Password has to be:  									// 1. md5-hashed with the username as salt  									// 2. md5-hashed again with the salt we get from the backend      									MD5 md5 = MD5.Create();      									// 1.  									byte[] passwd = context.Password;  									byte[] saltUserName = ENCODING_UTF8.GetBytes(context.UserName);    									byte[] crypt_buf = new byte[passwd.Length + saltUserName.Length];    									passwd.CopyTo(crypt_buf' 0);  									saltUserName.CopyTo(crypt_buf' passwd.Length);      									StringBuilder sb = new StringBuilder();  									byte[] hashResult = md5.ComputeHash(crypt_buf);  									foreach (byte b in hashResult)  									{  										sb.Append(b.ToString("x2"));  									}      									String prehash = sb.ToString();    									byte[] prehashbytes = ENCODING_UTF8.GetBytes(prehash);  									crypt_buf = new byte[prehashbytes.Length + 4];      									stream.Read(crypt_buf' prehashbytes.Length' 4);  									// Send the PasswordPacket.  									ChangeState(context' NpgsqlStartupState.Instance);      									// 2.  									prehashbytes.CopyTo(crypt_buf' 0);    									sb = new StringBuilder("md5"); // This is needed as the backend expects md5 result starts with "md5"  									hashResult = md5.ComputeHash(crypt_buf);  									foreach (byte b in hashResult)  									{  										sb.Append(b.ToString("x2"));  									}    									context.Authenticate(ENCODING_UTF8.GetBytes(sb.ToString()));    									break;  #if WINDOWS && UNMANAGED    								case AuthenticationRequestType.AuthenticationSSPI:  									{  										if (context.IntegratedSecurity)  										{  											// For SSPI we have to get the IP-Address (hostname doesn't work)  											string ipAddressString = ((IPEndPoint)context.Socket.RemoteEndPoint).Address.ToString();  											context.SSPI = new SSPIHandler(ipAddressString' "POSTGRES");  											ChangeState(context' NpgsqlStartupState.Instance);  											context.Authenticate(context.SSPI.Continue(null));  											break;  										}  										else  										{  											// TODO: correct exception  											throw new Exception();  										}  									}      								case AuthenticationRequestType.AuthenticationGSSContinue:  									{  										byte[] authData = new byte[authDataLength];  										PGUtil.CheckedStreamRead(stream' authData' 0' authDataLength);  										byte[] passwd_read = context.SSPI.Continue(authData);  										if (passwd_read.Length != 0)  										{  											context.Authenticate(passwd_read);  										}  										break;  									}    #endif    								default:  									// Only AuthenticationClearTextPassword and AuthenticationMD5Password supported for now.  									if (errors == null) errors = new List<NpgsqlError>();  									errors.Add(  										new NpgsqlError(String.Format(resman.GetString("Exception_AuthenticationMethodNotSupported")' authType)));  									throw new NpgsqlException(errors);  							}  							break;  						case BackEndMessageCode.RowDescription:  							yield return context.RowDescription();  							break;  						case BackEndMessageCode.ParameterDescription:    							// Do nothing'for instance'  just read...  							int length = PGUtil.ReadInt32(stream' buffer);  							int nb_param = PGUtil.ReadInt16(stream' buffer);  							//WTF  							for (int i = 0; i < nb_param; i++)  							{  								int typeoid = PGUtil.ReadInt32(stream' buffer);  							}    							break;    						case BackEndMessageCode.DataRow:  							yield return context.NextRow();  							break;    						case BackEndMessageCode.ReadyForQuery:    							// Possible status bytes returned:  							//   I = Idle (no transaction active).  							//   T = In transaction' ready for more.  							//   E = Error in transaction' queries will fail until transaction aborted.  							// Just eat the status byte' we have no use for it at this time.  							PGUtil.ReadInt32(stream' buffer);  							stream.ReadByte();    							ChangeState(context' NpgsqlReadyState.Instance);    							if (errors != null)  							{  								throw new NpgsqlException(errors);  							}    							yield break;    						case BackEndMessageCode.BackendKeyData:  							// BackendKeyData message.  							NpgsqlBackEndKeyData backend_keydata = new NpgsqlBackEndKeyData(stream' buffer);  							context.BackEndKeyData = backend_keydata;      							// Wait for ReadForQuery message  							break;    						case BackEndMessageCode.NoticeResponse:  							// Notices and errors are identical except that we  							// just throw notices away completely ignored.  							context.FireNotice(new NpgsqlError(stream' buffer' queue));  							break;    						case BackEndMessageCode.CompletedResponse:  							PGUtil.ReadInt32(stream' buffer);  							yield return new CompletedResponse(stream' queue);  							break;  						case BackEndMessageCode.ParseComplete:  							// Just read up the message length.  							PGUtil.ReadInt32(stream' buffer);  							yield break;  						case BackEndMessageCode.BindComplete:  							// Just read up the message length.  							PGUtil.ReadInt32(stream' buffer);  							yield break;  						case BackEndMessageCode.EmptyQueryResponse:  							PGUtil.ReadInt32(stream' buffer);  							break;  						case BackEndMessageCode.NotificationResponse:  							// Eat the length  							PGUtil.ReadInt32(stream' buffer);  							context.FireNotification(new NpgsqlNotificationEventArgs(stream' true' buffer' queue));  							if (context.IsNotificationThreadRunning)  							{  								yield break;  							}  							break;  						case BackEndMessageCode.ParameterStatus:  							NpgsqlParameterStatus parameterStatus = new NpgsqlParameterStatus(stream' queue);    							context.AddParameterStatus(parameterStatus);    							if (parameterStatus.Parameter == "server_version")  							{  								// Deal with this here so that if there are   								// changes in a future backend version' we can handle it here in the  								// protocol handler and leave everybody else put of it.  								string versionString = parameterStatus.ParameterValue.Trim();  								for (int idx = 0; idx != versionString.Length; ++idx)  								{  									char c = parameterStatus.ParameterValue[idx];  									if (!char.IsDigit(c) && c != '.')  									{  										versionString = versionString.Substring(0' idx);  										break;  									}  								}  								context.ServerVersion = new Version(versionString);  							}  							break;  						case BackEndMessageCode.NoData:  							// This nodata message may be generated by prepare commands issued with queries which doesn't return rows  							// for example insert' update or delete.  							// Just eat the message.  							PGUtil.ReadInt32(stream' buffer);  							break;    						case BackEndMessageCode.CopyInResponse:  							// Enter COPY sub protocol and start pushing data to server  							ChangeState(context' NpgsqlCopyInState.Instance);  							PGUtil.ReadInt32(stream' buffer); // length redundant  							context.CurrentState.StartCopy(context' ReadCopyHeader(stream' buffer));  							yield break;  						// Either StartCopy called us again to finish the operation or control should be passed for user to feed copy data    						case BackEndMessageCode.CopyOutResponse:  							// Enter COPY sub protocol and start pulling data from server  							ChangeState(context' NpgsqlCopyOutState.Instance);  							PGUtil.ReadInt32(stream' buffer); // length redundant  							context.CurrentState.StartCopy(context' ReadCopyHeader(stream' buffer));  							yield break;  						// Either StartCopy called us again to finish the operation or control should be passed for user to feed copy data    						case BackEndMessageCode.CopyData:  							Int32 len = PGUtil.ReadInt32(stream' buffer) - 4;  							byte[] buf = new byte[len];  							PGUtil.ReadBytes(stream' buf' 0' len);  							context.Mediator.ReceivedCopyData = buf;  							yield break; // read data from server one chunk at a time while staying in copy operation mode    						case BackEndMessageCode.CopyDone:  							PGUtil.ReadInt32(stream' buffer); // CopyDone can not have content so this is always 4  							// This will be followed by normal CommandComplete + ReadyForQuery so no op needed  							break;    						case BackEndMessageCode.IO_ERROR:  							// Connection broken. Mono returns -1 instead of throwing an exception as ms.net does.  							throw new IOException();    						default:  							// This could mean a number of things  							//   We've gotten out of sync with the backend?  							//   We need to implement this type?  							//   Backend has gone insane?  							// FIXME  							// what exception should we really throw here?  							throw new NotSupportedException(String.Format("Backend sent unrecognized response type: {0}"' (Char)message));  					}
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,ProcessBackendResponses_Ver_3,The following statement contains a magic number: switch (message)  					{  						case BackEndMessageCode.ErrorResponse:    							NpgsqlError error = new NpgsqlError(stream' buffer' queue);  							error.ErrorSql = mediator.SqlSent;    							if (errors == null) errors = new List<NpgsqlError>();  							errors.Add(error);    							// Return imediately if it is in the startup state or connected state as  							// there is no more messages to consume.  							// Possible error in the NpgsqlStartupState:  							//        Invalid password.  							// Possible error in the NpgsqlConnectedState:  							//        No pg_hba.conf configured.    							if (!context.RequireReadyForQuery)  							{  								throw new NpgsqlException(errors);  							}    							break;  						case BackEndMessageCode.AuthenticationRequest:    							// Get the length in case we're getting AuthenticationGSSContinue   							int authDataLength = PGUtil.ReadInt32(stream' buffer) - 8;    							AuthenticationRequestType authType = (AuthenticationRequestType)PGUtil.ReadInt32(stream' buffer);  							switch (authType)  							{  								case AuthenticationRequestType.AuthenticationOk:  									break;  								case AuthenticationRequestType.AuthenticationClearTextPassword:  									// Send the PasswordPacket.    									ChangeState(context' NpgsqlStartupState.Instance);  									context.Authenticate(context.Password);    									break;  								case AuthenticationRequestType.AuthenticationMD5Password:  									// Now do the "MD5-Thing"  									// for this the Password has to be:  									// 1. md5-hashed with the username as salt  									// 2. md5-hashed again with the salt we get from the backend      									MD5 md5 = MD5.Create();      									// 1.  									byte[] passwd = context.Password;  									byte[] saltUserName = ENCODING_UTF8.GetBytes(context.UserName);    									byte[] crypt_buf = new byte[passwd.Length + saltUserName.Length];    									passwd.CopyTo(crypt_buf' 0);  									saltUserName.CopyTo(crypt_buf' passwd.Length);      									StringBuilder sb = new StringBuilder();  									byte[] hashResult = md5.ComputeHash(crypt_buf);  									foreach (byte b in hashResult)  									{  										sb.Append(b.ToString("x2"));  									}      									String prehash = sb.ToString();    									byte[] prehashbytes = ENCODING_UTF8.GetBytes(prehash);  									crypt_buf = new byte[prehashbytes.Length + 4];      									stream.Read(crypt_buf' prehashbytes.Length' 4);  									// Send the PasswordPacket.  									ChangeState(context' NpgsqlStartupState.Instance);      									// 2.  									prehashbytes.CopyTo(crypt_buf' 0);    									sb = new StringBuilder("md5"); // This is needed as the backend expects md5 result starts with "md5"  									hashResult = md5.ComputeHash(crypt_buf);  									foreach (byte b in hashResult)  									{  										sb.Append(b.ToString("x2"));  									}    									context.Authenticate(ENCODING_UTF8.GetBytes(sb.ToString()));    									break;  #if WINDOWS && UNMANAGED    								case AuthenticationRequestType.AuthenticationSSPI:  									{  										if (context.IntegratedSecurity)  										{  											// For SSPI we have to get the IP-Address (hostname doesn't work)  											string ipAddressString = ((IPEndPoint)context.Socket.RemoteEndPoint).Address.ToString();  											context.SSPI = new SSPIHandler(ipAddressString' "POSTGRES");  											ChangeState(context' NpgsqlStartupState.Instance);  											context.Authenticate(context.SSPI.Continue(null));  											break;  										}  										else  										{  											// TODO: correct exception  											throw new Exception();  										}  									}      								case AuthenticationRequestType.AuthenticationGSSContinue:  									{  										byte[] authData = new byte[authDataLength];  										PGUtil.CheckedStreamRead(stream' authData' 0' authDataLength);  										byte[] passwd_read = context.SSPI.Continue(authData);  										if (passwd_read.Length != 0)  										{  											context.Authenticate(passwd_read);  										}  										break;  									}    #endif    								default:  									// Only AuthenticationClearTextPassword and AuthenticationMD5Password supported for now.  									if (errors == null) errors = new List<NpgsqlError>();  									errors.Add(  										new NpgsqlError(String.Format(resman.GetString("Exception_AuthenticationMethodNotSupported")' authType)));  									throw new NpgsqlException(errors);  							}  							break;  						case BackEndMessageCode.RowDescription:  							yield return context.RowDescription();  							break;  						case BackEndMessageCode.ParameterDescription:    							// Do nothing'for instance'  just read...  							int length = PGUtil.ReadInt32(stream' buffer);  							int nb_param = PGUtil.ReadInt16(stream' buffer);  							//WTF  							for (int i = 0; i < nb_param; i++)  							{  								int typeoid = PGUtil.ReadInt32(stream' buffer);  							}    							break;    						case BackEndMessageCode.DataRow:  							yield return context.NextRow();  							break;    						case BackEndMessageCode.ReadyForQuery:    							// Possible status bytes returned:  							//   I = Idle (no transaction active).  							//   T = In transaction' ready for more.  							//   E = Error in transaction' queries will fail until transaction aborted.  							// Just eat the status byte' we have no use for it at this time.  							PGUtil.ReadInt32(stream' buffer);  							stream.ReadByte();    							ChangeState(context' NpgsqlReadyState.Instance);    							if (errors != null)  							{  								throw new NpgsqlException(errors);  							}    							yield break;    						case BackEndMessageCode.BackendKeyData:  							// BackendKeyData message.  							NpgsqlBackEndKeyData backend_keydata = new NpgsqlBackEndKeyData(stream' buffer);  							context.BackEndKeyData = backend_keydata;      							// Wait for ReadForQuery message  							break;    						case BackEndMessageCode.NoticeResponse:  							// Notices and errors are identical except that we  							// just throw notices away completely ignored.  							context.FireNotice(new NpgsqlError(stream' buffer' queue));  							break;    						case BackEndMessageCode.CompletedResponse:  							PGUtil.ReadInt32(stream' buffer);  							yield return new CompletedResponse(stream' queue);  							break;  						case BackEndMessageCode.ParseComplete:  							// Just read up the message length.  							PGUtil.ReadInt32(stream' buffer);  							yield break;  						case BackEndMessageCode.BindComplete:  							// Just read up the message length.  							PGUtil.ReadInt32(stream' buffer);  							yield break;  						case BackEndMessageCode.EmptyQueryResponse:  							PGUtil.ReadInt32(stream' buffer);  							break;  						case BackEndMessageCode.NotificationResponse:  							// Eat the length  							PGUtil.ReadInt32(stream' buffer);  							context.FireNotification(new NpgsqlNotificationEventArgs(stream' true' buffer' queue));  							if (context.IsNotificationThreadRunning)  							{  								yield break;  							}  							break;  						case BackEndMessageCode.ParameterStatus:  							NpgsqlParameterStatus parameterStatus = new NpgsqlParameterStatus(stream' queue);    							context.AddParameterStatus(parameterStatus);    							if (parameterStatus.Parameter == "server_version")  							{  								// Deal with this here so that if there are   								// changes in a future backend version' we can handle it here in the  								// protocol handler and leave everybody else put of it.  								string versionString = parameterStatus.ParameterValue.Trim();  								for (int idx = 0; idx != versionString.Length; ++idx)  								{  									char c = parameterStatus.ParameterValue[idx];  									if (!char.IsDigit(c) && c != '.')  									{  										versionString = versionString.Substring(0' idx);  										break;  									}  								}  								context.ServerVersion = new Version(versionString);  							}  							break;  						case BackEndMessageCode.NoData:  							// This nodata message may be generated by prepare commands issued with queries which doesn't return rows  							// for example insert' update or delete.  							// Just eat the message.  							PGUtil.ReadInt32(stream' buffer);  							break;    						case BackEndMessageCode.CopyInResponse:  							// Enter COPY sub protocol and start pushing data to server  							ChangeState(context' NpgsqlCopyInState.Instance);  							PGUtil.ReadInt32(stream' buffer); // length redundant  							context.CurrentState.StartCopy(context' ReadCopyHeader(stream' buffer));  							yield break;  						// Either StartCopy called us again to finish the operation or control should be passed for user to feed copy data    						case BackEndMessageCode.CopyOutResponse:  							// Enter COPY sub protocol and start pulling data from server  							ChangeState(context' NpgsqlCopyOutState.Instance);  							PGUtil.ReadInt32(stream' buffer); // length redundant  							context.CurrentState.StartCopy(context' ReadCopyHeader(stream' buffer));  							yield break;  						// Either StartCopy called us again to finish the operation or control should be passed for user to feed copy data    						case BackEndMessageCode.CopyData:  							Int32 len = PGUtil.ReadInt32(stream' buffer) - 4;  							byte[] buf = new byte[len];  							PGUtil.ReadBytes(stream' buf' 0' len);  							context.Mediator.ReceivedCopyData = buf;  							yield break; // read data from server one chunk at a time while staying in copy operation mode    						case BackEndMessageCode.CopyDone:  							PGUtil.ReadInt32(stream' buffer); // CopyDone can not have content so this is always 4  							// This will be followed by normal CommandComplete + ReadyForQuery so no op needed  							break;    						case BackEndMessageCode.IO_ERROR:  							// Connection broken. Mono returns -1 instead of throwing an exception as ms.net does.  							throw new IOException();    						default:  							// This could mean a number of things  							//   We've gotten out of sync with the backend?  							//   We need to implement this type?  							//   Backend has gone insane?  							// FIXME  							// what exception should we really throw here?  							throw new NotSupportedException(String.Format("Backend sent unrecognized response type: {0}"' (Char)message));  					}
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,CompletedResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,CompletedResponse,The following statement contains a magic number: lioid = (lioid << 3) + (lioid << 1) + bRead - 48;
Magic Number,Revenj.DatabasePersistence.Postgres.Npgsql,CompletedResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,CompletedResponse,The following statement contains a magic number: lioid = (lioid << 3) + (lioid << 1) + bRead - 48;
Magic Number,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,LikeStringComparison,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,CompareString,The following statement contains a magic number: count != 2 && count != 3
Magic Number,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,LikeStringComparison,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,CompareString,The following statement contains a magic number: count != 2 && count != 3
Magic Number,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,LikeStringComparison,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,CompareString,The following statement contains a magic number: count == 2
Magic Number,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,LikeStringComparison,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,CompareStringSimple,The following statement contains a magic number: count != 2
Magic Number,Revenj.DatabasePersistence.Postgres.Plugins.ExpressionSupport,StringMethods,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Plugins\ExpressionSupport\StringMethods.cs,ChooseComparison,The following statement contains a magic number: methodCall.Arguments.Count == 2
Magic Number,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,GetQuerySourceFromExpression,The following statement contains a magic number: var asName = subquery.Selects[0].Sql.Substring(ind + 4).Trim().Replace("\""' "");
Magic Number,Revenj.DatabasePersistence.Postgres.QueryGeneration.QueryComposition,QueryParts,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\QueryComposition\QueryParts.cs,GetQuerySourceFromExpression,The following statement contains a magic number: subquery.Selects[0].Sql = subquery.Selects[0].Sql.Substring(0' ind + 4) + "\"" + name + "\"";
Magic Number,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,DictionaryEntryNewExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\DictionaryEntryNewExpressionTransformer.cs,CanAddMembers,The following statement contains a magic number: return instantiatedType == typeof(DictionaryEntry) && arguments.Count == 2;
Magic Number,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,KeyValuePairNewExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\KeyValuePairNewExpressionTransformer.cs,CanAddMembers,The following statement contains a magic number: return instantiatedType.Name == typeof(KeyValuePair<'>).Name  				   && instantiatedType.Namespace == typeof(KeyValuePair<'>).Namespace  				   && arguments.Count == 2;
Magic Number,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,VBCompareStringExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\VBCompareStringExpressionTransformer.cs,Transform,The following statement contains a magic number: var leftSideArgument2AsConstantExpression = leftSideAsMethodCallExpression.Arguments[2] as ConstantExpression;
Magic Number,Remotion.Linq.Parsing.Structure.IntermediateModel,AggregateExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\AggregateExpressionNode.cs,AggregateExpressionNode,The following statement contains a magic number: func.Parameters.Count != 2
Magic Number,Remotion.Linq.Parsing.Structure.IntermediateModel,AggregateFromSeedExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\AggregateFromSeedExpressionNode.cs,AggregateFromSeedExpressionNode,The following statement contains a magic number: func.Parameters.Count != 2
Magic Number,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupByWithResultSelectorExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupByWithResultSelectorExpressionNode.cs,CreateSelectorForSelectNode,The following statement contains a magic number: var expressionMapping = new Dictionary<Expression' Expression>(2)  							  {  								  { resultSelector.Parameters[1]' groupParameter }'  								  { resultSelector.Parameters[0]' keyExpression }  							  };
Magic Number,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupByWithResultSelectorExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupByWithResultSelectorExpressionNode.cs,GetResultSelector,The following statement contains a magic number: resultSelectorOrNull.Parameters.Count != 2
Magic Number,Remotion.Linq.Parsing.Structure.IntermediateModel,GroupJoinExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\GroupJoinExpressionNode.cs,GroupJoinExpressionNode,The following statement contains a magic number: resultSelector.Parameters.Count != 2
Magic Number,Remotion.Linq.Parsing.Structure.IntermediateModel,JoinExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\JoinExpressionNode.cs,JoinExpressionNode,The following statement contains a magic number: resultSelector.Parameters.Count != 2
Magic Number,Remotion.Linq.Parsing.Structure.IntermediateModel,SelectManyExpressionNode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\Structure\IntermediateModel\SelectManyExpressionNode.cs,SelectManyExpressionNode,The following statement contains a magic number: resultSelector.Parameters.Count != 2
Magic Number,Revenj.DomainPatterns,WeakCache<TValue>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\Cache\WeakCache.cs,Find,The following statement contains a magic number: dict = new ConcurrentDictionary<string' TValue>(1' 17);
Magic Number,Revenj.DomainPatterns,WeakCache<TValue>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\Cache\WeakCache.cs,Find,The following statement contains a magic number: dict = new ConcurrentDictionary<string' TValue>(1' 17);
Magic Number,Revenj.DomainPatterns,WeakCache<TValue>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\Cache\WeakCache.cs,FindOne,The following statement contains a magic number: dict = new ConcurrentDictionary<string' TValue>(1' 17);
Magic Number,Revenj.DomainPatterns,DataContext,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\DataContext.cs,GetSingleLookup,The following statement contains a magic number: SingleLookups = new ConcurrentDictionary<Type' object>(1' 7);
Magic Number,Revenj.DomainPatterns,DataContext,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\DataContext.cs,GetManyLookup,The following statement contains a magic number: ManyLookups = new ConcurrentDictionary<Type' object>(1' 7);
Magic Number,Revenj.DomainPatterns,DataContext,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\DataContext.cs,GetQuerySource,The following statement contains a magic number: QuerySources = new ConcurrentDictionary<Type' object>(1' 7);
Magic Number,Revenj.DomainPatterns,DataContext,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\DataContext.cs,GetQueryRepository,The following statement contains a magic number: SearchSources = new ConcurrentDictionary<Type' object>(1' 7);
Magic Number,Revenj.DomainPatterns,DataContext,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\DataContext.cs,GetRepository,The following statement contains a magic number: Repositories = new ConcurrentDictionary<Type' object>(1' 7);
Magic Number,Revenj.DomainPatterns,DataContext,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\DataContext.cs,GetStore,The following statement contains a magic number: EventStores = new ConcurrentDictionary<Type' object>(1' 7);
Magic Number,Revenj.DomainPatterns,DataContext,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\DataContext.cs,GetHistory,The following statement contains a magic number: Histories = new ConcurrentDictionary<Type' object>(1' 7);
Magic Number,Revenj.DomainPatterns,DomainTypeResolver,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\DomainTypeResolver.cs,TryToResolveTypeWithoutStrongName,The following statement contains a magic number: var mainTypeName = name.Substring(0' first) + name.Substring(last + 2);
Magic Number,Revenj.DomainPatterns,DomainTypeResolver,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\DomainTypeResolver.cs,TryToResolveTypeWithoutStrongName,The following statement contains a magic number: var subTypeNames = name.Substring(first + 2' last - first - 2).Split(new[] { "]'[" }' StringSplitOptions.None);
Magic Number,Revenj.DomainPatterns,DomainTypeResolver,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\DomainTypeResolver.cs,TryToResolveTypeWithoutStrongName,The following statement contains a magic number: var subTypeNames = name.Substring(first + 2' last - first - 2).Split(new[] { "]'[" }' StringSplitOptions.None);
Magic Number,Revenj.DomainPatterns,GlobalEventStore,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\GlobalEventStore.cs,WaitForEvents,The following statement contains a magic number: var bulk = new List<IEvent>(1000);
Magic Number,Revenj.DomainPatterns,GlobalEventStore,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\GlobalEventStore.cs,WaitForEvents,The following statement contains a magic number: i++ < 1000 && EventQueue.Count > 0
Magic Number,Revenj.Extensibility,AspectRepository,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Aspects\AspectRepository.cs,AspectRepository,The following statement contains a magic number: ComponentServices = new ConcurrentDictionary<IComponentRegistration' Type[]>(1' 127);
Magic Number,Revenj.Extensibility,AspectRepository,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Aspects\AspectRepository.cs,Initialize,The following statement contains a magic number: ComponentServices = new ConcurrentDictionary<IComponentRegistration' Type[]>(1' 127);
Magic Number,Revenj.Extensibility,AutofacResolution,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Plugins\AutofacMefProvider.cs,AutofacResolution,The following statement contains a magic number: this.Container = container.BeginLifetimeScope(builder =>  				{  					try  					{  						var assemblies = FindPlugins(configuration);  						foreach (var asm in assemblies)  							builder.RegisterComposablePartCatalog(new AssemblyCatalog(asm));  					}  					catch (System.Reflection.ReflectionTypeLoadException ex)  					{  						var sb = new StringBuilder();  						foreach (var le in ex.LoaderExceptions.Take(5))  						{  							sb.AppendLine(le.Message);  							var fle = le as FileLoadException;  							if (fle != null && fle.FusionLog != null)  								sb.AppendLine(fle.FusionLog);  						}  						System.Diagnostics.Debug.WriteLine(ex.ToString());  						var firstFive = sb.ToString();  						System.Diagnostics.Debug.WriteLine(firstFive);  						throw new FrameworkException("Error loading plugins. Can't load plugins. " + firstFive' ex);  					}  					catch (FrameworkException) { throw; }  					catch (Exception ex)  					{  						System.Diagnostics.Debug.WriteLine(ex.ToString());  						throw new FrameworkException("Error loading plugins."' ex);  					}  				});
Magic Number,Revenj.Extensibility.Autofac.Configuration.Util,ReflectionExtensions,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Configuration\Util\ReflectionExtensions.cs,TryGetDeclaringProperty,The following statement contains a magic number: prop = mi.DeclaringType.GetProperty(mi.Name.Substring(4));
Magic Number,Revenj.Extensibility.Autofac.Core.Activators.Reflection,AutowiringPropertyInjector,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Core\Activators\Reflection\AutowiringPropertyInjector.cs,InjectProperties,The following statement contains a magic number: !overrideSetValues &&  					accessors.Length == 2 &&  					(property.GetValue(instance' null) != null)
Magic Number,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,GetParameterMapping,The following statement contains a magic number: return name.Length > 5 && name[0] == 'F' && name[1] == 'u' && name[2] == 'n' && name[3] == 'c' && name[4] == '`'  					? ParameterMapping.ByType  					: ParameterMapping.ByName;
Magic Number,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,GetParameterMapping,The following statement contains a magic number: return name.Length > 5 && name[0] == 'F' && name[1] == 'u' && name[2] == 'n' && name[3] == 'c' && name[4] == '`'  					? ParameterMapping.ByType  					: ParameterMapping.ByName;
Magic Number,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,GetParameterMapping,The following statement contains a magic number: return name.Length > 5 && name[0] == 'F' && name[1] == 'u' && name[2] == 'n' && name[3] == 'c' && name[4] == '`'  					? ParameterMapping.ByType  					: ParameterMapping.ByName;
Magic Number,Revenj.Extensibility.Autofac.Features.GeneratedFactories,FactoryGenerator,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Features\GeneratedFactories\FactoryGenerator.cs,GetParameterMapping,The following statement contains a magic number: return name.Length > 5 && name[0] == 'F' && name[1] == 'u' && name[2] == 'n' && name[3] == 'c' && name[4] == '`'  					? ParameterMapping.ByType  					: ParameterMapping.ByName;
Magic Number,Revenj.Extensibility.Autofac.Util,ReflectionExtensions,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Extensibility\Autofac\Util\ReflectionExtensions.cs,TryGetDeclaringProperty,The following statement contains a magic number: prop = mi.DeclaringType.GetProperty(mi.Name.Substring(4));
Magic Number,Revenj.Security,RepositoryAuthentication,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\RepositoryAuthentication.cs,AreEqual,The following statement contains a magic number: int len = Marshal.ReadInt32(bstr' -4);
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: const uint primeProd1 = 3u* 5u * 7u * 11u * 13u * 17u * 19u * 23u * 29u;
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 %  3 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 %  5 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 %  7 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 % 11 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 % 13 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 % 17 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 % 19 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 % 23 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 % 29 == 0
Magic Number,Mono.Math.Prime.Generator,SequentialSearchPrimeGeneratorBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime.Generator\SequentialSearchPrimeGeneratorBase.cs,GenerateNewPrime,The following statement contains a magic number: pMod1 += 2;
Magic Number,Mono.Math.Prime,PrimalityTests,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime\PrimalityTests.cs,GetSPPRounds,The following statement contains a magic number: Rounds = 27;
Magic Number,Mono.Math.Prime,PrimalityTests,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime\PrimalityTests.cs,GetSPPRounds,The following statement contains a magic number: bc <= 100
Magic Number,Mono.Math.Prime,PrimalityTests,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime\PrimalityTests.cs,GetSPPRounds,The following statement contains a magic number: switch (confidence) {  				case ConfidenceFactor.ExtraLow:  					Rounds >>= 2;  					return Rounds != 0 ? Rounds : 1;  				case ConfidenceFactor.Low:  					Rounds >>= 1;  					return Rounds != 0 ? Rounds : 1;  				case ConfidenceFactor.Medium:  					return Rounds;  				case ConfidenceFactor.High:  					return Rounds << 1;  				case ConfidenceFactor.ExtraHigh:  					return Rounds << 2;  				case ConfidenceFactor.Provable:  					throw new Exception ("The Rabin-Miller test can not be executed in a way such that its results are provable");  				default:  					throw new ArgumentOutOfRangeException ("confidence");  			}
Magic Number,Mono.Math.Prime,PrimalityTests,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime\PrimalityTests.cs,GetSPPRounds,The following statement contains a magic number: switch (confidence) {  				case ConfidenceFactor.ExtraLow:  					Rounds >>= 2;  					return Rounds != 0 ? Rounds : 1;  				case ConfidenceFactor.Low:  					Rounds >>= 1;  					return Rounds != 0 ? Rounds : 1;  				case ConfidenceFactor.Medium:  					return Rounds;  				case ConfidenceFactor.High:  					return Rounds << 1;  				case ConfidenceFactor.ExtraHigh:  					return Rounds << 2;  				case ConfidenceFactor.Provable:  					throw new Exception ("The Rabin-Miller test can not be executed in a way such that its results are provable");  				default:  					throw new ArgumentOutOfRangeException ("confidence");  			}
Magic Number,Mono.Math.Prime,PrimalityTests,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime\PrimalityTests.cs,Test,The following statement contains a magic number: n.BitCount () < 33
Magic Number,Mono.Math.Prime,PrimalityTests,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime\PrimalityTests.cs,RabinMillerTest,The following statement contains a magic number: y = mr.Pow (2' r);
Magic Number,Mono.Math.Prime,PrimalityTests,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime\PrimalityTests.cs,RabinMillerTest,The following statement contains a magic number: n.BitCount () > 100
Magic Number,Mono.Math.Prime,PrimalityTests,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math.Prime\PrimalityTests.cs,RabinMillerTest,The following statement contains a magic number: y = mr.Pow (y' 2);
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: length = (uint)inData.Length >> 2;
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data [j] = (uint)(  					(inData [i-3] << (3*8)) |  					(inData [i-2] << (2*8)) |  					(inData [i-1] << (1*8)) |  					(inData [i])  					);
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data [j] = (uint)(  					(inData [i-3] << (3*8)) |  					(inData [i-2] << (2*8)) |  					(inData [i-1] << (1*8)) |  					(inData [i])  					);
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data [j] = (uint)(  					(inData [i-3] << (3*8)) |  					(inData [i-2] << (2*8)) |  					(inData [i-1] << (1*8)) |  					(inData [i])  					);
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data [j] = (uint)(  					(inData [i-3] << (3*8)) |  					(inData [i-2] << (2*8)) |  					(inData [i-1] << (1*8)) |  					(inData [i])  					);
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data [j] = (uint)(  					(inData [i-3] << (3*8)) |  					(inData [i-2] << (2*8)) |  					(inData [i-1] << (1*8)) |  					(inData [i])  					);
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data [j] = (uint)(  					(inData [i-3] << (3*8)) |  					(inData [i-2] << (2*8)) |  					(inData [i-1] << (1*8)) |  					(inData [i])  					);
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data [j] = (uint)(  					(inData [i-3] << (3*8)) |  					(inData [i-2] << (2*8)) |  					(inData [i-1] << (1*8)) |  					(inData [i])  					);
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: i >= 3
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver) {  			case 1: data [length-1] = (uint)inData [0]; break;  			case 2: data [length-1] = (uint)((inData [0] << 8) | inData [1]); break;  			case 3: data [length-1] = (uint)((inData [0] << 16) | (inData [1] << 8) | inData [2]); break;  			}
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver) {  			case 1: data [length-1] = (uint)inData [0]; break;  			case 2: data [length-1] = (uint)((inData [0] << 8) | inData [1]); break;  			case 3: data [length-1] = (uint)((inData [0] << 16) | (inData [1] << 8) | inData [2]); break;  			}
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver) {  			case 1: data [length-1] = (uint)inData [0]; break;  			case 2: data [length-1] = (uint)((inData [0] << 8) | inData [1]); break;  			case 3: data [length-1] = (uint)((inData [0] << 16) | (inData [1] << 8) | inData [2]); break;  			}
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver) {  			case 1: data [length-1] = (uint)inData [0]; break;  			case 2: data [length-1] = (uint)((inData [0] << 8) | inData [1]); break;  			case 3: data [length-1] = (uint)((inData [0] << 16) | (inData [1] << 8) | inData [2]); break;  			}
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver) {  			case 1: data [length-1] = (uint)inData [0]; break;  			case 2: data [length-1] = (uint)((inData [0] << 8) | inData [1]); break;  			case 3: data [length-1] = (uint)((inData [0] << 16) | (inData [1] << 8) | inData [2]); break;  			}
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: switch (leftOver) {  			case 1: data [length-1] = (uint)inData [0]; break;  			case 2: data [length-1] = (uint)((inData [0] << 8) | inData [1]); break;  			case 3: data [length-1] = (uint)((inData [0] << 16) | (inData [1] << 8) | inData [2]); break;  			}
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data = new uint [2] { (uint)ul' (uint)(ul >> 32)};
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: data = new uint [2] { (uint)ul' (uint)(ul >> 32)};
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following statement contains a magic number: length = 2;
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,Parse,The following statement contains a magic number: val = val * 10 + (c - '0');
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,GenerateRandom,The following statement contains a magic number: int dwords = bits >> 5;
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,GenerateRandom,The following statement contains a magic number: byte [] random = new byte [dwords << 2];
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,GenerateRandom,The following statement contains a magic number: Buffer.BlockCopy (random' 0' ret.data' 0' (int)dwords << 2);
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,GenerateRandom,The following statement contains a magic number: mask = (uint)(0xFFFFFFFF >> (32 - remBits));
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,Randomize,The following statement contains a magic number: int dwords = bits >> 5;
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,Randomize,The following statement contains a magic number: byte [] random = new byte [dwords << 2];
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,Randomize,The following statement contains a magic number: Buffer.BlockCopy (random' 0' data' 0' (int)dwords << 2);
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,Randomize,The following statement contains a magic number: mask = (uint)(0xFFFFFFFF >> (32 - remBits));
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BitCount,The following statement contains a magic number: uint bits = 32;
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BitCount,The following statement contains a magic number: bits += ((length - 1) << 5);
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,TestBit,The following statement contains a magic number: uint bytePos = bitNum >> 5;
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,TestBit,The following statement contains a magic number: uint bytePos = (uint)bitNum >> 5;
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,SetBit,The following statement contains a magic number: uint bytePos = bitNum >> 5;
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,GetBytes,The following statement contains a magic number: int numBytes = numBits >> 3;
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,GetBytes,The following statement contains a magic number: numBytesInWord = 4;
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,GetBytes,The following statement contains a magic number: val >>= 8;
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,GetBytes,The following statement contains a magic number: numBytesInWord = 4;
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,ToString,The following statement contains a magic number: return ToString (10);
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,Incr2,The following statement contains a magic number: data [0] += 2;
Magic Number,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,Incr2,The following statement contains a magic number: data [0] < 2
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,AddSameSign,The following statement contains a magic number: sum >>= 32;
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,PlusEq,The following statement contains a magic number: sum >>= 32;
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,SingleByteDivideInPlace,The following statement contains a magic number: r <<= 32;
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,DwordMod,The following statement contains a magic number: r <<= 32;
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,DwordDiv,The following statement contains a magic number: r <<= 32;
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,DwordDivMod,The following statement contains a magic number: r <<= 32;
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,multiByteDivide,The following statement contains a magic number: return new BigInteger [2] { 0' new BigInteger (bi1) };
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,multiByteDivide,The following statement contains a magic number: ulong secondDivisorByte = bi2.data [bi2.length-2];
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,multiByteDivide,The following statement contains a magic number: ulong dividend = ((ulong)remainder [pos] << 32) + (ulong)remainder [pos-1];
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,multiByteDivide,The following statement contains a magic number: q_hat == 0x100000000 ||  							(q_hat * secondDivisorByte) > ((r_hat << 32) + remainder [pos-2])
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,multiByteDivide,The following statement contains a magic number: q_hat == 0x100000000 ||  							(q_hat * secondDivisorByte) > ((r_hat << 32) + remainder [pos-2])
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,multiByteDivide,The following statement contains a magic number: mc >>= 32;
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,multiByteDivide,The following statement contains a magic number: sum >>= 32;
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,multiByteDivide,The following statement contains a magic number: BigInteger [] ret = new BigInteger [2] { quot' rem };
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,LeftShift,The following statement contains a magic number: int w = n >> 5;
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,LeftShift,The following statement contains a magic number: n &= ((1 << 5) - 1);
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,LeftShift,The following statement contains a magic number: carry = x >> (32 - n);
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,RightShift,The following statement contains a magic number: int w = n >> 5;
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,RightShift,The following statement contains a magic number: int s = n & ((1 << 5) - 1);
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,RightShift,The following statement contains a magic number: carry = x << (32 - n);
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,MultiplyByDword,The following statement contains a magic number: c >>= 32;
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,Multiply,The following statement contains a magic number: mcarry >>= 32;
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,MultiplyMod2p32pmod,The following statement contains a magic number: mcarry >>= 32;
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,SquarePositive,The following statement contains a magic number: uint* dP2 = dP + 1' tP2 = tP + 2*i + 1;
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,SquarePositive,The following statement contains a magic number: mcarry >>= 32;
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,SquarePositive,The following statement contains a magic number: carry = x >> (32 - 1);
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,SquarePositive,The following statement contains a magic number: val >>= 32;
Magic Number,Mono.Math,Kernel,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,modInverse,The following statement contains a magic number: BigInteger [] q = new BigInteger [2];
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,AuthenticodeBase,The following statement contains a magic number: fileblock = new byte [4096];
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,ProcessFirstBlock,The following statement contains a magic number: return 2;
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,ProcessFirstBlock,The following statement contains a magic number: blockLength < 64
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,ProcessFirstBlock,The following statement contains a magic number: return 3;
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,ProcessFirstBlock,The following statement contains a magic number: peOffset = BitConverterLE.ToInt32 (fileblock' 60);
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,ProcessFirstBlock,The following statement contains a magic number: return 4;
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,ProcessFirstBlock,The following statement contains a magic number: return 5;
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,ProcessFirstBlock,The following statement contains a magic number: ushort magic = BitConverterLE.ToUInt16 (fileblock' peOffset + 24);
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,ProcessFirstBlock,The following statement contains a magic number: dirSecurityOffset = BitConverterLE.ToInt32 (fileblock' peOffset + 168);
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,ProcessFirstBlock,The following statement contains a magic number: dirSecuritySize = BitConverterLE.ToInt32 (fileblock' peOffset + 168 + 4);
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,ProcessFirstBlock,The following statement contains a magic number: dirSecuritySize = BitConverterLE.ToInt32 (fileblock' peOffset + 168 + 4);
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,ProcessFirstBlock,The following statement contains a magic number: coffSymbolTableOffset = BitConverterLE.ToInt32 (fileblock' peOffset + 12);
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,GetSecurityEntry,The following statement contains a magic number: byte[] secEntry = new byte [dirSecuritySize - 8];
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,GetSecurityEntry,The following statement contains a magic number: fs.Position = dirSecurityOffset + 8;
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,GetSecurityEntry,The following statement contains a magic number: dirSecuritySize > 8
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,GetHash,The following statement contains a magic number: int pe = peOffset + 88;
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,GetHash,The following statement contains a magic number: pe += 4;
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,GetHash,The following statement contains a magic number: hash.TransformBlock (fileblock' pe' 76' fileblock' pe);
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,GetHash,The following statement contains a magic number: pe += 76 + 8;
Magic Number,Mono.Security.Authenticode,AuthenticodeBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeBase.cs,GetHash,The following statement contains a magic number: pe += 76 + 8;
Magic Number,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,IsTrusted,The following statement contains a magic number: reason = 7;
Magic Number,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,IsTrusted,The following statement contains a magic number: reason = 6;
Magic Number,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,IsTrusted,The following statement contains a magic number: reason = 6;
Magic Number,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,IsTrusted,The following statement contains a magic number: reason = 4;
Magic Number,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,CheckSignature,The following statement contains a magic number: switch (signedHash.Length) {  				case 16:  					ha = MD5.Create ();   					hash = GetHash (ha);  					break;  				case 20:  					ha = SHA1.Create ();  					hash = GetHash (ha);  					break;  				case 32:  					ha = SHA256.Create ();  					hash = GetHash (ha);  					break;  				case 48:  					ha = SHA384.Create ();  					hash = GetHash (ha);  					break;  				case 64:  					ha = SHA512.Create ();  					hash = GetHash (ha);  					break;  				default:  					reason = 5;  					Close ();  					return false;  			}
Magic Number,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,CheckSignature,The following statement contains a magic number: switch (signedHash.Length) {  				case 16:  					ha = MD5.Create ();   					hash = GetHash (ha);  					break;  				case 20:  					ha = SHA1.Create ();  					hash = GetHash (ha);  					break;  				case 32:  					ha = SHA256.Create ();  					hash = GetHash (ha);  					break;  				case 48:  					ha = SHA384.Create ();  					hash = GetHash (ha);  					break;  				case 64:  					ha = SHA512.Create ();  					hash = GetHash (ha);  					break;  				default:  					reason = 5;  					Close ();  					return false;  			}
Magic Number,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,CheckSignature,The following statement contains a magic number: switch (signedHash.Length) {  				case 16:  					ha = MD5.Create ();   					hash = GetHash (ha);  					break;  				case 20:  					ha = SHA1.Create ();  					hash = GetHash (ha);  					break;  				case 32:  					ha = SHA256.Create ();  					hash = GetHash (ha);  					break;  				case 48:  					ha = SHA384.Create ();  					hash = GetHash (ha);  					break;  				case 64:  					ha = SHA512.Create ();  					hash = GetHash (ha);  					break;  				default:  					reason = 5;  					Close ();  					return false;  			}
Magic Number,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,CheckSignature,The following statement contains a magic number: switch (signedHash.Length) {  				case 16:  					ha = MD5.Create ();   					hash = GetHash (ha);  					break;  				case 20:  					ha = SHA1.Create ();  					hash = GetHash (ha);  					break;  				case 32:  					ha = SHA256.Create ();  					hash = GetHash (ha);  					break;  				case 48:  					ha = SHA384.Create ();  					hash = GetHash (ha);  					break;  				case 64:  					ha = SHA512.Create ();  					hash = GetHash (ha);  					break;  				default:  					reason = 5;  					Close ();  					return false;  			}
Magic Number,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,CheckSignature,The following statement contains a magic number: switch (signedHash.Length) {  				case 16:  					ha = MD5.Create ();   					hash = GetHash (ha);  					break;  				case 20:  					ha = SHA1.Create ();  					hash = GetHash (ha);  					break;  				case 32:  					ha = SHA256.Create ();  					hash = GetHash (ha);  					break;  				case 48:  					ha = SHA384.Create ();  					hash = GetHash (ha);  					break;  				case 64:  					ha = SHA512.Create ();  					hash = GetHash (ha);  					break;  				default:  					reason = 5;  					Close ();  					return false;  			}
Magic Number,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,CheckSignature,The following statement contains a magic number: switch (signedHash.Length) {  				case 16:  					ha = MD5.Create ();   					hash = GetHash (ha);  					break;  				case 20:  					ha = SHA1.Create ();  					hash = GetHash (ha);  					break;  				case 32:  					ha = SHA256.Create ();  					hash = GetHash (ha);  					break;  				case 48:  					ha = SHA384.Create ();  					hash = GetHash (ha);  					break;  				case 64:  					ha = SHA512.Create ();  					hash = GetHash (ha);  					break;  				default:  					reason = 5;  					Close ();  					return false;  			}
Magic Number,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,CheckSignature,The following statement contains a magic number: reason = 2;
Magic Number,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,VerifySignature,The following statement contains a magic number: x509.PublicKey.Length > (signature.Length >> 3)
Magic Number,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,VerifyCounterSignature,The following statement contains a magic number: switch (messageDigest.Length) {  				case 16:  					hashName = "MD5";  					break;  				case 20:  					hashName = "SHA1";  					break;  				case 32:  					hashName = "SHA256";  					break;  				case 48:  					hashName = "SHA384";  					break;  				case 64:  					hashName = "SHA512";  					break;  			}
Magic Number,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,VerifyCounterSignature,The following statement contains a magic number: switch (messageDigest.Length) {  				case 16:  					hashName = "MD5";  					break;  				case 20:  					hashName = "SHA1";  					break;  				case 32:  					hashName = "SHA256";  					break;  				case 48:  					hashName = "SHA384";  					break;  				case 64:  					hashName = "SHA512";  					break;  			}
Magic Number,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,VerifyCounterSignature,The following statement contains a magic number: switch (messageDigest.Length) {  				case 16:  					hashName = "MD5";  					break;  				case 20:  					hashName = "SHA1";  					break;  				case 32:  					hashName = "SHA256";  					break;  				case 48:  					hashName = "SHA384";  					break;  				case 64:  					hashName = "SHA512";  					break;  			}
Magic Number,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,VerifyCounterSignature,The following statement contains a magic number: switch (messageDigest.Length) {  				case 16:  					hashName = "MD5";  					break;  				case 20:  					hashName = "SHA1";  					break;  				case 32:  					hashName = "SHA256";  					break;  				case 48:  					hashName = "SHA384";  					break;  				case 64:  					hashName = "SHA512";  					break;  			}
Magic Number,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,VerifyCounterSignature,The following statement contains a magic number: switch (messageDigest.Length) {  				case 16:  					hashName = "MD5";  					break;  				case 20:  					hashName = "SHA1";  					break;  				case 32:  					hashName = "SHA256";  					break;  				case 48:  					hashName = "SHA384";  					break;  				case 64:  					hashName = "SHA512";  					break;  			}
Magic Number,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,ProcessTimestamp,The following statement contains a magic number: pkcs7.Certificates.Add (new X509Certificate (ts[1][0][3][i].GetBytes ()));
Magic Number,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,ProcessTimestamp,The following statement contains a magic number: i < ts[1][0][3].Count
Magic Number,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,ProcessTimestamp,The following statement contains a magic number: pkcs7.SignerInfo.UnauthenticatedAttributes.Add (Attribute (countersignature' ts[1][0][4][0]));
Magic Number,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,Save,The following statement contains a magic number: int addsize = (filesize & 7);
Magic Number,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,Save,The following statement contains a magic number: addsize = 8 - addsize;
Magic Number,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,Save,The following statement contains a magic number: fs.Seek (PEOffset + 168' SeekOrigin.Begin);
Magic Number,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,Save,The following statement contains a magic number: fs.Write (data' 0' 4);
Magic Number,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,Save,The following statement contains a magic number: int size = asn.Length + 8;
Magic Number,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,Save,The following statement contains a magic number: int addsize_signature = (size & 7);
Magic Number,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,Save,The following statement contains a magic number: addsize_signature = 8 - addsize_signature;
Magic Number,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,Save,The following statement contains a magic number: fs.Seek (PEOffset + 168 + 4' SeekOrigin.Begin);
Magic Number,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,Save,The following statement contains a magic number: fs.Seek (PEOffset + 168 + 4' SeekOrigin.Begin);
Magic Number,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,Save,The following statement contains a magic number: fs.Write (data' 0' 4);
Magic Number,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,Timestamp,The following statement contains a magic number: ASN1 certificates = signedData.Element (3' 0xA0);
Magic Number,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,Timestamp,The following statement contains a magic number: certificates.Add (ts[1][0][3][i]);
Magic Number,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,Timestamp,The following statement contains a magic number: i < ts[1][0][3].Count
Magic Number,Mono.Security.Authenticode,AuthenticodeFormatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeFormatter.cs,Timestamp,The following statement contains a magic number: unauthenticated.Add (Attribute (countersignature' ts[1][0][4][0]));
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,PrivateKey,The following statement contains a magic number: keyType = 2;
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,DeriveKey,The following statement contains a magic number: byte[] key = new byte [16];
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,DeriveKey,The following statement contains a magic number: Buffer.BlockCopy (sha1.Hash' 0' key' 0' 16);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Decode,The following statement contains a magic number: BitConverterLE.ToUInt32 (pvk' 4) != 0x0
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Decode,The following statement contains a magic number: keyType = BitConverterLE.ToInt32 (pvk' 8);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Decode,The following statement contains a magic number: encrypted = (BitConverterLE.ToUInt32 (pvk' 12) == 1);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Decode,The following statement contains a magic number: int saltlen = BitConverterLE.ToInt32 (pvk' 16);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Decode,The following statement contains a magic number: int keylen = BitConverterLE.ToInt32 (pvk' 20);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Decode,The following statement contains a magic number: Buffer.BlockCopy (pvk' 24 + saltlen' keypair' 0' keylen);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Decode,The following statement contains a magic number: Buffer.BlockCopy (pvk' 24' salt' 0' saltlen);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Decode,The following statement contains a magic number: dec.TransformBlock (keypair' 8' keypair.Length - 8' keypair' 8);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Decode,The following statement contains a magic number: dec.TransformBlock (keypair' 8' keypair.Length - 8' keypair' 8);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Decode,The following statement contains a magic number: dec.TransformBlock (keypair' 8' keypair.Length - 8' keypair' 8);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Save,The following statement contains a magic number: byte[] empty = new byte [4];
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Save,The following statement contains a magic number: fs.Write (data' 0' 4);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Save,The following statement contains a magic number: fs.Write (empty' 0' 4);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Save,The following statement contains a magic number: fs.Write (data' 0' 4);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Save,The following statement contains a magic number: fs.Write (data' 0' 4);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Save,The following statement contains a magic number: data = BitConverterLE.GetBytes (16);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Save,The following statement contains a magic number: fs.Write (data' 0' 4);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Save,The following statement contains a magic number: fs.Write (data' 0' 4);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Save,The following statement contains a magic number: byte[] salt = new byte [16];
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Save,The following statement contains a magic number: Array.Clear (key' 5' 11);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Save,The following statement contains a magic number: Array.Clear (key' 5' 11);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Save,The following statement contains a magic number: enc.TransformBlock (blob' 8' blob.Length - 8' blob' 8);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Save,The following statement contains a magic number: enc.TransformBlock (blob' 8' blob.Length - 8' blob' 8);
Magic Number,Mono.Security.Authenticode,PrivateKey,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\PrivateKey.cs,Save,The following statement contains a magic number: enc.TransformBlock (blob' 8' blob.Length - 8' blob' 8);
Magic Number,Mono.Security.Authenticode,SoftwarePublisherCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\SoftwarePublisherCertificate.cs,CreateFromFile,The following statement contains a magic number: data.Length < 2
Magic Number,Mono.Security.Cryptography,ARC4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\ARC4Managed.cs,ARC4Managed,The following statement contains a magic number: state = new byte [256];
Magic Number,Mono.Security.Cryptography,ARC4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\ARC4Managed.cs,GenerateKey,The following statement contains a magic number: KeyValue = KeyBuilder.Key (KeySizeValue >> 3);
Magic Number,Mono.Security.Cryptography,ARC4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\ARC4Managed.cs,KeySetup,The following statement contains a magic number: counter < 256
Magic Number,Mono.Security.Cryptography,ARC4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\ARC4Managed.cs,KeySetup,The following statement contains a magic number: counter < 256
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToInt32LE,The following statement contains a magic number: return (bytes [offset+3] << 24) | (bytes [offset+2] << 16) | (bytes [offset+1] << 8) | bytes [offset];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToInt32LE,The following statement contains a magic number: return (bytes [offset+3] << 24) | (bytes [offset+2] << 16) | (bytes [offset+1] << 8) | bytes [offset];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToInt32LE,The following statement contains a magic number: return (bytes [offset+3] << 24) | (bytes [offset+2] << 16) | (bytes [offset+1] << 8) | bytes [offset];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToInt32LE,The following statement contains a magic number: return (bytes [offset+3] << 24) | (bytes [offset+2] << 16) | (bytes [offset+1] << 8) | bytes [offset];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToInt32LE,The following statement contains a magic number: return (bytes [offset+3] << 24) | (bytes [offset+2] << 16) | (bytes [offset+1] << 8) | bytes [offset];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToUInt32LE,The following statement contains a magic number: return (uint)((bytes [offset+3] << 24) | (bytes [offset+2] << 16) | (bytes [offset+1] << 8) | bytes [offset]);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToUInt32LE,The following statement contains a magic number: return (uint)((bytes [offset+3] << 24) | (bytes [offset+2] << 16) | (bytes [offset+1] << 8) | bytes [offset]);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToUInt32LE,The following statement contains a magic number: return (uint)((bytes [offset+3] << 24) | (bytes [offset+2] << 16) | (bytes [offset+1] << 8) | bytes [offset]);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToUInt32LE,The following statement contains a magic number: return (uint)((bytes [offset+3] << 24) | (bytes [offset+2] << 16) | (bytes [offset+1] << 8) | bytes [offset]);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToUInt32LE,The following statement contains a magic number: return (uint)((bytes [offset+3] << 24) | (bytes [offset+2] << 16) | (bytes [offset+1] << 8) | bytes [offset]);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,GetBytesLE,The following statement contains a magic number: return new byte [] {   				(byte) (val & 0xff)'   				(byte) ((val >> 8) & 0xff)'   				(byte) ((val >> 16) & 0xff)'   				(byte) ((val >> 24) & 0xff)  			};
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,GetBytesLE,The following statement contains a magic number: return new byte [] {   				(byte) (val & 0xff)'   				(byte) ((val >> 8) & 0xff)'   				(byte) ((val >> 16) & 0xff)'   				(byte) ((val >> 24) & 0xff)  			};
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,GetBytesLE,The following statement contains a magic number: return new byte [] {   				(byte) (val & 0xff)'   				(byte) ((val >> 8) & 0xff)'   				(byte) ((val >> 16) & 0xff)'   				(byte) ((val >> 24) & 0xff)  			};
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlob,The following statement contains a magic number: (blob [offset]   != 0x07) ||				// PRIVATEKEYBLOB (0x07)  				    (blob [offset+1] != 0x02) ||				// Version (0x02)  				    (blob [offset+2] != 0x00) ||				// Reserved (word)  				    (blob [offset+3] != 0x00) ||  				    (ToUInt32LE (blob' offset+8) != 0x32415352)
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlob,The following statement contains a magic number: (blob [offset]   != 0x07) ||				// PRIVATEKEYBLOB (0x07)  				    (blob [offset+1] != 0x02) ||				// Version (0x02)  				    (blob [offset+2] != 0x00) ||				// Reserved (word)  				    (blob [offset+3] != 0x00) ||  				    (ToUInt32LE (blob' offset+8) != 0x32415352)
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlob,The following statement contains a magic number: (blob [offset]   != 0x07) ||				// PRIVATEKEYBLOB (0x07)  				    (blob [offset+1] != 0x02) ||				// Version (0x02)  				    (blob [offset+2] != 0x00) ||				// Reserved (word)  				    (blob [offset+3] != 0x00) ||  				    (ToUInt32LE (blob' offset+8) != 0x32415352)
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlob,The following statement contains a magic number: int bitLen = ToInt32LE (blob' offset+12);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlob,The following statement contains a magic number: byte[] exp = new byte [4];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlob,The following statement contains a magic number: Buffer.BlockCopy (blob' offset+16' exp' 0' 4);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlob,The following statement contains a magic number: Buffer.BlockCopy (blob' offset+16' exp' 0' 4);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlob,The following statement contains a magic number: int pos = offset+20;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlob,The following statement contains a magic number: int byteLen = (bitLen >> 3);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlobDSA,The following statement contains a magic number: (blob [offset] != 0x07) ||				// PRIVATEKEYBLOB (0x07)  				    (blob [offset + 1] != 0x02) ||			// Version (0x02)  				    (blob [offset + 2] != 0x00) ||			// Reserved (word)  				    (blob [offset + 3] != 0x00) ||  				    (ToUInt32LE (blob' offset + 8) != 0x32535344)
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlobDSA,The following statement contains a magic number: (blob [offset] != 0x07) ||				// PRIVATEKEYBLOB (0x07)  				    (blob [offset + 1] != 0x02) ||			// Version (0x02)  				    (blob [offset + 2] != 0x00) ||			// Reserved (word)  				    (blob [offset + 3] != 0x00) ||  				    (ToUInt32LE (blob' offset + 8) != 0x32535344)
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlobDSA,The following statement contains a magic number: (blob [offset] != 0x07) ||				// PRIVATEKEYBLOB (0x07)  				    (blob [offset + 1] != 0x02) ||			// Version (0x02)  				    (blob [offset + 2] != 0x00) ||			// Reserved (word)  				    (blob [offset + 3] != 0x00) ||  				    (ToUInt32LE (blob' offset + 8) != 0x32535344)
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlobDSA,The following statement contains a magic number: int bitlen = ToInt32LE (blob' offset + 12);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlobDSA,The following statement contains a magic number: int bytelen = bitlen >> 3;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlobDSA,The following statement contains a magic number: int pos = offset + 16;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlobDSA,The following statement contains a magic number: dsap.Q = new byte [20];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlobDSA,The following statement contains a magic number: Buffer.BlockCopy (blob' pos' dsap.Q' 0' 20);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlobDSA,The following statement contains a magic number: pos += 20;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlobDSA,The following statement contains a magic number: dsap.X = new byte [20];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlobDSA,The following statement contains a magic number: Buffer.BlockCopy (blob' pos' dsap.X' 0' 20);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlobDSA,The following statement contains a magic number: pos += 20;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlobDSA,The following statement contains a magic number: pos += 4;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlobDSA,The following statement contains a magic number: dsap.Seed = new byte [20];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlobDSA,The following statement contains a magic number: Buffer.BlockCopy (blob' pos' dsap.Seed' 0' 20);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPrivateKeyBlobDSA,The following statement contains a magic number: pos += 20;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: byte[] blob = new byte [20 + (keyLength << 2) + (keyLength >> 1)];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: byte[] blob = new byte [20 + (keyLength << 2) + (keyLength >> 1)];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [5] = 0x24;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [8] = 0x52;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [9] = 0x53;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [10] = 0x41;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [11] = 0x32;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: byte[] bitlen = GetBytesLE (keyLength << 3);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [12] = bitlen [0];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [13] = bitlen [1];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [14] = bitlen [2];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [14] = bitlen [2];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [15] = bitlen [3];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [15] = bitlen [3];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: int pos = 16;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: pos = 20;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: byte[] blob = new byte [16 + keyLength + 20 + keyLength + 20 + 4 + 20];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: byte[] blob = new byte [16 + keyLength + 20 + keyLength + 20 + 4 + 20];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: byte[] blob = new byte [16 + keyLength + 20 + keyLength + 20 + 4 + 20];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: byte[] blob = new byte [16 + keyLength + 20 + keyLength + 20 + 4 + 20];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: byte[] blob = new byte [16 + keyLength + 20 + keyLength + 20 + 4 + 20];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [5] = 0x22;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [8] = 0x44;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [9] = 0x53;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [10] = 0x53;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [11] = 0x32;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: byte[] bitlen = GetBytesLE (keyLength << 3);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [12] = bitlen [0];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [13] = bitlen [1];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [14] = bitlen [2];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [14] = bitlen [2];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [15] = bitlen [3];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: blob [15] = bitlen [3];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: int pos = 16;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: Buffer.BlockCopy (part' 0' blob' pos' 20);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: pos += 20;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: Buffer.BlockCopy (part' 0' blob' pos' 20);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: pos += 20;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: Buffer.BlockCopy (GetBytesLE (p.Counter)' 0' blob' pos' 4);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: pos += 4;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPrivateKeyBlob,The following statement contains a magic number: Buffer.BlockCopy (part' 0' blob' pos' 20);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlob,The following statement contains a magic number: (blob [offset]   != 0x06) ||				// PUBLICKEYBLOB (0x06)  				    (blob [offset+1] != 0x02) ||				// Version (0x02)  				    (blob [offset+2] != 0x00) ||				// Reserved (word)  				    (blob [offset+3] != 0x00) ||   				    (ToUInt32LE (blob' offset+8) != 0x31415352)
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlob,The following statement contains a magic number: (blob [offset]   != 0x06) ||				// PUBLICKEYBLOB (0x06)  				    (blob [offset+1] != 0x02) ||				// Version (0x02)  				    (blob [offset+2] != 0x00) ||				// Reserved (word)  				    (blob [offset+3] != 0x00) ||   				    (ToUInt32LE (blob' offset+8) != 0x31415352)
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlob,The following statement contains a magic number: (blob [offset]   != 0x06) ||				// PUBLICKEYBLOB (0x06)  				    (blob [offset+1] != 0x02) ||				// Version (0x02)  				    (blob [offset+2] != 0x00) ||				// Reserved (word)  				    (blob [offset+3] != 0x00) ||   				    (ToUInt32LE (blob' offset+8) != 0x31415352)
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlob,The following statement contains a magic number: int bitLen = ToInt32LE (blob' offset+12);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlob,The following statement contains a magic number: rsap.Exponent = new byte [3];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlob,The following statement contains a magic number: rsap.Exponent [0] = blob [offset+18];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlob,The following statement contains a magic number: rsap.Exponent [1] = blob [offset+17];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlob,The following statement contains a magic number: rsap.Exponent [2] = blob [offset+16];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlob,The following statement contains a magic number: rsap.Exponent [2] = blob [offset+16];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlob,The following statement contains a magic number: int pos = offset+20;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlob,The following statement contains a magic number: int byteLen = (bitLen >> 3);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlobDSA,The following statement contains a magic number: (blob [offset] != 0x06) ||				// PUBLICKEYBLOB (0x06)  				    (blob [offset + 1] != 0x02) ||			// Version (0x02)  				    (blob [offset + 2] != 0x00) ||			// Reserved (word)  				    (blob [offset + 3] != 0x00) ||  				    (ToUInt32LE (blob' offset + 8) != 0x31535344)
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlobDSA,The following statement contains a magic number: (blob [offset] != 0x06) ||				// PUBLICKEYBLOB (0x06)  				    (blob [offset + 1] != 0x02) ||			// Version (0x02)  				    (blob [offset + 2] != 0x00) ||			// Reserved (word)  				    (blob [offset + 3] != 0x00) ||  				    (ToUInt32LE (blob' offset + 8) != 0x31535344)
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlobDSA,The following statement contains a magic number: (blob [offset] != 0x06) ||				// PUBLICKEYBLOB (0x06)  				    (blob [offset + 1] != 0x02) ||			// Version (0x02)  				    (blob [offset + 2] != 0x00) ||			// Reserved (word)  				    (blob [offset + 3] != 0x00) ||  				    (ToUInt32LE (blob' offset + 8) != 0x31535344)
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlobDSA,The following statement contains a magic number: int bitlen = ToInt32LE (blob' offset + 12);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlobDSA,The following statement contains a magic number: int bytelen = bitlen >> 3;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlobDSA,The following statement contains a magic number: int pos = offset + 16;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlobDSA,The following statement contains a magic number: dsap.Q = new byte [20];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlobDSA,The following statement contains a magic number: Buffer.BlockCopy (blob' pos' dsap.Q' 0' 20);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlobDSA,The following statement contains a magic number: pos += 20;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlobDSA,The following statement contains a magic number: pos += 4;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlobDSA,The following statement contains a magic number: dsap.Seed = new byte [20];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlobDSA,The following statement contains a magic number: Buffer.BlockCopy (blob' pos' dsap.Seed' 0' 20);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiPublicKeyBlobDSA,The following statement contains a magic number: pos += 20;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: byte[] blob = new byte [20 + keyLength];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [5] = 0x24;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [8] = 0x52;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [9] = 0x53;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [10] = 0x41;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [11] = 0x31;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: byte[] bitlen = GetBytesLE (keyLength << 3);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [12] = bitlen [0];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [13] = bitlen [1];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [14] = bitlen [2];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [14] = bitlen [2];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [15] = bitlen [3];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [15] = bitlen [3];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: int pos = 16;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: pos = 20;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: byte[] blob = new byte [16 + keyLength + 20 + keyLength + keyLength + 4 + 20];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: byte[] blob = new byte [16 + keyLength + 20 + keyLength + keyLength + 4 + 20];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: byte[] blob = new byte [16 + keyLength + 20 + keyLength + keyLength + 4 + 20];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: byte[] blob = new byte [16 + keyLength + 20 + keyLength + keyLength + 4 + 20];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [5] = 0x22;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [8] = 0x44;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [9] = 0x53;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [10] = 0x53;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [11] = 0x31;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: byte[] bitlen = GetBytesLE (keyLength << 3);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [12] = bitlen [0];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [13] = bitlen [1];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [14] = bitlen [2];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [14] = bitlen [2];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [15] = bitlen [3];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: blob [15] = bitlen [3];
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: int pos = 16;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: Buffer.BlockCopy (part' 0' blob' pos' 20);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: pos += 20;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: Buffer.BlockCopy (GetBytesLE (p.Counter)' 0' blob' pos' 4);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: pos += 4;
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToCapiPublicKeyBlob,The following statement contains a magic number: Buffer.BlockCopy (part' 0' blob' pos' 20);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiKeyBlob,The following statement contains a magic number: switch (blob [offset]) {  				case 0x00:  					// this could be a public key inside an header  					// like "sn -e" would produce  					if (blob [offset + 12] == 0x06) {  						return FromCapiPublicKeyBlob (blob' offset + 12);  					}  					break;  				case 0x06:  					return FromCapiPublicKeyBlob (blob' offset);  				case 0x07:  					return FromCapiPrivateKeyBlob (blob' offset);  			}
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiKeyBlob,The following statement contains a magic number: switch (blob [offset]) {  				case 0x00:  					// this could be a public key inside an header  					// like "sn -e" would produce  					if (blob [offset + 12] == 0x06) {  						return FromCapiPublicKeyBlob (blob' offset + 12);  					}  					break;  				case 0x06:  					return FromCapiPublicKeyBlob (blob' offset);  				case 0x07:  					return FromCapiPrivateKeyBlob (blob' offset);  			}
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,ToHex,The following statement contains a magic number: StringBuilder sb = new StringBuilder (input.Length * 2);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromHexChar,The following statement contains a magic number: return (byte) (c - 'a' + 10);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromHexChar,The following statement contains a magic number: return (byte) (c - 'A' + 10);
Magic Number,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromHex,The following statement contains a magic number: result [n] = (byte) (FromHexChar (hex [i++]) << 4);
Magic Number,Mono.Security.Cryptography,DiffieHellmanManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\DiffieHellmanManaged.cs,DiffieHellmanManaged,The following statement contains a magic number: bitLength < 256 || l < 0
Magic Number,Mono.Security.Cryptography,DiffieHellmanManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\DiffieHellmanManaged.cs,Initialize,The following statement contains a magic number: !p.IsProbablePrime() || g <= 0 || g >= p || (x != null && (x <= 0 || x > p - 2))
Magic Number,Mono.Security.Cryptography,DiffieHellmanManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\DiffieHellmanManaged.cs,GenerateKey,The following statement contains a magic number: bitlen == 768
Magic Number,Mono.Security.Cryptography,DiffieHellmanManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\DiffieHellmanManaged.cs,GenerateKey,The following statement contains a magic number: g = new BigInteger(22);
Magic Number,Mono.Security.Cryptography,KeyPairPersistence,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\KeyPairPersistence.cs,CanSecure,The following statement contains a magic number: (platform == 4) || (platform == 128) || (platform == 6)
Magic Number,Mono.Security.Cryptography,KeyPairPersistence,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\KeyPairPersistence.cs,CanSecure,The following statement contains a magic number: (platform == 4) || (platform == 128) || (platform == 6)
Magic Number,Mono.Security.Cryptography,KeyPairPersistence,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\KeyPairPersistence.cs,CanSecure,The following statement contains a magic number: (platform == 4) || (platform == 128) || (platform == 6)
Magic Number,Mono.Security.Cryptography,MD2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2.cs,MD2,The following statement contains a magic number: HashSizeValue = 128;
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,MD2Managed,The following statement contains a magic number: state = new byte [16];
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,MD2Managed,The following statement contains a magic number: checksum = new byte [16];
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,MD2Managed,The following statement contains a magic number: buffer = new byte [16];
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,MD2Managed,The following statement contains a magic number: x = new byte [48];
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,Initialize,The following statement contains a magic number: Array.Clear (state' 0' 16);
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,Initialize,The following statement contains a magic number: Array.Clear (checksum' 0' 16);
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,Initialize,The following statement contains a magic number: Array.Clear (buffer' 0' 16);
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,Initialize,The following statement contains a magic number: Array.Clear (x' 0' 48);
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,HashCore,The following statement contains a magic number: int partLen = 16 - index;
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,HashCore,The following statement contains a magic number: i + 15 < cbSize
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,HashFinal,The following statement contains a magic number: int padLen = 16 - index;
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,HashFinal,The following statement contains a magic number: HashCore (checksum' 0' 16);
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,MD2Transform,The following statement contains a magic number: Buffer.BlockCopy (state' 0' x' 0' 16);
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,MD2Transform,The following statement contains a magic number: Buffer.BlockCopy (block' index' x' 16' 16);
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,MD2Transform,The following statement contains a magic number: Buffer.BlockCopy (block' index' x' 16' 16);
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,MD2Transform,The following statement contains a magic number: x [i+32] = (byte) ((byte) state [i] ^ (byte) block [index + i]);
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,MD2Transform,The following statement contains a magic number: i < 16
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,MD2Transform,The following statement contains a magic number: j < 48
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,MD2Transform,The following statement contains a magic number: i < 18
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,MD2Transform,The following statement contains a magic number: Buffer.BlockCopy (x' 0' state' 0' 16);
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,MD2Transform,The following statement contains a magic number: t = checksum [15];
Magic Number,Mono.Security.Cryptography,MD2Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD2Managed.cs,MD2Transform,The following statement contains a magic number: i < 16
Magic Number,Mono.Security.Cryptography,MD4,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4.cs,MD4,The following statement contains a magic number: HashSizeValue = 128;
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Managed,The following statement contains a magic number: state = new uint [4];
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Managed,The following statement contains a magic number: count = new uint [2];
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Managed,The following statement contains a magic number: buffer = new byte [64];
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Managed,The following statement contains a magic number: digest = new byte [16];
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Managed,The following statement contains a magic number: x = new uint [16];
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,Initialize,The following statement contains a magic number: state [2] = 0x98badcfe;
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,Initialize,The following statement contains a magic number: state [3] = 0x10325476;
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,Initialize,The following statement contains a magic number: Array.Clear (buffer' 0' 64);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,Initialize,The following statement contains a magic number: Array.Clear (x' 0' 16);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,HashCore,The following statement contains a magic number: int index = (int) ((count [0] >> 3) & 0x3F);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,HashCore,The following statement contains a magic number: count [0] += (uint) (cbSize << 3);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,HashCore,The following statement contains a magic number: count [0] < (cbSize << 3)
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,HashCore,The following statement contains a magic number: count [1] += (uint) (cbSize >> 29);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,HashCore,The following statement contains a magic number: int partLen = 64 - index;
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,HashCore,The following statement contains a magic number: i + 63 < cbSize
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,HashFinal,The following statement contains a magic number: byte[] bits = new byte [8];
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,HashFinal,The following statement contains a magic number: uint index = ((count [0] >> 3) & 0x3f);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,HashFinal,The following statement contains a magic number: int padLen = (int) ((index < 56) ? (56 - index) : (120 - index));
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,HashFinal,The following statement contains a magic number: int padLen = (int) ((index < 56) ? (56 - index) : (120 - index));
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,HashFinal,The following statement contains a magic number: int padLen = (int) ((index < 56) ? (56 - index) : (120 - index));
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,HashFinal,The following statement contains a magic number: HashCore (bits' 0' 8);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,ROL,The following statement contains a magic number: return (uint) (((x) << (n)) | ((x) >> (32-(n))));
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,Encode,The following statement contains a magic number: output [j+1] = (byte)(input [i] >> 8);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,Encode,The following statement contains a magic number: output [j+2] = (byte)(input [i] >> 16);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,Encode,The following statement contains a magic number: output [j+2] = (byte)(input [i] >> 16);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,Encode,The following statement contains a magic number: output [j+3] = (byte)(input [i] >> 24);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,Encode,The following statement contains a magic number: output [j+3] = (byte)(input [i] >> 24);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,Decode,The following statement contains a magic number: output [i] = (uint) ((input [j]) | (input [j+1] << 8) | (input [j+2] << 16) | (input [j+3] << 24));
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,Decode,The following statement contains a magic number: output [i] = (uint) ((input [j]) | (input [j+1] << 8) | (input [j+2] << 16) | (input [j+3] << 24));
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,Decode,The following statement contains a magic number: output [i] = (uint) ((input [j]) | (input [j+1] << 8) | (input [j+2] << 16) | (input [j+3] << 24));
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,Decode,The following statement contains a magic number: output [i] = (uint) ((input [j]) | (input [j+1] << 8) | (input [j+2] << 16) | (input [j+3] << 24));
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,Decode,The following statement contains a magic number: output [i] = (uint) ((input [j]) | (input [j+1] << 8) | (input [j+2] << 16) | (input [j+3] << 24));
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: uint c = state [2];
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: uint d = state [3];
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: FF (ref c' d' a' b' x[ 2]' S13);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: FF (ref b' c' d' a' x[ 3]' S14);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: FF (ref a' b' c' d' x[ 4]' S11);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: FF (ref d' a' b' c' x[ 5]' S12);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: FF (ref c' d' a' b' x[ 6]' S13);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: FF (ref b' c' d' a' x[ 7]' S14);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: FF (ref a' b' c' d' x[ 8]' S11);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: FF (ref d' a' b' c' x[ 9]' S12);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: FF (ref c' d' a' b' x[10]' S13);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: FF (ref b' c' d' a' x[11]' S14);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: FF (ref a' b' c' d' x[12]' S11);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: FF (ref d' a' b' c' x[13]' S12);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: FF (ref c' d' a' b' x[14]' S13);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: FF (ref b' c' d' a' x[15]' S14);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: GG (ref d' a' b' c' x[ 4]' S22);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: GG (ref c' d' a' b' x[ 8]' S23);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: GG (ref b' c' d' a' x[12]' S24);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: GG (ref d' a' b' c' x[ 5]' S22);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: GG (ref c' d' a' b' x[ 9]' S23);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: GG (ref b' c' d' a' x[13]' S24);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: GG (ref a' b' c' d' x[ 2]' S21);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: GG (ref d' a' b' c' x[ 6]' S22);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: GG (ref c' d' a' b' x[10]' S23);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: GG (ref b' c' d' a' x[14]' S24);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: GG (ref a' b' c' d' x[ 3]' S21);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: GG (ref d' a' b' c' x[ 7]' S22);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: GG (ref c' d' a' b' x[11]' S23);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: GG (ref b' c' d' a' x[15]' S24);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: HH (ref d' a' b' c' x[ 8]' S32);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: HH (ref c' d' a' b' x[ 4]' S33);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: HH (ref b' c' d' a' x[12]' S34);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: HH (ref a' b' c' d' x[ 2]' S31);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: HH (ref d' a' b' c' x[10]' S32);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: HH (ref c' d' a' b' x[ 6]' S33);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: HH (ref b' c' d' a' x[14]' S34);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: HH (ref d' a' b' c' x[ 9]' S32);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: HH (ref c' d' a' b' x[ 5]' S33);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: HH (ref b' c' d' a' x[13]' S34);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: HH (ref a' b' c' d' x[ 3]' S31);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: HH (ref d' a' b' c' x[11]' S32);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: HH (ref c' d' a' b' x[ 7]' S33);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: HH (ref b' c' d' a' x[15]' S34);
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: state [2] += c;
Magic Number,Mono.Security.Cryptography,MD4Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD4Managed.cs,MD4Transform,The following statement contains a magic number: state [3] += d;
Magic Number,Mono.Security.Cryptography,MD5SHA1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD5SHA1.cs,HashFinal,The following statement contains a magic number: byte[] hash = new byte[36];
Magic Number,Mono.Security.Cryptography,MD5SHA1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD5SHA1.cs,HashFinal,The following statement contains a magic number: Buffer.BlockCopy(this.md5.Hash' 0' hash' 0' 16);
Magic Number,Mono.Security.Cryptography,MD5SHA1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD5SHA1.cs,HashFinal,The following statement contains a magic number: Buffer.BlockCopy(this.sha.Hash' 0' hash' 16' 20);
Magic Number,Mono.Security.Cryptography,MD5SHA1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\MD5SHA1.cs,HashFinal,The following statement contains a magic number: Buffer.BlockCopy(this.sha.Hash' 0' hash' 16' 20);
Magic Number,Mono.Security.Cryptography,Null,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\Null.cs,Null,The following statement contains a magic number: KeySizeValue = 128;
Magic Number,Mono.Security.Cryptography,Null,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\Null.cs,Null,The following statement contains a magic number: BlockSizeValue = 128;
Magic Number,Mono.Security.Cryptography,Null,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\Null.cs,Null,The following statement contains a magic number: FeedbackSizeValue = 128;
Magic Number,Mono.Security.Cryptography,Null,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\Null.cs,Null,The following statement contains a magic number: LegalKeySizesValue [0] = new KeySizes (0' 1024' 8);
Magic Number,Mono.Security.Cryptography,Null,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\Null.cs,Null,The following statement contains a magic number: LegalKeySizesValue [0] = new KeySizes (0' 1024' 8);
Magic Number,Mono.Security.Cryptography,Null,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\Null.cs,Null,The following statement contains a magic number: LegalBlockSizesValue [0] = new KeySizes (0' 1024' 8);
Magic Number,Mono.Security.Cryptography,Null,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\Null.cs,Null,The following statement contains a magic number: LegalBlockSizesValue [0] = new KeySizes (0' 1024' 8);
Magic Number,Mono.Security.Cryptography,NullManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\Null.cs,GenerateIV,The following statement contains a magic number: IVValue = new byte [BlockSizeValue >> 3];
Magic Number,Mono.Security.Cryptography,NullManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\Null.cs,GenerateKey,The following statement contains a magic number: KeyValue = new byte [KeySizeValue >> 3];
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Encrypt_OAEP,The following statement contains a magic number: int size = rsa.KeySize / 8;
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Encrypt_OAEP,The following statement contains a magic number: int hLen = hash.HashSize / 8;
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Encrypt_OAEP,The following statement contains a magic number: M.Length > size - 2 * hLen - 2
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Encrypt_OAEP,The following statement contains a magic number: M.Length > size - 2 * hLen - 2
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Encrypt_OAEP,The following statement contains a magic number: int PSLength = (size - M.Length - 2 * hLen - 2);
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Encrypt_OAEP,The following statement contains a magic number: int PSLength = (size - M.Length - 2 * hLen - 2);
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Decrypt_OAEP,The following statement contains a magic number: int size = rsa.KeySize / 8;
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Decrypt_OAEP,The following statement contains a magic number: int hLen = hash.HashSize / 8;
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Decrypt_OAEP,The following statement contains a magic number: (size < (2 * hLen + 2)) || (C.Length != size)
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Decrypt_OAEP,The following statement contains a magic number: (size < (2 * hLen + 2)) || (C.Length != size)
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Encrypt_v15,The following statement contains a magic number: int size = rsa.KeySize / 8;
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Encrypt_v15,The following statement contains a magic number: M.Length > size - 11
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Encrypt_v15,The following statement contains a magic number: int PSLength = System.Math.Max (8' (size - M.Length - 3));
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Encrypt_v15,The following statement contains a magic number: int PSLength = System.Math.Max (8' (size - M.Length - 3));
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Encrypt_v15,The following statement contains a magic number: Buffer.BlockCopy (PS' 0' EM' 2' PSLength);
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Decrypt_v15,The following statement contains a magic number: int size = rsa.KeySize >> 3;
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Decrypt_v15,The following statement contains a magic number: (size < 11) || (C.Length > size)
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Decrypt_v15,The following statement contains a magic number: int mPos = 10;
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Sign_v15,The following statement contains a magic number: int size = (rsa.KeySize >> 3);
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Verify_v15,The following statement contains a magic number: int size = (rsa.KeySize >> 3);
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Encode_v15,The following statement contains a magic number: hashValue.Length != (hash.HashSize >> 3)
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Encode_v15,The following statement contains a magic number: int PSLength = System.Math.Max (8' emLength - t.Length - 3);
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Encode_v15,The following statement contains a magic number: int PSLength = System.Math.Max (8' emLength - t.Length - 3);
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Encode_v15,The following statement contains a magic number: byte[] EM = new byte [PSLength + t.Length + 3];
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Encode_v15,The following statement contains a magic number: i < PSLength + 2
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,Encode_v15,The following statement contains a magic number: Buffer.BlockCopy (t' 0' EM' PSLength + 3' t.Length);
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,MGF1,The following statement contains a magic number: int hLen = (hash.HashSize >> 3);
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,MGF1,The following statement contains a magic number: byte[] toBeHashed = new byte [mgfSeedLength + 4];
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,MGF1,The following statement contains a magic number: byte[] C = I2OSP (counter' 4);
Magic Number,Mono.Security.Cryptography,PKCS1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS1.cs,MGF1,The following statement contains a magic number: Buffer.BlockCopy (C' 0' toBeHashed' mgfSeedLength' 4);
Magic Number,Mono.Security.Cryptography,PrivateKeyInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS8.cs,Decode,The following statement contains a magic number: ASN1 privateKey = privateKeyInfo [2];
Magic Number,Mono.Security.Cryptography,PrivateKeyInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS8.cs,Decode,The following statement contains a magic number: ASN1 attributes = privateKeyInfo [3];
Magic Number,Mono.Security.Cryptography,PrivateKeyInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS8.cs,Decode,The following statement contains a magic number: privateKeyInfo.Count > 3
Magic Number,Mono.Security.Cryptography,PrivateKeyInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS8.cs,DecodeRSA,The following statement contains a magic number: privateKey.Count < 9
Magic Number,Mono.Security.Cryptography,PrivateKeyInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS8.cs,DecodeRSA,The following statement contains a magic number: param.D = Normalize (privateKey [3].Value' keysize);
Magic Number,Mono.Security.Cryptography,PrivateKeyInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS8.cs,DecodeRSA,The following statement contains a magic number: param.DP = Normalize (privateKey [6].Value' keysize2);
Magic Number,Mono.Security.Cryptography,PrivateKeyInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS8.cs,DecodeRSA,The following statement contains a magic number: param.DQ = Normalize (privateKey [7].Value' keysize2);
Magic Number,Mono.Security.Cryptography,PrivateKeyInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS8.cs,DecodeRSA,The following statement contains a magic number: param.Exponent = RemoveLeadingZero (privateKey [2].Value);
Magic Number,Mono.Security.Cryptography,PrivateKeyInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS8.cs,DecodeRSA,The following statement contains a magic number: param.InverseQ = Normalize (privateKey [8].Value' keysize2);
Magic Number,Mono.Security.Cryptography,PrivateKeyInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS8.cs,DecodeRSA,The following statement contains a magic number: param.P = Normalize (privateKey [4].Value' keysize2);
Magic Number,Mono.Security.Cryptography,PrivateKeyInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS8.cs,DecodeRSA,The following statement contains a magic number: param.Q = Normalize (privateKey [5].Value' keysize2);
Magic Number,Mono.Security.Cryptography,PrivateKeyInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS8.cs,DecodeDSA,The following statement contains a magic number: dsaParameters.X = Normalize (pvk.Value' 20);
Magic Number,Mono.Security.Cryptography,RC4,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\RC4.cs,RC4,The following statement contains a magic number: KeySizeValue = 128;
Magic Number,Mono.Security.Cryptography,RC4,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\RC4.cs,RC4,The following statement contains a magic number: BlockSizeValue = 64;
Magic Number,Mono.Security.Cryptography,RSAManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\RSAManaged.cs,RSAManaged,The following statement contains a magic number: LegalKeySizesValue [0] = new KeySizes (384' 16384' 8);
Magic Number,Mono.Security.Cryptography,RSAManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\RSAManaged.cs,RSAManaged,The following statement contains a magic number: LegalKeySizesValue [0] = new KeySizes (384' 16384' 8);
Magic Number,Mono.Security.Cryptography,RSAManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\RSAManaged.cs,RSAManaged,The following statement contains a magic number: LegalKeySizesValue [0] = new KeySizes (384' 16384' 8);
Magic Number,Mono.Security.Cryptography,RSAManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\RSAManaged.cs,GenerateKeyPair,The following statement contains a magic number: const uint uint_e = 65537;
Magic Number,Mono.Security.Cryptography,RSAManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\RSAManaged.cs,DecryptValue,The following statement contains a magic number: byte[] result = GetPaddedValue (output' (KeySize >> 3));
Magic Number,Mono.Security.Cryptography,RSAManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\RSAManaged.cs,EncryptValue,The following statement contains a magic number: byte[] result = GetPaddedValue (output' (KeySize >> 3));
Magic Number,Mono.Security.Cryptography,RSAManaged,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\RSAManaged.cs,ExportParameters,The following statement contains a magic number: int length = (KeySize >> 4);
Magic Number,Mono.Security.Cryptography,SHA224,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224.cs,SHA224,The following statement contains a magic number: HashSizeValue = 224;
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,SHA224Managed,The following statement contains a magic number: _H = new uint [8];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,SHA224Managed,The following statement contains a magic number: buff = new uint[64];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Ro0,The following statement contains a magic number: return ((x >> 7) | (x << 25))  				^ ((x >> 18) | (x << 14))  				^ (x >> 3);
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Ro0,The following statement contains a magic number: return ((x >> 7) | (x << 25))  				^ ((x >> 18) | (x << 14))  				^ (x >> 3);
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Ro0,The following statement contains a magic number: return ((x >> 7) | (x << 25))  				^ ((x >> 18) | (x << 14))  				^ (x >> 3);
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Ro0,The following statement contains a magic number: return ((x >> 7) | (x << 25))  				^ ((x >> 18) | (x << 14))  				^ (x >> 3);
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Ro0,The following statement contains a magic number: return ((x >> 7) | (x << 25))  				^ ((x >> 18) | (x << 14))  				^ (x >> 3);
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Ro1,The following statement contains a magic number: return ((x >> 17) | (x << 15))  				^ ((x >> 19) | (x << 13))  				^ (x >> 10);
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Ro1,The following statement contains a magic number: return ((x >> 17) | (x << 15))  				^ ((x >> 19) | (x << 13))  				^ (x >> 10);
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Ro1,The following statement contains a magic number: return ((x >> 17) | (x << 15))  				^ ((x >> 19) | (x << 13))  				^ (x >> 10);
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Ro1,The following statement contains a magic number: return ((x >> 17) | (x << 15))  				^ ((x >> 19) | (x << 13))  				^ (x >> 10);
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Ro1,The following statement contains a magic number: return ((x >> 17) | (x << 15))  				^ ((x >> 19) | (x << 13))  				^ (x >> 10);
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Sig0,The following statement contains a magic number: return ((x >> 2) | (x << 30))  				^ ((x >> 13) | (x << 19))  				^ ((x >> 22) | (x << 10));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Sig0,The following statement contains a magic number: return ((x >> 2) | (x << 30))  				^ ((x >> 13) | (x << 19))  				^ ((x >> 22) | (x << 10));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Sig0,The following statement contains a magic number: return ((x >> 2) | (x << 30))  				^ ((x >> 13) | (x << 19))  				^ ((x >> 22) | (x << 10));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Sig0,The following statement contains a magic number: return ((x >> 2) | (x << 30))  				^ ((x >> 13) | (x << 19))  				^ ((x >> 22) | (x << 10));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Sig0,The following statement contains a magic number: return ((x >> 2) | (x << 30))  				^ ((x >> 13) | (x << 19))  				^ ((x >> 22) | (x << 10));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Sig0,The following statement contains a magic number: return ((x >> 2) | (x << 30))  				^ ((x >> 13) | (x << 19))  				^ ((x >> 22) | (x << 10));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Sig1,The following statement contains a magic number: return ((x >> 6) | (x << 26))  				^ ((x >> 11) | (x << 21))  				^ ((x >> 25) | (x << 7));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Sig1,The following statement contains a magic number: return ((x >> 6) | (x << 26))  				^ ((x >> 11) | (x << 21))  				^ ((x >> 25) | (x << 7));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Sig1,The following statement contains a magic number: return ((x >> 6) | (x << 26))  				^ ((x >> 11) | (x << 21))  				^ ((x >> 25) | (x << 7));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Sig1,The following statement contains a magic number: return ((x >> 6) | (x << 26))  				^ ((x >> 11) | (x << 21))  				^ ((x >> 25) | (x << 7));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Sig1,The following statement contains a magic number: return ((x >> 6) | (x << 26))  				^ ((x >> 11) | (x << 21))  				^ ((x >> 25) | (x << 7));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Sig1,The following statement contains a magic number: return ((x >> 6) | (x << 26))  				^ ((x >> 11) | (x << 21))  				^ ((x >> 25) | (x << 7));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,HashFinal,The following statement contains a magic number: byte[] hash = new byte[28];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,HashFinal,The following statement contains a magic number: hash[i*4+j] = (byte)(_H[i] >> (24-j*8));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,HashFinal,The following statement contains a magic number: hash[i*4+j] = (byte)(_H[i] >> (24-j*8));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,HashFinal,The following statement contains a magic number: hash[i*4+j] = (byte)(_H[i] >> (24-j*8));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,HashFinal,The following statement contains a magic number: j<4
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,HashFinal,The following statement contains a magic number: i<7
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Initialize,The following statement contains a magic number: _H[2] = 0x3070DD17;
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Initialize,The following statement contains a magic number: _H[3] = 0xF70E5939;
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Initialize,The following statement contains a magic number: _H[4] = 0xFFC00B31;
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Initialize,The following statement contains a magic number: _H[5] = 0x68581511;
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Initialize,The following statement contains a magic number: _H[6] = 0x64F98FA7;
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,Initialize,The following statement contains a magic number: _H[7] = 0xBEFA4FA4;
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (uint)(((inputBuffer[inputOffset+4*i]) << 24)  					| ((inputBuffer[inputOffset+4*i+1]) << 16)  					| ((inputBuffer[inputOffset+4*i+2]) <<  8)  					| ((inputBuffer[inputOffset+4*i+3])));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (uint)(((inputBuffer[inputOffset+4*i]) << 24)  					| ((inputBuffer[inputOffset+4*i+1]) << 16)  					| ((inputBuffer[inputOffset+4*i+2]) <<  8)  					| ((inputBuffer[inputOffset+4*i+3])));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (uint)(((inputBuffer[inputOffset+4*i]) << 24)  					| ((inputBuffer[inputOffset+4*i+1]) << 16)  					| ((inputBuffer[inputOffset+4*i+2]) <<  8)  					| ((inputBuffer[inputOffset+4*i+3])));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (uint)(((inputBuffer[inputOffset+4*i]) << 24)  					| ((inputBuffer[inputOffset+4*i+1]) << 16)  					| ((inputBuffer[inputOffset+4*i+2]) <<  8)  					| ((inputBuffer[inputOffset+4*i+3])));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (uint)(((inputBuffer[inputOffset+4*i]) << 24)  					| ((inputBuffer[inputOffset+4*i+1]) << 16)  					| ((inputBuffer[inputOffset+4*i+2]) <<  8)  					| ((inputBuffer[inputOffset+4*i+3])));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (uint)(((inputBuffer[inputOffset+4*i]) << 24)  					| ((inputBuffer[inputOffset+4*i+1]) << 16)  					| ((inputBuffer[inputOffset+4*i+2]) <<  8)  					| ((inputBuffer[inputOffset+4*i+3])));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (uint)(((inputBuffer[inputOffset+4*i]) << 24)  					| ((inputBuffer[inputOffset+4*i+1]) << 16)  					| ((inputBuffer[inputOffset+4*i+2]) <<  8)  					| ((inputBuffer[inputOffset+4*i+3])));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (uint)(((inputBuffer[inputOffset+4*i]) << 24)  					| ((inputBuffer[inputOffset+4*i+1]) << 16)  					| ((inputBuffer[inputOffset+4*i+2]) <<  8)  					| ((inputBuffer[inputOffset+4*i+3])));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: buff[i] = (uint)(((inputBuffer[inputOffset+4*i]) << 24)  					| ((inputBuffer[inputOffset+4*i+1]) << 16)  					| ((inputBuffer[inputOffset+4*i+2]) <<  8)  					| ((inputBuffer[inputOffset+4*i+3])));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: i<16
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t1 = buff[i - 15];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t1 = (((t1 >> 7) | (t1 << 25)) ^ ((t1 >> 18) | (t1 << 14)) ^ (t1 >> 3));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t1 = (((t1 >> 7) | (t1 << 25)) ^ ((t1 >> 18) | (t1 << 14)) ^ (t1 >> 3));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t1 = (((t1 >> 7) | (t1 << 25)) ^ ((t1 >> 18) | (t1 << 14)) ^ (t1 >> 3));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t1 = (((t1 >> 7) | (t1 << 25)) ^ ((t1 >> 18) | (t1 << 14)) ^ (t1 >> 3));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t1 = (((t1 >> 7) | (t1 << 25)) ^ ((t1 >> 18) | (t1 << 14)) ^ (t1 >> 3));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t2 = buff[i - 2];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t2 = (((t2 >> 17) | (t2 << 15)) ^ ((t2 >> 19) | (t2 << 13)) ^ (t2 >> 10));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t2 = (((t2 >> 17) | (t2 << 15)) ^ ((t2 >> 19) | (t2 << 13)) ^ (t2 >> 10));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t2 = (((t2 >> 17) | (t2 << 15)) ^ ((t2 >> 19) | (t2 << 13)) ^ (t2 >> 10));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t2 = (((t2 >> 17) | (t2 << 15)) ^ ((t2 >> 19) | (t2 << 13)) ^ (t2 >> 10));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t2 = (((t2 >> 17) | (t2 << 15)) ^ ((t2 >> 19) | (t2 << 13)) ^ (t2 >> 10));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: buff[i] = t2 + buff[i - 7] + t1 + buff[i - 16];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: buff[i] = t2 + buff[i - 7] + t1 + buff[i - 16];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: i<64
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: c = _H[2];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: d = _H[3];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: e = _H[4];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: f = _H[5];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: g = _H[6];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: h = _H[7];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t1 = h + (((e >> 6) | (e << 26)) ^ ((e >> 11) | (e << 21)) ^ ((e >> 25) | (e << 7))) + ((e & f) ^ (~e & g)) + K1[i] + buff[i];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t1 = h + (((e >> 6) | (e << 26)) ^ ((e >> 11) | (e << 21)) ^ ((e >> 25) | (e << 7))) + ((e & f) ^ (~e & g)) + K1[i] + buff[i];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t1 = h + (((e >> 6) | (e << 26)) ^ ((e >> 11) | (e << 21)) ^ ((e >> 25) | (e << 7))) + ((e & f) ^ (~e & g)) + K1[i] + buff[i];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t1 = h + (((e >> 6) | (e << 26)) ^ ((e >> 11) | (e << 21)) ^ ((e >> 25) | (e << 7))) + ((e & f) ^ (~e & g)) + K1[i] + buff[i];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t1 = h + (((e >> 6) | (e << 26)) ^ ((e >> 11) | (e << 21)) ^ ((e >> 25) | (e << 7))) + ((e & f) ^ (~e & g)) + K1[i] + buff[i];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t1 = h + (((e >> 6) | (e << 26)) ^ ((e >> 11) | (e << 21)) ^ ((e >> 25) | (e << 7))) + ((e & f) ^ (~e & g)) + K1[i] + buff[i];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t2 = (((a >> 2) | (a << 30)) ^ ((a >> 13) | (a << 19)) ^ ((a >> 22) | (a << 10)));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t2 = (((a >> 2) | (a << 30)) ^ ((a >> 13) | (a << 19)) ^ ((a >> 22) | (a << 10)));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t2 = (((a >> 2) | (a << 30)) ^ ((a >> 13) | (a << 19)) ^ ((a >> 22) | (a << 10)));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t2 = (((a >> 2) | (a << 30)) ^ ((a >> 13) | (a << 19)) ^ ((a >> 22) | (a << 10)));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t2 = (((a >> 2) | (a << 30)) ^ ((a >> 13) | (a << 19)) ^ ((a >> 22) | (a << 10)));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: t2 = (((a >> 2) | (a << 30)) ^ ((a >> 13) | (a << 19)) ^ ((a >> 22) | (a << 10)));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: i<64
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: _H[2] += c;
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: _H[3] += d;
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: _H[4] += e;
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: _H[5] += f;
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: _H[6] += g;
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessBlock,The following statement contains a magic number: _H[7] += h;
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessFinalBlock,The following statement contains a magic number: int paddingSize = (56 - (int)(total % BLOCK_SIZE_BYTES));
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessFinalBlock,The following statement contains a magic number: byte[] fooBuffer = new byte[inputCount+paddingSize+8];
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessFinalBlock,The following statement contains a magic number: ulong size = total << 3;
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessFinalBlock,The following statement contains a magic number: ProcessBlock(fooBuffer' 64);
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessFinalBlock,The following statement contains a magic number: inputCount+paddingSize+8 == 128
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,ProcessFinalBlock,The following statement contains a magic number: inputCount+paddingSize+8 == 128
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,AddLength,The following statement contains a magic number: buffer [position++] = (byte)(length >> 56);
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,AddLength,The following statement contains a magic number: buffer [position++] = (byte)(length >> 48);
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,AddLength,The following statement contains a magic number: buffer [position++] = (byte)(length >> 40);
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,AddLength,The following statement contains a magic number: buffer [position++] = (byte)(length >> 32);
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,AddLength,The following statement contains a magic number: buffer [position++] = (byte)(length >> 24);
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,AddLength,The following statement contains a magic number: buffer [position++] = (byte)(length >> 16);
Magic Number,Mono.Security.Cryptography,SHA224Managed,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SHA224Managed.cs,AddLength,The following statement contains a magic number: buffer [position++] = (byte)(length >>  8);
Magic Number,Mono.Security.Cryptography,SymmetricTransform,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SymmetricTransform.cs,SymmetricTransform,The following statement contains a magic number: BlockSizeByte = (algo.BlockSize >> 3);
Magic Number,Mono.Security.Cryptography,SymmetricTransform,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SymmetricTransform.cs,SymmetricTransform,The following statement contains a magic number: FeedBackByte = (algo.FeedbackSize >> 3);
Magic Number,Mono.Security.Cryptography,HMAC,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\TlsHMAC.cs,HMAC,The following statement contains a magic number: byte[] rgbKey = new byte[64];
Magic Number,Mono.Security.Cryptography,HMAC,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\TlsHMAC.cs,HMAC,The following statement contains a magic number: rgbKey.Length > 64
Magic Number,Mono.Security.Cryptography,HMAC,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\TlsHMAC.cs,initializePad,The following statement contains a magic number: innerPad = new byte[64];
Magic Number,Mono.Security.Cryptography,HMAC,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\TlsHMAC.cs,initializePad,The following statement contains a magic number: outerPad = new byte[64];
Magic Number,Mono.Security.Cryptography,HMAC,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\TlsHMAC.cs,initializePad,The following statement contains a magic number: i < 64
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,ChallengeResponse,The following statement contains a magic number: _lmpwd = new byte [21];
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,ChallengeResponse,The following statement contains a magic number: _ntpwd = new byte [21];
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,GetResponse,The following statement contains a magic number: byte[] response = new byte [24];
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,GetResponse,The following statement contains a magic number: ct.TransformBlock (_challenge' 0' 8' response' 0);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,GetResponse,The following statement contains a magic number: des.Key = PrepareDESKey (pwd' 7);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,GetResponse,The following statement contains a magic number: ct.TransformBlock (_challenge' 0' 8' response' 8);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,GetResponse,The following statement contains a magic number: ct.TransformBlock (_challenge' 0' 8' response' 8);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,GetResponse,The following statement contains a magic number: des.Key = PrepareDESKey (pwd' 14);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,GetResponse,The following statement contains a magic number: ct.TransformBlock (_challenge' 0' 8' response' 16);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,GetResponse,The following statement contains a magic number: ct.TransformBlock (_challenge' 0' 8' response' 16);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: byte[] key = new byte [8];
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [1] = (byte) ((key56bits [position] << 7)     | (key56bits [position + 1] >> 1));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [2] = (byte) ((key56bits [position + 1] << 6) | (key56bits [position + 2] >> 2));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [2] = (byte) ((key56bits [position + 1] << 6) | (key56bits [position + 2] >> 2));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [2] = (byte) ((key56bits [position + 1] << 6) | (key56bits [position + 2] >> 2));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [2] = (byte) ((key56bits [position + 1] << 6) | (key56bits [position + 2] >> 2));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [3] = (byte) ((key56bits [position + 2] << 5) | (key56bits [position + 3] >> 3));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [3] = (byte) ((key56bits [position + 2] << 5) | (key56bits [position + 3] >> 3));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [3] = (byte) ((key56bits [position + 2] << 5) | (key56bits [position + 3] >> 3));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [3] = (byte) ((key56bits [position + 2] << 5) | (key56bits [position + 3] >> 3));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [3] = (byte) ((key56bits [position + 2] << 5) | (key56bits [position + 3] >> 3));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [4] = (byte) ((key56bits [position + 3] << 4) | (key56bits [position + 4] >> 4));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [4] = (byte) ((key56bits [position + 3] << 4) | (key56bits [position + 4] >> 4));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [4] = (byte) ((key56bits [position + 3] << 4) | (key56bits [position + 4] >> 4));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [4] = (byte) ((key56bits [position + 3] << 4) | (key56bits [position + 4] >> 4));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [4] = (byte) ((key56bits [position + 3] << 4) | (key56bits [position + 4] >> 4));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [5] = (byte) ((key56bits [position + 4] << 3) | (key56bits [position + 5] >> 5));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [5] = (byte) ((key56bits [position + 4] << 3) | (key56bits [position + 5] >> 5));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [5] = (byte) ((key56bits [position + 4] << 3) | (key56bits [position + 5] >> 5));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [5] = (byte) ((key56bits [position + 4] << 3) | (key56bits [position + 5] >> 5));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [5] = (byte) ((key56bits [position + 4] << 3) | (key56bits [position + 5] >> 5));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [6] = (byte) ((key56bits [position + 5] << 2) | (key56bits [position + 6] >> 6));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [6] = (byte) ((key56bits [position + 5] << 2) | (key56bits [position + 6] >> 6));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [6] = (byte) ((key56bits [position + 5] << 2) | (key56bits [position + 6] >> 6));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [6] = (byte) ((key56bits [position + 5] << 2) | (key56bits [position + 6] >> 6));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [6] = (byte) ((key56bits [position + 5] << 2) | (key56bits [position + 6] >> 6));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [7] = (byte)  (key56bits [position + 6] << 1);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PrepareDESKey,The following statement contains a magic number: key [7] = (byte)  (key56bits [position + 6] << 1);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PasswordToKey,The following statement contains a magic number: byte[] key7 = new byte [7];
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse.cs,PasswordToKey,The following statement contains a magic number: int len = System.Math.Min (password.Length - position' 7);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_LM,The following statement contains a magic number: var buffer = new byte [21];
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_LM,The following statement contains a magic number: Buffer.BlockCopy (nullEncMagic' 0' buffer' 0' 8);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_LM,The following statement contains a magic number: Buffer.BlockCopy (nullEncMagic' 0' buffer' 8' 8);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_LM,The following statement contains a magic number: Buffer.BlockCopy (nullEncMagic' 0' buffer' 8' 8);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_LM,The following statement contains a magic number: (password == null) || (password.Length < 8)
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_NTLM_Password,The following statement contains a magic number: var buffer = new byte [21];
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_NTLM_Password,The following statement contains a magic number: Buffer.BlockCopy (hash' 0' buffer' 0' 16);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_NTLMv2_Session,The following statement contains a magic number: var nonce = new byte [8];
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_NTLMv2_Session,The following statement contains a magic number: var sessionNonce = new byte [challenge.Length + 8];
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_NTLMv2_Session,The following statement contains a magic number: lm = new byte [24];
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_NTLMv2_Session,The following statement contains a magic number: var newChallenge = new byte [8];
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_NTLMv2_Session,The following statement contains a magic number: Array.Copy (hash' newChallenge' 8);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_NTLMv2,The following statement contains a magic number: var timestamp = now.Ticks - 504911232000000000;
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_NTLMv2,The following statement contains a magic number: var nonce = new byte [8];
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_NTLMv2,The following statement contains a magic number: byte[] blob = new byte [28 + type2.TargetInfo.Length];
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_NTLMv2,The following statement contains a magic number: Buffer.BlockCopy (BitConverterLE.GetBytes (timestamp)' 0' blob' 8' 8);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_NTLMv2,The following statement contains a magic number: Buffer.BlockCopy (BitConverterLE.GetBytes (timestamp)' 0' blob' 8' 8);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_NTLMv2,The following statement contains a magic number: Buffer.BlockCopy (nonce' 0' blob' 16' 8);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_NTLMv2,The following statement contains a magic number: Buffer.BlockCopy (nonce' 0' blob' 16' 8);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,Compute_NTLMv2,The following statement contains a magic number: Buffer.BlockCopy (type2.TargetInfo' 0' blob' 28' type2.TargetInfo.Length);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,GetResponse,The following statement contains a magic number: byte[] response = new byte [24];
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,GetResponse,The following statement contains a magic number: ct.TransformBlock (challenge' 0' 8' response' 0);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,GetResponse,The following statement contains a magic number: des.Key = PrepareDESKey (pwd' 7);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,GetResponse,The following statement contains a magic number: ct.TransformBlock (challenge' 0' 8' response' 8);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,GetResponse,The following statement contains a magic number: ct.TransformBlock (challenge' 0' 8' response' 8);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,GetResponse,The following statement contains a magic number: des.Key = PrepareDESKey (pwd' 14);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,GetResponse,The following statement contains a magic number: ct.TransformBlock (challenge' 0' 8' response' 16);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,GetResponse,The following statement contains a magic number: ct.TransformBlock (challenge' 0' 8' response' 16);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: byte[] key = new byte [8];
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [1] = (byte) ((key56bits [position] << 7)     | (key56bits [position + 1] >> 1));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [2] = (byte) ((key56bits [position + 1] << 6) | (key56bits [position + 2] >> 2));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [2] = (byte) ((key56bits [position + 1] << 6) | (key56bits [position + 2] >> 2));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [2] = (byte) ((key56bits [position + 1] << 6) | (key56bits [position + 2] >> 2));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [2] = (byte) ((key56bits [position + 1] << 6) | (key56bits [position + 2] >> 2));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [3] = (byte) ((key56bits [position + 2] << 5) | (key56bits [position + 3] >> 3));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [3] = (byte) ((key56bits [position + 2] << 5) | (key56bits [position + 3] >> 3));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [3] = (byte) ((key56bits [position + 2] << 5) | (key56bits [position + 3] >> 3));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [3] = (byte) ((key56bits [position + 2] << 5) | (key56bits [position + 3] >> 3));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [3] = (byte) ((key56bits [position + 2] << 5) | (key56bits [position + 3] >> 3));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [4] = (byte) ((key56bits [position + 3] << 4) | (key56bits [position + 4] >> 4));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [4] = (byte) ((key56bits [position + 3] << 4) | (key56bits [position + 4] >> 4));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [4] = (byte) ((key56bits [position + 3] << 4) | (key56bits [position + 4] >> 4));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [4] = (byte) ((key56bits [position + 3] << 4) | (key56bits [position + 4] >> 4));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [4] = (byte) ((key56bits [position + 3] << 4) | (key56bits [position + 4] >> 4));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [5] = (byte) ((key56bits [position + 4] << 3) | (key56bits [position + 5] >> 5));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [5] = (byte) ((key56bits [position + 4] << 3) | (key56bits [position + 5] >> 5));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [5] = (byte) ((key56bits [position + 4] << 3) | (key56bits [position + 5] >> 5));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [5] = (byte) ((key56bits [position + 4] << 3) | (key56bits [position + 5] >> 5));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [5] = (byte) ((key56bits [position + 4] << 3) | (key56bits [position + 5] >> 5));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [6] = (byte) ((key56bits [position + 5] << 2) | (key56bits [position + 6] >> 6));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [6] = (byte) ((key56bits [position + 5] << 2) | (key56bits [position + 6] >> 6));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [6] = (byte) ((key56bits [position + 5] << 2) | (key56bits [position + 6] >> 6));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [6] = (byte) ((key56bits [position + 5] << 2) | (key56bits [position + 6] >> 6));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [6] = (byte) ((key56bits [position + 5] << 2) | (key56bits [position + 6] >> 6));
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [7] = (byte)  (key56bits [position + 6] << 1);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PrepareDESKey,The following statement contains a magic number: key [7] = (byte)  (key56bits [position + 6] << 1);
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PasswordToKey,The following statement contains a magic number: byte[] key7 = new byte [7];
Magic Number,Mono.Security.Protocol.Ntlm,ChallengeResponse2,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\ChallengeResponse2.cs,PasswordToKey,The following statement contains a magic number: int len = System.Math.Min (password.Length - position' 7);
Magic Number,Mono.Security.Protocol.Ntlm,MessageBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\MessageBase.cs,PrepareMessage,The following statement contains a magic number: Buffer.BlockCopy (header' 0' message' 0' 8);
Magic Number,Mono.Security.Protocol.Ntlm,MessageBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\MessageBase.cs,PrepareMessage,The following statement contains a magic number: message [ 8] = (byte) _type;
Magic Number,Mono.Security.Protocol.Ntlm,MessageBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\MessageBase.cs,PrepareMessage,The following statement contains a magic number: message [ 9] = (byte)(_type >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,MessageBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\MessageBase.cs,PrepareMessage,The following statement contains a magic number: message [ 9] = (byte)(_type >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,MessageBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\MessageBase.cs,PrepareMessage,The following statement contains a magic number: message [10] = (byte)(_type >> 16);
Magic Number,Mono.Security.Protocol.Ntlm,MessageBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\MessageBase.cs,PrepareMessage,The following statement contains a magic number: message [10] = (byte)(_type >> 16);
Magic Number,Mono.Security.Protocol.Ntlm,MessageBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\MessageBase.cs,PrepareMessage,The following statement contains a magic number: message [11] = (byte)(_type >> 24);
Magic Number,Mono.Security.Protocol.Ntlm,MessageBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\MessageBase.cs,PrepareMessage,The following statement contains a magic number: message [11] = (byte)(_type >> 24);
Magic Number,Mono.Security.Protocol.Ntlm,MessageBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\MessageBase.cs,Decode,The following statement contains a magic number: message.Length < 12
Magic Number,Mono.Security.Protocol.Ntlm,MessageBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\MessageBase.cs,CheckHeader,The following statement contains a magic number: return (BitConverterLE.ToUInt32 (message' 8) == _type);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,Decode,The following statement contains a magic number: Flags = (NtlmFlags) BitConverterLE.ToUInt32 (message' 12);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,Decode,The following statement contains a magic number: int dom_len = BitConverterLE.ToUInt16 (message' 16);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,Decode,The following statement contains a magic number: int dom_off = BitConverterLE.ToUInt16 (message' 20);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,Decode,The following statement contains a magic number: int host_len = BitConverterLE.ToUInt16 (message' 24);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,Decode,The following statement contains a magic number: _host = Encoding.ASCII.GetString (message' 32' host_len);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: byte[] data = PrepareMessage (32 + dom_len + host_len);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [12] = (byte) Flags;
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [13] = (byte)((uint)Flags >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [13] = (byte)((uint)Flags >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [14] = (byte)((uint)Flags >> 16);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [14] = (byte)((uint)Flags >> 16);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [15] = (byte)((uint)Flags >> 24);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [15] = (byte)((uint)Flags >> 24);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: short dom_off = (short)(32 + host_len);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [16] = (byte) dom_len;
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [17] = (byte)(dom_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [17] = (byte)(dom_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [18] = data [16];
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [18] = data [16];
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [19] = data [17];
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [19] = data [17];
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [20] = (byte) dom_off;
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [21] = (byte)(dom_off >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [21] = (byte)(dom_off >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [24] = (byte) host_len;
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [25] = (byte)(host_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [25] = (byte)(host_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [26] = data [24];
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [26] = data [24];
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [27] = data [25];
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [27] = data [25];
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [28] = 0x20;
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: data [29] = 0x00;
Magic Number,Mono.Security.Protocol.Ntlm,Type1Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type1Message.cs,GetBytes,The following statement contains a magic number: Buffer.BlockCopy (host' 0' data' 32' host.Length);
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,Type2Message,The following statement contains a magic number: _nonce = new byte [8];
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,Type2Message,The following statement contains a magic number: _nonce = new byte [8];
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,Decode,The following statement contains a magic number: Flags = (NtlmFlags)BitConverterLE.ToUInt32 (message' 20);
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,Decode,The following statement contains a magic number: Buffer.BlockCopy (message' 24' _nonce' 0' 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,Decode,The following statement contains a magic number: Buffer.BlockCopy (message' 24' _nonce' 0' 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,Decode,The following statement contains a magic number: var tname_len = BitConverterLE.ToUInt16 (message' 12);
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,Decode,The following statement contains a magic number: var tname_off = BitConverterLE.ToUInt16 (message' 16);
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,Decode,The following statement contains a magic number: var tinfo_len = BitConverterLE.ToUInt16 (message' 40);
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,Decode,The following statement contains a magic number: var tinfo_off = BitConverterLE.ToUInt16 (message' 44);
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,Decode,The following statement contains a magic number: message.Length >= 48
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,GetBytes,The following statement contains a magic number: byte[] data = PrepareMessage (40);
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,GetBytes,The following statement contains a magic number: data [16] = (byte) msg_len;
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,GetBytes,The following statement contains a magic number: data [17] = (byte)(msg_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,GetBytes,The following statement contains a magic number: data [17] = (byte)(msg_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,GetBytes,The following statement contains a magic number: data [20] = (byte) Flags;
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,GetBytes,The following statement contains a magic number: data [21] = (byte)((uint)Flags >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,GetBytes,The following statement contains a magic number: data [21] = (byte)((uint)Flags >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,GetBytes,The following statement contains a magic number: data [22] = (byte)((uint)Flags >> 16);
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,GetBytes,The following statement contains a magic number: data [22] = (byte)((uint)Flags >> 16);
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,GetBytes,The following statement contains a magic number: data [23] = (byte)((uint)Flags >> 24);
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,GetBytes,The following statement contains a magic number: data [23] = (byte)((uint)Flags >> 24);
Magic Number,Mono.Security.Protocol.Ntlm,Type2Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type2Message.cs,GetBytes,The following statement contains a magic number: Buffer.BlockCopy (_nonce' 0' data' 24' _nonce.Length);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,Decode,The following statement contains a magic number: Flags = (NtlmFlags)BitConverterLE.ToUInt32 (message' 60);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,Decode,The following statement contains a magic number: message.Length >= 64
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,Decode,The following statement contains a magic number: int lm_len = BitConverterLE.ToUInt16 (message' 12);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,Decode,The following statement contains a magic number: int lm_off = BitConverterLE.ToUInt16 (message' 16);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,Decode,The following statement contains a magic number: int nt_len = BitConverterLE.ToUInt16 (message' 20);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,Decode,The following statement contains a magic number: int nt_off = BitConverterLE.ToUInt16 (message' 24);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,Decode,The following statement contains a magic number: int dom_len = BitConverterLE.ToUInt16 (message' 28);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,Decode,The following statement contains a magic number: int dom_off = BitConverterLE.ToUInt16 (message' 32);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,Decode,The following statement contains a magic number: int user_len = BitConverterLE.ToUInt16 (message' 36);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,Decode,The following statement contains a magic number: int user_off = BitConverterLE.ToUInt16 (message' 40);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,Decode,The following statement contains a magic number: int host_len = BitConverterLE.ToUInt16 (message' 44);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,Decode,The following statement contains a magic number: int host_off = BitConverterLE.ToUInt16 (message' 48);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: byte[] data = PrepareMessage (64 + target.Length + user.Length + host.Length + lmresp_len + ntresp_len);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: short lmresp_off = (short)(64 + target.Length + user.Length + host.Length);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [12] = (byte)lmresp_len;
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [13] = (byte)0x00;
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [14] = (byte)lmresp_len;
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [15] = (byte)0x00;
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [16] = (byte)lmresp_off;
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [17] = (byte)(lmresp_off >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [17] = (byte)(lmresp_off >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [20] = (byte)ntresp_len;
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [21] = (byte)(ntresp_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [21] = (byte)(ntresp_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [22] = (byte)ntresp_len;
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [23] = (byte)(ntresp_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [23] = (byte)(ntresp_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [24] = (byte)ntresp_off;
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [25] = (byte)(ntresp_off >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [25] = (byte)(ntresp_off >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: short dom_off = 64;
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [28] = (byte)dom_len;
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [29] = (byte)(dom_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [29] = (byte)(dom_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [30] = data [28];
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [30] = data [28];
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [31] = data [29];
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [31] = data [29];
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [32] = (byte)dom_off;
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [33] = (byte)(dom_off >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [33] = (byte)(dom_off >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [36] = (byte)uname_len;
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [37] = (byte)(uname_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [37] = (byte)(uname_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [38] = data [36];
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [38] = data [36];
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [39] = data [37];
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [39] = data [37];
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [40] = (byte)uname_off;
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [41] = (byte)(uname_off >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [41] = (byte)(uname_off >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [44] = (byte)host_len;
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [45] = (byte)(host_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [45] = (byte)(host_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [46] = data [44];
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [46] = data [44];
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [47] = data [45];
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [47] = data [45];
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [48] = (byte)host_off;
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [49] = (byte)(host_off >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [49] = (byte)(host_off >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [56] = (byte)msg_len;
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [57] = (byte)(msg_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [57] = (byte)(msg_len >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [60] = (byte)flags;
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [61] = (byte)((uint)flags >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [61] = (byte)((uint)flags >> 8);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [62] = (byte)((uint)flags >> 16);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [62] = (byte)((uint)flags >> 16);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [63] = (byte)((uint)flags >> 24);
Magic Number,Mono.Security.Protocol.Ntlm,Type3Message,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Ntlm\Type3Message.cs,GetBytes,The following statement contains a magic number: data [63] = (byte)((uint)flags >> 24);
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsClientCertificateVerify,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsClientCertificateVerify.cs,getClientCertRSA,The following statement contains a magic number: int keySize = (rsaParams.Modulus.Length << 3);
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsClientFinished,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsClientFinished.cs,ProcessAsTls1,The following statement contains a magic number: Write(this.Context.Write.Cipher.PRF(this.Context.MasterSecret' "client finished"' digest' 12));
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsClientHello,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsClientHello.cs,ProcessAsSsl3,The following statement contains a magic number: clientRandom.Write(this.Context.GetSecureRandomBytes(28));
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsClientHello,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsClientHello.cs,ProcessAsSsl3,The following statement contains a magic number: this.Write((short)(this.Context.SupportedCiphers.Count*2));
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsClientHello,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsClientHello.cs,ProcessAsTls1,The following statement contains a magic number: extensions.Write ((short) (server_name.Length + 5));
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsClientHello,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsClientHello.cs,ProcessAsTls1,The following statement contains a magic number: extensions.Write ((short) (server_name.Length + 3));
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerCertificate.cs,ProcessAsTls1,The following statement contains a magic number: readed += 3;
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerCertificate.cs,checkCertificateUsage,The following statement contains a magic number: cert.Version < 3
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerCertificate.cs,LocalValidation,The following statement contains a magic number: errors.Add ((int)-2146762490);
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerCertificate.cs,LocalValidation,The following statement contains a magic number: errors.Add ((int)-2146762481);
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerCertificate.cs,LocalValidation,The following statement contains a magic number: switch (verify.Status)   				{  					case X509ChainStatusFlags.InvalidBasicConstraints:  						// WinError.h TRUST_E_BASIC_CONSTRAINTS 0x80096019  						errors.Add ((int)-2146869223);  						break;  					  					case X509ChainStatusFlags.NotSignatureValid:  						// WinError.h TRUST_E_BAD_DIGEST 0x80096010  						errors.Add ((int)-2146869232);  						break;  					  					case X509ChainStatusFlags.NotTimeNested:  						// WinError.h CERT_E_VALIDITYPERIODNESTING 0x800B0102  						errors.Add ((int)-2146762494);  						break;  					  					case X509ChainStatusFlags.NotTimeValid:  						// WinError.h CERT_E_EXPIRED 0x800B0101  						description = AlertDescription.CertificateExpired;  						errors.Add ((int)-2146762495);  						break;  					  					case X509ChainStatusFlags.PartialChain:  						// WinError.h CERT_E_CHAINING 0x800B010A  						description = AlertDescription.UnknownCA;  						errors.Add ((int)-2146762486);  						break;  					  					case X509ChainStatusFlags.UntrustedRoot:  						// WinError.h CERT_E_UNTRUSTEDROOT 0x800B0109  						description = AlertDescription.UnknownCA;  						errors.Add ((int)-2146762487);  						break;  					  					default:  						// unknown error  						description = AlertDescription.CertificateUnknown;  						errors.Add ((int)verify.Status);  						break;  				}
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerCertificate.cs,LocalValidation,The following statement contains a magic number: switch (verify.Status)   				{  					case X509ChainStatusFlags.InvalidBasicConstraints:  						// WinError.h TRUST_E_BASIC_CONSTRAINTS 0x80096019  						errors.Add ((int)-2146869223);  						break;  					  					case X509ChainStatusFlags.NotSignatureValid:  						// WinError.h TRUST_E_BAD_DIGEST 0x80096010  						errors.Add ((int)-2146869232);  						break;  					  					case X509ChainStatusFlags.NotTimeNested:  						// WinError.h CERT_E_VALIDITYPERIODNESTING 0x800B0102  						errors.Add ((int)-2146762494);  						break;  					  					case X509ChainStatusFlags.NotTimeValid:  						// WinError.h CERT_E_EXPIRED 0x800B0101  						description = AlertDescription.CertificateExpired;  						errors.Add ((int)-2146762495);  						break;  					  					case X509ChainStatusFlags.PartialChain:  						// WinError.h CERT_E_CHAINING 0x800B010A  						description = AlertDescription.UnknownCA;  						errors.Add ((int)-2146762486);  						break;  					  					case X509ChainStatusFlags.UntrustedRoot:  						// WinError.h CERT_E_UNTRUSTEDROOT 0x800B0109  						description = AlertDescription.UnknownCA;  						errors.Add ((int)-2146762487);  						break;  					  					default:  						// unknown error  						description = AlertDescription.CertificateUnknown;  						errors.Add ((int)verify.Status);  						break;  				}
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerCertificate.cs,LocalValidation,The following statement contains a magic number: switch (verify.Status)   				{  					case X509ChainStatusFlags.InvalidBasicConstraints:  						// WinError.h TRUST_E_BASIC_CONSTRAINTS 0x80096019  						errors.Add ((int)-2146869223);  						break;  					  					case X509ChainStatusFlags.NotSignatureValid:  						// WinError.h TRUST_E_BAD_DIGEST 0x80096010  						errors.Add ((int)-2146869232);  						break;  					  					case X509ChainStatusFlags.NotTimeNested:  						// WinError.h CERT_E_VALIDITYPERIODNESTING 0x800B0102  						errors.Add ((int)-2146762494);  						break;  					  					case X509ChainStatusFlags.NotTimeValid:  						// WinError.h CERT_E_EXPIRED 0x800B0101  						description = AlertDescription.CertificateExpired;  						errors.Add ((int)-2146762495);  						break;  					  					case X509ChainStatusFlags.PartialChain:  						// WinError.h CERT_E_CHAINING 0x800B010A  						description = AlertDescription.UnknownCA;  						errors.Add ((int)-2146762486);  						break;  					  					case X509ChainStatusFlags.UntrustedRoot:  						// WinError.h CERT_E_UNTRUSTEDROOT 0x800B0109  						description = AlertDescription.UnknownCA;  						errors.Add ((int)-2146762487);  						break;  					  					default:  						// unknown error  						description = AlertDescription.CertificateUnknown;  						errors.Add ((int)verify.Status);  						break;  				}
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerCertificate.cs,LocalValidation,The following statement contains a magic number: switch (verify.Status)   				{  					case X509ChainStatusFlags.InvalidBasicConstraints:  						// WinError.h TRUST_E_BASIC_CONSTRAINTS 0x80096019  						errors.Add ((int)-2146869223);  						break;  					  					case X509ChainStatusFlags.NotSignatureValid:  						// WinError.h TRUST_E_BAD_DIGEST 0x80096010  						errors.Add ((int)-2146869232);  						break;  					  					case X509ChainStatusFlags.NotTimeNested:  						// WinError.h CERT_E_VALIDITYPERIODNESTING 0x800B0102  						errors.Add ((int)-2146762494);  						break;  					  					case X509ChainStatusFlags.NotTimeValid:  						// WinError.h CERT_E_EXPIRED 0x800B0101  						description = AlertDescription.CertificateExpired;  						errors.Add ((int)-2146762495);  						break;  					  					case X509ChainStatusFlags.PartialChain:  						// WinError.h CERT_E_CHAINING 0x800B010A  						description = AlertDescription.UnknownCA;  						errors.Add ((int)-2146762486);  						break;  					  					case X509ChainStatusFlags.UntrustedRoot:  						// WinError.h CERT_E_UNTRUSTEDROOT 0x800B0109  						description = AlertDescription.UnknownCA;  						errors.Add ((int)-2146762487);  						break;  					  					default:  						// unknown error  						description = AlertDescription.CertificateUnknown;  						errors.Add ((int)verify.Status);  						break;  				}
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerCertificate.cs,LocalValidation,The following statement contains a magic number: switch (verify.Status)   				{  					case X509ChainStatusFlags.InvalidBasicConstraints:  						// WinError.h TRUST_E_BASIC_CONSTRAINTS 0x80096019  						errors.Add ((int)-2146869223);  						break;  					  					case X509ChainStatusFlags.NotSignatureValid:  						// WinError.h TRUST_E_BAD_DIGEST 0x80096010  						errors.Add ((int)-2146869232);  						break;  					  					case X509ChainStatusFlags.NotTimeNested:  						// WinError.h CERT_E_VALIDITYPERIODNESTING 0x800B0102  						errors.Add ((int)-2146762494);  						break;  					  					case X509ChainStatusFlags.NotTimeValid:  						// WinError.h CERT_E_EXPIRED 0x800B0101  						description = AlertDescription.CertificateExpired;  						errors.Add ((int)-2146762495);  						break;  					  					case X509ChainStatusFlags.PartialChain:  						// WinError.h CERT_E_CHAINING 0x800B010A  						description = AlertDescription.UnknownCA;  						errors.Add ((int)-2146762486);  						break;  					  					case X509ChainStatusFlags.UntrustedRoot:  						// WinError.h CERT_E_UNTRUSTEDROOT 0x800B0109  						description = AlertDescription.UnknownCA;  						errors.Add ((int)-2146762487);  						break;  					  					default:  						// unknown error  						description = AlertDescription.CertificateUnknown;  						errors.Add ((int)verify.Status);  						break;  				}
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerCertificate.cs,LocalValidation,The following statement contains a magic number: switch (verify.Status)   				{  					case X509ChainStatusFlags.InvalidBasicConstraints:  						// WinError.h TRUST_E_BASIC_CONSTRAINTS 0x80096019  						errors.Add ((int)-2146869223);  						break;  					  					case X509ChainStatusFlags.NotSignatureValid:  						// WinError.h TRUST_E_BAD_DIGEST 0x80096010  						errors.Add ((int)-2146869232);  						break;  					  					case X509ChainStatusFlags.NotTimeNested:  						// WinError.h CERT_E_VALIDITYPERIODNESTING 0x800B0102  						errors.Add ((int)-2146762494);  						break;  					  					case X509ChainStatusFlags.NotTimeValid:  						// WinError.h CERT_E_EXPIRED 0x800B0101  						description = AlertDescription.CertificateExpired;  						errors.Add ((int)-2146762495);  						break;  					  					case X509ChainStatusFlags.PartialChain:  						// WinError.h CERT_E_CHAINING 0x800B010A  						description = AlertDescription.UnknownCA;  						errors.Add ((int)-2146762486);  						break;  					  					case X509ChainStatusFlags.UntrustedRoot:  						// WinError.h CERT_E_UNTRUSTEDROOT 0x800B0109  						description = AlertDescription.UnknownCA;  						errors.Add ((int)-2146762487);  						break;  					  					default:  						// unknown error  						description = AlertDescription.CertificateUnknown;  						errors.Add ((int)verify.Status);  						break;  				}
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerFinished,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerFinished.cs,ProcessAsTls1,The following statement contains a magic number: byte[] clientPRF = this.Context.Current.Cipher.PRF(this.Context.MasterSecret' "server finished"' digest' 12);
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerHello,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerHello.cs,ProcessAsTls1,The following statement contains a magic number: this.random	= this.ReadBytes(32);
Magic Number,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerKeyExchange,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerKeyExchange.cs,verifySignature,The following statement contains a magic number: int size = rsaParams.Modulus.Length + rsaParams.Exponent.Length + 4;
Magic Number,Mono.Security.Protocol.Tls.Handshake.Server,TlsClientCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Server\TlsClientCertificate.cs,ProcessAsTls1,The following statement contains a magic number: bytesRead += certLength + 3;
Magic Number,Mono.Security.Protocol.Tls.Handshake.Server,TlsClientCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Server\TlsClientCertificate.cs,checkCertificateUsage,The following statement contains a magic number: cert.Version < 3
Magic Number,Mono.Security.Protocol.Tls.Handshake.Server,TlsClientCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Server\TlsClientCertificate.cs,validateCertificates,The following statement contains a magic number: errors.Add ((int)-2146762490);
Magic Number,Mono.Security.Protocol.Tls.Handshake.Server,TlsClientCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Server\TlsClientCertificate.cs,validateCertificates,The following statement contains a magic number: switch (verify.Status)  					{  						case X509ChainStatusFlags.InvalidBasicConstraints:  							// WinError.h TRUST_E_BASIC_CONSTRAINTS 0x80096019  							errors.Add ((int)-2146869223);  							break;    						case X509ChainStatusFlags.NotSignatureValid:  							// WinError.h TRUST_E_BAD_DIGEST 0x80096010  							errors.Add ((int)-2146869232);  							break;    						case X509ChainStatusFlags.NotTimeNested:  							// WinError.h CERT_E_VALIDITYPERIODNESTING 0x800B0102  							errors.Add ((int)-2146762494);  							break;    						case X509ChainStatusFlags.NotTimeValid:  							// WinError.h CERT_E_EXPIRED 0x800B0101  							description = AlertDescription.CertificateExpired;  							errors.Add ((int)-2146762495);  							break;    						case X509ChainStatusFlags.PartialChain:  							// WinError.h CERT_E_CHAINING 0x800B010A  							description = AlertDescription.UnknownCA;  							errors.Add ((int)-2146762486);  							break;    						case X509ChainStatusFlags.UntrustedRoot:  							// WinError.h CERT_E_UNTRUSTEDROOT 0x800B0109  							description = AlertDescription.UnknownCA;  							errors.Add ((int)-2146762487);  							break;    						default:  							// unknown error  							description = AlertDescription.CertificateUnknown;  							errors.Add ((int)verify.Status);  							break;  					}
Magic Number,Mono.Security.Protocol.Tls.Handshake.Server,TlsClientCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Server\TlsClientCertificate.cs,validateCertificates,The following statement contains a magic number: switch (verify.Status)  					{  						case X509ChainStatusFlags.InvalidBasicConstraints:  							// WinError.h TRUST_E_BASIC_CONSTRAINTS 0x80096019  							errors.Add ((int)-2146869223);  							break;    						case X509ChainStatusFlags.NotSignatureValid:  							// WinError.h TRUST_E_BAD_DIGEST 0x80096010  							errors.Add ((int)-2146869232);  							break;    						case X509ChainStatusFlags.NotTimeNested:  							// WinError.h CERT_E_VALIDITYPERIODNESTING 0x800B0102  							errors.Add ((int)-2146762494);  							break;    						case X509ChainStatusFlags.NotTimeValid:  							// WinError.h CERT_E_EXPIRED 0x800B0101  							description = AlertDescription.CertificateExpired;  							errors.Add ((int)-2146762495);  							break;    						case X509ChainStatusFlags.PartialChain:  							// WinError.h CERT_E_CHAINING 0x800B010A  							description = AlertDescription.UnknownCA;  							errors.Add ((int)-2146762486);  							break;    						case X509ChainStatusFlags.UntrustedRoot:  							// WinError.h CERT_E_UNTRUSTEDROOT 0x800B0109  							description = AlertDescription.UnknownCA;  							errors.Add ((int)-2146762487);  							break;    						default:  							// unknown error  							description = AlertDescription.CertificateUnknown;  							errors.Add ((int)verify.Status);  							break;  					}
Magic Number,Mono.Security.Protocol.Tls.Handshake.Server,TlsClientCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Server\TlsClientCertificate.cs,validateCertificates,The following statement contains a magic number: switch (verify.Status)  					{  						case X509ChainStatusFlags.InvalidBasicConstraints:  							// WinError.h TRUST_E_BASIC_CONSTRAINTS 0x80096019  							errors.Add ((int)-2146869223);  							break;    						case X509ChainStatusFlags.NotSignatureValid:  							// WinError.h TRUST_E_BAD_DIGEST 0x80096010  							errors.Add ((int)-2146869232);  							break;    						case X509ChainStatusFlags.NotTimeNested:  							// WinError.h CERT_E_VALIDITYPERIODNESTING 0x800B0102  							errors.Add ((int)-2146762494);  							break;    						case X509ChainStatusFlags.NotTimeValid:  							// WinError.h CERT_E_EXPIRED 0x800B0101  							description = AlertDescription.CertificateExpired;  							errors.Add ((int)-2146762495);  							break;    						case X509ChainStatusFlags.PartialChain:  							// WinError.h CERT_E_CHAINING 0x800B010A  							description = AlertDescription.UnknownCA;  							errors.Add ((int)-2146762486);  							break;    						case X509ChainStatusFlags.UntrustedRoot:  							// WinError.h CERT_E_UNTRUSTEDROOT 0x800B0109  							description = AlertDescription.UnknownCA;  							errors.Add ((int)-2146762487);  							break;    						default:  							// unknown error  							description = AlertDescription.CertificateUnknown;  							errors.Add ((int)verify.Status);  							break;  					}
Magic Number,Mono.Security.Protocol.Tls.Handshake.Server,TlsClientCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Server\TlsClientCertificate.cs,validateCertificates,The following statement contains a magic number: switch (verify.Status)  					{  						case X509ChainStatusFlags.InvalidBasicConstraints:  							// WinError.h TRUST_E_BASIC_CONSTRAINTS 0x80096019  							errors.Add ((int)-2146869223);  							break;    						case X509ChainStatusFlags.NotSignatureValid:  							// WinError.h TRUST_E_BAD_DIGEST 0x80096010  							errors.Add ((int)-2146869232);  							break;    						case X509ChainStatusFlags.NotTimeNested:  							// WinError.h CERT_E_VALIDITYPERIODNESTING 0x800B0102  							errors.Add ((int)-2146762494);  							break;    						case X509ChainStatusFlags.NotTimeValid:  							// WinError.h CERT_E_EXPIRED 0x800B0101  							description = AlertDescription.CertificateExpired;  							errors.Add ((int)-2146762495);  							break;    						case X509ChainStatusFlags.PartialChain:  							// WinError.h CERT_E_CHAINING 0x800B010A  							description = AlertDescription.UnknownCA;  							errors.Add ((int)-2146762486);  							break;    						case X509ChainStatusFlags.UntrustedRoot:  							// WinError.h CERT_E_UNTRUSTEDROOT 0x800B0109  							description = AlertDescription.UnknownCA;  							errors.Add ((int)-2146762487);  							break;    						default:  							// unknown error  							description = AlertDescription.CertificateUnknown;  							errors.Add ((int)verify.Status);  							break;  					}
Magic Number,Mono.Security.Protocol.Tls.Handshake.Server,TlsClientCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Server\TlsClientCertificate.cs,validateCertificates,The following statement contains a magic number: switch (verify.Status)  					{  						case X509ChainStatusFlags.InvalidBasicConstraints:  							// WinError.h TRUST_E_BASIC_CONSTRAINTS 0x80096019  							errors.Add ((int)-2146869223);  							break;    						case X509ChainStatusFlags.NotSignatureValid:  							// WinError.h TRUST_E_BAD_DIGEST 0x80096010  							errors.Add ((int)-2146869232);  							break;    						case X509ChainStatusFlags.NotTimeNested:  							// WinError.h CERT_E_VALIDITYPERIODNESTING 0x800B0102  							errors.Add ((int)-2146762494);  							break;    						case X509ChainStatusFlags.NotTimeValid:  							// WinError.h CERT_E_EXPIRED 0x800B0101  							description = AlertDescription.CertificateExpired;  							errors.Add ((int)-2146762495);  							break;    						case X509ChainStatusFlags.PartialChain:  							// WinError.h CERT_E_CHAINING 0x800B010A  							description = AlertDescription.UnknownCA;  							errors.Add ((int)-2146762486);  							break;    						case X509ChainStatusFlags.UntrustedRoot:  							// WinError.h CERT_E_UNTRUSTEDROOT 0x800B0109  							description = AlertDescription.UnknownCA;  							errors.Add ((int)-2146762487);  							break;    						default:  							// unknown error  							description = AlertDescription.CertificateUnknown;  							errors.Add ((int)verify.Status);  							break;  					}
Magic Number,Mono.Security.Protocol.Tls.Handshake.Server,TlsClientCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Server\TlsClientCertificate.cs,validateCertificates,The following statement contains a magic number: switch (verify.Status)  					{  						case X509ChainStatusFlags.InvalidBasicConstraints:  							// WinError.h TRUST_E_BASIC_CONSTRAINTS 0x80096019  							errors.Add ((int)-2146869223);  							break;    						case X509ChainStatusFlags.NotSignatureValid:  							// WinError.h TRUST_E_BAD_DIGEST 0x80096010  							errors.Add ((int)-2146869232);  							break;    						case X509ChainStatusFlags.NotTimeNested:  							// WinError.h CERT_E_VALIDITYPERIODNESTING 0x800B0102  							errors.Add ((int)-2146762494);  							break;    						case X509ChainStatusFlags.NotTimeValid:  							// WinError.h CERT_E_EXPIRED 0x800B0101  							description = AlertDescription.CertificateExpired;  							errors.Add ((int)-2146762495);  							break;    						case X509ChainStatusFlags.PartialChain:  							// WinError.h CERT_E_CHAINING 0x800B010A  							description = AlertDescription.UnknownCA;  							errors.Add ((int)-2146762486);  							break;    						case X509ChainStatusFlags.UntrustedRoot:  							// WinError.h CERT_E_UNTRUSTEDROOT 0x800B0109  							description = AlertDescription.UnknownCA;  							errors.Add ((int)-2146762487);  							break;    						default:  							// unknown error  							description = AlertDescription.CertificateUnknown;  							errors.Add ((int)verify.Status);  							break;  					}
Magic Number,Mono.Security.Protocol.Tls.Handshake.Server,TlsClientFinished,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Server\TlsClientFinished.cs,ProcessAsTls1,The following statement contains a magic number: byte[] serverPRF = this.Context.Current.Cipher.PRF(  				this.Context.MasterSecret' "client finished"' digest' 12);
Magic Number,Mono.Security.Protocol.Tls.Handshake.Server,TlsClientHello,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Server\TlsClientHello.cs,ProcessAsTls1,The following statement contains a magic number: this.random = this.ReadBytes(32);
Magic Number,Mono.Security.Protocol.Tls.Handshake.Server,TlsClientHello,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Server\TlsClientHello.cs,ProcessAsTls1,The following statement contains a magic number: this.cipherSuites = new short[this.ReadInt16()/2];
Magic Number,Mono.Security.Protocol.Tls.Handshake.Server,TlsServerFinished,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Server\TlsServerFinished.cs,ProcessAsTls1,The following statement contains a magic number: this.Write(this.Context.Current.Cipher.PRF(  				this.Context.MasterSecret' "server finished"' digest' 12));
Magic Number,Mono.Security.Protocol.Tls.Handshake.Server,TlsServerHello,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Server\TlsServerHello.cs,ProcessAsTls1,The following statement contains a magic number: random = this.Context.GetSecureRandomBytes(28);
Magic Number,Mono.Security.Protocol.Tls.Handshake,HandshakeMessage,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake\HandshakeMessage.cs,EncodeMessage,The following statement contains a magic number: cache = new byte[4 + len];
Magic Number,Mono.Security.Protocol.Tls.Handshake,HandshakeMessage,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake\HandshakeMessage.cs,EncodeMessage,The following statement contains a magic number: cache[1] = (byte) (len >> 16);
Magic Number,Mono.Security.Protocol.Tls.Handshake,HandshakeMessage,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake\HandshakeMessage.cs,EncodeMessage,The following statement contains a magic number: cache[2] = (byte) (len >> 8);
Magic Number,Mono.Security.Protocol.Tls.Handshake,HandshakeMessage,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake\HandshakeMessage.cs,EncodeMessage,The following statement contains a magic number: cache[2] = (byte) (len >> 8);
Magic Number,Mono.Security.Protocol.Tls.Handshake,HandshakeMessage,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake\HandshakeMessage.cs,EncodeMessage,The following statement contains a magic number: cache[3] = (byte) len;
Magic Number,Mono.Security.Protocol.Tls.Handshake,HandshakeMessage,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake\HandshakeMessage.cs,EncodeMessage,The following statement contains a magic number: Buffer.BlockCopy (hs' 0' cache' 4' len);
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,Write,The following statement contains a magic number: offset > array.Length - 2
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,Write,The following statement contains a magic number: array [offset    ] = (byte) (value >> 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,Write,The following statement contains a magic number: offset > array.Length - 8
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,Write,The following statement contains a magic number: array [offset    ] = (byte) (value >> 56);
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,Write,The following statement contains a magic number: array [offset + 1] = (byte) (value >> 48);
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,Write,The following statement contains a magic number: array [offset + 2] = (byte) (value >> 40);
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,Write,The following statement contains a magic number: array [offset + 2] = (byte) (value >> 40);
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,Write,The following statement contains a magic number: array [offset + 3] = (byte) (value >> 32);
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,Write,The following statement contains a magic number: array [offset + 3] = (byte) (value >> 32);
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,Write,The following statement contains a magic number: array [offset + 4] = (byte) (value >> 24);
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,Write,The following statement contains a magic number: array [offset + 4] = (byte) (value >> 24);
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,Write,The following statement contains a magic number: array [offset + 5] = (byte) (value >> 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,Write,The following statement contains a magic number: array [offset + 5] = (byte) (value >> 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,Write,The following statement contains a magic number: array [offset + 6] = (byte) (value >> 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,Write,The following statement contains a magic number: array [offset + 6] = (byte) (value >> 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,Write,The following statement contains a magic number: array [offset + 7] = (byte) value;
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,CreatePremasterSecret,The following statement contains a magic number: byte[] preMasterSecret = this.context.GetSecureRandomBytes (48);
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,CreatePremasterSecret,The following statement contains a magic number: preMasterSecret [0] = (byte)(context.ClientHelloProtocol >> 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,Expand,The following statement contains a magic number: int hashLength	= hash.HashSize / 8;
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,createEncryptionCipher,The following statement contains a magic number: this.encryptionAlgorithm.KeySize	= this.expandedKeyMaterialSize * 8;
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,createEncryptionCipher,The following statement contains a magic number: this.encryptionAlgorithm.BlockSize	= this.blockSize * 8;
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,createDecryptionCipher,The following statement contains a magic number: this.decryptionAlgorithm.KeySize	= this.expandedKeyMaterialSize * 8;
Magic Number,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,createDecryptionCipher,The following statement contains a magic number: this.decryptionAlgorithm.BlockSize	= this.blockSize * 8;
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x35' "TLS_RSA_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 32' 32' 256' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x35' "TLS_RSA_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 32' 32' 256' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x35' "TLS_RSA_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 32' 32' 256' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x35' "TLS_RSA_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 32' 32' 256' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x35' "TLS_RSA_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 32' 32' 256' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x2F' "TLS_RSA_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 16' 16' 128' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x2F' "TLS_RSA_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 16' 16' 128' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x2F' "TLS_RSA_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 16' 16' 128' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x2F' "TLS_RSA_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 16' 16' 128' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x2F' "TLS_RSA_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 16' 16' 128' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x0A' "TLS_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 24' 24' 168' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x0A' "TLS_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 24' 24' 168' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x0A' "TLS_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 24' 24' 168' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x0A' "TLS_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 24' 24' 168' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x0A' "TLS_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 24' 24' 168' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x05' "TLS_RSA_WITH_RC4_128_SHA"' CipherAlgorithmType.Rc4' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' false' 16' 16' 128' 0' 0);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x05' "TLS_RSA_WITH_RC4_128_SHA"' CipherAlgorithmType.Rc4' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' false' 16' 16' 128' 0' 0);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x05' "TLS_RSA_WITH_RC4_128_SHA"' CipherAlgorithmType.Rc4' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' false' 16' 16' 128' 0' 0);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x04' "TLS_RSA_WITH_RC4_128_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' false' false' 16' 16' 128' 0' 0);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x04' "TLS_RSA_WITH_RC4_128_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' false' false' 16' 16' 128' 0' 0);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x04' "TLS_RSA_WITH_RC4_128_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' false' false' 16' 16' 128' 0' 0);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x09' "TLS_RSA_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 8' 8' 56' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x09' "TLS_RSA_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 8' 8' 56' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x09' "TLS_RSA_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 8' 8' 56' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x09' "TLS_RSA_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 8' 8' 56' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetTls1SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x09' "TLS_RSA_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 8' 8' 56' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x35' "SSL_RSA_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 32' 32' 256' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x35' "SSL_RSA_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 32' 32' 256' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x35' "SSL_RSA_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 32' 32' 256' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x35' "SSL_RSA_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 32' 32' 256' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x35' "SSL_RSA_WITH_AES_256_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 32' 32' 256' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x2F' "SSL_RSA_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 16' 16' 128' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x2F' "SSL_RSA_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 16' 16' 128' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x2F' "SSL_RSA_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 16' 16' 128' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x2F' "SSL_RSA_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 16' 16' 128' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x2F' "SSL_RSA_WITH_AES_128_CBC_SHA"' CipherAlgorithmType.Rijndael' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 16' 16' 128' 16' 16);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x0A' "SSL_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 24' 24' 168' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x0A' "SSL_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 24' 24' 168' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x0A' "SSL_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 24' 24' 168' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x0A' "SSL_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 24' 24' 168' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x0A' "SSL_RSA_WITH_3DES_EDE_CBC_SHA"' CipherAlgorithmType.TripleDes' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 24' 24' 168' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x05' "SSL_RSA_WITH_RC4_128_SHA"' CipherAlgorithmType.Rc4' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' false' 16' 16' 128' 0' 0);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x05' "SSL_RSA_WITH_RC4_128_SHA"' CipherAlgorithmType.Rc4' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' false' 16' 16' 128' 0' 0);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x05' "SSL_RSA_WITH_RC4_128_SHA"' CipherAlgorithmType.Rc4' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' false' 16' 16' 128' 0' 0);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x04' "SSL_RSA_WITH_RC4_128_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' false' false' 16' 16' 128' 0' 0);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x04' "SSL_RSA_WITH_RC4_128_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' false' false' 16' 16' 128' 0' 0);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x04' "SSL_RSA_WITH_RC4_128_MD5"' CipherAlgorithmType.Rc4' HashAlgorithmType.Md5' ExchangeAlgorithmType.RsaKeyX' false' false' 16' 16' 128' 0' 0);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x09' "SSL_RSA_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 8' 8' 56' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x09' "SSL_RSA_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 8' 8' 56' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x09' "SSL_RSA_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 8' 8' 56' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x09' "SSL_RSA_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 8' 8' 56' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,CipherSuiteFactory,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteFactory.cs,GetSsl3SupportedCiphers,The following statement contains a magic number: scs.Add((0x00 << 0x08) | 0x09' "SSL_RSA_WITH_DES_CBC_SHA"' CipherAlgorithmType.Des' HashAlgorithmType.Sha1' ExchangeAlgorithmType.RsaKeyX' false' true' 8' 8' 56' 8' 8);
Magic Number,Mono.Security.Protocol.Tls,DebugHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\DebugHelper.cs,WriteBuffer,The following statement contains a magic number: int count = (length - i) >= 16 ? 16 : (length - i);
Magic Number,Mono.Security.Protocol.Tls,DebugHelper,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\DebugHelper.cs,WriteBuffer,The following statement contains a magic number: int count = (length - i) >= 16 ? 16 : (length - i);
Magic Number,Mono.Security.Protocol.Tls,RecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\RecordProtocol.cs,InternalReceiveRecordCallback,The following statement contains a magic number: contentType == ContentType.Alert && buffer.Length == 2
Magic Number,Mono.Security.Protocol.Tls,RecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\RecordProtocol.cs,ReceiveRecord,The following statement contains a magic number: contentType == ContentType.Alert && buffer.Length == 2
Magic Number,Mono.Security.Protocol.Tls,RecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\RecordProtocol.cs,ReadRecordBuffer,The following statement contains a magic number: byte[] header = new byte[4];
Magic Number,Mono.Security.Protocol.Tls,RecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\RecordProtocol.cs,ReadRecordBuffer,The following statement contains a magic number: record.Read (header' 0' 4) != 4
Magic Number,Mono.Security.Protocol.Tls,RecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\RecordProtocol.cs,ReadRecordBuffer,The following statement contains a magic number: record.Read (header' 0' 4) != 4
Magic Number,Mono.Security.Protocol.Tls,RecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\RecordProtocol.cs,ReadRecordBuffer,The following statement contains a magic number: short protocol = (short)((header [0] << 8) | header [1]);
Magic Number,Mono.Security.Protocol.Tls,RecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\RecordProtocol.cs,ReadRecordBuffer,The following statement contains a magic number: short length = (short)((header [2] << 8) | header [3]);
Magic Number,Mono.Security.Protocol.Tls,RecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\RecordProtocol.cs,ReadRecordBuffer,The following statement contains a magic number: short length = (short)((header [2] << 8) | header [3]);
Magic Number,Mono.Security.Protocol.Tls,RecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\RecordProtocol.cs,ReadRecordBuffer,The following statement contains a magic number: short length = (short)((header [2] << 8) | header [3]);
Magic Number,Mono.Security.Protocol.Tls,RecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\RecordProtocol.cs,ReadRecordBuffer,The following statement contains a magic number: record.CanSeek && (length + 5 > record.Length)
Magic Number,Mono.Security.Protocol.Tls,RecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\RecordProtocol.cs,SendAlert,The following statement contains a magic number: this.SendRecord (ContentType.Alert' new byte[2] { (byte) level' (byte) description });
Magic Number,Mono.Security.Protocol.Tls,SslCipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslCipherSuite.cs,SslCipherSuite,The following statement contains a magic number: int padLength = (hashAlgorithmType == HashAlgorithmType.Md5) ? 48 : 40;
Magic Number,Mono.Security.Protocol.Tls,SslCipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslCipherSuite.cs,SslCipherSuite,The following statement contains a magic number: int padLength = (hashAlgorithmType == HashAlgorithmType.Md5) ? 48 : 40;
Magic Number,Mono.Security.Protocol.Tls,SslCipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslCipherSuite.cs,ComputeServerRecordMAC,The following statement contains a magic number: header [8] = (byte) contentType;
Magic Number,Mono.Security.Protocol.Tls,SslCipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslCipherSuite.cs,ComputeServerRecordMAC,The following statement contains a magic number: Write (header' 9' (short)fragment.Length);
Magic Number,Mono.Security.Protocol.Tls,SslCipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslCipherSuite.cs,ComputeClientRecordMAC,The following statement contains a magic number: header [8] = (byte) contentType;
Magic Number,Mono.Security.Protocol.Tls,SslCipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslCipherSuite.cs,ComputeClientRecordMAC,The following statement contains a magic number: Write (header' 9' (short)fragment.Length);
Magic Number,Mono.Security.Protocol.Tls,SslHandshakeHash,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslHandshakeHash.cs,HashFinal,The following statement contains a magic number: byte[] result = new byte[36];
Magic Number,Mono.Security.Protocol.Tls,SslHandshakeHash,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslHandshakeHash.cs,HashFinal,The following statement contains a magic number: Buffer.BlockCopy(this.md5.Hash' 0' result' 0' 16);
Magic Number,Mono.Security.Protocol.Tls,SslHandshakeHash,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslHandshakeHash.cs,HashFinal,The following statement contains a magic number: Buffer.BlockCopy(this.sha.Hash' 0' result' 16' 20);
Magic Number,Mono.Security.Protocol.Tls,SslHandshakeHash,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslHandshakeHash.cs,HashFinal,The following statement contains a magic number: Buffer.BlockCopy(this.sha.Hash' 0' result' 16' 20);
Magic Number,Mono.Security.Protocol.Tls,SslHandshakeHash,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslHandshakeHash.cs,initializePad,The following statement contains a magic number: this.innerPadMD5 = new byte[48];
Magic Number,Mono.Security.Protocol.Tls,SslHandshakeHash,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslHandshakeHash.cs,initializePad,The following statement contains a magic number: this.outerPadMD5 = new byte[48];
Magic Number,Mono.Security.Protocol.Tls,SslHandshakeHash,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslHandshakeHash.cs,initializePad,The following statement contains a magic number: i < 48
Magic Number,Mono.Security.Protocol.Tls,SslHandshakeHash,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslHandshakeHash.cs,initializePad,The following statement contains a magic number: this.innerPadSHA = new byte[40];
Magic Number,Mono.Security.Protocol.Tls,SslHandshakeHash,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslHandshakeHash.cs,initializePad,The following statement contains a magic number: this.outerPadSHA = new byte[40];
Magic Number,Mono.Security.Protocol.Tls,SslHandshakeHash,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslHandshakeHash.cs,initializePad,The following statement contains a magic number: i < 40
Magic Number,Mono.Security.Protocol.Tls,SslStreamBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,InternalReadCallback_inner,The following statement contains a magic number: recordStream.Length >= 5
Magic Number,Mono.Security.Protocol.Tls,SslStreamBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,InternalReadCallback_inner,The following statement contains a magic number: recordStream.Length >= 5
Magic Number,Mono.Security.Protocol.Tls,SslStreamBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,Read,The following statement contains a magic number: byte[] recbuf = new byte[16384];
Magic Number,Mono.Security.Protocol.Tls,SslStreamBase,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslStreamBase.cs,Read,The following statement contains a magic number: recordStream.Length >= 5
Magic Number,Mono.Security.Protocol.Tls,TlsCipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsCipherSuite.cs,ComputeServerRecordMAC,The following statement contains a magic number: header [8] = (byte)contentType;
Magic Number,Mono.Security.Protocol.Tls,TlsCipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsCipherSuite.cs,ComputeServerRecordMAC,The following statement contains a magic number: Write (header' 9' this.Context.Protocol);
Magic Number,Mono.Security.Protocol.Tls,TlsCipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsCipherSuite.cs,ComputeServerRecordMAC,The following statement contains a magic number: Write (header' 11' (short)fragment.Length);
Magic Number,Mono.Security.Protocol.Tls,TlsCipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsCipherSuite.cs,ComputeClientRecordMAC,The following statement contains a magic number: header [8] = (byte)contentType;
Magic Number,Mono.Security.Protocol.Tls,TlsCipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsCipherSuite.cs,ComputeClientRecordMAC,The following statement contains a magic number: Write (header' 9' this.Context.Protocol);
Magic Number,Mono.Security.Protocol.Tls,TlsCipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsCipherSuite.cs,ComputeClientRecordMAC,The following statement contains a magic number: Write (header' 11' (short)fragment.Length);
Magic Number,Mono.Security.Protocol.Tls,TlsCipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsCipherSuite.cs,ComputeMasterSecret,The following statement contains a magic number: this.Context.MasterSecret = this.PRF(  				preMasterSecret' "master secret"' this.Context.RandomCS' 48);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,ReadInt16,The following statement contains a magic number: byte[] result = ReadSmallValue (2);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,ReadInt16,The following statement contains a magic number: return (short) (result[0] << 8 | result[1]);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,ReadInt24,The following statement contains a magic number: byte[] result = ReadSmallValue (3);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,ReadInt24,The following statement contains a magic number: return ((result[0] << 16) | (result[1] << 8) | result[2]);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,ReadInt24,The following statement contains a magic number: return ((result[0] << 16) | (result[1] << 8) | result[2]);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,ReadInt24,The following statement contains a magic number: return ((result[0] << 16) | (result[1] << 8) | result[2]);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,ReadInt32,The following statement contains a magic number: byte[] result = ReadSmallValue (4);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,ReadInt32,The following statement contains a magic number: return ((result[0] << 24) | (result[1] << 16) | (result[2] << 8) | result[3]);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,ReadInt32,The following statement contains a magic number: return ((result[0] << 24) | (result[1] << 16) | (result[2] << 8) | result[3]);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,ReadInt32,The following statement contains a magic number: return ((result[0] << 24) | (result[1] << 16) | (result[2] << 8) | result[3]);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,ReadInt32,The following statement contains a magic number: return ((result[0] << 24) | (result[1] << 16) | (result[2] << 8) | result[3]);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,ReadInt32,The following statement contains a magic number: return ((result[0] << 24) | (result[1] << 16) | (result[2] << 8) | result[3]);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,Write,The following statement contains a magic number: temp[0] = ((byte)(value >> 8));
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,Write,The following statement contains a magic number: this.Write (temp' 0' 2);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,WriteInt24,The following statement contains a magic number: temp[0] = ((byte)(value >> 16));
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,WriteInt24,The following statement contains a magic number: temp[1] = ((byte)(value >> 8));
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,WriteInt24,The following statement contains a magic number: temp[2] = ((byte)value);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,WriteInt24,The following statement contains a magic number: this.Write (temp' 0' 3);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,Write,The following statement contains a magic number: temp[0] = ((byte)(value >> 24));
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,Write,The following statement contains a magic number: temp[1] = ((byte)(value >> 16));
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,Write,The following statement contains a magic number: temp[2] = ((byte)(value >> 8));
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,Write,The following statement contains a magic number: temp[2] = ((byte)(value >> 8));
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,Write,The following statement contains a magic number: temp[3] = ((byte)value);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,Write,The following statement contains a magic number: this.Write (temp' 0' 4);
Magic Number,Mono.Security.Protocol.Tls,TlsStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\TlsStream.cs,Write,The following statement contains a magic number: Write ((int)(value >> 32));
Magic Number,Mono.Security.X509.Extensions,AuthorityKeyIdentifierExtension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\AuthorityKeyIdentifierExtension.cs,ToString,The following statement contains a magic number: x % 2 == 1
Magic Number,Mono.Security.X509.Extensions,GeneralNames,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\GeneralNames.cs,GeneralNames,The following statement contains a magic number: switch (sequence[i].Tag) {  				case 0x81: // rfc822Name			[1]	IA5String  					if (rfc822Name == null)  						rfc822Name = new ArrayList ();  					rfc822Name.Add (Encoding.ASCII.GetString (sequence[i].Value));  					break;  				case 0x82: // dNSName				[2]     IA5String  					if (dnsName == null)  						dnsName = new ArrayList ();  					dnsName.Add (Encoding.ASCII.GetString (sequence[i].Value));  					break;  				case 0x84: // directoryName			[4]     Name  				case 0xA4:  					if (directoryNames == null)  						directoryNames = new ArrayList ();  					directoryNames.Add (X501.ToString (sequence[i][0]));  					break;  				case 0x86:  // uniformResourceIdentifier	[6]     IA5String  					if (uris == null)  						uris = new ArrayList ();  					uris.Add (Encoding.ASCII.GetString (sequence[i].Value));  					break;  				case 0x87: // iPAddress				[7]     OCTET STRING  					if (ipAddr == null)  						ipAddr = new ArrayList ();  					byte[] bytes = sequence[i].Value;  					string space = (bytes.Length == 4) ? "." : ":";  					StringBuilder sb = new StringBuilder();  					for (int j = 0; j < bytes.Length; j++) {  						sb.Append (bytes[j].ToString ());  						if (j < bytes.Length - 1)  							sb.Append (space);   					}  					ipAddr.Add (sb.ToString());  					if (ipAddr == null)  						ipAddr = new ArrayList ();  					break;  				default:  					break;  				}
Magic Number,Mono.Security.X509.Extensions,KeyAttributesExtension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\KeyAttributesExtension.cs,Decode,The following statement contains a magic number: kubits = (kubits << 8) + item.Value [i++];
Magic Number,Mono.Security.X509.Extensions,KeyAttributesExtension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\KeyAttributesExtension.cs,ToString,The following statement contains a magic number: x % 2 == 1
Magic Number,Mono.Security.X509.Extensions,KeyUsageExtension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\KeyUsageExtension.cs,Decode,The following statement contains a magic number: kubits = (kubits << 8) + bitString.Value [i++];
Magic Number,Mono.Security.X509.Extensions,KeyUsageExtension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\KeyUsageExtension.cs,Encode,The following statement contains a magic number: byte unused = 16;
Magic Number,Mono.Security.X509.Extensions,KeyUsageExtension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\KeyUsageExtension.cs,Encode,The following statement contains a magic number: unused -= 8;
Magic Number,Mono.Security.X509.Extensions,KeyUsageExtension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\KeyUsageExtension.cs,Encode,The following statement contains a magic number: extnValue.Add (new ASN1 (0x03' new byte[] { unused' (byte) kubits' (byte) (kubits >> 8) }));
Magic Number,Mono.Security.X509.Extensions,NetscapeCertTypeExtension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\NetscapeCertTypeExtension.cs,Decode,The following statement contains a magic number: ctbits = (ctbits << 8) + bitString.Value [i++];
Magic Number,Mono.Security.X509.Extensions,SubjectKeyIdentifierExtension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\SubjectKeyIdentifierExtension.cs,ToString,The following statement contains a magic number: x % 2 == 1
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,Decode,The following statement contains a magic number: ASN1 macData = pfx [2];
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,Decode,The following statement contains a magic number: ASN1 iters = macData [2];
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,Decode,The following statement contains a magic number: macData.Count > 2
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,Decode,The following statement contains a magic number: pfx.Count > 2
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetSymmetricAlgorithm,The following statement contains a magic number: int keyLength = 8;
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetSymmetricAlgorithm,The following statement contains a magic number: int ivLength = 8;
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetSymmetricAlgorithm,The following statement contains a magic number: switch (algorithmOid) {  				case PKCS5.pbeWithMD2AndDESCBC:			// no unit test available  					pd.HashName = "MD2";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD5AndDESCBC:			// no unit test available  					pd.HashName = "MD5";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD2AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD2";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithMD5AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD5";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithSHA1AndDESCBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithSHA1AndRC2CBC:		// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS12.pbeWithSHAAnd128BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 16;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd40BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 5;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd3KeyTripleDESCBC:   					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 24;  					break;  				case PKCS12.pbeWithSHAAnd2KeyTripleDESCBC:	// no unit test available  					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd128BitRC2CBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd40BitRC2CBC:   					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 5;  					break;  				default:  					throw new NotSupportedException ("unknown oid " + algorithm);  			}
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetSymmetricAlgorithm,The following statement contains a magic number: switch (algorithmOid) {  				case PKCS5.pbeWithMD2AndDESCBC:			// no unit test available  					pd.HashName = "MD2";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD5AndDESCBC:			// no unit test available  					pd.HashName = "MD5";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD2AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD2";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithMD5AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD5";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithSHA1AndDESCBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithSHA1AndRC2CBC:		// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS12.pbeWithSHAAnd128BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 16;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd40BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 5;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd3KeyTripleDESCBC:   					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 24;  					break;  				case PKCS12.pbeWithSHAAnd2KeyTripleDESCBC:	// no unit test available  					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd128BitRC2CBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd40BitRC2CBC:   					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 5;  					break;  				default:  					throw new NotSupportedException ("unknown oid " + algorithm);  			}
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetSymmetricAlgorithm,The following statement contains a magic number: switch (algorithmOid) {  				case PKCS5.pbeWithMD2AndDESCBC:			// no unit test available  					pd.HashName = "MD2";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD5AndDESCBC:			// no unit test available  					pd.HashName = "MD5";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD2AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD2";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithMD5AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD5";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithSHA1AndDESCBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithSHA1AndRC2CBC:		// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS12.pbeWithSHAAnd128BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 16;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd40BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 5;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd3KeyTripleDESCBC:   					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 24;  					break;  				case PKCS12.pbeWithSHAAnd2KeyTripleDESCBC:	// no unit test available  					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd128BitRC2CBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd40BitRC2CBC:   					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 5;  					break;  				default:  					throw new NotSupportedException ("unknown oid " + algorithm);  			}
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetSymmetricAlgorithm,The following statement contains a magic number: switch (algorithmOid) {  				case PKCS5.pbeWithMD2AndDESCBC:			// no unit test available  					pd.HashName = "MD2";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD5AndDESCBC:			// no unit test available  					pd.HashName = "MD5";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD2AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD2";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithMD5AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD5";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithSHA1AndDESCBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithSHA1AndRC2CBC:		// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS12.pbeWithSHAAnd128BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 16;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd40BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 5;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd3KeyTripleDESCBC:   					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 24;  					break;  				case PKCS12.pbeWithSHAAnd2KeyTripleDESCBC:	// no unit test available  					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd128BitRC2CBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd40BitRC2CBC:   					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 5;  					break;  				default:  					throw new NotSupportedException ("unknown oid " + algorithm);  			}
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetSymmetricAlgorithm,The following statement contains a magic number: switch (algorithmOid) {  				case PKCS5.pbeWithMD2AndDESCBC:			// no unit test available  					pd.HashName = "MD2";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD5AndDESCBC:			// no unit test available  					pd.HashName = "MD5";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD2AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD2";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithMD5AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD5";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithSHA1AndDESCBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithSHA1AndRC2CBC:		// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS12.pbeWithSHAAnd128BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 16;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd40BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 5;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd3KeyTripleDESCBC:   					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 24;  					break;  				case PKCS12.pbeWithSHAAnd2KeyTripleDESCBC:	// no unit test available  					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd128BitRC2CBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd40BitRC2CBC:   					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 5;  					break;  				default:  					throw new NotSupportedException ("unknown oid " + algorithm);  			}
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetSymmetricAlgorithm,The following statement contains a magic number: switch (algorithmOid) {  				case PKCS5.pbeWithMD2AndDESCBC:			// no unit test available  					pd.HashName = "MD2";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD5AndDESCBC:			// no unit test available  					pd.HashName = "MD5";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD2AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD2";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithMD5AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD5";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithSHA1AndDESCBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithSHA1AndRC2CBC:		// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS12.pbeWithSHAAnd128BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 16;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd40BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 5;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd3KeyTripleDESCBC:   					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 24;  					break;  				case PKCS12.pbeWithSHAAnd2KeyTripleDESCBC:	// no unit test available  					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd128BitRC2CBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd40BitRC2CBC:   					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 5;  					break;  				default:  					throw new NotSupportedException ("unknown oid " + algorithm);  			}
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetSymmetricAlgorithm,The following statement contains a magic number: switch (algorithmOid) {  				case PKCS5.pbeWithMD2AndDESCBC:			// no unit test available  					pd.HashName = "MD2";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD5AndDESCBC:			// no unit test available  					pd.HashName = "MD5";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD2AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD2";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithMD5AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD5";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithSHA1AndDESCBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithSHA1AndRC2CBC:		// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS12.pbeWithSHAAnd128BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 16;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd40BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 5;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd3KeyTripleDESCBC:   					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 24;  					break;  				case PKCS12.pbeWithSHAAnd2KeyTripleDESCBC:	// no unit test available  					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd128BitRC2CBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd40BitRC2CBC:   					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 5;  					break;  				default:  					throw new NotSupportedException ("unknown oid " + algorithm);  			}
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetSymmetricAlgorithm,The following statement contains a magic number: switch (algorithmOid) {  				case PKCS5.pbeWithMD2AndDESCBC:			// no unit test available  					pd.HashName = "MD2";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD5AndDESCBC:			// no unit test available  					pd.HashName = "MD5";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD2AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD2";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithMD5AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD5";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithSHA1AndDESCBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithSHA1AndRC2CBC:		// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS12.pbeWithSHAAnd128BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 16;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd40BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 5;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd3KeyTripleDESCBC:   					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 24;  					break;  				case PKCS12.pbeWithSHAAnd2KeyTripleDESCBC:	// no unit test available  					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd128BitRC2CBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd40BitRC2CBC:   					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 5;  					break;  				default:  					throw new NotSupportedException ("unknown oid " + algorithm);  			}
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetSymmetricAlgorithm,The following statement contains a magic number: switch (algorithmOid) {  				case PKCS5.pbeWithMD2AndDESCBC:			// no unit test available  					pd.HashName = "MD2";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD5AndDESCBC:			// no unit test available  					pd.HashName = "MD5";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithMD2AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD2";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithMD5AndRC2CBC:			// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "MD5";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS5.pbeWithSHA1AndDESCBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "DES";  					break;  				case PKCS5.pbeWithSHA1AndRC2CBC:		// no unit test available  					// TODO - RC2-CBC-Parameter (PKCS5)  					// if missing default to 32 bits !!!  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 4;		// default  					break;  				case PKCS12.pbeWithSHAAnd128BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 16;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd40BitRC4: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC4";  					keyLength = 5;  					ivLength = 0;		// N/A  					break;  				case PKCS12.pbeWithSHAAnd3KeyTripleDESCBC:   					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 24;  					break;  				case PKCS12.pbeWithSHAAnd2KeyTripleDESCBC:	// no unit test available  					pd.HashName = "SHA1";  					algorithm = "TripleDES";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd128BitRC2CBC: 		// no unit test available  					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 16;  					break;  				case PKCS12.pbeWithSHAAnd40BitRC2CBC:   					pd.HashName = "SHA1";  					algorithm = "RC2";  					keyLength = 5;  					break;  				default:  					throw new NotSupportedException ("unknown oid " + algorithm);  			}
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,ReadSafeBag,The following statement contains a magic number: ASN1 bagAttributes = safeBag [2];
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,ReadSafeBag,The following statement contains a magic number: safeBag.Count > 2
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,MAC,The following statement contains a magic number: hmac.Key = pd.DeriveMAC (20);
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetBytes,The following statement contains a magic number: byte[] salt = new byte [20];
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,EncryptedContentInfo,The following statement contains a magic number: byte[] salt = new byte [8];
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,RemoveCertificate,The following statement contains a magic number: ASN1 bagAttributes = safeBag [2];
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,RemoveCertificate,The following statement contains a magic number: safeBag.Count == 3
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetAsymmetricAlgorithm,The following statement contains a magic number: ASN1 bagAttributes = safeBag [2];
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetAsymmetricAlgorithm,The following statement contains a magic number: safeBag.Count == 3
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetSecret,The following statement contains a magic number: ASN1 bagAttributes = safeBag [2];
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetSecret,The following statement contains a magic number: safeBag.Count == 3
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetCertificate,The following statement contains a magic number: ASN1 bagAttributes = safeBag [2];
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetCertificate,The following statement contains a magic number: safeBag.Count == 3
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetAttributes,The following statement contains a magic number: ASN1 bagAttributes = safeBag [2];
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetAttributes,The following statement contains a magic number: safeBag.Count == 3
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetAttributes,The following statement contains a magic number: ASN1 bagAttributes = safeBag [2];
Magic Number,Mono.Security.X509,PKCS12,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,GetAttributes,The following statement contains a magic number: safeBag.Count == 3
Magic Number,Mono.Security.X509,DeriveBytes,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,Adjust,The following statement contains a magic number: x >>= 8;
Magic Number,Mono.Security.X509,DeriveBytes,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,Adjust,The following statement contains a magic number: x >>= 8;
Magic Number,Mono.Security.X509,DeriveBytes,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,Derive,The following statement contains a magic number: int u = (digest.HashSize >> 3);
Magic Number,Mono.Security.X509,DeriveBytes,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\PKCS12.cs,Derive,The following statement contains a magic number: int v = 64;
Magic Number,Mono.Security.X509,X501,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X501Name.cs,GetAttributeFromOid,The following statement contains a magic number: switch (s) {  				case "C":  					return new X520.CountryName ();  				case "O":  					return new X520.OrganizationName ();  				case "OU":  					return new X520.OrganizationalUnitName ();  				case "CN":  					return new X520.CommonName ();  				case "L":  					return new X520.LocalityName ();  				case "S":	// Microsoft  				case "ST":	// RFC2253  					return new X520.StateOrProvinceName ();  				case "E":	// NOTE: Not part of RFC2253  					return new X520.EmailAddress ();  				case "DC":	// RFC2247  					return new X520.DomainComponent ();  				case "UID":	// RFC1274  					return new X520.UserId ();  				case "DNQUALIFIER":  					return new X520.DnQualifier ();  				case "T":  					return new X520.Title ();  				case "SN":  					return new X520.Surname ();  				case "G":  					return new X520.GivenName ();  				case "I":  					return new X520.Initial ();  				default:  					if (s.StartsWith ("OID.")) {  						// MUST support it but it OID may be without it  						return new X520.Oid (s.Substring (4));  					} else {  						if (IsOid (s))  							return new X520.Oid (s);  						else  							return null;  					}  			}
Magic Number,Mono.Security.X509,X501,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X501Name.cs,ReadHex,The following statement contains a magic number: pos += 2;
Magic Number,Mono.Security.X509,X501,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X501Name.cs,ReadHex,The following statement contains a magic number: (pos < value.Length - 4) && (value[pos+1] == '\\') && IsHex (value[pos+2])
Magic Number,Mono.Security.X509,X501,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X501Name.cs,ReadHex,The following statement contains a magic number: (pos < value.Length - 4) && (value[pos+1] == '\\') && IsHex (value[pos+2])
Magic Number,Mono.Security.X509,X501,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X501Name.cs,ReadEscaped,The following statement contains a magic number: switch (value[pos]) {  			case '\\':  			case '"':  			case '=':  			case ';':  			case '<':  			case '>':  			case '+':  			case '#':  			case ''':  				sb.Append (value[pos]);  				return pos;  			default:  				if (pos >= value.Length - 2) {  					string msg = ("Malformed escaped value '{0}'.");  					throw new FormatException (string.Format (msg' value.Substring (pos)));  				}  				// it's either a 8 bits or 16 bits char  				sb.Append (ReadHex (value' ref pos));  				return pos;  			}
Magic Number,Mono.Security.X509,X509Builder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Builder.cs,Sign,The following statement contains a magic number: byte[] r = new byte [20];
Magic Number,Mono.Security.X509,X509Builder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Builder.cs,Sign,The following statement contains a magic number: Buffer.BlockCopy (rs' 0' r' 0' 20);
Magic Number,Mono.Security.X509,X509Builder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Builder.cs,Sign,The following statement contains a magic number: byte[] s = new byte [20];
Magic Number,Mono.Security.X509,X509Builder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Builder.cs,Sign,The following statement contains a magic number: Buffer.BlockCopy (rs' 20' s' 0' 20);
Magic Number,Mono.Security.X509,X509Builder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Builder.cs,Sign,The following statement contains a magic number: Buffer.BlockCopy (rs' 20' s' 0' 20);
Magic Number,Mono.Security.X509,X509Certificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Certificate.cs,Parse,The following statement contains a magic number: byte[] bitstring = decoder [2].Value;
Magic Number,Mono.Security.X509,X509CertificateBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509CertificateBuilder.cs,X509CertificateBuilder,The following statement contains a magic number: version > 3
Magic Number,Mono.Security.X509,X509CertificateBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509CertificateBuilder.cs,ToBeSigned,The following statement contains a magic number: (version > 2) &&  (extensions.Count > 0)
Magic Number,Mono.Security.X509,X509Chain,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Chain.cs,IsParent,The following statement contains a magic number: (parent.Version > 2) && (!IsTrusted (parent))
Magic Number,Mono.Security.X509,X509Crl,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509CRL.cs,Parse,The following statement contains a magic number: (encodedCRL.Tag != 0x30) || (encodedCRL.Count != 3)
Magic Number,Mono.Security.X509,X509Crl,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509CRL.cs,Parse,The following statement contains a magic number: (toBeSigned.Tag != 0x30) || (toBeSigned.Count < 3)
Magic Number,Mono.Security.X509,X509Crl,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509CRL.cs,Parse,The following statement contains a magic number: byte[] bitstring = encodedCRL [2].Value;
Magic Number,Mono.Security.X509,X509Crl,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509CRL.cs,VerifySignature,The following statement contains a magic number: x509.Version >= 3
Magic Number,Mono.Security.X509,X509Crl,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509CRL.cs,VerifySignature,The following statement contains a magic number: (sign == null) || (sign.Count != 2)
Magic Number,Mono.Security.X509,X509Crl,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509CRL.cs,VerifySignature,The following statement contains a magic number: byte[] sig = new byte [40];
Magic Number,Mono.Security.X509,X509Crl,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509CRL.cs,VerifySignature,The following statement contains a magic number: int s1 = System.Math.Max (0' part1.Length - 20);
Magic Number,Mono.Security.X509,X509Crl,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509CRL.cs,VerifySignature,The following statement contains a magic number: int e1 = System.Math.Max (0' 20 - part1.Length);
Magic Number,Mono.Security.X509,X509Crl,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509CRL.cs,VerifySignature,The following statement contains a magic number: int s2 = System.Math.Max (0' part2.Length - 20);
Magic Number,Mono.Security.X509,X509Crl,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509CRL.cs,VerifySignature,The following statement contains a magic number: int e2 = System.Math.Max (20' 40 - part2.Length);
Magic Number,Mono.Security.X509,X509Crl,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509CRL.cs,VerifySignature,The following statement contains a magic number: int e2 = System.Math.Max (20' 40 - part2.Length);
Magic Number,Mono.Security.X509,X509CrlEntry,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509CRL.cs,X509CrlEntry,The following statement contains a magic number: extensions = new X509ExtensionCollection (entry [2]);
Magic Number,Mono.Security.X509,X509Extension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Extension.cs,X509Extension,The following statement contains a magic number: (asn1.Tag != 0x30) || (asn1.Count < 2)
Magic Number,Mono.Security.X509,X509Extension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Extension.cs,WriteLine,The following statement contains a magic number: j < 8
Magic Number,Mono.Security.X509,X509Extension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Extension.cs,ToString,The following statement contains a magic number: int div = (extnValue.Length >> 3);
Magic Number,Mono.Security.X509,X509Extension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Extension.cs,ToString,The following statement contains a magic number: int rem = (extnValue.Length - (div << 3));
Magic Number,Mono.Security.X509,X509Extension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Extension.cs,ToString,The following statement contains a magic number: WriteLine (sb' 8' x);
Magic Number,Mono.Security.X509,X509Extension,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X509Extension.cs,ToString,The following statement contains a magic number: x += 8;
Magic Number,Mono.Security.X509,AttributeTypeAndValue,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X520Attributes.cs,SelectBestEncoding,The following statement contains a magic number: switch (c) {  					case '@':  					case '_':  						return 0x1E; // BMPSTRING  					default:  						if (c > 127)  							return 0x1E; // BMPSTRING  						break;  					}
Magic Number,Mono.Security,ASN1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1.cs,ASN1,The following statement contains a magic number: nLength *= 256;
Magic Number,Mono.Security,ASN1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1.cs,ASN1,The following statement contains a magic number: nLength += data [i + 2];
Magic Number,Mono.Security,ASN1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1.cs,ASN1,The following statement contains a magic number: Buffer.BlockCopy (data' (2 + nLenLength)' m_aValue' 0' nLength);
Magic Number,Mono.Security,ASN1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1.cs,ASN1,The following statement contains a magic number: int nStart = (2 + nLenLength);
Magic Number,Mono.Security,ASN1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1.cs,GetBytes,The following statement contains a magic number: der = new byte [3 + nLength];
Magic Number,Mono.Security,ASN1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1.cs,GetBytes,The following statement contains a magic number: Buffer.BlockCopy (val' 0' der' 3' nLength);
Magic Number,Mono.Security,ASN1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1.cs,GetBytes,The following statement contains a magic number: der[2] = (byte)(nLength);
Magic Number,Mono.Security,ASN1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1.cs,GetBytes,The following statement contains a magic number: nLength > 127
Magic Number,Mono.Security,ASN1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1.cs,DecodeTLV,The following statement contains a magic number: length = length * 256 + asn1 [pos++];
Magic Number,Mono.Security,ASN1,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1.cs,ToString,The following statement contains a magic number: (i+1) % 16 == 0
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,FromDateTime,The following statement contains a magic number: dt.Year < 2050
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,FromInt32,The following statement contains a magic number: switch (x) {  			case 0:  				asn1.Value = integer;  				break;  			case 4:  				asn1.Value = new byte [1];  				break;  			default:  				byte[] smallerInt = new byte [4 - x];  				Buffer.BlockCopy (integer' x' smallerInt' 0' smallerInt.Length);  				asn1.Value = smallerInt;  				break;  			}
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,FromInt32,The following statement contains a magic number: switch (x) {  			case 0:  				asn1.Value = integer;  				break;  			case 4:  				asn1.Value = new byte [1];  				break;  			default:  				byte[] smallerInt = new byte [4 - x];  				Buffer.BlockCopy (integer' x' smallerInt' 0' smallerInt.Length);  				asn1.Value = smallerInt;  				break;  			}
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToInt32,The following statement contains a magic number: x = (x << 8) + asn1.Value [i];
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToOid,The following statement contains a magic number: byte x = (byte) (aOID[0] / 40);
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToOid,The following statement contains a magic number: byte y = (byte) (aOID[0] % 40);
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToOid,The following statement contains a magic number: y += (byte) ((x - 2) * 40);
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToOid,The following statement contains a magic number: y += (byte) ((x - 2) * 40);
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToOid,The following statement contains a magic number: x = 2;
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToOid,The following statement contains a magic number: x > 2
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToOid,The following statement contains a magic number: val = ((val << 7) | ((byte) (aOID [x] & 0x7F)));
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToDateTime,The following statement contains a magic number: switch (t.Length) {  				case 11:  					// illegal format' still it's supported for compatibility  					mask = "yyMMddHHmmZ";  					break;  				case 13:   					// RFC3280: 4.1.2.5.1  UTCTime  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					// Where YY is greater than or equal to 50' the   					// year SHALL be interpreted as 19YY; and   					// Where YY is less than 50' the year SHALL be   					// interpreted as 20YY.  					if (year >= 50)  						t = "19" + t;  					else  						t = "20" + t;  					mask = "yyyyMMddHHmmssZ";  					break;  				case 15:  					mask = "yyyyMMddHHmmssZ"; // GeneralizedTime  					break;  				case 17:  					// another illegal format (990630000000+1000)' again supported for compatibility  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					string century = (year >= 50) ? "19" : "20";  					// ASN.1 (see ITU X.680 section 43.3) deals with offset differently than .NET  					char sign = (t[12] == '+') ? '-' : '+';  					t = String.Format ("{0}{1}{2}{3}{4}:{5}{6}"' century' t.Substring (0' 12)' sign'   						t[13]' t[14]' t[15]' t[16]);  					mask = "yyyyMMddHHmmsszzz";  					break;  			}
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToDateTime,The following statement contains a magic number: switch (t.Length) {  				case 11:  					// illegal format' still it's supported for compatibility  					mask = "yyMMddHHmmZ";  					break;  				case 13:   					// RFC3280: 4.1.2.5.1  UTCTime  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					// Where YY is greater than or equal to 50' the   					// year SHALL be interpreted as 19YY; and   					// Where YY is less than 50' the year SHALL be   					// interpreted as 20YY.  					if (year >= 50)  						t = "19" + t;  					else  						t = "20" + t;  					mask = "yyyyMMddHHmmssZ";  					break;  				case 15:  					mask = "yyyyMMddHHmmssZ"; // GeneralizedTime  					break;  				case 17:  					// another illegal format (990630000000+1000)' again supported for compatibility  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					string century = (year >= 50) ? "19" : "20";  					// ASN.1 (see ITU X.680 section 43.3) deals with offset differently than .NET  					char sign = (t[12] == '+') ? '-' : '+';  					t = String.Format ("{0}{1}{2}{3}{4}:{5}{6}"' century' t.Substring (0' 12)' sign'   						t[13]' t[14]' t[15]' t[16]);  					mask = "yyyyMMddHHmmsszzz";  					break;  			}
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToDateTime,The following statement contains a magic number: switch (t.Length) {  				case 11:  					// illegal format' still it's supported for compatibility  					mask = "yyMMddHHmmZ";  					break;  				case 13:   					// RFC3280: 4.1.2.5.1  UTCTime  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					// Where YY is greater than or equal to 50' the   					// year SHALL be interpreted as 19YY; and   					// Where YY is less than 50' the year SHALL be   					// interpreted as 20YY.  					if (year >= 50)  						t = "19" + t;  					else  						t = "20" + t;  					mask = "yyyyMMddHHmmssZ";  					break;  				case 15:  					mask = "yyyyMMddHHmmssZ"; // GeneralizedTime  					break;  				case 17:  					// another illegal format (990630000000+1000)' again supported for compatibility  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					string century = (year >= 50) ? "19" : "20";  					// ASN.1 (see ITU X.680 section 43.3) deals with offset differently than .NET  					char sign = (t[12] == '+') ? '-' : '+';  					t = String.Format ("{0}{1}{2}{3}{4}:{5}{6}"' century' t.Substring (0' 12)' sign'   						t[13]' t[14]' t[15]' t[16]);  					mask = "yyyyMMddHHmmsszzz";  					break;  			}
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToDateTime,The following statement contains a magic number: switch (t.Length) {  				case 11:  					// illegal format' still it's supported for compatibility  					mask = "yyMMddHHmmZ";  					break;  				case 13:   					// RFC3280: 4.1.2.5.1  UTCTime  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					// Where YY is greater than or equal to 50' the   					// year SHALL be interpreted as 19YY; and   					// Where YY is less than 50' the year SHALL be   					// interpreted as 20YY.  					if (year >= 50)  						t = "19" + t;  					else  						t = "20" + t;  					mask = "yyyyMMddHHmmssZ";  					break;  				case 15:  					mask = "yyyyMMddHHmmssZ"; // GeneralizedTime  					break;  				case 17:  					// another illegal format (990630000000+1000)' again supported for compatibility  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					string century = (year >= 50) ? "19" : "20";  					// ASN.1 (see ITU X.680 section 43.3) deals with offset differently than .NET  					char sign = (t[12] == '+') ? '-' : '+';  					t = String.Format ("{0}{1}{2}{3}{4}:{5}{6}"' century' t.Substring (0' 12)' sign'   						t[13]' t[14]' t[15]' t[16]);  					mask = "yyyyMMddHHmmsszzz";  					break;  			}
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToDateTime,The following statement contains a magic number: switch (t.Length) {  				case 11:  					// illegal format' still it's supported for compatibility  					mask = "yyMMddHHmmZ";  					break;  				case 13:   					// RFC3280: 4.1.2.5.1  UTCTime  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					// Where YY is greater than or equal to 50' the   					// year SHALL be interpreted as 19YY; and   					// Where YY is less than 50' the year SHALL be   					// interpreted as 20YY.  					if (year >= 50)  						t = "19" + t;  					else  						t = "20" + t;  					mask = "yyyyMMddHHmmssZ";  					break;  				case 15:  					mask = "yyyyMMddHHmmssZ"; // GeneralizedTime  					break;  				case 17:  					// another illegal format (990630000000+1000)' again supported for compatibility  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					string century = (year >= 50) ? "19" : "20";  					// ASN.1 (see ITU X.680 section 43.3) deals with offset differently than .NET  					char sign = (t[12] == '+') ? '-' : '+';  					t = String.Format ("{0}{1}{2}{3}{4}:{5}{6}"' century' t.Substring (0' 12)' sign'   						t[13]' t[14]' t[15]' t[16]);  					mask = "yyyyMMddHHmmsszzz";  					break;  			}
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToDateTime,The following statement contains a magic number: switch (t.Length) {  				case 11:  					// illegal format' still it's supported for compatibility  					mask = "yyMMddHHmmZ";  					break;  				case 13:   					// RFC3280: 4.1.2.5.1  UTCTime  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					// Where YY is greater than or equal to 50' the   					// year SHALL be interpreted as 19YY; and   					// Where YY is less than 50' the year SHALL be   					// interpreted as 20YY.  					if (year >= 50)  						t = "19" + t;  					else  						t = "20" + t;  					mask = "yyyyMMddHHmmssZ";  					break;  				case 15:  					mask = "yyyyMMddHHmmssZ"; // GeneralizedTime  					break;  				case 17:  					// another illegal format (990630000000+1000)' again supported for compatibility  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					string century = (year >= 50) ? "19" : "20";  					// ASN.1 (see ITU X.680 section 43.3) deals with offset differently than .NET  					char sign = (t[12] == '+') ? '-' : '+';  					t = String.Format ("{0}{1}{2}{3}{4}:{5}{6}"' century' t.Substring (0' 12)' sign'   						t[13]' t[14]' t[15]' t[16]);  					mask = "yyyyMMddHHmmsszzz";  					break;  			}
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToDateTime,The following statement contains a magic number: switch (t.Length) {  				case 11:  					// illegal format' still it's supported for compatibility  					mask = "yyMMddHHmmZ";  					break;  				case 13:   					// RFC3280: 4.1.2.5.1  UTCTime  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					// Where YY is greater than or equal to 50' the   					// year SHALL be interpreted as 19YY; and   					// Where YY is less than 50' the year SHALL be   					// interpreted as 20YY.  					if (year >= 50)  						t = "19" + t;  					else  						t = "20" + t;  					mask = "yyyyMMddHHmmssZ";  					break;  				case 15:  					mask = "yyyyMMddHHmmssZ"; // GeneralizedTime  					break;  				case 17:  					// another illegal format (990630000000+1000)' again supported for compatibility  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					string century = (year >= 50) ? "19" : "20";  					// ASN.1 (see ITU X.680 section 43.3) deals with offset differently than .NET  					char sign = (t[12] == '+') ? '-' : '+';  					t = String.Format ("{0}{1}{2}{3}{4}:{5}{6}"' century' t.Substring (0' 12)' sign'   						t[13]' t[14]' t[15]' t[16]);  					mask = "yyyyMMddHHmmsszzz";  					break;  			}
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToDateTime,The following statement contains a magic number: switch (t.Length) {  				case 11:  					// illegal format' still it's supported for compatibility  					mask = "yyMMddHHmmZ";  					break;  				case 13:   					// RFC3280: 4.1.2.5.1  UTCTime  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					// Where YY is greater than or equal to 50' the   					// year SHALL be interpreted as 19YY; and   					// Where YY is less than 50' the year SHALL be   					// interpreted as 20YY.  					if (year >= 50)  						t = "19" + t;  					else  						t = "20" + t;  					mask = "yyyyMMddHHmmssZ";  					break;  				case 15:  					mask = "yyyyMMddHHmmssZ"; // GeneralizedTime  					break;  				case 17:  					// another illegal format (990630000000+1000)' again supported for compatibility  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					string century = (year >= 50) ? "19" : "20";  					// ASN.1 (see ITU X.680 section 43.3) deals with offset differently than .NET  					char sign = (t[12] == '+') ? '-' : '+';  					t = String.Format ("{0}{1}{2}{3}{4}:{5}{6}"' century' t.Substring (0' 12)' sign'   						t[13]' t[14]' t[15]' t[16]);  					mask = "yyyyMMddHHmmsszzz";  					break;  			}
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToDateTime,The following statement contains a magic number: switch (t.Length) {  				case 11:  					// illegal format' still it's supported for compatibility  					mask = "yyMMddHHmmZ";  					break;  				case 13:   					// RFC3280: 4.1.2.5.1  UTCTime  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					// Where YY is greater than or equal to 50' the   					// year SHALL be interpreted as 19YY; and   					// Where YY is less than 50' the year SHALL be   					// interpreted as 20YY.  					if (year >= 50)  						t = "19" + t;  					else  						t = "20" + t;  					mask = "yyyyMMddHHmmssZ";  					break;  				case 15:  					mask = "yyyyMMddHHmmssZ"; // GeneralizedTime  					break;  				case 17:  					// another illegal format (990630000000+1000)' again supported for compatibility  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					string century = (year >= 50) ? "19" : "20";  					// ASN.1 (see ITU X.680 section 43.3) deals with offset differently than .NET  					char sign = (t[12] == '+') ? '-' : '+';  					t = String.Format ("{0}{1}{2}{3}{4}:{5}{6}"' century' t.Substring (0' 12)' sign'   						t[13]' t[14]' t[15]' t[16]);  					mask = "yyyyMMddHHmmsszzz";  					break;  			}
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToDateTime,The following statement contains a magic number: switch (t.Length) {  				case 11:  					// illegal format' still it's supported for compatibility  					mask = "yyMMddHHmmZ";  					break;  				case 13:   					// RFC3280: 4.1.2.5.1  UTCTime  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					// Where YY is greater than or equal to 50' the   					// year SHALL be interpreted as 19YY; and   					// Where YY is less than 50' the year SHALL be   					// interpreted as 20YY.  					if (year >= 50)  						t = "19" + t;  					else  						t = "20" + t;  					mask = "yyyyMMddHHmmssZ";  					break;  				case 15:  					mask = "yyyyMMddHHmmssZ"; // GeneralizedTime  					break;  				case 17:  					// another illegal format (990630000000+1000)' again supported for compatibility  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					string century = (year >= 50) ? "19" : "20";  					// ASN.1 (see ITU X.680 section 43.3) deals with offset differently than .NET  					char sign = (t[12] == '+') ? '-' : '+';  					t = String.Format ("{0}{1}{2}{3}{4}:{5}{6}"' century' t.Substring (0' 12)' sign'   						t[13]' t[14]' t[15]' t[16]);  					mask = "yyyyMMddHHmmsszzz";  					break;  			}
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToDateTime,The following statement contains a magic number: switch (t.Length) {  				case 11:  					// illegal format' still it's supported for compatibility  					mask = "yyMMddHHmmZ";  					break;  				case 13:   					// RFC3280: 4.1.2.5.1  UTCTime  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					// Where YY is greater than or equal to 50' the   					// year SHALL be interpreted as 19YY; and   					// Where YY is less than 50' the year SHALL be   					// interpreted as 20YY.  					if (year >= 50)  						t = "19" + t;  					else  						t = "20" + t;  					mask = "yyyyMMddHHmmssZ";  					break;  				case 15:  					mask = "yyyyMMddHHmmssZ"; // GeneralizedTime  					break;  				case 17:  					// another illegal format (990630000000+1000)' again supported for compatibility  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					string century = (year >= 50) ? "19" : "20";  					// ASN.1 (see ITU X.680 section 43.3) deals with offset differently than .NET  					char sign = (t[12] == '+') ? '-' : '+';  					t = String.Format ("{0}{1}{2}{3}{4}:{5}{6}"' century' t.Substring (0' 12)' sign'   						t[13]' t[14]' t[15]' t[16]);  					mask = "yyyyMMddHHmmsszzz";  					break;  			}
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToDateTime,The following statement contains a magic number: switch (t.Length) {  				case 11:  					// illegal format' still it's supported for compatibility  					mask = "yyMMddHHmmZ";  					break;  				case 13:   					// RFC3280: 4.1.2.5.1  UTCTime  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					// Where YY is greater than or equal to 50' the   					// year SHALL be interpreted as 19YY; and   					// Where YY is less than 50' the year SHALL be   					// interpreted as 20YY.  					if (year >= 50)  						t = "19" + t;  					else  						t = "20" + t;  					mask = "yyyyMMddHHmmssZ";  					break;  				case 15:  					mask = "yyyyMMddHHmmssZ"; // GeneralizedTime  					break;  				case 17:  					// another illegal format (990630000000+1000)' again supported for compatibility  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					string century = (year >= 50) ? "19" : "20";  					// ASN.1 (see ITU X.680 section 43.3) deals with offset differently than .NET  					char sign = (t[12] == '+') ? '-' : '+';  					t = String.Format ("{0}{1}{2}{3}{4}:{5}{6}"' century' t.Substring (0' 12)' sign'   						t[13]' t[14]' t[15]' t[16]);  					mask = "yyyyMMddHHmmsszzz";  					break;  			}
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToDateTime,The following statement contains a magic number: switch (t.Length) {  				case 11:  					// illegal format' still it's supported for compatibility  					mask = "yyMMddHHmmZ";  					break;  				case 13:   					// RFC3280: 4.1.2.5.1  UTCTime  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					// Where YY is greater than or equal to 50' the   					// year SHALL be interpreted as 19YY; and   					// Where YY is less than 50' the year SHALL be   					// interpreted as 20YY.  					if (year >= 50)  						t = "19" + t;  					else  						t = "20" + t;  					mask = "yyyyMMddHHmmssZ";  					break;  				case 15:  					mask = "yyyyMMddHHmmssZ"; // GeneralizedTime  					break;  				case 17:  					// another illegal format (990630000000+1000)' again supported for compatibility  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					string century = (year >= 50) ? "19" : "20";  					// ASN.1 (see ITU X.680 section 43.3) deals with offset differently than .NET  					char sign = (t[12] == '+') ? '-' : '+';  					t = String.Format ("{0}{1}{2}{3}{4}:{5}{6}"' century' t.Substring (0' 12)' sign'   						t[13]' t[14]' t[15]' t[16]);  					mask = "yyyyMMddHHmmsszzz";  					break;  			}
Magic Number,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToDateTime,The following statement contains a magic number: switch (t.Length) {  				case 11:  					// illegal format' still it's supported for compatibility  					mask = "yyMMddHHmmZ";  					break;  				case 13:   					// RFC3280: 4.1.2.5.1  UTCTime  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					// Where YY is greater than or equal to 50' the   					// year SHALL be interpreted as 19YY; and   					// Where YY is less than 50' the year SHALL be   					// interpreted as 20YY.  					if (year >= 50)  						t = "19" + t;  					else  						t = "20" + t;  					mask = "yyyyMMddHHmmssZ";  					break;  				case 15:  					mask = "yyyyMMddHHmmssZ"; // GeneralizedTime  					break;  				case 17:  					// another illegal format (990630000000+1000)' again supported for compatibility  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					string century = (year >= 50) ? "19" : "20";  					// ASN.1 (see ITU X.680 section 43.3) deals with offset differently than .NET  					char sign = (t[12] == '+') ? '-' : '+';  					t = String.Format ("{0}{1}{2}{3}{4}:{5}{6}"' century' t.Substring (0' 12)' sign'   						t[13]' t[14]' t[15]' t[16]);  					mask = "yyyyMMddHHmmsszzz";  					break;  			}
Magic Number,Mono.Security,BitConverterLE,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\BitConverterLE.cs,GetUIntBytes,The following statement contains a magic number: return new byte [] { bytes [0]' bytes [1]' bytes [2]' bytes [3] };
Magic Number,Mono.Security,BitConverterLE,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\BitConverterLE.cs,GetUIntBytes,The following statement contains a magic number: return new byte [] { bytes [0]' bytes [1]' bytes [2]' bytes [3] };
Magic Number,Mono.Security,BitConverterLE,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\BitConverterLE.cs,GetULongBytes,The following statement contains a magic number: return new byte [] { bytes [0]' bytes [1]' bytes [2]' bytes [3]'  						     bytes [4]' bytes [5]' bytes [6]' bytes [7] };
Magic Number,Mono.Security,BitConverterLE,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\BitConverterLE.cs,GetULongBytes,The following statement contains a magic number: return new byte [] { bytes [0]' bytes [1]' bytes [2]' bytes [3]'  						     bytes [4]' bytes [5]' bytes [6]' bytes [7] };
Magic Number,Mono.Security,BitConverterLE,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\BitConverterLE.cs,GetULongBytes,The following statement contains a magic number: return new byte [] { bytes [0]' bytes [1]' bytes [2]' bytes [3]'  						     bytes [4]' bytes [5]' bytes [6]' bytes [7] };
Magic Number,Mono.Security,BitConverterLE,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\BitConverterLE.cs,GetULongBytes,The following statement contains a magic number: return new byte [] { bytes [0]' bytes [1]' bytes [2]' bytes [3]'  						     bytes [4]' bytes [5]' bytes [6]' bytes [7] };
Magic Number,Mono.Security,BitConverterLE,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\BitConverterLE.cs,GetULongBytes,The following statement contains a magic number: return new byte [] { bytes [0]' bytes [1]' bytes [2]' bytes [3]'  						     bytes [4]' bytes [5]' bytes [6]' bytes [7] };
Magic Number,Mono.Security,BitConverterLE,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\BitConverterLE.cs,GetULongBytes,The following statement contains a magic number: return new byte [] { bytes [0]' bytes [1]' bytes [2]' bytes [3]'  						     bytes [4]' bytes [5]' bytes [6]' bytes [7] };
Magic Number,Mono.Security,BitConverterLE,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\BitConverterLE.cs,UIntFromBytes,The following statement contains a magic number: dst [2] = src [startIndex + 2];
Magic Number,Mono.Security,BitConverterLE,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\BitConverterLE.cs,UIntFromBytes,The following statement contains a magic number: dst [2] = src [startIndex + 2];
Magic Number,Mono.Security,BitConverterLE,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\BitConverterLE.cs,UIntFromBytes,The following statement contains a magic number: dst [3] = src [startIndex + 3];
Magic Number,Mono.Security,BitConverterLE,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\BitConverterLE.cs,UIntFromBytes,The following statement contains a magic number: dst [3] = src [startIndex + 3];
Magic Number,Mono.Security,BitConverterLE,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\BitConverterLE.cs,ULongFromBytes,The following statement contains a magic number: i < 8
Magic Number,Mono.Security,ContentInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,ContentInfo,The following statement contains a magic number: (asn1.Tag != 0x30) || ((asn1.Count < 1) && (asn1.Count > 2))
Magic Number,Mono.Security,EncryptedData,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,EncryptedData,The following statement contains a magic number: (asn1.Tag != 0x30) || (asn1.Count < 2)
Magic Number,Mono.Security,EncryptedData,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,EncryptedData,The following statement contains a magic number: ASN1 encryptedContent = encryptedContentInfo [2];
Magic Number,Mono.Security,EnvelopedData,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,EnvelopedData,The following statement contains a magic number: (asn1[0].Tag != 0x30) || (asn1[0].Count < 3)
Magic Number,Mono.Security,EnvelopedData,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,EnvelopedData,The following statement contains a magic number: ASN1 encryptedContentInfo = asn1[0][2];
Magic Number,Mono.Security,EnvelopedData,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,EnvelopedData,The following statement contains a magic number: ASN1 encryptedContent = encryptedContentInfo [2];
Magic Number,Mono.Security,RecipientInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,RecipientInfo,The following statement contains a magic number: (subjectIdentifierType.Tag == 0x80) && (_version == 3)
Magic Number,Mono.Security,RecipientInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,RecipientInfo,The following statement contains a magic number: ASN1 keyEncryptionAlgorithm = data [2];
Magic Number,Mono.Security,RecipientInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,RecipientInfo,The following statement contains a magic number: ASN1 encryptedKey = data [3];
Magic Number,Mono.Security,SignedData,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,SignedData,The following statement contains a magic number: (asn1[0].Tag != 0x30) || (asn1[0].Count < 4)
Magic Number,Mono.Security,SignedData,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,SignedData,The following statement contains a magic number: contentInfo = new ContentInfo (asn1[0][2]);
Magic Number,Mono.Security,SignedData,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,SignedData,The following statement contains a magic number: int n = 3;
Magic Number,Mono.Security,SignerInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,SignerInfo,The following statement contains a magic number: (asn1[0].Tag != 0x30) || (asn1[0].Count < 5)
Magic Number,Mono.Security,SignerInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,SignerInfo,The following statement contains a magic number: (subjectIdentifierType.Tag == 0x80) && (version == 3)
Magic Number,Mono.Security,SignerInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,SignerInfo,The following statement contains a magic number: ASN1 digestAlgorithm = asn1 [0][2];
Magic Number,Mono.Security,SignerInfo,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\PKCS7.cs,SignerInfo,The following statement contains a magic number: int n = 3;
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongName,The following statement contains a magic number: sum == 4
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongName,The following statement contains a magic number: data.Length == 16
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,RVAtoPosition,The following statement contains a magic number: UInt32 p = BitConverterLE.ToUInt32 (headers' i * 40 + 20);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,RVAtoPosition,The following statement contains a magic number: UInt32 p = BitConverterLE.ToUInt32 (headers' i * 40 + 20);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,RVAtoPosition,The following statement contains a magic number: UInt32 s = BitConverterLE.ToUInt32 (headers' i * 40 + 12);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,RVAtoPosition,The following statement contains a magic number: UInt32 s = BitConverterLE.ToUInt32 (headers' i * 40 + 12);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,RVAtoPosition,The following statement contains a magic number: int l = (int) BitConverterLE.ToUInt32 (headers' i * 40 + 8);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,RVAtoPosition,The following statement contains a magic number: int l = (int) BitConverterLE.ToUInt32 (headers' i * 40 + 8);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: byte[] mz = new byte [128];
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: stream.Read (mz' 0' 128);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: UInt32 peHeader = BitConverterLE.ToUInt32 (mz' 60);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: cs.Write (mz' 0' 128);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: byte[] mzextra = new byte [peHeader - 128];
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: peHeader != 128
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: byte[] pe = new byte [248];
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: stream.Read (pe' 0' 248);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: BitConverterLE.ToUInt16 (pe' 4) != 0x14c
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: byte[] v = new byte [8];
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: Buffer.BlockCopy (v' 0' pe' 88' 4);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: Buffer.BlockCopy (v' 0' pe' 88' 4);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: Buffer.BlockCopy (v' 0' pe' 152' 8);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: Buffer.BlockCopy (v' 0' pe' 152' 8);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: cs.Write (pe' 0' 248);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: UInt16 numSection = BitConverterLE.ToUInt16 (pe' 6);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: int sectionLength = (numSection * 40);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: UInt32 cliHeaderRVA = BitConverterLE.ToUInt32 (pe' 232);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: int cliHeaderSiz = (int) BitConverterLE.ToUInt32 (pe' 236);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: UInt32 strongNameSignatureRVA = BitConverterLE.ToUInt32 (cli' 32);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: info.SignatureLength = BitConverterLE.ToUInt32 (cli' 36);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: UInt32 metadataRVA = BitConverterLE.ToUInt32 (cli' 8);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: info.MetadataLength = BitConverterLE.ToUInt32 (cli' 12);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: UInt32 start = BitConverterLE.ToUInt32 (sectionHeaders' i * 40 + 20);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: UInt32 start = BitConverterLE.ToUInt32 (sectionHeaders' i * 40 + 20);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: int length = (int) BitConverterLE.ToUInt32 (sectionHeaders' i * 40 + 16);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,StrongHash,The following statement contains a magic number: int length = (int) BitConverterLE.ToUInt32 (sectionHeaders' i * 40 + 16);
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,IsAssemblyStrongnamed,The following statement contains a magic number: (publicKey == null) || (publicKey.Length < 12)
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,IsAssemblyStrongnamed,The following statement contains a magic number: (publicKey == null) || (publicKey.Length < 12)
Magic Number,Mono.Security,StrongName,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\StrongName.cs,IsAssemblyStrongnamed,The following statement contains a magic number: RSA rsa = CryptoConvert.FromCapiPublicKeyBlob (publicKey' 12);
Magic Number,Mono.Security,StrongNameManager,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\StrongNameManager.cs,LoadMapping,The following statement contains a magic number: (token == null) || (token.Length != 16)
Magic Number,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,MiniParser,The following statement contains a magic number: twoCharBuff = new int[2];
Magic Number,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,Xlat,The following statement contains a magic number: charCode == (code >> 12)
Magic Number,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,Parse,The following statement contains a magic number: actionCode >>= 8;
Magic Number,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,Parse,The following statement contains a magic number: switch (actionCode) {  				case (int)ActionCode.START_ELEM:  					handler.OnStartElement(elementName' attrList);  					if (currCh != '/') {  						tagStack.Push(elementName);  					} else {  						handler.OnEndElement(elementName);  					}  					attrList.Clear();  					break;    				case (int)ActionCode.END_ELEM:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					string endName = null;  					if (tagStack.Count == 0 ||  						elementName != (endName = tagStack.Pop() as string)) {  						if (endName == null) {  							FatalErr("Tag stack underflow");  						} else {  							FatalErr(String.Format("Expected end tag '{0}' but found '{1}'"' elementName' endName));  						}  					}  					handler.OnEndElement(elementName);  					break;    				case (int)ActionCode.END_NAME:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					if (currCh != '/' && currCh != '>') break;  					goto case (int)ActionCode.START_ELEM;    				case (int)ActionCode.SET_ATTR_NAME:  					lastAttrName = sbChars.ToString();  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.SET_ATTR_VAL:  					if (lastAttrName == null) FatalErr("Internal error.");  					attrList.Add(lastAttrName' sbChars.ToString());  					sbChars = new StringBuilder();  					lastAttrName = null;  					break;    				case (int)ActionCode.SEND_CHARS:  					handler.OnChars(sbChars.ToString());  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.START_CDATA:  					string cdata = "CDATA[";  					isComment = false;  					isDTD = false;    					if (currCh == '-') {  						currCh = reader.Read();    						if (currCh != '-') FatalErr("Invalid comment");    						this.col++;  						isComment = true;  						twoCharBuff[0] = -1;  						twoCharBuff[1] = -1;  					} else {  						if (currCh != '[') {  							isDTD = true;  							bracketSwitch = 0;  							break;  						}    						for (int i = 0; i < cdata.Length; i++) {  							if (reader.Read() != cdata[i]) {  								this.col += i+1;  								break;  							}  						}  						this.col += cdata.Length;  						seenCData = true;  					}  					break;    				case (int)ActionCode.END_CDATA:  					int n = 0;  					currCh = ']';    					while (currCh == ']') {  						currCh = reader.Read();  						n++;  					}    					if (currCh != '>') {  						for (int i = 0; i < n; i++) sbChars.Append(']');  						sbChars.Append((char)currCh);  						stateCode = 0x12;  					} else {  						for (int i = 0; i < n-2; i++) sbChars.Append(']');  						seenCData = false;  					}    					this.col += n;  					break;    				case (int)ActionCode.ERROR:  					FatalErr(String.Format("Error {0}"' stateCode));  					break;    				case (int)ActionCode.STATE_CHANGE:  					break;    				case (int)ActionCode.FLUSH_CHARS_STATE_CHANGE:  					sbChars = new StringBuilder();  					if (currCh != '<') goto case (int)ActionCode.ACC_CHARS_STATE_CHANGE;  					break;    				case (int)ActionCode.ACC_CHARS_STATE_CHANGE:  					sbChars.Append((char)currCh);  					break;    				case (int)ActionCode.ACC_CDATA:  					if (isComment) {  						if (currCh == '>'  							&& twoCharBuff[0] == '-'  							&& twoCharBuff[1] == '-') {  							isComment = false;  							stateCode = 0;  						} else {  							twoCharBuff[0] = twoCharBuff[1];  							twoCharBuff[1] = currCh;  						}  					} else if (isDTD) {  						if (currCh == '<' || currCh == '>') bracketSwitch ^= 1;  						if (currCh == '>' && bracketSwitch != 0) {  							isDTD = false;  							stateCode = 0;  						}  					} else {  						if (this.splitCData  							&& sbChars.Length > 0  							&& seenCData) {  							handler.OnChars(sbChars.ToString());  							sbChars = new StringBuilder();  						}  						seenCData = false;  						sbChars.Append((char)currCh);  					}  					break;    				case (int)ActionCode.PROC_CHAR_REF:  					currCh = reader.Read();  					int cl = this.col + 1;  					if (currCh == '#') {    // character reference  						int r = 10;  						int chCode = 0;  						int nDigits = 0;  						currCh = reader.Read();  						cl++;    						if (currCh == 'x') {  							currCh = reader.Read();  							cl++;  							r=16;  						}    						NumberStyles style = r == 16 ? NumberStyles.HexNumber : NumberStyles.Integer;    						while (true) {  							int x = -1;  							if (Char.IsNumber((char)currCh) || "abcdef".IndexOf(Char.ToLower((char)currCh)) != -1) {  								try {  									x = Int32.Parse(new string((char)currCh' 1)' style);  								} catch (FormatException) {x = -1;}  							}  							if (x == -1) break;  							chCode *= r;  							chCode += x;  							nDigits++;  							currCh = reader.Read();  							cl++;  						}    						if (currCh == ';' && nDigits > 0) {  							sbChars.Append((char)chCode);  						} else {  							FatalErr("Bad char ref");  						}  					} else {  						// entity reference  						string entityRefChars = "aglmopqstu"; // amp | apos | quot | gt | lt  						string entities = "&'\"><";    						int pos = 0;  						int entIdx = 0xF;  						int predShift = 0;    						int sbLen = sbChars.Length;    						while (true) {  							if (pos != 0xF) pos = entityRefChars.IndexOf((char)currCh) & 0xF;  							if (pos == 0xF) FatalErr(errors[7]);  							sbChars.Append((char)currCh);    							int path = "\uFF35\u3F8F\u4F8F\u0F5F\uFF78\uE1F4\u2299\uEEFF\uEEFF\uFF4F"[pos];  							int lBr = (path >> 4) & 0xF;  							int rBr = path & 0xF;  							int lPred = path >> 12;  							int rPred = (path >> 8) & 0xF;  							currCh = reader.Read();  							cl++;  							pos = 0xF;  							if (lBr != 0xF && currCh == entityRefChars[lBr]) {  								if (lPred < 0xE) entIdx = lPred;  //								pred = lPred;  								predShift = 12; // left  							} else if (rBr != 0xF && currCh == entityRefChars[rBr]) {  								if (rPred < 0xE) entIdx = rPred;  //								pred = rPred;  								predShift = 8; // right  							} else if (currCh == ';') {  								if (entIdx != 0xF  									&& predShift != 0  									&& ((path >> predShift) & 0xF) == 0xE) break;  								continue; // pos == 0xF  							}    							pos=0;    						}    						int l = cl - this.col - 1;    						if ((l > 0 && l < 5)  							&&(StrEquals("amp"' sbChars' sbLen' l)  							|| StrEquals("apos"' sbChars' sbLen' l)  							|| StrEquals("quot"' sbChars' sbLen' l)  							|| StrEquals("lt"' sbChars' sbLen' l)  							|| StrEquals("gt"' sbChars' sbLen' l))  							) {  								sbChars.Length = sbLen;  								sbChars.Append(entities[entIdx]);  						} else FatalErr(errors[7]);  					}    					this.col = cl;  					break;    				default:  					FatalErr(String.Format("Unexpected action code - {0}."' actionCode));  					break;  			}
Magic Number,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,Parse,The following statement contains a magic number: switch (actionCode) {  				case (int)ActionCode.START_ELEM:  					handler.OnStartElement(elementName' attrList);  					if (currCh != '/') {  						tagStack.Push(elementName);  					} else {  						handler.OnEndElement(elementName);  					}  					attrList.Clear();  					break;    				case (int)ActionCode.END_ELEM:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					string endName = null;  					if (tagStack.Count == 0 ||  						elementName != (endName = tagStack.Pop() as string)) {  						if (endName == null) {  							FatalErr("Tag stack underflow");  						} else {  							FatalErr(String.Format("Expected end tag '{0}' but found '{1}'"' elementName' endName));  						}  					}  					handler.OnEndElement(elementName);  					break;    				case (int)ActionCode.END_NAME:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					if (currCh != '/' && currCh != '>') break;  					goto case (int)ActionCode.START_ELEM;    				case (int)ActionCode.SET_ATTR_NAME:  					lastAttrName = sbChars.ToString();  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.SET_ATTR_VAL:  					if (lastAttrName == null) FatalErr("Internal error.");  					attrList.Add(lastAttrName' sbChars.ToString());  					sbChars = new StringBuilder();  					lastAttrName = null;  					break;    				case (int)ActionCode.SEND_CHARS:  					handler.OnChars(sbChars.ToString());  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.START_CDATA:  					string cdata = "CDATA[";  					isComment = false;  					isDTD = false;    					if (currCh == '-') {  						currCh = reader.Read();    						if (currCh != '-') FatalErr("Invalid comment");    						this.col++;  						isComment = true;  						twoCharBuff[0] = -1;  						twoCharBuff[1] = -1;  					} else {  						if (currCh != '[') {  							isDTD = true;  							bracketSwitch = 0;  							break;  						}    						for (int i = 0; i < cdata.Length; i++) {  							if (reader.Read() != cdata[i]) {  								this.col += i+1;  								break;  							}  						}  						this.col += cdata.Length;  						seenCData = true;  					}  					break;    				case (int)ActionCode.END_CDATA:  					int n = 0;  					currCh = ']';    					while (currCh == ']') {  						currCh = reader.Read();  						n++;  					}    					if (currCh != '>') {  						for (int i = 0; i < n; i++) sbChars.Append(']');  						sbChars.Append((char)currCh);  						stateCode = 0x12;  					} else {  						for (int i = 0; i < n-2; i++) sbChars.Append(']');  						seenCData = false;  					}    					this.col += n;  					break;    				case (int)ActionCode.ERROR:  					FatalErr(String.Format("Error {0}"' stateCode));  					break;    				case (int)ActionCode.STATE_CHANGE:  					break;    				case (int)ActionCode.FLUSH_CHARS_STATE_CHANGE:  					sbChars = new StringBuilder();  					if (currCh != '<') goto case (int)ActionCode.ACC_CHARS_STATE_CHANGE;  					break;    				case (int)ActionCode.ACC_CHARS_STATE_CHANGE:  					sbChars.Append((char)currCh);  					break;    				case (int)ActionCode.ACC_CDATA:  					if (isComment) {  						if (currCh == '>'  							&& twoCharBuff[0] == '-'  							&& twoCharBuff[1] == '-') {  							isComment = false;  							stateCode = 0;  						} else {  							twoCharBuff[0] = twoCharBuff[1];  							twoCharBuff[1] = currCh;  						}  					} else if (isDTD) {  						if (currCh == '<' || currCh == '>') bracketSwitch ^= 1;  						if (currCh == '>' && bracketSwitch != 0) {  							isDTD = false;  							stateCode = 0;  						}  					} else {  						if (this.splitCData  							&& sbChars.Length > 0  							&& seenCData) {  							handler.OnChars(sbChars.ToString());  							sbChars = new StringBuilder();  						}  						seenCData = false;  						sbChars.Append((char)currCh);  					}  					break;    				case (int)ActionCode.PROC_CHAR_REF:  					currCh = reader.Read();  					int cl = this.col + 1;  					if (currCh == '#') {    // character reference  						int r = 10;  						int chCode = 0;  						int nDigits = 0;  						currCh = reader.Read();  						cl++;    						if (currCh == 'x') {  							currCh = reader.Read();  							cl++;  							r=16;  						}    						NumberStyles style = r == 16 ? NumberStyles.HexNumber : NumberStyles.Integer;    						while (true) {  							int x = -1;  							if (Char.IsNumber((char)currCh) || "abcdef".IndexOf(Char.ToLower((char)currCh)) != -1) {  								try {  									x = Int32.Parse(new string((char)currCh' 1)' style);  								} catch (FormatException) {x = -1;}  							}  							if (x == -1) break;  							chCode *= r;  							chCode += x;  							nDigits++;  							currCh = reader.Read();  							cl++;  						}    						if (currCh == ';' && nDigits > 0) {  							sbChars.Append((char)chCode);  						} else {  							FatalErr("Bad char ref");  						}  					} else {  						// entity reference  						string entityRefChars = "aglmopqstu"; // amp | apos | quot | gt | lt  						string entities = "&'\"><";    						int pos = 0;  						int entIdx = 0xF;  						int predShift = 0;    						int sbLen = sbChars.Length;    						while (true) {  							if (pos != 0xF) pos = entityRefChars.IndexOf((char)currCh) & 0xF;  							if (pos == 0xF) FatalErr(errors[7]);  							sbChars.Append((char)currCh);    							int path = "\uFF35\u3F8F\u4F8F\u0F5F\uFF78\uE1F4\u2299\uEEFF\uEEFF\uFF4F"[pos];  							int lBr = (path >> 4) & 0xF;  							int rBr = path & 0xF;  							int lPred = path >> 12;  							int rPred = (path >> 8) & 0xF;  							currCh = reader.Read();  							cl++;  							pos = 0xF;  							if (lBr != 0xF && currCh == entityRefChars[lBr]) {  								if (lPred < 0xE) entIdx = lPred;  //								pred = lPred;  								predShift = 12; // left  							} else if (rBr != 0xF && currCh == entityRefChars[rBr]) {  								if (rPred < 0xE) entIdx = rPred;  //								pred = rPred;  								predShift = 8; // right  							} else if (currCh == ';') {  								if (entIdx != 0xF  									&& predShift != 0  									&& ((path >> predShift) & 0xF) == 0xE) break;  								continue; // pos == 0xF  							}    							pos=0;    						}    						int l = cl - this.col - 1;    						if ((l > 0 && l < 5)  							&&(StrEquals("amp"' sbChars' sbLen' l)  							|| StrEquals("apos"' sbChars' sbLen' l)  							|| StrEquals("quot"' sbChars' sbLen' l)  							|| StrEquals("lt"' sbChars' sbLen' l)  							|| StrEquals("gt"' sbChars' sbLen' l))  							) {  								sbChars.Length = sbLen;  								sbChars.Append(entities[entIdx]);  						} else FatalErr(errors[7]);  					}    					this.col = cl;  					break;    				default:  					FatalErr(String.Format("Unexpected action code - {0}."' actionCode));  					break;  			}
Magic Number,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,Parse,The following statement contains a magic number: switch (actionCode) {  				case (int)ActionCode.START_ELEM:  					handler.OnStartElement(elementName' attrList);  					if (currCh != '/') {  						tagStack.Push(elementName);  					} else {  						handler.OnEndElement(elementName);  					}  					attrList.Clear();  					break;    				case (int)ActionCode.END_ELEM:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					string endName = null;  					if (tagStack.Count == 0 ||  						elementName != (endName = tagStack.Pop() as string)) {  						if (endName == null) {  							FatalErr("Tag stack underflow");  						} else {  							FatalErr(String.Format("Expected end tag '{0}' but found '{1}'"' elementName' endName));  						}  					}  					handler.OnEndElement(elementName);  					break;    				case (int)ActionCode.END_NAME:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					if (currCh != '/' && currCh != '>') break;  					goto case (int)ActionCode.START_ELEM;    				case (int)ActionCode.SET_ATTR_NAME:  					lastAttrName = sbChars.ToString();  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.SET_ATTR_VAL:  					if (lastAttrName == null) FatalErr("Internal error.");  					attrList.Add(lastAttrName' sbChars.ToString());  					sbChars = new StringBuilder();  					lastAttrName = null;  					break;    				case (int)ActionCode.SEND_CHARS:  					handler.OnChars(sbChars.ToString());  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.START_CDATA:  					string cdata = "CDATA[";  					isComment = false;  					isDTD = false;    					if (currCh == '-') {  						currCh = reader.Read();    						if (currCh != '-') FatalErr("Invalid comment");    						this.col++;  						isComment = true;  						twoCharBuff[0] = -1;  						twoCharBuff[1] = -1;  					} else {  						if (currCh != '[') {  							isDTD = true;  							bracketSwitch = 0;  							break;  						}    						for (int i = 0; i < cdata.Length; i++) {  							if (reader.Read() != cdata[i]) {  								this.col += i+1;  								break;  							}  						}  						this.col += cdata.Length;  						seenCData = true;  					}  					break;    				case (int)ActionCode.END_CDATA:  					int n = 0;  					currCh = ']';    					while (currCh == ']') {  						currCh = reader.Read();  						n++;  					}    					if (currCh != '>') {  						for (int i = 0; i < n; i++) sbChars.Append(']');  						sbChars.Append((char)currCh);  						stateCode = 0x12;  					} else {  						for (int i = 0; i < n-2; i++) sbChars.Append(']');  						seenCData = false;  					}    					this.col += n;  					break;    				case (int)ActionCode.ERROR:  					FatalErr(String.Format("Error {0}"' stateCode));  					break;    				case (int)ActionCode.STATE_CHANGE:  					break;    				case (int)ActionCode.FLUSH_CHARS_STATE_CHANGE:  					sbChars = new StringBuilder();  					if (currCh != '<') goto case (int)ActionCode.ACC_CHARS_STATE_CHANGE;  					break;    				case (int)ActionCode.ACC_CHARS_STATE_CHANGE:  					sbChars.Append((char)currCh);  					break;    				case (int)ActionCode.ACC_CDATA:  					if (isComment) {  						if (currCh == '>'  							&& twoCharBuff[0] == '-'  							&& twoCharBuff[1] == '-') {  							isComment = false;  							stateCode = 0;  						} else {  							twoCharBuff[0] = twoCharBuff[1];  							twoCharBuff[1] = currCh;  						}  					} else if (isDTD) {  						if (currCh == '<' || currCh == '>') bracketSwitch ^= 1;  						if (currCh == '>' && bracketSwitch != 0) {  							isDTD = false;  							stateCode = 0;  						}  					} else {  						if (this.splitCData  							&& sbChars.Length > 0  							&& seenCData) {  							handler.OnChars(sbChars.ToString());  							sbChars = new StringBuilder();  						}  						seenCData = false;  						sbChars.Append((char)currCh);  					}  					break;    				case (int)ActionCode.PROC_CHAR_REF:  					currCh = reader.Read();  					int cl = this.col + 1;  					if (currCh == '#') {    // character reference  						int r = 10;  						int chCode = 0;  						int nDigits = 0;  						currCh = reader.Read();  						cl++;    						if (currCh == 'x') {  							currCh = reader.Read();  							cl++;  							r=16;  						}    						NumberStyles style = r == 16 ? NumberStyles.HexNumber : NumberStyles.Integer;    						while (true) {  							int x = -1;  							if (Char.IsNumber((char)currCh) || "abcdef".IndexOf(Char.ToLower((char)currCh)) != -1) {  								try {  									x = Int32.Parse(new string((char)currCh' 1)' style);  								} catch (FormatException) {x = -1;}  							}  							if (x == -1) break;  							chCode *= r;  							chCode += x;  							nDigits++;  							currCh = reader.Read();  							cl++;  						}    						if (currCh == ';' && nDigits > 0) {  							sbChars.Append((char)chCode);  						} else {  							FatalErr("Bad char ref");  						}  					} else {  						// entity reference  						string entityRefChars = "aglmopqstu"; // amp | apos | quot | gt | lt  						string entities = "&'\"><";    						int pos = 0;  						int entIdx = 0xF;  						int predShift = 0;    						int sbLen = sbChars.Length;    						while (true) {  							if (pos != 0xF) pos = entityRefChars.IndexOf((char)currCh) & 0xF;  							if (pos == 0xF) FatalErr(errors[7]);  							sbChars.Append((char)currCh);    							int path = "\uFF35\u3F8F\u4F8F\u0F5F\uFF78\uE1F4\u2299\uEEFF\uEEFF\uFF4F"[pos];  							int lBr = (path >> 4) & 0xF;  							int rBr = path & 0xF;  							int lPred = path >> 12;  							int rPred = (path >> 8) & 0xF;  							currCh = reader.Read();  							cl++;  							pos = 0xF;  							if (lBr != 0xF && currCh == entityRefChars[lBr]) {  								if (lPred < 0xE) entIdx = lPred;  //								pred = lPred;  								predShift = 12; // left  							} else if (rBr != 0xF && currCh == entityRefChars[rBr]) {  								if (rPred < 0xE) entIdx = rPred;  //								pred = rPred;  								predShift = 8; // right  							} else if (currCh == ';') {  								if (entIdx != 0xF  									&& predShift != 0  									&& ((path >> predShift) & 0xF) == 0xE) break;  								continue; // pos == 0xF  							}    							pos=0;    						}    						int l = cl - this.col - 1;    						if ((l > 0 && l < 5)  							&&(StrEquals("amp"' sbChars' sbLen' l)  							|| StrEquals("apos"' sbChars' sbLen' l)  							|| StrEquals("quot"' sbChars' sbLen' l)  							|| StrEquals("lt"' sbChars' sbLen' l)  							|| StrEquals("gt"' sbChars' sbLen' l))  							) {  								sbChars.Length = sbLen;  								sbChars.Append(entities[entIdx]);  						} else FatalErr(errors[7]);  					}    					this.col = cl;  					break;    				default:  					FatalErr(String.Format("Unexpected action code - {0}."' actionCode));  					break;  			}
Magic Number,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,Parse,The following statement contains a magic number: switch (actionCode) {  				case (int)ActionCode.START_ELEM:  					handler.OnStartElement(elementName' attrList);  					if (currCh != '/') {  						tagStack.Push(elementName);  					} else {  						handler.OnEndElement(elementName);  					}  					attrList.Clear();  					break;    				case (int)ActionCode.END_ELEM:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					string endName = null;  					if (tagStack.Count == 0 ||  						elementName != (endName = tagStack.Pop() as string)) {  						if (endName == null) {  							FatalErr("Tag stack underflow");  						} else {  							FatalErr(String.Format("Expected end tag '{0}' but found '{1}'"' elementName' endName));  						}  					}  					handler.OnEndElement(elementName);  					break;    				case (int)ActionCode.END_NAME:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					if (currCh != '/' && currCh != '>') break;  					goto case (int)ActionCode.START_ELEM;    				case (int)ActionCode.SET_ATTR_NAME:  					lastAttrName = sbChars.ToString();  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.SET_ATTR_VAL:  					if (lastAttrName == null) FatalErr("Internal error.");  					attrList.Add(lastAttrName' sbChars.ToString());  					sbChars = new StringBuilder();  					lastAttrName = null;  					break;    				case (int)ActionCode.SEND_CHARS:  					handler.OnChars(sbChars.ToString());  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.START_CDATA:  					string cdata = "CDATA[";  					isComment = false;  					isDTD = false;    					if (currCh == '-') {  						currCh = reader.Read();    						if (currCh != '-') FatalErr("Invalid comment");    						this.col++;  						isComment = true;  						twoCharBuff[0] = -1;  						twoCharBuff[1] = -1;  					} else {  						if (currCh != '[') {  							isDTD = true;  							bracketSwitch = 0;  							break;  						}    						for (int i = 0; i < cdata.Length; i++) {  							if (reader.Read() != cdata[i]) {  								this.col += i+1;  								break;  							}  						}  						this.col += cdata.Length;  						seenCData = true;  					}  					break;    				case (int)ActionCode.END_CDATA:  					int n = 0;  					currCh = ']';    					while (currCh == ']') {  						currCh = reader.Read();  						n++;  					}    					if (currCh != '>') {  						for (int i = 0; i < n; i++) sbChars.Append(']');  						sbChars.Append((char)currCh);  						stateCode = 0x12;  					} else {  						for (int i = 0; i < n-2; i++) sbChars.Append(']');  						seenCData = false;  					}    					this.col += n;  					break;    				case (int)ActionCode.ERROR:  					FatalErr(String.Format("Error {0}"' stateCode));  					break;    				case (int)ActionCode.STATE_CHANGE:  					break;    				case (int)ActionCode.FLUSH_CHARS_STATE_CHANGE:  					sbChars = new StringBuilder();  					if (currCh != '<') goto case (int)ActionCode.ACC_CHARS_STATE_CHANGE;  					break;    				case (int)ActionCode.ACC_CHARS_STATE_CHANGE:  					sbChars.Append((char)currCh);  					break;    				case (int)ActionCode.ACC_CDATA:  					if (isComment) {  						if (currCh == '>'  							&& twoCharBuff[0] == '-'  							&& twoCharBuff[1] == '-') {  							isComment = false;  							stateCode = 0;  						} else {  							twoCharBuff[0] = twoCharBuff[1];  							twoCharBuff[1] = currCh;  						}  					} else if (isDTD) {  						if (currCh == '<' || currCh == '>') bracketSwitch ^= 1;  						if (currCh == '>' && bracketSwitch != 0) {  							isDTD = false;  							stateCode = 0;  						}  					} else {  						if (this.splitCData  							&& sbChars.Length > 0  							&& seenCData) {  							handler.OnChars(sbChars.ToString());  							sbChars = new StringBuilder();  						}  						seenCData = false;  						sbChars.Append((char)currCh);  					}  					break;    				case (int)ActionCode.PROC_CHAR_REF:  					currCh = reader.Read();  					int cl = this.col + 1;  					if (currCh == '#') {    // character reference  						int r = 10;  						int chCode = 0;  						int nDigits = 0;  						currCh = reader.Read();  						cl++;    						if (currCh == 'x') {  							currCh = reader.Read();  							cl++;  							r=16;  						}    						NumberStyles style = r == 16 ? NumberStyles.HexNumber : NumberStyles.Integer;    						while (true) {  							int x = -1;  							if (Char.IsNumber((char)currCh) || "abcdef".IndexOf(Char.ToLower((char)currCh)) != -1) {  								try {  									x = Int32.Parse(new string((char)currCh' 1)' style);  								} catch (FormatException) {x = -1;}  							}  							if (x == -1) break;  							chCode *= r;  							chCode += x;  							nDigits++;  							currCh = reader.Read();  							cl++;  						}    						if (currCh == ';' && nDigits > 0) {  							sbChars.Append((char)chCode);  						} else {  							FatalErr("Bad char ref");  						}  					} else {  						// entity reference  						string entityRefChars = "aglmopqstu"; // amp | apos | quot | gt | lt  						string entities = "&'\"><";    						int pos = 0;  						int entIdx = 0xF;  						int predShift = 0;    						int sbLen = sbChars.Length;    						while (true) {  							if (pos != 0xF) pos = entityRefChars.IndexOf((char)currCh) & 0xF;  							if (pos == 0xF) FatalErr(errors[7]);  							sbChars.Append((char)currCh);    							int path = "\uFF35\u3F8F\u4F8F\u0F5F\uFF78\uE1F4\u2299\uEEFF\uEEFF\uFF4F"[pos];  							int lBr = (path >> 4) & 0xF;  							int rBr = path & 0xF;  							int lPred = path >> 12;  							int rPred = (path >> 8) & 0xF;  							currCh = reader.Read();  							cl++;  							pos = 0xF;  							if (lBr != 0xF && currCh == entityRefChars[lBr]) {  								if (lPred < 0xE) entIdx = lPred;  //								pred = lPred;  								predShift = 12; // left  							} else if (rBr != 0xF && currCh == entityRefChars[rBr]) {  								if (rPred < 0xE) entIdx = rPred;  //								pred = rPred;  								predShift = 8; // right  							} else if (currCh == ';') {  								if (entIdx != 0xF  									&& predShift != 0  									&& ((path >> predShift) & 0xF) == 0xE) break;  								continue; // pos == 0xF  							}    							pos=0;    						}    						int l = cl - this.col - 1;    						if ((l > 0 && l < 5)  							&&(StrEquals("amp"' sbChars' sbLen' l)  							|| StrEquals("apos"' sbChars' sbLen' l)  							|| StrEquals("quot"' sbChars' sbLen' l)  							|| StrEquals("lt"' sbChars' sbLen' l)  							|| StrEquals("gt"' sbChars' sbLen' l))  							) {  								sbChars.Length = sbLen;  								sbChars.Append(entities[entIdx]);  						} else FatalErr(errors[7]);  					}    					this.col = cl;  					break;    				default:  					FatalErr(String.Format("Unexpected action code - {0}."' actionCode));  					break;  			}
Magic Number,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,Parse,The following statement contains a magic number: switch (actionCode) {  				case (int)ActionCode.START_ELEM:  					handler.OnStartElement(elementName' attrList);  					if (currCh != '/') {  						tagStack.Push(elementName);  					} else {  						handler.OnEndElement(elementName);  					}  					attrList.Clear();  					break;    				case (int)ActionCode.END_ELEM:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					string endName = null;  					if (tagStack.Count == 0 ||  						elementName != (endName = tagStack.Pop() as string)) {  						if (endName == null) {  							FatalErr("Tag stack underflow");  						} else {  							FatalErr(String.Format("Expected end tag '{0}' but found '{1}'"' elementName' endName));  						}  					}  					handler.OnEndElement(elementName);  					break;    				case (int)ActionCode.END_NAME:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					if (currCh != '/' && currCh != '>') break;  					goto case (int)ActionCode.START_ELEM;    				case (int)ActionCode.SET_ATTR_NAME:  					lastAttrName = sbChars.ToString();  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.SET_ATTR_VAL:  					if (lastAttrName == null) FatalErr("Internal error.");  					attrList.Add(lastAttrName' sbChars.ToString());  					sbChars = new StringBuilder();  					lastAttrName = null;  					break;    				case (int)ActionCode.SEND_CHARS:  					handler.OnChars(sbChars.ToString());  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.START_CDATA:  					string cdata = "CDATA[";  					isComment = false;  					isDTD = false;    					if (currCh == '-') {  						currCh = reader.Read();    						if (currCh != '-') FatalErr("Invalid comment");    						this.col++;  						isComment = true;  						twoCharBuff[0] = -1;  						twoCharBuff[1] = -1;  					} else {  						if (currCh != '[') {  							isDTD = true;  							bracketSwitch = 0;  							break;  						}    						for (int i = 0; i < cdata.Length; i++) {  							if (reader.Read() != cdata[i]) {  								this.col += i+1;  								break;  							}  						}  						this.col += cdata.Length;  						seenCData = true;  					}  					break;    				case (int)ActionCode.END_CDATA:  					int n = 0;  					currCh = ']';    					while (currCh == ']') {  						currCh = reader.Read();  						n++;  					}    					if (currCh != '>') {  						for (int i = 0; i < n; i++) sbChars.Append(']');  						sbChars.Append((char)currCh);  						stateCode = 0x12;  					} else {  						for (int i = 0; i < n-2; i++) sbChars.Append(']');  						seenCData = false;  					}    					this.col += n;  					break;    				case (int)ActionCode.ERROR:  					FatalErr(String.Format("Error {0}"' stateCode));  					break;    				case (int)ActionCode.STATE_CHANGE:  					break;    				case (int)ActionCode.FLUSH_CHARS_STATE_CHANGE:  					sbChars = new StringBuilder();  					if (currCh != '<') goto case (int)ActionCode.ACC_CHARS_STATE_CHANGE;  					break;    				case (int)ActionCode.ACC_CHARS_STATE_CHANGE:  					sbChars.Append((char)currCh);  					break;    				case (int)ActionCode.ACC_CDATA:  					if (isComment) {  						if (currCh == '>'  							&& twoCharBuff[0] == '-'  							&& twoCharBuff[1] == '-') {  							isComment = false;  							stateCode = 0;  						} else {  							twoCharBuff[0] = twoCharBuff[1];  							twoCharBuff[1] = currCh;  						}  					} else if (isDTD) {  						if (currCh == '<' || currCh == '>') bracketSwitch ^= 1;  						if (currCh == '>' && bracketSwitch != 0) {  							isDTD = false;  							stateCode = 0;  						}  					} else {  						if (this.splitCData  							&& sbChars.Length > 0  							&& seenCData) {  							handler.OnChars(sbChars.ToString());  							sbChars = new StringBuilder();  						}  						seenCData = false;  						sbChars.Append((char)currCh);  					}  					break;    				case (int)ActionCode.PROC_CHAR_REF:  					currCh = reader.Read();  					int cl = this.col + 1;  					if (currCh == '#') {    // character reference  						int r = 10;  						int chCode = 0;  						int nDigits = 0;  						currCh = reader.Read();  						cl++;    						if (currCh == 'x') {  							currCh = reader.Read();  							cl++;  							r=16;  						}    						NumberStyles style = r == 16 ? NumberStyles.HexNumber : NumberStyles.Integer;    						while (true) {  							int x = -1;  							if (Char.IsNumber((char)currCh) || "abcdef".IndexOf(Char.ToLower((char)currCh)) != -1) {  								try {  									x = Int32.Parse(new string((char)currCh' 1)' style);  								} catch (FormatException) {x = -1;}  							}  							if (x == -1) break;  							chCode *= r;  							chCode += x;  							nDigits++;  							currCh = reader.Read();  							cl++;  						}    						if (currCh == ';' && nDigits > 0) {  							sbChars.Append((char)chCode);  						} else {  							FatalErr("Bad char ref");  						}  					} else {  						// entity reference  						string entityRefChars = "aglmopqstu"; // amp | apos | quot | gt | lt  						string entities = "&'\"><";    						int pos = 0;  						int entIdx = 0xF;  						int predShift = 0;    						int sbLen = sbChars.Length;    						while (true) {  							if (pos != 0xF) pos = entityRefChars.IndexOf((char)currCh) & 0xF;  							if (pos == 0xF) FatalErr(errors[7]);  							sbChars.Append((char)currCh);    							int path = "\uFF35\u3F8F\u4F8F\u0F5F\uFF78\uE1F4\u2299\uEEFF\uEEFF\uFF4F"[pos];  							int lBr = (path >> 4) & 0xF;  							int rBr = path & 0xF;  							int lPred = path >> 12;  							int rPred = (path >> 8) & 0xF;  							currCh = reader.Read();  							cl++;  							pos = 0xF;  							if (lBr != 0xF && currCh == entityRefChars[lBr]) {  								if (lPred < 0xE) entIdx = lPred;  //								pred = lPred;  								predShift = 12; // left  							} else if (rBr != 0xF && currCh == entityRefChars[rBr]) {  								if (rPred < 0xE) entIdx = rPred;  //								pred = rPred;  								predShift = 8; // right  							} else if (currCh == ';') {  								if (entIdx != 0xF  									&& predShift != 0  									&& ((path >> predShift) & 0xF) == 0xE) break;  								continue; // pos == 0xF  							}    							pos=0;    						}    						int l = cl - this.col - 1;    						if ((l > 0 && l < 5)  							&&(StrEquals("amp"' sbChars' sbLen' l)  							|| StrEquals("apos"' sbChars' sbLen' l)  							|| StrEquals("quot"' sbChars' sbLen' l)  							|| StrEquals("lt"' sbChars' sbLen' l)  							|| StrEquals("gt"' sbChars' sbLen' l))  							) {  								sbChars.Length = sbLen;  								sbChars.Append(entities[entIdx]);  						} else FatalErr(errors[7]);  					}    					this.col = cl;  					break;    				default:  					FatalErr(String.Format("Unexpected action code - {0}."' actionCode));  					break;  			}
Magic Number,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,Parse,The following statement contains a magic number: switch (actionCode) {  				case (int)ActionCode.START_ELEM:  					handler.OnStartElement(elementName' attrList);  					if (currCh != '/') {  						tagStack.Push(elementName);  					} else {  						handler.OnEndElement(elementName);  					}  					attrList.Clear();  					break;    				case (int)ActionCode.END_ELEM:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					string endName = null;  					if (tagStack.Count == 0 ||  						elementName != (endName = tagStack.Pop() as string)) {  						if (endName == null) {  							FatalErr("Tag stack underflow");  						} else {  							FatalErr(String.Format("Expected end tag '{0}' but found '{1}'"' elementName' endName));  						}  					}  					handler.OnEndElement(elementName);  					break;    				case (int)ActionCode.END_NAME:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					if (currCh != '/' && currCh != '>') break;  					goto case (int)ActionCode.START_ELEM;    				case (int)ActionCode.SET_ATTR_NAME:  					lastAttrName = sbChars.ToString();  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.SET_ATTR_VAL:  					if (lastAttrName == null) FatalErr("Internal error.");  					attrList.Add(lastAttrName' sbChars.ToString());  					sbChars = new StringBuilder();  					lastAttrName = null;  					break;    				case (int)ActionCode.SEND_CHARS:  					handler.OnChars(sbChars.ToString());  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.START_CDATA:  					string cdata = "CDATA[";  					isComment = false;  					isDTD = false;    					if (currCh == '-') {  						currCh = reader.Read();    						if (currCh != '-') FatalErr("Invalid comment");    						this.col++;  						isComment = true;  						twoCharBuff[0] = -1;  						twoCharBuff[1] = -1;  					} else {  						if (currCh != '[') {  							isDTD = true;  							bracketSwitch = 0;  							break;  						}    						for (int i = 0; i < cdata.Length; i++) {  							if (reader.Read() != cdata[i]) {  								this.col += i+1;  								break;  							}  						}  						this.col += cdata.Length;  						seenCData = true;  					}  					break;    				case (int)ActionCode.END_CDATA:  					int n = 0;  					currCh = ']';    					while (currCh == ']') {  						currCh = reader.Read();  						n++;  					}    					if (currCh != '>') {  						for (int i = 0; i < n; i++) sbChars.Append(']');  						sbChars.Append((char)currCh);  						stateCode = 0x12;  					} else {  						for (int i = 0; i < n-2; i++) sbChars.Append(']');  						seenCData = false;  					}    					this.col += n;  					break;    				case (int)ActionCode.ERROR:  					FatalErr(String.Format("Error {0}"' stateCode));  					break;    				case (int)ActionCode.STATE_CHANGE:  					break;    				case (int)ActionCode.FLUSH_CHARS_STATE_CHANGE:  					sbChars = new StringBuilder();  					if (currCh != '<') goto case (int)ActionCode.ACC_CHARS_STATE_CHANGE;  					break;    				case (int)ActionCode.ACC_CHARS_STATE_CHANGE:  					sbChars.Append((char)currCh);  					break;    				case (int)ActionCode.ACC_CDATA:  					if (isComment) {  						if (currCh == '>'  							&& twoCharBuff[0] == '-'  							&& twoCharBuff[1] == '-') {  							isComment = false;  							stateCode = 0;  						} else {  							twoCharBuff[0] = twoCharBuff[1];  							twoCharBuff[1] = currCh;  						}  					} else if (isDTD) {  						if (currCh == '<' || currCh == '>') bracketSwitch ^= 1;  						if (currCh == '>' && bracketSwitch != 0) {  							isDTD = false;  							stateCode = 0;  						}  					} else {  						if (this.splitCData  							&& sbChars.Length > 0  							&& seenCData) {  							handler.OnChars(sbChars.ToString());  							sbChars = new StringBuilder();  						}  						seenCData = false;  						sbChars.Append((char)currCh);  					}  					break;    				case (int)ActionCode.PROC_CHAR_REF:  					currCh = reader.Read();  					int cl = this.col + 1;  					if (currCh == '#') {    // character reference  						int r = 10;  						int chCode = 0;  						int nDigits = 0;  						currCh = reader.Read();  						cl++;    						if (currCh == 'x') {  							currCh = reader.Read();  							cl++;  							r=16;  						}    						NumberStyles style = r == 16 ? NumberStyles.HexNumber : NumberStyles.Integer;    						while (true) {  							int x = -1;  							if (Char.IsNumber((char)currCh) || "abcdef".IndexOf(Char.ToLower((char)currCh)) != -1) {  								try {  									x = Int32.Parse(new string((char)currCh' 1)' style);  								} catch (FormatException) {x = -1;}  							}  							if (x == -1) break;  							chCode *= r;  							chCode += x;  							nDigits++;  							currCh = reader.Read();  							cl++;  						}    						if (currCh == ';' && nDigits > 0) {  							sbChars.Append((char)chCode);  						} else {  							FatalErr("Bad char ref");  						}  					} else {  						// entity reference  						string entityRefChars = "aglmopqstu"; // amp | apos | quot | gt | lt  						string entities = "&'\"><";    						int pos = 0;  						int entIdx = 0xF;  						int predShift = 0;    						int sbLen = sbChars.Length;    						while (true) {  							if (pos != 0xF) pos = entityRefChars.IndexOf((char)currCh) & 0xF;  							if (pos == 0xF) FatalErr(errors[7]);  							sbChars.Append((char)currCh);    							int path = "\uFF35\u3F8F\u4F8F\u0F5F\uFF78\uE1F4\u2299\uEEFF\uEEFF\uFF4F"[pos];  							int lBr = (path >> 4) & 0xF;  							int rBr = path & 0xF;  							int lPred = path >> 12;  							int rPred = (path >> 8) & 0xF;  							currCh = reader.Read();  							cl++;  							pos = 0xF;  							if (lBr != 0xF && currCh == entityRefChars[lBr]) {  								if (lPred < 0xE) entIdx = lPred;  //								pred = lPred;  								predShift = 12; // left  							} else if (rBr != 0xF && currCh == entityRefChars[rBr]) {  								if (rPred < 0xE) entIdx = rPred;  //								pred = rPred;  								predShift = 8; // right  							} else if (currCh == ';') {  								if (entIdx != 0xF  									&& predShift != 0  									&& ((path >> predShift) & 0xF) == 0xE) break;  								continue; // pos == 0xF  							}    							pos=0;    						}    						int l = cl - this.col - 1;    						if ((l > 0 && l < 5)  							&&(StrEquals("amp"' sbChars' sbLen' l)  							|| StrEquals("apos"' sbChars' sbLen' l)  							|| StrEquals("quot"' sbChars' sbLen' l)  							|| StrEquals("lt"' sbChars' sbLen' l)  							|| StrEquals("gt"' sbChars' sbLen' l))  							) {  								sbChars.Length = sbLen;  								sbChars.Append(entities[entIdx]);  						} else FatalErr(errors[7]);  					}    					this.col = cl;  					break;    				default:  					FatalErr(String.Format("Unexpected action code - {0}."' actionCode));  					break;  			}
Magic Number,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,Parse,The following statement contains a magic number: switch (actionCode) {  				case (int)ActionCode.START_ELEM:  					handler.OnStartElement(elementName' attrList);  					if (currCh != '/') {  						tagStack.Push(elementName);  					} else {  						handler.OnEndElement(elementName);  					}  					attrList.Clear();  					break;    				case (int)ActionCode.END_ELEM:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					string endName = null;  					if (tagStack.Count == 0 ||  						elementName != (endName = tagStack.Pop() as string)) {  						if (endName == null) {  							FatalErr("Tag stack underflow");  						} else {  							FatalErr(String.Format("Expected end tag '{0}' but found '{1}'"' elementName' endName));  						}  					}  					handler.OnEndElement(elementName);  					break;    				case (int)ActionCode.END_NAME:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					if (currCh != '/' && currCh != '>') break;  					goto case (int)ActionCode.START_ELEM;    				case (int)ActionCode.SET_ATTR_NAME:  					lastAttrName = sbChars.ToString();  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.SET_ATTR_VAL:  					if (lastAttrName == null) FatalErr("Internal error.");  					attrList.Add(lastAttrName' sbChars.ToString());  					sbChars = new StringBuilder();  					lastAttrName = null;  					break;    				case (int)ActionCode.SEND_CHARS:  					handler.OnChars(sbChars.ToString());  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.START_CDATA:  					string cdata = "CDATA[";  					isComment = false;  					isDTD = false;    					if (currCh == '-') {  						currCh = reader.Read();    						if (currCh != '-') FatalErr("Invalid comment");    						this.col++;  						isComment = true;  						twoCharBuff[0] = -1;  						twoCharBuff[1] = -1;  					} else {  						if (currCh != '[') {  							isDTD = true;  							bracketSwitch = 0;  							break;  						}    						for (int i = 0; i < cdata.Length; i++) {  							if (reader.Read() != cdata[i]) {  								this.col += i+1;  								break;  							}  						}  						this.col += cdata.Length;  						seenCData = true;  					}  					break;    				case (int)ActionCode.END_CDATA:  					int n = 0;  					currCh = ']';    					while (currCh == ']') {  						currCh = reader.Read();  						n++;  					}    					if (currCh != '>') {  						for (int i = 0; i < n; i++) sbChars.Append(']');  						sbChars.Append((char)currCh);  						stateCode = 0x12;  					} else {  						for (int i = 0; i < n-2; i++) sbChars.Append(']');  						seenCData = false;  					}    					this.col += n;  					break;    				case (int)ActionCode.ERROR:  					FatalErr(String.Format("Error {0}"' stateCode));  					break;    				case (int)ActionCode.STATE_CHANGE:  					break;    				case (int)ActionCode.FLUSH_CHARS_STATE_CHANGE:  					sbChars = new StringBuilder();  					if (currCh != '<') goto case (int)ActionCode.ACC_CHARS_STATE_CHANGE;  					break;    				case (int)ActionCode.ACC_CHARS_STATE_CHANGE:  					sbChars.Append((char)currCh);  					break;    				case (int)ActionCode.ACC_CDATA:  					if (isComment) {  						if (currCh == '>'  							&& twoCharBuff[0] == '-'  							&& twoCharBuff[1] == '-') {  							isComment = false;  							stateCode = 0;  						} else {  							twoCharBuff[0] = twoCharBuff[1];  							twoCharBuff[1] = currCh;  						}  					} else if (isDTD) {  						if (currCh == '<' || currCh == '>') bracketSwitch ^= 1;  						if (currCh == '>' && bracketSwitch != 0) {  							isDTD = false;  							stateCode = 0;  						}  					} else {  						if (this.splitCData  							&& sbChars.Length > 0  							&& seenCData) {  							handler.OnChars(sbChars.ToString());  							sbChars = new StringBuilder();  						}  						seenCData = false;  						sbChars.Append((char)currCh);  					}  					break;    				case (int)ActionCode.PROC_CHAR_REF:  					currCh = reader.Read();  					int cl = this.col + 1;  					if (currCh == '#') {    // character reference  						int r = 10;  						int chCode = 0;  						int nDigits = 0;  						currCh = reader.Read();  						cl++;    						if (currCh == 'x') {  							currCh = reader.Read();  							cl++;  							r=16;  						}    						NumberStyles style = r == 16 ? NumberStyles.HexNumber : NumberStyles.Integer;    						while (true) {  							int x = -1;  							if (Char.IsNumber((char)currCh) || "abcdef".IndexOf(Char.ToLower((char)currCh)) != -1) {  								try {  									x = Int32.Parse(new string((char)currCh' 1)' style);  								} catch (FormatException) {x = -1;}  							}  							if (x == -1) break;  							chCode *= r;  							chCode += x;  							nDigits++;  							currCh = reader.Read();  							cl++;  						}    						if (currCh == ';' && nDigits > 0) {  							sbChars.Append((char)chCode);  						} else {  							FatalErr("Bad char ref");  						}  					} else {  						// entity reference  						string entityRefChars = "aglmopqstu"; // amp | apos | quot | gt | lt  						string entities = "&'\"><";    						int pos = 0;  						int entIdx = 0xF;  						int predShift = 0;    						int sbLen = sbChars.Length;    						while (true) {  							if (pos != 0xF) pos = entityRefChars.IndexOf((char)currCh) & 0xF;  							if (pos == 0xF) FatalErr(errors[7]);  							sbChars.Append((char)currCh);    							int path = "\uFF35\u3F8F\u4F8F\u0F5F\uFF78\uE1F4\u2299\uEEFF\uEEFF\uFF4F"[pos];  							int lBr = (path >> 4) & 0xF;  							int rBr = path & 0xF;  							int lPred = path >> 12;  							int rPred = (path >> 8) & 0xF;  							currCh = reader.Read();  							cl++;  							pos = 0xF;  							if (lBr != 0xF && currCh == entityRefChars[lBr]) {  								if (lPred < 0xE) entIdx = lPred;  //								pred = lPred;  								predShift = 12; // left  							} else if (rBr != 0xF && currCh == entityRefChars[rBr]) {  								if (rPred < 0xE) entIdx = rPred;  //								pred = rPred;  								predShift = 8; // right  							} else if (currCh == ';') {  								if (entIdx != 0xF  									&& predShift != 0  									&& ((path >> predShift) & 0xF) == 0xE) break;  								continue; // pos == 0xF  							}    							pos=0;    						}    						int l = cl - this.col - 1;    						if ((l > 0 && l < 5)  							&&(StrEquals("amp"' sbChars' sbLen' l)  							|| StrEquals("apos"' sbChars' sbLen' l)  							|| StrEquals("quot"' sbChars' sbLen' l)  							|| StrEquals("lt"' sbChars' sbLen' l)  							|| StrEquals("gt"' sbChars' sbLen' l))  							) {  								sbChars.Length = sbLen;  								sbChars.Append(entities[entIdx]);  						} else FatalErr(errors[7]);  					}    					this.col = cl;  					break;    				default:  					FatalErr(String.Format("Unexpected action code - {0}."' actionCode));  					break;  			}
Magic Number,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,Parse,The following statement contains a magic number: switch (actionCode) {  				case (int)ActionCode.START_ELEM:  					handler.OnStartElement(elementName' attrList);  					if (currCh != '/') {  						tagStack.Push(elementName);  					} else {  						handler.OnEndElement(elementName);  					}  					attrList.Clear();  					break;    				case (int)ActionCode.END_ELEM:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					string endName = null;  					if (tagStack.Count == 0 ||  						elementName != (endName = tagStack.Pop() as string)) {  						if (endName == null) {  							FatalErr("Tag stack underflow");  						} else {  							FatalErr(String.Format("Expected end tag '{0}' but found '{1}'"' elementName' endName));  						}  					}  					handler.OnEndElement(elementName);  					break;    				case (int)ActionCode.END_NAME:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					if (currCh != '/' && currCh != '>') break;  					goto case (int)ActionCode.START_ELEM;    				case (int)ActionCode.SET_ATTR_NAME:  					lastAttrName = sbChars.ToString();  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.SET_ATTR_VAL:  					if (lastAttrName == null) FatalErr("Internal error.");  					attrList.Add(lastAttrName' sbChars.ToString());  					sbChars = new StringBuilder();  					lastAttrName = null;  					break;    				case (int)ActionCode.SEND_CHARS:  					handler.OnChars(sbChars.ToString());  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.START_CDATA:  					string cdata = "CDATA[";  					isComment = false;  					isDTD = false;    					if (currCh == '-') {  						currCh = reader.Read();    						if (currCh != '-') FatalErr("Invalid comment");    						this.col++;  						isComment = true;  						twoCharBuff[0] = -1;  						twoCharBuff[1] = -1;  					} else {  						if (currCh != '[') {  							isDTD = true;  							bracketSwitch = 0;  							break;  						}    						for (int i = 0; i < cdata.Length; i++) {  							if (reader.Read() != cdata[i]) {  								this.col += i+1;  								break;  							}  						}  						this.col += cdata.Length;  						seenCData = true;  					}  					break;    				case (int)ActionCode.END_CDATA:  					int n = 0;  					currCh = ']';    					while (currCh == ']') {  						currCh = reader.Read();  						n++;  					}    					if (currCh != '>') {  						for (int i = 0; i < n; i++) sbChars.Append(']');  						sbChars.Append((char)currCh);  						stateCode = 0x12;  					} else {  						for (int i = 0; i < n-2; i++) sbChars.Append(']');  						seenCData = false;  					}    					this.col += n;  					break;    				case (int)ActionCode.ERROR:  					FatalErr(String.Format("Error {0}"' stateCode));  					break;    				case (int)ActionCode.STATE_CHANGE:  					break;    				case (int)ActionCode.FLUSH_CHARS_STATE_CHANGE:  					sbChars = new StringBuilder();  					if (currCh != '<') goto case (int)ActionCode.ACC_CHARS_STATE_CHANGE;  					break;    				case (int)ActionCode.ACC_CHARS_STATE_CHANGE:  					sbChars.Append((char)currCh);  					break;    				case (int)ActionCode.ACC_CDATA:  					if (isComment) {  						if (currCh == '>'  							&& twoCharBuff[0] == '-'  							&& twoCharBuff[1] == '-') {  							isComment = false;  							stateCode = 0;  						} else {  							twoCharBuff[0] = twoCharBuff[1];  							twoCharBuff[1] = currCh;  						}  					} else if (isDTD) {  						if (currCh == '<' || currCh == '>') bracketSwitch ^= 1;  						if (currCh == '>' && bracketSwitch != 0) {  							isDTD = false;  							stateCode = 0;  						}  					} else {  						if (this.splitCData  							&& sbChars.Length > 0  							&& seenCData) {  							handler.OnChars(sbChars.ToString());  							sbChars = new StringBuilder();  						}  						seenCData = false;  						sbChars.Append((char)currCh);  					}  					break;    				case (int)ActionCode.PROC_CHAR_REF:  					currCh = reader.Read();  					int cl = this.col + 1;  					if (currCh == '#') {    // character reference  						int r = 10;  						int chCode = 0;  						int nDigits = 0;  						currCh = reader.Read();  						cl++;    						if (currCh == 'x') {  							currCh = reader.Read();  							cl++;  							r=16;  						}    						NumberStyles style = r == 16 ? NumberStyles.HexNumber : NumberStyles.Integer;    						while (true) {  							int x = -1;  							if (Char.IsNumber((char)currCh) || "abcdef".IndexOf(Char.ToLower((char)currCh)) != -1) {  								try {  									x = Int32.Parse(new string((char)currCh' 1)' style);  								} catch (FormatException) {x = -1;}  							}  							if (x == -1) break;  							chCode *= r;  							chCode += x;  							nDigits++;  							currCh = reader.Read();  							cl++;  						}    						if (currCh == ';' && nDigits > 0) {  							sbChars.Append((char)chCode);  						} else {  							FatalErr("Bad char ref");  						}  					} else {  						// entity reference  						string entityRefChars = "aglmopqstu"; // amp | apos | quot | gt | lt  						string entities = "&'\"><";    						int pos = 0;  						int entIdx = 0xF;  						int predShift = 0;    						int sbLen = sbChars.Length;    						while (true) {  							if (pos != 0xF) pos = entityRefChars.IndexOf((char)currCh) & 0xF;  							if (pos == 0xF) FatalErr(errors[7]);  							sbChars.Append((char)currCh);    							int path = "\uFF35\u3F8F\u4F8F\u0F5F\uFF78\uE1F4\u2299\uEEFF\uEEFF\uFF4F"[pos];  							int lBr = (path >> 4) & 0xF;  							int rBr = path & 0xF;  							int lPred = path >> 12;  							int rPred = (path >> 8) & 0xF;  							currCh = reader.Read();  							cl++;  							pos = 0xF;  							if (lBr != 0xF && currCh == entityRefChars[lBr]) {  								if (lPred < 0xE) entIdx = lPred;  //								pred = lPred;  								predShift = 12; // left  							} else if (rBr != 0xF && currCh == entityRefChars[rBr]) {  								if (rPred < 0xE) entIdx = rPred;  //								pred = rPred;  								predShift = 8; // right  							} else if (currCh == ';') {  								if (entIdx != 0xF  									&& predShift != 0  									&& ((path >> predShift) & 0xF) == 0xE) break;  								continue; // pos == 0xF  							}    							pos=0;    						}    						int l = cl - this.col - 1;    						if ((l > 0 && l < 5)  							&&(StrEquals("amp"' sbChars' sbLen' l)  							|| StrEquals("apos"' sbChars' sbLen' l)  							|| StrEquals("quot"' sbChars' sbLen' l)  							|| StrEquals("lt"' sbChars' sbLen' l)  							|| StrEquals("gt"' sbChars' sbLen' l))  							) {  								sbChars.Length = sbLen;  								sbChars.Append(entities[entIdx]);  						} else FatalErr(errors[7]);  					}    					this.col = cl;  					break;    				default:  					FatalErr(String.Format("Unexpected action code - {0}."' actionCode));  					break;  			}
Magic Number,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,Parse,The following statement contains a magic number: switch (actionCode) {  				case (int)ActionCode.START_ELEM:  					handler.OnStartElement(elementName' attrList);  					if (currCh != '/') {  						tagStack.Push(elementName);  					} else {  						handler.OnEndElement(elementName);  					}  					attrList.Clear();  					break;    				case (int)ActionCode.END_ELEM:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					string endName = null;  					if (tagStack.Count == 0 ||  						elementName != (endName = tagStack.Pop() as string)) {  						if (endName == null) {  							FatalErr("Tag stack underflow");  						} else {  							FatalErr(String.Format("Expected end tag '{0}' but found '{1}'"' elementName' endName));  						}  					}  					handler.OnEndElement(elementName);  					break;    				case (int)ActionCode.END_NAME:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					if (currCh != '/' && currCh != '>') break;  					goto case (int)ActionCode.START_ELEM;    				case (int)ActionCode.SET_ATTR_NAME:  					lastAttrName = sbChars.ToString();  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.SET_ATTR_VAL:  					if (lastAttrName == null) FatalErr("Internal error.");  					attrList.Add(lastAttrName' sbChars.ToString());  					sbChars = new StringBuilder();  					lastAttrName = null;  					break;    				case (int)ActionCode.SEND_CHARS:  					handler.OnChars(sbChars.ToString());  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.START_CDATA:  					string cdata = "CDATA[";  					isComment = false;  					isDTD = false;    					if (currCh == '-') {  						currCh = reader.Read();    						if (currCh != '-') FatalErr("Invalid comment");    						this.col++;  						isComment = true;  						twoCharBuff[0] = -1;  						twoCharBuff[1] = -1;  					} else {  						if (currCh != '[') {  							isDTD = true;  							bracketSwitch = 0;  							break;  						}    						for (int i = 0; i < cdata.Length; i++) {  							if (reader.Read() != cdata[i]) {  								this.col += i+1;  								break;  							}  						}  						this.col += cdata.Length;  						seenCData = true;  					}  					break;    				case (int)ActionCode.END_CDATA:  					int n = 0;  					currCh = ']';    					while (currCh == ']') {  						currCh = reader.Read();  						n++;  					}    					if (currCh != '>') {  						for (int i = 0; i < n; i++) sbChars.Append(']');  						sbChars.Append((char)currCh);  						stateCode = 0x12;  					} else {  						for (int i = 0; i < n-2; i++) sbChars.Append(']');  						seenCData = false;  					}    					this.col += n;  					break;    				case (int)ActionCode.ERROR:  					FatalErr(String.Format("Error {0}"' stateCode));  					break;    				case (int)ActionCode.STATE_CHANGE:  					break;    				case (int)ActionCode.FLUSH_CHARS_STATE_CHANGE:  					sbChars = new StringBuilder();  					if (currCh != '<') goto case (int)ActionCode.ACC_CHARS_STATE_CHANGE;  					break;    				case (int)ActionCode.ACC_CHARS_STATE_CHANGE:  					sbChars.Append((char)currCh);  					break;    				case (int)ActionCode.ACC_CDATA:  					if (isComment) {  						if (currCh == '>'  							&& twoCharBuff[0] == '-'  							&& twoCharBuff[1] == '-') {  							isComment = false;  							stateCode = 0;  						} else {  							twoCharBuff[0] = twoCharBuff[1];  							twoCharBuff[1] = currCh;  						}  					} else if (isDTD) {  						if (currCh == '<' || currCh == '>') bracketSwitch ^= 1;  						if (currCh == '>' && bracketSwitch != 0) {  							isDTD = false;  							stateCode = 0;  						}  					} else {  						if (this.splitCData  							&& sbChars.Length > 0  							&& seenCData) {  							handler.OnChars(sbChars.ToString());  							sbChars = new StringBuilder();  						}  						seenCData = false;  						sbChars.Append((char)currCh);  					}  					break;    				case (int)ActionCode.PROC_CHAR_REF:  					currCh = reader.Read();  					int cl = this.col + 1;  					if (currCh == '#') {    // character reference  						int r = 10;  						int chCode = 0;  						int nDigits = 0;  						currCh = reader.Read();  						cl++;    						if (currCh == 'x') {  							currCh = reader.Read();  							cl++;  							r=16;  						}    						NumberStyles style = r == 16 ? NumberStyles.HexNumber : NumberStyles.Integer;    						while (true) {  							int x = -1;  							if (Char.IsNumber((char)currCh) || "abcdef".IndexOf(Char.ToLower((char)currCh)) != -1) {  								try {  									x = Int32.Parse(new string((char)currCh' 1)' style);  								} catch (FormatException) {x = -1;}  							}  							if (x == -1) break;  							chCode *= r;  							chCode += x;  							nDigits++;  							currCh = reader.Read();  							cl++;  						}    						if (currCh == ';' && nDigits > 0) {  							sbChars.Append((char)chCode);  						} else {  							FatalErr("Bad char ref");  						}  					} else {  						// entity reference  						string entityRefChars = "aglmopqstu"; // amp | apos | quot | gt | lt  						string entities = "&'\"><";    						int pos = 0;  						int entIdx = 0xF;  						int predShift = 0;    						int sbLen = sbChars.Length;    						while (true) {  							if (pos != 0xF) pos = entityRefChars.IndexOf((char)currCh) & 0xF;  							if (pos == 0xF) FatalErr(errors[7]);  							sbChars.Append((char)currCh);    							int path = "\uFF35\u3F8F\u4F8F\u0F5F\uFF78\uE1F4\u2299\uEEFF\uEEFF\uFF4F"[pos];  							int lBr = (path >> 4) & 0xF;  							int rBr = path & 0xF;  							int lPred = path >> 12;  							int rPred = (path >> 8) & 0xF;  							currCh = reader.Read();  							cl++;  							pos = 0xF;  							if (lBr != 0xF && currCh == entityRefChars[lBr]) {  								if (lPred < 0xE) entIdx = lPred;  //								pred = lPred;  								predShift = 12; // left  							} else if (rBr != 0xF && currCh == entityRefChars[rBr]) {  								if (rPred < 0xE) entIdx = rPred;  //								pred = rPred;  								predShift = 8; // right  							} else if (currCh == ';') {  								if (entIdx != 0xF  									&& predShift != 0  									&& ((path >> predShift) & 0xF) == 0xE) break;  								continue; // pos == 0xF  							}    							pos=0;    						}    						int l = cl - this.col - 1;    						if ((l > 0 && l < 5)  							&&(StrEquals("amp"' sbChars' sbLen' l)  							|| StrEquals("apos"' sbChars' sbLen' l)  							|| StrEquals("quot"' sbChars' sbLen' l)  							|| StrEquals("lt"' sbChars' sbLen' l)  							|| StrEquals("gt"' sbChars' sbLen' l))  							) {  								sbChars.Length = sbLen;  								sbChars.Append(entities[entIdx]);  						} else FatalErr(errors[7]);  					}    					this.col = cl;  					break;    				default:  					FatalErr(String.Format("Unexpected action code - {0}."' actionCode));  					break;  			}
Magic Number,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,Parse,The following statement contains a magic number: switch (actionCode) {  				case (int)ActionCode.START_ELEM:  					handler.OnStartElement(elementName' attrList);  					if (currCh != '/') {  						tagStack.Push(elementName);  					} else {  						handler.OnEndElement(elementName);  					}  					attrList.Clear();  					break;    				case (int)ActionCode.END_ELEM:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					string endName = null;  					if (tagStack.Count == 0 ||  						elementName != (endName = tagStack.Pop() as string)) {  						if (endName == null) {  							FatalErr("Tag stack underflow");  						} else {  							FatalErr(String.Format("Expected end tag '{0}' but found '{1}'"' elementName' endName));  						}  					}  					handler.OnEndElement(elementName);  					break;    				case (int)ActionCode.END_NAME:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					if (currCh != '/' && currCh != '>') break;  					goto case (int)ActionCode.START_ELEM;    				case (int)ActionCode.SET_ATTR_NAME:  					lastAttrName = sbChars.ToString();  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.SET_ATTR_VAL:  					if (lastAttrName == null) FatalErr("Internal error.");  					attrList.Add(lastAttrName' sbChars.ToString());  					sbChars = new StringBuilder();  					lastAttrName = null;  					break;    				case (int)ActionCode.SEND_CHARS:  					handler.OnChars(sbChars.ToString());  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.START_CDATA:  					string cdata = "CDATA[";  					isComment = false;  					isDTD = false;    					if (currCh == '-') {  						currCh = reader.Read();    						if (currCh != '-') FatalErr("Invalid comment");    						this.col++;  						isComment = true;  						twoCharBuff[0] = -1;  						twoCharBuff[1] = -1;  					} else {  						if (currCh != '[') {  							isDTD = true;  							bracketSwitch = 0;  							break;  						}    						for (int i = 0; i < cdata.Length; i++) {  							if (reader.Read() != cdata[i]) {  								this.col += i+1;  								break;  							}  						}  						this.col += cdata.Length;  						seenCData = true;  					}  					break;    				case (int)ActionCode.END_CDATA:  					int n = 0;  					currCh = ']';    					while (currCh == ']') {  						currCh = reader.Read();  						n++;  					}    					if (currCh != '>') {  						for (int i = 0; i < n; i++) sbChars.Append(']');  						sbChars.Append((char)currCh);  						stateCode = 0x12;  					} else {  						for (int i = 0; i < n-2; i++) sbChars.Append(']');  						seenCData = false;  					}    					this.col += n;  					break;    				case (int)ActionCode.ERROR:  					FatalErr(String.Format("Error {0}"' stateCode));  					break;    				case (int)ActionCode.STATE_CHANGE:  					break;    				case (int)ActionCode.FLUSH_CHARS_STATE_CHANGE:  					sbChars = new StringBuilder();  					if (currCh != '<') goto case (int)ActionCode.ACC_CHARS_STATE_CHANGE;  					break;    				case (int)ActionCode.ACC_CHARS_STATE_CHANGE:  					sbChars.Append((char)currCh);  					break;    				case (int)ActionCode.ACC_CDATA:  					if (isComment) {  						if (currCh == '>'  							&& twoCharBuff[0] == '-'  							&& twoCharBuff[1] == '-') {  							isComment = false;  							stateCode = 0;  						} else {  							twoCharBuff[0] = twoCharBuff[1];  							twoCharBuff[1] = currCh;  						}  					} else if (isDTD) {  						if (currCh == '<' || currCh == '>') bracketSwitch ^= 1;  						if (currCh == '>' && bracketSwitch != 0) {  							isDTD = false;  							stateCode = 0;  						}  					} else {  						if (this.splitCData  							&& sbChars.Length > 0  							&& seenCData) {  							handler.OnChars(sbChars.ToString());  							sbChars = new StringBuilder();  						}  						seenCData = false;  						sbChars.Append((char)currCh);  					}  					break;    				case (int)ActionCode.PROC_CHAR_REF:  					currCh = reader.Read();  					int cl = this.col + 1;  					if (currCh == '#') {    // character reference  						int r = 10;  						int chCode = 0;  						int nDigits = 0;  						currCh = reader.Read();  						cl++;    						if (currCh == 'x') {  							currCh = reader.Read();  							cl++;  							r=16;  						}    						NumberStyles style = r == 16 ? NumberStyles.HexNumber : NumberStyles.Integer;    						while (true) {  							int x = -1;  							if (Char.IsNumber((char)currCh) || "abcdef".IndexOf(Char.ToLower((char)currCh)) != -1) {  								try {  									x = Int32.Parse(new string((char)currCh' 1)' style);  								} catch (FormatException) {x = -1;}  							}  							if (x == -1) break;  							chCode *= r;  							chCode += x;  							nDigits++;  							currCh = reader.Read();  							cl++;  						}    						if (currCh == ';' && nDigits > 0) {  							sbChars.Append((char)chCode);  						} else {  							FatalErr("Bad char ref");  						}  					} else {  						// entity reference  						string entityRefChars = "aglmopqstu"; // amp | apos | quot | gt | lt  						string entities = "&'\"><";    						int pos = 0;  						int entIdx = 0xF;  						int predShift = 0;    						int sbLen = sbChars.Length;    						while (true) {  							if (pos != 0xF) pos = entityRefChars.IndexOf((char)currCh) & 0xF;  							if (pos == 0xF) FatalErr(errors[7]);  							sbChars.Append((char)currCh);    							int path = "\uFF35\u3F8F\u4F8F\u0F5F\uFF78\uE1F4\u2299\uEEFF\uEEFF\uFF4F"[pos];  							int lBr = (path >> 4) & 0xF;  							int rBr = path & 0xF;  							int lPred = path >> 12;  							int rPred = (path >> 8) & 0xF;  							currCh = reader.Read();  							cl++;  							pos = 0xF;  							if (lBr != 0xF && currCh == entityRefChars[lBr]) {  								if (lPred < 0xE) entIdx = lPred;  //								pred = lPred;  								predShift = 12; // left  							} else if (rBr != 0xF && currCh == entityRefChars[rBr]) {  								if (rPred < 0xE) entIdx = rPred;  //								pred = rPred;  								predShift = 8; // right  							} else if (currCh == ';') {  								if (entIdx != 0xF  									&& predShift != 0  									&& ((path >> predShift) & 0xF) == 0xE) break;  								continue; // pos == 0xF  							}    							pos=0;    						}    						int l = cl - this.col - 1;    						if ((l > 0 && l < 5)  							&&(StrEquals("amp"' sbChars' sbLen' l)  							|| StrEquals("apos"' sbChars' sbLen' l)  							|| StrEquals("quot"' sbChars' sbLen' l)  							|| StrEquals("lt"' sbChars' sbLen' l)  							|| StrEquals("gt"' sbChars' sbLen' l))  							) {  								sbChars.Length = sbLen;  								sbChars.Append(entities[entIdx]);  						} else FatalErr(errors[7]);  					}    					this.col = cl;  					break;    				default:  					FatalErr(String.Format("Unexpected action code - {0}."' actionCode));  					break;  			}
Magic Number,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,Parse,The following statement contains a magic number: switch (actionCode) {  				case (int)ActionCode.START_ELEM:  					handler.OnStartElement(elementName' attrList);  					if (currCh != '/') {  						tagStack.Push(elementName);  					} else {  						handler.OnEndElement(elementName);  					}  					attrList.Clear();  					break;    				case (int)ActionCode.END_ELEM:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					string endName = null;  					if (tagStack.Count == 0 ||  						elementName != (endName = tagStack.Pop() as string)) {  						if (endName == null) {  							FatalErr("Tag stack underflow");  						} else {  							FatalErr(String.Format("Expected end tag '{0}' but found '{1}'"' elementName' endName));  						}  					}  					handler.OnEndElement(elementName);  					break;    				case (int)ActionCode.END_NAME:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					if (currCh != '/' && currCh != '>') break;  					goto case (int)ActionCode.START_ELEM;    				case (int)ActionCode.SET_ATTR_NAME:  					lastAttrName = sbChars.ToString();  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.SET_ATTR_VAL:  					if (lastAttrName == null) FatalErr("Internal error.");  					attrList.Add(lastAttrName' sbChars.ToString());  					sbChars = new StringBuilder();  					lastAttrName = null;  					break;    				case (int)ActionCode.SEND_CHARS:  					handler.OnChars(sbChars.ToString());  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.START_CDATA:  					string cdata = "CDATA[";  					isComment = false;  					isDTD = false;    					if (currCh == '-') {  						currCh = reader.Read();    						if (currCh != '-') FatalErr("Invalid comment");    						this.col++;  						isComment = true;  						twoCharBuff[0] = -1;  						twoCharBuff[1] = -1;  					} else {  						if (currCh != '[') {  							isDTD = true;  							bracketSwitch = 0;  							break;  						}    						for (int i = 0; i < cdata.Length; i++) {  							if (reader.Read() != cdata[i]) {  								this.col += i+1;  								break;  							}  						}  						this.col += cdata.Length;  						seenCData = true;  					}  					break;    				case (int)ActionCode.END_CDATA:  					int n = 0;  					currCh = ']';    					while (currCh == ']') {  						currCh = reader.Read();  						n++;  					}    					if (currCh != '>') {  						for (int i = 0; i < n; i++) sbChars.Append(']');  						sbChars.Append((char)currCh);  						stateCode = 0x12;  					} else {  						for (int i = 0; i < n-2; i++) sbChars.Append(']');  						seenCData = false;  					}    					this.col += n;  					break;    				case (int)ActionCode.ERROR:  					FatalErr(String.Format("Error {0}"' stateCode));  					break;    				case (int)ActionCode.STATE_CHANGE:  					break;    				case (int)ActionCode.FLUSH_CHARS_STATE_CHANGE:  					sbChars = new StringBuilder();  					if (currCh != '<') goto case (int)ActionCode.ACC_CHARS_STATE_CHANGE;  					break;    				case (int)ActionCode.ACC_CHARS_STATE_CHANGE:  					sbChars.Append((char)currCh);  					break;    				case (int)ActionCode.ACC_CDATA:  					if (isComment) {  						if (currCh == '>'  							&& twoCharBuff[0] == '-'  							&& twoCharBuff[1] == '-') {  							isComment = false;  							stateCode = 0;  						} else {  							twoCharBuff[0] = twoCharBuff[1];  							twoCharBuff[1] = currCh;  						}  					} else if (isDTD) {  						if (currCh == '<' || currCh == '>') bracketSwitch ^= 1;  						if (currCh == '>' && bracketSwitch != 0) {  							isDTD = false;  							stateCode = 0;  						}  					} else {  						if (this.splitCData  							&& sbChars.Length > 0  							&& seenCData) {  							handler.OnChars(sbChars.ToString());  							sbChars = new StringBuilder();  						}  						seenCData = false;  						sbChars.Append((char)currCh);  					}  					break;    				case (int)ActionCode.PROC_CHAR_REF:  					currCh = reader.Read();  					int cl = this.col + 1;  					if (currCh == '#') {    // character reference  						int r = 10;  						int chCode = 0;  						int nDigits = 0;  						currCh = reader.Read();  						cl++;    						if (currCh == 'x') {  							currCh = reader.Read();  							cl++;  							r=16;  						}    						NumberStyles style = r == 16 ? NumberStyles.HexNumber : NumberStyles.Integer;    						while (true) {  							int x = -1;  							if (Char.IsNumber((char)currCh) || "abcdef".IndexOf(Char.ToLower((char)currCh)) != -1) {  								try {  									x = Int32.Parse(new string((char)currCh' 1)' style);  								} catch (FormatException) {x = -1;}  							}  							if (x == -1) break;  							chCode *= r;  							chCode += x;  							nDigits++;  							currCh = reader.Read();  							cl++;  						}    						if (currCh == ';' && nDigits > 0) {  							sbChars.Append((char)chCode);  						} else {  							FatalErr("Bad char ref");  						}  					} else {  						// entity reference  						string entityRefChars = "aglmopqstu"; // amp | apos | quot | gt | lt  						string entities = "&'\"><";    						int pos = 0;  						int entIdx = 0xF;  						int predShift = 0;    						int sbLen = sbChars.Length;    						while (true) {  							if (pos != 0xF) pos = entityRefChars.IndexOf((char)currCh) & 0xF;  							if (pos == 0xF) FatalErr(errors[7]);  							sbChars.Append((char)currCh);    							int path = "\uFF35\u3F8F\u4F8F\u0F5F\uFF78\uE1F4\u2299\uEEFF\uEEFF\uFF4F"[pos];  							int lBr = (path >> 4) & 0xF;  							int rBr = path & 0xF;  							int lPred = path >> 12;  							int rPred = (path >> 8) & 0xF;  							currCh = reader.Read();  							cl++;  							pos = 0xF;  							if (lBr != 0xF && currCh == entityRefChars[lBr]) {  								if (lPred < 0xE) entIdx = lPred;  //								pred = lPred;  								predShift = 12; // left  							} else if (rBr != 0xF && currCh == entityRefChars[rBr]) {  								if (rPred < 0xE) entIdx = rPred;  //								pred = rPred;  								predShift = 8; // right  							} else if (currCh == ';') {  								if (entIdx != 0xF  									&& predShift != 0  									&& ((path >> predShift) & 0xF) == 0xE) break;  								continue; // pos == 0xF  							}    							pos=0;    						}    						int l = cl - this.col - 1;    						if ((l > 0 && l < 5)  							&&(StrEquals("amp"' sbChars' sbLen' l)  							|| StrEquals("apos"' sbChars' sbLen' l)  							|| StrEquals("quot"' sbChars' sbLen' l)  							|| StrEquals("lt"' sbChars' sbLen' l)  							|| StrEquals("gt"' sbChars' sbLen' l))  							) {  								sbChars.Length = sbLen;  								sbChars.Append(entities[entIdx]);  						} else FatalErr(errors[7]);  					}    					this.col = cl;  					break;    				default:  					FatalErr(String.Format("Unexpected action code - {0}."' actionCode));  					break;  			}
Magic Number,Mono.Xml,MiniParser,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Xml\MiniParser.cs,Parse,The following statement contains a magic number: switch (actionCode) {  				case (int)ActionCode.START_ELEM:  					handler.OnStartElement(elementName' attrList);  					if (currCh != '/') {  						tagStack.Push(elementName);  					} else {  						handler.OnEndElement(elementName);  					}  					attrList.Clear();  					break;    				case (int)ActionCode.END_ELEM:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					string endName = null;  					if (tagStack.Count == 0 ||  						elementName != (endName = tagStack.Pop() as string)) {  						if (endName == null) {  							FatalErr("Tag stack underflow");  						} else {  							FatalErr(String.Format("Expected end tag '{0}' but found '{1}'"' elementName' endName));  						}  					}  					handler.OnEndElement(elementName);  					break;    				case (int)ActionCode.END_NAME:  					elementName = sbChars.ToString();  					sbChars = new StringBuilder();  					if (currCh != '/' && currCh != '>') break;  					goto case (int)ActionCode.START_ELEM;    				case (int)ActionCode.SET_ATTR_NAME:  					lastAttrName = sbChars.ToString();  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.SET_ATTR_VAL:  					if (lastAttrName == null) FatalErr("Internal error.");  					attrList.Add(lastAttrName' sbChars.ToString());  					sbChars = new StringBuilder();  					lastAttrName = null;  					break;    				case (int)ActionCode.SEND_CHARS:  					handler.OnChars(sbChars.ToString());  					sbChars = new StringBuilder();  					break;    				case (int)ActionCode.START_CDATA:  					string cdata = "CDATA[";  					isComment = false;  					isDTD = false;    					if (currCh == '-') {  						currCh = reader.Read();    						if (currCh != '-') FatalErr("Invalid comment");    						this.col++;  						isComment = true;  						twoCharBuff[0] = -1;  						twoCharBuff[1] = -1;  					} else {  						if (currCh != '[') {  							isDTD = true;  							bracketSwitch = 0;  							break;  						}    						for (int i = 0; i < cdata.Length; i++) {  							if (reader.Read() != cdata[i]) {  								this.col += i+1;  								break;  							}  						}  						this.col += cdata.Length;  						seenCData = true;  					}  					break;    				case (int)ActionCode.END_CDATA:  					int n = 0;  					currCh = ']';    					while (currCh == ']') {  						currCh = reader.Read();  						n++;  					}    					if (currCh != '>') {  						for (int i = 0; i < n; i++) sbChars.Append(']');  						sbChars.Append((char)currCh);  						stateCode = 0x12;  					} else {  						for (int i = 0; i < n-2; i++) sbChars.Append(']');  						seenCData = false;  					}    					this.col += n;  					break;    				case (int)ActionCode.ERROR:  					FatalErr(String.Format("Error {0}"' stateCode));  					break;    				case (int)ActionCode.STATE_CHANGE:  					break;    				case (int)ActionCode.FLUSH_CHARS_STATE_CHANGE:  					sbChars = new StringBuilder();  					if (currCh != '<') goto case (int)ActionCode.ACC_CHARS_STATE_CHANGE;  					break;    				case (int)ActionCode.ACC_CHARS_STATE_CHANGE:  					sbChars.Append((char)currCh);  					break;    				case (int)ActionCode.ACC_CDATA:  					if (isComment) {  						if (currCh == '>'  							&& twoCharBuff[0] == '-'  							&& twoCharBuff[1] == '-') {  							isComment = false;  							stateCode = 0;  						} else {  							twoCharBuff[0] = twoCharBuff[1];  							twoCharBuff[1] = currCh;  						}  					} else if (isDTD) {  						if (currCh == '<' || currCh == '>') bracketSwitch ^= 1;  						if (currCh == '>' && bracketSwitch != 0) {  							isDTD = false;  							stateCode = 0;  						}  					} else {  						if (this.splitCData  							&& sbChars.Length > 0  							&& seenCData) {  							handler.OnChars(sbChars.ToString());  							sbChars = new StringBuilder();  						}  						seenCData = false;  						sbChars.Append((char)currCh);  					}  					break;    				case (int)ActionCode.PROC_CHAR_REF:  					currCh = reader.Read();  					int cl = this.col + 1;  					if (currCh == '#') {    // character reference  						int r = 10;  						int chCode = 0;  						int nDigits = 0;  						currCh = reader.Read();  						cl++;    						if (currCh == 'x') {  							currCh = reader.Read();  							cl++;  							r=16;  						}    						NumberStyles style = r == 16 ? NumberStyles.HexNumber : NumberStyles.Integer;    						while (true) {  							int x = -1;  							if (Char.IsNumber((char)currCh) || "abcdef".IndexOf(Char.ToLower((char)currCh)) != -1) {  								try {  									x = Int32.Parse(new string((char)currCh' 1)' style);  								} catch (FormatException) {x = -1;}  							}  							if (x == -1) break;  							chCode *= r;  							chCode += x;  							nDigits++;  							currCh = reader.Read();  							cl++;  						}    						if (currCh == ';' && nDigits > 0) {  							sbChars.Append((char)chCode);  						} else {  							FatalErr("Bad char ref");  						}  					} else {  						// entity reference  						string entityRefChars = "aglmopqstu"; // amp | apos | quot | gt | lt  						string entities = "&'\"><";    						int pos = 0;  						int entIdx = 0xF;  						int predShift = 0;    						int sbLen = sbChars.Length;    						while (true) {  							if (pos != 0xF) pos = entityRefChars.IndexOf((char)currCh) & 0xF;  							if (pos == 0xF) FatalErr(errors[7]);  							sbChars.Append((char)currCh);    							int path = "\uFF35\u3F8F\u4F8F\u0F5F\uFF78\uE1F4\u2299\uEEFF\uEEFF\uFF4F"[pos];  							int lBr = (path >> 4) & 0xF;  							int rBr = path & 0xF;  							int lPred = path >> 12;  							int rPred = (path >> 8) & 0xF;  							currCh = reader.Read();  							cl++;  							pos = 0xF;  							if (lBr != 0xF && currCh == entityRefChars[lBr]) {  								if (lPred < 0xE) entIdx = lPred;  //								pred = lPred;  								predShift = 12; // left  							} else if (rBr != 0xF && currCh == entityRefChars[rBr]) {  								if (rPred < 0xE) entIdx = rPred;  //								pred = rPred;  								predShift = 8; // right  							} else if (currCh == ';') {  								if (entIdx != 0xF  									&& predShift != 0  									&& ((path >> predShift) & 0xF) == 0xE) break;  								continue; // pos == 0xF  							}    							pos=0;    						}    						int l = cl - this.col - 1;    						if ((l > 0 && l < 5)  							&&(StrEquals("amp"' sbChars' sbLen' l)  							|| StrEquals("apos"' sbChars' sbLen' l)  							|| StrEquals("quot"' sbChars' sbLen' l)  							|| StrEquals("lt"' sbChars' sbLen' l)  							|| StrEquals("gt"' sbChars' sbLen' l))  							) {  								sbChars.Length = sbLen;  								sbChars.Append(entities[entIdx]);  						} else FatalErr(errors[7]);  					}    					this.col = cl;  					break;    				default:  					FatalErr(String.Format("Unexpected action code - {0}."' actionCode));  					break;  			}
Magic Number,Revenj.Serialization,BinarySerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\BinarySerialization.cs,Decompress,The following statement contains a magic number: var array = new byte[8192];
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization,JsonSerialization,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\JsonSerialization.cs,IsWhiteSpace,The following statement contains a magic number: switch (c)  			{  				case 9:  				case 10:  				case 11:  				case 12:  				case 13:  				case 32:  				case 160:  				case 5760:  				case 8192:  				case 8193:  				case 8194:  				case 8195:  				case 8196:  				case 8197:  				case 8198:  				case 8199:  				case 8200:  				case 8201:  				case 8202:  				case 8232:  				case 8233:  				case 8239:  				case 8287:  				case 12288:  					return true;  				default:  					return false;  			}
Magic Number,Revenj.Serialization.Json.Converters,BinaryConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BinaryConverter.cs,BinaryConverter,The following statement contains a magic number: Buffers.Add(new char[65536]);
Magic Number,Revenj.Serialization.Json.Converters,BinaryConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BinaryConverter.cs,BinaryConverter,The following statement contains a magic number: i < Environment.ProcessorCount / 2 + 1
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,SaveWithLocal,The following statement contains a magic number: buffer[end + 3] = ':';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,SaveWithLocal,The following statement contains a magic number: NumberConverter.Write2(offset.Minutes' buffer' end + 4);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,SaveWithLocal,The following statement contains a magic number: buffer[end + 6] = '"';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,SaveWithLocal,The following statement contains a magic number: sw.Write(buffer' 0' end + 7);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,SaveWithOffset,The following statement contains a magic number: buffer[end + 3] = ':';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,SaveWithOffset,The following statement contains a magic number: NumberConverter.Write2(offset.Minutes' buffer' end + 4);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,SaveWithOffset,The following statement contains a magic number: buffer[end + 6] = ':';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,SaveWithOffset,The following statement contains a magic number: NumberConverter.Write2(offset.Seconds' buffer' end + 4);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,SaveWithOffset,The following statement contains a magic number: buffer[end + 9] = '"';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,SaveWithOffset,The following statement contains a magic number: sw.Write(buffer' 0' end + 10);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,SerializeDate,The following statement contains a magic number: buffer[5] = '-';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,SerializeDate,The following statement contains a magic number: buffer[8] = '-';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,SerializeDate,The following statement contains a magic number: buffer[11] = '"';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,SerializeDate,The following statement contains a magic number: NumberConverter.Write2(value.Month' buffer' 6);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,SerializeDate,The following statement contains a magic number: NumberConverter.Write2(value.Day' buffer' 9);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,SerializeDate,The following statement contains a magic number: sw.Write(buffer' 0' 12);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: buffer[5] = '-';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: buffer[8] = '-';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: buffer[11] = 'T';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: buffer[14] = ':';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: buffer[17] = ':';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Month' buffer' 6);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Day' buffer' 9);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Hour' buffer' 12);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Minute' buffer' 15);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Second' buffer' 18);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: buffer[20] = '.';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: var div = nano / 100;
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: var div2 = div / 100;
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: var rem = nano - div * 100;
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write3(div2' buffer' 21);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(div - div2 * 100' buffer' 24);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(div - div2 * 100' buffer' 24);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(rem' buffer' 26);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: end = 28;
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: buffer[5] = '-';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: buffer[8] = '-';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: buffer[11] = 'T';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: buffer[14] = ':';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: buffer[17] = ':';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Month' buffer' 6);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Day' buffer' 9);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Hour' buffer' 12);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Minute' buffer' 15);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(value.Second' buffer' 18);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: buffer[20] = '.';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: var div = nano / 100;
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: var div2 = div / 100;
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: var rem = nano - div * 100;
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write3(div2' buffer' 21);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(div - div2 * 100' buffer' 24);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(div - div2 * 100' buffer' 24);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: NumberConverter.Write2(rem' buffer' 26);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: end = 28;
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,Serialize,The following statement contains a magic number: sw.Write(buffer' 0' end + 2);
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeDate,The following statement contains a magic number: year = year * 10 + (nextToken - '0');
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeDate,The following statement contains a magic number: i < 6 && (nextToken != '-')
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeDate,The following statement contains a magic number: int month = nextToken - 48;
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeDate,The following statement contains a magic number: month = month * 10 + (nextToken - '0');
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeDate,The following statement contains a magic number: int day = nextToken - 48;
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeDate,The following statement contains a magic number: day = day * 10 + (nextToken - '0');
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeDate,The following statement contains a magic number: i < 24 && nextToken != '"'
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var year = 1000 * (buffer[0] - '0') + 100 * (buffer[1] - '0') + 10 * (buffer[2] - '0') + buffer[3] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var year = 1000 * (buffer[0] - '0') + 100 * (buffer[1] - '0') + 10 * (buffer[2] - '0') + buffer[3] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var year = 1000 * (buffer[0] - '0') + 100 * (buffer[1] - '0') + 10 * (buffer[2] - '0') + buffer[3] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var year = 1000 * (buffer[0] - '0') + 100 * (buffer[1] - '0') + 10 * (buffer[2] - '0') + buffer[3] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var year = 1000 * (buffer[0] - '0') + 100 * (buffer[1] - '0') + 10 * (buffer[2] - '0') + buffer[3] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var month = 10 * (buffer[5] - '0') + buffer[6] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var month = 10 * (buffer[5] - '0') + buffer[6] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var month = 10 * (buffer[5] - '0') + buffer[6] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var day = 10 * (buffer[8] - '0') + buffer[9] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var day = 10 * (buffer[8] - '0') + buffer[9] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var day = 10 * (buffer[8] - '0') + buffer[9] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var hour = 10 * (buffer[11] - '0') + buffer[12] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var hour = 10 * (buffer[11] - '0') + buffer[12] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var hour = 10 * (buffer[11] - '0') + buffer[12] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var min = 10 * (buffer[14] - '0') + buffer[15] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var min = 10 * (buffer[14] - '0') + buffer[15] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var min = 10 * (buffer[14] - '0') + buffer[15] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var sec = 10 * (buffer[17] - '0') + buffer[18] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var sec = 10 * (buffer[17] - '0') + buffer[18] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: var sec = 10 * (buffer[17] - '0') + buffer[18] - '0';
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: switch (i)  							{  								case 22:  									nanos = 1000000 * (buffer[20] - 48);  									break;  								case 23:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48);  									break;  								case 24:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48);  									break;  								case 25:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48);  									break;  								case 26:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48);  									break;  								case 27:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48);  									break;  								default:  									nanos = 1000000 * (buffer[20] - 48) + 100000 * (buffer[21] - 48) + 10000 * (buffer[22] - 48) + 1000 * (buffer[23] - 48) + 100 * (buffer[24] - 48) + 10 * (buffer[25] - 48) + buffer[26] - 48;  									break;  							}
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: buffer[19] == '.'
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: i > 18 && i < 29 && buffer[4] == '-' && buffer[7] == '-'  						&& (buffer[10] == 'T' || buffer[10] == 't' || buffer[10] == ' ')  						&& buffer[13] == ':' && buffer[16] == ':' && AllDigits(buffer' 20' i - 1)
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: i > 18 && i < 29 && buffer[4] == '-' && buffer[7] == '-'  						&& (buffer[10] == 'T' || buffer[10] == 't' || buffer[10] == ' ')  						&& buffer[13] == ':' && buffer[16] == ':' && AllDigits(buffer' 20' i - 1)
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: i > 18 && i < 29 && buffer[4] == '-' && buffer[7] == '-'  						&& (buffer[10] == 'T' || buffer[10] == 't' || buffer[10] == ' ')  						&& buffer[13] == ':' && buffer[16] == ':' && AllDigits(buffer' 20' i - 1)
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: i > 18 && i < 29 && buffer[4] == '-' && buffer[7] == '-'  						&& (buffer[10] == 'T' || buffer[10] == 't' || buffer[10] == ' ')  						&& buffer[13] == ':' && buffer[16] == ':' && AllDigits(buffer' 20' i - 1)
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: i > 18 && i < 29 && buffer[4] == '-' && buffer[7] == '-'  						&& (buffer[10] == 'T' || buffer[10] == 't' || buffer[10] == ' ')  						&& buffer[13] == ':' && buffer[16] == ':' && AllDigits(buffer' 20' i - 1)
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: i > 18 && i < 29 && buffer[4] == '-' && buffer[7] == '-'  						&& (buffer[10] == 'T' || buffer[10] == 't' || buffer[10] == ' ')  						&& buffer[13] == ':' && buffer[16] == ':' && AllDigits(buffer' 20' i - 1)
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: i > 18 && i < 29 && buffer[4] == '-' && buffer[7] == '-'  						&& (buffer[10] == 'T' || buffer[10] == 't' || buffer[10] == ' ')  						&& buffer[13] == ':' && buffer[16] == ':' && AllDigits(buffer' 20' i - 1)
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: i > 18 && i < 29 && buffer[4] == '-' && buffer[7] == '-'  						&& (buffer[10] == 'T' || buffer[10] == 't' || buffer[10] == ' ')  						&& buffer[13] == ':' && buffer[16] == ':' && AllDigits(buffer' 20' i - 1)
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: i > 18 && i < 29 && buffer[4] == '-' && buffer[7] == '-'  						&& (buffer[10] == 'T' || buffer[10] == 't' || buffer[10] == ' ')  						&& buffer[13] == ':' && buffer[16] == ':' && AllDigits(buffer' 20' i - 1)
Magic Number,Revenj.Serialization.Json.Converters,DateTimeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DateTimeConverter.cs,DeserializeTimestamp,The following statement contains a magic number: i > 18 && i < 29 && buffer[4] == '-' && buffer[7] == '-'  						&& (buffer[10] == 'T' || buffer[10] == 't' || buffer[10] == ' ')  						&& buffer[13] == ':' && buffer[16] == ':' && AllDigits(buffer' 20' i - 1)
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,GuidConverter,The following statement contains a magic number: Lookup = new Pair[256];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,GuidConverter,The following statement contains a magic number: Values[c - '0'] = (byte)(c - 'a' + 10);
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,GuidConverter,The following statement contains a magic number: Values[c - '0'] = (byte)(c - 'A' + 10);
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: var l = Lookup[(a >> 24) & 255];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: var l = Lookup[(a >> 24) & 255];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[2] = l.Second;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[(a >> 16) & 255];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[(a >> 16) & 255];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[3] = l.First;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[4] = l.Second;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[(a >> 8) & 255];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[(a >> 8) & 255];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[5] = l.First;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[6] = l.Second;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[a & 255];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[7] = l.First;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[8] = l.Second;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[9] = '-';
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[(b >> 8) & 255];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[(b >> 8) & 255];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[10] = l.First;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[11] = l.Second;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[b & 255];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[12] = l.First;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[13] = l.Second;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[14] = '-';
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[(c >> 8) & 255];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[(c >> 8) & 255];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[15] = l.First;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[16] = l.Second;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: l = Lookup[c & 255];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[17] = l.First;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[18] = l.Second;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[19] = '-';
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[20] = l.First;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[21] = l.Second;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[22] = l.First;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[23] = l.Second;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[24] = '-';
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[25] = l.First;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[26] = l.Second;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[27] = l.First;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[28] = l.Second;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[29] = l.First;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[30] = l.Second;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[31] = l.First;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[32] = l.Second;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[33] = l.First;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[34] = l.Second;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[35] = l.First;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[36] = l.Second;
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: buffer[37] = '"';
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Serialize,The following statement contains a magic number: sw.Write(buffer' 0' 38);
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Deserialize,The following statement contains a magic number: var i = sr.Read(buffer' 0' 33);
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Deserialize,The following statement contains a magic number: i == 33
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: a = (a << 4) + Values[buffer[x] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: x < 8 && x < buffer.Length
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: b = (b << 4) + Values[buffer[x] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: x < 12 && x < buffer.Length
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: c = (c << 4) + Values[buffer[x] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: x < 16 && x < buffer.Length
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int d = (Values[buffer[16] - '0'] << 4) + Values[buffer[17] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int d = (Values[buffer[16] - '0'] << 4) + Values[buffer[17] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int d = (Values[buffer[16] - '0'] << 4) + Values[buffer[17] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int e = (Values[buffer[18] - '0'] << 4) + Values[buffer[19] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int e = (Values[buffer[18] - '0'] << 4) + Values[buffer[19] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int e = (Values[buffer[18] - '0'] << 4) + Values[buffer[19] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int f = (Values[buffer[20] - '0'] << 4) + Values[buffer[21] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int f = (Values[buffer[20] - '0'] << 4) + Values[buffer[21] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int f = (Values[buffer[20] - '0'] << 4) + Values[buffer[21] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int g = (Values[buffer[22] - '0'] << 4) + Values[buffer[23] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int g = (Values[buffer[22] - '0'] << 4) + Values[buffer[23] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int g = (Values[buffer[22] - '0'] << 4) + Values[buffer[23] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int h = (Values[buffer[24] - '0'] << 4) + Values[buffer[25] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int h = (Values[buffer[24] - '0'] << 4) + Values[buffer[25] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int h = (Values[buffer[24] - '0'] << 4) + Values[buffer[25] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int i = (Values[buffer[26] - '0'] << 4) + Values[buffer[27] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int i = (Values[buffer[26] - '0'] << 4) + Values[buffer[27] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int i = (Values[buffer[26] - '0'] << 4) + Values[buffer[27] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int j = (Values[buffer[28] - '0'] << 4) + Values[buffer[29] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int j = (Values[buffer[28] - '0'] << 4) + Values[buffer[29] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int j = (Values[buffer[28] - '0'] << 4) + Values[buffer[29] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int k = (Values[buffer[30] - '0'] << 4) + Values[buffer[31] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int k = (Values[buffer[30] - '0'] << 4) + Values[buffer[31] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid32,The following statement contains a magic number: int k = (Values[buffer[30] - '0'] << 4) + Values[buffer[31] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: return new Guid(new string(buffer' 0' 36));
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: buffer[8] != '-' || buffer[13] != '-' || buffer[18] != '-' || buffer[23] != '-'
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: buffer[8] != '-' || buffer[13] != '-' || buffer[18] != '-' || buffer[23] != '-'
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: buffer[8] != '-' || buffer[13] != '-' || buffer[18] != '-' || buffer[23] != '-'
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: buffer[8] != '-' || buffer[13] != '-' || buffer[18] != '-' || buffer[23] != '-'
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: a = (a << 4) + Values[buffer[x] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: x < 8 && x < buffer.Length
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: b = (b << 4) + Values[buffer[x] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: x < 13 && x < buffer.Length
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: c = (c << 4) + Values[buffer[x] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: x < 18 && x < buffer.Length
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int d = (Values[buffer[19] - '0'] << 4) + Values[buffer[20] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int d = (Values[buffer[19] - '0'] << 4) + Values[buffer[20] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int d = (Values[buffer[19] - '0'] << 4) + Values[buffer[20] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int e = (Values[buffer[21] - '0'] << 4) + Values[buffer[22] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int e = (Values[buffer[21] - '0'] << 4) + Values[buffer[22] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int e = (Values[buffer[21] - '0'] << 4) + Values[buffer[22] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int f = (Values[buffer[24] - '0'] << 4) + Values[buffer[25] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int f = (Values[buffer[24] - '0'] << 4) + Values[buffer[25] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int f = (Values[buffer[24] - '0'] << 4) + Values[buffer[25] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int g = (Values[buffer[26] - '0'] << 4) + Values[buffer[27] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int g = (Values[buffer[26] - '0'] << 4) + Values[buffer[27] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int g = (Values[buffer[26] - '0'] << 4) + Values[buffer[27] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int h = (Values[buffer[28] - '0'] << 4) + Values[buffer[29] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int h = (Values[buffer[28] - '0'] << 4) + Values[buffer[29] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int h = (Values[buffer[28] - '0'] << 4) + Values[buffer[29] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int i = (Values[buffer[30] - '0'] << 4) + Values[buffer[31] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int i = (Values[buffer[30] - '0'] << 4) + Values[buffer[31] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int i = (Values[buffer[30] - '0'] << 4) + Values[buffer[31] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int j = (Values[buffer[32] - '0'] << 4) + Values[buffer[33] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int j = (Values[buffer[32] - '0'] << 4) + Values[buffer[33] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int j = (Values[buffer[32] - '0'] << 4) + Values[buffer[33] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int k = (Values[buffer[34] - '0'] << 4) + Values[buffer[35] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int k = (Values[buffer[34] - '0'] << 4) + Values[buffer[35] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,GuidConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,ParseGuid36,The following statement contains a magic number: int k = (Values[buffer[34] - '0'] << 4) + Values[buffer[35] - '0'];
Magic Number,Revenj.Serialization.Json.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: var hi = (value >> 4) & 15;
Magic Number,Revenj.Serialization.Json.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: var hi = (value >> 4) & 15;
Magic Number,Revenj.Serialization.Json.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: var lo = value & 15;
Magic Number,Revenj.Serialization.Json.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: First = (char)(hi < 10 ? '0' + hi : 'a' + hi - 10);
Magic Number,Revenj.Serialization.Json.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: First = (char)(hi < 10 ? '0' + hi : 'a' + hi - 10);
Magic Number,Revenj.Serialization.Json.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: Second = (char)(lo < 10 ? '0' + lo : 'a' + lo - 10);
Magic Number,Revenj.Serialization.Json.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: Second = (char)(lo < 10 ? '0' + lo : 'a' + lo - 10);
Magic Number,Revenj.Serialization.Json.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: First = (char)((number / 10) + '0');
Magic Number,Revenj.Serialization.Json.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: Second = (char)((number % 10) + '0');
Magic Number,Revenj.Serialization.Json.Converters,Pair,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\GuidConverter.cs,Pair,The following statement contains a magic number: Offset = number < 10 ? (byte)1 : (byte)0;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,NumberConverter,The following statement contains a magic number: Numbers = new Pair[100];
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,Write3,The following statement contains a magic number: var hi = number / 100;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,Write3,The following statement contains a magic number: var pair = Numbers[number - hi * 100];
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,Write3,The following statement contains a magic number: buffer[start + 2] = pair.Second;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,Write4,The following statement contains a magic number: var div = number / 100;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,Write4,The following statement contains a magic number: var rem = number - div * 100;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,Write4,The following statement contains a magic number: buffer[start + 2] = pair2.First;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,Write4,The following statement contains a magic number: buffer[start + 3] = pair2.Second;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,Serialize,The following statement contains a magic number: int pos = 10;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,Serialize,The following statement contains a magic number: var div = abs / 100;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,Serialize,The following statement contains a magic number: var rem = abs - div * 100;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,Serialize,The following statement contains a magic number: sw.Write(buffer' pos + 1' 10 - pos);
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,Serialize,The following statement contains a magic number: int pos = 20;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,Serialize,The following statement contains a magic number: var div = abs / 100;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,Serialize,The following statement contains a magic number: var rem = abs - div * 100;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,Serialize,The following statement contains a magic number: sw.Write(buffer' pos + 1' 20 - pos);
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeDecimal,The following statement contains a magic number: nextToken = sr.Read(2);
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToDecimal,The following statement contains a magic number: len > 18
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToDecimal,The following statement contains a magic number: return new decimal((int)value' (int)(value >> 32)' 0' neg' (byte)scale);
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeShort,The following statement contains a magic number: nextToken = sr.Read(2);
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToShort,The following statement contains a magic number: switch (ch)  			{  				case '+':  					i = 1;  					break;  				case '-':  					for (i = 1; i < len; i++)  					{  						ch = buf[i];  						int ind = buf[i] - 48;  						value = (value << 3) + (value << 1) - ind;  						if (ind < 0 || ind > 9)  							return ConvertToShortGeneric(buf' len);  					}  					return (short)value;  			}
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToShort,The following statement contains a magic number: switch (ch)  			{  				case '+':  					i = 1;  					break;  				case '-':  					for (i = 1; i < len; i++)  					{  						ch = buf[i];  						int ind = buf[i] - 48;  						value = (value << 3) + (value << 1) - ind;  						if (ind < 0 || ind > 9)  							return ConvertToShortGeneric(buf' len);  					}  					return (short)value;  			}
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToShort,The following statement contains a magic number: switch (ch)  			{  				case '+':  					i = 1;  					break;  				case '-':  					for (i = 1; i < len; i++)  					{  						ch = buf[i];  						int ind = buf[i] - 48;  						value = (value << 3) + (value << 1) - ind;  						if (ind < 0 || ind > 9)  							return ConvertToShortGeneric(buf' len);  					}  					return (short)value;  			}
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToShort,The following statement contains a magic number: int ind = buf[i] - 48;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToShort,The following statement contains a magic number: value = (value << 3) + (value << 1) + ind;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToShort,The following statement contains a magic number: ind < 0 || ind > 9
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeInt,The following statement contains a magic number: nextToken = sr.Read(2);
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToInt,The following statement contains a magic number: switch (ch)  			{  				case '+':  					i = 1;  					break;  				case '-':  					for (i = 1; i < len; i++)  					{  						ch = buf[i];  						int ind = buf[i] - 48;  						value = (value << 3) + (value << 1) - ind;  						if (ind < 0 || ind > 9)  							return ConvertToIntGeneric(buf' len);  					}  					return value;  			}
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToInt,The following statement contains a magic number: switch (ch)  			{  				case '+':  					i = 1;  					break;  				case '-':  					for (i = 1; i < len; i++)  					{  						ch = buf[i];  						int ind = buf[i] - 48;  						value = (value << 3) + (value << 1) - ind;  						if (ind < 0 || ind > 9)  							return ConvertToIntGeneric(buf' len);  					}  					return value;  			}
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToInt,The following statement contains a magic number: switch (ch)  			{  				case '+':  					i = 1;  					break;  				case '-':  					for (i = 1; i < len; i++)  					{  						ch = buf[i];  						int ind = buf[i] - 48;  						value = (value << 3) + (value << 1) - ind;  						if (ind < 0 || ind > 9)  							return ConvertToIntGeneric(buf' len);  					}  					return value;  			}
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToInt,The following statement contains a magic number: int ind = buf[i] - 48;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToInt,The following statement contains a magic number: value = (value << 3) + (value << 1) + ind;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToInt,The following statement contains a magic number: ind < 0 || ind > 9
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeLong,The following statement contains a magic number: nextToken = sr.Read(2);
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToLong,The following statement contains a magic number: switch (ch)  			{  				case '+':  					i = 1;  					break;  				case '-':  					for (i = 1; i < len; i++)  					{  						ch = buf[i];  						int ind = buf[i] - 48;  						value = (value << 3) + (value << 1) - ind;  						if (ind < 0 || ind > 9)  							return ConvertToLongGeneric(buf' len);  					}  					return value;  			}
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToLong,The following statement contains a magic number: switch (ch)  			{  				case '+':  					i = 1;  					break;  				case '-':  					for (i = 1; i < len; i++)  					{  						ch = buf[i];  						int ind = buf[i] - 48;  						value = (value << 3) + (value << 1) - ind;  						if (ind < 0 || ind > 9)  							return ConvertToLongGeneric(buf' len);  					}  					return value;  			}
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToLong,The following statement contains a magic number: switch (ch)  			{  				case '+':  					i = 1;  					break;  				case '-':  					for (i = 1; i < len; i++)  					{  						ch = buf[i];  						int ind = buf[i] - 48;  						value = (value << 3) + (value << 1) - ind;  						if (ind < 0 || ind > 9)  							return ConvertToLongGeneric(buf' len);  					}  					return value;  			}
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToLong,The following statement contains a magic number: int ind = buf[i] - 48;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToLong,The following statement contains a magic number: value = (value << 3) + (value << 1) + ind;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToLong,The following statement contains a magic number: ind < 0 || ind > 9
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeDouble,The following statement contains a magic number: nextToken = sr.Read(2);
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToDouble,The following statement contains a magic number: len > 18
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToDouble,The following statement contains a magic number: int ind = buf[i] - 48;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToDouble,The following statement contains a magic number: value = (value << 3) + (value << 1) + ind;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToDouble,The following statement contains a magic number: ind < 0 || ind > 9
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToDouble,The following statement contains a magic number: int ind = buf[i] - 48;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToDouble,The following statement contains a magic number: div = (div << 3) + (div << 1);
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToDouble,The following statement contains a magic number: value = (value << 3) + (value << 1) + ind;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToDouble,The following statement contains a magic number: ind < 0 || ind > 9
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,DeserializeFloat,The following statement contains a magic number: nextToken = sr.Read(2);
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToFloat,The following statement contains a magic number: len > 18
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToFloat,The following statement contains a magic number: int ind = buf[i] - 48;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToFloat,The following statement contains a magic number: value = (value << 3) + (value << 1) + ind;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToFloat,The following statement contains a magic number: ind < 0 || ind > 9
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToFloat,The following statement contains a magic number: int ind = buf[i] - 48;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToFloat,The following statement contains a magic number: div = (div << 3) + (div << 1);
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToFloat,The following statement contains a magic number: value = (value << 3) + (value << 1) + ind;
Magic Number,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToFloat,The following statement contains a magic number: ind < 0 || ind > 9
Magic Number,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,Serialize,The following statement contains a magic number: ch < 32 || ch == '"' || ch == '\\'
Magic Number,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,SerializeEscaped,The following statement contains a magic number: var cnt = escaped / 32768;
Magic Number,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,SerializeEscaped,The following statement contains a magic number: var next = ind + 32768;
Magic Number,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,SerializePart,The following statement contains a magic number: c < 32 || c == '"' || c == '\\'
Magic Number,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,Deserialize,The following statement contains a magic number: nextToken = sr.Read(2);
Magic Number,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,Deserialize,The following statement contains a magic number: switch (nextToken)  				{  					case 'b': sr.AddToBuffer('\b'); break;  					case 't': sr.AddToBuffer('\t'); break;  					case 'r': sr.AddToBuffer('\r'); break;  					case 'n': sr.AddToBuffer('\n'); break;  					case 'f': sr.AddToBuffer('\f'); break;  					case 'u':  						var len = sr.Read(tmp' 0' 4);  						if (len < 4) sr.Read(tmp' len' 4 - len);//the second one must succeed  						sr.AddToBuffer((char)Convert.ToInt32(new string(tmp' 0' 4)' 16));//TODO: optimize to no allocation  						break;  					default:  						sr.AddToBuffer((char)nextToken);  						break;  				}
Magic Number,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,Deserialize,The following statement contains a magic number: switch (nextToken)  				{  					case 'b': sr.AddToBuffer('\b'); break;  					case 't': sr.AddToBuffer('\t'); break;  					case 'r': sr.AddToBuffer('\r'); break;  					case 'n': sr.AddToBuffer('\n'); break;  					case 'f': sr.AddToBuffer('\f'); break;  					case 'u':  						var len = sr.Read(tmp' 0' 4);  						if (len < 4) sr.Read(tmp' len' 4 - len);//the second one must succeed  						sr.AddToBuffer((char)Convert.ToInt32(new string(tmp' 0' 4)' 16));//TODO: optimize to no allocation  						break;  					default:  						sr.AddToBuffer((char)nextToken);  						break;  				}
Magic Number,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,Deserialize,The following statement contains a magic number: switch (nextToken)  				{  					case 'b': sr.AddToBuffer('\b'); break;  					case 't': sr.AddToBuffer('\t'); break;  					case 'r': sr.AddToBuffer('\r'); break;  					case 'n': sr.AddToBuffer('\n'); break;  					case 'f': sr.AddToBuffer('\f'); break;  					case 'u':  						var len = sr.Read(tmp' 0' 4);  						if (len < 4) sr.Read(tmp' len' 4 - len);//the second one must succeed  						sr.AddToBuffer((char)Convert.ToInt32(new string(tmp' 0' 4)' 16));//TODO: optimize to no allocation  						break;  					default:  						sr.AddToBuffer((char)nextToken);  						break;  				}
Magic Number,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,Deserialize,The following statement contains a magic number: switch (nextToken)  				{  					case 'b': sr.AddToBuffer('\b'); break;  					case 't': sr.AddToBuffer('\t'); break;  					case 'r': sr.AddToBuffer('\r'); break;  					case 'n': sr.AddToBuffer('\n'); break;  					case 'f': sr.AddToBuffer('\f'); break;  					case 'u':  						var len = sr.Read(tmp' 0' 4);  						if (len < 4) sr.Read(tmp' len' 4 - len);//the second one must succeed  						sr.AddToBuffer((char)Convert.ToInt32(new string(tmp' 0' 4)' 16));//TODO: optimize to no allocation  						break;  					default:  						sr.AddToBuffer((char)nextToken);  						break;  				}
Magic Number,Revenj.Serialization.Json.Converters,StringConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\StringConverter.cs,Deserialize,The following statement contains a magic number: switch (nextToken)  				{  					case 'b': sr.AddToBuffer('\b'); break;  					case 't': sr.AddToBuffer('\t'); break;  					case 'r': sr.AddToBuffer('\r'); break;  					case 'n': sr.AddToBuffer('\n'); break;  					case 'f': sr.AddToBuffer('\f'); break;  					case 'u':  						var len = sr.Read(tmp' 0' 4);  						if (len < 4) sr.Read(tmp' len' 4 - len);//the second one must succeed  						sr.AddToBuffer((char)Convert.ToInt32(new string(tmp' 0' 4)' 16));//TODO: optimize to no allocation  						break;  					default:  						sr.AddToBuffer((char)nextToken);  						break;  				}
Magic Number,Revenj.Serialization.Json.Converters,XmlConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\XmlConverter.cs,Serialize,The following statement contains a magic number: (len = reader.Read(buf' 0' 4096)) > 0
Magic Number,Revenj.Utility,DynamicOrderBy,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\DynamicOrderBy.cs,ApplyOrderBy,The following statement contains a magic number: return (IOrderedQueryable<T>)typeof(Queryable).GetMethods().Single(  				method => method.Name == methodName  						&& method.IsGenericMethodDefinition  						&& method.GetGenericArguments().Length == 2  						&& method.GetParameters().Length == 2)  				.MakeGenericMethod(typeof(T)' type)  				.Invoke(null' new object[] { collection' lambda });
Magic Number,Revenj.Utility,DynamicOrderBy,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\DynamicOrderBy.cs,ApplyOrderBy,The following statement contains a magic number: return (IOrderedQueryable<T>)typeof(Queryable).GetMethods().Single(  				method => method.Name == methodName  						&& method.IsGenericMethodDefinition  						&& method.GetGenericArguments().Length == 2  						&& method.GetParameters().Length == 2)  				.MakeGenericMethod(typeof(T)' type)  				.Invoke(null' new object[] { collection' lambda });
Magic Number,Revenj.Utility,PdfConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\PdfConverter.cs,PdfConverter,The following statement contains a magic number: PdfConverterTimeout = 20;
Magic Number,Revenj.Utility,PdfConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\PdfConverter.cs,RunConverter,The following statement contains a magic number: !process.WaitForExit(PdfConverterTimeout * 1000)
Magic Number,Revenj.Utility,StableHashCode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\StableHashCode.cs,HashString,The following statement contains a magic number: int hash = 23;
Magic Number,Revenj.Utility,StableHashCode,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\StableHashCode.cs,HashString,The following statement contains a magic number: hash = hash * 31 + c;
Magic Number,Revenj.Utility,BufferedTextReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\Streams\BufferedTextReader.cs,FillUntil,The following statement contains a magic number: var tmp = new char[WorkingBuffer.Length * 2];
Magic Number,Revenj.Utility,BufferedTextReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\Streams\BufferedTextReader.cs,FillUntil,The following statement contains a magic number: var tmp = new char[WorkingBuffer.Length * 2];
Magic Number,Revenj.Utility,BufferedTextReader,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\Streams\BufferedTextReader.cs,AddToBuffer,The following statement contains a magic number: var tmp = new char[WorkingBuffer.Length * 2];
Magic Number,Revenj.Utility,ChunkedMemoryStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\Streams\ChunkedMemoryStream.cs,ToBase64Writer,The following statement contains a magic number: var tmpBuf = new byte[3];
Magic Number,Revenj.Utility,ChunkedMemoryStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\Streams\ChunkedMemoryStream.cs,ToBase64Writer,The following statement contains a magic number: len = Convert.ToBase64CharArray(block' off' BlockSize - 2' base64' 0);
Magic Number,Revenj.Utility,ChunkedMemoryStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\Streams\ChunkedMemoryStream.cs,ToBase64Writer,The following statement contains a magic number: tmpBuf[j] = block[BlockSize - 2 + j + off];
Magic Number,Revenj.Utility,ChunkedMemoryStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\Streams\ChunkedMemoryStream.cs,ToBase64Writer,The following statement contains a magic number: j < 2 - off
Magic Number,Revenj.Utility,ChunkedMemoryStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\Streams\ChunkedMemoryStream.cs,ToBase64Writer,The following statement contains a magic number: tmpBuf[2 - off + j] = block[j];
Magic Number,Revenj.Utility,ChunkedMemoryStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\Streams\ChunkedMemoryStream.cs,ToBase64Writer,The following statement contains a magic number: len = Convert.ToBase64CharArray(tmpBuf' 0' 3' base64' 0);
Magic Number,Revenj.Utility,ChunkedMemoryStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\Streams\ChunkedMemoryStream.cs,ToBase64Writer,The following statement contains a magic number: off = (off + 1) & 3;
Magic Number,Revenj.Utility,ChunkedMemoryStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\Streams\ChunkedMemoryStream.cs,ToPostgresBytea,The following statement contains a magic number: sw.Write(CharMap[b >> 4]);
Magic Number,Revenj.Utility,ChunkedMemoryStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\Streams\ChunkedMemoryStream.cs,ToPostgresBytea,The following statement contains a magic number: sw.Write(CharMap[b >> 4]);
Magic Number,Revenj.Utility,StringCache,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\StringCache.cs,StringCache,The following statement contains a magic number: var size = 2;
Magic Number,Revenj.Utility,StringCache,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\StringCache.cs,StringCache,The following statement contains a magic number: size *= 2;
Magic Number,Revenj.Utility,TemporaryResources,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\TemporaryResources.cs,CreateFile,The following statement contains a magic number: int retry = 5;
Magic Number,Revenj.Utility,TemporaryResources,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\TemporaryResources.cs,CreateRandomObject,The following statement contains a magic number: sb.Append((char)rnd.Next(65' 92));
Magic Number,Revenj.Utility,TemporaryResources,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\TemporaryResources.cs,CreateRandomObject,The following statement contains a magic number: sb.Append((char)rnd.Next(65' 92));
Magic Number,Revenj.Utility,TemporaryResources,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Utility\TemporaryResources.cs,CreateRandomObject,The following statement contains a magic number: i < 10
Duplicate Code,Revenj.DatabasePersistence.Postgres.Converters,ArrayTuple,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Converters\ArrayTuple.cs,InsertRecord,The method contains a code clone-set at the following line numbers (starting from the method definition): ((6' 25)' (30' 49))
Duplicate Code,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeCollection,The method contains a code clone-set at the following line numbers (starting from the method definition): ((2' 28)' (32' 58))
Duplicate Code,Revenj.Serialization.Json.Converters,BoolConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\BoolConverter.cs,DeserializeNullableCollection,The method contains a code clone-set at the following line numbers (starting from the method definition): ((2' 33)' (38' 69))
Duplicate Code,Revenj.Serialization.Json.Converters,DrawingConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\DrawingConverter.cs,DeserializeRectangleF,The method contains a code clone-set at the following line numbers (starting from the method definition): ((11' 31)' (40' 60))
Missing Default,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,ArrayBackendToNativeTypeConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\ArrayHandling.cs,ArrayChunkEnumeration,The following switch statement is missing a default case: switch (source[idx])  				{  					case '"': //beginning or ending a quoted chunk.  						inQuoted = !inQuoted;  						break;  					case ''':  						if (braceCount == 0) //if bracecount is zero we've done our chunk  						{  							yield return source.Substring(startIdx' idx - startIdx);  							startIdx = idx + 1;  						}  						break;  					case '\\': //next character is escaped. Skip it.  						++idx;  						break;  					case '{': //up the brace count if this isn't in a quoted string  						if (!inQuoted)  						{  							++braceCount;  						}  						break;  					case '}': //lower the brace count if this isn't in a quoted string  						if (!inQuoted)  						{  							--braceCount;  						}  						break;  				}
Missing Default,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeStamp,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Subtract,The following switch statement is missing a default case: switch (_type)  			{  				case TimeType.Infinity:  				case TimeType.MinusInfinity:  					throw new ArgumentOutOfRangeException("You cannot subtract infinity timestamps");  			}
Missing Default,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeStamp,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Subtract,The following switch statement is missing a default case: switch (timestamp._type)  			{  				case TimeType.Infinity:  				case TimeType.MinusInfinity:  					throw new ArgumentOutOfRangeException("You cannot subtract infinity timestamps");  			}
Missing Default,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeStampTZ,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Subtract,The following switch statement is missing a default case: switch (_type)  			{  				case TimeType.Infinity:  				case TimeType.MinusInfinity:  					throw new ArgumentOutOfRangeException("You cannot subtract infinity timestamps");  			}
Missing Default,Revenj.DatabasePersistence.Postgres.NpgsqlTypes,NpgsqlTimeStampTZ,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\NpgsqlTypes\DateDatatypes.cs,Subtract,The following switch statement is missing a default case: switch (timestamp._type)  			{  				case TimeType.Infinity:  				case TimeType.MinusInfinity:  					throw new ArgumentOutOfRangeException("You cannot subtract infinity timestamps");  			}
Missing Default,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,GetClearCommandStream,The following switch statement is missing a default case: switch (p.Direction)  							{  								case ParameterDirection.Input:  								case ParameterDirection.InputOutput:  									//Wrap in probably-redundant parentheses. Queries should operate much as if they were in the a parameter or  									//variable in a postgres function. Generally this is the case without the parentheses (hence "probably redundant")  									//but there are exceptions to this rule. E.g. consider the postgres function:  									//  									//CREATE FUNCTION first_param(integer[])RETURNS int AS'select $1[1]'LANGUAGE 'sql' STABLE STRICT;  									//  									//The equivalent commandtext would be "select :param[1]"' but this fails without the parentheses.    									sw.Write('(');  									PassParam(sw' p);  									sw.Write(')');  									break;  							}
Missing Default,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,GetClearCommandStream,The following switch statement is missing a default case: switch (parameters[i].Direction)  					{  						case ParameterDirection.Input:  						case ParameterDirection.InputOutput:  							PassParam(sw' parameters[i]);  							len--;  							if (len > 1)  								sw.Write(''');  							break;  					}
Missing Default,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlCommand,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlCommand.cs,AddFunctionColumnListSupport,The following switch statement is missing a default case: switch (p.Direction)  				{  					case ParameterDirection.Output:  					case ParameterDirection.InputOutput:  						sw.Write(p.CleanName);  						sw.Write(' ');  						sw.Write(p.TypeInfo.Name);  						sw.Write(''');  						break;  				}
Missing Default,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectionStringBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectionStringBuilder.cs,SetValue,The following switch statement is missing a default case: switch (keyword)  				{  					case Keywords.Host:  						this._host = Convert.ToString(value);  						break;  					case Keywords.Port:  						this._port = Convert.ToInt32(value);  						break;  					case Keywords.Database:  						this._database = Convert.ToString(value);  						break;  					case Keywords.UserName:  						this._username = Convert.ToString(value);  						break;  					case Keywords.Password:  						this._password = System.Text.Encoding.UTF8.GetBytes(Convert.ToString(value));  						break;  					case Keywords.SSL:  						this._ssl = ToBoolean(value);  						break;  					case Keywords.SslMode:  						this._sslmode = ToSslMode(value);  						break;  #pragma warning disable 618  					case Keywords.Encoding:  						break;  #pragma warning restore 618  					case Keywords.Timeout:  						this._timeout = ToInt32(value' 0' TIMEOUT_LIMIT' key_name);  						break;  					case Keywords.SearchPath:  						this._searchpath = Convert.ToString(value);  						break;  					case Keywords.Pooling:  						this._pooling = ToBoolean(value);  						break;  					case Keywords.ConnectionLifeTime:  						this._connection_life_time = Convert.ToInt32(value);  						break;  					case Keywords.MinPoolSize:  						this._min_pool_size = (MaxPoolSize > 0) ? ToInt32(value' 0' MaxPoolSize' key_name) : Convert.ToInt32(value);  						break;  					case Keywords.MaxPoolSize:  						this._max_pool_size = ToInt32(value' 0' POOL_SIZE_LIMIT' key_name);  						break;  					case Keywords.SyncNotification:  						this._sync_notification = ToBoolean(value);  						break;  					case Keywords.CommandTimeout:  						this._command_timeout = Convert.ToInt32(value);  						break;  					case Keywords.Enlist:  						this._enlist = ToBoolean(value);  						break;  					case Keywords.PreloadReader:  						this._preloadReader = ToBoolean(value);  						break;  					case Keywords.UseExtendedTypes:  						this._useExtendedTypes = ToBoolean(value);  						break;  					case Keywords.IntegratedSecurity:  						this._integrated_security = ToIntegratedSecurity(value);  						break;  					case Keywords.Compatible:  						Version ver = new Version(value.ToString());  						if (ver > THIS_VERSION)  							throw new ArgumentException("Attempt to set compatibility with version " + value + " when using version " + THIS_VERSION);  						_compatible = ver;  						break;  					case Keywords.ApplicationName:  						this._application_name = Convert.ToString(value);  						break;  				}
Missing Default,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlConnectionStringBuilder,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\NpgsqlConnectionStringBuilder.cs,SetValue,The following switch statement is missing a default case: switch (keyword)  				{  					case Keywords.Port:  					case Keywords.Timeout:  					case Keywords.ConnectionLifeTime:  					case Keywords.MinPoolSize:  					case Keywords.MaxPoolSize:  					case Keywords.CommandTimeout:  						exception_template = resman.GetString("Exception_InvalidIntegerKeyVal");  						break;  					case Keywords.SSL:  					case Keywords.Pooling:  					case Keywords.SyncNotification:  						exception_template = resman.GetString("Exception_InvalidBooleanKeyVal");  						break;  				}
Missing Default,Revenj.DatabasePersistence.Postgres.Npgsql,PGUtil,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\PGUtil.cs,SkipEscapedBytes,The following switch statement is missing a default case: switch (ReadChar(stream' buffer))  					{  						case '0':  						case '1':  						case '2':  						case '3':  						case '4':  						case '5':  						case '6':  						case '7':  						case '8':  						case '9':  							maxRead -= 2;  							EatStreamBytes(stream' 2); //note assumes all representations of '0' through '9' are single-byte.  							break;  					}
Missing Default,Revenj.DatabasePersistence.Postgres.Npgsql,NpgsqlState,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\Npgsql\State\NpgsqlState.cs,TestNotify,The following switch statement is missing a default case: switch (stm.ReadByte())  							{  								case -1:  									throw new EndOfStreamException();  								case 'Z':  									//context.Query(new NpgsqlCommand("UNLISTEN *"' context));  									using (NpgsqlCommand cmd = new NpgsqlCommand("UNLISTEN *"' context))  									{  										context.Query(cmd);  									}  									return;  							}
Missing Default,Revenj.DatabasePersistence.Postgres.QueryGeneration.Visitors,SqlGeneratorExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Postgres\QueryGeneration\Visitors\SqlGeneratorExpressionTreeVisitor.cs,VisitBinaryExpression,The following switch statement is missing a default case: switch (expression.NodeType)  			{  				case ExpressionType.Coalesce:  					SqlExpression.Append(" (COALESCE(");  					VisitExpression(left);  					SqlExpression.Append("' ");  					VisitExpression(right);  					SqlExpression.Append("))");  					return expression;  			}
Missing Default,Remotion.Linq.Parsing,ExpressionTreeVisitor,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitor.cs,IsSupportedStandardExpression,The following switch statement is missing a default case: switch (expression.NodeType)  			{  				case ExpressionType.ArrayLength:  				case ExpressionType.Convert:  				case ExpressionType.ConvertChecked:  				case ExpressionType.Negate:  				case ExpressionType.NegateChecked:  				case ExpressionType.Not:  				case ExpressionType.Quote:  				case ExpressionType.TypeAs:  				case ExpressionType.UnaryPlus:  				case ExpressionType.Add:  				case ExpressionType.AddChecked:  				case ExpressionType.Divide:  				case ExpressionType.Modulo:  				case ExpressionType.Multiply:  				case ExpressionType.MultiplyChecked:  				case ExpressionType.Power:  				case ExpressionType.Subtract:  				case ExpressionType.SubtractChecked:  				case ExpressionType.And:  				case ExpressionType.Or:  				case ExpressionType.ExclusiveOr:  				case ExpressionType.LeftShift:  				case ExpressionType.RightShift:  				case ExpressionType.AndAlso:  				case ExpressionType.OrElse:  				case ExpressionType.Equal:  				case ExpressionType.NotEqual:  				case ExpressionType.GreaterThanOrEqual:  				case ExpressionType.GreaterThan:  				case ExpressionType.LessThan:  				case ExpressionType.LessThanOrEqual:  				case ExpressionType.Coalesce:  				case ExpressionType.ArrayIndex:  				case ExpressionType.Conditional:  				case ExpressionType.Constant:  				case ExpressionType.Invoke:  				case ExpressionType.Lambda:  				case ExpressionType.MemberAccess:  				case ExpressionType.Call:  				case ExpressionType.New:  				case ExpressionType.NewArrayBounds:  				case ExpressionType.NewArrayInit:  				case ExpressionType.MemberInit:  				case ExpressionType.ListInit:  				case ExpressionType.Parameter:  				case ExpressionType.TypeIs:  					return true;  			}
Missing Default,Remotion.Linq.Parsing.ExpressionTreeVisitors.Transformation.PredefinedTransformations,VBCompareStringExpressionTransformer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Parsing\ExpressionTreeVisitors\Transformation\PredefinedTransformations\VBCompareStringExpressionTransformer.cs,GetExpressionForNodeType,The following switch statement is missing a default case: switch (expression.NodeType)  			{  				case ExpressionType.Equal:  					binaryExpression = Expression.Equal(leftSideAsMethodCallExpression.Arguments[0]' leftSideAsMethodCallExpression.Arguments[1]);  					return new VBStringComparisonExpression(binaryExpression' (bool)leftSideArgument2AsConstantExpression.Value);  				case ExpressionType.NotEqual:  					binaryExpression = Expression.NotEqual(leftSideAsMethodCallExpression.Arguments[0]' leftSideAsMethodCallExpression.Arguments[1]);  					return new VBStringComparisonExpression(binaryExpression' (bool)leftSideArgument2AsConstantExpression.Value);  			}
Missing Default,Remotion.Linq.Utilities,ReflectionUtility,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DatabasePersistence\Relinq\Utilities\ReflectionUtility.cs,GetMethod,The following switch statement is missing a default case: switch (wrappedCall.Body.NodeType)  			{  				case ExpressionType.Call:  					return ((MethodCallExpression)wrappedCall.Body).Method;  				case ExpressionType.MemberAccess:  					var memberExpression = (MemberExpression)wrappedCall.Body;  					var property = memberExpression.Member as PropertyInfo;  					var method = property != null ? property.GetGetMethod() : null;  					if (method != null)  						return method;  					break;  			}
Missing Default,Revenj.DomainPatterns,EagerCache<TValue>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\DomainPatterns\Cache\EagerCache.cs,Synchronize,The following switch statement is missing a default case: switch (info.Operation)  				{  					case NotifyInfo.OperationEnum.Insert:  					case NotifyInfo.OperationEnum.Change:  						var found = Lookup.Find(info.URI);  						foreach (var f in found)  							Data.TryAdd(f.URI' f);  						break;  					case NotifyInfo.OperationEnum.Delete:  						TValue value;  						foreach (var u in info.URI)  							Data.TryRemove(u' out value);  						break;  					case NotifyInfo.OperationEnum.Update:  						var remaining = Lookup.Find(info.URI);  						foreach (var r in remaining)  							Data.AddOrUpdate(r.URI' r' (_' __) => r);  						break;  				}
Missing Default,Mono.Math,BigInteger,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Math\BigInteger.cs,BigInteger,The following switch statement is missing a default case: switch (leftOver) {  			case 1: data [length-1] = (uint)inData [0]; break;  			case 2: data [length-1] = (uint)((inData [0] << 8) | inData [1]); break;  			case 3: data [length-1] = (uint)((inData [0] << 16) | (inData [1] << 8) | inData [2]); break;  			}
Missing Default,Mono.Security.Authenticode,AuthenticodeDeformatter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Authenticode\AuthenticodeDeformatter.cs,VerifyCounterSignature,The following switch statement is missing a default case: switch (messageDigest.Length) {  				case 16:  					hashName = "MD5";  					break;  				case 20:  					hashName = "SHA1";  					break;  				case 32:  					hashName = "SHA256";  					break;  				case 48:  					hashName = "SHA384";  					break;  				case 64:  					hashName = "SHA512";  					break;  			}
Missing Default,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiKeyBlob,The following switch statement is missing a default case: switch (blob [offset]) {  				case 0x00:  					// this could be a public key inside an header  					// like "sn -e" would produce  					if (blob [offset + 12] == 0x06) {  						return FromCapiPublicKeyBlob (blob' offset + 12);  					}  					break;  				case 0x06:  					return FromCapiPublicKeyBlob (blob' offset);  				case 0x07:  					return FromCapiPrivateKeyBlob (blob' offset);  			}
Missing Default,Mono.Security.Cryptography,CryptoConvert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\CryptoConvert.cs,FromCapiKeyBlobDSA,The following switch statement is missing a default case: switch (blob [offset]) {  				case 0x06:  					return FromCapiPublicKeyBlobDSA (blob' offset);  				case 0x07:  					return FromCapiPrivateKeyBlobDSA (blob' offset);  			}
Missing Default,Mono.Security.Cryptography,PKCS8,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\PKCS8.cs,GetType,The following switch statement is missing a default case: switch (firstLevel.Tag) {  						case 0x02:  							ki = KeyInfo.PrivateKey;  							break;  						case 0x30:  							ki = KeyInfo.EncryptedPrivateKey;  							break;  					}
Missing Default,Mono.Security.Cryptography,SymmetricTransform,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Cryptography\SymmetricTransform.cs,FinalDecrypt,The following switch statement is missing a default case: switch (padmode) {  			case PaddingMode.ANSIX923:  				if ((padding == 0) || (padding > BlockSizeByte))  					ThrowBadPaddingException (padmode' padding' -1);  				for (int i = padding - 1; i > 0; i--) {  					if (res [total - 1 - i] != 0x00)  						ThrowBadPaddingException (padmode' -1' i);  				}  				total -= padding;  				break;  			case PaddingMode.ISO10126:  				if ((padding == 0) || (padding > BlockSizeByte))  					ThrowBadPaddingException (padmode' padding' -1);  				total -= padding;  				break;  			case PaddingMode.PKCS7:  				if ((padding == 0) || (padding > BlockSizeByte))  					ThrowBadPaddingException (padmode' padding' -1);  				for (int i = padding - 1; i > 0; i--) {  					if (res [total - 1 - i] != padding)  						ThrowBadPaddingException (padmode' -1' i);  				}  				total -= padding;  				break;  			case PaddingMode.None:	// nothing to do - it's a multiple of block size  			case PaddingMode.Zeros:	// nothing to do - user must unpad himself  				break;  			}
Missing Default,Mono.Security.Protocol.Tls.Handshake.Client,TlsServerCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Client\TlsServerCertificate.cs,checkCertificateUsage,The following switch statement is missing a default case: switch (context.Negotiating.Cipher.ExchangeAlgorithmType)   			{  				case ExchangeAlgorithmType.RsaSign:  					ku = KeyUsages.digitalSignature;  					break;  				case ExchangeAlgorithmType.RsaKeyX:  					ku = KeyUsages.keyEncipherment;  					break;  				case ExchangeAlgorithmType.DiffieHellman:  					ku = KeyUsages.keyAgreement;  					break;  				case ExchangeAlgorithmType.Fortezza:  					return false; // unsupported certificate type  			}
Missing Default,Mono.Security.Protocol.Tls.Handshake.Server,TlsClientCertificate,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls.Handshake.Server\TlsClientCertificate.cs,checkCertificateUsage,The following switch statement is missing a default case: switch (context.Negotiating.Cipher.ExchangeAlgorithmType)  			{  				case ExchangeAlgorithmType.RsaSign:  				case ExchangeAlgorithmType.RsaKeyX:  					ku = KeyUsages.digitalSignature;  					break;  				case ExchangeAlgorithmType.DiffieHellman:  					ku = KeyUsages.keyAgreement;  					break;  				case ExchangeAlgorithmType.Fortezza:  					return false; // unsupported certificate type  			}
Missing Default,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,createEncryptionCipher,The following switch statement is missing a default case: switch (this.cipherAlgorithmType)  			{  				case CipherAlgorithmType.Des:  					this.encryptionAlgorithm = DES.Create();  					break;    				case CipherAlgorithmType.Rc2:  					this.encryptionAlgorithm = RC2.Create();  					break;    				case CipherAlgorithmType.Rc4:  					this.encryptionAlgorithm = new ARC4Managed();  					break;    				case CipherAlgorithmType.TripleDes:  					this.encryptionAlgorithm = TripleDES.Create();  					break;    				case CipherAlgorithmType.Rijndael:  					// only AES is really used - and we can use CommonCrypto for iOS and OSX this way  					this.encryptionAlgorithm = Aes.Create();  					break;  			}
Missing Default,Mono.Security.Protocol.Tls,CipherSuite,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuite.cs,createDecryptionCipher,The following switch statement is missing a default case: switch (this.cipherAlgorithmType)  			{  				case CipherAlgorithmType.Des:  					this.decryptionAlgorithm = DES.Create();  					break;    				case CipherAlgorithmType.Rc2:  					this.decryptionAlgorithm = RC2.Create();  					break;    				case CipherAlgorithmType.Rc4:  					this.decryptionAlgorithm = new ARC4Managed();  					break;    				case CipherAlgorithmType.TripleDes:  					this.decryptionAlgorithm = TripleDES.Create();  					break;    				case CipherAlgorithmType.Rijndael:  					// only AES is really used - and we can use CommonCrypto for iOS and OSX this way  					this.decryptionAlgorithm = Aes.Create();  					break;  			}
Missing Default,Mono.Security.Protocol.Tls,CipherSuiteCollection,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\CipherSuiteCollection.cs,Add,The following switch statement is missing a default case: switch (protocol) {  			case SecurityProtocolType.Default:  			case SecurityProtocolType.Tls:  				Add (new TlsCipherSuite (code' name' cipherType' hashType' exchangeType' exportable' blockMode'   					keyMaterialSize' expandedKeyMaterialSize' effectiveKeyBytes' ivSize' blockSize));  				break;    			case SecurityProtocolType.Ssl3:  				Add (new SslCipherSuite (code' name' cipherType' hashType' exchangeType' exportable' blockMode'   					keyMaterialSize' expandedKeyMaterialSize' effectiveKeyBytes' ivSize' blockSize));  				break;  			}
Missing Default,Mono.Security.Protocol.Tls,RecordProtocol,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\RecordProtocol.cs,ProcessAlert,The following switch statement is missing a default case: switch (alertDesc)  				{  					case AlertDescription.CloseNotify:  						this.context.ReceivedConnectionEnd = true;  						break;  				}
Missing Default,Mono.Security.Protocol.Tls,SslClientStream,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.Protocol.Tls\SslClientStream.cs,NegotiateAsyncWorker,The following switch statement is missing a default case: switch (negotiate.State)  				{  				case NegotiateState.SentClientHello:  					this.protocol.EndSendRecord (result);    					// we are now ready to ready the receive the hello response.  					negotiate.State = NegotiateState.ReceiveClientHelloResponse;    					// Start reading the client hello response  					this.protocol.BeginReceiveRecord (this.innerStream' NegotiateAsyncWorker' negotiate);  					break;    				case NegotiateState.ReceiveClientHelloResponse:  					this.SafeEndReceiveRecord (result' true);    					if (this.context.LastHandshakeMsg != HandshakeType.ServerHelloDone &&  						(!this.context.AbbreviatedHandshake || this.context.LastHandshakeMsg != HandshakeType.ServerHello)) {  						// Read next record (skip empty' e.g. warnings alerts)  						this.protocol.BeginReceiveRecord (this.innerStream' NegotiateAsyncWorker' negotiate);  						break;  					}    					// special case for abbreviated handshake where no ServerHelloDone is sent from the server  					if (this.context.AbbreviatedHandshake) {  						ClientSessionCache.SetContextFromCache (this.context);  						this.context.Negotiating.Cipher.ComputeKeys ();  						this.context.Negotiating.Cipher.InitializeCipher ();    						negotiate.State = NegotiateState.SentCipherSpec;    						// Send Change Cipher Spec message with the current cipher  						// or as plain text if this is the initial negotiation  						this.protocol.BeginSendChangeCipherSpec(NegotiateAsyncWorker' negotiate);  					} else {  						// Send client certificate if requested  						// even if the server ask for it it _may_ still be optional  						bool clientCertificate = this.context.ServerSettings.CertificateRequest;    						using (var memstream = new MemoryStream())  						{  							// NOTE: sadly SSL3 and TLS1 differs in how they handle this and  							// the current design doesn't allow a very cute way to handle   							// SSL3 alert warning for NoCertificate (41).  							if (this.context.SecurityProtocol == SecurityProtocolType.Ssl3)  							{  								clientCertificate = ((this.context.ClientSettings.Certificates != null) &&  									(this.context.ClientSettings.Certificates.Count > 0));  								// this works well with OpenSSL (but only for SSL3)  							}    							byte[] record = null;    							if (clientCertificate)  							{  								record = this.protocol.EncodeHandshakeRecord(HandshakeType.Certificate);  								memstream.Write(record' 0' record.Length);  							}    							// Send Client Key Exchange  							record = this.protocol.EncodeHandshakeRecord(HandshakeType.ClientKeyExchange);  							memstream.Write(record' 0' record.Length);    							// Now initialize session cipher with the generated keys  							this.context.Negotiating.Cipher.InitializeCipher();    							// Send certificate verify if requested (optional)  							if (clientCertificate && (this.context.ClientSettings.ClientCertificate != null))  							{  								record = this.protocol.EncodeHandshakeRecord(HandshakeType.CertificateVerify);  								memstream.Write(record' 0' record.Length);  							}    							// send the chnage cipher spec.  							this.protocol.SendChangeCipherSpec(memstream);    							// Send Finished message  							record = this.protocol.EncodeHandshakeRecord(HandshakeType.Finished);  							memstream.Write(record' 0' record.Length);    							negotiate.State = NegotiateState.SentKeyExchange;    							// send all the records.  							this.innerStream.BeginWrite (memstream.GetBuffer ()' 0' (int)memstream.Length' NegotiateAsyncWorker' negotiate);  						}  					}  					break;    				case NegotiateState.SentKeyExchange:  					this.innerStream.EndWrite (result);    					negotiate.State = NegotiateState.ReceiveFinishResponse;    					this.protocol.BeginReceiveRecord (this.innerStream' NegotiateAsyncWorker' negotiate);    					break;    				case NegotiateState.ReceiveFinishResponse:  					this.SafeEndReceiveRecord (result);    					// Read record until server finished is received  					if (this.context.HandshakeState != HandshakeState.Finished) {  						// If all goes well this will process messages:  						// 		Change Cipher Spec  						//		Server finished  						this.protocol.BeginReceiveRecord (this.innerStream' NegotiateAsyncWorker' negotiate);  					}  					else {  						// Reset Handshake messages information  						this.context.HandshakeMessages.Reset ();    						// Clear Key Info  						this.context.ClearKeyInfo();    						negotiate.SetComplete ();  					}  					break;      				case NegotiateState.SentCipherSpec:  					this.protocol.EndSendChangeCipherSpec (result);    					negotiate.State = NegotiateState.ReceiveCipherSpecResponse;    					// Start reading the cipher spec response  					this.protocol.BeginReceiveRecord (this.innerStream' NegotiateAsyncWorker' negotiate);  					break;    				case NegotiateState.ReceiveCipherSpecResponse:  					this.SafeEndReceiveRecord (result' true);    					if (this.context.HandshakeState != HandshakeState.Finished)  					{  						this.protocol.BeginReceiveRecord (this.innerStream' NegotiateAsyncWorker' negotiate);  					}  					else  					{  						negotiate.State = NegotiateState.SentFinished;  						this.protocol.BeginSendRecord(HandshakeType.Finished' NegotiateAsyncWorker' negotiate);  					}  					break;    				case NegotiateState.SentFinished:  					this.protocol.EndSendRecord (result);    					// Reset Handshake messages information  					this.context.HandshakeMessages.Reset ();    					// Clear Key Info  					this.context.ClearKeyInfo();    					negotiate.SetComplete ();    					break;  				}
Missing Default,Mono.Security.X509.Extensions,DistributionPoint,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509.Extensions\CRLDistributionPointsExtension.cs,DistributionPoint,The following switch statement is missing a default case: switch (el.Tag) {  					case 0xA0: // DistributionPointName OPTIONAL  						for (int j = 0; j < el.Count; j++) {  							ASN1 dpn = el [j];  							if (dpn.Tag == 0xA0) {  								Name = new GeneralNames (dpn).ToString ();  							}  						}  						break;  					case 0xA1: // ReasonFlags OPTIONAL  						break;  					case 0xA2: // RelativeDistinguishedName  						break;  					}
Missing Default,Mono.Security.X509,AttributeTypeAndValue,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security.X509\X520Attributes.cs,GetASN1,The following switch statement is missing a default case: switch (encode) {  					case 0x13:  						// PRINTABLESTRING  						asn1.Add (new ASN1 (0x13' Encoding.ASCII.GetBytes (attrValue)));  						break;  					case 0x16:  						// IA5STRING  						asn1.Add (new ASN1 (0x16' Encoding.ASCII.GetBytes (attrValue)));  						break;  					case 0x1E:  						// BMPSTRING  						asn1.Add (new ASN1 (0x1E' Encoding.BigEndianUnicode.GetBytes (attrValue)));  						break;  				}
Missing Default,Mono.Security,ASN1Convert,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Security\Mono.Security\Mono.Security\ASN1Convert.cs,ToDateTime,The following switch statement is missing a default case: switch (t.Length) {  				case 11:  					// illegal format' still it's supported for compatibility  					mask = "yyMMddHHmmZ";  					break;  				case 13:   					// RFC3280: 4.1.2.5.1  UTCTime  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					// Where YY is greater than or equal to 50' the   					// year SHALL be interpreted as 19YY; and   					// Where YY is less than 50' the year SHALL be   					// interpreted as 20YY.  					if (year >= 50)  						t = "19" + t;  					else  						t = "20" + t;  					mask = "yyyyMMddHHmmssZ";  					break;  				case 15:  					mask = "yyyyMMddHHmmssZ"; // GeneralizedTime  					break;  				case 17:  					// another illegal format (990630000000+1000)' again supported for compatibility  					year = Convert.ToInt16 (t.Substring (0' 2)' CultureInfo.InvariantCulture);  					string century = (year >= 50) ? "19" : "20";  					// ASN.1 (see ITU X.680 section 43.3) deals with offset differently than .NET  					char sign = (t[12] == '+') ? '-' : '+';  					t = String.Format ("{0}{1}{2}{3}{4}:{5}{6}"' century' t.Substring (0' 12)' sign'   						t[13]' t[14]' t[15]' t[16]);  					mask = "yyyyMMddHHmmsszzz";  					break;  			}
Missing Default,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToDecimal,The following switch statement is missing a default case: switch (ch)  			{  				case '+':  					i = 1;  					break;  				case '-':  					i = 1;  					neg = true;  					break;  			}
Missing Default,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToShort,The following switch statement is missing a default case: switch (ch)  			{  				case '+':  					i = 1;  					break;  				case '-':  					for (i = 1; i < len; i++)  					{  						ch = buf[i];  						int ind = buf[i] - 48;  						value = (value << 3) + (value << 1) - ind;  						if (ind < 0 || ind > 9)  							return ConvertToShortGeneric(buf' len);  					}  					return (short)value;  			}
Missing Default,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToInt,The following switch statement is missing a default case: switch (ch)  			{  				case '+':  					i = 1;  					break;  				case '-':  					for (i = 1; i < len; i++)  					{  						ch = buf[i];  						int ind = buf[i] - 48;  						value = (value << 3) + (value << 1) - ind;  						if (ind < 0 || ind > 9)  							return ConvertToIntGeneric(buf' len);  					}  					return value;  			}
Missing Default,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToLong,The following switch statement is missing a default case: switch (ch)  			{  				case '+':  					i = 1;  					break;  				case '-':  					for (i = 1; i < len; i++)  					{  						ch = buf[i];  						int ind = buf[i] - 48;  						value = (value << 3) + (value << 1) - ind;  						if (ind < 0 || ind > 9)  							return ConvertToLongGeneric(buf' len);  					}  					return value;  			}
Missing Default,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToDouble,The following switch statement is missing a default case: switch (ch)  			{  				case '+':  					i = 1;  					break;  				case '-':  					i = 1;  					sign = -1;  					break;  			}
Missing Default,Revenj.Serialization.Json.Converters,NumberConverter,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Core\Revenj.Core\Serialization\Json\Converters\NumberConverter.cs,ConvertToFloat,The following switch statement is missing a default case: switch (ch)  			{  				case '+':  					i = 1;  					break;  				case '-':  					i = 1;  					sign = -1;  					break;  			}
