Implementation smell,Namespace,Class,File,Method,Description
Complex Method,LitS3,CopyObjectRequest,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Client\LitS3\CopyObject.cs,Authorize,Cyclomatic complexity of the method is 8
Complex Method,LitS3,S3Exception,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Client\LitS3\S3Exception.cs,FromErrorResponse,Cyclomatic complexity of the method is 8
Long Parameter List,LitS3,CopyObjectRequest,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Client\LitS3\CopyObject.cs,CopyObjectRequest,The method has 5 parameters. Parameters: service' sourceBucketName' sourceObjectKey' destBucketName' destObjectKey
Long Parameter List,LitS3,S3Request,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Client\LitS3\S3Request.cs,S3Request,The method has 5 parameters. Parameters: service' method' bucketName' objectKey' queryString
Long Parameter List,LitS3,S3Request<TResponse>,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Client\LitS3\S3Request.cs,S3Request,The method has 5 parameters. Parameters: service' method' bucketName' objectKey' queryString
Long Parameter List,LitS3,S3Service,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Client\LitS3\S3Service.cs,AddObject,The method has 6 parameters. Parameters: bucketName' key' bytes' contentType' acl' action
Long Parameter List,LitS3,S3Service,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Client\LitS3\S3Service.cs,AddObject,The method has 6 parameters. Parameters: inputStream' bytes' bucketName' key' contentType' acl
Long Parameter List,LitS3,S3Service,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Client\LitS3\S3Service.cs,AddObject,The method has 5 parameters. Parameters: inputStream' bucketName' key' contentType' acl
Long Parameter List,LitS3,S3Service,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Client\LitS3\S3Service.cs,AddObjectString,The method has 5 parameters. Parameters: contents' bucketName' key' contentType' acl
Long Parameter List,LitS3,S3Service,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Client\LitS3\S3Service.cs,CopyObject,The method has 5 parameters. Parameters: sourceBucketName' sourceKey' destBucketName' destKey' acl
Long Parameter List,LitS3,S3Service,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Client\LitS3\S3Service.cs,GetObject,The method has 5 parameters. Parameters: bucketName' key' outputStream' contentLength' contentType
Long Statement,LitS3,S3Service,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Client\LitS3\S3Service.cs,ListObjects,The length of the statement  "					throw new Exception("The server truncated the list of items requested. Consider using the ListObjectsRequest class to query for large numbers of items."); " is 154.
Complex Conditional,LitS3,S3Authorizer,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Client\LitS3\S3Authorizer.cs,AuthorizeRequest,The conditional expression  "query == "?acl" || query == "?location" || query == "?logging" || query == "?torrent""  is complex.
Complex Conditional,LitS3,S3Request,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Client\LitS3\S3Request.cs,TryThrowS3Exception,The conditional expression  "exception.Status == WebExceptionStatus.ProtocolError &&  				exception.Response.ContentType == "application/xml" &&  				(exception.Response.ContentLength > 0 ||  				 exception.Response.Headers[HttpResponseHeader.TransferEncoding] == "chunked")"  is complex.
Magic Number,LitS3,S3Service,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Client\LitS3\S3Service.cs,CopyStream,The following statement contains a magic number: var buffer = new byte[8192];
Missing Default,LitS3,AddObjectRequest,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Client\LitS3\AddObject.cs,Authorize,The following switch statement is missing a default case: switch (CannedAcl)  			{  				case CannedAcl.PublicRead:  					WebRequest.Headers[S3Headers.CannedAcl] = "public-read"; break;  				case CannedAcl.PublicReadWrite:  					WebRequest.Headers[S3Headers.CannedAcl] = "public-read-write"; break;  				case CannedAcl.AuthenticatedRead:  					WebRequest.Headers[S3Headers.CannedAcl] = "authenticated-read"; break;  			}
Missing Default,LitS3,CopyObjectRequest,C:\research\architectureSmells\repos\ngs-doo_revenj\csharp\Client\LitS3\CopyObject.cs,Authorize,The following switch statement is missing a default case: switch (CannedAcl)  			{  				case CannedAcl.PublicRead:  					WebRequest.Headers[S3Headers.CannedAcl] = "public-read"; break;  				case CannedAcl.PublicReadWrite:  					WebRequest.Headers[S3Headers.CannedAcl] = "public-read-write"; break;  				case CannedAcl.AuthenticatedRead:  					WebRequest.Headers[S3Headers.CannedAcl] = "authenticated-read"; break;  			}
