Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Revenj.Plugins.Aspects.Commands,RestCommandsIntercepter,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\Commands\RestCommandsIntercepter.cs,RestCommandsIntercepter,The following statement contains a magic number: if (!int.TryParse(ConfigurationManager.AppSettings["Performance.CommandLimit"]' out TimerLimit))  				TimerLimit = 100;
Magic Number,Revenj.Plugins.Aspects.Commands,RestCommandsIntercepter,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\Commands\RestCommandsIntercepter.cs,LogMemoryUsage,The following statement contains a magic number: TraceSource.TraceEvent(  				TraceEventType.Information'  				3121'  				"GC memory usage: {0:N3} MB"'  				GC.GetTotalMemory(false) / 1024 / 1024m);
Magic Number,Revenj.Plugins.Aspects.Commands,RestCommandsIntercepter,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\Commands\RestCommandsIntercepter.cs,LogMemoryUsage,The following statement contains a magic number: TraceSource.TraceEvent(  				TraceEventType.Information'  				3121'  				"GC memory usage: {0:N3} MB"'  				GC.GetTotalMemory(false) / 1024 / 1024m);
Magic Number,Revenj.Plugins.Aspects.Commands,RestCommandsIntercepter,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\Commands\RestCommandsIntercepter.cs,LogMemoryUsage,The following statement contains a magic number: TraceSource.TraceEvent(  				TraceEventType.Information'  				3122'  				"Process memory usage: {0:N3} MB"'  				Process.GetCurrentProcess().WorkingSet64 / 1024 / 1024m);
Magic Number,Revenj.Plugins.Aspects.Commands,RestCommandsIntercepter,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\Commands\RestCommandsIntercepter.cs,LogMemoryUsage,The following statement contains a magic number: TraceSource.TraceEvent(  				TraceEventType.Information'  				3122'  				"Process memory usage: {0:N3} MB"'  				Process.GetCurrentProcess().WorkingSet64 / 1024 / 1024m);
Magic Number,Revenj.Plugins.Aspects.Commands,RestCommandsIntercepter,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\Commands\RestCommandsIntercepter.cs,PassThrough,The following statement contains a magic number: TraceSource.TraceEvent(  				TraceEventType.Information'  				3123'  				"Executing command with argument: {0}. Request: {1}"'  				ta.FullName'  				ThreadContext.Request);
Magic Number,Revenj.Plugins.Aspects.Commands,RestCommandsIntercepter,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\Commands\RestCommandsIntercepter.cs,PassThrough,The following statement contains a magic number: try  			{  				stream = (Stream)baseCall(args);  			}  			finally  			{  				var elapsed = (decimal)(Stopwatch.GetTimestamp() - start) / TimeSpan.TicksPerMillisecond;  				if (elapsed > TimerLimit)  				{  					TraceSource.TraceEvent(  						TraceEventType.Information'  						3124'  						"Returning stream for pass through: {0}. Duration: {1} ms. Size: {2}"'  						ta.FullName'  						elapsed'  						stream != null && stream.CanSeek ? stream.Length.ToString() + " bytes" : "Unknown");  					LogMemoryUsage();  				}  			}
Magic Number,Revenj.Plugins.Aspects.Commands,RestCommandsIntercepter,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\Commands\RestCommandsIntercepter.cs,Get,The following statement contains a magic number: TraceSource.TraceEvent(TraceEventType.Information' 3125' "Executing get command. Request: {0}"' req);
Magic Number,Revenj.Plugins.Aspects.Commands,RestCommandsIntercepter,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\Commands\RestCommandsIntercepter.cs,Get,The following statement contains a magic number: try  			{  				stream = baseCall();  			}  			finally  			{  				var elapsed = (decimal)(Stopwatch.GetTimestamp() - start) / TimeSpan.TicksPerMillisecond;  				if (elapsed > TimerLimit)  				{  					TraceSource.TraceEvent(  						TraceEventType.Information'  						3126'  						"Returning stream for get REST req: {0}. Duration: {1} ms. Size: {2}"'  						req.RequestUri.AbsoluteUri'  						elapsed'  						stream != null && stream.CanSeek ? stream.Length.ToString() + " bytes" : "Unknown");  					LogMemoryUsage();  				}  			}
Magic Number,Revenj.Plugins.Aspects.Commands,RestCommandsIntercepter,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\Commands\RestCommandsIntercepter.cs,Post,The following statement contains a magic number: TraceSource.TraceEvent(TraceEventType.Information' 3127' "Executing post command. Request: {0}"' req);
Magic Number,Revenj.Plugins.Aspects.Commands,RestCommandsIntercepter,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\Commands\RestCommandsIntercepter.cs,Post,The following statement contains a magic number: try  			{  				stream = baseCall(arg);  			}  			finally  			{  				var elapsed = (decimal)(Stopwatch.GetTimestamp() - start) / TimeSpan.TicksPerMillisecond;  				if (elapsed > TimerLimit)  				{  					TraceSource.TraceEvent(  						TraceEventType.Information'  						3126'  						"Returning stream for post REST req: {0}. Duration: {1} ms. Size: {2}"'  						req.RequestUri.AbsoluteUri'  						elapsed'  						stream != null && stream.CanSeek ? stream.Length.ToString() + " bytes" : "Unknown");  					LogMemoryUsage();  				}  			}
Magic Number,Revenj.Plugins.Aspects.Commands,ProcessingCommandsIntercepter,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\Commands\ProcessingCommandsIntercepter.cs,LogCommands,The following statement contains a magic number: TraceSource.TraceEvent(TraceEventType.Information' 3101' "{0}"' new LazyFormat<T>(commandDescriptions));
Magic Number,Revenj.Plugins.Aspects.DatabaseTrace,QueryInterceptor,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\DatabaseTrace\QueryInterceptor.cs,QueryInterceptor,The following statement contains a magic number: if (!int.TryParse(ConfigurationManager.AppSettings["Performance.DatabaseLimit"]' out TimerLimit))  				TimerLimit = 100;
Magic Number,Revenj.Plugins.Aspects.DatabaseTrace,QueryInterceptor,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\DatabaseTrace\QueryInterceptor.cs,LogExecuteNonQuery,The following statement contains a magic number: try  			{  				return query(command);  			}  			finally  			{  				var duration = (Stopwatch.GetTimestamp() - start) / TimeSpan.TicksPerMillisecond;  				if (duration > TimerLimit)  				{  					TraceSource.TraceEvent(  						TraceEventType.Information'  						3141'  						"Execute non query duration: {0} ms' SQL: {1}"'  						duration'  						command.CommandText);  				}  			}
Magic Number,Revenj.Plugins.Aspects.DatabaseTrace,QueryInterceptor,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\DatabaseTrace\QueryInterceptor.cs,LogExecuteDataReader,The following statement contains a magic number: try  			{  				query(command' action);  			}  			finally  			{  				var duration = (Stopwatch.GetTimestamp() - start) / TimeSpan.TicksPerMillisecond;  				if (duration > TimerLimit)  				{  					TraceSource.TraceEvent(  						TraceEventType.Information'  						3142'  						"Execute data reader duration: {0} ms' SQL: {1}"'  						duration'  						command.CommandText);  				}  			}
Magic Number,Revenj.Plugins.Aspects.DatabaseTrace,QueryInterceptor,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\DatabaseTrace\QueryInterceptor.cs,LogFillTable,The following statement contains a magic number: try  			{  				return query(command' table);  			}  			finally  			{  				var duration = (Stopwatch.GetTimestamp() - start) / TimeSpan.TicksPerMillisecond;  				if (duration > TimerLimit)  				{  					TraceSource.TraceEvent(  						TraceEventType.Information'  						3143'  						"Fill table duration: {0} ms' SQL: {1}"'  						duration'  						command.CommandText);  				}  			}
Magic Number,Revenj.Plugins.Aspects.PerformanceTrace,PerformanceInterceptor,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\PerformanceTrace\PerformanceInterceptor.cs,PerformanceInterceptor,The following statement contains a magic number: if (!int.TryParse(ConfigurationManager.AppSettings["Performance.TimerLimit"]' out TimerLimit))  				TimerLimit = 10;
Magic Number,Revenj.Plugins.Aspects.PerformanceTrace,PerformanceInterceptor,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\PerformanceTrace\PerformanceInterceptor.cs,Intercept,The following statement contains a magic number: try  			{  				invocation.Proceed();  			}  			finally  			{  				var duration = (Stopwatch.GetTimestamp() - start) / TimeSpan.TicksPerMillisecond;  				if (duration > TimerLimit)  				{  					TraceSource.TraceEvent(  						TraceEventType.Information'  						3131'  						"Target: {0}' type: {1}' method: {2}' duration: {3} ms"'  						invocation.TargetType.FullName'  						invocation.InvocationTarget.GetType()'  						invocation.Method.Name'  						duration);  				}  			}
Magic Number,Revenj.Plugins.Aspects.MethodCalls,LoggingInterceptor,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\MethodCalls\LoggingInterceptor.cs,Intercept,The following statement contains a magic number: try  			{  				TraceSource.TraceEvent(  					TraceEventType.Information'  					3112'  					"Type: {0}' method: {1}' arguments: {2}"'  					invocation.TargetType.FullName'  					invocation.Method.Name'  					new LazyArguments(invocation.Arguments));    				invocation.Proceed();    				TraceSource.TraceEvent(  					TraceEventType.Information'  					3113'  					"Type: {0}' method: {1}' value: {2}"'  					invocation.TargetType.FullName'  					invocation.Method.Name'  					invocation.ReturnValue ?? "<null>");  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(  					TraceEventType.Error'  					3114'  					"Error: {0}. Message: {1}"'  					invocation.Method.Name'  					ex);  				throw;  			}
Magic Number,Revenj.Plugins.Aspects.MethodCalls,LoggingInterceptor,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\MethodCalls\LoggingInterceptor.cs,Intercept,The following statement contains a magic number: try  			{  				TraceSource.TraceEvent(  					TraceEventType.Information'  					3112'  					"Type: {0}' method: {1}' arguments: {2}"'  					invocation.TargetType.FullName'  					invocation.Method.Name'  					new LazyArguments(invocation.Arguments));    				invocation.Proceed();    				TraceSource.TraceEvent(  					TraceEventType.Information'  					3113'  					"Type: {0}' method: {1}' value: {2}"'  					invocation.TargetType.FullName'  					invocation.Method.Name'  					invocation.ReturnValue ?? "<null>");  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(  					TraceEventType.Error'  					3114'  					"Error: {0}. Message: {1}"'  					invocation.Method.Name'  					ex);  				throw;  			}
Magic Number,Revenj.Plugins.Aspects.MethodCalls,LoggingInterceptor,C:\repos\ngs-doo_revenj\csharp\Plugins\Revenj.Plugins.Aspects\MethodCalls\LoggingInterceptor.cs,Intercept,The following statement contains a magic number: try  			{  				TraceSource.TraceEvent(  					TraceEventType.Information'  					3112'  					"Type: {0}' method: {1}' arguments: {2}"'  					invocation.TargetType.FullName'  					invocation.Method.Name'  					new LazyArguments(invocation.Arguments));    				invocation.Proceed();    				TraceSource.TraceEvent(  					TraceEventType.Information'  					3113'  					"Type: {0}' method: {1}' value: {2}"'  					invocation.TargetType.FullName'  					invocation.Method.Name'  					invocation.ReturnValue ?? "<null>");  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(  					TraceEventType.Error'  					3114'  					"Error: {0}. Message: {1}"'  					invocation.Method.Name'  					ex);  				throw;  			}
