Implementation smell,Namespace,Class,File,Method,Description
Long Method,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,SqlGeneratorExpressionTreeVisitor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\SqlGeneratorExpressionTreeVisitor.cs,VisitBinaryExpression,The method has 106 lines of code.
Complex Method,Revenj.DatabasePersistence.Oracle,OracleOlapCubeQuery<TSource>,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleOlapCubeQuery.cs,ValidateInput,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Oracle,OracleOlapCubeQuery<TSource>,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleOlapCubeQuery.cs,Analyze,Cyclomatic complexity of the method is 21
Complex Method,Revenj.DatabasePersistence.Oracle,OracleQueryManager,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleQueryManager.cs,EndQuery,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Oracle,TypeUtility,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\TypeUtility.cs,AddParameter,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Oracle,TypeUtility,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\TypeUtility.cs,AddParameter,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Oracle.QueryGeneration,QuerySourceConverterFactory,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QuerySourceConverterFactory.cs,CreateResult,Cyclomatic complexity of the method is 12
Complex Method,Revenj.DatabasePersistence.Oracle.Plugins.ExpressionSupport,LikeStringComparison,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,CompareString,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Oracle.Plugins.ExpressionSupport,LinqMethods,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Plugins\ExpressionSupport\LinqMethods.cs,GetTypeName,Cyclomatic complexity of the method is 13
Complex Method,Revenj.DatabasePersistence.Oracle.Plugins.ExpressionSupport,StringMethods,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Plugins\ExpressionSupport\StringMethods.cs,Compare,Cyclomatic complexity of the method is 14
Complex Method,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,QueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\QueryParts.cs,GetFromPart,Cyclomatic complexity of the method is 13
Complex Method,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,QueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\QueryParts.cs,GetInnerFromPart,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,QueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\QueryParts.cs,GetQuerySourceFromExpression,Cyclomatic complexity of the method is 18
Complex Method,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,SqlGeneratorExpressionTreeVisitor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\SqlGeneratorExpressionTreeVisitor.cs,VisitBinaryExpression,Cyclomatic complexity of the method is 14
Complex Method,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,SqlGeneratorExpressionTreeVisitor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\SqlGeneratorExpressionTreeVisitor.cs,VisitMethodCallExpression,Cyclomatic complexity of the method is 8
Complex Method,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,SubquerySelectExpressionTreeVisitor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\SubquerySelectExpressionTreeVisitor.cs,VisitMemberExpression,Cyclomatic complexity of the method is 8
Long Parameter List,Revenj.DatabasePersistence.Oracle,OracleOlapCubeQuery<TSource>,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleOlapCubeQuery.cs,Analyze,The method has 6 parameters. Parameters: dimensions' facts' order' filter' limit' offset
Long Parameter List,Revenj.DatabasePersistence.Oracle.QueryGeneration,QuerySourceConverterFactory,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QuerySourceConverterFactory.cs,CreateResult,The method has 5 parameters. Parameters: name' type' qs' parts' canConvert
Long Parameter List,Revenj.DatabasePersistence.Oracle.Plugins.ExpressionSupport,LikeStringComparison,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,EscapeForLike,The method has 5 parameters. Parameters: equal' ignoreCase' mce' queryBuilder' visitExpression
Long Parameter List,Revenj.DatabasePersistence.Oracle.Plugins.ExpressionSupport,LikeStringComparison,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,GuardForNull,The method has 5 parameters. Parameters: equal' exp' queryBuilder' visitExpression' context
Long Parameter List,Revenj.DatabasePersistence.Oracle.Plugins.ExpressionSupport,LikeStringComparison,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,CompareString,The method has 5 parameters. Parameters: equal' methodCall' queryBuilder' visitExpression' context
Long Parameter List,Revenj.DatabasePersistence.Oracle.Plugins.ExpressionSupport,StringMethods,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Plugins\ExpressionSupport\StringMethods.cs,Compare,The method has 6 parameters. Parameters: before' after' methodCall' queryBuilder' visitExpression' context
Long Parameter List,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,MainQueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\MainQueryParts.cs,MainQueryParts,The method has 6 parameters. Parameters: locator' factory' simplifications' expressionMatchers' memberMatchers' projectionMatchers
Long Parameter List,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,QueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\QueryParts.cs,QueryParts,The method has 9 parameters. Parameters: locator' contextName' factory' parameters' context' simplifications' expressionMatchers' memberMatchers' projectionMatchers
Long Parameter List,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,QueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\QueryParts.cs,AddSelectPart,The method has 5 parameters. Parameters: qs' sql' name' type' instancer
Long Parameter List,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,QueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\QueryParts.cs,ProcessLimitAndOffsetOperators,The method has 5 parameters. Parameters: sb' limit' offset' first' single
Long Parameter List,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,SubqueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\SubqueryParts.cs,SubqueryParts,The method has 5 parameters. Parameters: parentQuery' canQueryInMemory' selector' contextName' context
Long Parameter List,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,SubqueryGeneratorQueryModelVisitor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\SubqueryGeneratorQueryModelVisitor.cs,ParseSubquery,The method has 5 parameters. Parameters: queryModel' parentQuery' canQueryInMemory' contextName' context
Long Parameter List,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,SubqueryGeneratorQueryModelVisitor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\SubqueryGeneratorQueryModelVisitor.cs,SubqueryGeneratorQueryModelVisitor,The method has 5 parameters. Parameters: parentQuery' canQueryInMemory' selector' contextName' context
Long Statement,Revenj.DatabasePersistence.Oracle,OracleAdvancedQueueNotification,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleAdvancedQueueNotification.cs,ProcessNotifyConverters,The length of the statement  "						Subject.OnNext(new NotifyInfo(it.Source' NotifyInfo.OperationEnum.Update' NotifyInfo.SourceEnum.Database' it.Uris.ToArray())); " is 126.
Long Statement,Revenj.DatabasePersistence.Oracle,OracleAdvancedQueueNotification,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleAdvancedQueueNotification.cs,ProcessNotifyConverters,The length of the statement  "						Subject.OnNext(new NotifyInfo(it.Source' NotifyInfo.OperationEnum.Change' NotifyInfo.SourceEnum.Database' it.Uris.ToArray())); " is 126.
Long Statement,Revenj.DatabasePersistence.Oracle,OracleAdvancedQueueNotification,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleAdvancedQueueNotification.cs,ProcessNotifyConverters,The length of the statement  "						Subject.OnNext(new NotifyInfo(it.Source' NotifyInfo.OperationEnum.Delete' NotifyInfo.SourceEnum.Database' it.Uris.ToArray())); " is 126.
Long Statement,Revenj.DatabasePersistence.Oracle,OracleAdvancedQueueNotification,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleAdvancedQueueNotification.cs,ProcessNotifyConverters,The length of the statement  "						Subject.OnNext(new NotifyInfo(it.Source' NotifyInfo.OperationEnum.Insert' NotifyInfo.SourceEnum.Database' it.Uris.ToArray())); " is 126.
Long Statement,Revenj.DatabasePersistence.Oracle,OracleAdvancedQueueNotification,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleAdvancedQueueNotification.cs,Track,The length of the statement  "				}).Select(it => new KeyValuePair<string[]' Lazy<T[]>>(it.URI' new Lazy<T[]>(() => GetRepository<T>(it.Name).Find(it.URI) as T[]))); " is 131.
Long Statement,Revenj.DatabasePersistence.Oracle,OracleDatabaseQuery,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleDatabaseQuery.cs,FormatException,The length of the statement  "			return new FrameworkException("Error executing command: " + ex.Message + Environment.NewLine + command.CommandText' ex); " is 120.
Long Statement,Revenj.DatabasePersistence.Oracle,OracleOlapCubeQuery<TSource>,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleOlapCubeQuery.cs,Analyze,The length of the statement  "				sb.AppendLine(string.Join("' "' customOrder.Select(it => "\"{0}\" {1}".With(it.Key' it.Value ? string.Empty : "DESC")))); " is 121.
Long Statement,Revenj.DatabasePersistence.Oracle,OracleQueryManager,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleQueryManager.cs,StartQuery,The length of the statement  "				TraceSource.TraceEvent(TraceEventType.Information' 5101' "Transactions: {0}' connections: {1}"' OpenTransactions.Count' OpenConnections.Count); " is 143.
Long Statement,Revenj.DatabasePersistence.Oracle,TypeUtility,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\TypeUtility.cs,AddParameter,The length of the statement  "			throw new NotImplementedException("Unsupported parameter type:" + type.FullName + " .Please provide info about missing feature."); " is 130.
Long Statement,Revenj.DatabasePersistence.Oracle,TypeUtility,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\TypeUtility.cs,AddParameter,The length of the statement  "			throw new NotImplementedException("Unsupported parameter type:" + element.FullName + ". Please provide info about missing feature"); " is 132.
Long Statement,Revenj.DatabasePersistence.Oracle,Setup,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Setup.cs,ConfigureOracle,The length of the statement  "			builder.RegisterType<OracleAdvancedQueueNotification' IDataChangeNotification' IEagerNotification>(InstanceScope.Singleton); " is 124.
Long Statement,Revenj.DatabasePersistence.Oracle,Setup,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Setup.cs,ConfigureOracle,The length of the statement  "			builder.RegisterType<OracleObjectFactory' IOracleConverterRepository' IOracleConverterFactory>(InstanceScope.Singleton); " is 120.
Long Statement,Revenj.DatabasePersistence.Oracle,Oracle,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Setup.cs,Setup,The length of the statement  "			return DSL.Core.Setup(withAspects' externalConfiguration' b => Revenj.DatabasePersistence.Oracle.Setup.ConfigureOracle(b' connectionString)); " is 141.
Long Statement,Revenj.DatabasePersistence.Oracle,OracleModule,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Setup.cs,Load,The length of the statement  "			var cs = ConfigurationManager.AppSettings["Revenj.ConnectionString"] ?? ConfigurationManager.AppSettings["ConnectionString"]; " is 125.
Long Statement,Revenj.DatabasePersistence.Oracle,OracleModule,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Setup.cs,Load,The length of the statement  "				throw new ConfigurationErrorsException(@"ConnectionString is missing from configuration. Add ConnectionString to <appSettings> " is 126.
Long Statement,Revenj.DatabasePersistence.Oracle,OracleModule,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Setup.cs,Load,The length of the statement  "Example: <add key=""ConnectionString"" value=""Data Source=(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=MyOracleHost)(PORT=1521)))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=xe)));User Id=oracle;Password=123456;"" />"); " is 232.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,BinaryArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\BinaryArrayConverter.cs,ToParameterVarray,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Array' Value = Create(value.Cast<byte[]>())' UdtTypeName = "-DSL-.BLOB_ARR" }; " is 135.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,BoolArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\BoolArrayConverter.cs,Create,The length of the statement  "			return new BoolArrayConverter { Value = collection != null ? collection.Select(it => it ? "Y" : "N").ToArray() : null }; " is 120.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,BoolArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\BoolArrayConverter.cs,Create,The length of the statement  "			return new BoolArrayConverter { Value = collection != null ? collection.Select(it => it != null ? (it.Value ? "Y" : "N") : null).ToArray() : null }; " is 148.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,BoolArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\BoolArrayConverter.cs,ToArrayNullable,The length of the statement  "{ return Value != null ? Value.Select(it => it == "Y" ? (bool?)true : it != null ? (bool?)false : null).ToArray() : null; }" is 123.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,BoolArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\BoolArrayConverter.cs,ToListNullable,The length of the statement  "{ return Value != null ? new List<bool?>(Value.Select(it => it == "Y" ? (bool?)true : (it != null ? (bool?)false : null))) : null; }" is 132.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,BoolArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\BoolArrayConverter.cs,ToSetNullable,The length of the statement  "{ return Value != null ? new HashSet<bool?>(Value.Select(it => it == "Y" ? (bool?)true : it != null ? (bool?)false : null)) : null; }" is 133.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,BoolArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\BoolArrayConverter.cs,ToParameter,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Char' Value = (bool?)value == true ? "Y" : (bool?)value == false ? "N" : null }; " is 137.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,BoolArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\BoolArrayConverter.cs,ToParameterVarray,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Array' Value = Create(value.Cast<bool?>())' UdtTypeName = "-DSL-.BOOL_ARR" }; " is 134.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,DateArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\DateArrayConverter.cs,ToParameterVarray,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Array' Value = Create(value.Cast<DateTime?>())' UdtTypeName = "-DSL-.DATE_ARR" }; " is 138.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,DecimalArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\DecimalArrayConverter.cs,Create,The length of the statement  "			return new DecimalArrayConverter { Value = collection != null ? collection.Select(it => (decimal?)it).ToArray() : null }; " is 121.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,DecimalArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\DecimalArrayConverter.cs,ToParameterVarray,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Array' Value = Create(value.Cast<decimal?>())' UdtTypeName = "-DSL-.NUMBER_ARR" }; " is 139.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,DoubleArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\DoubleArrayConverter.cs,ToParameterVarray,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Array' Value = Create(value.Cast<double?>())' UdtTypeName = "-DSL-.DOUBLE_ARR" }; " is 138.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,FloatArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\FloatArrayConverter.cs,ToParameterVarray,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Array' Value = Create(value.Cast<float?>())' UdtTypeName = "-DSL-.FLOAT_ARR" }; " is 136.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,GuidArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\GuidArrayConverter.cs,Create,The length of the statement  "			return new GuidArrayConverter { Value = collection != null ? collection.Select(it => it.ToByteArray()).ToArray() : null }; " is 122.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,GuidArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\GuidArrayConverter.cs,Create,The length of the statement  "			return new GuidArrayConverter { Value = collection != null ? collection.Select(it => it != null ? it.Value.ToByteArray() : null).ToArray() : null }; " is 148.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,GuidArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\GuidArrayConverter.cs,ToParameterVarray,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Array' Value = Create(value.Cast<Guid?>())' UdtTypeName = "-DSL-.GUID_ARR" }; " is 134.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,IntegerArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\IntegerArrayConverter.cs,ToParameterVarray,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Array' Value = Create(value.Cast<int?>())' UdtTypeName = "-DSL-.INT_ARR" }; " is 132.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,IPAddressArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\IPAddressArrayConverter.cs,Create,The length of the statement  "			return new IPAddressArrayConverter { Value = collection != null ? collection.Select(it => it != null ? it.GetAddressBytes() : null).ToArray() : null }; " is 151.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,IPAddressArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\IPAddressArrayConverter.cs,ToList,The length of the statement  "{ return Value != null ? new List<IPAddress>(Value.Select(it => it != null ? new IPAddress(it) : IPAddress.Loopback)) : null; }" is 127.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,IPAddressArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\IPAddressArrayConverter.cs,ToSet,The length of the statement  "{ return Value != null ? new HashSet<IPAddress>(Value.Select(it => it != null ? new IPAddress(it) : IPAddress.Loopback)) : null; }" is 130.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,IPAddressArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\IPAddressArrayConverter.cs,ToParameterVarray,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Array' Value = Create(value.Cast<IPAddress>())' UdtTypeName = "-DSL-.IP_ADDR_ARR" }; " is 141.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,LongArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\LongArrayConverter.cs,ToParameterVarray,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Array' Value = Create(value.Cast<long?>())' UdtTypeName = "-DSL-.LONG_ARR" }; " is 134.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,LongSetConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\LongSetConverter.cs,ToParameterVarray,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Array' Value = Create(value.Cast<long?>())' UdtTypeName = "-DSL-.LONG_SET" }; " is 134.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,StringArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\StringArrayConverter.cs,ToParameterVarray,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Array' Value = Create(value.Cast<string>())' UdtTypeName = "-DSL-.CLOB_ARR" }; " is 135.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,TextArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\TextArrayConverter.cs,ToParameterVarray,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Array' Value = Create(value.Cast<string>())' UdtTypeName = "-DSL-.TEXT_ARR" }; " is 135.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,TimestampArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\TimestampArrayConverter.cs,ToParameterVarray,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Array' Value = Create(value.Cast<DateTime?>())' UdtTypeName = "-DSL-.TWTZ_ARR" }; " is 138.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,UriArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\UriArrayConverter.cs,ToParameterVarray,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Array' Value = Create(value.Cast<string>())' UdtTypeName = "-DSL-.URI_ARR" }; " is 134.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,UriSetConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\UriSetConverter.cs,ToParameterVarray,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Array' Value = Create(value.Cast<string>())' UdtTypeName = "-DSL-.URI_SET" }; " is 134.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,UrlArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\UrlArrayConverter.cs,Create,The length of the statement  "			return new UrlArrayConverter { Value = collection != null ? collection.Select(it => it != null ? it.ToString() : null).ToArray() : null }; " is 138.
Long Statement,Revenj.DatabasePersistence.Oracle.Converters,UrlArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\UrlArrayConverter.cs,ToParameterVarray,The length of the statement  "			return new OracleParameter { OracleDbType = OracleDbType.Array' Value = Create(value.Cast<Uri>())' UdtTypeName = "-DSL-.URL_ARR" }; " is 131.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration,QueryExecutor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryExecutor.cs,ExecuteScalar,The length of the statement  "			var seedAggregate = queryModel.ResultOperators.LastOrDefault(it => it is AggregateFromSeedResultOperator) as AggregateFromSeedResultOperator; " is 141.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration,QueryExecutor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryExecutor.cs,ExecuteScalar,The length of the statement  "			var aggregate = queryModel.ResultOperators.LastOrDefault(it => it is AggregateResultOperator) as AggregateResultOperator; " is 121.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration,QueryExecutor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryExecutor.cs,ExecuteSingle,The length of the statement  "			return returnDefaultWhenEmpty ? ExecuteCollection<T>(queryModel).SingleOrDefault() : ExecuteCollection<T>(queryModel).Single(); " is 127.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration,QuerySourceConverterFactory,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QuerySourceConverterFactory.cs,ProjectExpression,The length of the statement  "			var subquery = SubqueryGeneratorQueryModelVisitor.ParseSubquery(sqe.QueryModel' mqp' parts.ContextName' parts.Context.Select()); " is 128.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,QueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\QueryParts.cs,GetFromPart,The length of the statement  "					sb.AppendFormat("INNER JOIN ({0}) sq$ ON sq$.id$ = \"{1}\".ROWID"' GetInnerFromPart(true' mainFromQuery)' MainFrom.ItemName); " is 125.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,QueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\QueryParts.cs,GetInnerFromPart,The length of the statement  "						sb.AppendFormat(" CROSS JOIN TABLE(\"{0}\".\"{1}\") \"{2}\""' qsre.ReferencedQuerySource.ItemName' me.Member.Name' aj.ItemName); " is 128.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,QueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\QueryParts.cs,GetOrderPart,The length of the statement  "	"' OrderBy.Last().Orderings.Select(o => GetSqlExpression(o.Expression) + (o.OrderingDirection == OrderingDirection.Desc ? " DESC " : " ASC ")))); " is 145.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,QueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\QueryParts.cs,GetQuerySourceFromExpression,The length of the statement  "					return "(" + subquery.BuildSqlString(true).Replace("\"" + sqe.QueryModel.MainFromClause.ItemName + "\""' "\"" + name + "\"") + ") \"" + name + "\""; " is 148.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,QueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\QueryParts.cs,GetQuerySourceFromExpression,The length of the statement  "				var inner = string.Join(" UNION ALL "' nae.Expressions.Select(it => "SELECT {0} AS \"{1}\"".With(GetSqlExpression(it)' name))); " is 127.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,QueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\QueryParts.cs,ProcessLimitAndOffsetOperators,The length of the statement  "				throw new NotSupportedException("Unsupported combination of limits and offsets in query. More than one offset and more than one limit found."); " is 143.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,ProjectorBuildingExpressionTreeVisitor<T>,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\ProjectorBuildingExpressionTreeVisitor.cs,BuildProjector,The length of the statement  "			// The visitor gives us the projector's body. It simply replaces all QuerySourceReferenceExpressions with calls to ResultObjectMapping.GetObject<T>(). " is 150.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,ProjectorBuildingExpressionTreeVisitor<T>,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\ProjectorBuildingExpressionTreeVisitor.cs,VisitQuerySourceReferenceExpression,The length of the statement  "			// Substitute generic parameter "T" of ResultObjectMapping.GetObject<T>() with type of query source item' then return a call to that method " is 139.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,SelectGeneratorExpressionTreeVisitor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\SelectExpressionTreeVisitor.cs,VisitSubQueryExpression,The length of the statement  "			var subquery = SubqueryGeneratorQueryModelVisitor.ParseSubquery(expression.QueryModel' Query' true' Query.ContextName' Query.Context.Select()); " is 143.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,SelectGeneratorExpressionTreeVisitor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\SelectExpressionTreeVisitor.cs,VisitSubQueryExpression,The length of the statement  "			var projector = (IExecuteFunc)Activator.CreateInstance(typeof(GenericProjection<>).MakeGenericType(selector.Type)' model); " is 122.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,SqlGeneratorExpressionTreeVisitor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\SqlGeneratorExpressionTreeVisitor.cs,VisitMethodCallExpression,The length of the statement  "			var attr = expression.Method.GetCustomAttributes(typeof(DatabaseFunctionAttribute)' false) as DatabaseFunctionAttribute[]; " is 122.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,SqlGeneratorExpressionTreeVisitor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\SqlGeneratorExpressionTreeVisitor.cs,VisitSubQueryExpression,The length of the statement  "			var subquery = SubqueryGeneratorQueryModelVisitor.ParseSubquery(expression.QueryModel' QueryParts' false' ContextName' Context); " is 128.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,SubqueryGeneratorQueryModelVisitor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\SubqueryGeneratorQueryModelVisitor.cs,ParseSubquery,The length of the statement  "			var visitor = new SubqueryGeneratorQueryModelVisitor(parentQuery' canQueryInMemory' queryModel.SelectClause.Selector' contextName' context); " is 140.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,SubquerySelectExpressionTreeVisitor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\SubquerySelectExpressionTreeVisitor.cs,VisitSubQueryExpression,The length of the statement  "			var sqParts = new SubqueryParts(Query' expression.QueryModel.SelectClause.Selector' Query.ContextName' Query.Context.Select()); " is 127.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,SubquerySelectExpressionTreeVisitor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\SubquerySelectExpressionTreeVisitor.cs,VisitSubQueryExpression,The length of the statement  "			var sq = SubqueryGeneratorQueryModelVisitor.ParseSubquery(expression.QueryModel' sqParts' Query.ContextName' Query.Context.Select()); " is 133.
Long Statement,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,SubquerySelectExpressionTreeVisitor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\SubquerySelectExpressionTreeVisitor.cs,CreateUnhandledItemException,The length of the statement  "			var message = string.Format("The expression '{0}' (type: {1}) is not supported by this LINQ provider."' itemText' typeof(T)); " is 125.
Long Statement,Revenj,Setup,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Setup.cs,ConfigureOracle,The length of the statement  "			builder.RegisterType<OracleAdvancedQueueNotification' IDataChangeNotification' IEagerNotification>(InstanceScope.Singleton); " is 124.
Long Statement,Revenj,Setup,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Setup.cs,ConfigureOracle,The length of the statement  "			builder.RegisterType<OracleObjectFactory' IOracleConverterRepository' IOracleConverterFactory>(InstanceScope.Singleton); " is 120.
Long Statement,Revenj,Oracle,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Setup.cs,Setup,The length of the statement  "			return DSL.Core.Setup(withAspects' externalConfiguration' b => Revenj.DatabasePersistence.Oracle.Setup.ConfigureOracle(b' connectionString)); " is 141.
Long Statement,Revenj,OracleModule,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Setup.cs,Load,The length of the statement  "			var cs = ConfigurationManager.AppSettings["Revenj.ConnectionString"] ?? ConfigurationManager.AppSettings["ConnectionString"]; " is 125.
Long Statement,Revenj,OracleModule,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Setup.cs,Load,The length of the statement  "				throw new ConfigurationErrorsException(@"ConnectionString is missing from configuration. Add ConnectionString to <appSettings> " is 126.
Long Statement,Revenj,OracleModule,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Setup.cs,Load,The length of the statement  "Example: <add key=""ConnectionString"" value=""Data Source=(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=MyOracleHost)(PORT=1521)))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=xe)));User Id=oracle;Password=123456;"" />"); " is 232.
Complex Conditional,Revenj.DatabasePersistence.Oracle.Plugins.ExpressionSupport,LikeStringComparison,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,TryMatch,The conditional expression  "ceZero == null || ceMethod == null || !ceZero.Value.Equals(0) || !CompareMethods.Contains(ceMethod.Method)"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,QueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\QueryParts.cs,TryToSimplifyMainFrom,The conditional expression  "subquery.Conditions.Count > 0  					|| subquery.Joins.Count > 0  					|| subquery.ResultOperators.Any(it => it is CastResultOperator == false && it is DefaultIfEmptyResultOperator == false)  					|| subquery.AdditionalJoins.Count > 0"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,QueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\QueryParts.cs,TryToSimplifyAdditionalFrom,The conditional expression  "subquery.Joins.Count > 0  					|| subquery.ResultOperators.Any(it => it is CastResultOperator == false && it is DefaultIfEmptyResultOperator == false)  					|| subquery.AdditionalJoins.Count > 0"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,SqlGeneratorExpressionTreeVisitor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\SqlGeneratorExpressionTreeVisitor.cs,VisitBinaryExpression,The conditional expression  "(expression.NodeType == ExpressionType.NotEqual || expression.NodeType == ExpressionType.Equal)  				&& (nullLeft || nullRight)"  is complex.
Complex Conditional,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,SqlGeneratorExpressionTreeVisitor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\SqlGeneratorExpressionTreeVisitor.cs,VisitConstantExpression,The conditional expression  "(type == typeof(bool) || type == typeof(bool?)) && (BinaryLevel == 0 && Level == 1 || BinaryLevel + 1 < Level)"  is complex.
Empty Catch Block,Revenj.DatabasePersistence.Oracle,OracleDatabaseQuery,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleDatabaseQuery.cs,PrepareCommand,The method has an empty catch block.
Empty Catch Block,Revenj.DatabasePersistence.Oracle,OracleQueryManager,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleQueryManager.cs,StartQuery,The method has an empty catch block.
Magic Number,Revenj.DatabasePersistence.Oracle,OracleAdvancedQueueNotification,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleAdvancedQueueNotification.cs,SetUpConnection,The following statement contains a magic number: try  			{  				RetryCount++;  				if (RetryCount > 60)  				{  					TraceSource.TraceEvent(TraceEventType.Critical' 5130' "Retry count exceeded: {0}"' ConnectionInfo.ConnectionString);  					RetryCount = 30;  				}  				if (Connection != null)  				{  					Connection.StateChange -= Connection_StateChange;  					Queue.MessageAvailable -= Queue_Notification;  					try { Connection.Dispose(); }  					catch (Exception ex)  					{  						TraceSource.TraceEvent(TraceEventType.Error' 5132' "{0}"' ex);  					}  				}  				Connection = new OracleConnection(ConnectionInfo.ConnectionString);  				Connection.Open();  				CommitCommand = Connection.CreateCommand();  				CommitCommand.CommandText = "COMMIT";  				Connection.StateChange += Connection_StateChange;  				Queue = new OracleAQQueue("\"-DSL-\".NOTIFY_QUEUE"' Connection' OracleAQMessageType.Udt' "-DSL-.NOTIFY_INFO_TYPE");  				Queue.NotificationConsumers = new[] { ConsumerName };  				Queue.DequeueOptions.ConsumerName = ConsumerName;  				Queue.DequeueOptions.DequeueMode = OracleAQDequeueMode.Remove;  				Queue.DequeueOptions.DeliveryMode = OracleAQMessageDeliveryMode.Persistent;  				Queue.DequeueOptions.Visibility = OracleAQVisibilityMode.OnCommit;  				Queue.DequeueOptions.NavigationMode = OracleAQNavigationMode.NextTransaction;  				Queue.MessageAvailable += Queue_Notification;  				var converters = new List<OracleNotifyInfoConverter>();  				try  				{  					var deqOpt =  						new OracleAQDequeueOptions  						{  							Wait = 1'  							ConsumerName = ConsumerName'  							DequeueMode = OracleAQDequeueMode.Remove'  							DeliveryMode = OracleAQMessageDeliveryMode.Persistent'  							Visibility = OracleAQVisibilityMode.OnCommit'  							NavigationMode = OracleAQNavigationMode.NextTransaction  						};  					OracleAQMessage msg;  					while ((msg = Queue.Dequeue(deqOpt)) != null)  					{  						var nic = msg.Payload as OracleNotifyInfoConverter;  						if (nic != null)  							converters.Add(nic);  					}  				}  				catch (OracleException ex)  				{  					var err = ex.Errors.Count > 0 ? ex.Errors[0] : null;  					if (err == null || err.Number != 25228)  						TraceSource.TraceEvent(TraceEventType.Information' 5133' "{0}"' ex);  				}  				if (converters.Count > 0)  					ProcessNotifyConverters(converters);  				RetryCount = 0;  			}  			catch (Exception ex)  			{  				RetryCount++;  				TraceSource.TraceEvent(TraceEventType.Error' 5134' "{0}"' ex);  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleAdvancedQueueNotification,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleAdvancedQueueNotification.cs,SetUpConnection,The following statement contains a magic number: try  			{  				RetryCount++;  				if (RetryCount > 60)  				{  					TraceSource.TraceEvent(TraceEventType.Critical' 5130' "Retry count exceeded: {0}"' ConnectionInfo.ConnectionString);  					RetryCount = 30;  				}  				if (Connection != null)  				{  					Connection.StateChange -= Connection_StateChange;  					Queue.MessageAvailable -= Queue_Notification;  					try { Connection.Dispose(); }  					catch (Exception ex)  					{  						TraceSource.TraceEvent(TraceEventType.Error' 5132' "{0}"' ex);  					}  				}  				Connection = new OracleConnection(ConnectionInfo.ConnectionString);  				Connection.Open();  				CommitCommand = Connection.CreateCommand();  				CommitCommand.CommandText = "COMMIT";  				Connection.StateChange += Connection_StateChange;  				Queue = new OracleAQQueue("\"-DSL-\".NOTIFY_QUEUE"' Connection' OracleAQMessageType.Udt' "-DSL-.NOTIFY_INFO_TYPE");  				Queue.NotificationConsumers = new[] { ConsumerName };  				Queue.DequeueOptions.ConsumerName = ConsumerName;  				Queue.DequeueOptions.DequeueMode = OracleAQDequeueMode.Remove;  				Queue.DequeueOptions.DeliveryMode = OracleAQMessageDeliveryMode.Persistent;  				Queue.DequeueOptions.Visibility = OracleAQVisibilityMode.OnCommit;  				Queue.DequeueOptions.NavigationMode = OracleAQNavigationMode.NextTransaction;  				Queue.MessageAvailable += Queue_Notification;  				var converters = new List<OracleNotifyInfoConverter>();  				try  				{  					var deqOpt =  						new OracleAQDequeueOptions  						{  							Wait = 1'  							ConsumerName = ConsumerName'  							DequeueMode = OracleAQDequeueMode.Remove'  							DeliveryMode = OracleAQMessageDeliveryMode.Persistent'  							Visibility = OracleAQVisibilityMode.OnCommit'  							NavigationMode = OracleAQNavigationMode.NextTransaction  						};  					OracleAQMessage msg;  					while ((msg = Queue.Dequeue(deqOpt)) != null)  					{  						var nic = msg.Payload as OracleNotifyInfoConverter;  						if (nic != null)  							converters.Add(nic);  					}  				}  				catch (OracleException ex)  				{  					var err = ex.Errors.Count > 0 ? ex.Errors[0] : null;  					if (err == null || err.Number != 25228)  						TraceSource.TraceEvent(TraceEventType.Information' 5133' "{0}"' ex);  				}  				if (converters.Count > 0)  					ProcessNotifyConverters(converters);  				RetryCount = 0;  			}  			catch (Exception ex)  			{  				RetryCount++;  				TraceSource.TraceEvent(TraceEventType.Error' 5134' "{0}"' ex);  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleAdvancedQueueNotification,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleAdvancedQueueNotification.cs,SetUpConnection,The following statement contains a magic number: try  			{  				RetryCount++;  				if (RetryCount > 60)  				{  					TraceSource.TraceEvent(TraceEventType.Critical' 5130' "Retry count exceeded: {0}"' ConnectionInfo.ConnectionString);  					RetryCount = 30;  				}  				if (Connection != null)  				{  					Connection.StateChange -= Connection_StateChange;  					Queue.MessageAvailable -= Queue_Notification;  					try { Connection.Dispose(); }  					catch (Exception ex)  					{  						TraceSource.TraceEvent(TraceEventType.Error' 5132' "{0}"' ex);  					}  				}  				Connection = new OracleConnection(ConnectionInfo.ConnectionString);  				Connection.Open();  				CommitCommand = Connection.CreateCommand();  				CommitCommand.CommandText = "COMMIT";  				Connection.StateChange += Connection_StateChange;  				Queue = new OracleAQQueue("\"-DSL-\".NOTIFY_QUEUE"' Connection' OracleAQMessageType.Udt' "-DSL-.NOTIFY_INFO_TYPE");  				Queue.NotificationConsumers = new[] { ConsumerName };  				Queue.DequeueOptions.ConsumerName = ConsumerName;  				Queue.DequeueOptions.DequeueMode = OracleAQDequeueMode.Remove;  				Queue.DequeueOptions.DeliveryMode = OracleAQMessageDeliveryMode.Persistent;  				Queue.DequeueOptions.Visibility = OracleAQVisibilityMode.OnCommit;  				Queue.DequeueOptions.NavigationMode = OracleAQNavigationMode.NextTransaction;  				Queue.MessageAvailable += Queue_Notification;  				var converters = new List<OracleNotifyInfoConverter>();  				try  				{  					var deqOpt =  						new OracleAQDequeueOptions  						{  							Wait = 1'  							ConsumerName = ConsumerName'  							DequeueMode = OracleAQDequeueMode.Remove'  							DeliveryMode = OracleAQMessageDeliveryMode.Persistent'  							Visibility = OracleAQVisibilityMode.OnCommit'  							NavigationMode = OracleAQNavigationMode.NextTransaction  						};  					OracleAQMessage msg;  					while ((msg = Queue.Dequeue(deqOpt)) != null)  					{  						var nic = msg.Payload as OracleNotifyInfoConverter;  						if (nic != null)  							converters.Add(nic);  					}  				}  				catch (OracleException ex)  				{  					var err = ex.Errors.Count > 0 ? ex.Errors[0] : null;  					if (err == null || err.Number != 25228)  						TraceSource.TraceEvent(TraceEventType.Information' 5133' "{0}"' ex);  				}  				if (converters.Count > 0)  					ProcessNotifyConverters(converters);  				RetryCount = 0;  			}  			catch (Exception ex)  			{  				RetryCount++;  				TraceSource.TraceEvent(TraceEventType.Error' 5134' "{0}"' ex);  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleAdvancedQueueNotification,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleAdvancedQueueNotification.cs,SetUpConnection,The following statement contains a magic number: try  			{  				RetryCount++;  				if (RetryCount > 60)  				{  					TraceSource.TraceEvent(TraceEventType.Critical' 5130' "Retry count exceeded: {0}"' ConnectionInfo.ConnectionString);  					RetryCount = 30;  				}  				if (Connection != null)  				{  					Connection.StateChange -= Connection_StateChange;  					Queue.MessageAvailable -= Queue_Notification;  					try { Connection.Dispose(); }  					catch (Exception ex)  					{  						TraceSource.TraceEvent(TraceEventType.Error' 5132' "{0}"' ex);  					}  				}  				Connection = new OracleConnection(ConnectionInfo.ConnectionString);  				Connection.Open();  				CommitCommand = Connection.CreateCommand();  				CommitCommand.CommandText = "COMMIT";  				Connection.StateChange += Connection_StateChange;  				Queue = new OracleAQQueue("\"-DSL-\".NOTIFY_QUEUE"' Connection' OracleAQMessageType.Udt' "-DSL-.NOTIFY_INFO_TYPE");  				Queue.NotificationConsumers = new[] { ConsumerName };  				Queue.DequeueOptions.ConsumerName = ConsumerName;  				Queue.DequeueOptions.DequeueMode = OracleAQDequeueMode.Remove;  				Queue.DequeueOptions.DeliveryMode = OracleAQMessageDeliveryMode.Persistent;  				Queue.DequeueOptions.Visibility = OracleAQVisibilityMode.OnCommit;  				Queue.DequeueOptions.NavigationMode = OracleAQNavigationMode.NextTransaction;  				Queue.MessageAvailable += Queue_Notification;  				var converters = new List<OracleNotifyInfoConverter>();  				try  				{  					var deqOpt =  						new OracleAQDequeueOptions  						{  							Wait = 1'  							ConsumerName = ConsumerName'  							DequeueMode = OracleAQDequeueMode.Remove'  							DeliveryMode = OracleAQMessageDeliveryMode.Persistent'  							Visibility = OracleAQVisibilityMode.OnCommit'  							NavigationMode = OracleAQNavigationMode.NextTransaction  						};  					OracleAQMessage msg;  					while ((msg = Queue.Dequeue(deqOpt)) != null)  					{  						var nic = msg.Payload as OracleNotifyInfoConverter;  						if (nic != null)  							converters.Add(nic);  					}  				}  				catch (OracleException ex)  				{  					var err = ex.Errors.Count > 0 ? ex.Errors[0] : null;  					if (err == null || err.Number != 25228)  						TraceSource.TraceEvent(TraceEventType.Information' 5133' "{0}"' ex);  				}  				if (converters.Count > 0)  					ProcessNotifyConverters(converters);  				RetryCount = 0;  			}  			catch (Exception ex)  			{  				RetryCount++;  				TraceSource.TraceEvent(TraceEventType.Error' 5134' "{0}"' ex);  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleAdvancedQueueNotification,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleAdvancedQueueNotification.cs,SetUpConnection,The following statement contains a magic number: try  			{  				RetryCount++;  				if (RetryCount > 60)  				{  					TraceSource.TraceEvent(TraceEventType.Critical' 5130' "Retry count exceeded: {0}"' ConnectionInfo.ConnectionString);  					RetryCount = 30;  				}  				if (Connection != null)  				{  					Connection.StateChange -= Connection_StateChange;  					Queue.MessageAvailable -= Queue_Notification;  					try { Connection.Dispose(); }  					catch (Exception ex)  					{  						TraceSource.TraceEvent(TraceEventType.Error' 5132' "{0}"' ex);  					}  				}  				Connection = new OracleConnection(ConnectionInfo.ConnectionString);  				Connection.Open();  				CommitCommand = Connection.CreateCommand();  				CommitCommand.CommandText = "COMMIT";  				Connection.StateChange += Connection_StateChange;  				Queue = new OracleAQQueue("\"-DSL-\".NOTIFY_QUEUE"' Connection' OracleAQMessageType.Udt' "-DSL-.NOTIFY_INFO_TYPE");  				Queue.NotificationConsumers = new[] { ConsumerName };  				Queue.DequeueOptions.ConsumerName = ConsumerName;  				Queue.DequeueOptions.DequeueMode = OracleAQDequeueMode.Remove;  				Queue.DequeueOptions.DeliveryMode = OracleAQMessageDeliveryMode.Persistent;  				Queue.DequeueOptions.Visibility = OracleAQVisibilityMode.OnCommit;  				Queue.DequeueOptions.NavigationMode = OracleAQNavigationMode.NextTransaction;  				Queue.MessageAvailable += Queue_Notification;  				var converters = new List<OracleNotifyInfoConverter>();  				try  				{  					var deqOpt =  						new OracleAQDequeueOptions  						{  							Wait = 1'  							ConsumerName = ConsumerName'  							DequeueMode = OracleAQDequeueMode.Remove'  							DeliveryMode = OracleAQMessageDeliveryMode.Persistent'  							Visibility = OracleAQVisibilityMode.OnCommit'  							NavigationMode = OracleAQNavigationMode.NextTransaction  						};  					OracleAQMessage msg;  					while ((msg = Queue.Dequeue(deqOpt)) != null)  					{  						var nic = msg.Payload as OracleNotifyInfoConverter;  						if (nic != null)  							converters.Add(nic);  					}  				}  				catch (OracleException ex)  				{  					var err = ex.Errors.Count > 0 ? ex.Errors[0] : null;  					if (err == null || err.Number != 25228)  						TraceSource.TraceEvent(TraceEventType.Information' 5133' "{0}"' ex);  				}  				if (converters.Count > 0)  					ProcessNotifyConverters(converters);  				RetryCount = 0;  			}  			catch (Exception ex)  			{  				RetryCount++;  				TraceSource.TraceEvent(TraceEventType.Error' 5134' "{0}"' ex);  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleAdvancedQueueNotification,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleAdvancedQueueNotification.cs,SetUpConnection,The following statement contains a magic number: try  			{  				RetryCount++;  				if (RetryCount > 60)  				{  					TraceSource.TraceEvent(TraceEventType.Critical' 5130' "Retry count exceeded: {0}"' ConnectionInfo.ConnectionString);  					RetryCount = 30;  				}  				if (Connection != null)  				{  					Connection.StateChange -= Connection_StateChange;  					Queue.MessageAvailable -= Queue_Notification;  					try { Connection.Dispose(); }  					catch (Exception ex)  					{  						TraceSource.TraceEvent(TraceEventType.Error' 5132' "{0}"' ex);  					}  				}  				Connection = new OracleConnection(ConnectionInfo.ConnectionString);  				Connection.Open();  				CommitCommand = Connection.CreateCommand();  				CommitCommand.CommandText = "COMMIT";  				Connection.StateChange += Connection_StateChange;  				Queue = new OracleAQQueue("\"-DSL-\".NOTIFY_QUEUE"' Connection' OracleAQMessageType.Udt' "-DSL-.NOTIFY_INFO_TYPE");  				Queue.NotificationConsumers = new[] { ConsumerName };  				Queue.DequeueOptions.ConsumerName = ConsumerName;  				Queue.DequeueOptions.DequeueMode = OracleAQDequeueMode.Remove;  				Queue.DequeueOptions.DeliveryMode = OracleAQMessageDeliveryMode.Persistent;  				Queue.DequeueOptions.Visibility = OracleAQVisibilityMode.OnCommit;  				Queue.DequeueOptions.NavigationMode = OracleAQNavigationMode.NextTransaction;  				Queue.MessageAvailable += Queue_Notification;  				var converters = new List<OracleNotifyInfoConverter>();  				try  				{  					var deqOpt =  						new OracleAQDequeueOptions  						{  							Wait = 1'  							ConsumerName = ConsumerName'  							DequeueMode = OracleAQDequeueMode.Remove'  							DeliveryMode = OracleAQMessageDeliveryMode.Persistent'  							Visibility = OracleAQVisibilityMode.OnCommit'  							NavigationMode = OracleAQNavigationMode.NextTransaction  						};  					OracleAQMessage msg;  					while ((msg = Queue.Dequeue(deqOpt)) != null)  					{  						var nic = msg.Payload as OracleNotifyInfoConverter;  						if (nic != null)  							converters.Add(nic);  					}  				}  				catch (OracleException ex)  				{  					var err = ex.Errors.Count > 0 ? ex.Errors[0] : null;  					if (err == null || err.Number != 25228)  						TraceSource.TraceEvent(TraceEventType.Information' 5133' "{0}"' ex);  				}  				if (converters.Count > 0)  					ProcessNotifyConverters(converters);  				RetryCount = 0;  			}  			catch (Exception ex)  			{  				RetryCount++;  				TraceSource.TraceEvent(TraceEventType.Error' 5134' "{0}"' ex);  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleAdvancedQueueNotification,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleAdvancedQueueNotification.cs,SetUpConnection,The following statement contains a magic number: try  			{  				RetryCount++;  				if (RetryCount > 60)  				{  					TraceSource.TraceEvent(TraceEventType.Critical' 5130' "Retry count exceeded: {0}"' ConnectionInfo.ConnectionString);  					RetryCount = 30;  				}  				if (Connection != null)  				{  					Connection.StateChange -= Connection_StateChange;  					Queue.MessageAvailable -= Queue_Notification;  					try { Connection.Dispose(); }  					catch (Exception ex)  					{  						TraceSource.TraceEvent(TraceEventType.Error' 5132' "{0}"' ex);  					}  				}  				Connection = new OracleConnection(ConnectionInfo.ConnectionString);  				Connection.Open();  				CommitCommand = Connection.CreateCommand();  				CommitCommand.CommandText = "COMMIT";  				Connection.StateChange += Connection_StateChange;  				Queue = new OracleAQQueue("\"-DSL-\".NOTIFY_QUEUE"' Connection' OracleAQMessageType.Udt' "-DSL-.NOTIFY_INFO_TYPE");  				Queue.NotificationConsumers = new[] { ConsumerName };  				Queue.DequeueOptions.ConsumerName = ConsumerName;  				Queue.DequeueOptions.DequeueMode = OracleAQDequeueMode.Remove;  				Queue.DequeueOptions.DeliveryMode = OracleAQMessageDeliveryMode.Persistent;  				Queue.DequeueOptions.Visibility = OracleAQVisibilityMode.OnCommit;  				Queue.DequeueOptions.NavigationMode = OracleAQNavigationMode.NextTransaction;  				Queue.MessageAvailable += Queue_Notification;  				var converters = new List<OracleNotifyInfoConverter>();  				try  				{  					var deqOpt =  						new OracleAQDequeueOptions  						{  							Wait = 1'  							ConsumerName = ConsumerName'  							DequeueMode = OracleAQDequeueMode.Remove'  							DeliveryMode = OracleAQMessageDeliveryMode.Persistent'  							Visibility = OracleAQVisibilityMode.OnCommit'  							NavigationMode = OracleAQNavigationMode.NextTransaction  						};  					OracleAQMessage msg;  					while ((msg = Queue.Dequeue(deqOpt)) != null)  					{  						var nic = msg.Payload as OracleNotifyInfoConverter;  						if (nic != null)  							converters.Add(nic);  					}  				}  				catch (OracleException ex)  				{  					var err = ex.Errors.Count > 0 ? ex.Errors[0] : null;  					if (err == null || err.Number != 25228)  						TraceSource.TraceEvent(TraceEventType.Information' 5133' "{0}"' ex);  				}  				if (converters.Count > 0)  					ProcessNotifyConverters(converters);  				RetryCount = 0;  			}  			catch (Exception ex)  			{  				RetryCount++;  				TraceSource.TraceEvent(TraceEventType.Error' 5134' "{0}"' ex);  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleAdvancedQueueNotification,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleAdvancedQueueNotification.cs,Queue_Notification,The following statement contains a magic number: try  			{  				var converters =  					(from m in Queue.DequeueArray(e.AvailableMessages)  					 let ni = m.Payload as OracleNotifyInfoConverter  					 where ni != null  					 select ni).ToList();    				ProcessNotifyConverters(converters);  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Error' 5138' "{0}: {1} {2}"' e.QueueName' e.AvailableMessages' ex);  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleAdvancedQueueNotification,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleAdvancedQueueNotification.cs,Dispose,The following statement contains a magic number: try  			{  				if (Connection != null && Connection.State == ConnectionState.Open)  					Connection.Close();  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Error' 5139' "{0}"' ex);  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleAdvancedQueueNotification,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleAdvancedQueueNotification.cs,Dispose,The following statement contains a magic number: try { Connection.Dispose(); }  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Error' 5140' "{0}"' ex);  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleDatabaseQuery,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleDatabaseQuery.cs,PrepareCommand,The following statement contains a magic number: try  			{  				if (Transaction == null && Connection.State == ConnectionState.Closed)  				{  					if (Connection.ConnectionString != ConnectionString)  						Connection.ConnectionString = ConnectionString;  					Connection.Open();  				}  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Error' 5110' "{0}"' ex);  				try { Connection.Close(); }  				catch { }  				try { OracleConnection.ClearAllPools(); }  				catch (Exception cpex)  				{  					TraceSource.TraceEvent(TraceEventType.Error' 5111' "{0}"' cpex);  				}  				if (Connection.State == ConnectionState.Closed)  				{  					if (Connection.ConnectionString != ConnectionString)  						Connection.ConnectionString = ConnectionString;  					Connection.Open();  				}  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleDatabaseQuery,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleDatabaseQuery.cs,PrepareCommand,The following statement contains a magic number: try  			{  				if (Transaction == null && Connection.State == ConnectionState.Closed)  				{  					if (Connection.ConnectionString != ConnectionString)  						Connection.ConnectionString = ConnectionString;  					Connection.Open();  				}  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Error' 5110' "{0}"' ex);  				try { Connection.Close(); }  				catch { }  				try { OracleConnection.ClearAllPools(); }  				catch (Exception cpex)  				{  					TraceSource.TraceEvent(TraceEventType.Error' 5111' "{0}"' cpex);  				}  				if (Connection.State == ConnectionState.Closed)  				{  					if (Connection.ConnectionString != ConnectionString)  						Connection.ConnectionString = ConnectionString;  					Connection.Open();  				}  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleDatabaseQuery,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleDatabaseQuery.cs,ResetConnection,The following statement contains a magic number: try  			{  				Connection.Close();  				Connection.Dispose();  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Error' 5112' "{0}"' ex);  				try  				{  					OracleConnection.ClearAllPools();  				}  				catch (Exception cpex)  				{  					TraceSource.TraceEvent(TraceEventType.Error' 5113' "{0}"' cpex);  				}  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleDatabaseQuery,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleDatabaseQuery.cs,ResetConnection,The following statement contains a magic number: try  			{  				Connection.Close();  				Connection.Dispose();  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Error' 5112' "{0}"' ex);  				try  				{  					OracleConnection.ClearAllPools();  				}  				catch (Exception cpex)  				{  					TraceSource.TraceEvent(TraceEventType.Error' 5113' "{0}"' cpex);  				}  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleDatabaseQuery,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleDatabaseQuery.cs,ExecuteNonQuery,The following statement contains a magic number: try  			{  				lock (Transaction ?? sync)  				{  					PrepareCommand(command);  					return command.ExecuteNonQuery();  				}  			}  			catch (OracleException ex)  			{  				BrokenTransaction = !tryRecover;  				TraceSource.TraceEvent(TraceEventType.Verbose' 5114' command.CommandText);  				TraceSource.TraceEvent(TraceEventType.Error' 5114' "{0}"' ex);  				if (tryRecover && ex.InnerException is IOException)  				{  					ResetConnection();  					return ExecuteNonQuery(command' false);  				}  				else throw FormatException(ex' command);  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Error' 5115' "{0}"' ex);  				if (tryRecover)  				{  					ResetConnection();  					return ExecuteNonQuery(command' false);  				}  				else throw;  			}  			finally  			{  				command.Transaction = null;  				command.Connection = null;  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleDatabaseQuery,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleDatabaseQuery.cs,ExecuteNonQuery,The following statement contains a magic number: try  			{  				lock (Transaction ?? sync)  				{  					PrepareCommand(command);  					return command.ExecuteNonQuery();  				}  			}  			catch (OracleException ex)  			{  				BrokenTransaction = !tryRecover;  				TraceSource.TraceEvent(TraceEventType.Verbose' 5114' command.CommandText);  				TraceSource.TraceEvent(TraceEventType.Error' 5114' "{0}"' ex);  				if (tryRecover && ex.InnerException is IOException)  				{  					ResetConnection();  					return ExecuteNonQuery(command' false);  				}  				else throw FormatException(ex' command);  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Error' 5115' "{0}"' ex);  				if (tryRecover)  				{  					ResetConnection();  					return ExecuteNonQuery(command' false);  				}  				else throw;  			}  			finally  			{  				command.Transaction = null;  				command.Connection = null;  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleDatabaseQuery,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleDatabaseQuery.cs,ExecuteNonQuery,The following statement contains a magic number: try  			{  				lock (Transaction ?? sync)  				{  					PrepareCommand(command);  					return command.ExecuteNonQuery();  				}  			}  			catch (OracleException ex)  			{  				BrokenTransaction = !tryRecover;  				TraceSource.TraceEvent(TraceEventType.Verbose' 5114' command.CommandText);  				TraceSource.TraceEvent(TraceEventType.Error' 5114' "{0}"' ex);  				if (tryRecover && ex.InnerException is IOException)  				{  					ResetConnection();  					return ExecuteNonQuery(command' false);  				}  				else throw FormatException(ex' command);  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Error' 5115' "{0}"' ex);  				if (tryRecover)  				{  					ResetConnection();  					return ExecuteNonQuery(command' false);  				}  				else throw;  			}  			finally  			{  				command.Transaction = null;  				command.Connection = null;  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleDatabaseQuery,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleDatabaseQuery.cs,ExecuteDataReader,The following statement contains a magic number: try  			{  				lock (Transaction ?? sync)  				{  					PrepareCommand(command);  					using (var dr = command.ExecuteReader())  					{  						while (dr.Read())  						{  							hasRead = true;  							action(dr);  						}  					}  				}  			}  			catch (OracleException ex)  			{  				BrokenTransaction = !tryRecover;  				TraceSource.TraceEvent(TraceEventType.Verbose' 5116' command.CommandText);  				TraceSource.TraceEvent(TraceEventType.Error' 5116' "{0}"' ex);  				if (tryRecover && ex.InnerException is IOException && !hasRead)  				{  					ResetConnection();  					ExecuteDataReader(command' action' false);  				}  				else throw FormatException(ex' command);  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Error' 5117' "{0}"' ex);  				if (tryRecover && !hasRead)  				{  					ResetConnection();  					ExecuteDataReader(command' action' false);  				}  				else throw;  			}  			finally  			{  				command.Transaction = null;  				command.Connection = null;  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleDatabaseQuery,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleDatabaseQuery.cs,ExecuteDataReader,The following statement contains a magic number: try  			{  				lock (Transaction ?? sync)  				{  					PrepareCommand(command);  					using (var dr = command.ExecuteReader())  					{  						while (dr.Read())  						{  							hasRead = true;  							action(dr);  						}  					}  				}  			}  			catch (OracleException ex)  			{  				BrokenTransaction = !tryRecover;  				TraceSource.TraceEvent(TraceEventType.Verbose' 5116' command.CommandText);  				TraceSource.TraceEvent(TraceEventType.Error' 5116' "{0}"' ex);  				if (tryRecover && ex.InnerException is IOException && !hasRead)  				{  					ResetConnection();  					ExecuteDataReader(command' action' false);  				}  				else throw FormatException(ex' command);  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Error' 5117' "{0}"' ex);  				if (tryRecover && !hasRead)  				{  					ResetConnection();  					ExecuteDataReader(command' action' false);  				}  				else throw;  			}  			finally  			{  				command.Transaction = null;  				command.Connection = null;  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleDatabaseQuery,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleDatabaseQuery.cs,ExecuteDataReader,The following statement contains a magic number: try  			{  				lock (Transaction ?? sync)  				{  					PrepareCommand(command);  					using (var dr = command.ExecuteReader())  					{  						while (dr.Read())  						{  							hasRead = true;  							action(dr);  						}  					}  				}  			}  			catch (OracleException ex)  			{  				BrokenTransaction = !tryRecover;  				TraceSource.TraceEvent(TraceEventType.Verbose' 5116' command.CommandText);  				TraceSource.TraceEvent(TraceEventType.Error' 5116' "{0}"' ex);  				if (tryRecover && ex.InnerException is IOException && !hasRead)  				{  					ResetConnection();  					ExecuteDataReader(command' action' false);  				}  				else throw FormatException(ex' command);  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Error' 5117' "{0}"' ex);  				if (tryRecover && !hasRead)  				{  					ResetConnection();  					ExecuteDataReader(command' action' false);  				}  				else throw;  			}  			finally  			{  				command.Transaction = null;  				command.Connection = null;  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleDatabaseQuery,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleDatabaseQuery.cs,FillDataSet,The following statement contains a magic number: try  			{  				lock (Transaction ?? sync)  				{  					command.Connection = Connection;  					command.Transaction = Transaction;  					var da = new OracleDataAdapter(command);  					return da.Fill(ds);  				}  			}  			catch (OracleException ex)  			{  				BrokenTransaction = !tryRecover;  				TraceSource.TraceEvent(TraceEventType.Verbose' 5117' command.CommandText);  				TraceSource.TraceEvent(TraceEventType.Error' 5117' "{0}"' ex);  				if (tryRecover && ex.InnerException is IOException)  				{  					ResetConnection();  					return FillDataSet(command' ds' false);  				}  				else throw FormatException(ex' command);  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Error' 5118' "{0}"' ex);  				if (tryRecover)  				{  					ResetConnection();  					return FillDataSet(command' ds' false);  				}  				else throw;  			}  			finally  			{  				command.Transaction = null;  				command.Connection = null;  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleDatabaseQuery,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleDatabaseQuery.cs,FillDataSet,The following statement contains a magic number: try  			{  				lock (Transaction ?? sync)  				{  					command.Connection = Connection;  					command.Transaction = Transaction;  					var da = new OracleDataAdapter(command);  					return da.Fill(ds);  				}  			}  			catch (OracleException ex)  			{  				BrokenTransaction = !tryRecover;  				TraceSource.TraceEvent(TraceEventType.Verbose' 5117' command.CommandText);  				TraceSource.TraceEvent(TraceEventType.Error' 5117' "{0}"' ex);  				if (tryRecover && ex.InnerException is IOException)  				{  					ResetConnection();  					return FillDataSet(command' ds' false);  				}  				else throw FormatException(ex' command);  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Error' 5118' "{0}"' ex);  				if (tryRecover)  				{  					ResetConnection();  					return FillDataSet(command' ds' false);  				}  				else throw;  			}  			finally  			{  				command.Transaction = null;  				command.Connection = null;  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleDatabaseQuery,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleDatabaseQuery.cs,FillDataSet,The following statement contains a magic number: try  			{  				lock (Transaction ?? sync)  				{  					command.Connection = Connection;  					command.Transaction = Transaction;  					var da = new OracleDataAdapter(command);  					return da.Fill(ds);  				}  			}  			catch (OracleException ex)  			{  				BrokenTransaction = !tryRecover;  				TraceSource.TraceEvent(TraceEventType.Verbose' 5117' command.CommandText);  				TraceSource.TraceEvent(TraceEventType.Error' 5117' "{0}"' ex);  				if (tryRecover && ex.InnerException is IOException)  				{  					ResetConnection();  					return FillDataSet(command' ds' false);  				}  				else throw FormatException(ex' command);  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Error' 5118' "{0}"' ex);  				if (tryRecover)  				{  					ResetConnection();  					return FillDataSet(command' ds' false);  				}  				else throw;  			}  			finally  			{  				command.Transaction = null;  				command.Connection = null;  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleDatabaseQuery,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleDatabaseQuery.cs,Dispose,The following statement contains a magic number: try  			{  				if (Connection != null && Connection.State == ConnectionState.Open)  					Connection.Close();  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Error' 5119' "{0}"' ex);  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleOlapCubeQuery<TSource>,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleOlapCubeQuery.cs,Analyze,The following statement contains a magic number: sb.Length -= 2;
Magic Number,Revenj.DatabasePersistence.Oracle,OracleQueryManager,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleQueryManager.cs,StartQuery,The following statement contains a magic number: if (withTransaction)  			{  				try  				{  					connection.Open();  				}  				catch (Exception ex)  				{  					TraceSource.TraceEvent(TraceEventType.Error' 5010' "{0}"' ex);  					try { connection.Close(); }  					catch { }  					OracleConnection.ClearAllPools();  					connection = new OracleConnection(ConnectionString);  					connection.Open();  				}  				transaction = connection.BeginTransaction();  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleQueryManager,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleQueryManager.cs,StartQuery,The following statement contains a magic number: try  			{  				query = QueryFactory(connection' transaction);  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Critical' 5101' "{0}"' ex);  				TraceSource.TraceEvent(TraceEventType.Information' 5101' "Transactions: {0}' connections: {1}"' OpenTransactions.Count' OpenConnections.Count);  				throw;  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleQueryManager,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleQueryManager.cs,StartQuery,The following statement contains a magic number: try  			{  				query = QueryFactory(connection' transaction);  			}  			catch (Exception ex)  			{  				TraceSource.TraceEvent(TraceEventType.Critical' 5101' "{0}"' ex);  				TraceSource.TraceEvent(TraceEventType.Information' 5101' "Transactions: {0}' connections: {1}"' OpenTransactions.Count' OpenConnections.Count);  				throw;  			}
Magic Number,Revenj.DatabasePersistence.Oracle,OracleUriConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleUriConverter.cs,BuildSimpleUriList,The following statement contains a magic number: var sb = new StringBuilder(uris.Count * 40);
Magic Number,Revenj.DatabasePersistence.Oracle,OracleUriConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleUriConverter.cs,BuildCompositeUriList,The following statement contains a magic number: var sb = new StringBuilder(uris.Count * 40);
Magic Number,Revenj.DatabasePersistence.Oracle,OracleUriConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\OracleUriConverter.cs,BuildCompositeUri,The following statement contains a magic number: var sb = new StringBuilder(uri.Length + 4);
Magic Number,Revenj.DatabasePersistence.Oracle,Setup,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Setup.cs,Setup,The following statement contains a magic number: MinBatchSize = 1000;
Magic Number,Revenj.DatabasePersistence.Oracle.Converters,GuidArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\GuidArrayConverter.cs,FromOracleString,The following statement contains a magic number: var bytes = new byte[text.Length / 2];
Magic Number,Revenj.DatabasePersistence.Oracle.Converters,GuidArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\GuidArrayConverter.cs,FromOracleString,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++)  				bytes[i] = Convert.ToByte(text.Substring(i * 2' 2)' 16);
Magic Number,Revenj.DatabasePersistence.Oracle.Converters,GuidArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\GuidArrayConverter.cs,FromOracleString,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++)  				bytes[i] = Convert.ToByte(text.Substring(i * 2' 2)' 16);
Magic Number,Revenj.DatabasePersistence.Oracle.Converters,GuidArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\GuidArrayConverter.cs,FromOracleString,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++)  				bytes[i] = Convert.ToByte(text.Substring(i * 2' 2)' 16);
Magic Number,Revenj.DatabasePersistence.Oracle.Converters,StringArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\StringArrayConverter.cs,ToParameter,The following statement contains a magic number: return str != null && str.Length > 2000  				? new OracleParameter { OracleDbType = OracleDbType.Clob' Value = value }  				: new OracleParameter { OracleDbType = OracleDbType.Varchar2' Value = value };
Magic Number,Revenj.DatabasePersistence.Oracle.Converters,TextArrayConverter,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Converters\TextArrayConverter.cs,ToParameter,The following statement contains a magic number: return str != null && str.Length > 2000  				? new OracleParameter { OracleDbType = OracleDbType.Clob' Value = value }  				: new OracleParameter { OracleDbType = OracleDbType.Varchar2' Value = value };
Magic Number,Revenj.DatabasePersistence.Oracle.Plugins.ExpressionSupport,LikeStringComparison,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,CompareString,The following statement contains a magic number: if (count != 2 && count != 3)  				return false;
Magic Number,Revenj.DatabasePersistence.Oracle.Plugins.ExpressionSupport,LikeStringComparison,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,CompareString,The following statement contains a magic number: if (count != 2 && count != 3)  				return false;
Magic Number,Revenj.DatabasePersistence.Oracle.Plugins.ExpressionSupport,LikeStringComparison,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,CompareString,The following statement contains a magic number: if (count == 2)  			{  				queryBuilder.Append("(");  				if (context.InSelect)  					queryBuilder.Append(" CASE WHEN ");  				visitExpression(methodCall.Arguments[0]);  				if (equal)  					queryBuilder.Append(" = ");  				else  					queryBuilder.Append(" <> ");  				visitExpression(methodCall.Arguments[1]);  			}  			else  			{  				var cmpValue = methodCall.Arguments[2] as ConstantExpression;  				if (methodCall.Arguments[2].Type == typeof(bool) && cmpValue != null)  				{  					queryBuilder.Append("(");  					if (context.InSelect)  						queryBuilder.Append(" CASE WHEN ");  					EscapeForLike(equal' (bool)cmpValue.Value' methodCall' queryBuilder' visitExpression);  				}  				else if (methodCall.Arguments[2].Type == typeof(StringComparison))  				{  					var cmpVal = (StringComparison)cmpValue.Value;  					var ignoreCase = cmpVal != StringComparison.CurrentCulture  						&& cmpVal != StringComparison.InvariantCulture  						&& cmpVal != StringComparison.Ordinal;    					queryBuilder.Append("(");  					if (context.InSelect)  						queryBuilder.Append(" CASE WHEN ");  					EscapeForLike(equal' ignoreCase' methodCall' queryBuilder' visitExpression);  				}  				else return false;  			}
Magic Number,Revenj.DatabasePersistence.Oracle.Plugins.ExpressionSupport,LikeStringComparison,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,CompareString,The following statement contains a magic number: if (count == 2)  			{  				queryBuilder.Append("(");  				if (context.InSelect)  					queryBuilder.Append(" CASE WHEN ");  				visitExpression(methodCall.Arguments[0]);  				if (equal)  					queryBuilder.Append(" = ");  				else  					queryBuilder.Append(" <> ");  				visitExpression(methodCall.Arguments[1]);  			}  			else  			{  				var cmpValue = methodCall.Arguments[2] as ConstantExpression;  				if (methodCall.Arguments[2].Type == typeof(bool) && cmpValue != null)  				{  					queryBuilder.Append("(");  					if (context.InSelect)  						queryBuilder.Append(" CASE WHEN ");  					EscapeForLike(equal' (bool)cmpValue.Value' methodCall' queryBuilder' visitExpression);  				}  				else if (methodCall.Arguments[2].Type == typeof(StringComparison))  				{  					var cmpVal = (StringComparison)cmpValue.Value;  					var ignoreCase = cmpVal != StringComparison.CurrentCulture  						&& cmpVal != StringComparison.InvariantCulture  						&& cmpVal != StringComparison.Ordinal;    					queryBuilder.Append("(");  					if (context.InSelect)  						queryBuilder.Append(" CASE WHEN ");  					EscapeForLike(equal' ignoreCase' methodCall' queryBuilder' visitExpression);  				}  				else return false;  			}
Magic Number,Revenj.DatabasePersistence.Oracle.Plugins.ExpressionSupport,LikeStringComparison,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,CompareString,The following statement contains a magic number: if (count == 2)  			{  				queryBuilder.Append("(");  				if (context.InSelect)  					queryBuilder.Append(" CASE WHEN ");  				visitExpression(methodCall.Arguments[0]);  				if (equal)  					queryBuilder.Append(" = ");  				else  					queryBuilder.Append(" <> ");  				visitExpression(methodCall.Arguments[1]);  			}  			else  			{  				var cmpValue = methodCall.Arguments[2] as ConstantExpression;  				if (methodCall.Arguments[2].Type == typeof(bool) && cmpValue != null)  				{  					queryBuilder.Append("(");  					if (context.InSelect)  						queryBuilder.Append(" CASE WHEN ");  					EscapeForLike(equal' (bool)cmpValue.Value' methodCall' queryBuilder' visitExpression);  				}  				else if (methodCall.Arguments[2].Type == typeof(StringComparison))  				{  					var cmpVal = (StringComparison)cmpValue.Value;  					var ignoreCase = cmpVal != StringComparison.CurrentCulture  						&& cmpVal != StringComparison.InvariantCulture  						&& cmpVal != StringComparison.Ordinal;    					queryBuilder.Append("(");  					if (context.InSelect)  						queryBuilder.Append(" CASE WHEN ");  					EscapeForLike(equal' ignoreCase' methodCall' queryBuilder' visitExpression);  				}  				else return false;  			}
Magic Number,Revenj.DatabasePersistence.Oracle.Plugins.ExpressionSupport,LikeStringComparison,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Plugins\ExpressionSupport\LikeStringComparison.cs,CompareString,The following statement contains a magic number: if (count == 2)  			{  				queryBuilder.Append("(");  				if (context.InSelect)  					queryBuilder.Append(" CASE WHEN ");  				visitExpression(methodCall.Arguments[0]);  				if (equal)  					queryBuilder.Append(" = ");  				else  					queryBuilder.Append(" <> ");  				visitExpression(methodCall.Arguments[1]);  			}  			else  			{  				var cmpValue = methodCall.Arguments[2] as ConstantExpression;  				if (methodCall.Arguments[2].Type == typeof(bool) && cmpValue != null)  				{  					queryBuilder.Append("(");  					if (context.InSelect)  						queryBuilder.Append(" CASE WHEN ");  					EscapeForLike(equal' (bool)cmpValue.Value' methodCall' queryBuilder' visitExpression);  				}  				else if (methodCall.Arguments[2].Type == typeof(StringComparison))  				{  					var cmpVal = (StringComparison)cmpValue.Value;  					var ignoreCase = cmpVal != StringComparison.CurrentCulture  						&& cmpVal != StringComparison.InvariantCulture  						&& cmpVal != StringComparison.Ordinal;    					queryBuilder.Append("(");  					if (context.InSelect)  						queryBuilder.Append(" CASE WHEN ");  					EscapeForLike(equal' ignoreCase' methodCall' queryBuilder' visitExpression);  				}  				else return false;  			}
Magic Number,Revenj.DatabasePersistence.Oracle.Plugins.ExpressionSupport,StringMethods,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Plugins\ExpressionSupport\StringMethods.cs,Compare,The following statement contains a magic number: if (methodCall.Arguments.Count == 2)  			{  				ce = methodCall.Arguments[1] as ConstantExpression;  				switch ((StringComparison)ce.Value)  				{  					case StringComparison.CurrentCulture:  					case StringComparison.InvariantCulture:  					case StringComparison.Ordinal:  						break;  					default:  						ignoreCase = true;  						break;  				}  			}
Magic Number,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,QueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\QueryParts.cs,GetQuerySourceFromExpression,The following statement contains a magic number: if (sqe != null)  			{  				if (sqe.QueryModel.CanUseMain())  					return GetQuerySourceFromExpression(name' type' sqe.QueryModel.MainFromClause.FromExpression);  				//TODO hack za replaceanje generiranog id-a  				var subquery = SubqueryGeneratorQueryModelVisitor.ParseSubquery(sqe.QueryModel' this' ContextName' Context.Select());  				var grouping = sqe.QueryModel.ResultOperators.FirstOrDefault(it => it is GroupResultOperator) as GroupResultOperator;  				if (grouping == null && subquery.Selects.Count == 1)  				{  					if (sqe.QueryModel.ResultOperators.Any(it => it is UnionResultOperator || it is ConcatResultOperator))  					{  						var ind = subquery.Selects[0].Sql.IndexOf(" AS ");  						if (ind > 0)  						{  							var asName = subquery.Selects[0].Sql.Substring(ind + 4).Trim().Replace("\""' "");  							if (asName != name)  								subquery.Selects[0].Sql = subquery.Selects[0].Sql.Substring(0' ind + 4) + "\"" + name + "\"";  						}  						else  						{  							subquery.Selects[0].Sql = subquery.Selects[0].Sql + " AS \"" + name + "\"";  						}  						return "(" + subquery.BuildSqlString(true) + ") \"" + name + "\"";  					}  					return "(" + subquery.BuildSqlString(true).Replace("\"" + sqe.QueryModel.MainFromClause.ItemName + "\""' "\"" + name + "\"") + ") \"" + name + "\"";  				}  				return "(" + subquery.BuildSqlString(true) + ") \"" + name + "\"";  			}
Magic Number,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,QueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\QueryParts.cs,GetQuerySourceFromExpression,The following statement contains a magic number: if (sqe != null)  			{  				if (sqe.QueryModel.CanUseMain())  					return GetQuerySourceFromExpression(name' type' sqe.QueryModel.MainFromClause.FromExpression);  				//TODO hack za replaceanje generiranog id-a  				var subquery = SubqueryGeneratorQueryModelVisitor.ParseSubquery(sqe.QueryModel' this' ContextName' Context.Select());  				var grouping = sqe.QueryModel.ResultOperators.FirstOrDefault(it => it is GroupResultOperator) as GroupResultOperator;  				if (grouping == null && subquery.Selects.Count == 1)  				{  					if (sqe.QueryModel.ResultOperators.Any(it => it is UnionResultOperator || it is ConcatResultOperator))  					{  						var ind = subquery.Selects[0].Sql.IndexOf(" AS ");  						if (ind > 0)  						{  							var asName = subquery.Selects[0].Sql.Substring(ind + 4).Trim().Replace("\""' "");  							if (asName != name)  								subquery.Selects[0].Sql = subquery.Selects[0].Sql.Substring(0' ind + 4) + "\"" + name + "\"";  						}  						else  						{  							subquery.Selects[0].Sql = subquery.Selects[0].Sql + " AS \"" + name + "\"";  						}  						return "(" + subquery.BuildSqlString(true) + ") \"" + name + "\"";  					}  					return "(" + subquery.BuildSqlString(true).Replace("\"" + sqe.QueryModel.MainFromClause.ItemName + "\""' "\"" + name + "\"") + ") \"" + name + "\"";  				}  				return "(" + subquery.BuildSqlString(true) + ") \"" + name + "\"";  			}
Magic Number,Revenj.DatabasePersistence.Oracle.QueryGeneration.QueryComposition,QueryParts,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\QueryComposition\QueryParts.cs,ProcessLimitAndOffsetOperators,The following statement contains a magic number: if (first.Count == 1)  			{  				if (offset.Count == 0)  				{  					sb.Insert(0' "SELECT * FROM (");  					sb.Append(") sq WHERE RowNum = 1");  				}  				if (offset.Count == 1)  				{  					var exp = GetSqlExpression(offset[0].Count);  					sb.Insert(0' "SELECT * FROM ( SELECT /*+ FIRST_ROWS(n) */ sq.*' RowNum rn$ FROM (");  					sb.Append(") sq WHERE RowNum <= 1 + ");  					sb.Append(exp);  					sb.Append(") WHERE rn$ > ");  					sb.Append(exp);  					CurrentSelectIndex++;  				}  			}  			else if (single.Count == 1)  			{  				var minLimit = "2";  				if (limit.Count != 0)  				{  					if (limit.TrueForAll(it => it.Count is ConstantExpression))  					{  						var min = limit.Min(it => (int)(it.Count as ConstantExpression).Value);  						if (min > 1) min = 2;  						minLimit = min.ToString();  					}  					else  					{  						minLimit = "LEAST(2'" + string.Join("' "' limit.Select(it => GetSqlExpression(it.Count))) + ")";  					}  				}  				if (offset.Count == 0)  				{  					sb.Insert(0' "SELECT * FROM (");  					sb.Append(") sq WHERE RowNum <= ");  					sb.Append(minLimit);  				}  				if (offset.Count == 1)  				{  					var exp = GetSqlExpression(offset[0].Count);  					sb.Insert(0' "SELECT * FROM ( SELECT /*+ FIRST_ROWS(n) */ sq.*' RowNum rn$ FROM (");  					sb.Append(") sq WHERE RowNum <= ");  					sb.Append(minLimit);  					sb.Append(" + ");  					sb.Append(exp);  					sb.Append(") WHERE rn$ > ");  					sb.Append(exp);  					CurrentSelectIndex++;  				}  			}  			else if (limit.Count > 0 && offset.Count == 0)  			{  				sb.Insert(0' "SELECT * FROM (");  				sb.Append(") sq WHERE RowNum <= ");  				if (limit.Count > 1)  					sb.Append("LEAST(")  						.Append(  							string.Join(  								"' "'  								limit.Select(it => GetSqlExpression(it.Count))))  						.AppendLine(")");  				else sb.AppendLine(GetSqlExpression(limit[0].Count));  			}  			else if (limit.Count == 0 && offset.Count > 0)  			{  				sb.Insert(0' "SELECT * FROM ( SELECT /*+ FIRST_ROWS(n) */ sq.*' RowNum rn$ FROM (");  				sb.Append(") sq ) WHERE rn$ > ");  				sb.Append(GetSqlExpression(offset[0].Count));  				for (int i = 1; i < offset.Count; i++)  					sb.Append(" + " + GetSqlExpression(offset[i].Count));  				CurrentSelectIndex++;  			}  			else if (limit.Count == 1 && offset.Count == 1)  			{  				sb.Insert(0' "SELECT * FROM ( SELECT /*+ FIRST_ROWS(n) */ sq.*' RowNum rn$ FROM (");  				sb.Append(") sq WHERE RowNum <= ");  				if (ResultOperators.IndexOf(limit[0]) < ResultOperators.IndexOf(offset[0]))  					sb.AppendLine(GetSqlExpression(limit[0].Count));  				else  					sb.AppendLine("{0} + {1}".With(GetSqlExpression(limit[0].Count)' GetSqlExpression(offset[0].Count)));  				sb.Append(") WHERE rn$ > ");  				sb.AppendLine(GetSqlExpression(offset[0].Count));  				CurrentSelectIndex++;  			}  			else if (limit.Count > 1 || offset.Count > 1)  				throw new NotSupportedException("Unsupported combination of limits and offsets in query. More than one offset and more than one limit found.");
Magic Number,Revenj,Setup,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\Setup.cs,Setup,The following statement contains a magic number: MinBatchSize = 1000;
Missing Default,Revenj.DatabasePersistence.Oracle.QueryGeneration.Visitors,SqlGeneratorExpressionTreeVisitor,C:\repos\ngs-doo_revenj\csharp\Core\Revenj.DatabasePersistence.Oracle\QueryGeneration\Visitors\SqlGeneratorExpressionTreeVisitor.cs,VisitBinaryExpression,The following switch statement is missing a default case: switch (expression.NodeType)  			{  				case ExpressionType.Coalesce:  					SqlExpression.Append(" COALESCE(");  					VisitExpression(expression.Left);  					SqlExpression.Append("' ");  					VisitExpression(expression.Right);  					SqlExpression.Append(")");  					return expression;  				case ExpressionType.Modulo:  					SqlExpression.Append(" MOD(");  					VisitExpression(expression.Left);  					SqlExpression.Append("' ");  					VisitExpression(expression.Right);  					SqlExpression.Append(")");  					return expression;  			}
