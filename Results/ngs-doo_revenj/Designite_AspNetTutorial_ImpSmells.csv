Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,AspNetTutorial,RevenjMiddleware,C:\research\architectureSmells\repos\ngs-doo_revenj\tutorials\AspNetCore\Middleware\RevenjMiddleware.cs,RevenjMiddleware,The method has 5 parameters. Parameters: next' objectFactory' serialization' domainModel' loggerProvider
Long Statement,AspNetTutorial.Customers,CustomerService,C:\research\architectureSmells\repos\ngs-doo_revenj\tutorials\AspNetCore\Customers\CustomerService.cs,CheckPassportChanged,The length of the statement  "				return new CustomerPassportChanged { customerID = current.id' oldPassport = currentPassport' newPassport = newPassport }; " is 121.
Long Statement,AspNetTutorial,Validate,C:\research\architectureSmells\repos\ngs-doo_revenj\tutorials\AspNetCore\Customers\Validate.cs,Phone,The length of the statement  "			else if (string.IsNullOrEmpty(newValue.regionCode)) command.LogError($"{path}.{nameof(newValue.regionCode)}"' "Region code missing"); " is 133.
Long Statement,AspNetTutorial,Validate,C:\research\architectureSmells\repos\ngs-doo_revenj\tutorials\AspNetCore\Customers\Validate.cs,Phone,The length of the statement  "			else if (!newValue.number.StartsWith('+')) command.LogError($"{path}.{nameof(newValue.number)}"' "Phone number must start with +"); " is 131.
Long Statement,AspNetTutorial,Validate,C:\research\architectureSmells\repos\ngs-doo_revenj\tutorials\AspNetCore\Customers\Validate.cs,Phone,The length of the statement  "			else if (newValue.number.IndexOf('+') != newValue.number.LastIndexOf('+')) command.LogError($"{path}.{nameof(newValue.number)}"' "Only one + per number allowed"); " is 162.
Long Statement,AspNetTutorial,RevenjMiddleware,C:\research\architectureSmells\repos\ngs-doo_revenj\tutorials\AspNetCore\Middleware\RevenjMiddleware.cs,HandleCommand,The length of the statement  "				newDict[type] = execute = (IExecuteCommand)Activator.CreateInstance(genType' objectFactory' serialization' loggerProvider); " is 123.
Complex Conditional,AspNetTutorial.Customers,CustomerService,C:\research\architectureSmells\repos\ngs-doo_revenj\tutorials\AspNetCore\Customers\CustomerService.cs,CheckMobileChanged,The conditional expression  "customer.mobile == null && mobile != null  				|| customer.mobile != null && !customer.mobile.Equals(mobile)"  is complex.
Complex Conditional,AspNetTutorial.Customers,CustomerService,C:\research\architectureSmells\repos\ngs-doo_revenj\tutorials\AspNetCore\Customers\CustomerService.cs,CheckPassportChanged,The conditional expression  "currentPassport == null && newPassport != null  				|| currentPassport != null && !currentPassport.Equals(newPassport)"  is complex.
Magic Number,AspNetTutorial.Customers,CustomerService,C:\research\architectureSmells\repos\ngs-doo_revenj\tutorials\AspNetCore\Customers\CustomerService.cs,ValidateID,The following statement contains a magic number: command.id = Guid.NewGuid().ToString().Replace("-"' "").Substring(0' 15);
Magic Number,AspNetTutorial,Validate,C:\research\architectureSmells\repos\ngs-doo_revenj\tutorials\AspNetCore\Customers\Validate.cs,Name,The following statement contains a magic number: newValue.Length < 2
Magic Number,AspNetTutorial,RevenjMiddleware,C:\research\architectureSmells\repos\ngs-doo_revenj\tutorials\AspNetCore\Middleware\RevenjMiddleware.cs,HandleCommand,The following statement contains a magic number: return ReturnError(context.Response' $"Invalid command: {command}"' 400);
Magic Number,AspNetTutorial,ExecuteCommand<T>,C:\research\architectureSmells\repos\ngs-doo_revenj\tutorials\AspNetCore\Middleware\RevenjMiddleware.cs,Submit,The following statement contains a magic number: http.Response.StatusCode = 200;
