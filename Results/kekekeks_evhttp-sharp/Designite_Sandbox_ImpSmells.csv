Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Sandbox,Program,F:\newReposMay17\kekekeks_evhttp-sharp\Sandbox\Program.cs,Main,The length of the statement  "	var workers = args.Where (a => a.StartsWith (workerPrefix)).Select (a => int.Parse (a.Substring (workerPrefix.Length))).FirstOrDefault (); " is 138.
Long Statement,Sandbox,Program,F:\newReposMay17\kekekeks_evhttp-sharp\Sandbox\Program.cs,Main,The length of the statement  "		new EventHttpMultiworkerListener (req => req.Respond (HttpStatusCode.OK' new Dictionary<string' string> ()' Encoding.UTF8.GetBytes ("Hello from thread " + Thread.CurrentThread.ManagedThreadId))' workers).Start (args [0]' ushort.Parse (args [1])); " is 246.
Long Statement,Sandbox,Program,F:\newReposMay17\kekekeks_evhttp-sharp\Sandbox\Program.cs,Main,The length of the statement  "		var host = new Nancy.Hosting.Event2.NancyEvent2Host (args [0]' int.Parse (args [1])' new DefaultNancyBootstrapper ()' workers); " is 127.
Magic Number,Sandbox,AsyncModule,F:\newReposMay17\kekekeks_evhttp-sharp\Sandbox\AsyncModule.cs,AsyncModule,The following statement contains a magic number: Get ["async"' true] = (args' token) => {  	var tcs = new TaskCompletionSource<object> ();  	ThreadPool.QueueUserWorkItem (_ => {  		Thread.Sleep (100);  		tcs.SetResult ("OK");  	});  	return tcs.Task;  };  
Magic Number,Sandbox,AsyncModule,F:\newReposMay17\kekekeks_evhttp-sharp\Sandbox\AsyncModule.cs,AsyncModule,The following statement contains a magic number: ThreadPool.QueueUserWorkItem (_ => {  	Thread.Sleep (100);  	tcs.SetResult ("OK");  });  
Magic Number,Sandbox,AsyncModule,F:\newReposMay17\kekekeks_evhttp-sharp\Sandbox\AsyncModule.cs,AsyncModule,The following statement contains a magic number: Thread.Sleep (100);  
