Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,NuGetGallery.FunctionalTests.ErrorHandling,TestResponse,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ErrorHandling\TestResponse.cs,TestResponse,The method has 7 parameters. Parameters: relativePath' statusCode' reasonPhrase' contentTypeHeader' locationHeader' contentLength' content
Long Parameter List,NuGetGallery.FunctionalTests.License,LicenseTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\License\LicenseTests.cs,UploadInValidPackageWithLicenseFile,The method has 5 parameters. Parameters: licenseUrl' licenseFile' licenseFileName' licenseFileContents' expectedErrorMessage
Long Identifier,NuGetGallery.FunctionalTests.ErrorHandling,ErrorHandlingTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ErrorHandling\ErrorHandlingTests.cs,,The length of the parameter ExpectedSimulatedErrorResponses is 31.
Long Statement,NuGetGallery.FunctionalTests.Commandline,NugetCommandLineTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\Commandline\NuGetCommandLineTests.cs,DownloadPackage,The length of the statement  "            var result = await _commandlineHelper.InstallPackageAsync(packageId' UrlHelper.V2FeedRootUrl' Environment.CurrentDirectory); " is 124.
Long Statement,NuGetGallery.FunctionalTests.Commandline,NugetCommandLineTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\Commandline\NuGetCommandLineTests.cs,LockedPackageCannotBeModified,The length of the statement  "            TestOutputHelper.WriteLine($"1. Trying to upload package '{LockedPackageId}'' version '{version}' to locked package id."); " is 122.
Long Statement,NuGetGallery.FunctionalTests.Commandline,NugetCommandLineTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\Commandline\NuGetCommandLineTests.cs,LockedPackageCannotBeModified,The length of the statement  "            TestOutputHelper.WriteLine($"5. Trying to unlist locked package '{LockedPackageId}'' version '{LockedPackageVersion}'."); " is 121.
Long Statement,NuGetGallery.FunctionalTests.Commandline,NugetCommandLineTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\Commandline\NuGetCommandLineTests.cs,LockedPackageCannotBeModified,The length of the statement  "            processResult = await _commandlineHelper.DeletePackageAsync(LockedPackageId' LockedPackageVersion' UrlHelper.V2FeedPushSourceUrl); " is 130.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,CuratedFeedTest,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\CuratedFeedTest.cs,SearchMicrosoftDotNetCuratedFeed,The length of the statement  "            var requestUrl = UrlHelper.DotnetCuratedFeedUrl + @"Packages()?$filter=tolower(Id)%20eq%20'" + packageId + "'&$orderby=Id&$skip=0&$top=30"; " is 139.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,SearchTest,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\SearchTest.cs,SearchFeedAsync,The length of the statement  "            var requestUrl = feedRootUrl + @"Search()?$filter=IsLatestVersion&$skip=0&$top=25&searchTerm='newtonsoft%20json'&targetFramework='net40'&includePrerelease=false"; " is 162.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,SearchTest,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\SearchTest.cs,SearchFeedAsync,The length of the statement  "                     || responseText.Contains(@"<d:Title>" + title + @"</d:Title>")' "The expected package title '" + title + "' wasn't found in the feed. Feed contents: " + responseText); " is 167.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,SearchTest,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\SearchTest.cs,SearchFeedAsync,The length of the statement  "            Assert.True(responseText.Contains(@"<content type=""application/zip"" src=""" + expectedUrl)' "The expected package URL '" + expectedUrl + "' wasn't found in the feed.  Feed contents: " + responseText); " is 202.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,SearchTest,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\SearchTest.cs,SearchFeedAsync,The length of the statement  "            Assert.False(responseText.Contains(@"jquery")' "The feed contains non-matching package names. Feed contents: " + responseText); " is 127.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedExtendedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedExtendedTests.cs,FindPackagesByIdTest,The length of the statement  "            var containsResponseText = await _odataHelper.ContainsResponseText(url' @"<id>" + UrlHelper.V2FeedRootUrl + "Packages(Id='" + packageId + "''Version='" + packageVersion + "')</id>"); " is 182.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedExtendedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedExtendedTests.cs,PackagesAppearInFeedInOrderTest,The length of the statement  "            // Because it waits for previous requests to finish before starting new ones' it will only catch ordering issues if these issues are greater than a second or two. " is 162.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedExtendedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedExtendedTests.cs,PackagesAppearInFeedInOrderTest,The length of the statement  "            // This is consistent with the time frame in which we've seen these issues in the past' but if new issues arise that are on a smaller scale' this test will not catch it! " is 169.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedExtendedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedExtendedTests.cs,PackagesAppearInFeedInOrderTest,The length of the statement  "            await Task.WhenAll(uploadedPackageIds.Select(id => _clientSdkHelper.VerifyPackageExistsInV2Async(id' version' listed: true))); " is 126.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedExtendedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedExtendedTests.cs,PackagesAppearInFeedInOrderTest,The length of the statement  "            await Task.WhenAll(unlistedPackageIds.Select(id => _clientSdkHelper.VerifyPackageExistsInV2Async(id' version' listed: false))); " is 127.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedExtendedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedExtendedTests.cs,GetPackagesAppearInFeedInOrderUrl,The length of the statement  "            return $"{UrlHelper.V2FeedRootUrl}/Packages?$filter={timestamp} gt DateTime'{time:o}'&$orderby={timestamp} desc&$select={timestamp}"; " is 133.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedExtendedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedExtendedTests.cs,CheckPackageTimestampsInOrder,The length of the statement  "                TestOutputHelper.WriteLine($"Attempting to check order of package {packageId} {version} {timestampPropertyName} timestamp in feed."); " is 133.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedExtendedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedExtendedTests.cs,CheckPackageTimestampsInOrder,The length of the statement  "                    $"Package {packageId} was last modified after package {lastPackageId} but has an earlier {timestampPropertyName} timestamp ({newTimestamp} should be greater than {lastTimestamp})."); " is 182.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedExtendedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedExtendedTests.cs,GetUpdates1199RegressionTest,The length of the statement  "            var version2 = new Version(Convert.ToInt32(ticks.Substring(0' 6) + 1) + "." + ticks.Substring(6' 6) + "." + ticks.Substring(12' 6)).ToString(); " is 143.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedExtendedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedExtendedTests.cs,GetUpdates1199RegressionTest,The length of the statement  "            Assert.True(processResult.ExitCode == 0' Constants.UploadFailureMessage + "Exit Code: " + processResult.ExitCode + ". Error message: \"" + processResult.StandardError + "\""); " is 175.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedExtendedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedExtendedTests.cs,GetUpdates1199RegressionTest,The length of the statement  "            Assert.True((processResult.ExitCode == 0)' Constants.UploadFailureMessage + "Exit Code: " + processResult.ExitCode + ". Error message: \"" + processResult.StandardError + "\""); " is 177.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedTests.cs,ApiV2MetadataTest,The length of the statement  "            bool containsResponseText = await _odataHelper.ContainsResponseText(UrlHelper.V2FeedRootUrl + @"$metadata"' expectedText); " is 122.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedTests.cs,Top30PackagesFeedTest,The length of the statement  "            string url = UrlHelper.V2FeedRootUrl + @"/Search()?$filter=IsAbsoluteLatestVersion&$orderby=DownloadCount%20desc'Id&$skip=0&$top=30&searchTerm=''&targetFramework='net45'&includePrerelease=true"; " is 194.
Long Statement,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedTests.cs,ODataQueryFilter,The length of the statement  "            //If the search engine will be changed to handle the types of requests passed as inputs; the test inputs need to be changed. " is 124.
Long Statement,NuGetGallery.FunctionalTests.PackageCreation,ApiPushTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\PackageCreation\ApiPushTests.cs,PushDuplicates,The length of the statement  "                    TestOutputHelper.WriteLine($"{packageId}/{packageVersion} Task {taskIndex:D2} push:     HTTP {(int)statusCodes[taskIndex - 1]}"); " is 129.
Long Statement,NuGetGallery.FunctionalTests.PackageCreation,SecurityPolicyTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\PackageCreation\SecurityPolicyTests.cs,PackagePush_Returns200IfMinProtocolVersionPolicyMet,The length of the statement  "            var response = await PushPackageAsync(GalleryConfiguration.Instance.Account.ApiKey' id' clientVersion: null' protocolVersion: "4.1.0"); " is 135.
Long Statement,NuGetGallery.FunctionalTests.PackageCreation,SecurityPolicyTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\PackageCreation\SecurityPolicyTests.cs,VerifyPackageKey_Returns404ForMissingPackage,The length of the statement  "            var verificationKey = await CreateVerificationKey(GalleryConfiguration.Instance.Account.ApiKey' packageId' packageVersion); " is 123.
Long Statement,NuGetGallery.FunctionalTests.PackageCreation,SecurityPolicyTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\PackageCreation\SecurityPolicyTests.cs,VerifyPackageKey_Returns200ForFullApiKey,The length of the statement  "            Assert.Equal(HttpStatusCode.OK' await VerifyPackageKey(GalleryConfiguration.Instance.Account.ApiKey' packageId' packageVersion)); " is 129.
Long Statement,NuGetGallery.FunctionalTests.PackageCreation,SecurityPolicyTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\PackageCreation\SecurityPolicyTests.cs,VerifyPackageKey_Returns200ForTempApiKey,The length of the statement  "            var verificationKey = await CreateVerificationKey(GalleryConfiguration.Instance.Account.ApiKey' packageId' packageVersion); " is 123.
Long Statement,NuGetGallery.FunctionalTests.Security,HttpToHttpsRedirectTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\Security\HttpToHttpsRedirectTests.cs,NonHeadAndGetForAllUrls,The length of the statement  "            return HttpMethodsAndUrlsToTest(HttpMethod.Options' HttpMethod.Post' HttpMethod.Put' HttpMethod.Delete' HttpMethod.Trace); " is 122.
Long Statement,NuGetGallery.FunctionalTests.Statistics,PackageStatisticsTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\Statistics\PackageStatisticsTests.cs,PackageFeedStatsSanityTest,The length of the statement  "            string firstPackage = responseText.Substring(responseText.IndexOf("{")' responseText.IndexOf("}") - responseText.IndexOf("{")); " is 127.
Long Statement,NuGetGallery.FunctionalTests.License,LicenseTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\License\LicenseTests.cs,UploadInValidPackageWithLicenseExpression,The length of the statement  "            string packageFullPath = await _packageCreationHelper.CreatePackageWithLicenseExpression(packageName' packageVersion' licenseUrl' licenseExpression); " is 149.
Long Statement,NuGetGallery.FunctionalTests.License,LicenseTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\License\LicenseTests.cs,UploadInValidPackageWithLicenseFile,The length of the statement  "            string packageFullPath = await _packageCreationHelper.CreatePackageWithLicenseFile(packageName' packageVersion' licenseUrl' licenseFile' licenseFileName' licenseFileContents); " is 175.
Magic Number,NuGetGallery.FunctionalTests.ErrorHandling,Validator,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ErrorHandling\Validator.cs,Redirect,The following statement contains a magic number: return response =>              {                  Assert.Equal(HttpStatusCode.Found' response.StatusCode);                  Assert.Equal(GetDefaultReasonPhrase(HttpStatusCode.Found)' response.ReasonPhrase);                  AssertContentTypeIsHtml(response);                  Assert.NotNull(response.LocationHeader);                    const string errorsPrefix = "/Errors/";                  Assert.StartsWith(errorsPrefix' response.LocationHeader);                    var errorNumberAndQueryString = response.LocationHeader.Substring(errorsPrefix.Length);                  var pieces = errorNumberAndQueryString.Split(new[] { '?' }' 2);                  Assert.Equal(2' pieces.Length);                  var actualErrorPageName = pieces[0];                  var queryString = pieces[1];                    var questionMarkIndex = response.RelativePath.IndexOf('?');                  var expectedRelativePath = response.RelativePath;                  if (questionMarkIndex >= 0)                  {                      expectedRelativePath = expectedRelativePath.Substring(0' questionMarkIndex);                  }                    Assert.Equal($"aspxerrorpath={expectedRelativePath}"' queryString);                  Assert.Contains(errorPageName' actualErrorPageName);                    AssertContentIsNotPrettyHtml(response);              };
Magic Number,NuGetGallery.FunctionalTests.ErrorHandling,Validator,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ErrorHandling\Validator.cs,Redirect,The following statement contains a magic number: return response =>              {                  Assert.Equal(HttpStatusCode.Found' response.StatusCode);                  Assert.Equal(GetDefaultReasonPhrase(HttpStatusCode.Found)' response.ReasonPhrase);                  AssertContentTypeIsHtml(response);                  Assert.NotNull(response.LocationHeader);                    const string errorsPrefix = "/Errors/";                  Assert.StartsWith(errorsPrefix' response.LocationHeader);                    var errorNumberAndQueryString = response.LocationHeader.Substring(errorsPrefix.Length);                  var pieces = errorNumberAndQueryString.Split(new[] { '?' }' 2);                  Assert.Equal(2' pieces.Length);                  var actualErrorPageName = pieces[0];                  var queryString = pieces[1];                    var questionMarkIndex = response.RelativePath.IndexOf('?');                  var expectedRelativePath = response.RelativePath;                  if (questionMarkIndex >= 0)                  {                      expectedRelativePath = expectedRelativePath.Substring(0' questionMarkIndex);                  }                    Assert.Equal($"aspxerrorpath={expectedRelativePath}"' queryString);                  Assert.Contains(errorPageName' actualErrorPageName);                    AssertContentIsNotPrettyHtml(response);              };
Magic Number,NuGetGallery.FunctionalTests.ErrorHandling,SimulatedErrorRequest,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ErrorHandling\SimulatedErrorRequest.cs,GetHashCode,The following statement contains a magic number: var hashCode = -73651023;
Magic Number,NuGetGallery.FunctionalTests.ErrorHandling,SimulatedErrorRequest,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ErrorHandling\SimulatedErrorRequest.cs,GetHashCode,The following statement contains a magic number: hashCode = hashCode * -1521134295 + EndpointType.GetHashCode();
Magic Number,NuGetGallery.FunctionalTests.ErrorHandling,SimulatedErrorRequest,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ErrorHandling\SimulatedErrorRequest.cs,GetHashCode,The following statement contains a magic number: hashCode = hashCode * -1521134295 + SimulatedErrorType.GetHashCode();
Magic Number,NuGetGallery.FunctionalTests.ODataFeeds,CuratedFeedTest,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\CuratedFeedTest.cs,ValidateMicrosoftDotNetCuratedFeed,The following statement contains a magic number: Assert.True(length == 101' "An unexpected number of entries was found.  Actual number was " + (length - 1));
Magic Number,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedExtendedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedExtendedTests.cs,GetUpdates1199RegressionTest,The following statement contains a magic number: var version2 = new Version(Convert.ToInt32(ticks.Substring(0' 6) + 1) + "." + ticks.Substring(6' 6) + "." + ticks.Substring(12' 6)).ToString();
Magic Number,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedExtendedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedExtendedTests.cs,GetUpdates1199RegressionTest,The following statement contains a magic number: var version2 = new Version(Convert.ToInt32(ticks.Substring(0' 6) + 1) + "." + ticks.Substring(6' 6) + "." + ticks.Substring(12' 6)).ToString();
Magic Number,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedExtendedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedExtendedTests.cs,GetUpdates1199RegressionTest,The following statement contains a magic number: var version2 = new Version(Convert.ToInt32(ticks.Substring(0' 6) + 1) + "." + ticks.Substring(6' 6) + "." + ticks.Substring(12' 6)).ToString();
Magic Number,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedExtendedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedExtendedTests.cs,GetUpdates1199RegressionTest,The following statement contains a magic number: var version2 = new Version(Convert.ToInt32(ticks.Substring(0' 6) + 1) + "." + ticks.Substring(6' 6) + "." + ticks.Substring(12' 6)).ToString();
Magic Number,NuGetGallery.FunctionalTests.ODataFeeds,V2FeedExtendedTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ODataFeeds\V2FeedExtendedTests.cs,GetUpdates1199RegressionTest,The following statement contains a magic number: var version2 = new Version(Convert.ToInt32(ticks.Substring(0' 6) + 1) + "." + ticks.Substring(6' 6) + "." + ticks.Substring(12' 6)).ToString();
Magic Number,NuGetGallery.FunctionalTests.PackageCreation,ApiPushTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\PackageCreation\ApiPushTests.cs,DuplicatePushesAreRejectedAndNotDeleted,The following statement contains a magic number: int pushVersionCount = 10;
Magic Number,NuGetGallery.FunctionalTests.PackageCreation,ApiPushTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\PackageCreation\ApiPushTests.cs,PushDuplicates,The following statement contains a magic number: TestOutputHelper.WriteLine(new string('='' 80));
Magic Number,NuGetGallery.FunctionalTests.PackageCreation,SecurityPolicyTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\PackageCreation\SecurityPolicyTests.cs,CreateVerificationKey,The following statement contains a magic number: Assert.True(expiration - DateTime.UtcNow < TimeSpan.FromDays(2)' "Verification keys should expire after 1 day.");
Magic Number,NuGetGallery.FunctionalTests.Statistics,PackageStatisticsTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\Statistics\PackageStatisticsTests.cs,PackageFeedCountParameterTest,The following statement contains a magic number: Assert.True(packageCount == 500' "Expected feed to contain 500 packages. Actual count: " + packageCount);
Magic Number,NuGetGallery.FunctionalTests.Statistics,PackageStatisticsTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\Statistics\PackageStatisticsTests.cs,PackageFeedCountParameterTest,The following statement contains a magic number: Assert.True(packageCount == 5' "Expected feed to contain 5 packages. Actual count: " + packageCount);
Magic Number,NuGetGallery.FunctionalTests.ApiManagement,CachingTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ApiManagement\CachingTests.cs,RequestsThatShouldNotBeCachedAreNotCached,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(5));
Magic Number,NuGetGallery.FunctionalTests.ApiManagement,CachingTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.FunctionalTests\ApiManagement\CachingTests.cs,RequestsThatShouldBeCachedAreCached,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(5));
