Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,NuGet.Services.Entities.Tests,PackageDeprecationStatusFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageDeprecationStatusFacts.cs,,The length of the parameter ImmutablePackageDeprecationStatusValues is 39.
Long Statement,NuGet.Services.Entities.Tests,PackageFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageFacts.cs,HasReadMe_InternalColumnMapped,The length of the statement  "            var attributes = typeof(Package).GetProperty("HasReadMeInternal").GetCustomAttributes(typeof(ColumnAttribute)' true) as ColumnAttribute[]; " is 138.
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningAllowedMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,TheIsSigningAllowedMethod,The following statement contains a magic number: _packageRegistration = new PackageRegistration()                  {                      Key = 2'                      Id = "b"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningAllowedMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,TheIsSigningAllowedMethod,The following statement contains a magic number: _package = new Package()                  {                      Key = 3'                      PackageRegistration = _packageRegistration                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningAllowedMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningAllowed_WithOneOwner_WhenRequiredSignerIsNullAndOwnerHasCertificate_ReturnsTrue,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 4'                      User = _user'                      UserKey = _user.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningAllowedMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningAllowed_WithTwoOwners_WhenRequiredSignerIsNullAndOnlyOwnerHasCertificate_ReturnsTrue,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 4'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningAllowedMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningAllowed_WithTwoOwners_WhenRequiredSignerIsNullAndOnlyOwnerHasCertificate_ReturnsTrue,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = _user'                      UserKey = _user.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningAllowedMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningAllowed_WithTwoOwners_WhenRequiredSignerIsNullAndOnlyOtherOwnerHasCertificate_ReturnsTrue,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 4'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningAllowedMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningAllowed_WithTwoOwners_WhenRequiredSignerIsNullAndOnlyOtherOwnerHasCertificate_ReturnsTrue,The following statement contains a magic number: otherOwner.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = otherOwner'                      UserKey = otherOwner.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningAllowedMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningAllowed_WithOneOwner_WhenRequiredSignerIsOwnerAndOwnerHasCertificate_ReturnsTrue,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 4'                      User = _user'                      UserKey = _user.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningAllowedMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningAllowed_WithTwoOwners_WhenRequiredSignerIsOwnerAndOnlyOwnerHasCertificate_ReturnsTrue,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 4'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningAllowedMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningAllowed_WithTwoOwners_WhenRequiredSignerIsOwnerAndOnlyOwnerHasCertificate_ReturnsTrue,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = _user'                      UserKey = _user.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningAllowedMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningAllowed_WithTwoOwners_WhenRequiredSignerIsOwnerAndOnlyOtherOwnerHasCertificate_ReturnsFalse,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 4'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningAllowedMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningAllowed_WithTwoOwners_WhenRequiredSignerIsOwnerAndOnlyOtherOwnerHasCertificate_ReturnsFalse,The following statement contains a magic number: otherOwner.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = otherOwner'                      UserKey = otherOwner.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningAllowedMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningAllowed_WithTwoOwners_WhenRequiredSignerIsOwnerAndAllOwnersHaveCertificate_ReturnsTrue,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = _user'                      UserKey = _user.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningAllowedMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningAllowed_WithTwoOwners_WhenRequiredSignerIsOwnerAndAllOwnersHaveCertificate_ReturnsTrue,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 4'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningAllowedMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningAllowed_WithTwoOwners_WhenRequiredSignerIsOwnerAndAllOwnersHaveCertificate_ReturnsTrue,The following statement contains a magic number: otherOwner.UserCertificates.Add(new UserCertificate()                  {                      Key = 6'                      User = otherOwner'                      UserKey = otherOwner.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningAllowedMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningAllowed_WithTwoOwners_WhenRequiredSignerIsOwnerAndNoOwnersHaveCertificate_ReturnsFalse,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 4'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningAllowedMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningAllowed_WithTwoOwners_WhenRequiredSignerIsNullAndNeitherOwnerHasCertificate_ReturnsFalse,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 4'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningRequiredMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,TheIsSigningRequiredMethod,The following statement contains a magic number: _packageRegistration = new PackageRegistration()                  {                      Key = 2'                      Id = "b"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningRequiredMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,TheIsSigningRequiredMethod,The following statement contains a magic number: _package = new Package()                  {                      Key = 3'                      PackageRegistration = _packageRegistration                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningRequiredMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningRequired_WithOneOwner_WhenRequiredSignerIsNullAndOwnerHasCertificate_ReturnsTrue,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 4'                      User = _user'                      UserKey = _user.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningRequiredMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningRequired_WithTwoOwners_WhenRequiredSignerIsNullAndOnlyOwnerHasCertificate_ReturnsFalse,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 4'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningRequiredMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningRequired_WithTwoOwners_WhenRequiredSignerIsNullAndOnlyOwnerHasCertificate_ReturnsFalse,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = _user'                      UserKey = _user.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningRequiredMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningRequired_WithTwoOwners_WhenRequiredSignerIsNullAndOnlyOtherOwnerHasCertificate_ReturnsFalse,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 4'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningRequiredMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningRequired_WithTwoOwners_WhenRequiredSignerIsNullAndOnlyOtherOwnerHasCertificate_ReturnsFalse,The following statement contains a magic number: otherOwner.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = otherOwner'                      UserKey = otherOwner.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningRequiredMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningRequired_WithOneOwner_WhenRequiredSignerIsOwnerAndOwnerHasCertificate_ReturnsTrue,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 4'                      User = _user'                      UserKey = _user.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningRequiredMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningRequired_WithTwoOwners_WhenRequiredSignerIsOwnerAndOnlyOwnerHasCertificate_ReturnsTrue,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 4'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningRequiredMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningRequired_WithTwoOwners_WhenRequiredSignerIsOwnerAndOnlyOwnerHasCertificate_ReturnsTrue,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = _user'                      UserKey = _user.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningRequiredMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningRequired_WithTwoOwners_WhenRequiredSignerIsOwnerAndOnlyOtherOwnerHasCertificate_ReturnsFalse,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 4'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningRequiredMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningRequired_WithTwoOwners_WhenRequiredSignerIsOwnerAndOnlyOtherOwnerHasCertificate_ReturnsFalse,The following statement contains a magic number: otherOwner.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = otherOwner'                      UserKey = otherOwner.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningRequiredMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningRequired_WithTwoOwners_WhenRequiredSignerIsOwnerAndAllOwnersHaveCertificate_ReturnsTrue,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = _user'                      UserKey = _user.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningRequiredMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningRequired_WithTwoOwners_WhenRequiredSignerIsOwnerAndAllOwnersHaveCertificate_ReturnsTrue,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 4'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsSigningRequiredMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsSigningRequired_WithTwoOwners_WhenRequiredSignerIsOwnerAndAllOwnersHaveCertificate_ReturnsTrue,The following statement contains a magic number: otherOwner.UserCertificates.Add(new UserCertificate()                  {                      Key = 6'                      User = otherOwner'                      UserKey = otherOwner.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,TheIsAcceptableSigningCertificateMethod,The following statement contains a magic number: _packageRegistration = new PackageRegistration()                  {                      Key = 2'                      Id = "b"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,TheIsAcceptableSigningCertificateMethod,The following statement contains a magic number: _package = new Package()                  {                      Key = 3'                      PackageRegistration = _packageRegistration                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,TheIsAcceptableSigningCertificateMethod,The following statement contains a magic number: _certificate = new Certificate()                  {                      Key = 4'                      Thumbprint = "c"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithDifferentlyCasedThumbprint_ReturnsTrue,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = _user'                      UserKey = _user.Key'                      Certificate = _certificate'                      CertificateKey = _certificate.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithOneOwner_WhenRequiredSignerIsNullAndOwnerHasNonMatchingCertificate_ReturnsFalse,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = _user'                      UserKey = _user.Key'                      Certificate = _certificate'                      CertificateKey = _certificate.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithOneOwner_WhenRequiredSignerIsNullAndOwnerHasMatchingCertificate_ReturnsTrue,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = _user'                      UserKey = _user.Key'                      Certificate = _certificate'                      CertificateKey = _certificate.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsNullAndOnlyOwnerHasNonMatchingCertificate_ReturnsFalse,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 5'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsNullAndOnlyOwnerHasNonMatchingCertificate_ReturnsFalse,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 6'                      User = _user'                      UserKey = _user.Key'                      Certificate = _certificate'                      CertificateKey = _certificate.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsNullAndOnlyOwnerHasMatchingCertificate_ReturnsTrue,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 5'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsNullAndOnlyOwnerHasMatchingCertificate_ReturnsTrue,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = _user'                      UserKey = _user.Key'                      Certificate = _certificate'                      CertificateKey = _certificate.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsNullAndOnlyOtherOwnerHasNonMatchingCertificate_ReturnsFalse,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 5'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsNullAndOnlyOtherOwnerHasNonMatchingCertificate_ReturnsFalse,The following statement contains a magic number: otherOwner.UserCertificates.Add(new UserCertificate()                  {                      Key = 6'                      User = otherOwner'                      UserKey = otherOwner.Key'                      Certificate = _certificate'                      CertificateKey = _certificate.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsNullAndOnlyOtherOwnerHasMatchingCertificate_ReturnsTrue,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 5'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsNullAndOnlyOtherOwnerHasMatchingCertificate_ReturnsTrue,The following statement contains a magic number: otherOwner.UserCertificates.Add(new UserCertificate()                  {                      Key = 6'                      User = otherOwner'                      UserKey = otherOwner.Key'                      Certificate = _certificate'                      CertificateKey = _certificate.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithOneOwner_WhenRequiredSignerIsOwnerAndOwnerHasNonMatchingCertificate_ReturnsFalse,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = _user'                      UserKey = _user.Key'                      Certificate = _certificate'                      CertificateKey = _certificate.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithOneOwner_WhenRequiredSignerIsOwnerAndOwnerHasMatchingCertificate_ReturnsTrue,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = _user'                      UserKey = _user.Key'                      Certificate = _certificate'                      CertificateKey = _certificate.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsOwnerAndOnlyOwnerHasNonMatchingCertificate_ReturnsFalse,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 5'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsOwnerAndOnlyOwnerHasNonMatchingCertificate_ReturnsFalse,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 6'                      User = _user'                      UserKey = _user.Key'                      Certificate = _certificate'                      CertificateKey = _certificate.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsOwnerAndOnlyOwnerHasMatchingCertificate_ReturnsTrue,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 5'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsOwnerAndOnlyOwnerHasMatchingCertificate_ReturnsTrue,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 6'                      User = _user'                      UserKey = _user.Key'                      Certificate = _certificate'                      CertificateKey = _certificate.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsOwnerAndOnlyOtherOwnerHasNonMatchingCertificate_ReturnsFalse,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 5'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsOwnerAndOnlyOtherOwnerHasNonMatchingCertificate_ReturnsFalse,The following statement contains a magic number: otherOwner.UserCertificates.Add(new UserCertificate()                  {                      Key = 6'                      User = otherOwner'                      UserKey = otherOwner.Key'                      Certificate = _certificate'                      CertificateKey = _certificate.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsOwnerAndOnlyOtherOwnerHasMatchingCertificate_ReturnsFalse,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 5'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsOwnerAndOnlyOtherOwnerHasMatchingCertificate_ReturnsFalse,The following statement contains a magic number: otherOwner.UserCertificates.Add(new UserCertificate()                  {                      Key = 6'                      User = otherOwner'                      UserKey = otherOwner.Key'                      Certificate = _certificate'                      CertificateKey = _certificate.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsOwnerAndAllOwnersHaveNonMatchingCertificate_ReturnsFalse,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = _user'                      UserKey = _user.Key'                      Certificate = _certificate'                      CertificateKey = _certificate.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsOwnerAndAllOwnersHaveNonMatchingCertificate_ReturnsFalse,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 6'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsOwnerAndAllOwnersHaveNonMatchingCertificate_ReturnsFalse,The following statement contains a magic number: otherOwner.UserCertificates.Add(new UserCertificate()                  {                      Key = 7'                      User = otherOwner'                      UserKey = otherOwner.Key'                      Certificate = _certificate'                      CertificateKey = _certificate.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsOwnerAndAllOwnersHaveMatchingCertificate_ReturnsTrue,The following statement contains a magic number: _user.UserCertificates.Add(new UserCertificate()                  {                      Key = 5'                      User = _user'                      UserKey = _user.Key'                      Certificate = _certificate'                      CertificateKey = _certificate.Key                  });
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsOwnerAndAllOwnersHaveMatchingCertificate_ReturnsTrue,The following statement contains a magic number: var otherOwner = new User()                  {                      Key = 6'                      Username = "d"                  };
Magic Number,NuGet.Services.Entities.Tests,TheIsAcceptableSigningCertificateMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\PackageRegistrationExtensionsFacts.cs,IsAcceptableSigningCertificate_WithTwoOwners_WhenRequiredSignerIsOwnerAndAllOwnersHaveMatchingCertificate_ReturnsTrue,The following statement contains a magic number: otherOwner.UserCertificates.Add(new UserCertificate()                  {                      Key = 7'                      User = otherOwner'                      UserKey = otherOwner.Key'                      Certificate = _certificate'                      CertificateKey = _certificate.Key                  });
Magic Number,NuGet.Services.Entities.Tests,UserFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGet.Services.Entities.Tests\UserFacts.cs,UserEquality,The following statement contains a magic number: var user3 = new User("user2") { Key = 3 };
