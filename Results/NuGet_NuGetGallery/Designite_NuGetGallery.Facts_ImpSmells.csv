Implementation smell,Namespace,Class,File,Method,Description
Long Method,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The method has 111 lines of code.
Long Method,NuGetGallery.TestUtils.Infrastructure,FeedServiceHelpers,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\TestUtils\Infrastructure\FeedServiceHelpers.cs,SetupTestPackageRepository,The method has 102 lines of code.
Complex Method,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,Cyclomatic complexity of the method is 9
Long Parameter List,NuGetGallery,PackagesControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,CreateController,The method has 24 parameters. Parameters: configurationService' packageService' uploadFileService' userService' messageService' httpContext' editPackageService' fakeNuGetPackage' searchService' readPackageException' autoCuratePackageCmd' packageFileService' entitiesContext' indexingService' cacheService' packageDeleteService' supportRequestService' auditingService' telemetryService' securityPolicyService' reservedNamespaceService' packageUploadService' validationService' packageOwnershipManagementService
Long Parameter List,NuGetGallery,TheOwnershipRequestMethods,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,ReturnsSuccessIfTokenIsValid,The method has 6 parameters. Parameters: invokeOwnershipRequest' packageOwnershipManagementServiceExpression' messageServiceExpression' successState' tokenValid' isOrganizationAdministrator
Long Parameter List,NuGetGallery,PackageOwnershipManagementServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,CreateService,The method has 6 parameters. Parameters: entitiesContext' packageService' reservedNamespaceService' packageOwnerRequestService' auditingService' useDefaultSetup
Long Parameter List,NuGetGallery,TestPackage,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\TestPackage.cs,WriteNuspec,The method has 20 parameters. Parameters: stream' leaveStreamOpen' id' version' title' summary' authors' owners' description' tags' language' copyright' releaseNotes' minClientVersion' licenseUrl' projectUrl' iconUrl' requireLicenseAcceptance' packageDependencyGroups' packageTypes
Long Parameter List,NuGetGallery,TestPackage,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\TestPackage.cs,CreateTestPackageStream,The method has 19 parameters. Parameters: id' version' title' summary' authors' owners' description' tags' language' copyright' releaseNotes' minClientVersion' licenseUrl' projectUrl' iconUrl' requireLicenseAcceptance' packageDependencyGroups' packageTypes' populatePackage
Long Parameter List,NuGetGallery,PackageDeleteServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,CreateService,The method has 9 parameters. Parameters: packageRepository' packageRegistrationRepository' packageDeletesRepository' entitiesContext' packageService' indexingService' packageFileService' auditingService' setup
Long Parameter List,NuGetGallery,TestPackageDeleteService,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,TestPackageDeleteService,The method has 8 parameters. Parameters: packageRepository' packageRegistrationRepository' packageDeletesRepository' entitiesContext' packageService' indexingService' packageFileService' auditingService
Long Parameter List,NuGetGallery,TheReflowHardDeletedPackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,ReflowHardDeletedPackage,The method has 5 parameters. Parameters: id' version' existingId' existingVersion' succeeds
Long Parameter List,NuGetGallery,PackageServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,CreateService,The method has 5 parameters. Parameters: packageRegistrationRepository' packageRepository' packageNamingConflictValidator' auditingService' setup
Long Parameter List,NuGetGallery,TheSearchMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedSearchFiltersPackagesBySearchTermAndPrereleaseFlag,The method has 5 parameters. Parameters: searchTerm' includePrerelease' expectedNumberOfPackages' expectedIds' expectedVersions
Long Parameter List,NuGetGallery,ThePackagesCollection,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedPackagesReturnsCollection,The method has 5 parameters. Parameters: filter' top' expectedNumberOfPackages' expectedIds' expectedVersions
Long Parameter List,NuGetGallery.Framework,Fakes,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Framework\Fakes.cs,CreateOrganizationUsers,The method has 6 parameters. Parameters: key' credentialBuilder' suffix' organization' admin' collaborator
Long Parameter List,NuGetGallery.Security,TestSecurityPolicyService,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\TestSecurityPolicyService.cs,TestSecurityPolicyService,The method has 6 parameters. Parameters: mocks' userHandlers' userSubscriptions' mockEntities' mockAuditing' configuration
Long Parameter List,NuGetGallery.Services,FactsBase,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\JsonStatisticsServiceFacts.cs,Mock,The method has 8 parameters. Parameters: packageDownloadsReport' packageVersionDownloadsReport' communityPackageDownloadsReport' communityPackageVersionDownloadsReport' packagesLastUpdateTimeUtc' packageVersionsLastUpdateTimeUtc' communityPackagesLastUpdateTimeUtc' communityPackageVersionsLastUpdateTimeUtc
Long Parameter List,NuGetGallery.TestUtils,PackageServiceUtility,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\TestUtils\TestServiceUtility.cs,CreateNuGetPackage,The method has 18 parameters. Parameters: id' version' title' summary' authors' owners' description' tags' language' copyright' releaseNotes' minClientVersion' licenseUrl' projectUrl' iconUrl' requireLicenseAcceptance' packageDependencyGroups' packageTypes
Long Identifier,NuGetGallery,TheCreatePackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,CreatePackageReturns400IfEnsureValidThrowsExceptionMessage,The length of the parameter expectExceptionMessageInResponse is 32.
Long Identifier,NuGetGallery,PackagesControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,CreateController,The length of the parameter packageOwnershipManagementService is 33.
Long Identifier,NuGetGallery,TheOwnershipRequestMethods,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,ReturnsSuccessIfTokenIsValid,The length of the parameter packageOwnershipManagementServiceExpression is 43.
Long Identifier,NuGetGallery,TheOwnershipRequestMethods,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,ReturnsSuccessIfTokenIsValid,The length of the parameter packageOwnershipManagementService is 33.
Long Identifier,NuGetGallery,TheCancelPendingOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,ReturnsCancelledIfPackageOwnershipRequestExists,The length of the parameter packageOwnershipManagementRequestService is 40.
Long Identifier,NuGetGallery,TheConfirmOwnerMethod_SecurePushPropagation,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,AssertConfirmOwnerSubscribesUser,The length of the parameter packageOwnershipManagementService is 33.
Long Identifier,NuGetGallery,TheUploadFileActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillShowViewWithErrorsIfEnsureValidThrowsExceptionMessage,The length of the parameter expectExceptionMessageInResponse is 32.
Long Identifier,NuGetGallery,DeleteAccountTestService,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\DeleteAccountServiceFacts.cs,SetupPackageOwnershipManagementService,The length of the parameter packageOwnershipManagementService is 33.
Long Identifier,NuGetGallery,PackageOwnershipManagementServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,CreateService,The length of the parameter packageOwnershipManagementService is 33.
Long Identifier,NuGetGallery,ReflowPackageServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReflowPackageServiceFacts.cs,SetupPackageService,The length of the parameter packageNamingConflictValidator is 30.
Long Identifier,NuGetGallery,FileSystemFileStorageServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FileSystemFileStorageServiceFacts.cs,,The length of the parameter FakeConfiguredFileStorageDirectory is 34.
Long Identifier,NuGetGallery,TheSendCredentialRemovedNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,UsesProviderNounToDescribeCredentialIfPresent,The length of the parameter MicrosoftAccountCredentialName is 30.
Long Identifier,NuGetGallery,TheSendCredentialAddedNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,UsesProviderNounToDescribeCredentialIfPresent,The length of the parameter MicrosoftAccountCredentialName is 30.
Long Identifier,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillNotDeletePackageRegistrationWhenNoPackagesLeftAndDeleteEmptyPackageRegistrationFalse,The length of the parameter deleteEmptyPackageRegistration is 30.
Long Identifier,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeletePackageRegistrationWhenNoPackagesLeftAndDeleteEmptyPackageRegistrationTrue,The length of the parameter deleteEmptyPackageRegistration is 30.
Long Identifier,NuGetGallery,PackageServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,CreateService,The length of the parameter packageNamingConflictValidator is 30.
Long Identifier,NuGetGallery.Controllers,AuthenticationControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\AuthenticationControllerFacts.cs,EnableAllAuthenticators,The length of the parameter azureActiveDirectoryAuthenticator is 33.
Long Identifier,NuGetGallery.Controllers,ControllerTests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ControllerTests.cs,AllActionsHaveAntiForgeryTokenIfNotGet,The length of the parameter actionsMissingAntiForgeryToken is 30.
Long Identifier,NuGetGallery.Controllers,ThePackageOwnerMethods,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,,The length of the parameter _getFakesOrganizationAdminOwner is 31.
Long Identifier,NuGetGallery.Controllers,ThePackageOwnerMethods,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,,The length of the parameter _getFakesOrganizationCollaboratorOwner is 38.
Long Identifier,NuGetGallery.Controllers,ThePackageOwnerMethods,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,,The length of the parameter _cannotManagePackageOwnersUsers is 31.
Long Identifier,NuGetGallery.Controllers,TheAddPackageOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,CreatesPackageOwnerRequestSendsEmailAndReturnsPendingState,The length of the parameter packageOwnershipManagementServiceMock is 37.
Long Identifier,NuGetGallery.Controllers,TheAddPackageOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,SendsPackageOwnerRequestEmailWherePendingOwnerPropagatesPolicy,The length of the parameter packageOwnershipManagementServiceMock is 37.
Long Identifier,NuGetGallery.Controllers,TheAddPackageOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,GetSendPackageOwnerRequestPolicyMessage,The length of the parameter packageOwnershipManagementServiceMock is 37.
Long Identifier,NuGetGallery.Controllers,TheAddPackageOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,,The length of the parameter AllCanManagePackageOwnersPairedWithCanBeAdded_Data is 50.
Long Identifier,NuGetGallery.Controllers,TheRemovePackageOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,RemovesPackageOwnerRequest,The length of the parameter packageOwnershipManagementService is 33.
Long Identifier,NuGetGallery.Controllers,TheRemovePackageOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,RemovesExistingOwner,The length of the parameter packageOwnershipManagementService is 33.
Long Identifier,NuGetGallery.Services,TheRefreshMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\JsonStatisticsServiceFacts.cs,LoadReportsFailsIfDownloadsIsMissingOrNotInteger,The length of the parameter communityPackageVersionsReport is 30.
Long Identifier,NuGetGallery.Services,FactsBase,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\JsonStatisticsServiceFacts.cs,Mock,The length of the parameter communityPackageDownloadsReport is 31.
Long Identifier,NuGetGallery.Services,FactsBase,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\JsonStatisticsServiceFacts.cs,Mock,The length of the parameter communityPackageVersionDownloadsReport is 38.
Long Identifier,NuGetGallery.Services,FactsBase,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\JsonStatisticsServiceFacts.cs,Mock,The length of the parameter packageVersionsLastUpdateTimeUtc is 32.
Long Identifier,NuGetGallery.Services,FactsBase,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\JsonStatisticsServiceFacts.cs,Mock,The length of the parameter communityPackagesLastUpdateTimeUtc is 34.
Long Identifier,NuGetGallery.Services,FactsBase,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\JsonStatisticsServiceFacts.cs,Mock,The length of the parameter communityPackageVersionsLastUpdateTimeUtc is 41.
Long Identifier,NuGetGallery.Services,AllowLocalHttpRedirectPolicyFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\AllowLocalHttpRedirectPolicyFacts.cs,,The length of the parameter HttpNumericLocalhostDestinationUrl is 34.
Long Identifier,NuGetGallery.Services,AllowLocalHttpRedirectPolicyFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\AllowLocalHttpRedirectPolicyFacts.cs,,The length of the parameter HttpIpv6LocalhostDestinationUrl is 31.
Long Identifier,NuGetGallery.Services,NoLessSecureDestinationRedirectPolicyFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\NoLessSecureDestinationRedirectPolicyFacts.cs,,The length of the parameter HttpNumericLocalhostDestinationUrl is 34.
Long Identifier,NuGetGallery.Services,NoLessSecureDestinationRedirectPolicyFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\NoLessSecureDestinationRedirectPolicyFacts.cs,,The length of the parameter HttpIpv6LocalhostDestinationUrl is 31.
Long Identifier,NuGetGallery.OData.Serializers,V1FeedPackageAnnotationStrategyFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Serializers\V1FeedPackageAnnotationStrategyFacts.cs,SetsAtomEntryMetadataAnnotation,The length of the parameter expectedAtomEntryMetadataAnnotation is 35.
Long Identifier,NuGetGallery.OData.Serializers,V1FeedPackageAnnotationStrategyFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Serializers\V1FeedPackageAnnotationStrategyFacts.cs,SetsAtomEntryMetadataAnnotation,The length of the parameter actualAtomEntryMetadataAnnotation is 33.
Long Identifier,NuGetGallery.OData.Serializers,V2FeedPackageAnnotationStrategyFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Serializers\V2FeedPackageAnnotationStrategyFacts.cs,SetsAtomEntryMetadataAnnotation,The length of the parameter expectedAtomEntryMetadataAnnotation is 35.
Long Identifier,NuGetGallery.OData.Serializers,V2FeedPackageAnnotationStrategyFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Serializers\V2FeedPackageAnnotationStrategyFacts.cs,SetsAtomEntryMetadataAnnotation,The length of the parameter actualAtomEntryMetadataAnnotation is 33.
Long Identifier,NuGetGallery.TestUtils,TestableReservedNamespaceService,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\TestUtils\TestServiceUtility.cs,SetupPackageService,The length of the parameter packageNamingConflictValidator is 30.
Long Identifier,NuGetGallery.TestUtils,TestableReservedNamespaceService,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\TestUtils\TestServiceUtility.cs,,The length of the parameter MockReservedNamespaceRepository is 31.
Long Identifier,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,HasNewerPrereleaseReturnsTrueWhenNewerPrereleaseAvailable,The length of the parameter expectedNewerPrereleaseAvailable is 32.
Long Statement,NuGetGallery,AppConfigIsCorrectlyApplied,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\AppConfigIsCorrectlyApplied.cs,VerifyBindingRedirectToMvc5IsWorking,The length of the statement  "            string typeName = "System.Web.Mvc.Controller' System.Web.Mvc' Version=3.0.0.0' Culture=neutral' PublicKeyToken=31bf3856ad364e35"; " is 129.
Long Statement,NuGetGallery,TheCreatePackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,CreatePackage_Returns400IfSecurityPolicyFails,The length of the statement  "                controller.MockSecurityPolicyService.Setup(s => s.EvaluateAsync(It.IsAny<SecurityPolicyAction>()' It.IsAny<HttpContextBase>())) " is 127.
Long Statement,NuGetGallery,TheCreatePackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,CreatePackageWillSendPackageAddedNotice,The length of the statement  "                controller.MockMessageService.Setup(p => p.SendPackageUploadedNotice(package' It.IsAny<string>()' It.IsAny<string>()' It.IsAny<string>())) " is 138.
Long Statement,NuGetGallery,TheCreatePackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,CreatePackageReturns400IfEnsureValidThrowsExceptionMessage,The length of the statement  "                Assert.Equal(expectExceptionMessageInResponse ? EnsureValidExceptionMessage : Strings.FailedToReadUploadFile' (result as HttpStatusCodeWithBodyResult).StatusDescription); " is 170.
Long Statement,NuGetGallery,TheCreatePackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,WillReturnConflictIfAPackageWithTheIdMatchesNonOwnedNamespace,The length of the statement  "                controller.MockTelemetryService.Verify(x => x.TrackPackagePushNamespaceConflictEvent(packageRegistration.Id' package.Version' user1' controller.OwinContext.Request.User.Identity)' Times.Once); " is 192.
Long Statement,NuGetGallery,TheCreatePackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,WillCurateThePackage,The length of the statement  "                controller.MockAutoCuratePackage.Verify(x => x.ExecuteAsync(It.IsAny<Package>()' It.IsAny<PackageArchiveReader>()' false)); " is 123.
Long Statement,NuGetGallery,TheCreatePackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,WillCurateThePackageViaApi,The length of the statement  "                controller.MockAutoCuratePackage.Verify(x => x.ExecuteAsync(It.IsAny<Package>()' It.IsAny<PackageArchiveReader>()' false)); " is 123.
Long Statement,NuGetGallery,TheCreatePackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,WillSendPackagePushEvent,The length of the statement  "                controller.MockTelemetryService.Verify(x => x.TrackPackagePushEvent(It.IsAny<Package>()' user' controller.OwinContext.Request.User.Identity)' Times.Once); " is 154.
Long Statement,NuGetGallery,TheDeletePackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,WillThrowIfAPackageWithTheIdAndNuGetVersionDoesNotExist,The length of the statement  "                Assert.Equal(String.Format(Strings.PackageWithIdAndVersionNotFound' "theId"' "1.0.42")' statusCodeResult.StatusDescription); " is 124.
Long Statement,NuGetGallery,TheDeletePackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,WillUnlistThePackageIfApiKeyBelongsToAnOwner,The length of the statement  "                controller.MockPackageService.Setup(x => x.FindPackageByIdAndVersionStrict(It.IsAny<string>()' It.IsAny<string>())).Returns(package); " is 133.
Long Statement,NuGetGallery,TheGetPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,GetPackageReturns404IfPackageIsNotFound,The length of the statement  "                controller.MockPackageFileService.Setup(s => s.CreateDownloadPackageActionResultAsync(It.IsAny<Uri>()' packageId' packageVersion)) " is 130.
Long Statement,NuGetGallery,TheGetPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,GetPackageReturns404IfPackageIsNotFound,The length of the statement  "                //Assert.Equal(String.Format(Strings.PackageWithIdAndVersionNotFound' packageId' packageVersion)' httpNotFoundResult.StatusDescription); " is 136.
Long Statement,NuGetGallery,TheGetPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,GetPackageReturnsPackageIfItExists,The length of the statement  "                controller.MockPackageFileService.Setup(s => s.CreateDownloadPackageActionResultAsync(HttpRequestUrl' packageId' package.NormalizedVersion)) " is 140.
Long Statement,NuGetGallery,TheGetPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,GetPackageReturnsSpecificPackageEvenIfDatabaseIsOffline,The length of the statement  "                //controller.MockPackageService.Setup(x => x.FindPackageByIdAndVersion("Baz"' "1.0.0"' false)).Throws(new DataException("Can't find the database")).Verifiable(); " is 161.
Long Statement,NuGetGallery,TheGetPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,GetPackageReturnsLatestPackageIfNoVersionIsProvided,The length of the statement  "                controller.MockPackageFileService.Setup(s => s.CreateDownloadPackageActionResultAsync(HttpRequestUrl' packageId' package.NormalizedVersion)) " is 140.
Long Statement,NuGetGallery,TheGetPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,GetPackageReturns503IfNoVersionIsProvidedAndDatabaseUnavailable,The length of the statement  "                controller.MockPackageFileService.Setup(s => s.CreateDownloadPackageActionResultAsync(HttpRequestUrl' packageId' package.NormalizedVersion)) " is 140.
Long Statement,NuGetGallery,ThePublishPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,WillThrowIfAPackageWithTheIdAndNuGetVersionDoesNotExist,The length of the statement  "                controller.MockPackageService.Verify(x => x.MarkPackageListedAsync(It.IsAny<Package>()' It.IsAny<bool>())' Times.Never()); " is 122.
Long Statement,NuGetGallery,ThePublishPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,WillListThePackageIfUserIsAnOwner,The length of the statement  "                controller.MockPackageService.Setup(x => x.FindPackageByIdAndVersionStrict(It.IsAny<string>()' It.IsAny<string>())).Returns(package); " is 133.
Long Statement,NuGetGallery,TheCreatePackageVerificationKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,InvokeAsync,The length of the statement  "                controller.MockAuthenticationService.Verify(s => s.AddCredential(It.IsAny<User>()' It.IsAny<Credential>())' Times.Once); " is 120.
Long Statement,NuGetGallery,TheVerifyPackageKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyPackageKeyAsync_Returns400IfSecurityPolicyFails,The length of the statement  "                controller.MockSecurityPolicyService.Setup(s => s.EvaluateAsync(It.IsAny<SecurityPolicyAction>()' It.IsAny<HttpContextBase>())) " is 127.
Long Statement,NuGetGallery,TheVerifyPackageKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyPackageKeyAsync_Returns404IfPackageDoesNotExist_ApiKeyV2,The length of the statement  "                controller.MockAuthenticationService.Verify(s => s.RemoveCredential(It.IsAny<User>()' It.IsAny<Credential>())' Times.Never); " is 124.
Long Statement,NuGetGallery,TheVerifyPackageKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyPackageKeyAsync_Returns404IfPackageDoesNotExist_ApiKeyVerifyV1,The length of the statement  "                controller.MockAuthenticationService.Verify(s => s.RemoveCredential(It.IsAny<User>()' It.IsAny<Credential>())' Times.Once); " is 123.
Long Statement,NuGetGallery,TheVerifyPackageKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyPackageKeyAsync_Returns403IfUserIsNotAnOwner_ApiKeyV2,The length of the statement  "                controller.MockAuthenticationService.Verify(s => s.RemoveCredential(It.IsAny<User>()' It.IsAny<Credential>())' Times.Never); " is 124.
Long Statement,NuGetGallery,TheVerifyPackageKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyPackageKeyAsync_Returns403IfUserIsNotAnOwner_ApiKeyVerifyV1,The length of the statement  "                controller.MockAuthenticationService.Verify(s => s.RemoveCredential(It.IsAny<User>()' It.IsAny<Credential>())' Times.Once); " is 123.
Long Statement,NuGetGallery,TheVerifyPackageKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyPackageKeyAsync_Returns403IfScopeDoesNotMatch_ApiKeyV2,The length of the statement  "                controller.MockAuthenticationService.Verify(s => s.RemoveCredential(It.IsAny<User>()' It.IsAny<Credential>())' Times.Never); " is 124.
Long Statement,NuGetGallery,TheVerifyPackageKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyPackageKeyAsync_Returns403IfScopeDoesNotMatch_ApiKeyVerifyV1,The length of the statement  "                controller.MockAuthenticationService.Verify(s => s.RemoveCredential(It.IsAny<User>()' It.IsAny<Credential>())' Times.Once); " is 123.
Long Statement,NuGetGallery,TheVerifyPackageKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyPackageKeyAsync_Returns200IfApiKeyWithPushCapability_ApiKeyV2,The length of the statement  "                controller.MockAuthenticationService.Verify(s => s.RemoveCredential(It.IsAny<User>()' It.IsAny<Credential>())' Times.Never); " is 124.
Long Statement,NuGetGallery,TheVerifyPackageKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyPackageKeyAsync_Returns200IfPackageVerifyKey_ApiKeyVerifyV1,The length of the statement  "                controller.MockAuthenticationService.Verify(s => s.RemoveCredential(It.IsAny<User>()' It.IsAny<Credential>())' Times.Once); " is 123.
Long Statement,NuGetGallery,TheGetStatsDownloadsAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyRecentPopularityStatsDownloadsCount,The length of the statement  "                fakeReportService.Setup(x => x.Load("recentpopularitydetail.json")).Returns(Task.FromResult(new StatisticsReport(fakePackageVersionReport' DateTime.UtcNow))); " is 158.
Long Statement,NuGetGallery,TheGetCuratedFeedAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\CuratedFeedsControllerFacts.cs,WillReturn404IfTheCuratedFeedDoesNotExist,The length of the statement  "                controller.StubCuratedFeedService.Setup(stub => stub.GetFeedByName(It.IsAny<string>()' It.IsAny<bool>())).Returns((CuratedFeed)null); " is 133.
Long Statement,NuGetGallery,PackagesControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,CreateController,The length of the statement  "                packageFileService.Setup(p => p.SavePackageFileAsync(It.IsAny<Package>()' It.IsAny<Stream>())).Returns(Task.FromResult(0)); " is 123.
Long Statement,NuGetGallery,PackagesControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,CreateController,The length of the statement  "                reservedNamespaceService.Setup(s => s.IsPushAllowed(It.IsAny<string>()' It.IsAny<User>()' out userOwnedMatchingNamespaces)) " is 123.
Long Statement,NuGetGallery,PackagesControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,CreateController,The length of the statement  "            packageOwnershipManagementService = packageOwnershipManagementService ?? new Mock<IPackageOwnershipManagementService>(); " is 120.
Long Statement,NuGetGallery,PackagesControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillApplyReadMeForWrittenReadMeData,The length of the statement  "                fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(fakeFileStream)); " is 130.
Long Statement,NuGetGallery,PackagesControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillApplyReadMeForWrittenReadMeData,The length of the statement  "                var fakePackage = new Package { PackageRegistration = new PackageRegistration { Id = "thePackageId" }' Version = "1.0.0" }; " is 123.
Long Statement,NuGetGallery,PackagesControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillApplyReadMeForWrittenReadMeData,The length of the statement  "                fakePackageFileService.Setup(x => x.SavePendingReadMeMdFileAsync(fakePackage' It.IsAny<string>())).Returns(Task.CompletedTask); " is 127.
Long Statement,NuGetGallery,PackagesControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillApplyReadMeForWrittenReadMeData,The length of the statement  "                fakePackageFileService.Verify(x => x.SavePendingReadMeMdFileAsync(fakePackage' "markdown")' Times.Exactly(hasReadMe ? 1 : 0)); " is 126.
Long Statement,NuGetGallery,TheDisplayPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,GetDisplayPackageResult,The length of the statement  "                packageService.Setup(p => p.FindPackageByIdAndVersion(It.Is<string>(s => s == "Foo")' It.Is<string>(s => s == null)' It.Is<int>(i => i == SemVerLevelKey.SemVer2)' It.Is<bool>(b => b == true))) " is 192.
Long Statement,NuGetGallery,TheDisplayPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,GetDisplayPackageResult,The length of the statement  "                    fileService.Setup(f => f.DownloadReadMeMdFileAsync(It.IsAny<Package>()' It.IsAny<bool>())).Returns(Task.FromResult(readMeHtml)); " is 128.
Long Statement,NuGetGallery,TheOwnershipRequestMethods,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WithOrganizationCollaboratorReturnsNotYourRequest,The length of the statement  "                var organization = new Organization { Key = _key++' Username = "organization"' Members = new[] { new Membership { Member = currentUser' IsAdmin = false } } }; " is 158.
Long Statement,NuGetGallery,TheOwnershipRequestMethods,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,PackagesServiceForRejectOwnershipRequestExpression,The length of the statement  "                return packageOwnershipManagementService => packageOwnershipManagementService.DeletePackageOwnershipRequestAsync(package' user); " is 128.
Long Statement,NuGetGallery,TheOwnershipRequestMethods,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,MessageServiceForConfirmOwnershipRequestExpression,The length of the statement  "                    It.IsAny<string>()' // The method that creates this URL correctly is not set up for these tests' so we cannot assert the expected value. " is 136.
Long Statement,NuGetGallery,TheOwnershipRequestMethods,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,MessageServiceForRejectOwnershipRequestExpression,The length of the statement  "                return messageService => messageService.SendPackageOwnerRequestRejectionNotice(request.RequestingOwner' request.NewOwner' request.PackageRegistration); " is 151.
Long Statement,NuGetGallery,TheOwnershipRequestMethods,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,ReturnsSuccessIfTokenIsValid,The length of the statement  "                    newOwner = new Organization { Key = _key++' Username = "organization"' Members = new[] { new Membership { Member = currentUser' IsAdmin = true } } }; " is 149.
Long Statement,NuGetGallery,TheOwnershipRequestMethods,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,ReturnsSuccessIfTokenIsValid,The length of the statement  "                packageOwnershipManagementService.Setup(p => p.AddPackageOwnerAsync(package' newOwner)).Returns(Task.CompletedTask).Verifiable(); " is 129.
Long Statement,NuGetGallery,TheOwnershipRequestMethods,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,ReturnsSuccessIfTokenIsValid,The length of the statement  "                packageOwnershipManagementService.Setup(p => p.DeletePackageOwnershipRequestAsync(package' newOwner)).Returns(Task.CompletedTask).Verifiable(); " is 143.
Long Statement,NuGetGallery,TheOwnershipRequestMethods,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,ReturnsSuccessIfTokenIsValid,The length of the statement  "                packageOwnershipManagementService.Verify(packageOwnershipManagementServiceExpression(package' newOwner)' tokenValid ? Times.Once() : Times.Never()); " is 148.
Long Statement,NuGetGallery,TheCancelPendingOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,ReturnsCancelledIfPackageOwnershipRequestExists,The length of the statement  "                    packageOwnershipManagementRequestService.Setup(p => p.GetPackageOwnershipRequests(package' userA' userB)).Returns(new[] { request }); " is 133.
Long Statement,NuGetGallery,TheCancelPendingOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,ReturnsCancelledIfPackageOwnershipRequestExists,The length of the statement  "                    packageOwnershipManagementRequestService.Setup(p => p.DeletePackageOwnershipRequestAsync(package' userB)).Returns(Task.CompletedTask).Verifiable(); " is 147.
Long Statement,NuGetGallery,TheConfirmOwnerMethod_SecurePushPropagation,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,SubscribesOwnersToSecurePushAndSendsEmailIfNewOwnerRequires,The length of the statement  "                    var policyMessages = await AssertConfirmOwnerSubscribesUser(fakes' fakes.Owner' fakes.ShaUser' fakes.OrganizationOwner); " is 120.
Long Statement,NuGetGallery,TheConfirmOwnerMethod_SecurePushPropagation,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,SubscribesNewOwnerToSecurePushAndSendsEmailIfOwnerRequires,The length of the statement  "                    Assert.StartsWith("Owner(s) 'testPackageOwner' has (have) the following requirements that are now enforced for co-owner(s) 'testUser':"' " is 136.
Long Statement,NuGetGallery,TheEditMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,OnPostBackWithReadMe_SavesPending,The length of the statement  "                packageFileService.Verify(s => s.DownloadReadMeMdFileAsync(It.IsAny<Package>()' false)' Times.Exactly(hasReadMe ? 1 : 0)); " is 122.
Long Statement,NuGetGallery,TheEditMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,SetupController,The length of the statement  "                packageService.Setup(s => s.FindPackageByIdAndVersion(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<int?>()' It.IsAny<bool>())) " is 130.
Long Statement,NuGetGallery,TheListPackagesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,PassesPrerelParameterOnToSearchFilter,The length of the statement  "                var result = (await controller.ListPackages(new PackageListSearchViewModel { Q = "test"' Prerel = prerel })) as ViewResult; " is 123.
Long Statement,NuGetGallery,TheUploadFileActionForGetRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillShowTheViewWhenThereIsNoUploadInProgress,The length of the statement  "                fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(null)); " is 120.
Long Statement,NuGetGallery,TheUploadFileActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillReturn409WhenThereIsAlreadyAnUploadInProgress,The length of the statement  "                    fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(fakeFileStream)); " is 130.
Long Statement,NuGetGallery,TheUploadFileActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillShowViewWithErrorsIfEnsureValidThrowsExceptionMessage,The length of the statement  "                Assert.Equal(expectExceptionMessageInResponse ? EnsureValidExceptionMessage : Strings.FailedToReadUploadFile' controller.ModelState[String.Empty].Errors[0].ErrorMessage); " is 170.
Long Statement,NuGetGallery,TheUploadFileActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillShowTheViewWithErrorsWhenThePackageIdIsAlreadyBeingUsed,The length of the statement  "                var fakePackageRegistration = new PackageRegistration { Id = "theId"' Owners = new[] { new User { Key = 1 /* not the current user */ } } }; " is 139.
Long Statement,NuGetGallery,TheUploadFileActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillShowTheViewWithErrorsWhenThePackageIdIsAlreadyBeingUsed,The length of the statement  "                Assert.Equal(String.Format(Strings.PackageIdNotAvailable' "theId")' controller.ModelState[String.Empty].Errors[0].ErrorMessage); " is 128.
Long Statement,NuGetGallery,TheUploadFileActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillShowTheViewWithErrorsWhenThePackageIdMatchesNonOwnedNamespace,The length of the statement  "                fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(null)); " is 120.
Long Statement,NuGetGallery,TheUploadFileActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillShowTheViewWithErrorsWhenThePackageIdMatchesNonOwnedNamespace,The length of the statement  "                fakeUploadFileService.Setup(x => x.SaveUploadFileAsync(TestUtility.FakeUser.Key' It.IsAny<Stream>())).Returns(Task.FromResult(0)); " is 130.
Long Statement,NuGetGallery,TheUploadFileActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillShowTheViewWithErrorsWhenThePackageIdMatchesNonOwnedNamespace,The length of the statement  "                Assert.Equal(String.Format(Strings.UploadPackage_IdNamespaceConflict)' controller.ModelState[String.Empty].Errors[0].ErrorMessage); " is 131.
Long Statement,NuGetGallery,TheUploadFileActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillShowTheViewWithErrorsWhenThePackageIdMatchesNonOwnedNamespace,The length of the statement  "                fakeTelemetryService.Verify(x => x.TrackPackagePushNamespaceConflictEvent(It.IsAny<string>()' It.IsAny<string>()' TestUtility.FakeUser' controller.OwinContext.Request.User.Identity)' Times.Once); " is 195.
Long Statement,NuGetGallery,TheUploadFileActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillUploadThePackageWhenIdMatchesSharedNamespace,The length of the statement  "                fakeUploadFileService.Setup(x => x.SaveUploadFileAsync(TestUtility.FakeUser.Key' It.IsAny<Stream>())).Returns(Task.FromResult(0)); " is 130.
Long Statement,NuGetGallery,TheUploadFileActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillUploadThePackageWhenIdMatchesOwnedNamespace,The length of the statement  "                fakeUploadFileService.Setup(x => x.SaveUploadFileAsync(TestUtility.FakeUser.Key' It.IsAny<Stream>())).Returns(Task.FromResult(0)); " is 130.
Long Statement,NuGetGallery,TheUploadFileActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillSaveTheUploadFile,The length of the statement  "                fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(null)); " is 120.
Long Statement,NuGetGallery,TheUploadFileActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillSaveTheUploadFile,The length of the statement  "                fakeUploadFileService.Setup(x => x.SaveUploadFileAsync(TestUtility.FakeUser.Key' It.IsAny<Stream>())).Returns(Task.FromResult(0)); " is 130.
Long Statement,NuGetGallery,TheUploadFileActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillRedirectToVerifyPackageActionAfterSaving,The length of the statement  "                fakeUploadFileService.Setup(x => x.SaveUploadFileAsync(TestUtility.FakeUser.Key' It.IsAny<Stream>())).Returns(Task.FromResult(0)); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillRedirectToUploadPageWhenThereIsNoUploadInProgress,The length of the statement  "                fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(null)); " is 120.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillReturnConflictIfCommittingReturnsConflict,The length of the statement  "                    fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(fakeFileStream)); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillReturnConflictIfCommittingReturnsConflict,The length of the statement  "                        .Returns(Task.FromResult(new Package { PackageRegistration = new PackageRegistration { Id = "theId" }' Version = "theVersion" })); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,DoesNotThrowForAnyPackageCommitResult,The length of the statement  "                    fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(fakeFileStream)); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,DoesNotThrowForAnyPackageCommitResult,The length of the statement  "                        .Returns(Task.FromResult(new Package { PackageRegistration = new PackageRegistration { Id = "theId" }' Version = "theVersion" })); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillCreateThePackage,The length of the statement  "                    fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(fakeFileStream)); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillCreateThePackage,The length of the statement  "                        .Returns(Task.FromResult(new Package { PackageRegistration = new PackageRegistration { Id = "theId" }' Version = "theVersion" })); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillUpdateIndexingService,The length of the statement  "                    fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(fakeFileStream)); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillUpdateIndexingService,The length of the statement  "                    var fakePackage = new Package { PackageRegistration = new PackageRegistration { Id = "theId" }' Version = "theVersion" }; " is 121.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillUpdateIndexingService,The length of the statement  "                    fakePackageFileService.Setup(x => x.SavePackageFileAsync(fakePackage' It.IsAny<Stream>())).Returns(Task.FromResult(0)).Verifiable(); " is 132.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillNotCommitChangesToPackageService,The length of the statement  "                    var fakePackage = new Package { PackageRegistration = new PackageRegistration { Id = "theId" }' Version = "theVersion" }; " is 121.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillPublishThePackage,The length of the statement  "                    fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(fakeFileStream)); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillPublishThePackage,The length of the statement  "                    var fakePackage = new Package { PackageRegistration = new PackageRegistration { Id = "theId" }' Version = "theVersion" }; " is 121.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillMarkThePackageUnlistedWhenListedArgumentIsFalse,The length of the statement  "                    fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(fakeFileStream)); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillMarkThePackageUnlistedWhenListedArgumentIsFalse,The length of the statement  "                        .Returns(Task.FromResult(new Package { PackageRegistration = new PackageRegistration { Id = "theId" }' Version = "theVersion" })); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillMarkThePackageUnlistedWhenListedArgumentIsFalse,The length of the statement  "                        x => x.MarkPackageUnlistedAsync(It.Is<Package>(p => p.PackageRegistration.Id == "theId" && p.Version == "theVersion")' It.IsAny<bool>())); " is 138.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillNotMarkThePackageUnlistedWhenListedArgumentIsNullorTrue,The length of the statement  "                    fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(fakeFileStream)); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillNotMarkThePackageUnlistedWhenListedArgumentIsNullorTrue,The length of the statement  "                        .Returns(Task.FromResult(new Package { PackageRegistration = new PackageRegistration { Id = "theId" }' Version = "theVersion" })); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillDeleteTheUploadFile,The length of the statement  "                fakeUploadFileService.Setup(x => x.DeleteUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult(0)).Verifiable(); " is 125.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillDeleteTheUploadFile,The length of the statement  "                    fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(fakeFileStream)); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillDeleteTheUploadFile,The length of the statement  "                        .Returns(Task.FromResult(new Package { PackageRegistration = new PackageRegistration { Id = "theId" }' Version = "theVersion" })); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillSetAFlashMessage,The length of the statement  "                    fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(fakeFileStream)); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillSetAFlashMessage,The length of the statement  "                    fakeUploadFileService.Setup(x => x.SaveUploadFileAsync(TestUtility.FakeUser.Key' It.IsAny<Stream>())).Returns(Task.FromResult(0)); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillSetAFlashMessage,The length of the statement  "                        .Returns(Task.FromResult(new Package { PackageRegistration = new PackageRegistration { Id = "theId" }' Version = "theVersion" })); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillSetAFlashMessage,The length of the statement  "                    Assert.Equal(String.Format(Strings.SuccessfullyUploadedPackage' "theId"' "theVersion")' controller.TempData["Message"]); " is 120.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillRedirectToPackagePage,The length of the statement  "                    fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(fakeFileStream)); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillRedirectToPackagePage,The length of the statement  "                        .Returns(Task.FromResult(new Package { PackageRegistration = new PackageRegistration { Id = "theId" }' Version = "theVersion" })); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillCurateThePackage,The length of the statement  "                    fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(fakeFileStream)); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillCurateThePackage,The length of the statement  "                    var fakePackage = new Package { PackageRegistration = new PackageRegistration { Id = "theId" }' Version = "theVersion" }; " is 121.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WritesAnAuditRecord,The length of the statement  "                    fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(fakeFileStream)); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WritesAnAuditRecord,The length of the statement  "                    var fakePackage = new Package { PackageRegistration = new PackageRegistration { Id = "theId" }' Version = "theVersion" }; " is 121.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillSendPackagePublishedEvent,The length of the statement  "                    fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(fakeFileStream)); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillSendPackagePublishedEvent,The length of the statement  "                    var fakePackage = new Package { PackageRegistration = new PackageRegistration { Id = "theId" }' Version = "theVersion" }; " is 121.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillSendPackagePublishedEvent,The length of the statement  "                    fakeTelemetryService.Verify(x => x.TrackPackagePushEvent(It.IsAny<Package>()' TestUtility.FakeUser' controller.OwinContext.Request.User.Identity)' Times.Once); " is 159.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillApplyEdits,The length of the statement  "                    fakeUploadFileService.Setup(x => x.GetUploadFileAsync(TestUtility.FakeUser.Key)).Returns(Task.FromResult<Stream>(fakeFileStream)); " is 130.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillApplyEdits,The length of the statement  "                    var fakePackage = new Package { PackageRegistration = new PackageRegistration { Id = "thePackageId" }' Version = "1.0.0" }; " is 123.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillApplyEdits,The length of the statement  "                    fakePackageFileService.Setup(x => x.SavePendingReadMeMdFileAsync(fakePackage' It.IsAny<string>())).Returns(Task.CompletedTask); " is 127.
Long Statement,NuGetGallery,TheVerifyPackageActionForPostRequests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillApplyEdits,The length of the statement  "                    fakePackageFileService.Verify(x => x.SavePendingReadMeMdFileAsync(fakePackage' "markdown")' Times.Exactly(hasReadMe ? 1 : 0)); " is 126.
Long Statement,NuGetGallery,TheSetLicenseReportVisibilityMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,IndexingAndPackageServicesAreUpdated,The length of the statement  "                packageService.Setup(svc => svc.SetLicenseReportVisibilityAsync(It.IsAny<Package>()' It.Is<bool>(t => t == true)' It.IsAny<bool>())) " is 132.
Long Statement,NuGetGallery,TheSetLicenseReportVisibilityMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,IndexingAndPackageServicesAreUpdated,The length of the statement  "                packageService.Setup(svc => svc.SetLicenseReportVisibilityAsync(It.IsAny<Package>()' It.Is<bool>(t => t == false)' It.IsAny<bool>())) " is 133.
Long Statement,NuGetGallery,TheSetLicenseReportVisibilityMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,IndexingAndPackageServicesAreUpdated,The length of the statement  "                var result = await controller.SetLicenseReportVisibility("Foo"' "1.0"' visible: false' urlFactory: (pkg' relativeUrl) => @"~\Bar.cshtml"); " is 138.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The length of the statement  "            fakeReportService.Setup(x => x.Load("recentpopularity.json")).Returns(Task.FromResult(new StatisticsReport(fakePackageReport' DateTime.MinValue))); " is 147.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The length of the statement  "            fakeReportService.Setup(x => x.Load("recentpopularitydetail.json")).Returns(Task.FromResult(new StatisticsReport(fakePackageVersionReport' null))); " is 147.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The length of the statement  "            fakeReportService.Setup(x => x.Load("recentcommunitypopularity.json")).Returns(Task.FromResult(new StatisticsReport(fakePackageReport' DateTime.MinValue))); " is 156.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The length of the statement  "            fakeReportService.Setup(x => x.Load("recentcommunitypopularitydetail.json")).Returns(Task.FromResult(new StatisticsReport(fakePackageVersionReport' null))); " is 156.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The length of the statement  "            fakeReportService.Setup(x => x.Load("nugetclientversion.json")).Returns(Task.FromResult(new StatisticsReport(fakeNuGetClientVersion' DateTime.MinValue))); " is 154.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The length of the statement  "            fakeReportService.Setup(x => x.Load("last6weeks.json")).Returns(Task.FromResult(new StatisticsReport(fakeLast6Weeks' updatedUtc))); " is 131.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The length of the statement  "            fakeReportService.Setup(x => x.Load("recentpopularity.json")).Returns(Task.FromResult(new StatisticsReport(fakePackageReport' DateTime.UtcNow))); " is 145.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The length of the statement  "            fakeReportService.Setup(x => x.Load("recentpopularitydetail.json")).Returns(Task.FromResult(new StatisticsReport(fakePackageVersionReport' DateTime.UtcNow))); " is 158.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The length of the statement  "            fakeReportService.Setup(x => x.Load("nugetclientversion.json")).Returns(Task.FromResult(new StatisticsReport(fakeNuGetClientVersion' DateTime.UtcNow))); " is 152.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The length of the statement  "            fakeReportService.Setup(x => x.Load("last6weeks.json")).Returns(Task.FromResult(new StatisticsReport(fakeLast6Weeks' DateTime.UtcNow))); " is 136.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Packages_ValidateReportStructureAndAvailability,The length of the statement  "            fakeReportService.Setup(x => x.Load("recentpopularity.json")).Returns(Task.FromResult(new StatisticsReport(fakePackageReport' DateTime.UtcNow))); " is 145.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_PackageVersions_ValidateReportStructureAndAvailability,The length of the statement  "            fakeReportService.Setup(x => x.Load("recentpopularitydetail.json")).Returns(Task.FromResult(new StatisticsReport(fakePackageVersionReport' updatedUtc1))); " is 154.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_PackageVersions_ValidateReportStructureAndAvailability,The length of the statement  "            fakeReportService.Setup(x => x.Load("recentcommunitypopularitydetail.json")).Returns(Task.FromResult(new StatisticsReport(fakePackageVersionReport' updatedUtc2))); " is 163.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateModel,The length of the statement  "            var model = (StatisticsPackagesViewModel)((ViewResult)await controller.PackageDownloadsByVersion(PackageId' new[] { Constants.StatisticsDimensions.Version })).Model; " is 165.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailability,The length of the statement  "            fakeReportService.Setup(x => x.Load(reportName)).Returns(Task.FromResult(new StatisticsReport(fakeReport' updatedUtc))); " is 120.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailability,The length of the statement  "            var actualReport = (StatisticsPackagesReport)((JsonResult)await controller.PackageDownloadsByVersionReport(PackageId' new[] { Constants.StatisticsDimensions.Version })).Data; " is 174.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailabilityInvalidGroupBy,The length of the statement  "            fakeReportService.Setup(x => x.Load(reportName)).Returns(Task.FromResult(new StatisticsReport(fakeReport' updatedUtc))); " is 120.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailabilityInvalidGroupBy,The length of the statement  "            var actualReport = (StatisticsPackagesReport)((JsonResult)await controller.PackageDownloadsByVersionReport(PackageId' new[] { Constants.StatisticsDimensions.Version' invalidDimension })).Data; " is 192.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,Statistics_By_Client_Operation_ValidateModel,The length of the statement  "            var model = (StatisticsPackagesViewModel)((ViewResult)await controller.PackageDownloadsDetail(PackageId' PackageVersion' new string[] { "ClientName" })).Model; " is 159.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,Statistics_By_Client_Operation_ValidateReportStructureAndAvailability,The length of the statement  "            fakeReportService.Setup(x => x.Load(reportName)).Returns(Task.FromResult(new StatisticsReport(fakeReport' updatedUtc))); " is 120.
Long Statement,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,Statistics_By_Client_Operation_ValidateReportStructureAndAvailability,The length of the statement  "            var actualReport = (StatisticsPackagesReport)((JsonResult)await controller.PackageDownloadsDetailReport(PackageId' PackageVersion' new string[] { "ClientName" })).Data; " is 168.
Long Statement,NuGetGallery,TheForgotPasswordAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,ShowsErrorIfUserWasNotFound,The length of the statement  "                Assert.Contains(Strings.CouldNotFindAnyoneWithThatUsernameOrEmail' result.ViewData.ModelState["Email"].Errors.Select(e => e.ErrorMessage)); " is 139.
Long Statement,NuGetGallery,TheChangeEmailAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,DoesNotSendEmailChangeConfirmationNoticeWhenAddressDoesntChange,The length of the statement  "                    new PasswordAuthenticationResult(PasswordAuthenticationResult.AuthenticationResult.Success' new AuthenticatedUser(user' new Credential())); " is 139.
Long Statement,NuGetGallery,TheEditCredentialAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,GivenNoCredential_ErrorIsReturnedWithNoChangesMade,The length of the statement  "                authenticationService.Verify(x => x.EditCredentialScopes(It.IsAny<User>()' It.IsAny<Credential>()' It.IsAny<ICollection<Scope>>())' Times.Never); " is 145.
Long Statement,NuGetGallery,TheEditCredentialAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,GivenValidRequest_ItEditsCredential,The length of the statement  "                GetMock<AuthenticationService>().Verify(x => x.EditCredentialScopes(user' apiKey' It.IsAny<ICollection<Scope>>())' Times.Once); " is 127.
Long Statement,NuGetGallery,TheDeleteAccountAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,DeleteHappyAccount,The length of the statement  "                var model = ResultAssert.IsView<DeleteUserAccountViewModel>(controller.Delete(accountName: userName)' viewName: "DeleteUserAccount"); " is 133.
Long Statement,NuGetGallery,TheRequestAccountDeletionAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,RequestDeleteAccountAsync,The length of the statement  "                  .Setup(stub => stub.AddNewSupportRequestAsync(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<string>()' It.IsAny<string>()' testUser' null)) " is 142.
Long Statement,NuGetGallery,TheDeleteGalleryUserAccountAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\DeleteAccountServiceFacts.cs,NullUser,The length of the statement  "                await Assert.ThrowsAsync<ArgumentNullException>(() => deleteAccountService.DeleteGalleryUserAccountAsync(null' new User("AdminUser")' "Signature"' unlistOrphanPackages: true' commitAsTransaction: false)); " is 204.
Long Statement,NuGetGallery,TheDeleteGalleryUserAccountAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\DeleteAccountServiceFacts.cs,NullAdmin,The length of the statement  "                await Assert.ThrowsAsync<ArgumentNullException>(() => deleteAccountService.DeleteGalleryUserAccountAsync(new User("TestUser")'null ' "Signature"' unlistOrphanPackages: true' commitAsTransaction: false)); " is 203.
Long Statement,NuGetGallery,DeleteAccountTestService,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\DeleteAccountServiceFacts.cs,SetupReservedNamespaceService,The length of the statement  "                namespaceService.Setup(m => m.DeleteOwnerFromReservedNamespaceAsync(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<bool>())) " is 126.
Long Statement,NuGetGallery,DeleteAccountTestService,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\DeleteAccountServiceFacts.cs,SetupPackageOwnershipManagementService,The length of the statement  "                packageOwnershipManagementService.Setup(m => m.RemovePackageOwnerAsync(It.IsAny<PackageRegistration>()' It.IsAny<User>()' It.IsAny<User>()' false)) " is 147.
Long Statement,NuGetGallery,PackageOwnershipManagementServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,CreateService,The length of the statement  "                packageService.Setup(x => x.AddPackageOwnerAsync(It.IsAny<PackageRegistration>()' It.IsAny<User>())).Returns(Task.CompletedTask).Verifiable(); " is 142.
Long Statement,NuGetGallery,PackageOwnershipManagementServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,CreateService,The length of the statement  "                packageService.Setup(x => x.UpdatePackageVerifiedStatusAsync(It.IsAny<IReadOnlyCollection<PackageRegistration>>()' It.IsAny<bool>())) " is 133.
Long Statement,NuGetGallery,PackageOwnershipManagementServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,CreateService,The length of the statement  "                packageService.Setup(x => x.RemovePackageOwnerAsync(It.IsAny<PackageRegistration>()' It.IsAny<User>())).Returns(Task.CompletedTask).Verifiable(); " is 145.
Long Statement,NuGetGallery,PackageOwnershipManagementServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,CreateService,The length of the statement  "                reservedNamespaceService.Setup(x => x.AddPackageRegistrationToNamespace(It.IsAny<string>()' It.IsAny<PackageRegistration>())).Verifiable(); " is 139.
Long Statement,NuGetGallery,PackageOwnershipManagementServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,CreateService,The length of the statement  "                reservedNamespaceService.Setup(x => x.RemovePackageRegistrationFromNamespace(It.IsAny<string>()' It.IsAny<PackageRegistration>())).Verifiable(); " is 144.
Long Statement,NuGetGallery,PackageOwnershipManagementServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,CreateService,The length of the statement  "                packageOwnerRequestService.Setup(x => x.GetPackageOwnershipRequests(It.IsAny<PackageRegistration>()' It.IsAny<User>()' It.IsAny<User>())).Returns(new[] { new PackageOwnerRequest() }).Verifiable(); " is 196.
Long Statement,NuGetGallery,PackageOwnershipManagementServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,CreateService,The length of the statement  "                packageOwnerRequestService.Setup(x => x.DeletePackageOwnershipRequest(It.IsAny<PackageOwnerRequest>())).Returns(Task.CompletedTask).Verifiable(); " is 145.
Long Statement,NuGetGallery,PackageOwnershipManagementServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,CreateService,The length of the statement  "                packageOwnerRequestService.Setup(x => x.AddPackageOwnershipRequest(It.IsAny<PackageRegistration>()' It.IsAny<User>()' It.IsAny<User>())).Returns(Task.FromResult(new PackageOwnerRequest())).Verifiable(); " is 202.
Long Statement,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullPackageRegistrationThrowsException,The length of the statement  "                await Assert.ThrowsAsync<ArgumentNullException>(async () => await service.AddPackageOwnerAsync(packageRegistration: null' user: testUsers.First())); " is 148.
Long Statement,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullUserThrowsException,The length of the statement  "                await Assert.ThrowsAsync<ArgumentNullException>(async () => await service.AddPackageOwnerAsync(packageRegistration: testPackageRegistrations.First()' user: null)); " is 163.
Long Statement,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NewOwnerIsAddedSuccessfullyToTheRegistration,The length of the statement  "                packageOwnerRequestService.Verify(x => x.GetPackageOwnershipRequests(It.IsAny<PackageRegistration>()' It.IsAny<User>()' It.IsAny<User>())); " is 139.
Long Statement,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NewOwnerIsAddedSuccessfullyWithoutPendingRequest,The length of the statement  "                packageService.Setup(x => x.AddPackageOwnerAsync(It.IsAny<PackageRegistration>()' It.IsAny<User>())).Returns(Task.CompletedTask).Verifiable(); " is 142.
Long Statement,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NewOwnerIsAddedSuccessfullyWithoutPendingRequest,The length of the statement  "                packageOwnerRequestService.Setup(x => x.GetPackageOwnershipRequests(It.IsAny<PackageRegistration>()' It.IsAny<User>()' It.IsAny<User>())).Returns(new List<PackageOwnerRequest>()).Verifiable(); " is 192.
Long Statement,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NewOwnerIsAddedSuccessfullyWithoutPendingRequest,The length of the statement  "                var service = CreateService(packageService: packageService' packageOwnerRequestService: packageOwnerRequestService' useDefaultSetup: false); " is 140.
Long Statement,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NewOwnerIsAddedSuccessfullyWithoutPendingRequest,The length of the statement  "                packageOwnerRequestService.Verify(x => x.GetPackageOwnershipRequests(It.IsAny<PackageRegistration>()' It.IsAny<User>()' It.IsAny<User>())); " is 139.
Long Statement,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AddingOwnerMarksPackageVerifiedForMatchingNamespace,The length of the statement  "                var service = CreateService(packageService: packageService' reservedNamespaceService: reservedNamespaceService' packageOwnerRequestService: packageOwnerRequestService); " is 168.
Long Statement,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AddingOwnerMarksPackageVerifiedForMatchingNamespace,The length of the statement  "                packageService.Verify(x => x.UpdatePackageVerifiedStatusAsync(It.Is<IReadOnlyCollection<PackageRegistration>>(pr => pr.First() == package)' It.Is<bool>(b => b == true))); " is 170.
Long Statement,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AddingOwnerMarksPackageVerifiedForMatchingNamespace,The length of the statement  "                packageOwnerRequestService.Verify(x => x.GetPackageOwnershipRequests(It.IsAny<PackageRegistration>()' It.IsAny<User>()' It.IsAny<User>())); " is 139.
Long Statement,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AddingOwnerMarksPackageVerifiedForMatchingNamespace,The length of the statement  "                reservedNamespaceService.Verify(x => x.AddPackageRegistrationToNamespace(It.IsAny<string>()' It.IsAny<PackageRegistration>())' Times.Once); " is 139.
Long Statement,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AddingOwnerAddsPackageRegistrationToMultipleNamespaces,The length of the statement  "                reservedNamespaceService.Verify(x => x.AddPackageRegistrationToNamespace(It.IsAny<string>()' It.IsAny<PackageRegistration>())' Times.Exactly(2)); " is 145.
Long Statement,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AddingOwnerDoesNotMarkRegistrationVerifiedForAbsoluteNamespace,The length of the statement  "                reservedNamespaceService.Verify(x => x.AddPackageRegistrationToNamespace(It.IsAny<string>()' It.IsAny<PackageRegistration>())' Times.Never); " is 140.
Long Statement,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AddingOwnerDoesNotMarkRegistrationVerifiedForAbsoluteNamespace,The length of the statement  "                packageService.Verify(x => x.UpdatePackageVerifiedStatusAsync(It.IsAny<IReadOnlyCollection<PackageRegistration>>()' It.IsAny<bool>())' Times.Never); " is 148.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullPackageRegistrationThrowsException,The length of the statement  "                await Assert.ThrowsAsync<ArgumentNullException>(async () => await service.RemovePackageOwnerAsync(packageRegistration: null' requestingOwner: user1' ownerToBeRemoved: user2)); " is 175.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullRequestingUserThrowsException,The length of the statement  "                await Assert.ThrowsAsync<ArgumentNullException>(async () => await service.RemovePackageOwnerAsync(packageRegistration: package' requestingOwner: null' ownerToBeRemoved: user2)); " is 177.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullOwnerToRemoveThrowsException,The length of the statement  "                await Assert.ThrowsAsync<ArgumentNullException>(async () => await service.RemovePackageOwnerAsync(packageRegistration: package' requestingOwner: user1' ownerToBeRemoved: null)); " is 177.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,ExistingUserIsSuccessfullyRemovedFromPackage,The length of the statement  "                var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1"' Owners = new List<User> { owner1' owner2 } }; " is 128.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingNamespaceOwnerRemovesPackageVerified,The length of the statement  "                var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1"' IsVerified = true' Owners = new List<User> { existingOwner1 } }; " is 147.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingNamespaceOwnerRemovesPackageVerified,The length of the statement  "                var service = CreateService(packageService: packageService' reservedNamespaceService: reservedNamespaceService' packageOwnerRequestService: packageOwnerRequestService); " is 168.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingNamespaceOwnerRemovesPackageVerified,The length of the statement  "                packageService.Verify(x => x.UpdatePackageVerifiedStatusAsync(It.Is<IReadOnlyCollection<PackageRegistration>>(pr => pr.First() == package)' It.Is<bool>(b => b == false))); " is 171.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingNamespaceOwnerRemovesPackageVerified,The length of the statement  "                reservedNamespaceService.Verify(x => x.RemovePackageRegistrationFromNamespace(It.IsAny<string>()' It.IsAny<PackageRegistration>())' Times.Once); " is 144.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingOneNamespaceOwnerDoesNotRemoveVerifiedFlag,The length of the statement  "                var existingNamespace = new ReservedNamespace { Value = "microsoft.aspnet."' IsSharedNamespace = false' IsPrefix = true' Owners = new HashSet<User> { existingOwner1' existingOwner2 } }; " is 185.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingOneNamespaceOwnerDoesNotRemoveVerifiedFlag,The length of the statement  "                var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1"' IsVerified = true' Owners = new List<User> { existingOwner1' existingOwner2 } }; " is 163.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingOneNamespaceOwnerDoesNotRemoveVerifiedFlag,The length of the statement  "                var service = CreateService(packageService: packageService' reservedNamespaceService: reservedNamespaceService' packageOwnerRequestService: packageOwnerRequestService); " is 168.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingOneNamespaceOwnerDoesNotRemoveVerifiedFlag,The length of the statement  "                packageService.Verify(x => x.UpdatePackageVerifiedStatusAsync(It.Is<IReadOnlyCollection<PackageRegistration>>(pr => pr.First() == package)' It.Is<bool>(b => b == false))' Times.Never); " is 184.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingOneNamespaceOwnerDoesNotRemoveVerifiedFlag,The length of the statement  "                reservedNamespaceService.Verify(x => x.RemovePackageRegistrationFromNamespace(It.IsAny<string>()' It.IsAny<PackageRegistration>())' Times.Never); " is 145.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingNonNamespaceOwnerDoesNotRemoveVerifiedFlag,The length of the statement  "                var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1"' IsVerified = true' Owners = new List<User> { existingOwner1' existingOwner2 } }; " is 163.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingNonNamespaceOwnerDoesNotRemoveVerifiedFlag,The length of the statement  "                var service = CreateService(packageService: packageService' reservedNamespaceService: reservedNamespaceService' packageOwnerRequestService: packageOwnerRequestService); " is 168.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingNonNamespaceOwnerDoesNotRemoveVerifiedFlag,The length of the statement  "                packageService.Verify(x => x.UpdatePackageVerifiedStatusAsync(It.Is<IReadOnlyCollection<PackageRegistration>>(pr => pr.First() == package)' It.Is<bool>(b => b == false))' Times.Never); " is 184.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingNonNamespaceOwnerDoesNotRemoveVerifiedFlag,The length of the statement  "                reservedNamespaceService.Verify(x => x.RemovePackageRegistrationFromNamespace(It.IsAny<string>()' It.IsAny<PackageRegistration>())' Times.Never); " is 145.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,MultipleNamespaceOwnersRemovalWorksCorrectly,The length of the statement  "                var service = CreateService(packageService: packageService' reservedNamespaceService: reservedNamespaceService' packageOwnerRequestService: packageOwnerRequestService); " is 168.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,MultipleNamespaceOwnersRemovalWorksCorrectly,The length of the statement  "                packageService.Verify(x => x.UpdatePackageVerifiedStatusAsync(It.Is<IReadOnlyCollection<PackageRegistration>>(pr => pr.First() == package)' It.Is<bool>(b => b == false))' Times.Never); " is 184.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,MultipleNamespaceOwnersRemovalWorksCorrectly,The length of the statement  "                reservedNamespaceService.Verify(x => x.RemovePackageRegistrationFromNamespace(existingNamespace2.Value' package)' Times.Once); " is 126.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AdminCanRemoveAnyOwner,The length of the statement  "                var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1"' IsVerified = true' Owners = new List<User> { existingOwner1 } }; " is 147.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AdminCanRemoveAnyOwner,The length of the statement  "                var adminOwner = new User { Key = 100' Username = "aspnet"' Roles = new List<Role> { new Role { Name = Constants.AdminRoleName } } }; " is 133.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AdminCanRemoveAnyOwner,The length of the statement  "                var service = CreateService(packageService: packageService' reservedNamespaceService: reservedNamespaceService' packageOwnerRequestService: packageOwnerRequestService); " is 168.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AdminCanRemoveAnyOwner,The length of the statement  "                packageService.Verify(x => x.UpdatePackageVerifiedStatusAsync(It.Is<IReadOnlyCollection<PackageRegistration>>(pr => pr.First() == package)' It.Is<bool>(b => b == false))' Times.Once); " is 183.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AdminCanRemoveAnyOwner,The length of the statement  "                reservedNamespaceService.Verify(x => x.RemovePackageRegistrationFromNamespace(existingNamespace1.Value' package)' Times.Once); " is 126.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NormalOwnerCannotRemoveNamespaceOwner,The length of the statement  "                var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1"' IsVerified = true' Owners = new List<User> { namespaceOwner' nonNamespaceOwner } }; " is 166.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NormalOwnerCannotRemoveNamespaceOwner,The length of the statement  "                var service = CreateService(packageService: packageService' reservedNamespaceService: reservedNamespaceService' packageOwnerRequestService: packageOwnerRequestService); " is 168.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NormalOwnerCannotRemoveNamespaceOwner,The length of the statement  "                await Assert.ThrowsAsync<InvalidOperationException>(async () => await service.RemovePackageOwnerAsync(packageRegistration: package' requestingOwner: nonNamespaceOwner' ownerToBeRemoved: namespaceOwner)); " is 203.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NonNamespaceOwnerCanRemoveOtherSimilarOwners,The length of the statement  "                var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1"' IsVerified = true' Owners = new List<User> { existingOwner1' existingOwner2' existingOwner3} }; " is 178.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NonNamespaceOwnerCanRemoveOtherSimilarOwners,The length of the statement  "                var service = CreateService(packageService: packageService' reservedNamespaceService: reservedNamespaceService' packageOwnerRequestService: packageOwnerRequestService); " is 168.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NonNamespaceOwnerCanRemoveOtherSimilarOwners,The length of the statement  "                packageService.Verify(x => x.UpdatePackageVerifiedStatusAsync(It.Is<IReadOnlyCollection<PackageRegistration>>(pr => pr.First() == package)' It.Is<bool>(b => b == false))' Times.Never); " is 184.
Long Statement,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NonNamespaceOwnerCanRemoveOtherSimilarOwners,The length of the statement  "                reservedNamespaceService.Verify(x => x.RemovePackageRegistrationFromNamespace(existingNamespace1.Value' package)' Times.Never); " is 127.
Long Statement,NuGetGallery,TheDeletePackageOwnershipRequestAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullPackageRegistrationThrowsException,The length of the statement  "                await Assert.ThrowsAsync<ArgumentNullException>(async () => await service.DeletePackageOwnershipRequestAsync(packageRegistration: null' newOwner: user1)); " is 154.
Long Statement,NuGetGallery,TheDeletePackageOwnershipRequestAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullRequestingUserThrowsException,The length of the statement  "                await Assert.ThrowsAsync<ArgumentNullException>(async () => await service.DeletePackageOwnershipRequestAsync(packageRegistration: package' newOwner: null)); " is 156.
Long Statement,NuGetGallery,TheDeletePackageOwnershipRequestAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RequestIsDeletedSuccessfully,The length of the statement  "                packageOwnerRequestService.Setup(x => x.GetPackageOwnershipRequests(It.IsAny<PackageRegistration>()' It.IsAny<User>()' It.IsAny<User>())).Returns(new[] { pendingRequest }).Verifiable(); " is 185.
Long Statement,NuGetGallery,TheDeletePackageOwnershipRequestAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RequestIsDeletedSuccessfully,The length of the statement  "                packageOwnerRequestService.Setup(x => x.DeletePackageOwnershipRequest(It.IsAny<PackageOwnerRequest>())).Returns(Task.CompletedTask).Verifiable(); " is 145.
Long Statement,NuGetGallery,TheHasReadMeSourceMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReadMeServiceFacts.cs,WhenWrittenAndSourceTextMissing_ReturnsFalse,The length of the statement  "                Assert.False(ReadMeService.HasReadMeSource(new ReadMeRequest() { SourceType = ReadMeService.TypeWritten' SourceText = sourceText })); " is 133.
Long Statement,NuGetGallery,TheHasReadMeSourceMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReadMeServiceFacts.cs,WhenWrittenAndHasSourceText_ReturnsTrue,The length of the statement  "                Assert.True(ReadMeService.HasReadMeSource(new ReadMeRequest() { SourceType = ReadMeService.TypeWritten' SourceText = "markdown" })); " is 132.
Long Statement,NuGetGallery,TheHasReadMeSourceMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReadMeServiceFacts.cs,WhenUrlAndSourceUrlMissing_ReturnsFalse,The length of the statement  "                Assert.False(ReadMeService.HasReadMeSource(new ReadMeRequest() { SourceType = ReadMeService.TypeUrl' SourceUrl = sourceUrl })); " is 127.
Long Statement,NuGetGallery,TheHasReadMeSourceMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReadMeServiceFacts.cs,WhenUrlAndHasSourceUrl_ReturnsTrue,The length of the statement  "                Assert.True(ReadMeService.HasReadMeSource(new ReadMeRequest() { SourceType = ReadMeService.TypeUrl' SourceUrl = "sourceUrl" })); " is 128.
Long Statement,NuGetGallery,TheHasReadMeSourceMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReadMeServiceFacts.cs,WhenFileAndSourceFileNotEmpty_ReturnsTrue,The length of the statement  "                Assert.True(ReadMeService.HasReadMeSource(new ReadMeRequest() { SourceType = ReadMeService.TypeFile' SourceFile = sourceFile.Object })); " is 136.
Long Statement,NuGetGallery,PagerDutyClientFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PagerDutyClientFacts.cs,GetEmailAliasFromOnCallUser,The length of the statement  "                                    "{\"level\":1'\"start\":null'\"end\":null'\"escalation_policy\":{ \"id\":\"sampleId\"'\"name\":\"Support Requests\"}}" + " is 120.
Long Statement,NuGetGallery,PagerDutyClientFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PagerDutyClientFacts.cs,GetEmailAliasFromOnCallUser,The length of the statement  "                                    "{\"level\":1'\"start\":null'\"end\":null'\"escalation_policy\":{ \"id\":\"sampleId\"'\"name\":\"Support Requests\"}}" + " is 120.
Long Statement,NuGetGallery,PagerDutyClientFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PagerDutyClientFacts.cs,GetEmailAliasFromOnCallUser,The length of the statement  "                                    "{\"level\":1'\"start\":null'\"end\":null'\"escalation_policy\":{ \"id\":\"sampleId2\"'\"name\":\"Sev1 - Service Interruption\"}}'" + " is 133.
Long Statement,NuGetGallery,PagerDutyClientFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PagerDutyClientFacts.cs,GetEmailAliasFromOnCallUser,The length of the statement  "                                    "{\"level\":3'\"start\":null'\"end\":null'\"escalation_policy\":{ \"id\":\"sampleId\"'\"name\":\"Support Requests\"}}" + " is 120.
Long Statement,NuGetGallery,PagerDutyClientFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PagerDutyClientFacts.cs,GetEmailAliasFromOnCallUser,The length of the statement  "                                    "{\"level\":3'\"start\":null'\"end\":null'\"escalation_policy\":{ \"id\":\"sampleId2\"'\"name\":\"Sev1 - Service Interruption\"}}" + " is 132.
Long Statement,NuGetGallery,PackageUploadServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageUploadServiceFacts.cs,CreateService,The length of the statement  "                .CreatePackageAsync(It.IsAny<PackageArchiveReader>()' It.IsAny<PackageStreamMetadata>()' It.IsAny<User>()' It.IsAny<bool>())) " is 125.
Long Statement,NuGetGallery,PackageUploadServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageUploadServiceFacts.cs,CreateService,The length of the statement  "                .Returns((PackageArchiveReader packageArchiveReader' PackageStreamMetadata packageStreamMetadata' User user' bool isVerified) => " is 128.
Long Statement,NuGetGallery,PackageUploadServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageUploadServiceFacts.cs,CreateService,The length of the statement  "                    newPackage.SemVerLevelKey = SemVerLevelKey.ForPackage(packageMetadata.Version' packageMetadata.GetDependencyGroups().AsPackageDependencyEnumerable()); " is 150.
Long Statement,NuGetGallery,TheGeneratePackageAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageUploadServiceFacts.cs,WillCallCreatePackageAsyncCorrectly,The length of the statement  "                var package = await packageUploadService.GeneratePackageAsync(id' nugetPackage.Object' new PackageStreamMetadata()' currentUser); " is 129.
Long Statement,NuGetGallery,TheGeneratePackageAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageUploadServiceFacts.cs,WillCallCreatePackageAsyncCorrectly,The length of the statement  "                packageService.Verify(x => x.CreatePackageAsync(It.IsAny<PackageArchiveReader>()' It.IsAny<PackageStreamMetadata>()' It.IsAny<User>()' It.IsAny<bool>())' Times.Once); " is 166.
Long Statement,NuGetGallery,TheGeneratePackageAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageUploadServiceFacts.cs,WillMarkPackageRegistrationVerifiedFlagCorrectly,The length of the statement  "                reservedNamespaceService.Setup(s => s.IsPushAllowed(It.IsAny<string>()' It.IsAny<User>()' out userOwnedMatchingNamespaces)) " is 123.
Long Statement,NuGetGallery,TheGeneratePackageAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageUploadServiceFacts.cs,WillMarkPackageRegistrationVerifiedFlagCorrectly,The length of the statement  "                var package = await packageUploadService.GeneratePackageAsync(id' nugetPackage.Object' new PackageStreamMetadata()' firstUser); " is 127.
Long Statement,NuGetGallery,TheGeneratePackageAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageUploadServiceFacts.cs,WillMarkPackageRegistrationNotVerifiedIfIdMatchesNonOwnedSharedNamespace,The length of the statement  "                reservedNamespaceService.Setup(s => s.IsPushAllowed(It.IsAny<string>()' It.IsAny<User>()' out userOwnedMatchingNamespaces)) " is 123.
Long Statement,NuGetGallery,TheGeneratePackageAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageUploadServiceFacts.cs,WillMarkPackageRegistrationNotVerifiedIfIdMatchesNonOwnedSharedNamespace,The length of the statement  "                var package = await packageUploadService.GeneratePackageAsync(id' nugetPackage.Object' new PackageStreamMetadata()' lastUser); " is 126.
Long Statement,NuGetGallery,TheReflowAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReflowPackageServiceFacts.cs,UpdatesPackageMetadata,The length of the statement  "                Assert.Equal("WebActivator:[1.1.0' ):net40|PackageC:[1.1.0' 2.0.1):net40|jQuery:[1.0.0' ):net451"' result.FlattenedDependencies); " is 129.
Long Statement,NuGetGallery,TheGetNextLinkMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\SearchAdaptorFacts.cs,GeneratesNextLinkForComplexUrl,The length of the statement  "                Assert.Equal(new Uri("https://localhost:8081/api/v2/Search()?searchTerm='foo'&$orderby=Id&$skip=200&$top=1000")' nextLink); " is 123.
Long Statement,NuGetGallery,TestPackage,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\TestPackage.cs,WriteNuspec,The length of the statement  "                        <metadata" + (!string.IsNullOrEmpty(minClientVersion) ? @" minClientVersion=""" + minClientVersion + @"""" : string.Empty) + @"> " is 128.
Long Statement,NuGetGallery,TheCreateDownloadPackageResultMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\CloudBlobFileStorageServiceFacts.cs,WillReturnARedirectResultToTheBlobUri,The length of the statement  "                var result = await service.CreateDownloadFileActionResultAsync(requestUri' CoreConstants.PackagesFolderName' "theFileName") as RedirectResult; " is 142.
Long Statement,NuGetGallery,TheCreateDownloadPackageResultMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\CloudBlobFileStorageServiceFacts.cs,WillUseBlobUriPort,The length of the statement  "                var result = await service.CreateDownloadFileActionResultAsync(new Uri(requestUrl)' CoreConstants.PackagesFolderName' "theFileName") as RedirectResult; " is 151.
Long Statement,NuGetGallery,FileSystemFileStorageServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FileSystemFileStorageServiceFacts.cs,CreateFileStream,The length of the statement  "            return new MemoryStream(new byte[] { 0' 0' 1' 0' 1' 0' 1' 0 }' index: 0' count: 8' writable: true' publiclyVisible: true); " is 122.
Long Statement,NuGetGallery,TheCreateDownloadFileActionResultMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FileSystemFileStorageServiceFacts.cs,WillReturnAFilePathResultWithTheFilePath,The length of the statement  "                var result = await service.CreateDownloadFileActionResultAsync(HttpRequestUrl' CoreConstants.PackagesFolderName' "theFileName") as FilePathResult; " is 146.
Long Statement,NuGetGallery,TheCreateDownloadFileActionResultMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FileSystemFileStorageServiceFacts.cs,WillReturnAnHttpNotFoundResultWhenTheFileDoesNotExist,The length of the statement  "                var result = await service.CreateDownloadFileActionResultAsync(HttpRequestUrl' CoreConstants.PackagesFolderName' "theFileName") as HttpNotFoundResult; " is 150.
Long Statement,NuGetGallery,TheCreateDownloadFileActionResultMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FileSystemFileStorageServiceFacts.cs,WillSetTheResultContentTypeForThePackagesFolder,The length of the statement  "                var result = await service.CreateDownloadFileActionResultAsync(HttpRequestUrl' CoreConstants.PackagesFolderName' "theFileName") as FilePathResult; " is 146.
Long Statement,NuGetGallery,TheCreateDownloadFileActionResultMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FileSystemFileStorageServiceFacts.cs,WillSetTheResultDownloadFilePath,The length of the statement  "                var result = await service.CreateDownloadFileActionResultAsync(HttpRequestUrl' CoreConstants.PackagesFolderName' "theFileName") as FilePathResult; " is 146.
Long Statement,NuGetGallery,TheSaveFileMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FileSystemFileStorageServiceFacts.cs,WillThrowIfFolderNameIsNull,The length of the statement  "                    var ex = await Assert.ThrowsAsync<ArgumentNullException>(() => service.SaveFileAsync(folderName' FileName' fakeFileStream)); " is 124.
Long Statement,NuGetGallery,TheSaveFileMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FileSystemFileStorageServiceFacts.cs,WillThrowIfFileNameIsNull,The length of the statement  "                    var ex = await Assert.ThrowsAsync<ArgumentNullException>(() => service.SaveFileAsync(FolderName' fileName' fakeFileStream)); " is 124.
Long Statement,NuGetGallery,TheSaveFileMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FileSystemFileStorageServiceFacts.cs,WillThrowIfFileExistsAndOverwriteFalse,The length of the statement  "                    await Assert.ThrowsAsync<InvalidOperationException>(async () => await service.SaveFileAsync(FolderName' FileName' fakeFileStream' false)); " is 138.
Long Statement,NuGetGallery,TheSendContactOwnersMessageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,WillSendEmailToAllOwners,The length of the statement  "                    "User flossy &lt;smangit@example.com&gt; sends the following message to the owners of Package 'smangit'."' message.Body); " is 121.
Long Statement,NuGetGallery,TheSendPackageOwnerRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,SendsPackageOwnerRequestConfirmationUrl,The length of the statement  "                messageService.SendPackageOwnerRequest(from' to' package' packageUrl' confirmationUrl' rejectionUrl' userMessage' string.Empty); " is 128.
Long Statement,NuGetGallery,TheSendPackageOwnerRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,SendsPackageOwnerRequestConfirmationUrl,The length of the statement  "                Assert.Equal("[Joe Shmoe] The user 'Existing' would like to add you as an owner of the package 'CoolStuff'."' message.Subject); " is 127.
Long Statement,NuGetGallery,TheSendPackageOwnerRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,SendsPackageOwnerRequestConfirmationUrlWithoutUserMessage,The length of the statement  "                messageService.SendPackageOwnerRequest(from' to' package' packageUrl' confirmationUrl' rejectionUrl' string.Empty' string.Empty); " is 129.
Long Statement,NuGetGallery,TheSendPackageOwnerRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,DoesNotSendRequestIfUserDoesNotAllowEmails,The length of the statement  "                messageService.SendPackageOwnerRequest(from' to' package' packageUrl' confirmationUrl' rejectionUrl' string.Empty' string.Empty); " is 129.
Long Statement,NuGetGallery,TheSendPackageOwnerRequestRejectionNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,SendsNotice,The length of the statement  "                var requestingOwner = new User { Username = "Existing"' EmailAddress = "existing-owner@example.com"' EmailAllowed = true }; " is 123.
Long Statement,NuGetGallery,TheSendPackageOwnerRequestRejectionNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,SendsNotice,The length of the statement  "                Assert.Equal("[Joe Shmoe] The user 'Noob' has rejected your request to add them as an owner of the package 'CoolStuff'."' message.Subject); " is 139.
Long Statement,NuGetGallery,TheSendPackageOwnerRequestRejectionNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,SendsNotice,The length of the statement  "                Assert.Contains("The user 'Noob' has rejected your request to add them as an owner of the package 'CoolStuff'."' message.Body); " is 127.
Long Statement,NuGetGallery,TheSendPackageOwnerRequestCancellationNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,SendsNotice,The length of the statement  "                Assert.Equal("[Joe Shmoe] The user 'Existing' has cancelled their request for you to be added as an owner of the package 'CoolStuff'."' message.Subject); " is 153.
Long Statement,NuGetGallery,TheSendPackageOwnerRequestCancellationNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,SendsNotice,The length of the statement  "                Assert.Contains("The user 'Existing' has cancelled their request for you to be added as an owner of the package 'CoolStuff'."' message.Body); " is 141.
Long Statement,NuGetGallery,TheSendCredentialRemovedNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,UsesProviderNounToDescribeCredentialIfPresent,The length of the statement  "                Assert.Equal(string.Format(Strings.Emails_CredentialRemoved_Subject' TestGalleryOwner.DisplayName' MicrosoftAccountCredentialName)' message.Subject); " is 149.
Long Statement,NuGetGallery,TheSendCredentialRemovedNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,UsesTypeCaptionToDescribeCredentialIfNoProviderNounPresent,The length of the statement  "                Assert.Equal(string.Format(Strings.Emails_CredentialRemoved_Subject' TestGalleryOwner.DisplayName' Strings.CredentialType_Password)' message.Subject); " is 150.
Long Statement,NuGetGallery,TheSendCredentialRemovedNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,ApiKeyRemovedMessageIsCorrect,The length of the statement  "                Assert.Equal(string.Format(Strings.Emails_CredentialRemoved_Subject' TestGalleryOwner.DisplayName' Strings.CredentialType_ApiKey)' message.Subject); " is 148.
Long Statement,NuGetGallery,TheSendCredentialAddedNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,UsesProviderNounToDescribeCredentialIfPresent,The length of the statement  "                Assert.Equal(string.Format(Strings.Emails_CredentialAdded_Subject' TestGalleryOwner.DisplayName' MicrosoftAccountCredentialName)' message.Subject); " is 147.
Long Statement,NuGetGallery,TheSendCredentialAddedNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,UsesTypeCaptionToDescribeCredentialIfNoProviderNounPresent,The length of the statement  "                Assert.Equal(string.Format(Strings.Emails_CredentialAdded_Subject' TestGalleryOwner.DisplayName' Strings.CredentialType_Password)' message.Subject); " is 148.
Long Statement,NuGetGallery,TheSendCredentialAddedNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,ApiKeyAddedMessageIsCorrect,The length of the statement  "                Assert.Equal(string.Format(Strings.Emails_CredentialAdded_Subject' TestGalleryOwner.DisplayName' Strings.CredentialType_ApiKey)' message.Subject); " is 146.
Long Statement,NuGetGallery,TheSendPackageAddedNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,WillSendEmailToAllOwners,The length of the statement  "                var supportUrl = $"https://localhost/packages/{packageRegistration.Id}/{nugetVersion.ToNormalizedString()}/ReportMyPackage"; " is 124.
Long Statement,NuGetGallery,TheSendPackageAddedNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,WillSendEmailToAllOwners,The length of the statement  "                Assert.Contains($"[Joe Shmoe] Package published - {packageRegistration.Id} {nugetVersion.ToNormalizedString()}"' message.Subject); " is 130.
Long Statement,NuGetGallery,TheSendPackageAddedNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,WillSendEmailToAllOwners,The length of the statement  "                    $"The package [{packageRegistration.Id} {nugetVersion.ToFullString()}]({packageUrl}) was just published on Joe Shmoe. If this was not intended' please [contact support]({supportUrl})."' message.Body); " is 200.
Long Statement,NuGetGallery,TheSendPackageUploadedNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,WillSendEmailToAllOwners,The length of the statement  "                var supportUrl = $"https://localhost/packages/{packageRegistration.Id}/{nugetVersion.ToNormalizedString()}/ReportMyPackage"; " is 124.
Long Statement,NuGetGallery,TheSendPackageUploadedNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,WillSendEmailToAllOwners,The length of the statement  "                Assert.Contains($"[Joe Shmoe] Package uploaded - {packageRegistration.Id} {nugetVersion.ToNormalizedString()}"' message.Subject); " is 129.
Long Statement,NuGetGallery,TheSendPackageUploadedNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,WillSendEmailToAllOwners,The length of the statement  "                    $"The package [{packageRegistration.Id} {nugetVersion.ToFullString()}]({packageUrl}) was just uploaded to Joe Shmoe. If this was not intended' please [contact support]({supportUrl})."' message.Body); " is 199.
Long Statement,NuGetGallery,TheSendPackageDeletedNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,WillSendEmailToAllOwners,The length of the statement  "                var supportUrl = $"https://localhost/packages/{packageRegistration.Id}/{nugetVersion.ToNormalizedString()}/ReportMyPackage"; " is 124.
Long Statement,NuGetGallery,TheSendPackageDeletedNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,WillSendEmailToAllOwners,The length of the statement  "                Assert.Contains($"[Joe Shmoe] Package deleted - {packageRegistration.Id} {nugetVersion.ToNormalizedString()}"' message.Subject); " is 128.
Long Statement,NuGetGallery,TheSendPackageDeletedNoticeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,WillSendEmailToAllOwners,The length of the statement  "                    $"The package [{packageRegistration.Id} {nugetVersion.ToFullString()}]({packageUrl}) was just deleted from Joe Shmoe. If this was not intended' please [contact support]({supportUrl})."' message.Body); " is 200.
Long Statement,NuGetGallery,ODataRemoveSorterFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ODataRemoveSorterFacts.cs,RemoveVersionSortRemovesThenByWhenItIsNestedInsideAnotherThenBy,The length of the statement  "            var resultB = source.WithoutSortOnColumn("Version").OrderBy(p => p.Id).ThenBy(p => p.Id).ThenByDescending(p => p.Version); " is 122.
Long Statement,NuGetGallery,ODataRemoveSorterFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ODataRemoveSorterFacts.cs,RemoveVersionSortRemovesThenByWhenVersionIsRepresentedInAWrapperObject,The length of the statement  "            var resultB = source.WithoutSortOnColumn("Version").OrderBy(p => p.Id).ThenBy(p => p.Id).ThenByDescending(p => p.WrapperObject.Version); " is 136.
Long Statement,NuGetGallery,ODataRemoveSorterFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ODataRemoveSorterFacts.cs,RemoveIdSortRemovesThenByWhenItIsNestedInsideAnotherThenBy,The length of the statement  "            var resultB = source.WithoutSortOnColumn("Id").OrderBy(p => p.Version).ThenBy(p => p.Version).ThenByDescending(p => p.Id); " is 122.
Long Statement,NuGetGallery,ODataRemoveSorterFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ODataRemoveSorterFacts.cs,RemoveIdSortRemovesThenByWhenVersionIsRepresentedInAWrapperObject,The length of the statement  "            var resultB = source.WithoutSortOnColumn("Id").OrderBy(p => p.Version).ThenBy(p => p.Version).ThenByDescending(p => p.WrapperObject.Id); " is 136.
Long Statement,NuGetGallery,PackageFileServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,BuildFileName,The length of the statement  "                NuGetVersionFormatter.Normalize(version).ToLowerInvariant()' // No matter what ends up getting passed in' the version should be normalized " is 138.
Long Statement,NuGetGallery,PackageFileServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,CreatePackage,The length of the statement  "            var package = new Package { Version = "theVersion"' NormalizedVersion = "theNormalizedVersion"' PackageRegistration = packageRegistration }; " is 140.
Long Statement,NuGetGallery,TheDeletePackageFileMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillDeleteTheFileViaTheFileStorageServiceUsingAFileNameWithIdAndVersion,The length of the statement  "                fileStorageSvc.Setup(x => x.DeleteFileAsync(It.IsAny<string>()' BuildFileName("theId"' "theVersion"' CoreConstants.NuGetPackageFileExtension' CoreConstants.PackageFileSavePathTemplate))) " is 186.
Long Statement,NuGetGallery,TheCreateDownloadPackageActionResultMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillThrowIfPackageIsNull,The length of the statement  "                var ex = Assert.Throws<ArgumentNullException>(() => service.CreateDownloadPackageActionResultAsync(new Uri("http://fake")' null).Wait()); " is 137.
Long Statement,NuGetGallery,TheCreateDownloadPackageActionResultMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillThrowIfPackageIsMissingPackageRegistration,The length of the statement  "                var ex = Assert.Throws<ArgumentException>(() => service.CreateDownloadPackageActionResultAsync(new Uri("http://fake")' package).Wait()); " is 136.
Long Statement,NuGetGallery,TheCreateDownloadPackageActionResultMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillThrowIfPackageIsMissingPackageRegistrationId,The length of the statement  "                var ex = Assert.Throws<ArgumentException>(() => service.CreateDownloadPackageActionResultAsync(new Uri("http://fake")' package).Wait()); " is 136.
Long Statement,NuGetGallery,TheCreateDownloadPackageActionResultMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillThrowIfPackageIsMissingVersion,The length of the statement  "                var ex = Assert.Throws<ArgumentException>(() => service.CreateDownloadPackageActionResultAsync(new Uri("http://fake")' package).Wait()); " is 136.
Long Statement,NuGetGallery,TheCreateDownloadPackageActionResultMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillGetAResultFromTheFileStorageServiceUsingThePackagesFolder,The length of the statement  "                fileStorageSvc.Setup(x => x.CreateDownloadFileActionResultAsync(new Uri("http://fake")' CoreConstants.PackagesFolderName' It.IsAny<string>())) " is 142.
Long Statement,NuGetGallery,TheCreateDownloadPackageActionResultMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillGetAResultFromTheFileStorageServiceUsingAFileNameWithIdAndNormalizedVersion,The length of the statement  "                fileStorageSvc.Setup(x => x.CreateDownloadFileActionResultAsync(new Uri("http://fake")' It.IsAny<string>()' BuildFileName("theId"' "theNormalizedVersion"' CoreConstants.NuGetPackageFileExtension' CoreConstants.PackageFileSavePathTemplate))) " is 240.
Long Statement,NuGetGallery,TheCreateDownloadPackageActionResultMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillUseNormalizedRegularVersionIfNormalizedVersionMissing,The length of the statement  "                fileStorageSvc.Setup(x => x.CreateDownloadFileActionResultAsync(new Uri("http://fake")' It.IsAny<string>()' BuildFileName("theId"' "1.1.1"' CoreConstants.NuGetPackageFileExtension' CoreConstants.PackageFileSavePathTemplate))) " is 225.
Long Statement,NuGetGallery,TheCreateDownloadPackageActionResultMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillReturnTheResultFromTheFileStorageService,The length of the statement  "                fileStorageSvc.Setup(x => x.CreateDownloadFileActionResultAsync(new Uri("http://fake")' It.IsAny<string>()' It.IsAny<string>())) " is 128.
Long Statement,NuGetGallery,TheCreateDownloadPackageActionResultMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillReturnTheResultFromTheFileStorageService,The length of the statement  "                var result = await service.CreateDownloadPackageActionResultAsync(new Uri("http://fake")' CreatePackage()) as RedirectResult; " is 125.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillThrowIfPackageIsNull,The length of the statement  "                var ex = await Assert.ThrowsAsync<ArgumentNullException>(() => service.StorePackageFileInBackupLocationAsync(null' Stream.Null)); " is 129.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillThrowIfPackageFileIsNull,The length of the statement  "                var ex = await Assert.ThrowsAsync<ArgumentNullException>(() => service.StorePackageFileInBackupLocationAsync(new Package { PackageRegistration = new PackageRegistration() }' null)); " is 181.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillThrowIfPackageIsMissingPackageRegistration,The length of the statement  "                var ex = await Assert.ThrowsAsync<ArgumentException>(() => service.StorePackageFileInBackupLocationAsync(package' CreatePackageFileStream())); " is 142.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillThrowIfPackageIsMissingPackageRegistrationId,The length of the statement  "                var ex = await Assert.ThrowsAsync<ArgumentException>(() => service.StorePackageFileInBackupLocationAsync(package' CreatePackageFileStream())); " is 142.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillThrowIfPackageIsMissingNormalizedVersionAndVersion,The length of the statement  "                var ex = await Assert.ThrowsAsync<ArgumentException>(() => service.StorePackageFileInBackupLocationAsync(package' CreatePackageFileStream())); " is 142.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillUseNormalizedRegularVersionIfNormalizedVersionMissing,The length of the statement  "                var package = new Package { PackageRegistration = packageRegistraion' NormalizedVersion = null' Version = "01.01.01"' Hash = packageHashForTests}; " is 146.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillUseNormalizedRegularVersionIfNormalizedVersionMissing,The length of the statement  "                fileStorageSvc.Setup(x => x.SaveFileAsync(It.IsAny<string>()' BuildBackupFileName("theId"' "1.1.1"' packageHashForTests)' It.IsAny<Stream>()' It.Is<bool>(b => b))) " is 163.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillSaveTheFileViaTheFileStorageServiceUsingThePackagesFolder,The length of the statement  "                fileStorageSvc.Setup(x => x.SaveFileAsync(CoreConstants.PackageBackupsFolderName' It.IsAny<string>()' It.IsAny<Stream>()' It.Is<bool>(b => b))) " is 143.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WillSaveTheFileViaTheFileStorageServiceUsingAFileNameWithIdAndNormalizedersion,The length of the statement  "                fileStorageSvc.Setup(x => x.SaveFileAsync(It.IsAny<string>()' BuildBackupFileName("theId"' "theNormalizedVersion"' packageHashForTests)' It.IsAny<Stream>()' It.Is<bool>(b => b))) " is 178.
Long Statement,NuGetGallery,TheDeleteReadMeMdFileAsync,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WhenValid_DeletesFromStorage,The length of the statement  "                fileServiceMock.Verify(fs => fs.DeleteFileAsync(CoreConstants.PackageReadMesFolderName' $"{expectedFolder}/test/1.0.0.md")' Times.Once); " is 136.
Long Statement,NuGetGallery,TheSavePendingReadMeMdFileAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WhenReadMeMdMissing_ThrowsArgumentException,The length of the statement  "                await Assert.ThrowsAsync<ArgumentNullException>(async () => await service.SavePendingReadMeMdFileAsync(new Package()' markdown)); " is 129.
Long Statement,NuGetGallery,TheSavePendingReadMeMdFileAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WhenValid_SavesReadMeFile,The length of the statement  "                fileServiceMock.Setup(f => f.SaveFileAsync(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<Stream>()' It.IsAny<bool>())) " is 121.
Long Statement,NuGetGallery,TheSavePendingReadMeMdFileAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WhenValid_SavesReadMeFile,The length of the statement  "                fileServiceMock.Verify(f => f.SaveFileAsync(CoreConstants.PackageReadMesFolderName' "pending/foo/1.0.0.md"' It.IsAny<Stream>()' true)' " is 134.
Long Statement,NuGetGallery,TheDownloadReadMeMdFileAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WhenExists_ReturnsMarkdownStream,The length of the statement  "                    fileServiceMock.Verify(f => f.GetFileAsync(CoreConstants.PackageReadMesFolderName' $"{expectedFolder}/foo/1.1.1.md")' Times.Once); " is 130.
Long Statement,NuGetGallery,TheDownloadReadMeMdFileAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,WhenDoesNotExist_ReturnsNull,The length of the statement  "                fileServiceMock.Verify(f => f.GetFileAsync(CoreConstants.PackageReadMesFolderName' $"{expectedFolder}/foo/1.1.1.md")' Times.Once); " is 130.
Long Statement,NuGetGallery,TheSoftDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillIncreaseTheDatabaseCommandTimeout,The length of the statement  "                var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 131.
Long Statement,NuGetGallery,TheSoftDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillMarkThePackageAsUnlisted,The length of the statement  "                var package = new Package { PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 120.
Long Statement,NuGetGallery,TheSoftDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillInsertNewRecordIntoThePackageDeletesRepository,The length of the statement  "                var package = new Package { PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 120.
Long Statement,NuGetGallery,TheSoftDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillInsertNewRecordIntoThePackageDeletesRepository,The length of the statement  "                packageDeletesRepo.Verify(x => x.InsertOnCommit(It.Is<PackageDelete>(p => p.Packages.Contains(package) && p.DeletedBy == user && p.Reason == reason && p.Signature == signature))); " is 179.
Long Statement,NuGetGallery,TheSoftDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillUpdateThePackageRepository,The length of the statement  "                var package = new Package { PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 120.
Long Statement,NuGetGallery,TheSoftDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillUpdatePackageStatusToDeleted,The length of the statement  "                var package = new Package { PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 120.
Long Statement,NuGetGallery,TheSoftDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillUpdateTheIndexingService,The length of the statement  "                var package = new Package { PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 120.
Long Statement,NuGetGallery,TheSoftDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillBackupAndDeleteJustThePublicPackageFile,The length of the statement  "                var package = new Package { PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 120.
Long Statement,NuGetGallery,TheSoftDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillBackupAndDeleteJustTheValidationPackageFile,The length of the statement  "                var package = new Package { PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 120.
Long Statement,NuGetGallery,TheSoftDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillBackupAndDeleteBothThePublicAndValidationPackageFile,The length of the statement  "                var package = new Package { PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 120.
Long Statement,NuGetGallery,TheSoftDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeleteReadMeFiles,The length of the statement  "                var package = new Package { PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 120.
Long Statement,NuGetGallery,TheSoftDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillCreateAuditRecordUsingAuditService,The length of the statement  "                var package = new Package { PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 120.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillIncreaseTheDatabaseCommandTimeout,The length of the statement  "                var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 131.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeletePackageAndRelatedEntities,The length of the statement  "                    svc.Setup(x => x.TestExecuteSqlCommandAsync(It.IsAny<Database>()' "DELETE pa FROM PackageAuthors pa JOIN Packages p ON p.[Key] = pa.PackageKey WHERE p.[Key] = @key"' It.IsAny<SqlParameter>())).Returns(Task.FromResult(0)).Verifiable(); " is 234.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeletePackageAndRelatedEntities,The length of the statement  "                    svc.Setup(x => x.TestExecuteSqlCommandAsync(It.IsAny<Database>()' "DELETE pd FROM PackageDependencies pd JOIN Packages p ON p.[Key] = pd.PackageKey WHERE p.[Key] = @key"' It.IsAny<SqlParameter>())).Returns(Task.FromResult(0)).Verifiable(); " is 239.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeletePackageAndRelatedEntities,The length of the statement  "                    svc.Setup(x => x.TestExecuteSqlCommandAsync(It.IsAny<Database>()' "DELETE pf FROM PackageFrameworks pf JOIN Packages p ON p.[Key] = pf.Package_Key WHERE p.[Key] = @key"' It.IsAny<SqlParameter>())).Returns(Task.FromResult(0)).Verifiable(); " is 238.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeletePackageAndRelatedEntities,The length of the statement  "                packageRegistration.Packages.Add(new Package { Key = 124' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }); " is 151.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeletePackageAndRelatedEntities,The length of the statement  "                var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 131.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillNotDeletePackageRegistrationWhenNoPackagesLeftAndDeleteEmptyPackageRegistrationFalse,The length of the statement  "                    svc.Setup(x => x.TestExecuteSqlCommandAsync(It.IsAny<Database>()' "DELETE pa FROM PackageAuthors pa JOIN Packages p ON p.[Key] = pa.PackageKey WHERE p.[Key] = @key"' It.IsAny<SqlParameter>())).Returns(Task.FromResult(0)).Verifiable(); " is 234.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillNotDeletePackageRegistrationWhenNoPackagesLeftAndDeleteEmptyPackageRegistrationFalse,The length of the statement  "                    svc.Setup(x => x.TestExecuteSqlCommandAsync(It.IsAny<Database>()' "DELETE pd FROM PackageDependencies pd JOIN Packages p ON p.[Key] = pd.PackageKey WHERE p.[Key] = @key"' It.IsAny<SqlParameter>())).Returns(Task.FromResult(0)).Verifiable(); " is 239.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillNotDeletePackageRegistrationWhenNoPackagesLeftAndDeleteEmptyPackageRegistrationFalse,The length of the statement  "                    svc.Setup(x => x.TestExecuteSqlCommandAsync(It.IsAny<Database>()' "DELETE pf FROM PackageFrameworks pf JOIN Packages p ON p.[Key] = pf.Package_Key WHERE p.[Key] = @key"' It.IsAny<SqlParameter>())).Returns(Task.FromResult(0)).Verifiable(); " is 238.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillNotDeletePackageRegistrationWhenNoPackagesLeftAndDeleteEmptyPackageRegistrationFalse,The length of the statement  "                    svc.Setup(x => x.TestExecuteSqlCommandAsync(It.IsAny<Database>()' PackageDeleteService.DeletePackageRegistrationQuery' It.IsAny<SqlParameter>())).Callback(() => ranDeleteQuery = true).Returns(Task.FromResult(0)); " is 212.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillNotDeletePackageRegistrationWhenNoPackagesLeftAndDeleteEmptyPackageRegistrationFalse,The length of the statement  "                var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 131.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillNotDeletePackageRegistrationWhenNoPackagesLeftAndDeleteEmptyPackageRegistrationFalse,The length of the statement  "                await service.HardDeletePackagesAsync(new[] { package }' user' string.Empty' string.Empty' deleteEmptyPackageRegistration); " is 123.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeletePackageRegistrationWhenNoPackagesLeftAndDeleteEmptyPackageRegistrationTrue,The length of the statement  "                    svc.Setup(x => x.TestExecuteSqlCommandAsync(It.IsAny<Database>()' "DELETE pa FROM PackageAuthors pa JOIN Packages p ON p.[Key] = pa.PackageKey WHERE p.[Key] = @key"' It.IsAny<SqlParameter>())).Returns(Task.FromResult(0)).Verifiable(); " is 234.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeletePackageRegistrationWhenNoPackagesLeftAndDeleteEmptyPackageRegistrationTrue,The length of the statement  "                    svc.Setup(x => x.TestExecuteSqlCommandAsync(It.IsAny<Database>()' "DELETE pd FROM PackageDependencies pd JOIN Packages p ON p.[Key] = pd.PackageKey WHERE p.[Key] = @key"' It.IsAny<SqlParameter>())).Returns(Task.FromResult(0)).Verifiable(); " is 239.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeletePackageRegistrationWhenNoPackagesLeftAndDeleteEmptyPackageRegistrationTrue,The length of the statement  "                    svc.Setup(x => x.TestExecuteSqlCommandAsync(It.IsAny<Database>()' "DELETE pf FROM PackageFrameworks pf JOIN Packages p ON p.[Key] = pf.Package_Key WHERE p.[Key] = @key"' It.IsAny<SqlParameter>())).Returns(Task.FromResult(0)).Verifiable(); " is 238.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeletePackageRegistrationWhenNoPackagesLeftAndDeleteEmptyPackageRegistrationTrue,The length of the statement  "                    svc.Setup(x => x.TestExecuteSqlCommandAsync(It.IsAny<Database>()' PackageDeleteService.DeletePackageRegistrationQuery' It.IsAny<SqlParameter>())).Returns(Task.FromResult(0)).Verifiable(); " is 187.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeletePackageRegistrationWhenNoPackagesLeftAndDeleteEmptyPackageRegistrationTrue,The length of the statement  "                var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 131.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeletePackageRegistrationWhenNoPackagesLeftAndDeleteEmptyPackageRegistrationTrue,The length of the statement  "                await service.HardDeletePackagesAsync(new[] { package }' user' string.Empty' string.Empty' deleteEmptyPackageRegistration); " is 123.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillUpdatePackageLatestVersions,The length of the statement  "                var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 131.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillUpdateTheIndexingService,The length of the statement  "                var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 131.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillBackupAndDeleteJustThePublicPackageFile,The length of the statement  "                var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 131.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillBackupAndDeleteJustTheValidationPackageFile,The length of the statement  "                var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 131.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillBackupAndDeleteBothThePublicAndValidationPackageFile,The length of the statement  "                var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 131.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeleteReadMeFiles,The length of the statement  "                var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 131.
Long Statement,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillCreateAuditRecordUsingAuditService,The length of the statement  "                var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests }; " is 131.
Long Statement,NuGetGallery,TheReflowHardDeletedPackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,ReflowHardDeletedPackage,The length of the statement  "                packageRegistrationRepository.Setup(x => x.GetAll()).Returns(new PackageRegistration[] { packageRegistration }.AsQueryable()); " is 126.
Long Statement,NuGetGallery,TheReflowHardDeletedPackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,ReflowHardDeletedPackage,The length of the statement  "                var service = CreateService(packageRepository: packageRepository' packageRegistrationRepository: packageRegistrationRepository' auditingService: auditingService); " is 162.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowWhenCreateANewPackageRegistrationWithAnIdThatMatchesAnExistingPackageTitle,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' currentUser' isVerified: false)); " is 187.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowWhenCreateANewPackageRegistrationWithAnIdThatMatchesAnExistingPackageTitle,The length of the statement  "                Assert.Equal(String.Format(Strings.NewRegistrationIdMatchesExistingPackageTitle' idThatMatchesExistingTitle)' ex.Message); " is 122.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillMakeTheCurrentUserTheOwnerWhenCreatingANewPackageRegistration,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageRegistrationById(It.IsAny<string>())).Returns((PackageRegistration)null); }); " is 144.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillMakeTheCurrentUserTheOwnerWhenCreatingANewPackageRegistration,The length of the statement  "                packageRegistrationRepository.Verify(x => x.InsertOnCommit(It.Is<PackageRegistration>(pr => pr.Owners.Contains(currentUser)))); " is 127.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillReadThePropertiesFromTheNuGetPackageWhenCreatingANewPackage,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageRegistrationById(It.IsAny<string>())).Returns((PackageRegistration)null); }); " is 144.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillReadThePropertiesFromTheNuGetPackageWhenCreatingANewPackage,The length of the statement  "                var package = await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' currentUser' isVerified: false); " is 129.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillReadThePropertiesFromTheNuGetPackageWhenCreatingANewPackage,The length of the statement  "                // Note that there is no assertion on package identifier' because that's at the package registration level (and covered in another test). " is 137.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillReadThePropertiesFromTheNuGetPackageWhenCreatingANewPackage,The length of the statement  "                    "theFirstDependency:[1.0.0' 2.0.0):net40|theSecondDependency:[1.0.0' 1.0.0]:net40|theThirdDependency:(' ):net40|theFourthDependency:[1.0.0' 1.0.0]:net35"' " is 154.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillReadTheLanguagePropertyFromThePackage,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageRegistrationById(It.IsAny<string>())).Returns((PackageRegistration)null); }); " is 144.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillReadTheLanguagePropertyFromThePackage,The length of the statement  "                var package = await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' currentUser' isVerified: false); " is 129.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillReadPrereleaseFlagFromNuGetPackage,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageRegistrationById(It.IsAny<string>())).Returns((PackageRegistration)null); }); " is 144.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillReadPrereleaseFlagFromNuGetPackage,The length of the statement  "                var package = await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' currentUser' isVerified: false); " is 129.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,DoNotCommitChanges,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageRegistrationById(It.IsAny<string>())).Returns((PackageRegistration)null); }); " is 144.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,DoNotCommitChanges,The length of the statement  "                var package = await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' currentUser' isVerified: false); " is 129.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillStoreTheHashForTheCreatedPackage,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageRegistrationById(It.IsAny<string>())).Returns((PackageRegistration)null); }); " is 144.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillStoreTheHashForTheCreatedPackage,The length of the statement  "                var package = await service.CreatePackageAsync(nugetPackage.Object' packageStreamMetadata' currentUser' isVerified: false); " is 123.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillNotCreateThePackageInAnUnpublishedState,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageRegistrationById(It.IsAny<string>())).Returns((PackageRegistration)null); }); " is 144.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillNotCreateThePackageInAnUnpublishedState,The length of the statement  "                var package = await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' currentUser' isVerified: false); " is 129.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillNotSetTheNewPackagesCreatedAndLastUpdatedTimesAsTheDatabaseShouldDoIt,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageRegistrationById(It.IsAny<string>())).Returns((PackageRegistration)null); }); " is 144.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillNotSetTheNewPackagesCreatedAndLastUpdatedTimesAsTheDatabaseShouldDoIt,The length of the statement  "                var package = await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' currentUser' isVerified: false); " is 129.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillSetTheNewPackagesLastUpdatedTimes,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageRegistrationById(It.IsAny<string>())).Returns((PackageRegistration)null); }); " is 144.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillSetTheNewPackagesLastUpdatedTimes,The length of the statement  "                var package = await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' currentUser' isVerified: false); " is 129.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillSaveThePackageFileAndSetThePackageFileSize,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageRegistrationById(It.IsAny<string>())).Returns((PackageRegistration)null); }); " is 144.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillSaveThePackageFileAndSetThePackageFileSize,The length of the statement  "                var package = await service.CreatePackageAsync(nugetPackage.Object' packageStreamMetadata' currentUser' isVerified: false); " is 123.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillSaveTheCreatedPackageWhenANewPackageRegistrationIsCreated,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageRegistrationById(It.IsAny<string>())).Returns((PackageRegistration)null); }); " is 144.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillSaveTheCreatedPackageWhenANewPackageRegistrationIsCreated,The length of the statement  "                var package = await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' currentUser' isVerified: false); " is 129.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillSaveTheCreatedPackageWhenANewPackageRegistrationIsCreated,The length of the statement  "                packageRegistrationRepository.Verify(x => x.InsertOnCommit(It.Is<PackageRegistration>(pr => pr.Packages.ElementAt(0) == package))); " is 131.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillSaveTheCreatedPackageWhenThePackageRegistrationAlreadyExisted,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageRegistrationById(It.IsAny<string>())).Returns(packageRegistration); }); " is 138.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillSaveTheCreatedPackageWhenThePackageRegistrationAlreadyExisted,The length of the statement  "                var package = await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' currentUser' isVerified: false); " is 129.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfThePackageRegistrationAlreadyExistsAndTheCurrentUserIsNotAnOwner,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageRegistrationById(It.IsAny<string>())).Returns(packageRegistration); }); " is 138.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfThePackageRegistrationAlreadyExistsAndTheCurrentUserIsNotAnOwner,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' currentUser' isVerified: false)); " is 187.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfThePackageTitleMatchesAnExistingPackageRegistrationId,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' currentUser' isVerified: false)); " is 187.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageIdIsLongerThanMaxPackageIdLength,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' user: null' isVerified: false)); " is 186.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageAuthorsIsLongerThan4000,The length of the statement  "                var nugetPackage = PackageServiceUtility.CreateNuGetPackage(authors: "theFirstAuthor".PadRight(2001' '_') + "' " + "theSecondAuthor".PadRight(2001' '_')); " is 154.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageAuthorsIsLongerThan4000,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' user: null' isVerified: false)); " is 186.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageCopyrightIsLongerThan4000,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' user: null' isVerified: false)); " is 186.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheVersionIsLongerThan64Characters,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' user: null' isVerified: false)); " is 186.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageDependenciesIsLongerThanInt16MaxValue,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' user: null' isVerified: false)); " is 186.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfThePackageDependencyIdIsLongerThanMaxPackageIdLength,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' user: null' isVerified: false)); " is 186.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfThePackageDependencyIdIsLongerThanMaxPackageIdLength,The length of the statement  "                Assert.Equal(String.Format(Strings.NuGetPackagePropertyTooLong' "Dependency.Id"' CoreConstants.MaxPackageIdLength)' ex.Message); " is 128.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfThePackageDependencyVersionSpecIsLongerThan256,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' user: null' isVerified: false)); " is 186.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageDescriptionIsNull,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' user: null' isVerified: false)); " is 186.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageDescriptionIsLongerThan4000,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' user: null' isVerified: false)); " is 186.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageIconUrlIsLongerThan4000,The length of the statement  "                var nugetPackage = PackageServiceUtility.CreateNuGetPackage(iconUrl: new Uri("http://theIconUrl/".PadRight(4001' '-')' UriKind.Absolute)); " is 138.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageIconUrlIsLongerThan4000,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' user: null' isVerified: false)); " is 186.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageLicenseUrlIsLongerThan4000,The length of the statement  "                var nugetPackage = PackageServiceUtility.CreateNuGetPackage(licenseUrl: new Uri("http://theLicenseUrl/".PadRight(4001' '-')' UriKind.Absolute)); " is 144.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageLicenseUrlIsLongerThan4000,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' user: null' isVerified: false)); " is 186.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageProjectUrlIsLongerThan4000,The length of the statement  "                var nugetPackage = PackageServiceUtility.CreateNuGetPackage(projectUrl: new Uri("http://theProjectUrl/".PadRight(4001' '-')' UriKind.Absolute)); " is 144.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageProjectUrlIsLongerThan4000,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' user: null' isVerified: false)); " is 186.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageSummaryIsLongerThan4000,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' user: null' isVerified: false)); " is 186.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageTagsIsLongerThan4000,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' user: null' isVerified: false)); " is 186.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageTitleIsLongerThan4000,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' user: null' isVerified: false)); " is 186.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageLanguageIsLongerThan20,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidPackageException>(async () => await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' user: null' isVerified: false)); " is 186.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillSaveSupportedFrameworks,The length of the statement  "                var package = await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' currentUser' isVerified: false); " is 129.
Long Statement,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillNotSaveAnySupportedFrameworksWhenThereIsAnAnyTargetFramework,The length of the statement  "                var package = await service.CreatePackageAsync(nugetPackage.Object' new PackageStreamMetadata()' currentUser' isVerified: false); " is 129.
Long Statement,NuGetGallery,TheFindPackageByIdAndVersionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheLatestStableVersionIfAvailable,The length of the statement  "                var package1 = new Package { Version = "1.0"' PackageRegistration = packageRegistration' Listed = true' IsLatestStable = true' IsLatestStableSemVer2 = true }; " is 158.
Long Statement,NuGetGallery,TheFindPackageByIdAndVersionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheLatestStableVersionIfAvailable,The length of the statement  "                var package2 = new Package { Version = "1.0.0a"' PackageRegistration = packageRegistration' IsPrerelease = true' Listed = true' IsLatest = true }; " is 146.
Long Statement,NuGetGallery,TheFindPackageByIdAndVersionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheLatestStableVersionIfAvailable,The length of the statement  "                var result = service.FindPackageByIdAndVersion("theId"' version: null' semVerLevelKey: SemVerLevelKey.ForSemVerLevel(semVerLevel)); " is 131.
Long Statement,NuGetGallery,TheFindPackageByIdAndVersionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheLatestStableSemVer2VersionIfAvailable,The length of the statement  "                var package0 = new Package { Version = "1.0.0+metadata"' PackageRegistration = packageRegistration' Listed = true' IsLatestStableSemVer2 = true }; " is 146.
Long Statement,NuGetGallery,TheFindPackageByIdAndVersionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheLatestStableSemVer2VersionIfAvailable,The length of the statement  "                var package1 = new Package { Version = "1.0"' PackageRegistration = packageRegistration' Listed = true' IsLatestStable = true }; " is 128.
Long Statement,NuGetGallery,TheFindPackageByIdAndVersionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheLatestStableSemVer2VersionIfAvailable,The length of the statement  "                var package2 = new Package { Version = "1.0.0a"' PackageRegistration = packageRegistration' IsPrerelease = true' Listed = true' IsLatest = true }; " is 146.
Long Statement,NuGetGallery,TheFindPackageByIdAndVersionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheLatestVersionIfNoLatestStableVersionIsAvailable,The length of the statement  "                var package1 = new Package { Version = "1.0.0b"' PackageRegistration = packageRegistration' IsPrerelease = true' Listed = true' IsLatest = true }; " is 146.
Long Statement,NuGetGallery,TheFindPackageByIdAndVersionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheLatestVersionIfNoLatestStableVersionIsAvailable,The length of the statement  "                var package2 = new Package { Version = "1.0.0a"' PackageRegistration = packageRegistration' IsPrerelease = true' Listed = true }; " is 129.
Long Statement,NuGetGallery,TheFindPackageByIdAndVersionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsNullIfNoLatestStableVersionIsAvailableAndPrereleaseIsDisallowed,The length of the statement  "                var package1 = new Package { Version = "1.0.0b"' PackageRegistration = packageRegistration' IsPrerelease = true' Listed = true' IsLatest = true }; " is 146.
Long Statement,NuGetGallery,TheFindPackageByIdAndVersionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsNullIfNoLatestStableVersionIsAvailableAndPrereleaseIsDisallowed,The length of the statement  "                var package2 = new Package { Version = "1.0.0a"' PackageRegistration = packageRegistration' IsPrerelease = true' Listed = true }; " is 129.
Long Statement,NuGetGallery,TheFindPackageByIdAndVersionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheMostRecentVersionIfNoLatestVersionIsAvailable,The length of the statement  "                var package1 = new Package { Version = "1.0.0b"' PackageRegistration = packageRegistration' IsPrerelease = true' Listed = false }; " is 130.
Long Statement,NuGetGallery,TheFindPackageByIdAndVersionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheMostRecentVersionIfNoLatestVersionIsAvailable,The length of the statement  "                var package2 = new Package { Version = "1.0.0a"' PackageRegistration = packageRegistration' IsPrerelease = true' Listed = false }; " is 130.
Long Statement,NuGetGallery,TheFindAbsoluteLatestPackageByIdMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheLatestVersionWhenSemVerLevelUnknown,The length of the statement  "                var package1 = new Package { Version = "1.0"' PackageRegistration = packageRegistration' Listed = true' IsLatestStable = true }; " is 128.
Long Statement,NuGetGallery,TheFindAbsoluteLatestPackageByIdMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheLatestVersionWhenSemVerLevelUnknown,The length of the statement  "                var package2 = new Package { Version = "2.0.0a"' PackageRegistration = packageRegistration' IsPrerelease = true' Listed = true' IsLatest = true }; " is 146.
Long Statement,NuGetGallery,TheFindAbsoluteLatestPackageByIdMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheLatestVersionWhenSemVerLevel2,The length of the statement  "                var package1 = new Package { Version = "1.0"' PackageRegistration = packageRegistration' Listed = true' IsLatestStable = true }; " is 128.
Long Statement,NuGetGallery,TheFindAbsoluteLatestPackageByIdMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheLatestVersionWhenSemVerLevel2,The length of the statement  "                var package2 = new Package { Version = "2.0.0-alpha.1"' PackageRegistration = packageRegistration' IsPrerelease = true' Listed = true' IsLatest = true' SemVerLevelKey = SemVerLevelKey.SemVer2 }; " is 194.
Long Statement,NuGetGallery,TheFindAbsoluteLatestPackageByIdMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheMostRecentVersionWhenSemVerLevelUnknown,The length of the statement  "                var package2 = new Package { Version = "2.0.0-alpha"' PackageRegistration = packageRegistration' IsPrerelease = true' Listed = true }; " is 134.
Long Statement,NuGetGallery,TheFindAbsoluteLatestPackageByIdMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheMostRecentVersionWhenSemVerLevelUnknown,The length of the statement  "                var package3 = new Package { Version = "2.0.0"' PackageRegistration = packageRegistration' Listed = true' IsLatest = true }; " is 124.
Long Statement,NuGetGallery,TheFindAbsoluteLatestPackageByIdMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheMostRecentVersionWhenSemVerLevel2,The length of the statement  "                var package2 = new Package { Version = "2.0.0-alpha.1"' PackageRegistration = packageRegistration' IsPrerelease = true' Listed = true' SemVerLevelKey = SemVerLevelKey.SemVer2 }; " is 177.
Long Statement,NuGetGallery,TheFindAbsoluteLatestPackageByIdMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsTheMostRecentVersionWhenSemVerLevel2,The length of the statement  "                var package3 = new Package { Version = "2.0.0+metadata"' PackageRegistration = packageRegistration' Listed = true' SemVerLevelKey = SemVerLevelKey.SemVer2' IsLatestSemVer2 = true }; " is 181.
Long Statement,NuGetGallery,TheFindPackagesByAnyMatchingOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsAListedPackage,The length of the statement  "                var package = new Package { Version = "1.0"' PackageRegistration = packageRegistration' Listed = true' IsLatestSemVer2 = true' IsLatestStableSemVer2 = true }; " is 158.
Long Statement,NuGetGallery,TheFindPackagesByAnyMatchingOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsNoUnlistedPackagesWhenIncludeUnlistedIsFalse,The length of the statement  "                var package = new Package { Version = "1.0"' PackageRegistration = packageRegistration' Listed = false' IsLatest = false' IsLatestStable = false }; " is 147.
Long Statement,NuGetGallery,TheFindPackagesByAnyMatchingOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsAnUnlistedPackageWhenIncludeUnlistedIsTrue,The length of the statement  "                var package = new Package { Version = "1.0"' PackageRegistration = packageRegistration' Listed = false' IsLatest = false' IsLatestStable = false }; " is 147.
Long Statement,NuGetGallery,TheFindPackagesByAnyMatchingOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsAPackageForEachPackageRegistration,The length of the statement  "                var packageA = new Package { Version = "1.0"' PackageRegistration = packageRegistrationA' Listed = true' IsLatestSemVer2 = true' IsLatestStableSemVer2 = true }; " is 160.
Long Statement,NuGetGallery,TheFindPackagesByAnyMatchingOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsAPackageForEachPackageRegistration,The length of the statement  "                var packageB = new Package { Version = "1.0"' PackageRegistration = packageRegistrationB' Listed = true' IsLatestSemVer2 = true' IsLatestStableSemVer2 = true }; " is 160.
Long Statement,NuGetGallery,TheFindPackagesByAnyMatchingOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsOnlyLatestStableSemVer2PackageIfBothExist,The length of the statement  "                var latestPackage = new Package { Version = "2.0.0-alpha"' PackageRegistration = packageRegistration' Listed = true' IsLatest = true }; " is 135.
Long Statement,NuGetGallery,TheFindPackagesByAnyMatchingOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsOnlyLatestStableSemVer2PackageIfBothExist,The length of the statement  "                var latestSemVer2Package = new Package { Version = "2.0.0-alpha.1"' PackageRegistration = packageRegistration' Listed = true' IsLatestSemVer2 = true }; " is 151.
Long Statement,NuGetGallery,TheFindPackagesByAnyMatchingOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsOnlyLatestStableSemVer2PackageIfBothExist,The length of the statement  "                var latestStablePackage = new Package { Version = "1.0"' PackageRegistration = packageRegistration' Listed = true' IsLatestStableSemVer2 = true }; " is 146.
Long Statement,NuGetGallery,TheFindPackagesByAnyMatchingOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsOnlyLatestStablePackageIfNoLatestStableSemVer2Exist,The length of the statement  "                var latestPackage = new Package { Version = "2.0.0-alpha"' PackageRegistration = packageRegistration' Listed = true' IsLatest = true }; " is 135.
Long Statement,NuGetGallery,TheFindPackagesByAnyMatchingOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsOnlyLatestStablePackageIfNoLatestStableSemVer2Exist,The length of the statement  "                var latestStablePackage = new Package { Version = "1.0"' PackageRegistration = packageRegistration' Listed = true' IsLatestStable = true }; " is 139.
Long Statement,NuGetGallery,TheFindPackagesByAnyMatchingOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsFirstIfMultiplePackagesSetToLatest,The length of the statement  "                var package1 = new Package { Version = "1.0"' PackageRegistration = packageRegistration' Listed = true' IsLatest = true' IsLatestStable = true }; " is 145.
Long Statement,NuGetGallery,TheFindPackagesByAnyMatchingOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsFirstIfMultiplePackagesSetToLatest,The length of the statement  "                var package2 = new Package { Version = "2.0"' PackageRegistration = packageRegistration' Listed = true' IsLatest = true' IsLatestStable = true }; " is 145.
Long Statement,NuGetGallery,TheMarkPackageUnlistedMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,OnOnlyListedPackageSetsNoPackageToLatestVersion,The length of the statement  "                var package = new Package { Version = "1.0.1"' PackageRegistration = packageRegistration' IsLatest = true' IsLatestStable = true }; " is 131.
Long Statement,NuGetGallery,ThePublishPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillSetThePublishedDateOnThePackageBeingPublished,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageByIdAndVersionStrict(It.IsAny<string>()' It.IsAny<string>())).Returns(package); }); " is 150.
Long Statement,NuGetGallery,ThePublishPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillSetThePublishedDateOnThePackageBeingPublishedWithOverload,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageByIdAndVersionStrict(It.IsAny<string>()' It.IsAny<string>())).Returns(package); }); " is 150.
Long Statement,NuGetGallery,ThePublishPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillSetUpdateIsLatestStableOnThePackageWhenItIsTheLatestVersionWithOverload,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageByIdAndVersionStrict(It.IsAny<string>()' It.IsAny<string>())).Returns(package); }); " is 150.
Long Statement,NuGetGallery,ThePublishPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillSetUpdateIsLatestStableOnThePackageWhenItIsTheLatestVersion,The length of the statement  "                package.PackageRegistration.Packages.Add(new Package { Version = "1.0"' PackageRegistration = package.PackageRegistration }); " is 125.
Long Statement,NuGetGallery,ThePublishPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillSetUpdateIsLatestStableOnThePackageWhenItIsTheLatestVersion,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageByIdAndVersionStrict(It.IsAny<string>()' It.IsAny<string>())).Returns(package); }); " is 150.
Long Statement,NuGetGallery,ThePublishPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillNotSetUpdateIsLatestStableOnThePackageWhenItIsNotTheLatestVersionWithOverload,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageByIdAndVersionStrict(It.IsAny<string>()' It.IsAny<string>())).Returns(package); }); " is 150.
Long Statement,NuGetGallery,ThePublishPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,PublishPackageUpdatesIsAbsoluteLatestForPrereleasePackage,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageByIdAndVersionStrict(It.IsAny<string>()' It.IsAny<string>())).Returns(package); }); " is 150.
Long Statement,NuGetGallery,ThePublishPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,PublishPackageUpdatesIsAbsoluteLatestForPrereleasePackageWithOverload,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageByIdAndVersionStrict(It.IsAny<string>()' It.IsAny<string>())).Returns(package); }); " is 150.
Long Statement,NuGetGallery,ThePublishPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,SetUpdateDoesNotSetIsLatestStableForAnyIfAllPackagesArePrerelease,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageByIdAndVersionStrict(It.IsAny<string>()' It.IsAny<string>())).Returns(package); }); " is 150.
Long Statement,NuGetGallery,ThePublishPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,SetUpdateDoesNotSetIsLatestStableForAnyIfAllPackagesArePrereleaseWithOverload,The length of the statement  "                        mockPackageService => { mockPackageService.Setup(x => x.FindPackageByIdAndVersionStrict(It.IsAny<string>()' It.IsAny<string>())).Returns(package); }); " is 150.
Long Statement,NuGetGallery,TheSaveUploadFileMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\UploadFileServiceFacts.cs,WillSaveTheUploadToTheUploadsFolder,The length of the statement  "                fakeFileStorageService.Verify(x => x.SaveFileAsync(CoreConstants.UploadsFolderName' It.IsAny<string>()' It.IsAny<Stream>()' It.Is<bool>(b => b))); " is 146.
Long Statement,NuGetGallery,TheSaveUploadFileMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\UploadFileServiceFacts.cs,WillUseTheUserKeyInTheFileName,The length of the statement  "                fakeFileStorageService.Verify(x => x.SaveFileAsync(It.IsAny<string>()' expectedFileName' It.IsAny<Stream>()' It.Is<bool>(b => b))); " is 131.
Long Statement,NuGetGallery,TheSaveUploadFileMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\UploadFileServiceFacts.cs,WillSaveTheUploadFileStream,The length of the statement  "                fakeFileStorageService.Verify(x => x.SaveFileAsync(It.IsAny<string>()' It.IsAny<string>()' fakeUploadFileStream' It.Is<bool>(b => b))); " is 135.
Long Statement,NuGetGallery,TheConfirmEmailAddressMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\UserServiceFacts.cs,ThrowsForDuplicateConfirmedEmailAddresses,The length of the statement  "                var user = new User { Username = "User1"' Key = 1' EmailAddress = "old@example.org"' UnconfirmedEmailAddress = "new@example.org"' EmailConfirmationToken = "token" }; " is 165.
Long Statement,NuGetGallery,TheChangeEmailMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\UserServiceFacts.cs,DoesNotModifyAnythingWhenConfirmedEmailAddressNotChanged,The length of the statement  "                var user = new User { EmailAddress = "old@example.com"' UnconfirmedEmailAddress = null' EmailConfirmationToken = null }; " is 120.
Long Statement,NuGetGallery,TheCancelChangeEmailAddressMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\UserServiceFacts.cs,ClearsUnconfirmedEmail,The length of the statement  "                var user = new User { Username = "Bob"' UnconfirmedEmailAddress = "unconfirmedEmail@example.org"' EmailAddress = "confirmedEmail@example.org" }; " is 144.
Long Statement,NuGetGallery,TheCancelChangeEmailAddressMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\UserServiceFacts.cs,ClearsEmailConfirmationToken,The length of the statement  "                var user = new User { Username = "Bob"' EmailConfirmationToken = Guid.NewGuid().ToString() 'UnconfirmedEmailAddress = "unconfirmedEmail@example.org"' EmailAddress = "confirmedEmail@example.org" }; " is 196.
Long Statement,NuGetGallery,TheCancelChangeEmailAddressMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\UserServiceFacts.cs,WritesAuditRecord,The length of the statement  "                var user = new User { Username = "Bob"' EmailConfirmationToken = Guid.NewGuid().ToString()' UnconfirmedEmailAddress = "unconfirmedEmail@example.org"' EmailAddress = "confirmedEmail@example.org" }; " is 196.
Long Statement,NuGetGallery,TheUpdateProfileMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\UserServiceFacts.cs,ThrowsArgumentExceptionForNullUser,The length of the statement  "                await ContractAssert.ThrowsArgNullAsync(async () => await service.ChangeEmailSubscriptionAsync(null' emailAllowed: true' notifyPackagePushed: true)' "user"); " is 157.
Long Statement,NuGetGallery,TheSearchMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V1FeedSearchDoesNotReturnPrereleasePackages,The length of the statement  "                        new ODataQueryOptions<V1FeedPackage>(new ODataQueryContext(NuGetODataV1FeedConfig.GetEdmModel()' typeof(V1FeedPackage))' v1Service.Request)' " is 140.
Long Statement,NuGetGallery,TheSearchMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V1FeedSearchDoesNotReturnDeletedPackages,The length of the statement  "                        new ODataQueryOptions<V1FeedPackage>(new ODataQueryContext(NuGetODataV1FeedConfig.GetEdmModel()' typeof(V1FeedPackage))' v1Service.Request)' " is 140.
Long Statement,NuGetGallery,TheSearchMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedSearchFiltersPackagesBySearchTermAndPrereleaseFlag,The length of the statement  "                    v2Service.Request = new HttpRequestMessage(HttpMethod.Get' "https://localhost:8081/api/v2/Search()?searchTerm='" + searchTerm + "'&targetFramework=''&includePrerelease=false"); " is 176.
Long Statement,NuGetGallery,TheSearchMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedSearchFiltersPackagesBySearchTermAndPrereleaseFlag,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheSearchMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedSearchFiltersPackagesBySearchTermAndPrereleaseFlag,The length of the statement  "                        Assert.True(result.Any(p => p.Id == expectedId && p.Version == expectedVersion)' string.Format("Search results did not contain {0} {1}"' expectedId' expectedVersion)); " is 167.
Long Statement,NuGetGallery,TheSearchMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedSearchCountFiltersPackagesBySearchTermAndPrereleaseFlag,The length of the statement  "                    v2Service.Request = new HttpRequestMessage(HttpMethod.Get' "https://localhost:8081/api/v2/Search()/$count?searchTerm='" + searchTerm + "'&targetFramework=''&includePrerelease=false"); " is 183.
Long Statement,NuGetGallery,TheSearchMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedSearchCountFiltersPackagesBySearchTermAndPrereleaseFlag,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheFindPackagesByIdMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V1FeedFindPackagesByIdReturnsUnlistedPackagesButNotPrereleasePackages,The length of the statement  "                        new ODataQueryOptions<V1FeedPackage>(new ODataQueryContext(NuGetODataV1FeedConfig.GetEdmModel()' typeof(V1FeedPackage))' v1Service.Request)' " is 140.
Long Statement,NuGetGallery,TheFindPackagesByIdMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V1FeedFindPackagesByIdDoesNotReturnDeletedPackages,The length of the statement  "                        new ODataQueryOptions<V1FeedPackage>(new ODataQueryContext(NuGetODataV1FeedConfig.GetEdmModel()' typeof(V1FeedPackage))' v1Service.Request)' " is 140.
Long Statement,NuGetGallery,TheFindPackagesByIdMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedFindPackagesByIdReturnsUnlistedAndPrereleasePackages,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheFindPackagesByIdMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedFindPackagesByIdReturnsEmptyCollectionWhenNoPackages,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheFindPackagesByIdMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedFindPackagesByIdDoesNotHitBackendWhenIdIsEmpty,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheFindPackagesByIdMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedFindPackagesByIdDoesNotReturnDeletedPackages,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,ThePackagesCollection,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedPackagesReturnsCollection,The length of the statement  "                    v2Service.Request = new HttpRequestMessage(HttpMethod.Get' "https://localhost:8081/api/v2/Packages?$filter=" + filter + "&$top=" + top); " is 136.
Long Statement,NuGetGallery,ThePackagesCollection,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedPackagesReturnsCollection,The length of the statement  "                    var result = (await v2Service.Get(new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request))) " is 175.
Long Statement,NuGetGallery,ThePackagesCollection,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedPackagesReturnsCollection,The length of the statement  "                        Assert.True(result.Any(p => p.Id == expectedId && p.Version == expectedVersion)' string.Format("Search results did not contain {0} {1}"' expectedId' expectedVersion)); " is 167.
Long Statement,NuGetGallery,ThePackagesCollection,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedPackagesUsesSearchHijackForIdOrIdVersionQueries,The length of the statement  "                    var result = (await v2Service.Get(new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request))) " is 175.
Long Statement,NuGetGallery,ThePackagesCollection,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedPackagesDoesNotUseSearchHijackForFunkyQueries,The length of the statement  "                    var result = (await v2Service.Get(new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request))) " is 175.
Long Statement,NuGetGallery,ThePackagesCollection,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedPackagesCountReturnsCorrectCount,The length of the statement  "                    v2Service.Request = new HttpRequestMessage(HttpMethod.Get' "https://localhost:8081/api/v2/Packages/$count?$filter=" + filter + "&$top=" + top); " is 143.
Long Statement,NuGetGallery,ThePackagesCollection,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedPackagesCountReturnsCorrectCount,The length of the statement  "                    var result = (await v2Service.GetCount(new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request))) " is 180.
Long Statement,NuGetGallery,ThePackagesCollection,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedPackagesByIdAndVersionReturnsPackage,The length of the statement  "                    var result = (await v2Service.Get(new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' expectedId' expectedVersion)) " is 204.
Long Statement,NuGetGallery,ThePackagesCollection,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedPackagesByIdAndVersionReturnsNotFoundWhenPackageNotFound,The length of the statement  "                    v2Service.Request = new HttpRequestMessage(HttpMethod.Get' "https://localhost:8081/api/v2/Packages(Id='" + expectedId + "'' Version='" + expectedVersion + "')"); " is 161.
Long Statement,NuGetGallery,ThePackagesCollection,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedPackagesByIdAndVersionReturnsNotFoundWhenPackageNotFound,The length of the statement  "                    (await v2Service.Get(new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' expectedId' expectedVersion)) " is 191.
Long Statement,NuGetGallery,ThePackagesCollection,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedPackagesCollectionDoesNotContainDeletedPackages,The length of the statement  "                    var result = (await v2Service.Get(new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request))) " is 175.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsEmptyResultsIfInputIsMalformed,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesIgnoresItemsWithMalformedVersions,The length of the statement  "                        new Package { PackageRegistration = packageRegistrationA' Version = "1.2.0-alpha"' IsPrerelease = true' Listed = true }' " is 120.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesIgnoresItemsWithMalformedVersions,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsVersionsNewerThanListedVersion,The length of the statement  "                        new Package { PackageRegistration = packageRegistrationA' Version = "1.2.0-alpha"' IsPrerelease = true' Listed = true }' " is 120.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsVersionsNewerThanListedVersion,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsEmptyIfVersionConstraintsContainWrongNumberOfElements,The length of the statement  "                        new Package { PackageRegistration = packageRegistrationA' Version = "1.2.0-alpha"' IsPrerelease = true' Listed = true }' " is 120.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsEmptyIfVersionConstraintsContainWrongNumberOfElements,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsVersionsConformingToConstraints,The length of the statement  "                        new Package { PackageRegistration = packageRegistrationA' Version = "1.2.0-alpha"' IsPrerelease = true' Listed = true }' " is 120.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsVersionsConformingToConstraints,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesIgnoreInvalidVersionConstraints,The length of the statement  "                        new Package { PackageRegistration = packageRegistrationA' Version = "1.2.0-alpha"' IsPrerelease = true' Listed = true }' " is 120.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesIgnoreInvalidVersionConstraints,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsVersionsConformingToConstraintsWithMissingConstraintsForSomePackges,The length of the statement  "                        new Package { PackageRegistration = packageRegistrationA' Version = "1.2.0-alpha"' IsPrerelease = true' Listed = true }' " is 120.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsVersionsConformingToConstraintsWithMissingConstraintsForSomePackges,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsEmptyPackagesIfNoPackageSatisfiesConstraints,The length of the statement  "                        new Package { PackageRegistration = packageRegistrationA' Version = "1.2.0-alpha"' IsPrerelease = true' Listed = true }' " is 120.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsEmptyPackagesIfNoPackageSatisfiesConstraints,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsCaseInsensitiveMatches,The length of the statement  "                        new Package { PackageRegistration = packageRegistrationA' Version = "1.2.0-alpha"' IsPrerelease = true' Listed = true }' " is 120.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsCaseInsensitiveMatches,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsUpdateIfAnyOfTheProvidedVersionsIsOlder,The length of the statement  "                        new Package { PackageRegistration = packageRegistrationA' Version = "1.2.0-alpha"' IsPrerelease = true' Listed = true }' " is 120.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsUpdateIfAnyOfTheProvidedVersionsIsOlder,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsPrereleasePackages,The length of the statement  "                        new Package { PackageRegistration = packageRegistrationA' Version = "1.2.0-alpha"' IsPrerelease = true' Listed = true }' " is 120.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsPrereleasePackages,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesDoesNotReturnDeletedPackages,The length of the statement  "                        new Package { PackageRegistration = packageRegistrationA' Version = "1.1.0"' IsPrerelease = false' PackageStatusKey = PackageStatus.Deleted } " is 141.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesDoesNotReturnDeletedPackages,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsResultsIfDuplicatesInPackageList,The length of the statement  "                        new Package { PackageRegistration = packageRegistrationA' Version = "1.2.0-alpha"' IsPrerelease = true' Listed = true }' " is 120.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsResultsIfDuplicatesInPackageList,The length of the statement  "                            new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesFiltersByTargetFramework,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesFiltersIncludesHighestPrereleasePackage,The length of the statement  "                        new ODataQueryOptions<V2FeedPackage>(new ODataQueryContext(NuGetODataV2FeedConfig.GetEdmModel()' typeof(V2FeedPackage))' v2Service.Request)' " is 140.
Long Statement,NuGetGallery,HttpActionResultExtensions,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\TestUtils\HttpActionResultExtensions.cs,ExpectOkNegotiatedContentResult,The length of the statement  "            throw new ArgumentException(string.Format("The argument is not of type OkNegotiatedContentResult<{0}>. Got {1} instead."'  " is 121.
Long Statement,NuGetGallery,TestUtility,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\TestUtils\TestUtility.cs,GetAnonymousPropertyValue,The length of the statement  "            var property = source.GetType().GetProperty(propertyName' BindingFlags.Instance | BindingFlags.DeclaredOnly | BindingFlags.Public); " is 131.
Long Statement,NuGetGallery.Areas.Admin.Controllers,ReservedNamespaceControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Areas\Admin\Controllers\ReservedNamespaceControllerFacts.cs,RemoveNamespaceSuccesfullyDeletesNamespace,The length of the statement  "            var existingNamespace = namespaces.Where(rn => rn.Value.Equals(value' StringComparison.OrdinalIgnoreCase)).FirstOrDefault(); " is 124.
Long Statement,NuGetGallery.Areas.Admin.Controllers,ReservedNamespaceControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Areas\Admin\Controllers\ReservedNamespaceControllerFacts.cs,AddOwnerDoesNotReturnSuccessForInvalidData,The length of the statement  "            var existingNamespace = namespaces.Where(rn => rn.Value.Equals(value' StringComparison.OrdinalIgnoreCase)).FirstOrDefault() ?? new ReservedNamespace(); " is 151.
Long Statement,NuGetGallery.Areas.Admin.Controllers,ReservedNamespaceControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Areas\Admin\Controllers\ReservedNamespaceControllerFacts.cs,AddOwnerSuccessfullyAddsOwnerToReservedNamespace,The length of the statement  "            var existingNamespace = namespaces.Where(rn => rn.Value.Equals(value' StringComparison.OrdinalIgnoreCase)).FirstOrDefault(); " is 124.
Long Statement,NuGetGallery.Areas.Admin.Controllers,ReservedNamespaceControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Areas\Admin\Controllers\ReservedNamespaceControllerFacts.cs,RemoveOwnerDoesNotReturnSuccessForInvalidData,The length of the statement  "            var existingNamespace = namespaces.Where(rn => rn.Value.Equals(value' StringComparison.OrdinalIgnoreCase)).FirstOrDefault() ?? new ReservedNamespace(); " is 151.
Long Statement,NuGetGallery.Areas.Admin.Controllers,ReservedNamespaceControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Areas\Admin\Controllers\ReservedNamespaceControllerFacts.cs,RemoveOwnerSuccessfullyRemovesOwnerToReservedNamespace,The length of the statement  "            var existingNamespace = namespaces.Where(rn => rn.Value.Equals(value' StringComparison.OrdinalIgnoreCase)).FirstOrDefault(); " is 124.
Long Statement,NuGetGallery.Authentication,TheRegisterMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,GivenPlainTextPassword_ItSaltsHashesAndPassesThru,The length of the statement  "                await mock.Object.Register(fakes.User.Username' fakes.User.EmailAddress' new CredentialBuilder().CreatePasswordCredential(password)); " is 133.
Long Statement,NuGetGallery.Authentication,TheResetPasswordWithTokenMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,ThrowsExceptionIfUserNotConfirmed,The length of the statement  "                await AssertEx.Throws<InvalidOperationException>(() => authService.ResetPasswordWithToken("tempUser"' "some-token"' "new-password")); " is 133.
Long Statement,NuGetGallery.Authentication,AuthenticateThunk,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,Attach,The length of the statement  "                // This bit of magic basically makes IAuthenticationManager.Authenticate return shimIdentity and some empty dictionaries. " is 121.
Long Statement,NuGetGallery.Authentication,AuthenticateThunk,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,Attach,The length of the statement  "                context.Set<Func<string[]' Action<IIdentity' IDictionary<string' string>' IDictionary<string' object>' object>' object' Task>>( " is 127.
Long Statement,NuGetGallery.Authentication.Providers.ApiKey,TheAuthenticateCoreAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenNoApiKeyHeader_ItReturnsNull,The length of the statement  "                TestableApiKeyAuthenticationHandler handler = await TestableApiKeyAuthenticationHandler.CreateAsync(new ApiKeyAuthenticationOptions()); " is 135.
Long Statement,NuGetGallery.Authentication.Providers.ApiKey,TheAuthenticateCoreAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenNoUserMatchingApiKey_ItReturnsNull,The length of the statement  "                TestableApiKeyAuthenticationHandler handler = await TestableApiKeyAuthenticationHandler.CreateAsync(new ApiKeyAuthenticationOptions()); " is 135.
Long Statement,NuGetGallery.Authentication.Providers.ApiKey,TheAuthenticateCoreAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenMatchingApiKey_ItReturnsTicketWithClaims,The length of the statement  "                Assert.Equal(JsonConvert.SerializeObject(apiKeyCredential.Scopes' Formatting.None)' ticket.Identity.GetClaimOrDefault(NuGetClaims.Scope)); " is 138.
Long Statement,NuGetGallery.Authentication.Providers.ApiKey,TheAuthenticateCoreAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenMatchingApiKeyWithNoOwnerScope_ItSetsUserInOwinEnvironment,The length of the statement  "                TestableApiKeyAuthenticationHandler handler = await TestableApiKeyAuthenticationHandler.CreateAsync(new ApiKeyAuthenticationOptions()); " is 135.
Long Statement,NuGetGallery.Authentication.Providers.ApiKey,TheAuthenticateCoreAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenMatchingApiKeyWithOwnerScopeOfSelf_ItSetsUserInOwinEnvironment,The length of the statement  "                TestableApiKeyAuthenticationHandler handler = await TestableApiKeyAuthenticationHandler.CreateAsync(new ApiKeyAuthenticationOptions()); " is 135.
Long Statement,NuGetGallery.Authentication.Providers.ApiKey,TheAuthenticateCoreAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenMatchingApiKeyWithOwnerScopeOfOrganization_ItSetsUserInOwinEnvironment,The length of the statement  "                TestableApiKeyAuthenticationHandler handler = await TestableApiKeyAuthenticationHandler.CreateAsync(new ApiKeyAuthenticationOptions()); " is 135.
Long Statement,NuGetGallery.Authentication.Providers.ApiKey,TheAuthenticateCoreAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenApiKeyWithOwnerScopeThatDoesNotMatch_WritesUnauthorizedResponse,The length of the statement  "                TestableApiKeyAuthenticationHandler handler = await TestableApiKeyAuthenticationHandler.CreateAsync(new ApiKeyAuthenticationOptions()); " is 135.
Long Statement,NuGetGallery.Infrastructure.Authentication,ApiKeyV4Facts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\Authentication\ApiKeyV4Facts.cs,VerifyFailsOnIncorrectHashedKey,The length of the statement  "            var hashedApiKey = "oy2iuvoucviouojnrbzaAEAAAAABAAACOEAAAAABAMHUIIUXSFAIOTEAFWF3K2E7L6YRUDOZDPHKSRX3YEOFUWPCID325EZH5JXBBGBMYBECT4KCGMWOQQ======"; " is 146.
Long Statement,NuGetGallery.Commands,TheExecuteMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Commands\AutomaticallyCuratePackageCommandFacts.cs,WillCuratePackageUsingAllPackageCurators,The length of the statement  "                await cmd.ExecuteAsync(new Package()' new Mock<PackageArchiveReader>(TestPackage.CreateTestPackageStream("test"' "1.0.0")).Object' commitChanges: true); " is 152.
Long Statement,NuGetGallery.Controllers,TheRegisterAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\AuthenticationControllerFacts.cs,WillCreateAndLogInTheUserWhenNotLinking,The length of the statement  "                authenticationService.Setup(x => x.Register(authUser.User.Username' authUser.User.UnconfirmedEmailAddress' It.IsAny<Credential>())) " is 131.
Long Statement,NuGetGallery.Controllers,TheRegisterAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\AuthenticationControllerFacts.cs,WillCreateAndLogInTheUserWhenNotLinking,The length of the statement  "                        TestUtility.GallerySiteRootHttps + "account/confirm/" + authUser.User.Username + "/" + authUser.User.EmailConfirmationToken)); " is 126.
Long Statement,NuGetGallery.Controllers,TheRegisterAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\AuthenticationControllerFacts.cs,GivenValidExternalAuth_ItCreatesAccountAndLinksCredential,The length of the statement  "                // Simulate the model state error that will be added when doing an external account registration (since password is not present) " is 128.
Long Statement,NuGetGallery.Controllers,TheRegisterAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\AuthenticationControllerFacts.cs,GivenValidExternalAuth_ItCreatesAccountAndLinksCredential,The length of the statement  "                        TestUtility.GallerySiteRootHttps + "account/confirm/" + authUser.User.Username + "/" + authUser.User.EmailConfirmationToken)); " is 126.
Long Statement,NuGetGallery.Controllers,TheAuthenticateAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\AuthenticationControllerFacts.cs,WillChallengeTheUserUsingTheGivenProviderAndReturnUrl,The length of the statement  "                ResultAssert.IsChallengeResult(result' "MicrosoftAccount"' "/users/account/authenticate/return?ReturnUrl=" + HttpUtility.UrlEncode(returnUrl)); " is 143.
Long Statement,NuGetGallery.Controllers,ControllerTests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ControllerTests.cs,AllActionsHaveAntiForgeryTokenIfNotGet,The length of the statement  "                new AntiForgeryTokenException(typeof(AuthenticationController)' nameof(AuthenticationController.ChallengeAuthentication)) " is 121.
Long Statement,NuGetGallery.Controllers,ThePackageOwnerModificationMethods,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,ReturnsFailureIfNewOwnerIsNotConfirmed,The length of the statement  "                    Assert.Equal("Sorry' 'testUser' hasn't verified their email account yet and we cannot proceed with the request."' data.message); " is 128.
Long Statement,NuGetGallery.Controllers,TheGetAddPackageOwnerConfirmationMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,ReturnsDefaultConfirmationIfNoPolicyPropagation,The length of the statement  "                            Assert.Equal($"Please confirm if you would like to proceed adding '{userToAdd.Username}' as a co-owner of this package."' data.confirmation); " is 141.
Long Statement,NuGetGallery.Controllers,TheGetAddPackageOwnerConfirmationMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,ReturnsDetailedConfirmationIfNewOwnerPropagatesPolicy,The length of the statement  "                                $"User '{userToAdd.Username}' has the following requirements that will be enforced for all co-owners once the user accepts ownership of this package:"' " is 151.
Long Statement,NuGetGallery.Controllers,TheGetAddPackageOwnerConfirmationMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,ReturnsDetailedConfirmationIfCurrentOwnerPropagatesPolicy,The length of the statement  "                                $"Owner(s) '{existingOwner.Username}' has (have) the following requirements that will be enforced for user '{userToAdd.Username}' once the user accepts ownership of this package:"' " is 180.
Long Statement,NuGetGallery.Controllers,TheGetAddPackageOwnerConfirmationMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,DoesNotReturnConfirmationIfCurrentOwnerPropagatesButNewOwnerIsSubscribed,The length of the statement  "                            Assert.StartsWith($"Please confirm if you would like to proceed adding '{userToAdd.Username}' as a co-owner of this package."' " is 126.
Long Statement,NuGetGallery.Controllers,TheGetAddPackageOwnerConfirmationMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,ReturnsDetailedConfirmationIfPendingOwnerPropagatesPolicy,The length of the statement  "                                $"Pending owner(s) '{pendingUser.Username}' has (have) the following requirements that will be enforced for all co-owners' including '{userToAdd.Username}'' once ownership requests are accepted:"' " is 196.
Long Statement,NuGetGallery.Controllers,TheGetAddPackageOwnerConfirmationMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,DoesNotReturnConfirmationIfPendingOwnerPropagatesButNewOwnerIsSubscribed,The length of the statement  "                            Assert.StartsWith($"Please confirm if you would like to proceed adding '{userToAdd.Username}' as a co-owner of this package."' " is 126.
Long Statement,NuGetGallery.Controllers,TheAddPackageOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,CreatesPackageOwnerRequestSendsEmailAndReturnsPendingState,The length of the statement  "                            JsonResult result = await controller.AddPackageOwner(fakes.Package.Id' userToAdd.Username' "Hello World! Html Encoded <3"); " is 123.
Long Statement,NuGetGallery.Controllers,TheAddPackageOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,SendsPackageOwnerRequestEmailWhereNewOwnerPropagatesPolicy,The length of the statement  "                            var policyMessage = await GetSendPackageOwnerRequestPolicyMessage(fakes' getCurrentUser(fakes)' getUserToAdd(fakes)' getUserToAdd(fakes)); " is 138.
Long Statement,NuGetGallery.Controllers,TheAddPackageOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,SendsPackageOwnerRequestEmailWhereCurrentOwnerPropagatesPolicy,The length of the statement  "                            var policyMessage = await GetSendPackageOwnerRequestPolicyMessage(fakes' getCurrentUser(fakes)' getUserToAdd(fakes)' fakes.Owner); " is 130.
Long Statement,NuGetGallery.Controllers,TheAddPackageOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,SendsPackageOwnerRequestEmailWhereCurrentOwnerPropagatesPolicy,The length of the statement  "                                "Note: Owner(s) 'testPackageOwner' has (have) the following policies that will be enforced on your account once you accept this request."' " is 138.
Long Statement,NuGetGallery.Controllers,TheAddPackageOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,SendsPackageOwnerRequestEmailWherePendingOwnerPropagatesPolicy,The length of the statement  "                                $"Note: Pending owner(s) '{pendingUser.Username}' has (have) the following policies that will be enforced on your account once ownership requests are accepted."' " is 161.
Long Statement,NuGetGallery.Controllers,TheRemovePackageOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\JsonApiControllerFacts.cs,RemovesExistingOwner,The length of the statement  "                        packageOwnershipManagementService.Verify(x => x.RemovePackageOwnerAsync(package' currentUser' userToRemove' It.IsAny<bool>())); " is 127.
Long Statement,NuGetGallery.Controllers,ODataV2CuratedFeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV2CuratedFeedControllerFacts.cs,FindPackagesById_IncludesSemVerV2PackageVersionsWhenSemVerLevel2OrHigher,The length of the statement  "                async (controller' options) => await controller.FindPackagesById(options' _curatedFeedName' id: TestPackageId' semVerLevel: semVerLevel)' " is 137.
Long Statement,NuGetGallery.Controllers,ODataV2CuratedFeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV2CuratedFeedControllerFacts.cs,FindPackagesByIdCount_IncludesSemVerV2PackageVersionsWhenSemVerLevel2OrHigher,The length of the statement  "                async (controller' options) => await controller.FindPackagesByIdCount(options' _curatedFeedName' id: TestPackageId' semVerLevel: semVerLevel)' " is 142.
Long Statement,NuGetGallery.Controllers,ODataV2CuratedFeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV2CuratedFeedControllerFacts.cs,Search_IncludesSemVerV2PackageVersionsWhenSemVerLevel2OrHigher_ExcludePrerelease,The length of the statement  "                async (controller' options) => await controller.Search(options' _curatedFeedName' searchTerm: TestPackageId' semVerLevel: semVerLevel)' " is 135.
Long Statement,NuGetGallery.Controllers,ODataV2CuratedFeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV2CuratedFeedControllerFacts.cs,Search_IncludesSemVerV2PackageVersionsWhenSemVerLevel2OrHigher_IncludePrerelease,The length of the statement  "                $"/api/v2/curated-feed/{_curatedFeedName}/Search?searchTerm='{TestPackageId}'&semVerLevel={semVerLevel}&includePrerelease=true"); " is 129.
Long Statement,NuGetGallery.Controllers,ODataV2CuratedFeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV2CuratedFeedControllerFacts.cs,SearchCount_FiltersSemVerV2PackageVersionsWhenSemVerLevelLowerThan200_IncludePrerelease,The length of the statement  "                $"/api/v2/curated-feed/{_curatedFeedName}/Search/$count?searchTerm='{TestPackageId}'&includePrerelease=true&semVerLevel=1.0.0"); " is 128.
Long Statement,NuGetGallery.Controllers,ODataV2CuratedFeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV2CuratedFeedControllerFacts.cs,SearchCount_IncludesSemVerV2PackageVersionsWhenSemVerLevel2OrHigher_IncludePrerelease,The length of the statement  "                $"/api/v2/curated-feed/{_curatedFeedName}/Search/$count?searchTerm='{TestPackageId}'&includePrerelease=true&semVerLevel={semVerLevel}"); " is 136.
Long Statement,NuGetGallery.Controllers,ODataV2CuratedFeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV2CuratedFeedControllerFacts.cs,SearchCount_IncludesSemVerV2PackageVersionsWhenSemVerLevel2OrHigher_ExcludePrerelease,The length of the statement  "                async (controller' options) => await controller.SearchCount(options' _curatedFeedName' searchTerm: TestPackageId' semVerLevel: semVerLevel)' " is 140.
Long Statement,NuGetGallery.Controllers,ODataV2CuratedFeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV2CuratedFeedControllerFacts.cs,AssertSemVer2PackagesFilteredFromResult,The length of the statement  "                // Assert none of the items in the result set are SemVer v.2.0.0 packages (checking on original version is enough in this case) " is 127.
Long Statement,NuGetGallery.Controllers,ODataV2FeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV2FeedControllerFacts.cs,SearchIsAbsoluteLatestVersion_ReturnsLatestSemVer2_WhenSemVerLevel200,The length of the statement  "                $"/api/v2/Search?$filter=IsAbsoluteLatestVersion&searchTerm='{TestPackageId}'&includePrerelease=true&semVerLevel=2.0.0"); " is 121.
Long Statement,NuGetGallery.Controllers,ODataV2FeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV2FeedControllerFacts.cs,GetUpdates_FiltersSemVerV2PackageVersionsByDefault,The length of the statement  "                (controller' options) => controller.GetUpdates(options' TestPackageId' currentVersionString' includePrerelease: true' includeAllVersions: true)' " is 144.
Long Statement,NuGetGallery.Controllers,ODataV2FeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV2FeedControllerFacts.cs,GetUpdates_FiltersSemVerV2PackageVersionsByDefault,The length of the statement  "                $"/api/v2/GetUpdates()?packageIds='{TestPackageId}'&versions='{currentVersionString}'&includePrerelease=true&includeAllVersions=true"); " is 135.
Long Statement,NuGetGallery.Controllers,ODataV2FeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV2FeedControllerFacts.cs,GetUpdates_IncludesSemVerV2PackageVersionsWhenSemVerLevel2OrHigher,The length of the statement  "                (controller' options) => controller.GetUpdates(options' TestPackageId' currentVersionString' includePrerelease: true' includeAllVersions: true' semVerLevel: semVerLevel)' " is 170.
Long Statement,NuGetGallery.Controllers,ODataV2FeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV2FeedControllerFacts.cs,GetUpdates_IncludesSemVerV2PackageVersionsWhenSemVerLevel2OrHigher,The length of the statement  "                $"/api/v2/GetUpdates()?packageIds='{TestPackageId}'&versions='{currentVersionString}'&includePrerelease=true&includeAllVersions=true&semVerLevel={semVerLevel}"); " is 161.
Long Statement,NuGetGallery.Controllers,ODataV2FeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV2FeedControllerFacts.cs,GetUpdatesCount_FiltersSemVerV2PackageVersionsByDefault,The length of the statement  "                (controller' options) => controller.GetUpdatesCount(options' TestPackageId' currentVersionString' includePrerelease: true' includeAllVersions: true)' " is 149.
Long Statement,NuGetGallery.Controllers,ODataV2FeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV2FeedControllerFacts.cs,GetUpdatesCount_FiltersSemVerV2PackageVersionsByDefault,The length of the statement  "                $"/api/v2/GetUpdates()?packageIds='{TestPackageId}'&versions='{currentVersionString}'&includePrerelease=true&includeAllVersions=true"); " is 135.
Long Statement,NuGetGallery.Controllers,ODataV2FeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV2FeedControllerFacts.cs,GetUpdatesCount_IncludesSemVerV2PackageVersionsWhenSemVerLevel2OrHigher,The length of the statement  "                $"/api/v2/GetUpdates()?packageIds='{TestPackageId}'&versions='{currentVersionString}'&includePrerelease=true&includeAllVersions=true&semVerLevel={semVerLevel}"); " is 161.
Long Statement,NuGetGallery.Controllers,ODataV2FeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV2FeedControllerFacts.cs,AssertSemVer2PackagesFilteredFromResult,The length of the statement  "                // Assert none of the items in the result set are SemVer v.2.0.0 packages (checking on original version is enough in this case) " is 127.
Long Statement,NuGetGallery.Controllers,ODataV1FeedControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ODataV1FeedControllerFacts.cs,AssertSemVer2PackagesFilteredFromResult,The length of the statement  "                // Assert none of the items in the result set are SemVer v.2.0.0 packages (checking on original version is enough in this case) " is 127.
Long Statement,NuGetGallery.Filters,ApiAuthorizeAttributeFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Filters\ApiAuthorizeAttributeFacts.cs,OnAuthorization_Returns401ForUnauthenticatedUser,The length of the statement  "            Assert.Equal(AuthenticationTypes.ApiKey' owinContext.Authentication.AuthenticationResponseChallenge.AuthenticationTypes[0]); " is 124.
Long Statement,NuGetGallery.Filters,RequiresAccountConfirmationAttributeFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Filters\RequiresAccountConfirmationAttributeFacts.cs,RequiresAccountConfirmationAttributePassedWithConfirmationRequiredMessage,The length of the statement  "            Assert.Equal(string.Format(CultureInfo.CurrentCulture' "Before you can {0} you must first confirm your email address."' inOrderTo)' controller.TempData["ConfirmationRequiredMessage"]); " is 184.
Long Statement,NuGetGallery.Framework,UnitTestBindings,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Framework\UnitTestBindings.cs,Load,The length of the statement  "                                        It.Is<int?>(x => package.SemVerLevelKey == null || package.SemVerLevelKey == SemVerLevelKey.Unknown || (x != null && package.SemVerLevelKey <= x))' " is 147.
Long Statement,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The length of the statement  "                FlattenedDependencies = "adjunct-System.FluentCast:1.0.0.4|xunit:1.8.0.1545|adjunct-XUnit.Assertions:1.0.0.5|adjunct-XUnit.Assertions.Linq2Xml:1.0.0.3"' " is 152.
Long Statement,NuGetGallery.Security,RequireMinProtocolVersionForPushPolicyFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\RequireMinProtocolVersionForPushPolicyFacts.cs,Evaluate_ReturnsFailureIfProtocolVersionHeaderIsMissing,The length of the statement  "            var result = Evaluate(minProtocolVersions: "4.1.0"' actualClientVersion: string.Empty' actualProtocolVersion: string.Empty); " is 124.
Long Statement,NuGetGallery.Security,RequireMinClientVersionForPushPolicyFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\RequireMinClientVersionForPushPolicyFacts.cs,Evaluate_ReturnsFailureIfClientVersionHeaderIsMissing,The length of the statement  "            var result = Evaluate(minClientVersions: "4.1.0"' actualClientVersion: string.Empty' actualProtocolVersion: string.Empty); " is 122.
Long Statement,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,EvaluateAsync_EvaluatesOnlyPoliciesRelevantToTheAction,The length of the statement  "            var extraPolicyHandlerMock = new Mock<UserSecurityPolicyHandler>(extraPolicyName' SecurityPolicyAction.ManagePackageOwners); " is 124.
Long Statement,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,EvaluateAsync_WhenEnforceDefaultSecurityPoliciesIsFalseDefaultPolicyNotEvaluated,The length of the statement  "            var policyData = new TestUserSecurityPolicyData(policy1Result: true' policy2Result: true' defaultPolicy1Result: false' defaultPolicy2Result: false); " is 148.
Long Statement,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,EvaluateAsync_WhenDefaultSecurityPolicyNotMetReturnFailure,The length of the statement  "            var policyData = new TestUserSecurityPolicyData(policy1Result: true' policy2Result: true' defaultPolicy1Result: true' defaultPolicy2Result: false); " is 147.
Long Statement,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,EvaluateAsync_WhenDefaultSecurityPolicyIsMetUserPolicyIsEvaluated,The length of the statement  "            var policyData = new TestUserSecurityPolicyData(policy1Result: true' policy2Result: userPolicyMet' defaultPolicy1Result: true' defaultPolicy2Result: true); " is 155.
Long Statement,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,EvaluateAsync_WhenDefaultSecurityPolicyIsMetUserPolicyIsEvaluated,The length of the statement  "            service.Mocks.MockPolicyHandler1.Verify(p => p.Evaluate(It.IsAny<UserSecurityPolicyEvaluationContext>())' Times.Exactly(2)); " is 124.
Long Statement,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,EvaluateAsync_WhenDefaultSecurityPolicyIsMetUserPolicyIsEvaluated,The length of the statement  "            service.Mocks.MockPolicyHandler2.Verify(p => p.Evaluate(It.IsAny<UserSecurityPolicyEvaluationContext>())' Times.Exactly(2)); " is 124.
Long Statement,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,SubscribeAsync_AddsAllSubscriptionPoliciesWhenHasNoneToStart,The length of the statement  "            service.Mocks.Subscription.Verify(s => s.OnSubscribeAsync(It.IsAny<UserSecurityPolicySubscriptionContext>())' Times.Once); " is 122.
Long Statement,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,SubscribeAsync_AddsAllSubscriptionPoliciesWhenHasSameAsDifferentSubscription,The length of the statement  "            service.Mocks.Subscription.Verify(s => s.OnSubscribeAsync(It.IsAny<UserSecurityPolicySubscriptionContext>())' Times.Once); " is 122.
Long Statement,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,SubscribeAsync_DoesNotAddSubscriptionPoliciesIfAlreadySubscribed,The length of the statement  "            service.Mocks.Subscription.Verify(s => s.OnSubscribeAsync(It.IsAny<UserSecurityPolicySubscriptionContext>())' Times.Never); " is 123.
Long Statement,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,UnsubscribeAsync_RemovesAllSubscriptionPolicies,The length of the statement  "            service.Mocks.Subscription.Verify(s => s.OnUnsubscribeAsync(It.IsAny<UserSecurityPolicySubscriptionContext>())' Times.Once); " is 124.
Long Statement,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,UnsubscribeAsync_DoesNotRemoveOtherSubscriptionPolicies,The length of the statement  "            service.Mocks.Subscription.Verify(s => s.OnUnsubscribeAsync(It.IsAny<UserSecurityPolicySubscriptionContext>())' Times.Once); " is 124.
Long Statement,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,UnsubscribeAsync_RemovesNoPoliciesIfNotSubscribed,The length of the statement  "            service.Mocks.Subscription.Verify(s => s.OnUnsubscribeAsync(It.IsAny<UserSecurityPolicySubscriptionContext>())' Times.Never); " is 125.
Long Statement,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,CreateHttpContext,The length of the statement  "            httpContext.SetupGet(c => c.Items).Returns(new Dictionary<object' object> { { "owin.Environment"' new Dictionary<string' object>() } }); " is 136.
Long Statement,NuGetGallery.Security,SecurePushSubscriptionFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurePushSubscriptionFacts.cs,Policies_ReturnsMinClientAndPackageVerifyScopePolicies,The length of the statement  "            var policy1 = subscription.Policies.FirstOrDefault(p => p.Name.Equals(RequireMinProtocolVersionForPushPolicy.PolicyName)); " is 122.
Long Statement,NuGetGallery.Services,TheIsValidPackageOwnerRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,ThrowsArgumentNullIfPendingOwnerIsNull,The length of the statement  "                Assert.Throws<ArgumentNullException>(() => CreateService().GetPackageOwnershipRequest(new PackageRegistration()' null' "token")); " is 129.
Long Statement,NuGetGallery.Services,TheIsValidPackageOwnerRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,ThrowsArgumentNullIfTokenIsNullOrEmpty,The length of the statement  "                Assert.Throws<ArgumentNullException>(() => CreateService().GetPackageOwnershipRequest(new PackageRegistration()' new User()' token)); " is 133.
Long Statement,NuGetGallery.Services,TheAddPackageOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,NullPackageRegistrationThrowsException,The length of the statement  "                await Assert.ThrowsAsync<ArgumentNullException>(async () => await service.AddPackageOwnershipRequest(package: null' requestingOwner: user1' newOwner: user2)); " is 158.
Long Statement,NuGetGallery.Services,TheAddPackageOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,NullRequestingUserThrowsException,The length of the statement  "                await Assert.ThrowsAsync<ArgumentNullException>(async () => await service.AddPackageOwnershipRequest(package: package' requestingOwner: null' newOwner: user2)); " is 160.
Long Statement,NuGetGallery.Services,TheAddPackageOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,NullNewOwnerThrowsException,The length of the statement  "                await Assert.ThrowsAsync<ArgumentNullException>(async () => await service.AddPackageOwnershipRequest(package: package' requestingOwner: user1' newOwner: null)); " is 160.
Long Statement,NuGetGallery.Services,TheAddPackageOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,CreatesPackageOwnerRequest,The length of the statement  "                        It.Is<PackageOwnerRequest>(req => req.PackageRegistrationKey == 1 && req.RequestingOwnerKey == 100 && req.NewOwnerKey == 200)) " is 126.
Long Statement,NuGetGallery.Services,TheDeleteReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,VanillaReservedNamespaceIsDeletedCorrectly,The length of the statement  "                    .Verify(p => p.UpdatePackageVerifiedStatusAsync(It.IsAny<IReadOnlyCollection<PackageRegistration>>()' It.IsAny<bool>())' Times.Never); " is 134.
Long Statement,NuGetGallery.Services,TheDeleteReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,NonexistentNamespaceThrowsException,The length of the statement  "                await Assert.ThrowsAsync<InvalidOperationException>(async () => await service.DeleteReservedNamespaceAsync("Nonexistent.Namespace.")); " is 134.
Long Statement,NuGetGallery.Services,TheDeleteReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,DeletingNamespaceClearsVerifiedFlagOnPackage,The length of the statement  "                var service = new TestableReservedNamespaceService(reservedNamespaces: namespaces' packageRegistrations: registrations); " is 120.
Long Statement,NuGetGallery.Services,TheAddOwnerToReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,InvalidNamespaceThrowsException,The length of the statement  "                await Assert.ThrowsAsync<ArgumentException>(async () => await service.AddOwnerToReservedNamespaceAsync(value' "test1")); " is 120.
Long Statement,NuGetGallery.Services,TheAddOwnerToReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,NonExistentNamespaceThrowsException,The length of the statement  "                await Assert.ThrowsAsync<InvalidOperationException>(async () => await service.AddOwnerToReservedNamespaceAsync("NonExistent.Namespace."' existingUser.Username)); " is 161.
Long Statement,NuGetGallery.Services,TheAddOwnerToReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,AddingInvalidOwnerToNamespaceThrowsException,The length of the statement  "                await Assert.ThrowsAsync<ArgumentException>(async () => await service.AddOwnerToReservedNamespaceAsync(existingNamespace.Value' username)); " is 139.
Long Statement,NuGetGallery.Services,TheAddOwnerToReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,AddingNonExistentUserToNamespaceThrowsException,The length of the statement  "                await Assert.ThrowsAsync<InvalidOperationException>(async () => await service.AddOwnerToReservedNamespaceAsync(existingNamespace.Value' "NonExistentUser")); " is 156.
Long Statement,NuGetGallery.Services,TheAddOwnerToReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,AddingExistingOwnerToTheNamespaceThrowsException,The length of the statement  "                var existingNamespace = testNamespaces.FirstOrDefault(rn => rn.Value.Equals(prefix' StringComparison.OrdinalIgnoreCase)); " is 121.
Long Statement,NuGetGallery.Services,TheAddOwnerToReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,AddingExistingOwnerToTheNamespaceThrowsException,The length of the statement  "                await Assert.ThrowsAsync<InvalidOperationException>(async () => await service.AddOwnerToReservedNamespaceAsync(existingNamespace.Value' owner.Username)); " is 153.
Long Statement,NuGetGallery.Services,TheAddOwnerToReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,AddAnOwnerToNamespaceSuccessfully,The length of the statement  "                var existingNamespace = testNamespaces.FirstOrDefault(rn => rn.Value.Equals(prefix' StringComparison.OrdinalIgnoreCase)); " is 121.
Long Statement,NuGetGallery.Services,TheAddOwnerToReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,WritesAnAuditRecord,The length of the statement  "                var existingNamespace = testNamespaces.FirstOrDefault(rn => rn.Value.Equals(prefix' StringComparison.OrdinalIgnoreCase)); " is 121.
Long Statement,NuGetGallery.Services,TheAddOwnerToReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,AddingOwnerToNamespaceMarksRegistrationsVerified,The length of the statement  "                var existingNamespace = testNamespaces.FirstOrDefault(rn => rn.Value.Equals(prefix' StringComparison.OrdinalIgnoreCase)); " is 121.
Long Statement,NuGetGallery.Services,TheAddOwnerToReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,AddingOwnerToNamespaceMarksRegistrationsVerified,The length of the statement  "                var service = new TestableReservedNamespaceService(reservedNamespaces: testNamespaces' users: testUsers' packageRegistrations: registrations); " is 142.
Long Statement,NuGetGallery.Services,TheAddOwnerToReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,AddingOwnerToAbsoluteNamespaceMarksOnlyAbsoluteRegistrationsVerified,The length of the statement  "                var service = new TestableReservedNamespaceService(reservedNamespaces: testNamespaces' users: testUsers' packageRegistrations: registrations); " is 142.
Long Statement,NuGetGallery.Services,TheAddPackageRegistrationToNamespaceMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,NonExistentNamespaceThrowsException,The length of the statement  "                var service = new TestableReservedNamespaceService(reservedNamespaces: testNamespaces' packageRegistrations: testPackageRegistrations); " is 135.
Long Statement,NuGetGallery.Services,TheAddPackageRegistrationToNamespaceMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,NonExistentNamespaceThrowsException,The length of the statement  "                Assert.Throws<InvalidOperationException>(() => service.AddPackageRegistrationToNamespace("Non.Existent.Namespace."' existingReg)); " is 130.
Long Statement,NuGetGallery.Services,TheAddPackageRegistrationToNamespaceMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,PackageRegistrationIsAddedSuccessfully,The length of the statement  "                var service = new TestableReservedNamespaceService(reservedNamespaces: testNamespaces' packageRegistrations: testPackageRegistrations); " is 135.
Long Statement,NuGetGallery.Services,TheAddPackageRegistrationToNamespaceMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,CommitChangesIsNotExecuted,The length of the statement  "                var service = new TestableReservedNamespaceService(reservedNamespaces: testNamespaces' packageRegistrations: testPackageRegistrations); " is 135.
Long Statement,NuGetGallery.Services,TheRemovePackageRegistrationFromNamespaceMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,NullNamespaceThrowsException,The length of the statement  "                Assert.Throws<ArgumentException>(() => service.RemovePackageRegistrationFromNamespace(value' new PackageRegistration())); " is 121.
Long Statement,NuGetGallery.Services,TheRemovePackageRegistrationFromNamespaceMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,NonExistentNamespaceThrowsException,The length of the statement  "                var service = new TestableReservedNamespaceService(reservedNamespaces: testNamespaces' packageRegistrations: testPackageRegistrations); " is 135.
Long Statement,NuGetGallery.Services,TheRemovePackageRegistrationFromNamespaceMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,NonExistentNamespaceThrowsException,The length of the statement  "                Assert.Throws<InvalidOperationException>(() => service.RemovePackageRegistrationFromNamespace("Non.Existent.Namespace."' existingReg)); " is 135.
Long Statement,NuGetGallery.Services,TheRemovePackageRegistrationFromNamespaceMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,PackageRegistrationIsRemovedFromNamespaceSuccessfully,The length of the statement  "                var service = new TestableReservedNamespaceService(reservedNamespaces: testNamespaces' packageRegistrations: testPackageRegistrations); " is 135.
Long Statement,NuGetGallery.Services,TheRemovePackageRegistrationFromNamespaceMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,CommitChangesIsNotExecuted,The length of the statement  "                var service = new TestableReservedNamespaceService(reservedNamespaces: testNamespaces' packageRegistrations: testPackageRegistrations); " is 135.
Long Statement,NuGetGallery.Services,TheDeleteOwnerFromReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,NullNamespaceThrowsException,The length of the statement  "                await Assert.ThrowsAsync<ArgumentException>(async () => await service.DeleteOwnerFromReservedNamespaceAsync(value' "test1")); " is 125.
Long Statement,NuGetGallery.Services,TheDeleteOwnerFromReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,NonExistentNamespaceThrowsException,The length of the statement  "                await Assert.ThrowsAsync<InvalidOperationException>(async () => await service.DeleteOwnerFromReservedNamespaceAsync("Non.Existent.Namespace."' existingUser.Username)); " is 167.
Long Statement,NuGetGallery.Services,TheDeleteOwnerFromReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,DeletingInvalidOwnerFromNamespaceThrowsException,The length of the statement  "                await Assert.ThrowsAsync<ArgumentException>(async () => await service.DeleteOwnerFromReservedNamespaceAsync(existingNamespace.Value' username)); " is 144.
Long Statement,NuGetGallery.Services,TheDeleteOwnerFromReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,DeletingNonExistentUserFromNamespaceThrowsException,The length of the statement  "                await Assert.ThrowsAsync<InvalidOperationException>(async () => await service.DeleteOwnerFromReservedNamespaceAsync(existingNamespace.Value' "NonExistentUser")); " is 161.
Long Statement,NuGetGallery.Services,TheDeleteOwnerFromReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,DeletingNonOwnerFromNamespaceThrowsException,The length of the statement  "                var existingNamespace = testNamespaces.FirstOrDefault(rn => rn.Value.Equals(prefix' StringComparison.OrdinalIgnoreCase)); " is 121.
Long Statement,NuGetGallery.Services,TheDeleteOwnerFromReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,DeletingNonOwnerFromNamespaceThrowsException,The length of the statement  "                await Assert.ThrowsAsync<InvalidOperationException>(async () => await service.DeleteOwnerFromReservedNamespaceAsync(prefix' user2.Username)); " is 141.
Long Statement,NuGetGallery.Services,TheDeleteOwnerFromReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,DeleteOwnerFromNamespaceSuccessfully,The length of the statement  "                var existingNamespace = testNamespaces.FirstOrDefault(rn => rn.Value.Equals(prefix' StringComparison.OrdinalIgnoreCase)); " is 121.
Long Statement,NuGetGallery.Services,TheDeleteOwnerFromReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,WritesAnAuditRecord,The length of the statement  "                var existingNamespace = testNamespaces.FirstOrDefault(rn => rn.Value.Equals(prefix' StringComparison.OrdinalIgnoreCase)); " is 121.
Long Statement,NuGetGallery.Services,TheDeleteOwnerFromReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,DeletingOwnerFromNamespaceMarksRegistrationsUnverified,The length of the statement  "                var existingNamespace = testNamespaces.FirstOrDefault(rn => rn.Value.Equals(prefix' StringComparison.OrdinalIgnoreCase)); " is 121.
Long Statement,NuGetGallery.Services,TheDeleteOwnerFromReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,DeletingOwnerFromNamespaceMarksRegistrationsUnverified,The length of the statement  "                var service = new TestableReservedNamespaceService(reservedNamespaces: testNamespaces' users: testUsers' packageRegistrations: registrations); " is 142.
Long Statement,NuGetGallery.Services,TheDeleteOwnerFromReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,DeletingOwnerFromMultipleOwnedNamespaceDoesNotMarkPackagesUnVerfied,The length of the statement  "                var existingNamespace = testNamespaces.FirstOrDefault(rn => rn.Value.Equals(prefix' StringComparison.OrdinalIgnoreCase)); " is 121.
Long Statement,NuGetGallery.Services,TheDeleteOwnerFromReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,DeletingOwnerFromMultipleOwnedNamespaceDoesNotMarkPackagesUnVerfied,The length of the statement  "                var service = new TestableReservedNamespaceService(reservedNamespaces: testNamespaces' users: testUsers' packageRegistrations: registrations); " is 142.
Long Statement,NuGetGallery.Services,TheIsPushAllowedMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,NonOwnedNamespacesRejectPush,The length of the statement  "                var existingNamespace = testNamespaces.FirstOrDefault(rn => rn.Value.Equals(prefix' StringComparison.OrdinalIgnoreCase)); " is 121.
Long Statement,NuGetGallery.Services,TheIsPushAllowedMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,SharedNamespacesAllowsPush,The length of the statement  "                var existingNamespace = testNamespaces.FirstOrDefault(rn => rn.Value.Equals(prefix' StringComparison.OrdinalIgnoreCase)); " is 121.
Long Statement,NuGetGallery.Services,TheIsPushAllowedMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,OwnedSharedNamespacesAllowsPushAndReturnsDataCorrectly,The length of the statement  "                var existingNamespace = testNamespaces.FirstOrDefault(rn => rn.Value.Equals(prefix' StringComparison.OrdinalIgnoreCase)); " is 121.
Long Statement,NuGetGallery.Services,TheIsPushAllowedMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,OwnedSharedNamespacesAllowsPushAndReturnsDataCorrectly,The length of the statement  "                var isPushAllowed = service.IsPushAllowed(id' firstUser' out IReadOnlyCollection<ReservedNamespace> matchingNamespaces); " is 120.
Long Statement,NuGetGallery.Services,TheIsPushAllowedMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,NonMatchingNamespacesAllowsPush,The length of the statement  "                var existingNamespace = testNamespaces.FirstOrDefault(rn => rn.Value.Equals(prefix' StringComparison.OrdinalIgnoreCase)); " is 121.
Long Statement,NuGetGallery.Services,TheIsPushAllowedMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,NonPrefixNamespaceDoesNotBlockPush,The length of the statement  "                var existingNamespace = testNamespaces.FirstOrDefault(rn => rn.Value.Equals(prefix' StringComparison.OrdinalIgnoreCase)); " is 121.
Long Statement,NuGetGallery.Services,TheIsPushAllowedMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,OwnedNamespacesAllowsPush,The length of the statement  "                var existingNamespace = testNamespaces.FirstOrDefault(rn => rn.Value.Equals(prefix' StringComparison.OrdinalIgnoreCase)); " is 121.
Long Statement,NuGetGallery.Services,TheIsPushAllowedMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,OwnedNamespacesAllowsPush,The length of the statement  "                var isPushAllowed = service.IsPushAllowed(id' firstUser' out IReadOnlyCollection<ReservedNamespace> matchingNamespaces); " is 120.
Long Statement,NuGetGallery.Services,TheIsPushAllowedMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,MultipleOwnedNamespacesAreReturnedCorrectly,The length of the statement  "                var isPushAllowed = service.IsPushAllowed(id' firstUser' out IReadOnlyCollection<ReservedNamespace> matchingNamespaces); " is 120.
Long Statement,NuGetGallery.Services,TheConstructor,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenANullDiagnosticsService_ItShouldThrow,The length of the statement  "                ContractAssert.ThrowsArgNull(() => new ContentService(new Mock<IFileStorageService>().Object' null)' "diagnosticsService"); " is 123.
Long Statement,NuGetGallery.Services,TheGetContentItemMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenANullOrEmptyName_ItShouldThrow,The length of the statement  "                ContractAssert.ThrowsArgNullOrEmpty(s => new TestableContentService().GetContentItemAsync(s' TimeSpan.Zero).Wait()' "name"); " is 124.
Long Statement,NuGetGallery.Services,TheGetContentItemMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndAnEmptyCache_ItShouldPutTheContentInTheCache,The length of the statement  "                Assert.True(EqualWithDrift(TimeSpan.FromSeconds(42)' (cached.ExpiryUtc - cached.RetrievedUtc)' TimeSpan.FromSeconds(2))); " is 121.
Long Statement,NuGetGallery.Services,TheGetContentItemMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndACachedValueThatHasExpiredButNotChanged_ItShouldUseTheCachedValue,The length of the statement  "                Assert.True(EqualWithDrift(TimeSpan.FromHours(12)' (updatedCache.ExpiryUtc - DateTime.UtcNow)' TimeSpan.FromSeconds(2))); " is 121.
Long Statement,NuGetGallery.Services,TheGetContentItemMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemAndACachedValueThatHasExpiredAndChanged_ItShouldUseTheFileContent,The length of the statement  "                Assert.True(EqualWithDrift(TimeSpan.FromHours(12)' (updatedCache.ExpiryUtc - updatedCache.RetrievedUtc)' TimeSpan.FromSeconds(2))); " is 131.
Long Statement,NuGetGallery.Services,TheGetContentItemWithExtensionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenANullOrEmptyName_ItShouldThrow,The length of the statement  "                ContractAssert.ThrowsArgNullOrEmpty(s => new TestableContentService().GetContentItemAsync(s' ".md"' TimeSpan.Zero).Wait()' "name"); " is 131.
Long Statement,NuGetGallery.Services,TheGetContentItemWithExtensionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenANullOrEmptyExtension_ItShouldThrow,The length of the statement  "                ContractAssert.ThrowsArgNullOrEmpty(s => new TestableContentService().GetContentItemAsync("test"' null' TimeSpan.Zero).Wait()' "extension"); " is 140.
Long Statement,NuGetGallery.Services,TheGetContentItemWithExtensionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndAnEmptyCache_ItShouldPutTheContentInTheCache,The length of the statement  "                Assert.True(EqualWithDrift(TimeSpan.FromSeconds(42)' (cached.ExpiryUtc - cached.RetrievedUtc)' TimeSpan.FromSeconds(2))); " is 121.
Long Statement,NuGetGallery.Services,TheGetContentItemWithExtensionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndACachedValueThatHasExpiredButNotChanged_ItShouldUseTheCachedValue,The length of the statement  "                Assert.True(EqualWithDrift(TimeSpan.FromHours(12)' (updatedCache.ExpiryUtc - DateTime.UtcNow)' TimeSpan.FromSeconds(2))); " is 121.
Long Statement,NuGetGallery.Services,TheGetContentItemWithExtensionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemAndACachedValueThatHasExpiredAndChanged_ItShouldUseTheFileContent,The length of the statement  "                Assert.True(EqualWithDrift(TimeSpan.FromHours(12)' (updatedCache.ExpiryUtc - updatedCache.RetrievedUtc)' TimeSpan.FromSeconds(2))); " is 131.
Long Statement,NuGetGallery.Services,TestableContentService,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,SetFile,The length of the statement  "                    .Setup(fs => fs.GetFileReferenceAsync(CoreConstants.ContentFolderName' It.Is<string>(s => !s.Equals(filename))' It.IsAny<string>())) " is 132.
Long Statement,NuGetGallery.OData.Serializers,V1FeedPackageAnnotationStrategyFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Serializers\V1FeedPackageAnnotationStrategyFacts.cs,SetsAtomEntryMetadataAnnotation,The length of the statement  "            Assert.Equal(expectedAtomEntryMetadataAnnotation.Authors.Single().Name' actualAtomEntryMetadataAnnotation.Authors.Single().Name); " is 129.
Long Statement,NuGetGallery.OData.Serializers,V2FeedPackageAnnotationStrategyFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Serializers\V2FeedPackageAnnotationStrategyFacts.cs,SetsAtomEntryMetadataAnnotation,The length of the statement  "            Assert.Equal(expectedAtomEntryMetadataAnnotation.Authors.Single().Name' actualAtomEntryMetadataAnnotation.Authors.Single().Name); " is 129.
Long Statement,NuGetGallery.SearchClient,CorrelatingHttpClientHandlerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\SearchClient\CorrelatingHttpClientHandlerFacts.cs,AddsCorrelationIdToRequestWhenAvailable,The length of the statement  "            Assert.Equal(correlationId.ToString()' request.Headers.GetValues(WebApiCorrelationHandler.CorrelationIdHttpHeaderName).FirstOrDefault()); " is 137.
Long Statement,NuGetGallery.PackageCurators,TheCurateMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\PackageCurators\Windows8PackageCuratorFacts.cs,WillNotIncludeThePackageWhenTheWindows8CuratedFeedDoesNotExist,The length of the statement  "                stubCuratedFeedService.Setup(stub => stub.GetFeedByName(It.IsAny<string>()' It.IsAny<bool>())).Returns((CuratedFeed)null); " is 122.
Long Statement,NuGetGallery.PackageCurators,TheCurateMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\PackageCurators\Windows8PackageCuratorFacts.cs,WillNotIncludeThePackageWhenItDependsOnAPackageThatIsExcludedInTheFeed,The length of the statement  "            curator.StubCuratedFeed.Packages.Add(new CuratedPackage { AutomaticallyCurated = false' Included = false' PackageRegistration = new PackageRegistration { Id = "ManuallyExcludedPackage" } }); " is 190.
Long Statement,NuGetGallery.PackageCurators,TheCurateMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\PackageCurators\Windows8PackageCuratorFacts.cs,WillNotIncludeThePackageWhenTheWebMatrixCuratedFeedDoesNotExist,The length of the statement  "                    stubCuratedFeedService.Setup(stub => stub.GetFeedByName(It.IsAny<string>()' It.IsAny<bool>())).Returns((CuratedFeed)null); " is 122.
Long Statement,NuGetGallery.PackageCurators,TheCurateMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\PackageCurators\Windows8PackageCuratorFacts.cs,CreateStubNuGetPackage,The length of the statement  "                return TestPackage.CreateTestPackageStream("test"' "1.0.0"' minClientVersion: minClientVersion' populatePackage: populatePackage); " is 130.
Long Statement,NuGetGallery.ViewModels,TheConstructor,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DependencySetsViewModelFacts.cs,GivenAListOfDependenciesItShouldGroupByTargetFrameworkName,The length of the statement  "                    new PackageDependency { TargetFramework = "portable-net40+sl40+win8+wp71"' Id = "Microsoft.Net.Http"' VersionSpec = "[2.1'3.0)" }' " is 130.
Long Statement,NuGetGallery.ViewModels,TheConstructor,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DependencySetsViewModelFacts.cs,GivenAListOfDependenciesItShouldGroupByTargetFrameworkName,The length of the statement  "                var actual = vm.DependencySets["Portable Class Library (.NETFramework 4.0' Silverlight 4.0' Windows 8.0' WindowsPhone 7.1)"].ToArray(); " is 135.
Long Statement,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,TheCtorSortsPackageVersionsProperly,The length of the statement  "            var packageVersions = new DisplayPackageViewModel(package' package.PackageRegistration.Packages.OrderByDescending(p => new NuGetVersion(p.Version))) " is 148.
Long Statement,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,AvgDownloadsPerDayConsidersOldestPackageVersionInHistory,The length of the statement  "                    new Package { Version = "1.0.1"' PackageRegistration = packageRegistration' DownloadCount = 100' Created = utcNow.AddDays(-daysSinceFirstPackageCreated) }' " is 155.
Long Statement,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,AvgDownloadsPerDayConsidersOldestPackageVersionInHistory,The length of the statement  "                    new Package { Version = "2.0.1"' PackageRegistration = packageRegistration' DownloadCount = 140' Created = utcNow.AddDays(-3) } " is 127.
Long Statement,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,DownloadsPerDayLabelShowsLessThanOneWhenAverageBelowOne,The length of the statement  "            var viewModel = new DisplayPackageViewModel(package' package.PackageRegistration.Packages.OrderByDescending(p => new NuGetVersion(p.Version))); " is 143.
Long Statement,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,DownloadsPerDayLabelShowsOneWhenAverageBetweenOneAndOnePointFive,The length of the statement  "            var viewModel = new DisplayPackageViewModel(package' package.PackageRegistration.Packages.OrderByDescending(p => new NuGetVersion(p.Version))); " is 143.
Long Statement,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,HasNewerPrereleaseReturnsTrueWhenNewerPrereleaseAvailable,The length of the statement  "            var viewModel = new DisplayPackageViewModel(package' package.PackageRegistration.Packages.OrderByDescending(p => new NuGetVersion(p.Version))); " is 143.
Long Statement,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,HasNewerPrereleaseDoesNotConsiderUnlistedVersions,The length of the statement  "            var viewModel = new DisplayPackageViewModel(package' package.PackageRegistration.Packages.OrderByDescending(p => new NuGetVersion(p.Version))); " is 143.
Long Statement,NuGetGallery.ViewModels,ListPackageItemViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\ListPackageItemViewModelFacts.cs,LongDescriptionsTruncated,The length of the statement  "            var description = @"A Longer description full of nonsense that will get truncated. Lorem ipsum dolor sit amet' ad nemore gubergren eam. Ea quaeque labores deseruisse his' eos munere convenire at' in eos audire persius corpora. Te his volumus detracto offendit' has ne illud choro. No illum quaestio mel' novum democritum te sea' et nam nisl officiis salutandi. Vis ut harum docendi incorrupte' nam affert putent sententiae id' mei cibo omnium id. Ea est falli graeci voluptatibus' est mollis denique ne. " is 503.
Long Statement,NuGetGallery.ViewModels,ListPackageItemViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\ListPackageItemViewModelFacts.cs,LongDescriptionsTruncated,The length of the statement  "An nec tempor cetero vituperata.Ius cu dicunt regione interpretaris' posse veniam facilisis ad vim' sit ei sale integre. Mel cu aliquid impedit scribentur.Nostro recusabo sea ei' nec habeo instructior no' saepe altera adversarium vel cu.Nonumes molestiae sit at' per enim necessitatibus cu. " is 290.
Long Statement,NuGetGallery.ViewModels,ListPackageItemViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\ListPackageItemViewModelFacts.cs,LongDescriptionsTruncated,The length of the statement  "At mei iriure dignissim theophrastus.Meis nostrud te sit' equidem maiorum pri ex.Vim dolorem fuisset an. At sit veri illum oratio' et per dicat contentiones. In eam tale tation' mei dicta labitur corpora ei' homero equidem suscipit ut eam."; " is 241.
Long Statement,NuGetGallery.ViewModels,ListPackageItemViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\ListPackageItemViewModelFacts.cs,LongDescriptionsTruncated,The length of the statement  "            Assert.True(description.Contains(listPackageItemViewModel.ShortDescription.Substring(0' listPackageItemViewModel.ShortDescription.Length - 1 - omission.Length))); " is 162.
Long Statement,NuGetGallery.ViewModels,ListPackageItemViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\ListPackageItemViewModelFacts.cs,LongDescriptionsSingleWordTruncatedToLimit,The length of the statement  "            var description = @"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz"; " is 542.
Long Statement,NuGetGallery.Views,UrlHelperFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Views\UrlHelperFacts.cs,AssertNoViolationsOfUnsupportedTermInRazorFiles,The length of the statement  "                    $"Avoid usage of '{unsupportedTerm}' in .cshtml files! Consider using a method from 'UrlExtensions.cs' to ensure usage of configured 'SiteRoot' setting."); " is 155.
Complex Conditional,NuGetGallery.Services,FactsBase,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\JsonStatisticsServiceFacts.cs,Mock,The conditional expression  "!packagesLastUpdateTimeUtc.HasValue && !packageVersionsLastUpdateTimeUtc.HasValue &&                      !communityPackagesLastUpdateTimeUtc.HasValue && !communityPackageVersionsLastUpdateTimeUtc.HasValue"  is complex.
Magic Number,NuGetGallery,StorageDependentFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\App_Start\StorageDependentFacts.cs,StorageDependentsHaveExpectedTypes,The following statement contains a magic number: Assert.Equal(4' implementationToInterface.Count);
Magic Number,NuGetGallery,AutocompleteServicePackageIdsQueryFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\AutocompleteServicePackageIdsQueryFacts.cs,ExecuteReturns30ResultsForEmptyQuery,The following statement contains a magic number: Assert.True(result.Count() == 30);
Magic Number,NuGetGallery,AutocompleteServicePackageIdsQueryFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\AutocompleteServicePackageIdsQueryFacts.cs,ExecuteReturns30ResultsForNullQuery,The following statement contains a magic number: Assert.True(result.Count() == 30);
Magic Number,NuGetGallery,TheCreatePackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,CreatePackageWillReturn400IfFileIsNotANuGetPackage,The following statement contains a magic number: byte[] data = new byte[100];
Magic Number,NuGetGallery,TheCreatePackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,WillReturnConflictIfAPackageWithTheIdMatchesNonOwnedNamespace,The following statement contains a magic number: var user2 = new User { Key = 2' Username = "random2" };
Magic Number,NuGetGallery,TheCreatePackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,WillCreatePackageIfIdMatchesSharedNamespace,The following statement contains a magic number: var user2 = new User { Key = 2' Username = "random2" };
Magic Number,NuGetGallery,TheDeletePackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,WillThrowIfAPackageWithTheIdAndNuGetVersionDoesNotExist,The following statement contains a magic number: Assert.Equal(404' statusCodeResult.StatusCode);
Magic Number,NuGetGallery,TheGetPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,GetPackageReturns400ForEvilPackageName,The following statement contains a magic number: Assert.Equal(400' badRequestResult.StatusCode);
Magic Number,NuGetGallery,TheGetPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,GetPackageReturns400ForEvilPackageVersion,The following statement contains a magic number: Assert.Equal(400' badRequestResult2.StatusCode);
Magic Number,NuGetGallery,TheCreatePackageVerificationKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,WhenApiKeyHasOwnerScope_TempKeyHasSameOwner,The following statement contains a magic number: Assert.Equal(1234' tempScope.OwnerKey);
Magic Number,NuGetGallery,TheVerifyPackageKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyPackageKeyAsync_Returns404IfPackageDoesNotExist_ApiKeyV2,The following statement contains a magic number: controller.MockTelemetryService.Verify(x => x.TrackVerifyPackageKeyEvent("foo"' "1.0.0"'                      It.IsAny<User>()' controller.OwinContext.Request.User.Identity' 404)' Times.Once);
Magic Number,NuGetGallery,TheVerifyPackageKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyPackageKeyAsync_Returns404IfPackageDoesNotExist_ApiKeyVerifyV1,The following statement contains a magic number: controller.MockTelemetryService.Verify(x => x.TrackVerifyPackageKeyEvent("foo"' "1.0.0"'                      It.IsAny<User>()' controller.OwinContext.Request.User.Identity' 404)' Times.Once);
Magic Number,NuGetGallery,TheVerifyPackageKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyPackageKeyAsync_Returns403IfUserIsNotAnOwner_ApiKeyV2,The following statement contains a magic number: controller.MockTelemetryService.Verify(x => x.TrackVerifyPackageKeyEvent("foo"' "1.0.0"'                      It.IsAny<User>()' controller.OwinContext.Request.User.Identity' 403)' Times.Once);
Magic Number,NuGetGallery,TheVerifyPackageKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyPackageKeyAsync_Returns403IfUserIsNotAnOwner_ApiKeyVerifyV1,The following statement contains a magic number: controller.MockTelemetryService.Verify(x => x.TrackVerifyPackageKeyEvent("foo"' "1.0.0"'                      It.IsAny<User>()' controller.OwinContext.Request.User.Identity' 403)' Times.Once);
Magic Number,NuGetGallery,TheVerifyPackageKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyPackageKeyAsync_Returns403IfScopeDoesNotMatch_ApiKeyV2,The following statement contains a magic number: controller.MockTelemetryService.Verify(x => x.TrackVerifyPackageKeyEvent("foo"' "1.0.0"'                      It.IsAny<User>()' controller.OwinContext.Request.User.Identity' 403)' Times.Once);
Magic Number,NuGetGallery,TheVerifyPackageKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyPackageKeyAsync_Returns403IfScopeDoesNotMatch_ApiKeyVerifyV1,The following statement contains a magic number: controller.MockTelemetryService.Verify(x => x.TrackVerifyPackageKeyEvent("foo"' "1.0.0"'                      It.IsAny<User>()' controller.OwinContext.Request.User.Identity' 403)' Times.Once);
Magic Number,NuGetGallery,TheVerifyPackageKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyPackageKeyAsync_Returns200IfApiKeyWithPushCapability_ApiKeyV2,The following statement contains a magic number: controller.MockTelemetryService.Verify(x => x.TrackVerifyPackageKeyEvent("foo"' "1.0.0"'                      It.IsAny<User>()' controller.OwinContext.Request.User.Identity' 200)' Times.Once);
Magic Number,NuGetGallery,TheVerifyPackageKeyAsyncAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyPackageKeyAsync_Returns200IfPackageVerifyKey_ApiKeyVerifyV1,The following statement contains a magic number: controller.MockTelemetryService.Verify(x => x.TrackVerifyPackageKeyEvent("foo"' "1.0.0"'                      It.IsAny<User>()' controller.OwinContext.Request.User.Identity' 200)' Times.Once);
Magic Number,NuGetGallery,TheGetStatsDownloadsAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyRecentPopularityStatsDownloads,The following statement contains a magic number: JArray report = new JArray                  {                      new JObject                      {                          { "PackageId"' "A" }'                          { "PackageVersion"' "1.0" }'                          { "Downloads"' 3 }                      }'                      new JObject                      {                          { "PackageId"' "A" }'                          { "PackageVersion"' "1.1" }'                          { "Downloads"' 4 }                      }'                      new JObject                      {                          { "PackageId"' "B" }'                          { "PackageVersion"' "1.0" }'                          { "Downloads"' 5 }                      }'                      new JObject                      {                          { "PackageId"' "B" }'                          { "PackageVersion"' "1.1" }'                          { "Downloads"' 6 }                      }'                  };
Magic Number,NuGetGallery,TheGetStatsDownloadsAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyRecentPopularityStatsDownloads,The following statement contains a magic number: JArray report = new JArray                  {                      new JObject                      {                          { "PackageId"' "A" }'                          { "PackageVersion"' "1.0" }'                          { "Downloads"' 3 }                      }'                      new JObject                      {                          { "PackageId"' "A" }'                          { "PackageVersion"' "1.1" }'                          { "Downloads"' 4 }                      }'                      new JObject                      {                          { "PackageId"' "B" }'                          { "PackageVersion"' "1.0" }'                          { "Downloads"' 5 }                      }'                      new JObject                      {                          { "PackageId"' "B" }'                          { "PackageVersion"' "1.1" }'                          { "Downloads"' 6 }                      }'                  };
Magic Number,NuGetGallery,TheGetStatsDownloadsAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyRecentPopularityStatsDownloads,The following statement contains a magic number: JArray report = new JArray                  {                      new JObject                      {                          { "PackageId"' "A" }'                          { "PackageVersion"' "1.0" }'                          { "Downloads"' 3 }                      }'                      new JObject                      {                          { "PackageId"' "A" }'                          { "PackageVersion"' "1.1" }'                          { "Downloads"' 4 }                      }'                      new JObject                      {                          { "PackageId"' "B" }'                          { "PackageVersion"' "1.0" }'                          { "Downloads"' 5 }                      }'                      new JObject                      {                          { "PackageId"' "B" }'                          { "PackageVersion"' "1.1" }'                          { "Downloads"' 6 }                      }'                  };
Magic Number,NuGetGallery,TheGetStatsDownloadsAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyRecentPopularityStatsDownloads,The following statement contains a magic number: JArray report = new JArray                  {                      new JObject                      {                          { "PackageId"' "A" }'                          { "PackageVersion"' "1.0" }'                          { "Downloads"' 3 }                      }'                      new JObject                      {                          { "PackageId"' "A" }'                          { "PackageVersion"' "1.1" }'                          { "Downloads"' 4 }                      }'                      new JObject                      {                          { "PackageId"' "B" }'                          { "PackageVersion"' "1.0" }'                          { "Downloads"' 5 }                      }'                      new JObject                      {                          { "PackageId"' "B" }'                          { "PackageVersion"' "1.1" }'                          { "Downloads"' 6 }                      }'                  };
Magic Number,NuGetGallery,TheGetStatsDownloadsAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyRecentPopularityStatsDownloads,The following statement contains a magic number: Assert.True((string)result[3]["Gallery"] == "/packages/B/1.1"' "unexpected content result[3].Gallery");
Magic Number,NuGetGallery,TheGetStatsDownloadsAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyRecentPopularityStatsDownloads,The following statement contains a magic number: Assert.True((int)result[2]["Downloads"] == 5' "unexpected content result[2].Downloads");
Magic Number,NuGetGallery,TheGetStatsDownloadsAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyRecentPopularityStatsDownloads,The following statement contains a magic number: Assert.True((int)result[2]["Downloads"] == 5' "unexpected content result[2].Downloads");
Magic Number,NuGetGallery,TheGetStatsDownloadsAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyRecentPopularityStatsDownloadsCount,The following statement contains a magic number: JArray report = new JArray                  {                      new JObject { { "PackageId"' "A" }' { "PackageVersion"' "1.0" }' { "Downloads"' 3 } }'                      new JObject { { "PackageId"' "A" }' { "PackageVersion"' "1.1" }' { "Downloads"' 4 } }'                      new JObject { { "PackageId"' "B" }' { "PackageVersion"' "1.0" }' { "Downloads"' 5 } }'                      new JObject { { "PackageId"' "B" }' { "PackageVersion"' "1.1" }' { "Downloads"' 6 } }'                      new JObject { { "PackageId"' "C" }' { "PackageVersion"' "1.0" }' { "Downloads"' 7 } }'                      new JObject { { "PackageId"' "C" }' { "PackageVersion"' "1.1" }' { "Downloads"' 8 } }'                  };
Magic Number,NuGetGallery,TheGetStatsDownloadsAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyRecentPopularityStatsDownloadsCount,The following statement contains a magic number: JArray report = new JArray                  {                      new JObject { { "PackageId"' "A" }' { "PackageVersion"' "1.0" }' { "Downloads"' 3 } }'                      new JObject { { "PackageId"' "A" }' { "PackageVersion"' "1.1" }' { "Downloads"' 4 } }'                      new JObject { { "PackageId"' "B" }' { "PackageVersion"' "1.0" }' { "Downloads"' 5 } }'                      new JObject { { "PackageId"' "B" }' { "PackageVersion"' "1.1" }' { "Downloads"' 6 } }'                      new JObject { { "PackageId"' "C" }' { "PackageVersion"' "1.0" }' { "Downloads"' 7 } }'                      new JObject { { "PackageId"' "C" }' { "PackageVersion"' "1.1" }' { "Downloads"' 8 } }'                  };
Magic Number,NuGetGallery,TheGetStatsDownloadsAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyRecentPopularityStatsDownloadsCount,The following statement contains a magic number: JArray report = new JArray                  {                      new JObject { { "PackageId"' "A" }' { "PackageVersion"' "1.0" }' { "Downloads"' 3 } }'                      new JObject { { "PackageId"' "A" }' { "PackageVersion"' "1.1" }' { "Downloads"' 4 } }'                      new JObject { { "PackageId"' "B" }' { "PackageVersion"' "1.0" }' { "Downloads"' 5 } }'                      new JObject { { "PackageId"' "B" }' { "PackageVersion"' "1.1" }' { "Downloads"' 6 } }'                      new JObject { { "PackageId"' "C" }' { "PackageVersion"' "1.0" }' { "Downloads"' 7 } }'                      new JObject { { "PackageId"' "C" }' { "PackageVersion"' "1.1" }' { "Downloads"' 8 } }'                  };
Magic Number,NuGetGallery,TheGetStatsDownloadsAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyRecentPopularityStatsDownloadsCount,The following statement contains a magic number: JArray report = new JArray                  {                      new JObject { { "PackageId"' "A" }' { "PackageVersion"' "1.0" }' { "Downloads"' 3 } }'                      new JObject { { "PackageId"' "A" }' { "PackageVersion"' "1.1" }' { "Downloads"' 4 } }'                      new JObject { { "PackageId"' "B" }' { "PackageVersion"' "1.0" }' { "Downloads"' 5 } }'                      new JObject { { "PackageId"' "B" }' { "PackageVersion"' "1.1" }' { "Downloads"' 6 } }'                      new JObject { { "PackageId"' "C" }' { "PackageVersion"' "1.0" }' { "Downloads"' 7 } }'                      new JObject { { "PackageId"' "C" }' { "PackageVersion"' "1.1" }' { "Downloads"' 8 } }'                  };
Magic Number,NuGetGallery,TheGetStatsDownloadsAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyRecentPopularityStatsDownloadsCount,The following statement contains a magic number: JArray report = new JArray                  {                      new JObject { { "PackageId"' "A" }' { "PackageVersion"' "1.0" }' { "Downloads"' 3 } }'                      new JObject { { "PackageId"' "A" }' { "PackageVersion"' "1.1" }' { "Downloads"' 4 } }'                      new JObject { { "PackageId"' "B" }' { "PackageVersion"' "1.0" }' { "Downloads"' 5 } }'                      new JObject { { "PackageId"' "B" }' { "PackageVersion"' "1.1" }' { "Downloads"' 6 } }'                      new JObject { { "PackageId"' "C" }' { "PackageVersion"' "1.0" }' { "Downloads"' 7 } }'                      new JObject { { "PackageId"' "C" }' { "PackageVersion"' "1.1" }' { "Downloads"' 8 } }'                  };
Magic Number,NuGetGallery,TheGetStatsDownloadsAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyRecentPopularityStatsDownloadsCount,The following statement contains a magic number: JArray report = new JArray                  {                      new JObject { { "PackageId"' "A" }' { "PackageVersion"' "1.0" }' { "Downloads"' 3 } }'                      new JObject { { "PackageId"' "A" }' { "PackageVersion"' "1.1" }' { "Downloads"' 4 } }'                      new JObject { { "PackageId"' "B" }' { "PackageVersion"' "1.0" }' { "Downloads"' 5 } }'                      new JObject { { "PackageId"' "B" }' { "PackageVersion"' "1.1" }' { "Downloads"' 6 } }'                      new JObject { { "PackageId"' "C" }' { "PackageVersion"' "1.0" }' { "Downloads"' 7 } }'                      new JObject { { "PackageId"' "C" }' { "PackageVersion"' "1.1" }' { "Downloads"' 8 } }'                  };
Magic Number,NuGetGallery,TheGetStatsDownloadsAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyRecentPopularityStatsDownloadsCount,The following statement contains a magic number: ActionResult actionResult = await controller.GetStatsDownloads(3);
Magic Number,NuGetGallery,TheGetStatsDownloadsAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\ApiControllerFacts.cs,VerifyRecentPopularityStatsDownloadsCount,The following statement contains a magic number: Assert.True(result.Count == 3' "unexpected content");
Magic Number,NuGetGallery,TheGetCuratedFeedAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\CuratedFeedsControllerFacts.cs,WillReturn403IfTheCurrentUsersIsNotAManagerOfTheCuratedFeed,The following statement contains a magic number: Assert.Equal(403' result.StatusCode);
Magic Number,NuGetGallery,TheGetCuratedFeedAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\CuratedFeedsControllerFacts.cs,WillPassTheIncludedPackagesToTheView,The following statement contains a magic number: Assert.Equal(2' viewModel.IncludedPackages.Count());
Magic Number,NuGetGallery,TheListPackagesAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\CuratedFeedsControllerFacts.cs,WillSearchForAPackage,The following statement contains a magic number: var redPill = new PackageRegistration                  {                      Id = "RedPill"'                      Key = 2'                      DownloadCount = 0'                      Packages = new[]                      {                          new Package                          {                              Version = "1.0.0"'                              Key = 89932'                          }                      }'                      Owners = new[]                      {                          new User                          {                              Key = 66'                              Username = "Morpheus"'                          }                      }                  };
Magic Number,NuGetGallery,TheListPackagesAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\CuratedFeedsControllerFacts.cs,WillSearchForAPackage,The following statement contains a magic number: var redPill = new PackageRegistration                  {                      Id = "RedPill"'                      Key = 2'                      DownloadCount = 0'                      Packages = new[]                      {                          new Package                          {                              Version = "1.0.0"'                              Key = 89932'                          }                      }'                      Owners = new[]                      {                          new User                          {                              Key = 66'                              Username = "Morpheus"'                          }                      }                  };
Magic Number,NuGetGallery,TheListPackagesAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\CuratedFeedsControllerFacts.cs,WillSearchForAPackage,The following statement contains a magic number: var redPill = new PackageRegistration                  {                      Id = "RedPill"'                      Key = 2'                      DownloadCount = 0'                      Packages = new[]                      {                          new Package                          {                              Version = "1.0.0"'                              Key = 89932'                          }                      }'                      Owners = new[]                      {                          new User                          {                              Key = 66'                              Username = "Morpheus"'                          }                      }                  };
Magic Number,NuGetGallery,TheListPackagesAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\CuratedFeedsControllerFacts.cs,WillSearchForAPackage,The following statement contains a magic number: controller.StubCuratedFeedService                      .Setup(stub => stub.GetKey("TheMatrix"))                      .Returns(2);
Magic Number,NuGetGallery,TheDeleteCuratedPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\CuratedPackagesControllerFacts.cs,WillReturn403IfTheUserNotAManager,The following statement contains a magic number: Assert.Equal(403' result.StatusCode);
Magic Number,NuGetGallery,TheDeleteCuratedPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\CuratedPackagesControllerFacts.cs,WillReturn204AfterDeletingTheCuratedPackage,The following statement contains a magic number: Assert.Equal(204' result.StatusCode);
Magic Number,NuGetGallery,TheGetCreateCuratedPackageFormAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\CuratedPackagesControllerFacts.cs,WillReturn403IfTheCurrentUsersIsNotAManagerOfTheCuratedFeed,The following statement contains a magic number: Assert.Equal(403' result.StatusCode);
Magic Number,NuGetGallery,ThePatchCuratedPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\CuratedPackagesControllerFacts.cs,WillReturn403IfNotAFeedManager,The following statement contains a magic number: Assert.Equal(403' result.StatusCode);
Magic Number,NuGetGallery,ThePatchCuratedPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\CuratedPackagesControllerFacts.cs,WillReturn400IfTheModelStateIsInvalid,The following statement contains a magic number: Assert.Equal(400' result.StatusCode);
Magic Number,NuGetGallery,ThePatchCuratedPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\CuratedPackagesControllerFacts.cs,WillReturn204AfterModifyingTheCuratedPackage,The following statement contains a magic number: Assert.Equal(204' result.StatusCode);
Magic Number,NuGetGallery,ThePostCuratedPackagesAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\CuratedPackagesControllerFacts.cs,WillReturn403IfTheCurrentUsersIsNotAManagerOfTheCuratedFeed,The following statement contains a magic number: Assert.Equal(403' result.StatusCode);
Magic Number,NuGetGallery,PackagesControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,CreateController,The following statement contains a magic number: if (uploadFileService == null)              {                  uploadFileService = new Mock<IUploadFileService>();                  uploadFileService.Setup(x => x.DeleteUploadFileAsync(It.IsAny<int>())).Returns(Task.FromResult(0));                  uploadFileService.Setup(x => x.GetUploadFileAsync(42)).Returns(Task.FromResult<Stream>(null));                  uploadFileService.Setup(x => x.SaveUploadFileAsync(42' It.IsAny<Stream>())).Returns(Task.FromResult(0));              }
Magic Number,NuGetGallery,PackagesControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,CreateController,The following statement contains a magic number: if (uploadFileService == null)              {                  uploadFileService = new Mock<IUploadFileService>();                  uploadFileService.Setup(x => x.DeleteUploadFileAsync(It.IsAny<int>())).Returns(Task.FromResult(0));                  uploadFileService.Setup(x => x.GetUploadFileAsync(42)).Returns(Task.FromResult<Stream>(null));                  uploadFileService.Setup(x => x.SaveUploadFileAsync(42' It.IsAny<Stream>())).Returns(Task.FromResult(0));              }
Magic Number,NuGetGallery,TheCancelVerifyPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,DeletesTheInProgressPackageUpload,The following statement contains a magic number: fakeUploadFileService.Setup(x => x.DeleteUploadFileAsync(42)).Returns(Task.FromResult(0));
Magic Number,NuGetGallery,TheCancelVerifyPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,DeletesTheInProgressPackageUpload,The following statement contains a magic number: fakeUploadFileService.Verify(x => x.DeleteUploadFileAsync(42));
Magic Number,NuGetGallery,TheCancelVerifyPackageAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,RedirectsToUploadPageAfterDelete,The following statement contains a magic number: fakeUploadFileService.Setup(x => x.DeleteUploadFileAsync(42)).Returns(Task.FromResult(0));
Magic Number,NuGetGallery,TheDisplayPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WhenHasReadMeAndLongMarkdownExists_ReturnsClampedContent,The following statement contains a magic number: var readMeMd = string.Concat(Enumerable.Repeat($"---{Environment.NewLine}"' 20));
Magic Number,NuGetGallery,TheDisplayPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WhenHasReadMeAndLongMarkdownExists_ReturnsClampedContent,The following statement contains a magic number: Assert.Equal(20' htmlCount);
Magic Number,NuGetGallery,TheConfirmOwnerMethod_SecurePushPropagation,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,SubscribesOwnersToSecurePushAndSendsEmailIfNewOwnerRequires,The following statement contains a magic number: Assert.Equal(4' policyMessages.Count);
Magic Number,NuGetGallery,TheConfirmOwnerMethod_SecurePushPropagation,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,SubscribesNewOwnerToSecurePushAndSendsEmailIfOwnerRequires,The following statement contains a magic number: Assert.Equal(3' policyMessages.Count);
Magic Number,NuGetGallery,TheContactOwnersMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,OnlyShowsOwnersWhoAllowReceivingEmails,The following statement contains a magic number: Assert.Equal(2' model.Owners.Count());
Magic Number,NuGetGallery,TheDeleteMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,DisplaysFullVersionStringAndUsesNormalizedVersionsInUrlsInSelectList,The following statement contains a magic number: var package = new Package                  {                      Key = 2'                      PackageRegistration = packageRegistration'                      Version = "1.0.0+metadata"'                      Listed = true'                      IsLatestSemVer2 = true'                      HasReadMe = false                  };
Magic Number,NuGetGallery,TheEditMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,UsesNormalizedVersionsInUrlsInSelectList,The following statement contains a magic number: var package = new Package                  {                      Key = 2'                      PackageRegistration = packageRegistration'                      Version = "1.0.0+metadata"'                      Listed = true'                      IsLatestSemVer2 = true'                      HasReadMe = false                  };
Magic Number,NuGetGallery,TheReportMyPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,TheReportMyPackageMethod,The following statement contains a magic number: _user = new User                  {                      EmailAddress = "frodo@hobbiton.example.com"'                      Username = "Frodo"'                      Key = 2                  };
Magic Number,NuGetGallery,TheReportMyPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,TheReportMyPackageMethod,The following statement contains a magic number: _supportRequest = new Issue                  {                      Key = 23'                  };
Magic Number,NuGetGallery,TheUploadProgressAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillReturnCorrectResultForKnownUser,The following statement contains a magic number: cacheService.Setup(c => c.GetItem(FakeUploadName))                              .Returns(new AsyncFileUploadProgress(100) { FileName = "haha"' TotalBytesRead = 80 });
Magic Number,NuGetGallery,TheUploadProgressAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillReturnCorrectResultForKnownUser,The following statement contains a magic number: cacheService.Setup(c => c.GetItem(FakeUploadName))                              .Returns(new AsyncFileUploadProgress(100) { FileName = "haha"' TotalBytesRead = 80 });
Magic Number,NuGetGallery,TheUploadProgressAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillReturnCorrectResultForKnownUser,The following statement contains a magic number: Assert.Equal(80' progress.TotalBytesRead);
Magic Number,NuGetGallery,TheUploadProgressAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\PackagesControllerFacts.cs,WillReturnCorrectResultForKnownUser,The following statement contains a magic number: Assert.Equal(100' progress.ContentLength);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The following statement contains a magic number: JArray report1 = new JArray              {                  new JObject                  {                      { "PackageId"' "A" }'                      { "Downloads"' 1 }'                  }'                  new JObject                  {                      { "PackageId"' "B" }'                      { "Downloads"' 2 }'                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The following statement contains a magic number: JArray report2 = new JArray              {                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 3 }'                  }'                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.1" }'                      { "Downloads"' 4 }'                  }'                  new JObject                  {                      { "PackageId"' "B" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 5 }'                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The following statement contains a magic number: JArray report2 = new JArray              {                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 3 }'                  }'                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.1" }'                      { "Downloads"' 4 }'                  }'                  new JObject                  {                      { "PackageId"' "B" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 5 }'                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The following statement contains a magic number: JArray report2 = new JArray              {                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 3 }'                  }'                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.1" }'                      { "Downloads"' 4 }'                  }'                  new JObject                  {                      { "PackageId"' "B" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 5 }'                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The following statement contains a magic number: JArray report3 = new JArray              {                  new JObject                  {                      { "ClientMajorVersion"' 0 }'                      { "ClientMinorVersion"' 0 }'                      { "Downloads"' 1349 }                  }'                  new JObject                  {                      { "ClientMajorVersion"' 1 }'                      { "ClientMinorVersion"' 0 }'                      { "Downloads"' 1349 }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The following statement contains a magic number: JArray report3 = new JArray              {                  new JObject                  {                      { "ClientMajorVersion"' 0 }'                      { "ClientMinorVersion"' 0 }'                      { "Downloads"' 1349 }                  }'                  new JObject                  {                      { "ClientMajorVersion"' 1 }'                      { "ClientMinorVersion"' 0 }'                      { "Downloads"' 1349 }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The following statement contains a magic number: JArray report4 = new JArray              {                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 41 }'                      { "Downloads"' 5383767 }                  }'                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 42 }'                      { "Downloads"' 5383767 }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The following statement contains a magic number: JArray report4 = new JArray              {                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 41 }'                      { "Downloads"' 5383767 }                  }'                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 42 }'                      { "Downloads"' 5383767 }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The following statement contains a magic number: JArray report4 = new JArray              {                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 41 }'                      { "Downloads"' 5383767 }                  }'                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 42 }'                      { "Downloads"' 5383767 }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The following statement contains a magic number: JArray report4 = new JArray              {                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 41 }'                      { "Downloads"' 5383767 }                  }'                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 42 }'                      { "Downloads"' 5383767 }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The following statement contains a magic number: JArray report4 = new JArray              {                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 41 }'                      { "Downloads"' 5383767 }                  }'                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 42 }'                      { "Downloads"' 5383767 }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The following statement contains a magic number: JArray report4 = new JArray              {                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 41 }'                      { "Downloads"' 5383767 }                  }'                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 42 }'                      { "Downloads"' 5383767 }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateReportStructureAndAvailability,The following statement contains a magic number: Assert.Equal(15' sum);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The following statement contains a magic number: JArray report1 = new JArray              {                  new JObject                  {                      { "PackageId"' "A" }'                      { "Downloads"' 1 }'                  }'                  new JObject                  {                      { "PackageId"' "B" }'                      { "Downloads"' 2 }'                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The following statement contains a magic number: JArray report2 = new JArray              {                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 3 }'                  }'                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.1" }'                      { "Downloads"' 4 }'                  }'                  new JObject                  {                      { "PackageId"' "B" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 5 }'                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The following statement contains a magic number: JArray report2 = new JArray              {                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 3 }'                  }'                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.1" }'                      { "Downloads"' 4 }'                  }'                  new JObject                  {                      { "PackageId"' "B" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 5 }'                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The following statement contains a magic number: JArray report2 = new JArray              {                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 3 }'                  }'                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.1" }'                      { "Downloads"' 4 }'                  }'                  new JObject                  {                      { "PackageId"' "B" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 5 }'                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The following statement contains a magic number: JArray report3 = new JArray              {                  new JObject                  {                      { "ClientMajorVersion"' 0 }'                      { "ClientMinorVersion"' 0 }'                      { "Downloads"' 1349 }                  }'                  new JObject                  {                      { "ClientMajorVersion"' 1 }'                      { "ClientMinorVersion"' 0 }'                      { "Downloads"' 1349 }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The following statement contains a magic number: JArray report3 = new JArray              {                  new JObject                  {                      { "ClientMajorVersion"' 0 }'                      { "ClientMinorVersion"' 0 }'                      { "Downloads"' 1349 }                  }'                  new JObject                  {                      { "ClientMajorVersion"' 1 }'                      { "ClientMinorVersion"' 0 }'                      { "Downloads"' 1349 }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The following statement contains a magic number: JArray report4 = new JArray              {                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 11 }'                      { "Downloads"' 5383767 }                  }'                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 12 }'                      { "Downloads"' 5383767 }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The following statement contains a magic number: JArray report4 = new JArray              {                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 11 }'                      { "Downloads"' 5383767 }                  }'                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 12 }'                      { "Downloads"' 5383767 }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The following statement contains a magic number: JArray report4 = new JArray              {                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 11 }'                      { "Downloads"' 5383767 }                  }'                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 12 }'                      { "Downloads"' 5383767 }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The following statement contains a magic number: JArray report4 = new JArray              {                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 11 }'                      { "Downloads"' 5383767 }                  }'                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 12 }'                      { "Downloads"' 5383767 }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The following statement contains a magic number: JArray report4 = new JArray              {                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 11 }'                      { "Downloads"' 5383767 }                  }'                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 12 }'                      { "Downloads"' 5383767 }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The following statement contains a magic number: JArray report4 = new JArray              {                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 11 }'                      { "Downloads"' 5383767 }                  }'                  new JObject                  {                      { "Year"' 2012 }'                      { "WeekOfYear"' 12 }'                      { "Downloads"' 5383767 }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The following statement contains a magic number: if (model.IsDownloadPackageAvailable)              {                  foreach (var item in model.DownloadPackagesSummary)                  {                      if (item.PackageId == "A" && item.Downloads == 1)                      {                          continue;                      }                      else if (item.PackageId == "B" && item.Downloads == 2)                      {                          continue;                      }                      throw new Exception("unexpected data in Package report");                  }              }
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The following statement contains a magic number: if (model.IsDownloadPackageVersionsAvailable)              {                  foreach (var item in model.DownloadPackageVersionsSummary)                  {                      if (item.PackageId == "A" && item.PackageVersion == "1.0" & item.Downloads == 3)                      {                          continue;                      }                      if (item.PackageId == "A" && item.PackageVersion == "1.1" & item.Downloads == 4)                      {                          continue;                      }                      if (item.PackageId == "B" && item.PackageVersion == "1.0" & item.Downloads == 5)                      {                          continue;                      }                      throw new Exception("unexpected data in Package report");                  }              }
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The following statement contains a magic number: if (model.IsDownloadPackageVersionsAvailable)              {                  foreach (var item in model.DownloadPackageVersionsSummary)                  {                      if (item.PackageId == "A" && item.PackageVersion == "1.0" & item.Downloads == 3)                      {                          continue;                      }                      if (item.PackageId == "A" && item.PackageVersion == "1.1" & item.Downloads == 4)                      {                          continue;                      }                      if (item.PackageId == "B" && item.PackageVersion == "1.0" & item.Downloads == 5)                      {                          continue;                      }                      throw new Exception("unexpected data in Package report");                  }              }
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_ValidateFullReportStructureAndAvailability,The following statement contains a magic number: if (model.IsDownloadPackageVersionsAvailable)              {                  foreach (var item in model.DownloadPackageVersionsSummary)                  {                      if (item.PackageId == "A" && item.PackageVersion == "1.0" & item.Downloads == 3)                      {                          continue;                      }                      if (item.PackageId == "A" && item.PackageVersion == "1.1" & item.Downloads == 4)                      {                          continue;                      }                      if (item.PackageId == "B" && item.PackageVersion == "1.0" & item.Downloads == 5)                      {                          continue;                      }                      throw new Exception("unexpected data in Package report");                  }              }
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Packages_ValidateReportStructureAndAvailability,The following statement contains a magic number: JArray report = new JArray              {                  new JObject                  {                      { "PackageId"' "A" }'                      { "Downloads"' 42 }'                  }'                  new JObject                  {                      { "PackageId"' "B" }'                      { "Downloads"' 64 }'                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Packages_ValidateReportStructureAndAvailability,The following statement contains a magic number: JArray report = new JArray              {                  new JObject                  {                      { "PackageId"' "A" }'                      { "Downloads"' 42 }'                  }'                  new JObject                  {                      { "PackageId"' "B" }'                      { "Downloads"' 64 }'                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Packages_ValidateReportStructureAndAvailability,The following statement contains a magic number: Assert.Equal(106' sum);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_PackageVersions_ValidateReportStructureAndAvailability,The following statement contains a magic number: JArray report = new JArray              {                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 22 }'                  }'                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.1" }'                      { "Downloads"' 20 }'                  }'                  new JObject                  {                      { "PackageId"' "B" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 64 }'                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_PackageVersions_ValidateReportStructureAndAvailability,The following statement contains a magic number: JArray report = new JArray              {                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 22 }'                  }'                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.1" }'                      { "Downloads"' 20 }'                  }'                  new JObject                  {                      { "PackageId"' "B" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 64 }'                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_PackageVersions_ValidateReportStructureAndAvailability,The following statement contains a magic number: JArray report = new JArray              {                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 22 }'                  }'                  new JObject                  {                      { "PackageId"' "A" }'                      { "PackageVersion"' "1.1" }'                      { "Downloads"' 20 }'                  }'                  new JObject                  {                      { "PackageId"' "B" }'                      { "PackageVersion"' "1.0" }'                      { "Downloads"' 64 }'                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_PackageVersions_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc1 = new DateTime(2002' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_PackageVersions_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc1 = new DateTime(2002' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_PackageVersions_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc1 = new DateTime(2002' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_PackageVersions_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc1 = new DateTime(2002' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_PackageVersions_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc2 = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_PackageVersions_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc2 = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_PackageVersions_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc2 = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_PackageVersions_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc2 = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_PackageVersions_ValidateReportStructureAndAvailability,The following statement contains a magic number: Assert.Equal(106' sum);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailability,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailability,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailability,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailability,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailability,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailability,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailability,The following statement contains a magic number: Assert.Equal(603' sum);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailability,The following statement contains a magic number: Assert.Equal(603' actualReport.Total);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailabilityInvalidGroupBy,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailabilityInvalidGroupBy,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailabilityInvalidGroupBy,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailabilityInvalidGroupBy,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailabilityInvalidGroupBy,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailabilityInvalidGroupBy,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailabilityInvalidGroupBy,The following statement contains a magic number: var updatedUtc = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailabilityInvalidGroupBy,The following statement contains a magic number: var updatedUtc = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailabilityInvalidGroupBy,The following statement contains a magic number: var updatedUtc = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailabilityInvalidGroupBy,The following statement contains a magic number: var updatedUtc = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailabilityInvalidGroupBy,The following statement contains a magic number: Assert.Equal(603' sum);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsHomePage_Per_Package_ValidateReportStructureAndAvailabilityInvalidGroupBy,The following statement contains a magic number: Assert.Equal(603' actualReport.Total);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,Statistics_By_Client_Operation_ValidateReportStructureAndAvailability,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,Statistics_By_Client_Operation_ValidateReportStructureAndAvailability,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,Statistics_By_Client_Operation_ValidateReportStructureAndAvailability,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,Statistics_By_Client_Operation_ValidateReportStructureAndAvailability,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,Statistics_By_Client_Operation_ValidateReportStructureAndAvailability,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,Statistics_By_Client_Operation_ValidateReportStructureAndAvailability,The following statement contains a magic number: JObject report = new JObject              {                  { "Downloads"' 603 }'                  { "Items"' new JArray                      {                          new JObject                          {                              { "Version"' "1.0" }'                              { "Downloads"' 101 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 101 }                                      }'                                  }                              }                          }'                          new JObject                          {                              { "Version"' "2.0" }'                              { "Downloads"' 502 }'                              { "Items"' new JArray                                  {                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "Install" }'                                          { "Downloads"' 201 }                                      }'                                      new JObject                                      {                                          { "ClientName"' "NuGet" }'                                          { "ClientVersion"' "2.1" }'                                          { "Operation"' "unknown" }'                                          { "Downloads"' 301 }                                      }                                  }                              }                          }'                      }                  }              };
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,Statistics_By_Client_Operation_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,Statistics_By_Client_Operation_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,Statistics_By_Client_Operation_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,Statistics_By_Client_Operation_ValidateReportStructureAndAvailability,The following statement contains a magic number: var updatedUtc = new DateTime(2001' 01' 01' 10' 20' 30);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,Statistics_By_Client_Operation_ValidateReportStructureAndAvailability,The following statement contains a magic number: Assert.Equal(502' sum);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,Statistics_By_Client_Operation_ValidateReportStructureAndAvailability,The following statement contains a magic number: Assert.Equal(502' actualReport.Total);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsDownloadByVersionAction_ReturnsHttpNotFoundIfPackageDoesntExist,The following statement contains a magic number: Assert.Equal(404' controller.Response.StatusCode);
Magic Number,NuGetGallery,StatisticsControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,StatisticsDownloadByVersionAction_ReturnsHttpOkIfPackageExists,The following statement contains a magic number: Assert.Equal(200' controller.Response.StatusCode);
Magic Number,NuGetGallery,TheTotalsAllAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,IgnoresServerCultureAndReturnsStatisticsAsNumbers,The following statement contains a magic number: try                  {                      Thread.CurrentThread.CurrentCulture = new CultureInfo("en-us");                        var aggregateStatsService = new Mock<IAggregateStatsService>(MockBehavior.Strict);                      var stats = new AggregateStats                      {                          Downloads = 2013'                          TotalPackages = 1000'                          UniquePackages = 500                      };                      aggregateStatsService.Setup(s => s.GetAggregateStats()).Returns(Task.FromResult(stats));                        var controller = CreateController(aggregateStatsService);                        // Act                      var result = await controller.Totals() as JsonResult;                        // Assert                      Assert.NotNull(result);                      dynamic data = result.Data;                        Assert.Equal(2013' data.Downloads);                      Assert.Equal(500' data.UniquePackages);                      Assert.Equal(1000' data.TotalPackages);                  }                  finally                  {                      Thread.CurrentThread.CurrentCulture = currentCulture;                  }
Magic Number,NuGetGallery,TheTotalsAllAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,IgnoresServerCultureAndReturnsStatisticsAsNumbers,The following statement contains a magic number: try                  {                      Thread.CurrentThread.CurrentCulture = new CultureInfo("en-us");                        var aggregateStatsService = new Mock<IAggregateStatsService>(MockBehavior.Strict);                      var stats = new AggregateStats                      {                          Downloads = 2013'                          TotalPackages = 1000'                          UniquePackages = 500                      };                      aggregateStatsService.Setup(s => s.GetAggregateStats()).Returns(Task.FromResult(stats));                        var controller = CreateController(aggregateStatsService);                        // Act                      var result = await controller.Totals() as JsonResult;                        // Assert                      Assert.NotNull(result);                      dynamic data = result.Data;                        Assert.Equal(2013' data.Downloads);                      Assert.Equal(500' data.UniquePackages);                      Assert.Equal(1000' data.TotalPackages);                  }                  finally                  {                      Thread.CurrentThread.CurrentCulture = currentCulture;                  }
Magic Number,NuGetGallery,TheTotalsAllAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,IgnoresServerCultureAndReturnsStatisticsAsNumbers,The following statement contains a magic number: try                  {                      Thread.CurrentThread.CurrentCulture = new CultureInfo("en-us");                        var aggregateStatsService = new Mock<IAggregateStatsService>(MockBehavior.Strict);                      var stats = new AggregateStats                      {                          Downloads = 2013'                          TotalPackages = 1000'                          UniquePackages = 500                      };                      aggregateStatsService.Setup(s => s.GetAggregateStats()).Returns(Task.FromResult(stats));                        var controller = CreateController(aggregateStatsService);                        // Act                      var result = await controller.Totals() as JsonResult;                        // Assert                      Assert.NotNull(result);                      dynamic data = result.Data;                        Assert.Equal(2013' data.Downloads);                      Assert.Equal(500' data.UniquePackages);                      Assert.Equal(1000' data.TotalPackages);                  }                  finally                  {                      Thread.CurrentThread.CurrentCulture = currentCulture;                  }
Magic Number,NuGetGallery,TheTotalsAllAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,IgnoresServerCultureAndReturnsStatisticsAsNumbers,The following statement contains a magic number: try                  {                      Thread.CurrentThread.CurrentCulture = new CultureInfo("en-us");                        var aggregateStatsService = new Mock<IAggregateStatsService>(MockBehavior.Strict);                      var stats = new AggregateStats                      {                          Downloads = 2013'                          TotalPackages = 1000'                          UniquePackages = 500                      };                      aggregateStatsService.Setup(s => s.GetAggregateStats()).Returns(Task.FromResult(stats));                        var controller = CreateController(aggregateStatsService);                        // Act                      var result = await controller.Totals() as JsonResult;                        // Assert                      Assert.NotNull(result);                      dynamic data = result.Data;                        Assert.Equal(2013' data.Downloads);                      Assert.Equal(500' data.UniquePackages);                      Assert.Equal(1000' data.TotalPackages);                  }                  finally                  {                      Thread.CurrentThread.CurrentCulture = currentCulture;                  }
Magic Number,NuGetGallery,TheTotalsAllAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,IgnoresServerCultureAndReturnsStatisticsAsNumbers,The following statement contains a magic number: try                  {                      Thread.CurrentThread.CurrentCulture = new CultureInfo("en-us");                        var aggregateStatsService = new Mock<IAggregateStatsService>(MockBehavior.Strict);                      var stats = new AggregateStats                      {                          Downloads = 2013'                          TotalPackages = 1000'                          UniquePackages = 500                      };                      aggregateStatsService.Setup(s => s.GetAggregateStats()).Returns(Task.FromResult(stats));                        var controller = CreateController(aggregateStatsService);                        // Act                      var result = await controller.Totals() as JsonResult;                        // Assert                      Assert.NotNull(result);                      dynamic data = result.Data;                        Assert.Equal(2013' data.Downloads);                      Assert.Equal(500' data.UniquePackages);                      Assert.Equal(1000' data.TotalPackages);                  }                  finally                  {                      Thread.CurrentThread.CurrentCulture = currentCulture;                  }
Magic Number,NuGetGallery,TheTotalsAllAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,IgnoresServerCultureAndReturnsStatisticsAsNumbers,The following statement contains a magic number: try                  {                      Thread.CurrentThread.CurrentCulture = new CultureInfo("en-us");                        var aggregateStatsService = new Mock<IAggregateStatsService>(MockBehavior.Strict);                      var stats = new AggregateStats                      {                          Downloads = 2013'                          TotalPackages = 1000'                          UniquePackages = 500                      };                      aggregateStatsService.Setup(s => s.GetAggregateStats()).Returns(Task.FromResult(stats));                        var controller = CreateController(aggregateStatsService);                        // Act                      var result = await controller.Totals() as JsonResult;                        // Assert                      Assert.NotNull(result);                      dynamic data = result.Data;                        Assert.Equal(2013' data.Downloads);                      Assert.Equal(500' data.UniquePackages);                      Assert.Equal(1000' data.TotalPackages);                  }                  finally                  {                      Thread.CurrentThread.CurrentCulture = currentCulture;                  }
Magic Number,NuGetGallery,TheTotalsAllAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,IgnoresUserCultureAndReturnsStatisticsAsNumbers,The following statement contains a magic number: var stats = new AggregateStats                  {                      Downloads = 2013'                      TotalPackages = 1000'                      UniquePackages = 500                  };
Magic Number,NuGetGallery,TheTotalsAllAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,IgnoresUserCultureAndReturnsStatisticsAsNumbers,The following statement contains a magic number: var stats = new AggregateStats                  {                      Downloads = 2013'                      TotalPackages = 1000'                      UniquePackages = 500                  };
Magic Number,NuGetGallery,TheTotalsAllAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,IgnoresUserCultureAndReturnsStatisticsAsNumbers,The following statement contains a magic number: var stats = new AggregateStats                  {                      Downloads = 2013'                      TotalPackages = 1000'                      UniquePackages = 500                  };
Magic Number,NuGetGallery,TheTotalsAllAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,IgnoresUserCultureAndReturnsStatisticsAsNumbers,The following statement contains a magic number: Assert.Equal(2013' data.Downloads);
Magic Number,NuGetGallery,TheTotalsAllAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,IgnoresUserCultureAndReturnsStatisticsAsNumbers,The following statement contains a magic number: Assert.Equal(500' data.UniquePackages);
Magic Number,NuGetGallery,TheTotalsAllAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\StatisticsControllerFacts.cs,IgnoresUserCultureAndReturnsStatisticsAsNumbers,The following statement contains a magic number: Assert.Equal(1000' data.TotalPackages);
Magic Number,NuGetGallery,TheAccountAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,WillGetCuratedFeedsManagedByTheCurrentUser,The following statement contains a magic number: controller.SetCurrentUser(new User { Key = 42 });
Magic Number,NuGetGallery,TheAccountAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,WillGetCuratedFeedsManagedByTheCurrentUser,The following statement contains a magic number: GetMock<ICuratedFeedService>()                      .Verify(query => query.GetFeedsForManager(42));
Magic Number,NuGetGallery,TheAccountAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,WillReturnTheAccountViewModelWithTheCuratedFeeds,The following statement contains a magic number: controller.SetCurrentUser(new User { Key = 42 });
Magic Number,NuGetGallery,TheAccountAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,WillReturnTheAccountViewModelWithTheCuratedFeeds,The following statement contains a magic number: GetMock<ICuratedFeedService>()                      .Setup(stub => stub.GetFeedsForManager(42))                      .Returns(new[] { new CuratedFeed { Name = "theCuratedFeed" } });
Magic Number,NuGetGallery,TheAccountAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,LoadsDescriptionsOfCredentialsInToViewModel,The following statement contains a magic number: Assert.Equal(3' descs.Count);
Magic Number,NuGetGallery,TheAccountAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,FiltersOutUnsupportedCredentialsInToViewModel,The following statement contains a magic number: Assert.Equal(6' descs.Count);
Magic Number,NuGetGallery,TheAccountAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,FiltersOutUnsupportedCredentialsInToViewModel,The following statement contains a magic number: Assert.True(descs.ContainsKey(credentials[2].Type));
Magic Number,NuGetGallery,TheAccountAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,FiltersOutUnsupportedCredentialsInToViewModel,The following statement contains a magic number: Assert.True(descs.ContainsKey(credentials[3].Type));
Magic Number,NuGetGallery,TheAccountAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,FiltersOutUnsupportedCredentialsInToViewModel,The following statement contains a magic number: Assert.True(descs.ContainsKey(credentials[4].Type));
Magic Number,NuGetGallery,TheAccountAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,FiltersOutUnsupportedCredentialsInToViewModel,The following statement contains a magic number: Assert.True(descs.ContainsKey(credentials[5].Type));
Magic Number,NuGetGallery,TheForgotPasswordAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,SendsEmailWithPasswordResetUrl,The following statement contains a magic number: GetMock<AuthenticationService>()                      .Setup(s => s.GeneratePasswordResetToken("user"' Constants.PasswordResetTokenExpirationHours * 60))                      .CompletesWith(new PasswordResetResult(PasswordResetResultType.Success' user));
Magic Number,NuGetGallery,TheForgotPasswordAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,RedirectsAfterGeneratingToken,The following statement contains a magic number: GetMock<AuthenticationService>()                      .Setup(s => s.GeneratePasswordResetToken("user"' Constants.PasswordResetTokenExpirationHours * 60))                      .CompletesWith(new PasswordResetResult(PasswordResetResultType.Success' user))                      .Verifiable();
Magic Number,NuGetGallery,TheForgotPasswordAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,RedirectsAfterGeneratingToken,The following statement contains a magic number: GetMock<AuthenticationService>()                      .Verify(s => s.GeneratePasswordResetToken("user"' Constants.PasswordResetTokenExpirationHours * 60));
Magic Number,NuGetGallery,TheForgotPasswordAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,ShowsErrorIfUserWasNotFound,The following statement contains a magic number: GetMock<AuthenticationService>()                      .Setup(s => s.GeneratePasswordResetToken("user"' Constants.PasswordResetTokenExpirationHours * 60))                      .ReturnsAsync(new PasswordResetResult(PasswordResetResultType.UserNotFound' user: null));
Magic Number,NuGetGallery,TheForgotPasswordAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,ThrowsNotImplementedExceptionWhenResultTypeIsUnknown,The following statement contains a magic number: GetMock<AuthenticationService>()                      .Setup(s => s.GeneratePasswordResetToken("user"' Constants.PasswordResetTokenExpirationHours * 60))                      .ReturnsAsync(new PasswordResetResult((PasswordResetResultType)(-1)' user: new User()));
Magic Number,NuGetGallery,TheForgotPasswordAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,NoResultsTypesThrow,The following statement contains a magic number: GetMock<AuthenticationService>()                      .Setup(s => s.GeneratePasswordResetToken("user"' Constants.PasswordResetTokenExpirationHours * 60))                      .ReturnsAsync(new PasswordResetResult(resultType' user: new User()));
Magic Number,NuGetGallery,TheGenerateApiKeyAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,WhenExpirationInDaysIsProvidedItsUsed,The following statement contains a magic number: configurationService.Current.ExpirationInDaysForApiKeyV1 = 365;
Magic Number,NuGetGallery,TheGenerateApiKeyAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,ReturnsNewCredentialJson,The following statement contains a magic number: configurationService.Current.ExpirationInDaysForApiKeyV1 = 365;
Magic Number,NuGetGallery,TheGenerateApiKeyAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,ReturnsNewCredentialJson,The following statement contains a magic number: var result = await controller.GenerateApiKey(                      description: "description"'                      owner: user.Username'                      scopes: new[] { NuGetScopes.PackageUnlist' NuGetScopes.PackagePush }'                      subjects: new[] { "a" }'                      expirationInDays: 90);
Magic Number,NuGetGallery,TheGenerateApiKeyAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,SendsNotificationMailToUser,The following statement contains a magic number: var result = await controller.GenerateApiKey(                      description: "description"'                      owner: user.Username'                      scopes: new[] { NuGetScopes.PackageUnlist' NuGetScopes.PackagePush }'                      subjects: new[] { "a" }'                      expirationInDays: 90);
Magic Number,NuGetGallery,TheRemoveCredentialAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\UsersControllerFacts.cs,GivenValidRequest_CanDeleteMicrosoftAccountWithMultipleMicrosoftAccounts,The following statement contains a magic number: var creds = new Credential[5];
Magic Number,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NewOwnerIsAddedSuccessfullyToTheRegistration,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1" };
Magic Number,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NewOwnerIsAddedSuccessfullyToTheRegistration,The following statement contains a magic number: var pendingOwner = new User { Key = 100' Username = "aspnet" };
Magic Number,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NewOwnerIsAddedSuccessfullyWithoutPendingRequest,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1" };
Magic Number,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NewOwnerIsAddedSuccessfullyWithoutPendingRequest,The following statement contains a magic number: var pendingOwner = new User { Key = 100' Username = "aspnet" };
Magic Number,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AddingOwnerMarksPackageVerifiedForMatchingNamespace,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1"' IsVerified = false };
Magic Number,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AddingOwnerMarksPackageVerifiedForMatchingNamespace,The following statement contains a magic number: var pendingOwner = new User { Key = 100' Username = "aspnet" };
Magic Number,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AddingOwnerAddsPackageRegistrationToMultipleNamespaces,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1"' IsVerified = false };
Magic Number,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AddingOwnerAddsPackageRegistrationToMultipleNamespaces,The following statement contains a magic number: var pendingOwner = new User { Key = 100' Username = "microsoft" };
Magic Number,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AddingOwnerAddsPackageRegistrationToMultipleNamespaces,The following statement contains a magic number: reservedNamespaceService.Verify(x => x.AddPackageRegistrationToNamespace(It.IsAny<string>()' It.IsAny<PackageRegistration>())' Times.Exactly(2));
Magic Number,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AddingOwnerDoesNotMarkRegistrationVerifiedForAbsoluteNamespace,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "AbsolutePackage1"' IsVerified = false };
Magic Number,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AddingOwnerDoesNotMarkRegistrationVerifiedForAbsoluteNamespace,The following statement contains a magic number: var pendingOwner = new User { Key = 100' Username = "microsoft" };
Magic Number,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,WritesAnAuditRecord,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "pkg42" };
Magic Number,NuGetGallery,TheAddPackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,WritesAnAuditRecord,The following statement contains a magic number: var pendingOwner = new User { Key = 100' Username = "teamawesome" };
Magic Number,NuGetGallery,TheAddPackageOwnershipRequestAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RequestIsAddedSuccessfully,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "pkg42" };
Magic Number,NuGetGallery,TheAddPackageOwnershipRequestAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RequestIsAddedSuccessfully,The following statement contains a magic number: var user1 = new User { Key = 101' Username = "user1" };
Magic Number,NuGetGallery,TheAddPackageOwnershipRequestAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RequestIsAddedSuccessfully,The following statement contains a magic number: var user2 = new User { Key = 101' Username = "user2" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullPackageRegistrationThrowsException,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "pkg42" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullPackageRegistrationThrowsException,The following statement contains a magic number: var user1 = new User { Key = 101' Username = "user1" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullPackageRegistrationThrowsException,The following statement contains a magic number: var user2 = new User { Key = 101' Username = "user2" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullRequestingUserThrowsException,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "pkg42" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullRequestingUserThrowsException,The following statement contains a magic number: var user1 = new User { Key = 101' Username = "user1" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullRequestingUserThrowsException,The following statement contains a magic number: var user2 = new User { Key = 101' Username = "user2" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullOwnerToRemoveThrowsException,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "pkg42" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullOwnerToRemoveThrowsException,The following statement contains a magic number: var user1 = new User { Key = 101' Username = "user1" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullOwnerToRemoveThrowsException,The following statement contains a magic number: var user2 = new User { Key = 101' Username = "user2" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,ExistingUserIsSuccessfullyRemovedFromPackage,The following statement contains a magic number: var owner2 = new User { Key = 2' Username = "Owner2" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,ExistingUserIsSuccessfullyRemovedFromPackage,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1"' Owners = new List<User> { owner1' owner2 } };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,WritesAnAuditRecord,The following statement contains a magic number: var ownerToRemove = new User { Key = 100' Username = "teamawesome" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,WritesAnAuditRecord,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "pkg42"' Owners = new List<User> { owner1' ownerToRemove } };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingNamespaceOwnerRemovesPackageVerified,The following statement contains a magic number: var existingOwner1 = new User { Key = 100' Username = "microsoft" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingNamespaceOwnerRemovesPackageVerified,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1"' IsVerified = true' Owners = new List<User> { existingOwner1 } };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingOneNamespaceOwnerDoesNotRemoveVerifiedFlag,The following statement contains a magic number: var existingOwner1 = new User { Key = 100' Username = "microsoft" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingOneNamespaceOwnerDoesNotRemoveVerifiedFlag,The following statement contains a magic number: var existingOwner2 = new User { Key = 100' Username = "aspnet" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingOneNamespaceOwnerDoesNotRemoveVerifiedFlag,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1"' IsVerified = true' Owners = new List<User> { existingOwner1' existingOwner2 } };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingNonNamespaceOwnerDoesNotRemoveVerifiedFlag,The following statement contains a magic number: var existingOwner1 = new User { Key = 100' Username = "microsoft" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingNonNamespaceOwnerDoesNotRemoveVerifiedFlag,The following statement contains a magic number: var existingOwner2 = new User { Key = 100' Username = "aspnet" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RemovingNonNamespaceOwnerDoesNotRemoveVerifiedFlag,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1"' IsVerified = true' Owners = new List<User> { existingOwner1' existingOwner2 } };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,MultipleNamespaceOwnersRemovalWorksCorrectly,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1"' IsVerified = true };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,MultipleNamespaceOwnersRemovalWorksCorrectly,The following statement contains a magic number: var existingOwner1 = new User { Key = 100' Username = "microsoft" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,MultipleNamespaceOwnersRemovalWorksCorrectly,The following statement contains a magic number: var existingOwner2 = new User { Key = 100' Username = "aspnet" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AdminCanRemoveAnyOwner,The following statement contains a magic number: var existingOwner1 = new User { Key = 100' Username = "microsoft" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AdminCanRemoveAnyOwner,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1"' IsVerified = true' Owners = new List<User> { existingOwner1 } };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,AdminCanRemoveAnyOwner,The following statement contains a magic number: var adminOwner = new User { Key = 100' Username = "aspnet"' Roles = new List<Role> { new Role { Name = Constants.AdminRoleName } } };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NormalOwnerCannotRemoveNamespaceOwner,The following statement contains a magic number: var namespaceOwner = new User { Key = 100' Username = "microsoft" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NormalOwnerCannotRemoveNamespaceOwner,The following statement contains a magic number: var nonNamespaceOwner = new User { Key = 100' Username = "aspnet" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NormalOwnerCannotRemoveNamespaceOwner,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1"' IsVerified = true' Owners = new List<User> { namespaceOwner' nonNamespaceOwner } };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NonNamespaceOwnerCanRemoveOtherSimilarOwners,The following statement contains a magic number: var existingOwner1 = new User { Key = 100' Username = "owner1" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NonNamespaceOwnerCanRemoveOtherSimilarOwners,The following statement contains a magic number: var existingOwner2 = new User { Key = 100' Username = "owner2" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NonNamespaceOwnerCanRemoveOtherSimilarOwners,The following statement contains a magic number: var existingOwner3 = new User { Key = 100' Username = "owner3" };
Magic Number,NuGetGallery,TheRemovePackageOwnerAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NonNamespaceOwnerCanRemoveOtherSimilarOwners,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "Microsoft.Aspnet.Package1"' IsVerified = true' Owners = new List<User> { existingOwner1' existingOwner2' existingOwner3} };
Magic Number,NuGetGallery,TheDeletePackageOwnershipRequestAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullPackageRegistrationThrowsException,The following statement contains a magic number: var user1 = new User { Key = 100' Username = "user1" };
Magic Number,NuGetGallery,TheDeletePackageOwnershipRequestAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,NullRequestingUserThrowsException,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "pkg42" };
Magic Number,NuGetGallery,TheDeletePackageOwnershipRequestAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RequestIsDeletedSuccessfully,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "pkg42" };
Magic Number,NuGetGallery,TheDeletePackageOwnershipRequestAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnershipManagementServiceFacts.cs,RequestIsDeletedSuccessfully,The following statement contains a magic number: var user1 = new User { Key = 101' Username = "user1" };
Magic Number,NuGetGallery,TheHasReadMeSourceMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReadMeServiceFacts.cs,WhenFileAndSourceFileNotEmpty_ReturnsTrue,The following statement contains a magic number: sourceFile.Setup(f => f.ContentLength).Returns(10);
Magic Number,NuGetGallery,TheStartValidationAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\AsynchronousPackageValidationInitiatorFacts.cs,UsesADifferentValidationTrackingIdEachTime,The following statement contains a magic number: Assert.Equal(2' _data.Count);
Magic Number,NuGetGallery,TheReflowAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReflowPackageServiceFacts.cs,UpdatesPackageMetadata,The following statement contains a magic number: Assert.Equal(2' result.Authors.Count);
Magic Number,NuGetGallery,TheReflowAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReflowPackageServiceFacts.cs,UpdatesPackageMetadata,The following statement contains a magic number: Assert.Equal(3' result.Dependencies.Count);
Magic Number,NuGetGallery,SearchAdaptorFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\SearchAdaptorFacts.cs,GetODataQuerySettingsForTest,The following statement contains a magic number: return new ODataQuerySettings(QueryResultDefaults.DefaultQuerySettings)              {                  PageSize = 100              };
Magic Number,NuGetGallery,TheGetNextLinkMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\SearchAdaptorFacts.cs,DoesNotGenerateNextLinkWhenNoAdditionalResultsOnPage,The following statement contains a magic number: var resultCount = 20;
Magic Number,NuGetGallery,TheGetNextLinkMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\SearchAdaptorFacts.cs,DoesNotGenerateNextLinkWhenSkipCountLargerThanResultSet,The following statement contains a magic number: var resultCount = 200;
Magic Number,NuGetGallery,TheGetNextLinkMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\SearchAdaptorFacts.cs,GeneratesNextLinkForSimpleUrl1,The following statement contains a magic number: var resultCount = 200;
Magic Number,NuGetGallery,TheGetNextLinkMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\SearchAdaptorFacts.cs,GeneratesNextLinkForSimpleUrl2,The following statement contains a magic number: var resultCount = 210;
Magic Number,NuGetGallery,TheGetNextLinkMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\SearchAdaptorFacts.cs,GeneratesNextLinkForComplexUrl,The following statement contains a magic number: var resultCount = 2000;
Magic Number,NuGetGallery,TheTrackEventMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\TelemetryServiceFacts.cs,TrackVerifyPackageKeyEventThrowsIfUserIsNull,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() =>                      service.TrackVerifyPackageKeyEvent("id"' "1.0.0"' null' Fakes.ToIdentity(fakes.User)' 200));
Magic Number,NuGetGallery,TheTrackEventMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\TelemetryServiceFacts.cs,TrackVerifyPackageKeyEventThrowsIfIdentityIsNull,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() =>                      service.TrackVerifyPackageKeyEvent("id"' "1.0.0"' fakes.User' null' 200));
Magic Number,NuGetGallery,TestPackage,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\TestPackage.cs,WriteNuspec,The following statement contains a magic number: using (var streamWriter = new StreamWriter(stream' new UTF8Encoding(false' true)' 1024' leaveStreamOpen))              {                  streamWriter.WriteLine(@"<?xml version=""1.0""?>                      <package xmlns=""http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd"">                          <metadata" + (!string.IsNullOrEmpty(minClientVersion) ? @" minClientVersion=""" + minClientVersion + @"""" : string.Empty) + @">                              <id>" + id + @"</id>                              <version>" + version + @"</version>                              <title>" + title + @"</title>                              <summary>" + summary + @"</summary>                              <description>" + description + @"</description>                              <tags>" + tags + @"</tags>                              <requireLicenseAcceptance>" + requireLicenseAcceptance + @"</requireLicenseAcceptance>                              <authors>" + authors + @"</authors>                              <owners>" + owners + @"</owners>                              <language>" + (language ?? string.Empty) + @"</language>                              <copyright>" + (copyright ?? string.Empty) + @"</copyright>                              <releaseNotes>" + (releaseNotes ?? string.Empty) + @"</releaseNotes>                              <licenseUrl>" + (licenseUrl?.ToString() ?? string.Empty) + @"</licenseUrl>                              <projectUrl>" + (projectUrl?.ToString() ?? string.Empty) + @"</projectUrl>                              <iconUrl>" + (iconUrl?.ToString() ?? string.Empty) + @"</iconUrl>                              <packageTypes>" + WritePackageTypes(packageTypes) + @"</packageTypes>                              <dependencies>" + WriteDependencies(packageDependencyGroups) + @"</dependencies>                          </metadata>                      </package>");              }
Magic Number,NuGetGallery,FileSystemFileStorageServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FileSystemFileStorageServiceFacts.cs,CreateFileStream,The following statement contains a magic number: return new MemoryStream(new byte[] { 0' 0' 1' 0' 1' 0' 1' 0 }' index: 0' count: 8' writable: true' publiclyVisible: true);
Magic Number,NuGetGallery,TheSaveFileMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FileSystemFileStorageServiceFacts.cs,WillThrowIfFileExistsWhenManyThreadsAreTryingToSaveWithoutOverwriting,The following statement contains a magic number: using (var testDirectory = TestDirectory.Create())                  {                      var fileSystemService = new FileSystemService();                        var configuration = new Mock<IAppConfiguration>();                      configuration                          .Setup(x => x.FileStorageDirectory)                          .Returns(testDirectory);                        var service = new FileSystemFileStorageService(                          configuration.Object'                          fileSystemService);                        for (var i = 0; i < 10; i++)                      {                          var fileName = FileName + i;                          var barrier = new Barrier(TaskCount);                          var tasks = new List<Task<bool>>();                            // Act                          for (var taskIndex = 0; taskIndex < TaskCount; taskIndex++)                          {                              var task = SaveFileAsync(service' fileName' barrier);                              tasks.Add(task);                          }                            var results = await Task.WhenAll(tasks);                            // Assert                          // One task should succeed. One should fail.                          Assert.Equal(1' results.Count(success => success));                          Assert.Equal(TaskCount - 1' results.Count(success => !success));                      }                  }
Magic Number,NuGetGallery,TheSendContactOwnersMessageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\MessageServiceFacts.cs,WillCopySenderIfAsked,The following statement contains a magic number: Assert.Equal(2' messages.Count);
Magic Number,NuGetGallery,PackageFileServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageFileServiceFacts.cs,CreatePackageFileStream,The following statement contains a magic number: return new MemoryStream(new byte[] { 0' 0' 1' 0' 1' 0' 1' 0 }' 0' 8' true' true);
Magic Number,NuGetGallery,TheSoftDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillIncreaseTheDatabaseCommandTimeout,The following statement contains a magic number: var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests };
Magic Number,NuGetGallery,TheSoftDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillIncreaseTheDatabaseCommandTimeout,The following statement contains a magic number: entitiesContext.Verify(x => x.SetCommandTimeout(300));
Magic Number,NuGetGallery,TheSoftDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillBackupAndDeleteBothThePublicAndValidationPackageFile,The following statement contains a magic number: packageFileService.Verify(                      x => x.StorePackageFileInBackupLocationAsync(package' It.IsAny<Stream>())'                      Times.Exactly(2));
Magic Number,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillIncreaseTheDatabaseCommandTimeout,The following statement contains a magic number: var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests };
Magic Number,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillIncreaseTheDatabaseCommandTimeout,The following statement contains a magic number: entitiesContext.Verify(x => x.SetCommandTimeout(300));
Magic Number,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeletePackageAndRelatedEntities,The following statement contains a magic number: packageRegistration.Packages.Add(new Package { Key = 124' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests });
Magic Number,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeletePackageAndRelatedEntities,The following statement contains a magic number: var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests };
Magic Number,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillNotDeletePackageRegistrationWhenNoPackagesLeftAndDeleteEmptyPackageRegistrationFalse,The following statement contains a magic number: var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests };
Magic Number,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeletePackageRegistrationWhenNoPackagesLeftAndDeleteEmptyPackageRegistrationTrue,The following statement contains a magic number: var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests };
Magic Number,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillUpdatePackageLatestVersions,The following statement contains a magic number: var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests };
Magic Number,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillUpdateTheIndexingService,The following statement contains a magic number: var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests };
Magic Number,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillBackupAndDeleteJustThePublicPackageFile,The following statement contains a magic number: var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests };
Magic Number,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillBackupAndDeleteJustTheValidationPackageFile,The following statement contains a magic number: var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests };
Magic Number,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillBackupAndDeleteBothThePublicAndValidationPackageFile,The following statement contains a magic number: var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests };
Magic Number,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillBackupAndDeleteBothThePublicAndValidationPackageFile,The following statement contains a magic number: packageFileService.Verify(                      x => x.StorePackageFileInBackupLocationAsync(package' It.IsAny<Stream>())'                      Times.Exactly(2));
Magic Number,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillDeleteReadMeFiles,The following statement contains a magic number: var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests };
Magic Number,NuGetGallery,TheHardDeletePackagesAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageDeleteServiceFacts.cs,WillCreateAuditRecordUsingAuditService,The following statement contains a magic number: var package = new Package { Key = 123' PackageRegistration = packageRegistration' Version = "1.0.0"' Hash = _packageHashForTests };
Magic Number,NuGetGallery,TheAddPackageOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,AddsUserToPackageOwnerCollection,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "pkg42" };
Magic Number,NuGetGallery,TheAddPackageOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,AddsUserToPackageOwnerCollection,The following statement contains a magic number: var pendingOwner = new User { Key = 100' Username = "teamawesome" };
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillSaveThePackageFileAndSetThePackageFileSize,The following statement contains a magic number: var packageStreamMetadata = new PackageStreamMetadata                  {                      Hash = packageHash'                      HashAlgorithm = Constants.Sha512HashAlgorithmId'                      Size = 618                  };
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillSaveThePackageFileAndSetThePackageFileSize,The following statement contains a magic number: Assert.Equal(618' package.PackageFileSize);
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageIdIsLongerThanMaxPackageIdLength,The following statement contains a magic number: var nugetPackage = PackageServiceUtility.CreateNuGetPackage(id: "theId".PadRight(131' '_'));
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageAuthorsIsLongerThan4000,The following statement contains a magic number: var nugetPackage = PackageServiceUtility.CreateNuGetPackage(authors: "theFirstAuthor".PadRight(2001' '_') + "' " + "theSecondAuthor".PadRight(2001' '_'));
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageAuthorsIsLongerThan4000,The following statement contains a magic number: var nugetPackage = PackageServiceUtility.CreateNuGetPackage(authors: "theFirstAuthor".PadRight(2001' '_') + "' " + "theSecondAuthor".PadRight(2001' '_'));
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageCopyrightIsLongerThan4000,The following statement contains a magic number: var nugetPackage = PackageServiceUtility.CreateNuGetPackage(copyright: "theCopyright".PadRight(4001' '_'));
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheVersionIsLongerThan64Characters,The following statement contains a magic number: var versionString = "1.0.0-".PadRight(65' 'a');
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageDependenciesIsLongerThanInt16MaxValue,The following statement contains a magic number: var numDependencies = 5000;
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfThePackageDependencyIdIsLongerThanMaxPackageIdLength,The following statement contains a magic number: var nugetPackage = PackageServiceUtility.CreateNuGetPackage(packageDependencyGroups: new[]                      {                          new PackageDependencyGroup(                              new NuGetFramework("net40")'                              new[]                                  {                                       new NuGet.Packaging.Core.PackageDependency(                                          "theFirstDependency".PadRight(129' '_')'                                          new VersionRange(                                              minVersion: new NuGetVersion("1.0")))                                  })                      });
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfThePackageDependencyVersionSpecIsLongerThan256,The following statement contains a magic number: var nugetPackage = PackageServiceUtility.CreateNuGetPackage(packageDependencyGroups: new[]                      {                          new PackageDependencyGroup(                              new NuGetFramework("net40")'                              new[]                                  {                                       new NuGet.Packaging.Core.PackageDependency(                                          "theFirstDependency"'                                          new VersionRange(                                              minVersion: new NuGetVersion("1.0-".PadRight(257' 'a'))))                                  })                      });
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfThePackageDependencyVersionSpecIsLongerThan256,The following statement contains a magic number: Assert.Equal(String.Format(Strings.NuGetPackagePropertyTooLong' "Dependency.VersionSpec"' 256)' ex.Message);
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageDescriptionIsLongerThan4000,The following statement contains a magic number: var nugetPackage = PackageServiceUtility.CreateNuGetPackage(description: "theDescription".PadRight(4001' '_'));
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageIconUrlIsLongerThan4000,The following statement contains a magic number: var nugetPackage = PackageServiceUtility.CreateNuGetPackage(iconUrl: new Uri("http://theIconUrl/".PadRight(4001' '-')' UriKind.Absolute));
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageLicenseUrlIsLongerThan4000,The following statement contains a magic number: var nugetPackage = PackageServiceUtility.CreateNuGetPackage(licenseUrl: new Uri("http://theLicenseUrl/".PadRight(4001' '-')' UriKind.Absolute));
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageProjectUrlIsLongerThan4000,The following statement contains a magic number: var nugetPackage = PackageServiceUtility.CreateNuGetPackage(projectUrl: new Uri("http://theProjectUrl/".PadRight(4001' '-')' UriKind.Absolute));
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageSummaryIsLongerThan4000,The following statement contains a magic number: var nugetPackage = PackageServiceUtility.CreateNuGetPackage(summary: "theSummary".PadRight(4001' '_'));
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageTagsIsLongerThan4000,The following statement contains a magic number: var nugetPackage = PackageServiceUtility.CreateNuGetPackage(tags: "theTags".PadRight(4001' '_'));
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageTitleIsLongerThan4000,The following statement contains a magic number: var nugetPackage = PackageServiceUtility.CreateNuGetPackage(title: "theTitle".PadRight(4001' '_'));
Magic Number,NuGetGallery,TheCreatePackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,WillThrowIfTheNuGetPackageLanguageIsLongerThan20,The following statement contains a magic number: var nugetPackage = PackageServiceUtility.CreateNuGetPackage(language: new string('a'' 21));
Magic Number,NuGetGallery,TheFindPackagesByAnyMatchingOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,ReturnsAPackageForEachPackageRegistration,The following statement contains a magic number: Assert.Equal(2' packages.Count);
Magic Number,NuGetGallery,TheRemovePackageOwnerMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageServiceFacts.cs,RemovesPackageOwner,The following statement contains a magic number: var owner2 = new User { Key = 2' Username = "Owner2" };
Magic Number,NuGetGallery,TheConfirmEmailAddressMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\UserServiceFacts.cs,ThrowsForDuplicateConfirmedEmailAddresses,The following statement contains a magic number: var conflictingUser = new User { Username = "User2"' Key = 2' EmailAddress = "new@example.org" };
Magic Number,NuGetGallery,TheFindByEmailAddressMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\UserServiceFacts.cs,ReturnsNullIfMultipleMatchesExist,The following statement contains a magic number: var conflictingUser = new User { Username = "User2"' Key = 2' EmailAddress = "new@example.org" };
Magic Number,NuGetGallery,TheChangeEmailMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\UserServiceFacts.cs,DoesNotLetYouUseSomeoneElsesConfirmedEmailAddress,The following statement contains a magic number: var conflictingUser = new User { EmailAddress = "new@example.com"' Key = 2 };
Magic Number,NuGetGallery,TheFindPackagesByIdMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedFindPackagesByIdReturnsUnlistedAndPrereleasePackages,The following statement contains a magic number: Assert.Equal(2' result.Count());
Magic Number,NuGetGallery,ThePackagesCollection,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedPackagesCountReturnsCorrectCountForDeletedPackages,The following statement contains a magic number: await V2FeedPackagesCountReturnsCorrectCount("Id eq 'Baz'"' 100' 0);
Magic Number,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsVersionsNewerThanListedVersion,The following statement contains a magic number: Assert.Equal(3' result.Length);
Magic Number,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsVersionsNewerThanListedVersion,The following statement contains a magic number: AssertPackage(new { Id = "Qux"' Version = "2.0" }' result[2]);
Magic Number,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsVersionsConformingToConstraints,The following statement contains a magic number: Assert.Equal(2' result.Length);
Magic Number,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesIgnoreInvalidVersionConstraints,The following statement contains a magic number: Assert.Equal(3' result.Length);
Magic Number,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesIgnoreInvalidVersionConstraints,The following statement contains a magic number: AssertPackage(new { Id = "Qux"' Version = "3.0" }' result[2]);
Magic Number,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsVersionsConformingToConstraintsWithMissingConstraintsForSomePackges,The following statement contains a magic number: Assert.Equal(2' result.Length);
Magic Number,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsUpdateIfAnyOfTheProvidedVersionsIsOlder,The following statement contains a magic number: Assert.Equal(2' result.Length);
Magic Number,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsPrereleasePackages,The following statement contains a magic number: Assert.Equal(3' result.Length);
Magic Number,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsPrereleasePackages,The following statement contains a magic number: AssertPackage(new { Id = "Qux"' Version = "2.0" }' result[2]);
Magic Number,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsResultsIfDuplicatesInPackageList,The following statement contains a magic number: Assert.Equal(4' result.Length);
Magic Number,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsResultsIfDuplicatesInPackageList,The following statement contains a magic number: AssertPackage(new { Id = "Foo"' Version = "1.2.0" }' result[2]);
Magic Number,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesReturnsResultsIfDuplicatesInPackageList,The following statement contains a magic number: AssertPackage(new { Id = "Qux"' Version = "2.0" }' result[3]);
Magic Number,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesFiltersByTargetFramework,The following statement contains a magic number: Assert.Equal(2' result.Length);
Magic Number,NuGetGallery,TheGetUpdatesMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\FeedServiceFacts.cs,V2FeedGetUpdatesFiltersIncludesHighestPrereleasePackage,The following statement contains a magic number: Assert.Equal(2' result.Length);
Magic Number,NuGetGallery,OwinAssert,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\TestUtils\OwinAssert.cs,WillRedirect,The following statement contains a magic number: Assert.Equal(302' context.Response.StatusCode);
Magic Number,NuGetGallery.Areas.Admin.Controllers,FactsBase,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Areas\Admin\Controllers\DeleteControllerFacts.cs,FactsBase,The following statement contains a magic number: _packages = new List<Package>()                  {                      new Package                      {                          Key = 2'                          PackageRegistration = new PackageRegistration                          {                              Id = "NuGet.Versioning"'                              Owners = new[]                              {                                  new User { Username = "microsoft" }'                                  new User { Username = "nuget" }'                              }                          }'                          NormalizedVersion = "4.4.0"'                      }'                      new Package                      {                          Key = 1'                          PackageRegistration = new PackageRegistration                          {                              Id = "NuGet.Versioning"'                              Owners = new[]                              {                                  new User { Username = "microsoft" }'                                  new User { Username = "nuget" }'                              }                          }'                          NormalizedVersion = "4.3.0"'                      }'                  };
Magic Number,NuGetGallery.Areas.Admin.Controllers,SecurityPolicyControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Areas\Admin\Controllers\SecurityPolicyControllerFacts.cs,SearchReturnsUserSubscriptions,The following statement contains a magic number: Assert.Equal(3' users.Count());
Magic Number,NuGetGallery.Areas.Admin.Controllers,SecurityPolicyControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Areas\Admin\Controllers\SecurityPolicyControllerFacts.cs,SearchReturnsUserSubscriptions,The following statement contains a magic number: Assert.Equal(1' users[2].Subscriptions.Count);
Magic Number,NuGetGallery.Areas.Admin.Controllers,SecurityPolicyControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Areas\Admin\Controllers\SecurityPolicyControllerFacts.cs,SearchReturnsUserSubscriptions,The following statement contains a magic number: Assert.True(users[2].Subscriptions.ContainsKey(subscriptionName));
Magic Number,NuGetGallery.Areas.Admin.Controllers,SecurityPolicyControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Areas\Admin\Controllers\SecurityPolicyControllerFacts.cs,SearchReturnsUserSubscriptions,The following statement contains a magic number: Assert.False(users[2].Subscriptions[subscriptionName]);
Magic Number,NuGetGallery.Areas.Admin.Controllers,SecurityPolicyControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Areas\Admin\Controllers\SecurityPolicyControllerFacts.cs,UpdateSubscribesUsers,The following statement contains a magic number: Assert.True(policyService.IsSubscribed(users[2]' subscription));
Magic Number,NuGetGallery.Areas.Admin.Controllers,SecurityPolicyControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Areas\Admin\Controllers\SecurityPolicyControllerFacts.cs,UpdateSubscribesUsers,The following statement contains a magic number: policyService.MockEntitiesContext.Verify(c => c.SaveChangesAsync()' Times.Exactly(2));
Magic Number,NuGetGallery.Areas.Admin.Controllers,SecurityPolicyControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Areas\Admin\Controllers\SecurityPolicyControllerFacts.cs,UpdateUnsubscribesUsers,The following statement contains a magic number: Assert.False(policyService.IsSubscribed(users[2]' subscription));
Magic Number,NuGetGallery.Areas.Admin.Controllers,SecurityPolicyControllerFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Areas\Admin\Controllers\SecurityPolicyControllerFacts.cs,UpdateUnsubscribesUsers,The following statement contains a magic number: policyService.MockEntitiesContext.Verify(c => c.SaveChangesAsync()' Times.Exactly(2));
Magic Number,NuGetGallery.Areas.Admin.Services,FactsBase,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Areas\Admin\Services\ValidationAdminServiceFacts.cs,FactsBase,The following statement contains a magic number: _packageKey = 42;
Magic Number,NuGetGallery.Areas.Admin.Services,FactsBase,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Areas\Admin\Services\ValidationAdminServiceFacts.cs,FactsBase,The following statement contains a magic number: _validationSetKey = 1001;
Magic Number,NuGetGallery.Authentication,TheAuthenticateMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,GivenMatchingApiKeyCredentialThatWasLastUsedTooLongAgo_ItReturnsNullAndExpiresTheApiKeyAndWritesAuditRecord,The following statement contains a magic number: configurationService.Current.ExpirationInDaysForApiKeyV1 = 10;
Magic Number,NuGetGallery.Authentication,TheAuthenticateMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,GivenMatchingApiKeyCredentialThatWasLastUsedTooLongAgo_ItReturnsNullAndExpiresTheApiKeyAndWritesAuditRecord,The following statement contains a magic number: cred.LastUsed = DateTime.UtcNow.AddDays(-20);
Magic Number,NuGetGallery.Authentication,TheAuthenticateMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,GivenMultipleMatchingCredentials_ItThrows,The following statement contains a magic number: cred.Key = 42;
Magic Number,NuGetGallery.Authentication,TheAuthenticateMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,WhenUserLoginFailsAfterFailureUserRecordIsUpdatedWithFailureDetails,The following statement contains a magic number: _fakes.User.FailedLoginCount = 7;
Magic Number,NuGetGallery.Authentication,TheAuthenticateMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,WhenUserLoginFailsAfterFailureUserRecordIsUpdatedWithFailureDetails,The following statement contains a magic number: Assert.Equal(8' _fakes.User.FailedLoginCount);
Magic Number,NuGetGallery.Authentication,TheAuthenticateMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,WhenUserLoginSucceedsAfterFailureFailureDetailsAreReset,The following statement contains a magic number: user.FailedLoginCount = 8;
Magic Number,NuGetGallery.Authentication,TheAuthenticateMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,WhenUserLoginSucceedsAfterFailureFailureDetailsAreReset,The following statement contains a magic number: _dateTimeProviderMock.SetupGet(x => x.UtcNow).Returns(user.LastFailedLoginUtc.Value + TimeSpan.FromSeconds(10));
Magic Number,NuGetGallery.Authentication,TheRegisterMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,SetsCreatedDate,The following statement contains a magic number: Assert.True((DateTime.UtcNow - authUser.User.CreatedUtc) < TimeSpan.FromSeconds(5));
Magic Number,NuGetGallery.Authentication,TheGeneratePasswordResetTokenMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,ReturnsUserNotFoundTypeIfUserDoesNotExist,The following statement contains a magic number: var result = await authService.GeneratePasswordResetToken("nobody@nowhere.com"' 1440);
Magic Number,NuGetGallery.Authentication,TheGeneratePasswordResetTokenMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,ReturnsUserNotConfirmedTypeIfUserIsNotConfirmed,The following statement contains a magic number: var result = await authService.GeneratePasswordResetToken(user.Username' 1440);
Magic Number,NuGetGallery.Authentication,TheGeneratePasswordResetTokenMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,SetsPasswordResetTokenUsingEmail,The following statement contains a magic number: var result = await authService.GeneratePasswordResetToken(user.EmailAddress' 1440);
Magic Number,NuGetGallery.Authentication,TheGeneratePasswordResetTokenMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,SetsPasswordResetTokenUsingEmail,The following statement contains a magic number: Assert.True(user.PasswordResetTokenExpirationDate >= currentDate.AddMinutes(1440));
Magic Number,NuGetGallery.Authentication,TheGeneratePasswordResetTokenMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,WithExistingNotYetExpiredTokenReturnsExistingToken,The following statement contains a magic number: var result = await authService.GeneratePasswordResetToken(user.EmailAddress' 1440);
Magic Number,NuGetGallery.Authentication,TheGeneratePasswordResetTokenMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,WithExistingExpiredTokenReturnsNewToken,The following statement contains a magic number: var result = await authService.GeneratePasswordResetToken(user.EmailAddress' 1440);
Magic Number,NuGetGallery.Authentication,TheGeneratePasswordResetTokenMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,WithExistingExpiredTokenReturnsNewToken,The following statement contains a magic number: Assert.True(user.PasswordResetTokenExpirationDate >= currentDate.AddMinutes(1440));
Magic Number,NuGetGallery.Authentication,TheGeneratePasswordResetTokenMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,WritesAuditRecordWhenGeneratingNewToken,The following statement contains a magic number: var returnedUser = await authService.GeneratePasswordResetToken(user.EmailAddress' 1440);
Magic Number,NuGetGallery.Authentication,TheDescribeCredentialMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,GivenATokenCredential_LegacyApiKey_ItDescribesItCorrectly,The following statement contains a magic number: const int expirationForApiKeyV1 = 365;
Magic Number,NuGetGallery.Authentication,TheDescribeCredentialMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,GivenATokenCredential_ScopedApiKey_ItDescribesItCorrectly,The following statement contains a magic number: Assert.True(description.Scopes.Count == 2);
Magic Number,NuGetGallery.Authentication,TheEditCredentialMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,SavesChangesInTheDataStore,The following statement contains a magic number: var credscopes =                      Enumerable.Range(0' 5)                          .Select(                              i => new Scope { AllowedAction = NuGetScopes.PackagePush' Key = i' Subject = "package" + i }).ToList();
Magic Number,NuGetGallery.Authentication,TheEditCredentialMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,SavesChangesInTheDataStore,The following statement contains a magic number: var newScopes =                      Enumerable.Range(1' 2)                          .Select(                              i => new Scope { AllowedAction = NuGetScopes.PackageUnlist' Key = i * 10' Subject = "otherpackage" + i }).ToList();
Magic Number,NuGetGallery.Authentication,TheEditCredentialMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,SavesChangesInTheDataStore,The following statement contains a magic number: var newScopes =                      Enumerable.Range(1' 2)                          .Select(                              i => new Scope { AllowedAction = NuGetScopes.PackageUnlist' Key = i * 10' Subject = "otherpackage" + i }).ToList();
Magic Number,NuGetGallery.Authentication,TheEditCredentialMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,SavesChangesInTheDataStore,The following statement contains a magic number: entities.Scopes.Add(new Scope { AllowedAction = NuGetScopes.PackagePush' Key = 999' Subject = "package999" });
Magic Number,NuGetGallery.Authentication,TheEditCredentialMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\AuthenticationServiceFacts.cs,SavesChangesInTheDataStore,The following statement contains a magic number: Assert.True(authService.Entities.Scopes.First().Key == 999);
Magic Number,NuGetGallery.Authentication,V3HasherTests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\Authentication\V3HasherTests.cs,ProcessingTimesForSuccessfulAuthAndFailedAuthAreSimilar,The following statement contains a magic number: double allowedDiffPercent = 0.05;
Magic Number,NuGetGallery.Authentication,V3HasherTests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\Authentication\V3HasherTests.cs,ProcessingTimesForSuccessfulAuthAndFailedAuthAreSimilar,The following statement contains a magic number: int repetitions = 1000;
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheApplyResponseChallengeAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenANon401ResponseInActiveMode_ItPassesThrough,The following statement contains a magic number: handler.OwinContext.Response.StatusCode = 200;
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheApplyResponseChallengeAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenANon401ResponseInActiveMode_ItPassesThrough,The following statement contains a magic number: Assert.Equal(200' handler.OwinContext.Response.StatusCode);
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheApplyResponseChallengeAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenA401ResponseInPassiveModeWithoutMatchingAuthenticationType_ItPassesThrough,The following statement contains a magic number: handler.OwinContext.Response.StatusCode = 401;
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheApplyResponseChallengeAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenA401ResponseInPassiveModeWithoutMatchingAuthenticationType_ItPassesThrough,The following statement contains a magic number: Assert.Equal(401' handler.OwinContext.Response.StatusCode);
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheApplyResponseChallengeAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenA401ResponseInPassiveModeWithMatchingAuthenticationTypeAndNoHeader_ItWrites401WithApiKeyRequiredMessage,The following statement contains a magic number: handler.OwinContext.Response.StatusCode = 401;
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheApplyResponseChallengeAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenA401ResponseInPassiveModeWithMatchingAuthenticationTypeAndNoHeader_ItWrites401WithApiKeyRequiredMessage,The following statement contains a magic number: Assert.Equal(401' handler.OwinContext.Response.StatusCode);
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheApplyResponseChallengeAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenA401ResponseInPassiveModeWithMatchingAuthenticationTypeAndHeader_ItReturnsApiKeyNotAuthorized,The following statement contains a magic number: handler.OwinContext.Response.StatusCode = 401;
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheApplyResponseChallengeAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenA401ResponseInPassiveModeWithMatchingAuthenticationTypeAndHeader_ItReturnsApiKeyNotAuthorized,The following statement contains a magic number: Assert.Equal(403' handler.OwinContext.Response.StatusCode);
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheApplyResponseChallengeAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenA401ResponseInActiveModeAndNoHeader_ItReturns401ApiKeyRequired,The following statement contains a magic number: handler.OwinContext.Response.StatusCode = 401;
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheApplyResponseChallengeAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenA401ResponseInActiveModeAndNoHeader_ItReturns401ApiKeyRequired,The following statement contains a magic number: Assert.Equal(401' handler.OwinContext.Response.StatusCode);
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheApplyResponseChallengeAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenA401ResponseInActiveModeAndHeader_ItReturns403ApiKeyNotAuthorized,The following statement contains a magic number: handler.OwinContext.Response.StatusCode = 401;
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheApplyResponseChallengeAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenA401ResponseInActiveModeAndHeader_ItReturns403ApiKeyNotAuthorized,The following statement contains a magic number: Assert.Equal(403' handler.OwinContext.Response.StatusCode);
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheAuthenticateCoreAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenMatchingApiKey_ItReturnsTicketWithClaims,The following statement contains a magic number: apiKeyCredential.Key = 99;
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheAuthenticateCoreAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenMatchingApiKeyWithOwnerScopeOfSelf_ItSetsUserInOwinEnvironment,The following statement contains a magic number: var user = new User { Key = 1234' Username = "theUser"' EmailAddress = "confirmed@example.com" };
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheAuthenticateCoreAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenMatchingApiKeyWithOwnerScopeOfSelf_ItSetsUserInOwinEnvironment,The following statement contains a magic number: apiKeyCredential.Scopes.Add(new Scope(1234' "thePackage"' "theAction"));
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheAuthenticateCoreAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenMatchingApiKeyWithOwnerScopeOfOrganization_ItSetsUserInOwinEnvironment,The following statement contains a magic number: var organization = new Organization() { Key = 2345 };
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheAuthenticateCoreAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenMatchingApiKeyWithOwnerScopeOfOrganization_ItSetsUserInOwinEnvironment,The following statement contains a magic number: var user = new User { Key = 1234' Username = "theUser"' EmailAddress = "confirmed@example.com" };
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheAuthenticateCoreAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenMatchingApiKeyWithOwnerScopeOfOrganization_ItSetsUserInOwinEnvironment,The following statement contains a magic number: user.Organizations.Add(new Membership                  {                      OrganizationKey = 2345'                      Organization = organization'                      IsAdmin = isAdmin                  });
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheAuthenticateCoreAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenMatchingApiKeyWithOwnerScopeOfOrganization_ItSetsUserInOwinEnvironment,The following statement contains a magic number: apiKeyCredential.Scopes.Add(new Scope(2345' "thePackage"' "theAction"));
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheAuthenticateCoreAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenApiKeyWithOwnerScopeThatDoesNotMatch_WritesUnauthorizedResponse,The following statement contains a magic number: var user = new User { Key = 1234' Username = "theUser"' EmailAddress = "confirmed@example.com" };
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheAuthenticateCoreAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenApiKeyWithOwnerScopeThatDoesNotMatch_WritesUnauthorizedResponse,The following statement contains a magic number: apiKeyCredential.Scopes.Add(new Scope(2345' "thePackage"' "theAction"));
Magic Number,NuGetGallery.Authentication.Providers.ApiKey,TheAuthenticateCoreAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Authentication\Providers\ApiKey\ApiKeyAuthenticationHandlerFacts.cs,GivenApiKeyWithOwnerScopeThatDoesNotMatch_WritesUnauthorizedResponse,The following statement contains a magic number: Assert.Equal(403' handler.OwinContext.Response.StatusCode);
Magic Number,NuGetGallery.Controllers,TheJsonMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\AppControllerFacts.cs,AllowsJsonRequestBehaviorToBeSpecified,The following statement contains a magic number: var output = controller.Json(400' null' JsonRequestBehavior.AllowGet);
Magic Number,NuGetGallery.Controllers,TheJsonMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\AppControllerFacts.cs,DefaultsToDenyGet,The following statement contains a magic number: var output = controller.Json(400' null);
Magic Number,NuGetGallery.Controllers,TheLogOnAction,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Controllers\AuthenticationControllerFacts.cs,GivenNoAuthenticatedUser_ItLoadsProvidersIntoViewModelAndDisplaysLogOnView,The following statement contains a magic number: Assert.Equal(2' model.Providers.Count);
Magic Number,NuGetGallery.Extensions,TheAllowsActionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Extensions\ScopeExtensionsFacts.cs,WhenRequestedActionIsNullOrEmpty_ReturnsTrue,The following statement contains a magic number: var scope = new Scope(1234' "subject"' "action");
Magic Number,NuGetGallery.Extensions,TheAllowsActionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Extensions\ScopeExtensionsFacts.cs,WhenScopeActionIsNullOrEmpty_ReturnsTrue,The following statement contains a magic number: var scope = new Scope(1234' "subject"' scopeAction);
Magic Number,NuGetGallery.Extensions,TheAllowsActionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Extensions\ScopeExtensionsFacts.cs,WhenScopeActionEquals_ReturnsTrue,The following statement contains a magic number: var scope = new Scope(1234' "subject"' "action");
Magic Number,NuGetGallery.Extensions,TheAllowsActionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Extensions\ScopeExtensionsFacts.cs,WhenScopeActionIsAll_ReturnsTrue,The following statement contains a magic number: var scope = new Scope(1234' "subject"' NuGetScopes.All);
Magic Number,NuGetGallery.Extensions,TheAllowsSubjectMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Extensions\ScopeExtensionsFacts.cs,WhenSubjectMatches_ReturnsTrue,The following statement contains a magic number: var scope = new Scope(1234' scopeSubject' "action");
Magic Number,NuGetGallery.Extensions,TheAllowsSubjectMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Extensions\ScopeExtensionsFacts.cs,WhenSubjectDoesNotMatch_ReturnsFalse,The following statement contains a magic number: var scope = new Scope(1234' scopeSubject' "action");
Magic Number,NuGetGallery.Extensions,TheHasOwnerScopeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Extensions\ScopeExtensionsFacts.cs,WhenHasOwnerScope_ReturnsTrue,The following statement contains a magic number: var scope = new Scope(1234' "subject"' "action");
Magic Number,NuGetGallery.Extensions,TheMemberMatchesOwnerScopeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Extensions\UserExtensionsFacts.cs,WhenApiKeyWithDirectMatchingOwnerScope_ReturnsTrue,The following statement contains a magic number: var user = new User() { Key = 1234 };
Magic Number,NuGetGallery.Extensions,TheMemberMatchesOwnerScopeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Extensions\UserExtensionsFacts.cs,WhenApiKeyWithDirectMatchingOwnerScope_ReturnsTrue,The following statement contains a magic number: var credential = new Credential(CredentialTypes.ApiKey.V2' "")                  {                      Scopes = new[] { new Scope(1234' "subject"' "allowedAction") }                  };
Magic Number,NuGetGallery.Extensions,TheMemberMatchesOwnerScopeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Extensions\UserExtensionsFacts.cs,WhenApiKeyWithIndirectMatchingOwnerScope_ReturnsTrue,The following statement contains a magic number: var organization = new Organization() { Key = 2345 };
Magic Number,NuGetGallery.Extensions,TheMemberMatchesOwnerScopeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Extensions\UserExtensionsFacts.cs,WhenApiKeyWithIndirectMatchingOwnerScope_ReturnsTrue,The following statement contains a magic number: var user = new User() { Key = 1234 };
Magic Number,NuGetGallery.Extensions,TheMemberMatchesOwnerScopeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Extensions\UserExtensionsFacts.cs,WhenApiKeyWithIndirectMatchingOwnerScope_ReturnsTrue,The following statement contains a magic number: var credential = new Credential(CredentialTypes.ApiKey.V2' "")                  {                      Scopes = new[] { new Scope(2345' "subject"' "allowedAction") }                  };
Magic Number,NuGetGallery.Extensions,TheMemberMatchesOwnerScopeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Extensions\UserExtensionsFacts.cs,WhenApiKeyWithNonMatchingOwnerScopes_ReturnsFalse,The following statement contains a magic number: var user = new User() { Key = 1234 };
Magic Number,NuGetGallery.Extensions,TheMemberMatchesOwnerScopeMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Extensions\UserExtensionsFacts.cs,WhenApiKeyWithNonMatchingOwnerScopes_ReturnsFalse,The following statement contains a magic number: var credential = new Credential(CredentialTypes.ApiKey.V2' "")                  {                      Scopes = new[] { new Scope(2345' "subject"' "allowedAction") }                  };
Magic Number,NuGetGallery.Filters,ApiAuthorizeAttributeFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Filters\ApiAuthorizeAttributeFacts.cs,OnAuthorization_Returns401ForUnauthenticatedUser,The following statement contains a magic number: Assert.Equal(401' owinContext.Response.StatusCode);
Magic Number,NuGetGallery.Framework,Fakes,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Framework\Fakes.cs,Fakes,The following statement contains a magic number: var key = 39;
Magic Number,NuGetGallery.Infrastructure,UserAuditRecordFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\UserAuditRecordFacts.cs,FiltersOutUnsupportedCredentials,The following statement contains a magic number: Assert.Equal(7' auditRecords.Count);
Magic Number,NuGetGallery.Infrastructure,UserAuditRecordFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\UserAuditRecordFacts.cs,FiltersOutUnsupportedCredentials,The following statement contains a magic number: Assert.True(auditRecords.ContainsKey(credentials[2].Type));
Magic Number,NuGetGallery.Infrastructure,UserAuditRecordFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\UserAuditRecordFacts.cs,FiltersOutUnsupportedCredentials,The following statement contains a magic number: Assert.True(auditRecords.ContainsKey(credentials[3].Type));
Magic Number,NuGetGallery.Infrastructure,UserAuditRecordFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\UserAuditRecordFacts.cs,FiltersOutUnsupportedCredentials,The following statement contains a magic number: Assert.True(auditRecords.ContainsKey(credentials[4].Type));
Magic Number,NuGetGallery.Infrastructure,UserAuditRecordFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\UserAuditRecordFacts.cs,FiltersOutUnsupportedCredentials,The following statement contains a magic number: Assert.True(auditRecords.ContainsKey(credentials[5].Type));
Magic Number,NuGetGallery.Infrastructure,UserAuditRecordFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\UserAuditRecordFacts.cs,FiltersOutUnsupportedCredentials,The following statement contains a magic number: Assert.True(auditRecords.ContainsKey(credentials[6].Type));
Magic Number,NuGetGallery.Infrastructure,TheLoadTempDataMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\CookieTempDataProviderFacts.cs,RetrievesValuesFromCookie,The following statement contains a magic number: Assert.Equal(2' tempData.Count);
Magic Number,NuGetGallery.Infrastructure,TheLoadTempDataMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\CookieTempDataProviderFacts.cs,DoesNotThrowWhenKeyValuesFromCookieContainsNullKey,The following statement contains a magic number: Assert.Equal(2' tempData.Count);
Magic Number,NuGetGallery.Infrastructure,TheSaveTempDataMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\CookieTempDataProviderFacts.cs,StoresValuesInCookie,The following statement contains a magic number: provider.SaveTempData(                      controllerContext'                      new Dictionary<string' object>(StringComparer.OrdinalIgnoreCase)                          {                              { "message"' "Say hello to my little friend" }'                              { "key2"' 123 }'                              { "key3"' "dumb&dumber?:;'isit" }                          });
Magic Number,NuGetGallery.Infrastructure,TheSaveTempDataMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\CookieTempDataProviderFacts.cs,StoresValuesInCookie,The following statement contains a magic number: Assert.Equal(3' cookies[0].Values.Count);
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchAPackageByDescription,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 3'                      PackageRegistrationKey = 1'                      PackageRegistration = new PackageRegistration                      {                          Id = "Package #1"'                          IsVerified = false                      }'                      Title = "Package #1 4.2.0"'                      Description = "Package #1 is an awesome package"'                      Listed = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsPrerelease = true'                      DownloadCount = 100'                      FlattenedAuthors = ""'                      SupportedFrameworks =                      {                          new PackageFramework { TargetFramework = "net45" }'                      }                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchAPackageByDescription,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 3'                      PackageRegistrationKey = 1'                      PackageRegistration = new PackageRegistration                      {                          Id = "Package #1"'                          IsVerified = false                      }'                      Title = "Package #1 4.2.0"'                      Description = "Package #1 is an awesome package"'                      Listed = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsPrerelease = true'                      DownloadCount = 100'                      FlattenedAuthors = ""'                      SupportedFrameworks =                      {                          new PackageFramework { TargetFramework = "net45" }'                      }                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchAPackageByDescription,The following statement contains a magic number: Assert.Equal(3' results[0].Key);
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,ResultsIncludeVersionAndNormalizedVersion,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 3'                      PackageRegistrationKey = 1'                      Version = "01.02.03"'                      NormalizedVersion = "1.2.3"'                      PackageRegistration = new PackageRegistration                      {                          Id = "Package #1"'                          IsVerified = false                      }'                      Title = "Package #1 4.2.0"'                      Description = "Package #1 is an awesome package"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      IsPrerelease = true'                      DownloadCount = 100'                      FlattenedAuthors = ""'                      SupportedFrameworks =                      {                          new PackageFramework { TargetFramework = "net45" }'                      }                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,ResultsIncludeVersionAndNormalizedVersion,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 3'                      PackageRegistrationKey = 1'                      Version = "01.02.03"'                      NormalizedVersion = "1.2.3"'                      PackageRegistration = new PackageRegistration                      {                          Id = "Package #1"'                          IsVerified = false                      }'                      Title = "Package #1 4.2.0"'                      Description = "Package #1 is an awesome package"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      IsPrerelease = true'                      DownloadCount = 100'                      FlattenedAuthors = ""'                      SupportedFrameworks =                      {                          new PackageFramework { TargetFramework = "net45" }'                      }                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,ResultsIncludeVersionAndNormalizedVersionEvenIfNormalizedVersionColumnNull,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 3'                      PackageRegistrationKey = 1'                      Version = "01.02.03"'                      PackageRegistration = new PackageRegistration                      {                          Id = "Package #1"'                          IsVerified = false                      }'                      Title = "Package #1 4.2.0"'                      Description = "Package #1 is an awesome package"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      IsPrerelease = true'                      DownloadCount = 100'                      FlattenedAuthors = ""'                      SupportedFrameworks =                      {                          new PackageFramework { TargetFramework = "net45" }'                      }                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,ResultsIncludeVersionAndNormalizedVersionEvenIfNormalizedVersionColumnNull,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 3'                      PackageRegistrationKey = 1'                      Version = "01.02.03"'                      PackageRegistration = new PackageRegistration                      {                          Id = "Package #1"'                          IsVerified = false                      }'                      Title = "Package #1 4.2.0"'                      Description = "Package #1 is an awesome package"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      IsPrerelease = true'                      DownloadCount = 100'                      FlattenedAuthors = ""'                      SupportedFrameworks =                      {                          new PackageFramework { TargetFramework = "net45" }'                      }                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchDavid123For12,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 49246'                      PackageRegistrationKey = 11500'                      PackageRegistration = new PackageRegistration                      {                          Id = "DavidTest123"'                          Key = 11500'                          DownloadCount = 495'                          IsVerified = false                      }'                      Description = "Description"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "DavidX"'                      Title = "DavidTest123"'                      Version = "1.1"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchDavid123For12,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 49246'                      PackageRegistrationKey = 11500'                      PackageRegistration = new PackageRegistration                      {                          Id = "DavidTest123"'                          Key = 11500'                          DownloadCount = 495'                          IsVerified = false                      }'                      Description = "Description"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "DavidX"'                      Title = "DavidTest123"'                      Version = "1.1"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchDavid123For12,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 49246'                      PackageRegistrationKey = 11500'                      PackageRegistration = new PackageRegistration                      {                          Id = "DavidTest123"'                          Key = 11500'                          DownloadCount = 495'                          IsVerified = false                      }'                      Description = "Description"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "DavidX"'                      Title = "DavidTest123"'                      Version = "1.1"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchDavid123For12,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 49246'                      PackageRegistrationKey = 11500'                      PackageRegistration = new PackageRegistration                      {                          Id = "DavidTest123"'                          Key = 11500'                          DownloadCount = 495'                          IsVerified = false                      }'                      Description = "Description"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "DavidX"'                      Title = "DavidTest123"'                      Version = "1.1"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchWithWordStemming,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "SuperzipLib"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Library for compressing your filez"'                      Listed = true'                      IsLatest = true'                      IsLatestStable = true'                      FlattenedAuthors = "Eric"'                      Title = "SuperzipLib"'                      Version = "1.1.2"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchWithWordStemming,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "SuperzipLib"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Library for compressing your filez"'                      Listed = true'                      IsLatest = true'                      IsLatestStable = true'                      FlattenedAuthors = "Eric"'                      Title = "SuperzipLib"'                      Version = "1.1.2"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchWithWordStemming,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "SuperzipLib"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Library for compressing your filez"'                      Listed = true'                      IsLatest = true'                      IsLatestStable = true'                      FlattenedAuthors = "Eric"'                      Title = "SuperzipLib"'                      Version = "1.1.2"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchWithWordStemming,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "SuperzipLib"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Library for compressing your filez"'                      Listed = true'                      IsLatest = true'                      IsLatestStable = true'                      FlattenedAuthors = "Eric"'                      Title = "SuperzipLib"'                      Version = "1.1.2"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingCombinedIdAndGeneralTerms,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "RedDeath"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Yeah"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Eric I"'                      Title = "Red Death"'                      Version = "1.1.2"'                  }'                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "RedHerring"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Library for compressing your filez"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Eric II"'                      Title = "Red Herring"'                      Version = "1.1.2"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingCombinedIdAndGeneralTerms,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "RedDeath"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Yeah"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Eric I"'                      Title = "Red Death"'                      Version = "1.1.2"'                  }'                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "RedHerring"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Library for compressing your filez"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Eric II"'                      Title = "Red Herring"'                      Version = "1.1.2"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingCombinedIdAndGeneralTerms,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "RedDeath"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Yeah"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Eric I"'                      Title = "Red Death"'                      Version = "1.1.2"'                  }'                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "RedHerring"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Library for compressing your filez"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Eric II"'                      Title = "Red Herring"'                      Version = "1.1.2"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingCombinedIdAndGeneralTerms,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "RedDeath"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Yeah"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Eric I"'                      Title = "Red Death"'                      Version = "1.1.2"'                  }'                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "RedHerring"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Library for compressing your filez"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Eric II"'                      Title = "Red Herring"'                      Version = "1.1.2"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingCombinedIdAndGeneralTerms,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "RedDeath"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Yeah"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Eric I"'                      Title = "Red Death"'                      Version = "1.1.2"'                  }'                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "RedHerring"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Library for compressing your filez"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Eric II"'                      Title = "Red Herring"'                      Version = "1.1.2"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingCombinedIdAndGeneralTerms,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "RedDeath"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Yeah"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Eric I"'                      Title = "Red Death"'                      Version = "1.1.2"'                  }'                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "RedHerring"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Library for compressing your filez"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Eric II"'                      Title = "Red Herring"'                      Version = "1.1.2"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingCombinedIdAndGeneralTerms,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "RedDeath"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Yeah"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Eric I"'                      Title = "Red Death"'                      Version = "1.1.2"'                  }'                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "RedHerring"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Library for compressing your filez"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Eric II"'                      Title = "Red Herring"'                      Version = "1.1.2"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingCombinedIdAndGeneralTerms,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "RedDeath"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Yeah"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Eric I"'                      Title = "Red Death"'                      Version = "1.1.2"'                  }'                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "RedHerring"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "Library for compressing your filez"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Eric II"'                      Title = "Red Herring"'                      Version = "1.1.2"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingExactPackageId,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "M S C"'                      Tags = "NuGetTag"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description =                          "This isn't really NuGet.Core. The confusing package ID is the test!"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingExactPackageId,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "M S C"'                      Tags = "NuGetTag"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description =                          "This isn't really NuGet.Core. The confusing package ID is the test!"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingExactPackageId,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "M S C"'                      Tags = "NuGetTag"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description =                          "This isn't really NuGet.Core. The confusing package ID is the test!"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingExactPackageId,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "M S C"'                      Tags = "NuGetTag"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description =                          "This isn't really NuGet.Core. The confusing package ID is the test!"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingExactPackageId,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "M S C"'                      Tags = "NuGetTag"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description =                          "This isn't really NuGet.Core. The confusing package ID is the test!"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingExactPackageId,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "M S C"'                      Tags = "NuGetTag"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description =                          "This isn't really NuGet.Core. The confusing package ID is the test!"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingExactPackageId,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "M S C"'                      Tags = "NuGetTag"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description =                          "This isn't really NuGet.Core. The confusing package ID is the test!"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingExactPackageId,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "M S C"'                      Tags = "NuGetTag"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description =                          "This isn't really NuGet.Core. The confusing package ID is the test!"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingExactPackageId,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "M S C"'                      Tags = "NuGetTag"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description =                          "This isn't really NuGet.Core. The confusing package ID is the test!"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingExactPackageId,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "M S C"'                      Tags = "NuGetTag"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 25'                          IsVerified = false                      }'                      Description =                          "This isn't really NuGet.Core. The confusing package ID is the test!"'                      DownloadCount = 3'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingExactPackageId,The following statement contains a magic number: Assert.Equal(2' results.Count);
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingExactPackageId,The following statement contains a magic number: Assert.Equal(144' results[0].Key);
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingExactPackageId,The following statement contains a magic number: Assert.Equal(12' results[0].PackageRegistrationKey);
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsingExactPackageId,The following statement contains a magic number: Assert.Equal(12' results[0].PackageRegistration.Key);
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchForNuGetCoreWithExactField,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false'                          Owners = { new User { Username = "NugetCoreOwner" } }'                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet that the rest of NuGet builds upon."'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                      Tags = "dotnet"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 2'                          IsVerified = false'                          Owners = { new User { Username = "SomeOtherOwner" } }'                      }'                      Description = "This isn't really NuGet.Core. But it needs to look a bit like it for the test case!"'                      Listed = true'                      IsLatest = true'                      IsLatestStable = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                      Tags = "javascript"                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchForNuGetCoreWithExactField,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false'                          Owners = { new User { Username = "NugetCoreOwner" } }'                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet that the rest of NuGet builds upon."'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                      Tags = "dotnet"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 2'                          IsVerified = false'                          Owners = { new User { Username = "SomeOtherOwner" } }'                      }'                      Description = "This isn't really NuGet.Core. But it needs to look a bit like it for the test case!"'                      Listed = true'                      IsLatest = true'                      IsLatestStable = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                      Tags = "javascript"                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchForNuGetCoreWithExactField,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false'                          Owners = { new User { Username = "NugetCoreOwner" } }'                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet that the rest of NuGet builds upon."'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                      Tags = "dotnet"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 2'                          IsVerified = false'                          Owners = { new User { Username = "SomeOtherOwner" } }'                      }'                      Description = "This isn't really NuGet.Core. But it needs to look a bit like it for the test case!"'                      Listed = true'                      IsLatest = true'                      IsLatestStable = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                      Tags = "javascript"                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchForNuGetCoreWithExactField,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false'                          Owners = { new User { Username = "NugetCoreOwner" } }'                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet that the rest of NuGet builds upon."'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                      Tags = "dotnet"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 2'                          IsVerified = false'                          Owners = { new User { Username = "SomeOtherOwner" } }'                      }'                      Description = "This isn't really NuGet.Core. But it needs to look a bit like it for the test case!"'                      Listed = true'                      IsLatest = true'                      IsLatestStable = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                      Tags = "javascript"                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchForNuGetCoreWithExactField,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false'                          Owners = { new User { Username = "NugetCoreOwner" } }'                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet that the rest of NuGet builds upon."'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                      Tags = "dotnet"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 2'                          IsVerified = false'                          Owners = { new User { Username = "SomeOtherOwner" } }'                      }'                      Description = "This isn't really NuGet.Core. But it needs to look a bit like it for the test case!"'                      Listed = true'                      IsLatest = true'                      IsLatestStable = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                      Tags = "javascript"                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchForNuGetCoreWithExactField,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false'                          Owners = { new User { Username = "NugetCoreOwner" } }'                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet that the rest of NuGet builds upon."'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                      Tags = "dotnet"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 2'                          IsVerified = false'                          Owners = { new User { Username = "SomeOtherOwner" } }'                      }'                      Description = "This isn't really NuGet.Core. But it needs to look a bit like it for the test case!"'                      Listed = true'                      IsLatest = true'                      IsLatestStable = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                      Tags = "javascript"                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchForNuGetCoreWithExactField,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false'                          Owners = { new User { Username = "NugetCoreOwner" } }'                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet that the rest of NuGet builds upon."'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                      Tags = "dotnet"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 2'                          IsVerified = false'                          Owners = { new User { Username = "SomeOtherOwner" } }'                      }'                      Description = "This isn't really NuGet.Core. But it needs to look a bit like it for the test case!"'                      Listed = true'                      IsLatest = true'                      IsLatestStable = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                      Tags = "javascript"                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchForNuGetCoreWithExactField,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false'                          Owners = { new User { Username = "NugetCoreOwner" } }'                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet that the rest of NuGet builds upon."'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                      Tags = "dotnet"'                  }'                  new Package                  {                      Key = 145'                      PackageRegistrationKey = 13'                      PackageRegistration = new PackageRegistration                      {                          Id = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                          Key = 13'                          DownloadCount = 2'                          IsVerified = false'                          Owners = { new User { Username = "SomeOtherOwner" } }'                      }'                      Description = "This isn't really NuGet.Core. But it needs to look a bit like it for the test case!"'                      Listed = true'                      IsLatest = true'                      IsLatestStable = true'                      FlattenedAuthors = "Laugh"'                      Title = "SomeotherNuGet.Core.SimilarlyNamedPackage"'                      Version = "1.5.20902.9026"'                      Tags = "javascript"                  }              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchForJQueryUICombinedWithPartialId,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "JQuery.UI.Combined"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "jQuery UI is etc etc and many more important things"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      Title = "JQuery UI (Combined Blobbary)"'                      Tags = "web javascript"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchForJQueryUICombinedWithPartialId,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "JQuery.UI.Combined"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "jQuery UI is etc etc and many more important things"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      Title = "JQuery UI (Combined Blobbary)"'                      Tags = "web javascript"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchForJQueryUICombinedWithPartialId,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "JQuery.UI.Combined"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "jQuery UI is etc etc and many more important things"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      Title = "JQuery UI (Combined Blobbary)"'                      Tags = "web javascript"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchForJQueryUICombinedWithPartialId,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "JQuery.UI.Combined"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "jQuery UI is etc etc and many more important things"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      Title = "JQuery UI (Combined Blobbary)"'                      Tags = "web javascript"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchForDegenerateSingleQuoteQuery,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "JQuery.UI.Combined"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "jQuery UI is etc etc and many more important things"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      Title = "JQuery UI (Combined Blobbary)"'                      Tags = "web javascript"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchForDegenerateSingleQuoteQuery,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "JQuery.UI.Combined"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "jQuery UI is etc etc and many more important things"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      Title = "JQuery UI (Combined Blobbary)"'                      Tags = "web javascript"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchForDegenerateSingleQuoteQuery,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "JQuery.UI.Combined"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "jQuery UI is etc etc and many more important things"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      Title = "JQuery UI (Combined Blobbary)"'                      Tags = "web javascript"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchForDegenerateSingleQuoteQuery,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "JQuery.UI.Combined"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "jQuery UI is etc etc and many more important things"'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      Title = "JQuery UI (Combined Blobbary)"'                      Tags = "web javascript"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsesPackageRegistrationDownloadCountsToPrioritize,The following statement contains a magic number: var packages = new List<Package>                  {                      new Package                      {                          Key = 145'                          PackageRegistrationKey = 13'                          PackageRegistration = new PackageRegistration                          {                              Id = "FooQuery"'                              Key = 13'                              DownloadCount = 21'                              IsVerified = false                          }'                          Description = "FooQuery is overall much less popular than JQuery UI"'                          DownloadCount = 5'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "FooQuery"'                          Tags = "web javascript"'                      }'                      new Package                      {                          Key = 144'                          PackageRegistrationKey = 12'                          PackageRegistration = new PackageRegistration                          {                              Id = "JQuery.UI.Combined"'                              Key = 12'                              DownloadCount = 42'                              IsVerified = false                          }'                          DownloadCount = 3'                          Description = "jQuery UI has only a few downloads of its latest and greatest version' but many total downloads"'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "JQuery UI (Combined Blobbary)"'                          Tags = "web javascript"'                      }'                  };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsesPackageRegistrationDownloadCountsToPrioritize,The following statement contains a magic number: var packages = new List<Package>                  {                      new Package                      {                          Key = 145'                          PackageRegistrationKey = 13'                          PackageRegistration = new PackageRegistration                          {                              Id = "FooQuery"'                              Key = 13'                              DownloadCount = 21'                              IsVerified = false                          }'                          Description = "FooQuery is overall much less popular than JQuery UI"'                          DownloadCount = 5'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "FooQuery"'                          Tags = "web javascript"'                      }'                      new Package                      {                          Key = 144'                          PackageRegistrationKey = 12'                          PackageRegistration = new PackageRegistration                          {                              Id = "JQuery.UI.Combined"'                              Key = 12'                              DownloadCount = 42'                              IsVerified = false                          }'                          DownloadCount = 3'                          Description = "jQuery UI has only a few downloads of its latest and greatest version' but many total downloads"'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "JQuery UI (Combined Blobbary)"'                          Tags = "web javascript"'                      }'                  };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsesPackageRegistrationDownloadCountsToPrioritize,The following statement contains a magic number: var packages = new List<Package>                  {                      new Package                      {                          Key = 145'                          PackageRegistrationKey = 13'                          PackageRegistration = new PackageRegistration                          {                              Id = "FooQuery"'                              Key = 13'                              DownloadCount = 21'                              IsVerified = false                          }'                          Description = "FooQuery is overall much less popular than JQuery UI"'                          DownloadCount = 5'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "FooQuery"'                          Tags = "web javascript"'                      }'                      new Package                      {                          Key = 144'                          PackageRegistrationKey = 12'                          PackageRegistration = new PackageRegistration                          {                              Id = "JQuery.UI.Combined"'                              Key = 12'                              DownloadCount = 42'                              IsVerified = false                          }'                          DownloadCount = 3'                          Description = "jQuery UI has only a few downloads of its latest and greatest version' but many total downloads"'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "JQuery UI (Combined Blobbary)"'                          Tags = "web javascript"'                      }'                  };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsesPackageRegistrationDownloadCountsToPrioritize,The following statement contains a magic number: var packages = new List<Package>                  {                      new Package                      {                          Key = 145'                          PackageRegistrationKey = 13'                          PackageRegistration = new PackageRegistration                          {                              Id = "FooQuery"'                              Key = 13'                              DownloadCount = 21'                              IsVerified = false                          }'                          Description = "FooQuery is overall much less popular than JQuery UI"'                          DownloadCount = 5'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "FooQuery"'                          Tags = "web javascript"'                      }'                      new Package                      {                          Key = 144'                          PackageRegistrationKey = 12'                          PackageRegistration = new PackageRegistration                          {                              Id = "JQuery.UI.Combined"'                              Key = 12'                              DownloadCount = 42'                              IsVerified = false                          }'                          DownloadCount = 3'                          Description = "jQuery UI has only a few downloads of its latest and greatest version' but many total downloads"'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "JQuery UI (Combined Blobbary)"'                          Tags = "web javascript"'                      }'                  };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsesPackageRegistrationDownloadCountsToPrioritize,The following statement contains a magic number: var packages = new List<Package>                  {                      new Package                      {                          Key = 145'                          PackageRegistrationKey = 13'                          PackageRegistration = new PackageRegistration                          {                              Id = "FooQuery"'                              Key = 13'                              DownloadCount = 21'                              IsVerified = false                          }'                          Description = "FooQuery is overall much less popular than JQuery UI"'                          DownloadCount = 5'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "FooQuery"'                          Tags = "web javascript"'                      }'                      new Package                      {                          Key = 144'                          PackageRegistrationKey = 12'                          PackageRegistration = new PackageRegistration                          {                              Id = "JQuery.UI.Combined"'                              Key = 12'                              DownloadCount = 42'                              IsVerified = false                          }'                          DownloadCount = 3'                          Description = "jQuery UI has only a few downloads of its latest and greatest version' but many total downloads"'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "JQuery UI (Combined Blobbary)"'                          Tags = "web javascript"'                      }'                  };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsesPackageRegistrationDownloadCountsToPrioritize,The following statement contains a magic number: var packages = new List<Package>                  {                      new Package                      {                          Key = 145'                          PackageRegistrationKey = 13'                          PackageRegistration = new PackageRegistration                          {                              Id = "FooQuery"'                              Key = 13'                              DownloadCount = 21'                              IsVerified = false                          }'                          Description = "FooQuery is overall much less popular than JQuery UI"'                          DownloadCount = 5'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "FooQuery"'                          Tags = "web javascript"'                      }'                      new Package                      {                          Key = 144'                          PackageRegistrationKey = 12'                          PackageRegistration = new PackageRegistration                          {                              Id = "JQuery.UI.Combined"'                              Key = 12'                              DownloadCount = 42'                              IsVerified = false                          }'                          DownloadCount = 3'                          Description = "jQuery UI has only a few downloads of its latest and greatest version' but many total downloads"'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "JQuery UI (Combined Blobbary)"'                          Tags = "web javascript"'                      }'                  };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsesPackageRegistrationDownloadCountsToPrioritize,The following statement contains a magic number: var packages = new List<Package>                  {                      new Package                      {                          Key = 145'                          PackageRegistrationKey = 13'                          PackageRegistration = new PackageRegistration                          {                              Id = "FooQuery"'                              Key = 13'                              DownloadCount = 21'                              IsVerified = false                          }'                          Description = "FooQuery is overall much less popular than JQuery UI"'                          DownloadCount = 5'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "FooQuery"'                          Tags = "web javascript"'                      }'                      new Package                      {                          Key = 144'                          PackageRegistrationKey = 12'                          PackageRegistration = new PackageRegistration                          {                              Id = "JQuery.UI.Combined"'                              Key = 12'                              DownloadCount = 42'                              IsVerified = false                          }'                          DownloadCount = 3'                          Description = "jQuery UI has only a few downloads of its latest and greatest version' but many total downloads"'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "JQuery UI (Combined Blobbary)"'                          Tags = "web javascript"'                      }'                  };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsesPackageRegistrationDownloadCountsToPrioritize,The following statement contains a magic number: var packages = new List<Package>                  {                      new Package                      {                          Key = 145'                          PackageRegistrationKey = 13'                          PackageRegistration = new PackageRegistration                          {                              Id = "FooQuery"'                              Key = 13'                              DownloadCount = 21'                              IsVerified = false                          }'                          Description = "FooQuery is overall much less popular than JQuery UI"'                          DownloadCount = 5'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "FooQuery"'                          Tags = "web javascript"'                      }'                      new Package                      {                          Key = 144'                          PackageRegistrationKey = 12'                          PackageRegistration = new PackageRegistration                          {                              Id = "JQuery.UI.Combined"'                              Key = 12'                              DownloadCount = 42'                              IsVerified = false                          }'                          DownloadCount = 3'                          Description = "jQuery UI has only a few downloads of its latest and greatest version' but many total downloads"'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "JQuery UI (Combined Blobbary)"'                          Tags = "web javascript"'                      }'                  };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsesPackageRegistrationDownloadCountsToPrioritize,The following statement contains a magic number: var packages = new List<Package>                  {                      new Package                      {                          Key = 145'                          PackageRegistrationKey = 13'                          PackageRegistration = new PackageRegistration                          {                              Id = "FooQuery"'                              Key = 13'                              DownloadCount = 21'                              IsVerified = false                          }'                          Description = "FooQuery is overall much less popular than JQuery UI"'                          DownloadCount = 5'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "FooQuery"'                          Tags = "web javascript"'                      }'                      new Package                      {                          Key = 144'                          PackageRegistrationKey = 12'                          PackageRegistration = new PackageRegistration                          {                              Id = "JQuery.UI.Combined"'                              Key = 12'                              DownloadCount = 42'                              IsVerified = false                          }'                          DownloadCount = 3'                          Description = "jQuery UI has only a few downloads of its latest and greatest version' but many total downloads"'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "JQuery UI (Combined Blobbary)"'                          Tags = "web javascript"'                      }'                  };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchUsesPackageRegistrationDownloadCountsToPrioritize,The following statement contains a magic number: var packages = new List<Package>                  {                      new Package                      {                          Key = 145'                          PackageRegistrationKey = 13'                          PackageRegistration = new PackageRegistration                          {                              Id = "FooQuery"'                              Key = 13'                              DownloadCount = 21'                              IsVerified = false                          }'                          Description = "FooQuery is overall much less popular than JQuery UI"'                          DownloadCount = 5'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "FooQuery"'                          Tags = "web javascript"'                      }'                      new Package                      {                          Key = 144'                          PackageRegistrationKey = 12'                          PackageRegistration = new PackageRegistration                          {                              Id = "JQuery.UI.Combined"'                              Key = 12'                              DownloadCount = 42'                              IsVerified = false                          }'                          DownloadCount = 3'                          Description = "jQuery UI has only a few downloads of its latest and greatest version' but many total downloads"'                          Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                          FlattenedAuthors = "Alpha Beta Gamma"'                          Title = "JQuery UI (Combined Blobbary)"'                          Tags = "web javascript"'                      }'                  };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Package p = new Package              {                  Copyright = "Copyright 2013 by Oldies and Newies"'                  FlattenedAuthors = "Oldies' Newies"'                  Key = 123'                  PackageRegistrationKey = 456'                  PackageRegistration = new PackageRegistration                  {                      Id = "Pride"'                      Key = 456'                      DownloadCount = 123456'                      IsVerified = false                  }'                  Created = new DateTime(2019' 2' 28' 0' 5' 59' DateTimeKind.Utc)'                  Description = "DescriptionText"'                  DownloadCount = 12345'                  FlattenedDependencies = "adjunct-System.FluentCast:1.0.0.4|xunit:1.8.0.1545|adjunct-XUnit.Assertions:1.0.0.5|adjunct-XUnit.Assertions.Linq2Xml:1.0.0.3"'                  HashAlgorithm = "SHA512"'                  // This is a test hash                  Hash = "Ii4+Gr44RAClAno38k5MYAkcBE6yn2LE2xO+/ViKco45+hoxtwKAytmPWEMCJWhH8FyitjebvS5Fsf+ixI5xIg=="'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsLatestStable = true'                  IsLatestStableSemVer2 = true'                  IsPrerelease = false'                  Language = "en"'                  LastUpdated = DateTime.UtcNow'                  LicenseUrl = "nuget.org/license.txt"'                  Listed = true'                  MinClientVersion = new Version(1' 2' int.MaxValue' int.MaxValue - 1).ToString()'                  PackageFileSize = 234567'                  ProjectUrl = "http://projecturl.com"'                  Published = DateTime.UtcNow'                  ReleaseNotes = "ReleaseNotesText"'                  RequiresLicenseAcceptance = true'                  SupportedFrameworks = new PackageFramework[]                  {                      new PackageFramework                      {                          Key = 890'                          TargetFramework = "net45"'                      }                  }'                  Summary = "SummaryText"'                  Tags = "Tag1 Tag2 Tag3"'                  Title = "TitleText"'                  Version = "3.4 RC"'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Package p = new Package              {                  Copyright = "Copyright 2013 by Oldies and Newies"'                  FlattenedAuthors = "Oldies' Newies"'                  Key = 123'                  PackageRegistrationKey = 456'                  PackageRegistration = new PackageRegistration                  {                      Id = "Pride"'                      Key = 456'                      DownloadCount = 123456'                      IsVerified = false                  }'                  Created = new DateTime(2019' 2' 28' 0' 5' 59' DateTimeKind.Utc)'                  Description = "DescriptionText"'                  DownloadCount = 12345'                  FlattenedDependencies = "adjunct-System.FluentCast:1.0.0.4|xunit:1.8.0.1545|adjunct-XUnit.Assertions:1.0.0.5|adjunct-XUnit.Assertions.Linq2Xml:1.0.0.3"'                  HashAlgorithm = "SHA512"'                  // This is a test hash                  Hash = "Ii4+Gr44RAClAno38k5MYAkcBE6yn2LE2xO+/ViKco45+hoxtwKAytmPWEMCJWhH8FyitjebvS5Fsf+ixI5xIg=="'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsLatestStable = true'                  IsLatestStableSemVer2 = true'                  IsPrerelease = false'                  Language = "en"'                  LastUpdated = DateTime.UtcNow'                  LicenseUrl = "nuget.org/license.txt"'                  Listed = true'                  MinClientVersion = new Version(1' 2' int.MaxValue' int.MaxValue - 1).ToString()'                  PackageFileSize = 234567'                  ProjectUrl = "http://projecturl.com"'                  Published = DateTime.UtcNow'                  ReleaseNotes = "ReleaseNotesText"'                  RequiresLicenseAcceptance = true'                  SupportedFrameworks = new PackageFramework[]                  {                      new PackageFramework                      {                          Key = 890'                          TargetFramework = "net45"'                      }                  }'                  Summary = "SummaryText"'                  Tags = "Tag1 Tag2 Tag3"'                  Title = "TitleText"'                  Version = "3.4 RC"'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Package p = new Package              {                  Copyright = "Copyright 2013 by Oldies and Newies"'                  FlattenedAuthors = "Oldies' Newies"'                  Key = 123'                  PackageRegistrationKey = 456'                  PackageRegistration = new PackageRegistration                  {                      Id = "Pride"'                      Key = 456'                      DownloadCount = 123456'                      IsVerified = false                  }'                  Created = new DateTime(2019' 2' 28' 0' 5' 59' DateTimeKind.Utc)'                  Description = "DescriptionText"'                  DownloadCount = 12345'                  FlattenedDependencies = "adjunct-System.FluentCast:1.0.0.4|xunit:1.8.0.1545|adjunct-XUnit.Assertions:1.0.0.5|adjunct-XUnit.Assertions.Linq2Xml:1.0.0.3"'                  HashAlgorithm = "SHA512"'                  // This is a test hash                  Hash = "Ii4+Gr44RAClAno38k5MYAkcBE6yn2LE2xO+/ViKco45+hoxtwKAytmPWEMCJWhH8FyitjebvS5Fsf+ixI5xIg=="'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsLatestStable = true'                  IsLatestStableSemVer2 = true'                  IsPrerelease = false'                  Language = "en"'                  LastUpdated = DateTime.UtcNow'                  LicenseUrl = "nuget.org/license.txt"'                  Listed = true'                  MinClientVersion = new Version(1' 2' int.MaxValue' int.MaxValue - 1).ToString()'                  PackageFileSize = 234567'                  ProjectUrl = "http://projecturl.com"'                  Published = DateTime.UtcNow'                  ReleaseNotes = "ReleaseNotesText"'                  RequiresLicenseAcceptance = true'                  SupportedFrameworks = new PackageFramework[]                  {                      new PackageFramework                      {                          Key = 890'                          TargetFramework = "net45"'                      }                  }'                  Summary = "SummaryText"'                  Tags = "Tag1 Tag2 Tag3"'                  Title = "TitleText"'                  Version = "3.4 RC"'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Package p = new Package              {                  Copyright = "Copyright 2013 by Oldies and Newies"'                  FlattenedAuthors = "Oldies' Newies"'                  Key = 123'                  PackageRegistrationKey = 456'                  PackageRegistration = new PackageRegistration                  {                      Id = "Pride"'                      Key = 456'                      DownloadCount = 123456'                      IsVerified = false                  }'                  Created = new DateTime(2019' 2' 28' 0' 5' 59' DateTimeKind.Utc)'                  Description = "DescriptionText"'                  DownloadCount = 12345'                  FlattenedDependencies = "adjunct-System.FluentCast:1.0.0.4|xunit:1.8.0.1545|adjunct-XUnit.Assertions:1.0.0.5|adjunct-XUnit.Assertions.Linq2Xml:1.0.0.3"'                  HashAlgorithm = "SHA512"'                  // This is a test hash                  Hash = "Ii4+Gr44RAClAno38k5MYAkcBE6yn2LE2xO+/ViKco45+hoxtwKAytmPWEMCJWhH8FyitjebvS5Fsf+ixI5xIg=="'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsLatestStable = true'                  IsLatestStableSemVer2 = true'                  IsPrerelease = false'                  Language = "en"'                  LastUpdated = DateTime.UtcNow'                  LicenseUrl = "nuget.org/license.txt"'                  Listed = true'                  MinClientVersion = new Version(1' 2' int.MaxValue' int.MaxValue - 1).ToString()'                  PackageFileSize = 234567'                  ProjectUrl = "http://projecturl.com"'                  Published = DateTime.UtcNow'                  ReleaseNotes = "ReleaseNotesText"'                  RequiresLicenseAcceptance = true'                  SupportedFrameworks = new PackageFramework[]                  {                      new PackageFramework                      {                          Key = 890'                          TargetFramework = "net45"'                      }                  }'                  Summary = "SummaryText"'                  Tags = "Tag1 Tag2 Tag3"'                  Title = "TitleText"'                  Version = "3.4 RC"'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Package p = new Package              {                  Copyright = "Copyright 2013 by Oldies and Newies"'                  FlattenedAuthors = "Oldies' Newies"'                  Key = 123'                  PackageRegistrationKey = 456'                  PackageRegistration = new PackageRegistration                  {                      Id = "Pride"'                      Key = 456'                      DownloadCount = 123456'                      IsVerified = false                  }'                  Created = new DateTime(2019' 2' 28' 0' 5' 59' DateTimeKind.Utc)'                  Description = "DescriptionText"'                  DownloadCount = 12345'                  FlattenedDependencies = "adjunct-System.FluentCast:1.0.0.4|xunit:1.8.0.1545|adjunct-XUnit.Assertions:1.0.0.5|adjunct-XUnit.Assertions.Linq2Xml:1.0.0.3"'                  HashAlgorithm = "SHA512"'                  // This is a test hash                  Hash = "Ii4+Gr44RAClAno38k5MYAkcBE6yn2LE2xO+/ViKco45+hoxtwKAytmPWEMCJWhH8FyitjebvS5Fsf+ixI5xIg=="'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsLatestStable = true'                  IsLatestStableSemVer2 = true'                  IsPrerelease = false'                  Language = "en"'                  LastUpdated = DateTime.UtcNow'                  LicenseUrl = "nuget.org/license.txt"'                  Listed = true'                  MinClientVersion = new Version(1' 2' int.MaxValue' int.MaxValue - 1).ToString()'                  PackageFileSize = 234567'                  ProjectUrl = "http://projecturl.com"'                  Published = DateTime.UtcNow'                  ReleaseNotes = "ReleaseNotesText"'                  RequiresLicenseAcceptance = true'                  SupportedFrameworks = new PackageFramework[]                  {                      new PackageFramework                      {                          Key = 890'                          TargetFramework = "net45"'                      }                  }'                  Summary = "SummaryText"'                  Tags = "Tag1 Tag2 Tag3"'                  Title = "TitleText"'                  Version = "3.4 RC"'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Package p = new Package              {                  Copyright = "Copyright 2013 by Oldies and Newies"'                  FlattenedAuthors = "Oldies' Newies"'                  Key = 123'                  PackageRegistrationKey = 456'                  PackageRegistration = new PackageRegistration                  {                      Id = "Pride"'                      Key = 456'                      DownloadCount = 123456'                      IsVerified = false                  }'                  Created = new DateTime(2019' 2' 28' 0' 5' 59' DateTimeKind.Utc)'                  Description = "DescriptionText"'                  DownloadCount = 12345'                  FlattenedDependencies = "adjunct-System.FluentCast:1.0.0.4|xunit:1.8.0.1545|adjunct-XUnit.Assertions:1.0.0.5|adjunct-XUnit.Assertions.Linq2Xml:1.0.0.3"'                  HashAlgorithm = "SHA512"'                  // This is a test hash                  Hash = "Ii4+Gr44RAClAno38k5MYAkcBE6yn2LE2xO+/ViKco45+hoxtwKAytmPWEMCJWhH8FyitjebvS5Fsf+ixI5xIg=="'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsLatestStable = true'                  IsLatestStableSemVer2 = true'                  IsPrerelease = false'                  Language = "en"'                  LastUpdated = DateTime.UtcNow'                  LicenseUrl = "nuget.org/license.txt"'                  Listed = true'                  MinClientVersion = new Version(1' 2' int.MaxValue' int.MaxValue - 1).ToString()'                  PackageFileSize = 234567'                  ProjectUrl = "http://projecturl.com"'                  Published = DateTime.UtcNow'                  ReleaseNotes = "ReleaseNotesText"'                  RequiresLicenseAcceptance = true'                  SupportedFrameworks = new PackageFramework[]                  {                      new PackageFramework                      {                          Key = 890'                          TargetFramework = "net45"'                      }                  }'                  Summary = "SummaryText"'                  Tags = "Tag1 Tag2 Tag3"'                  Title = "TitleText"'                  Version = "3.4 RC"'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Package p = new Package              {                  Copyright = "Copyright 2013 by Oldies and Newies"'                  FlattenedAuthors = "Oldies' Newies"'                  Key = 123'                  PackageRegistrationKey = 456'                  PackageRegistration = new PackageRegistration                  {                      Id = "Pride"'                      Key = 456'                      DownloadCount = 123456'                      IsVerified = false                  }'                  Created = new DateTime(2019' 2' 28' 0' 5' 59' DateTimeKind.Utc)'                  Description = "DescriptionText"'                  DownloadCount = 12345'                  FlattenedDependencies = "adjunct-System.FluentCast:1.0.0.4|xunit:1.8.0.1545|adjunct-XUnit.Assertions:1.0.0.5|adjunct-XUnit.Assertions.Linq2Xml:1.0.0.3"'                  HashAlgorithm = "SHA512"'                  // This is a test hash                  Hash = "Ii4+Gr44RAClAno38k5MYAkcBE6yn2LE2xO+/ViKco45+hoxtwKAytmPWEMCJWhH8FyitjebvS5Fsf+ixI5xIg=="'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsLatestStable = true'                  IsLatestStableSemVer2 = true'                  IsPrerelease = false'                  Language = "en"'                  LastUpdated = DateTime.UtcNow'                  LicenseUrl = "nuget.org/license.txt"'                  Listed = true'                  MinClientVersion = new Version(1' 2' int.MaxValue' int.MaxValue - 1).ToString()'                  PackageFileSize = 234567'                  ProjectUrl = "http://projecturl.com"'                  Published = DateTime.UtcNow'                  ReleaseNotes = "ReleaseNotesText"'                  RequiresLicenseAcceptance = true'                  SupportedFrameworks = new PackageFramework[]                  {                      new PackageFramework                      {                          Key = 890'                          TargetFramework = "net45"'                      }                  }'                  Summary = "SummaryText"'                  Tags = "Tag1 Tag2 Tag3"'                  Title = "TitleText"'                  Version = "3.4 RC"'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Package p = new Package              {                  Copyright = "Copyright 2013 by Oldies and Newies"'                  FlattenedAuthors = "Oldies' Newies"'                  Key = 123'                  PackageRegistrationKey = 456'                  PackageRegistration = new PackageRegistration                  {                      Id = "Pride"'                      Key = 456'                      DownloadCount = 123456'                      IsVerified = false                  }'                  Created = new DateTime(2019' 2' 28' 0' 5' 59' DateTimeKind.Utc)'                  Description = "DescriptionText"'                  DownloadCount = 12345'                  FlattenedDependencies = "adjunct-System.FluentCast:1.0.0.4|xunit:1.8.0.1545|adjunct-XUnit.Assertions:1.0.0.5|adjunct-XUnit.Assertions.Linq2Xml:1.0.0.3"'                  HashAlgorithm = "SHA512"'                  // This is a test hash                  Hash = "Ii4+Gr44RAClAno38k5MYAkcBE6yn2LE2xO+/ViKco45+hoxtwKAytmPWEMCJWhH8FyitjebvS5Fsf+ixI5xIg=="'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsLatestStable = true'                  IsLatestStableSemVer2 = true'                  IsPrerelease = false'                  Language = "en"'                  LastUpdated = DateTime.UtcNow'                  LicenseUrl = "nuget.org/license.txt"'                  Listed = true'                  MinClientVersion = new Version(1' 2' int.MaxValue' int.MaxValue - 1).ToString()'                  PackageFileSize = 234567'                  ProjectUrl = "http://projecturl.com"'                  Published = DateTime.UtcNow'                  ReleaseNotes = "ReleaseNotesText"'                  RequiresLicenseAcceptance = true'                  SupportedFrameworks = new PackageFramework[]                  {                      new PackageFramework                      {                          Key = 890'                          TargetFramework = "net45"'                      }                  }'                  Summary = "SummaryText"'                  Tags = "Tag1 Tag2 Tag3"'                  Title = "TitleText"'                  Version = "3.4 RC"'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Package p = new Package              {                  Copyright = "Copyright 2013 by Oldies and Newies"'                  FlattenedAuthors = "Oldies' Newies"'                  Key = 123'                  PackageRegistrationKey = 456'                  PackageRegistration = new PackageRegistration                  {                      Id = "Pride"'                      Key = 456'                      DownloadCount = 123456'                      IsVerified = false                  }'                  Created = new DateTime(2019' 2' 28' 0' 5' 59' DateTimeKind.Utc)'                  Description = "DescriptionText"'                  DownloadCount = 12345'                  FlattenedDependencies = "adjunct-System.FluentCast:1.0.0.4|xunit:1.8.0.1545|adjunct-XUnit.Assertions:1.0.0.5|adjunct-XUnit.Assertions.Linq2Xml:1.0.0.3"'                  HashAlgorithm = "SHA512"'                  // This is a test hash                  Hash = "Ii4+Gr44RAClAno38k5MYAkcBE6yn2LE2xO+/ViKco45+hoxtwKAytmPWEMCJWhH8FyitjebvS5Fsf+ixI5xIg=="'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsLatestStable = true'                  IsLatestStableSemVer2 = true'                  IsPrerelease = false'                  Language = "en"'                  LastUpdated = DateTime.UtcNow'                  LicenseUrl = "nuget.org/license.txt"'                  Listed = true'                  MinClientVersion = new Version(1' 2' int.MaxValue' int.MaxValue - 1).ToString()'                  PackageFileSize = 234567'                  ProjectUrl = "http://projecturl.com"'                  Published = DateTime.UtcNow'                  ReleaseNotes = "ReleaseNotesText"'                  RequiresLicenseAcceptance = true'                  SupportedFrameworks = new PackageFramework[]                  {                      new PackageFramework                      {                          Key = 890'                          TargetFramework = "net45"'                      }                  }'                  Summary = "SummaryText"'                  Tags = "Tag1 Tag2 Tag3"'                  Title = "TitleText"'                  Version = "3.4 RC"'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Package p = new Package              {                  Copyright = "Copyright 2013 by Oldies and Newies"'                  FlattenedAuthors = "Oldies' Newies"'                  Key = 123'                  PackageRegistrationKey = 456'                  PackageRegistration = new PackageRegistration                  {                      Id = "Pride"'                      Key = 456'                      DownloadCount = 123456'                      IsVerified = false                  }'                  Created = new DateTime(2019' 2' 28' 0' 5' 59' DateTimeKind.Utc)'                  Description = "DescriptionText"'                  DownloadCount = 12345'                  FlattenedDependencies = "adjunct-System.FluentCast:1.0.0.4|xunit:1.8.0.1545|adjunct-XUnit.Assertions:1.0.0.5|adjunct-XUnit.Assertions.Linq2Xml:1.0.0.3"'                  HashAlgorithm = "SHA512"'                  // This is a test hash                  Hash = "Ii4+Gr44RAClAno38k5MYAkcBE6yn2LE2xO+/ViKco45+hoxtwKAytmPWEMCJWhH8FyitjebvS5Fsf+ixI5xIg=="'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsLatestStable = true'                  IsLatestStableSemVer2 = true'                  IsPrerelease = false'                  Language = "en"'                  LastUpdated = DateTime.UtcNow'                  LicenseUrl = "nuget.org/license.txt"'                  Listed = true'                  MinClientVersion = new Version(1' 2' int.MaxValue' int.MaxValue - 1).ToString()'                  PackageFileSize = 234567'                  ProjectUrl = "http://projecturl.com"'                  Published = DateTime.UtcNow'                  ReleaseNotes = "ReleaseNotesText"'                  RequiresLicenseAcceptance = true'                  SupportedFrameworks = new PackageFramework[]                  {                      new PackageFramework                      {                          Key = 890'                          TargetFramework = "net45"'                      }                  }'                  Summary = "SummaryText"'                  Tags = "Tag1 Tag2 Tag3"'                  Title = "TitleText"'                  Version = "3.4 RC"'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Package p = new Package              {                  Copyright = "Copyright 2013 by Oldies and Newies"'                  FlattenedAuthors = "Oldies' Newies"'                  Key = 123'                  PackageRegistrationKey = 456'                  PackageRegistration = new PackageRegistration                  {                      Id = "Pride"'                      Key = 456'                      DownloadCount = 123456'                      IsVerified = false                  }'                  Created = new DateTime(2019' 2' 28' 0' 5' 59' DateTimeKind.Utc)'                  Description = "DescriptionText"'                  DownloadCount = 12345'                  FlattenedDependencies = "adjunct-System.FluentCast:1.0.0.4|xunit:1.8.0.1545|adjunct-XUnit.Assertions:1.0.0.5|adjunct-XUnit.Assertions.Linq2Xml:1.0.0.3"'                  HashAlgorithm = "SHA512"'                  // This is a test hash                  Hash = "Ii4+Gr44RAClAno38k5MYAkcBE6yn2LE2xO+/ViKco45+hoxtwKAytmPWEMCJWhH8FyitjebvS5Fsf+ixI5xIg=="'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsLatestStable = true'                  IsLatestStableSemVer2 = true'                  IsPrerelease = false'                  Language = "en"'                  LastUpdated = DateTime.UtcNow'                  LicenseUrl = "nuget.org/license.txt"'                  Listed = true'                  MinClientVersion = new Version(1' 2' int.MaxValue' int.MaxValue - 1).ToString()'                  PackageFileSize = 234567'                  ProjectUrl = "http://projecturl.com"'                  Published = DateTime.UtcNow'                  ReleaseNotes = "ReleaseNotesText"'                  RequiresLicenseAcceptance = true'                  SupportedFrameworks = new PackageFramework[]                  {                      new PackageFramework                      {                          Key = 890'                          TargetFramework = "net45"'                      }                  }'                  Summary = "SummaryText"'                  Tags = "Tag1 Tag2 Tag3"'                  Title = "TitleText"'                  Version = "3.4 RC"'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Package p = new Package              {                  Copyright = "Copyright 2013 by Oldies and Newies"'                  FlattenedAuthors = "Oldies' Newies"'                  Key = 123'                  PackageRegistrationKey = 456'                  PackageRegistration = new PackageRegistration                  {                      Id = "Pride"'                      Key = 456'                      DownloadCount = 123456'                      IsVerified = false                  }'                  Created = new DateTime(2019' 2' 28' 0' 5' 59' DateTimeKind.Utc)'                  Description = "DescriptionText"'                  DownloadCount = 12345'                  FlattenedDependencies = "adjunct-System.FluentCast:1.0.0.4|xunit:1.8.0.1545|adjunct-XUnit.Assertions:1.0.0.5|adjunct-XUnit.Assertions.Linq2Xml:1.0.0.3"'                  HashAlgorithm = "SHA512"'                  // This is a test hash                  Hash = "Ii4+Gr44RAClAno38k5MYAkcBE6yn2LE2xO+/ViKco45+hoxtwKAytmPWEMCJWhH8FyitjebvS5Fsf+ixI5xIg=="'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsLatestStable = true'                  IsLatestStableSemVer2 = true'                  IsPrerelease = false'                  Language = "en"'                  LastUpdated = DateTime.UtcNow'                  LicenseUrl = "nuget.org/license.txt"'                  Listed = true'                  MinClientVersion = new Version(1' 2' int.MaxValue' int.MaxValue - 1).ToString()'                  PackageFileSize = 234567'                  ProjectUrl = "http://projecturl.com"'                  Published = DateTime.UtcNow'                  ReleaseNotes = "ReleaseNotesText"'                  RequiresLicenseAcceptance = true'                  SupportedFrameworks = new PackageFramework[]                  {                      new PackageFramework                      {                          Key = 890'                          TargetFramework = "net45"'                      }                  }'                  Summary = "SummaryText"'                  Tags = "Tag1 Tag2 Tag3"'                  Title = "TitleText"'                  Version = "3.4 RC"'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Package p = new Package              {                  Copyright = "Copyright 2013 by Oldies and Newies"'                  FlattenedAuthors = "Oldies' Newies"'                  Key = 123'                  PackageRegistrationKey = 456'                  PackageRegistration = new PackageRegistration                  {                      Id = "Pride"'                      Key = 456'                      DownloadCount = 123456'                      IsVerified = false                  }'                  Created = new DateTime(2019' 2' 28' 0' 5' 59' DateTimeKind.Utc)'                  Description = "DescriptionText"'                  DownloadCount = 12345'                  FlattenedDependencies = "adjunct-System.FluentCast:1.0.0.4|xunit:1.8.0.1545|adjunct-XUnit.Assertions:1.0.0.5|adjunct-XUnit.Assertions.Linq2Xml:1.0.0.3"'                  HashAlgorithm = "SHA512"'                  // This is a test hash                  Hash = "Ii4+Gr44RAClAno38k5MYAkcBE6yn2LE2xO+/ViKco45+hoxtwKAytmPWEMCJWhH8FyitjebvS5Fsf+ixI5xIg=="'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsLatestStable = true'                  IsLatestStableSemVer2 = true'                  IsPrerelease = false'                  Language = "en"'                  LastUpdated = DateTime.UtcNow'                  LicenseUrl = "nuget.org/license.txt"'                  Listed = true'                  MinClientVersion = new Version(1' 2' int.MaxValue' int.MaxValue - 1).ToString()'                  PackageFileSize = 234567'                  ProjectUrl = "http://projecturl.com"'                  Published = DateTime.UtcNow'                  ReleaseNotes = "ReleaseNotesText"'                  RequiresLicenseAcceptance = true'                  SupportedFrameworks = new PackageFramework[]                  {                      new PackageFramework                      {                          Key = 890'                          TargetFramework = "net45"'                      }                  }'                  Summary = "SummaryText"'                  Tags = "Tag1 Tag2 Tag3"'                  Title = "TitleText"'                  Version = "3.4 RC"'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Assert.Equal(123456' r.DownloadCount);
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Assert.True(r.LastUpdated > DateTime.UtcNow.Subtract(TimeSpan.FromSeconds(20)));
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Assert.Equal(234567' r.PackageSize);
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Assert.True(r.Published > DateTime.UtcNow.Subtract(TimeSpan.FromSeconds(20)));
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearchRetrievesCanDriveV2Feed,The following statement contains a magic number: Assert.Equal(12345' r.VersionDownloadCount);
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchWorksAroundLuceneQuerySyntaxExceptions,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet that the rest of NuGet builds upon."'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      LicenseUrl = "http://nuget.codeplex.com/license"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchWorksAroundLuceneQuerySyntaxExceptions,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet that the rest of NuGet builds upon."'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      LicenseUrl = "http://nuget.codeplex.com/license"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchWorksAroundLuceneQuerySyntaxExceptions,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet that the rest of NuGet builds upon."'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      LicenseUrl = "http://nuget.codeplex.com/license"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,SearchWorksAroundLuceneQuerySyntaxExceptions,The following statement contains a magic number: var packages = new List<Package>              {                  new Package                  {                      Key = 144'                      PackageRegistrationKey = 12'                      PackageRegistration = new PackageRegistration                      {                          Id = "NuGet.Core"'                          Key = 12'                          DownloadCount = 41'                          IsVerified = false                      }'                      Description = "NuGet.Core is the core framework assembly for NuGet that the rest of NuGet builds upon."'                      Listed = true'                      IsLatest = true'                      IsLatestSemVer2 = true'                      IsLatestStable = true'                      IsLatestStableSemVer2 = true'                      FlattenedAuthors = "Alpha Beta Gamma"'                      LicenseUrl = "http://nuget.codeplex.com/license"'                      Title = "NuGet.Core"'                      Version = "1.5.20902.9026"'                  }'              };
Magic Number,NuGetGallery.Infrastructure,LuceneSearchServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\LuceneSearchServiceFacts.cs,IndexAndSearch,The following statement contains a magic number: var searchFilter = new SearchFilter("Test")              {                  Skip = 0'                  Take = 10'                  SearchTerm = searchTerm'                  SemVerLevel = semVerLevel              };
Magic Number,NuGetGallery.Infrastructure,NuGetQueryParserFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Infrastructure\NuGetQueryParserFacts.cs,MultipleResult,The following statement contains a magic number: Assert.Equal(new NuGetSearchTerm { Field = "little"' TermOrPhrase = "creatures" }' results[2]);
Magic Number,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,UserHandlers_ReturnsRegisteredUserSecurityPolicyHandlers,The following statement contains a magic number: Assert.Equal(3' handlers.Count);
Magic Number,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,UserHandlers_ReturnsRegisteredUserSecurityPolicyHandlers,The following statement contains a magic number: Assert.Equal(typeof(RequireMinProtocolVersionForPushPolicy)' handlers[2].GetType());
Magic Number,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,EvaluateAsync_WhenDefaultSecurityPolicyIsMetUserPolicyIsEvaluated,The following statement contains a magic number: service.Mocks.MockPolicyHandler1.Verify(p => p.Evaluate(It.IsAny<UserSecurityPolicyEvaluationContext>())' Times.Exactly(2));
Magic Number,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,EvaluateAsync_WhenDefaultSecurityPolicyIsMetUserPolicyIsEvaluated,The following statement contains a magic number: service.Mocks.MockPolicyHandler2.Verify(p => p.Evaluate(It.IsAny<UserSecurityPolicyEvaluationContext>())' Times.Exactly(2));
Magic Number,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,SubscribeAsync_AddsAllSubscriptionPoliciesWhenHasNoneToStart,The following statement contains a magic number: Assert.Equal(2' user.SecurityPolicies.Count);
Magic Number,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,SubscribeAsync_AddsAllSubscriptionPoliciesWhenHasSameAsDifferentSubscription,The following statement contains a magic number: Assert.Equal(4' policies.Count);
Magic Number,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,SubscribeAsync_AddsAllSubscriptionPoliciesWhenHasSameAsDifferentSubscription,The following statement contains a magic number: service.Mocks.VerifySubscriptionPolicies(policies.Skip(2));
Magic Number,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,SubscribeAsync_DoesNotAddSubscriptionPoliciesIfAlreadySubscribed,The following statement contains a magic number: Assert.Equal(2' user.SecurityPolicies.Count);
Magic Number,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,SubscribeAsync_DoesNotAddSubscriptionPoliciesIfAlreadySubscribed,The following statement contains a magic number: Assert.Equal(2' user.SecurityPolicies.Count);
Magic Number,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,UnsubscribeAsync_RemovesAllSubscriptionPolicies,The following statement contains a magic number: Assert.Equal(2' user.SecurityPolicies.Count);
Magic Number,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,UnsubscribeAsync_RemovesAllSubscriptionPolicies,The following statement contains a magic number: service.MockUserSecurityPolicies.Verify(p => p.Remove(It.IsAny<UserSecurityPolicy>())' Times.Exactly(2));
Magic Number,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,UnsubscribeAsync_DoesNotRemoveOtherSubscriptionPolicies,The following statement contains a magic number: Assert.Equal(4' user.SecurityPolicies.Count);
Magic Number,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,UnsubscribeAsync_DoesNotRemoveOtherSubscriptionPolicies,The following statement contains a magic number: Assert.Equal(2' policies.Count);
Magic Number,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,UnsubscribeAsync_DoesNotRemoveOtherSubscriptionPolicies,The following statement contains a magic number: service.MockUserSecurityPolicies.Verify(p => p.Remove(It.IsAny<UserSecurityPolicy>())' Times.Exactly(2));
Magic Number,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,UnsubscribeAsync_RemovesNoPoliciesIfNotSubscribed,The following statement contains a magic number: Assert.Equal(2' user.SecurityPolicies.Count);
Magic Number,NuGetGallery.Security,SecurityPolicyServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurityPolicyServiceFacts.cs,UnsubscribeAsync_RemovesNoPoliciesIfNotSubscribed,The following statement contains a magic number: Assert.Equal(2' user.SecurityPolicies.Count);
Magic Number,NuGetGallery.Security,SecurePushSubscriptionFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurePushSubscriptionFacts.cs,Policies_ReturnsMinClientAndPackageVerifyScopePolicies,The following statement contains a magic number: Assert.Equal(2' subscription.Policies.Count());
Magic Number,NuGetGallery.Security,SecurePushSubscriptionFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurePushSubscriptionFacts.cs,OnSubscribeAsync_ExpiresPushApiKeys,The following statement contains a magic number: Assert.Equal(2' user.SecurityPolicies.Count());
Magic Number,NuGetGallery.Security,SecurePushSubscriptionFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurePushSubscriptionFacts.cs,OnSubscribeAsync_DoesNotExpireNonPushCredentials,The following statement contains a magic number: Assert.Equal(2' user.SecurityPolicies.Count());
Magic Number,NuGetGallery.Security,SecurePushSubscriptionFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurePushSubscriptionFacts.cs,OnSubscribeAsync_DoesNotChangeExpiringPushCredentials,The following statement contains a magic number: var user = (await SubscribeUserToSecurePushAsync(CredentialTypes.ApiKey.V2'scopes' expiresInDays: 2)).Item1;
Magic Number,NuGetGallery.Security,SecurePushSubscriptionFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurePushSubscriptionFacts.cs,OnSubscribeAsync_DoesNotChangeExpiringPushCredentials,The following statement contains a magic number: Assert.Equal(2' user.SecurityPolicies.Count());
Magic Number,NuGetGallery.Security,SecurePushSubscriptionFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurePushSubscriptionFacts.cs,OnSubscribeAsync_DoesNotChangeExpiringPushCredentials,The following statement contains a magic number: Assert.True(DateTime.UtcNow.AddDays(2) >= user.Credentials.Single().Expires);
Magic Number,NuGetGallery.Security,SecurePushSubscriptionFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurePushSubscriptionFacts.cs,OnSubscribeAsync_SavesAuditRecordIfKeysSetToExpire,The following statement contains a magic number: service.MockAuditingService.Verify(s => s.SaveAuditRecordAsync(It.IsAny<AuditRecord>())'                  /* subscription and key expiration */Times.Exactly(2));
Magic Number,NuGetGallery.Security,SecurePushSubscriptionFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\SecurePushSubscriptionFacts.cs,OnSubscribeAsync_DoesNotSaveAuditRecordIfKeysNotSetToExpire,The following statement contains a magic number: var service = (await SubscribeUserToSecurePushAsync(CredentialTypes.ApiKey.V2' ""' expiresInDays: 2)).Item2;
Magic Number,NuGetGallery.Security,TestSecurityPolicyService,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Security\TestSecurityPolicyService.cs,TestSecurityPolicyService,The following statement contains a magic number: if (mockEntities == null)              {                  MockEntitiesContext.Setup(c => c.SaveChangesAsync()).Returns(Task.FromResult(2)).Verifiable();                  MockEntitiesContext.Setup(c => c.UserSecurityPolicies).Returns(MockUserSecurityPolicies.Object);              }
Magic Number,NuGetGallery.Services,TheRefreshMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\JsonStatisticsServiceFacts.cs,LoadsReports,The following statement contains a magic number: Assert.Equal(2' _target.PackageDownloads.Count());
Magic Number,NuGetGallery.Services,TheRefreshMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\JsonStatisticsServiceFacts.cs,LoadsReports,The following statement contains a magic number: Assert.Equal(3' _target.PackageVersionDownloads.Count());
Magic Number,NuGetGallery.Services,TheRefreshMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\JsonStatisticsServiceFacts.cs,LoadsReports,The following statement contains a magic number: Assert.Equal(2' _target.CommunityPackageDownloads.Count());
Magic Number,NuGetGallery.Services,TheRefreshMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\JsonStatisticsServiceFacts.cs,LoadsReports,The following statement contains a magic number: Assert.Equal(3' _target.CommunityPackageVersionDownloads.Count());
Magic Number,NuGetGallery.Services,TheIsValidPackageOwnerRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,ReturnsSuccessIfPackageOwnerRequestMatches,The following statement contains a magic number: const int actualNewOwner = 2;
Magic Number,NuGetGallery.Services,TheAddPackageOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,NullPackageRegistrationThrowsException,The following statement contains a magic number: var user1 = new User { Key = 100' Username = "user1" };
Magic Number,NuGetGallery.Services,TheAddPackageOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,NullPackageRegistrationThrowsException,The following statement contains a magic number: var user2 = new User { Key = 101' Username = "user2" };
Magic Number,NuGetGallery.Services,TheAddPackageOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,NullRequestingUserThrowsException,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "pkg42" };
Magic Number,NuGetGallery.Services,TheAddPackageOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,NullRequestingUserThrowsException,The following statement contains a magic number: var user2 = new User { Key = 101' Username = "user2" };
Magic Number,NuGetGallery.Services,TheAddPackageOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,NullNewOwnerThrowsException,The following statement contains a magic number: var package = new PackageRegistration { Key = 2' Id = "pkg42" };
Magic Number,NuGetGallery.Services,TheAddPackageOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,NullNewOwnerThrowsException,The following statement contains a magic number: var user1 = new User { Key = 101' Username = "user1" };
Magic Number,NuGetGallery.Services,TheAddPackageOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,CreatesPackageOwnerRequest,The following statement contains a magic number: var owner = new User { Key = 100 };
Magic Number,NuGetGallery.Services,TheAddPackageOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,CreatesPackageOwnerRequest,The following statement contains a magic number: var newOwner = new User { Key = 200 };
Magic Number,NuGetGallery.Services,TheAddPackageOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,CreatesPackageOwnerRequest,The following statement contains a magic number: packageOwnerRequestRepository.Verify(                      r => r.InsertOnCommit(                          It.Is<PackageOwnerRequest>(req => req.PackageRegistrationKey == 1 && req.RequestingOwnerKey == 100 && req.NewOwnerKey == 200))                      );
Magic Number,NuGetGallery.Services,TheAddPackageOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,CreatesPackageOwnerRequest,The following statement contains a magic number: packageOwnerRequestRepository.Verify(                      r => r.InsertOnCommit(                          It.Is<PackageOwnerRequest>(req => req.PackageRegistrationKey == 1 && req.RequestingOwnerKey == 100 && req.NewOwnerKey == 200))                      );
Magic Number,NuGetGallery.Services,TheAddPackageOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,ReturnsExistingMatchingPackageOwnerRequest,The following statement contains a magic number: var existingRequestingOwner = new User { Key = 100 };
Magic Number,NuGetGallery.Services,TheAddPackageOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,ReturnsExistingMatchingPackageOwnerRequest,The following statement contains a magic number: var newRequestingOwner = new User { Key = 99 };
Magic Number,NuGetGallery.Services,TheAddPackageOwnershipRequestMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PackageOwnerRequestServiceFacts.cs,ReturnsExistingMatchingPackageOwnerRequest,The following statement contains a magic number: var newOwner = new User { Key = 200 };
Magic Number,NuGetGallery.Services,TheGetPermissionLevelMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\PermissionsServiceFacts.cs,AssertPermissionLevels,The following statement contains a magic number: for (int i = 0; i < _maxPermissionLevel * 2; i++)                  {                      var permissionLevel = (PermissionLevel)i;                        var shouldSucceed = (permissionLevel & expectedLevel) > 0;                        Assert.Equal(shouldSucceed' PermissionsService.IsActionAllowed(owners' user' permissionLevel));                        var principal = GetPrincipal(user);                      Assert.Equal(shouldSucceed' PermissionsService.IsActionAllowed(owners' principal' permissionLevel));                  }
Magic Number,NuGetGallery.Services,TheAddOwnerToReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,AddingOwnerToNamespaceMarksRegistrationsVerified,The following statement contains a magic number: Assert.True(existingNamespace.PackageRegistrations.Count() == 2);
Magic Number,NuGetGallery.Services,TheDeleteOwnerFromReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,DeletingOwnerFromNamespaceMarksRegistrationsUnverified,The following statement contains a magic number: Assert.True(existingNamespace.PackageRegistrations.Count == 2);
Magic Number,NuGetGallery.Services,TheDeleteOwnerFromReservedNamespaceAsyncMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReservedNamespaceServiceFacts.cs,DeletingOwnerFromMultipleOwnedNamespaceDoesNotMarkPackagesUnVerfied,The following statement contains a magic number: Assert.True(existingNamespace.PackageRegistrations.Count == 2);
Magic Number,NuGetGallery.Services,TestableCuratedFeedService,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\CuratedFeedServiceFacts.cs,TestableCuratedFeedService,The following statement contains a magic number: StubPackageRegistration = new PackageRegistration { Key = 1066' Id = "aPackageId" };
Magic Number,NuGetGallery.Services,TheCreateCuratedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\CuratedFeedServiceFacts.cs,WillAddANewCuratedPackageToTheCuratedFeed,The following statement contains a magic number: svc.StubPackageRegistration.Key = 1066;
Magic Number,NuGetGallery.Services,TheCreateCuratedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\CuratedFeedServiceFacts.cs,WillAddANewCuratedPackageToTheCuratedFeed,The following statement contains a magic number: Assert.Equal(1066' curatedPackage.PackageRegistrationKey);
Magic Number,NuGetGallery.Services,TheCreateCuratedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\CuratedFeedServiceFacts.cs,WillReturnTheCreatedCuratedPackage,The following statement contains a magic number: svc.StubPackageRegistration.Key = 1066;
Magic Number,NuGetGallery.Services,TheCreateCuratedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\CuratedFeedServiceFacts.cs,WillReturnTheCreatedCuratedPackage,The following statement contains a magic number: Assert.Equal(1066' curatedPackage.PackageRegistrationKey);
Magic Number,NuGetGallery.Services,TheModifyCuratedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\CuratedFeedServiceFacts.cs,WillThrowWhenCuratedFeedDoesNotExist,The following statement contains a magic number: await Assert.ThrowsAsync<InvalidOperationException>(                      async () => await svc.ModifyCuratedPackageAsync(                          42'                          0'                          false));
Magic Number,NuGetGallery.Services,TheModifyCuratedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\CuratedFeedServiceFacts.cs,WillThrowWhenCuratedPackageDoesNotExist,The following statement contains a magic number: await Assert.ThrowsAsync<InvalidOperationException>(                      async () => await svc.ModifyCuratedPackageAsync(                          0'                          404'                          false));
Magic Number,NuGetGallery.Services,TheModifyCuratedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\CuratedFeedServiceFacts.cs,WillModifyAndSaveTheCuratedPackage,The following statement contains a magic number: await svc.ModifyCuratedPackageAsync(                      0'                      1066'                      true);
Magic Number,NuGetGallery.Services,TheDeleteCuratedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\CuratedFeedServiceFacts.cs,WillThrowWhenCuratedFeedDoesNotExist,The following statement contains a magic number: await Assert.ThrowsAsync<InvalidOperationException>(                      async () => await svc.DeleteCuratedPackageAsync(                          42'                          0));
Magic Number,NuGetGallery.Services,TheDeleteCuratedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\CuratedFeedServiceFacts.cs,WillThrowWhenCuratedPackageDoesNotExist,The following statement contains a magic number: await Assert.ThrowsAsync<InvalidOperationException>(                      async () => await svc.DeleteCuratedPackageAsync(                          0'                          1066));
Magic Number,NuGetGallery.Services,TheDeleteCuratedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\CuratedFeedServiceFacts.cs,WillDeleteTheCuratedPackage,The following statement contains a magic number: await svc.DeleteCuratedPackageAsync(                      0'                      1066);
Magic Number,NuGetGallery.Services,TheGetContentItemMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndAnEmptyCache_ItShouldPutTheContentInTheCache,The following statement contains a magic number: await contentService.GetContentItemAsync("TestContentItem"' TimeSpan.FromSeconds(42));
Magic Number,NuGetGallery.Services,TheGetContentItemMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndAnEmptyCache_ItShouldPutTheContentInTheCache,The following statement contains a magic number: Assert.True(EqualWithDrift(TimeSpan.FromSeconds(42)' (cached.ExpiryUtc - cached.RetrievedUtc)' TimeSpan.FromSeconds(2)));
Magic Number,NuGetGallery.Services,TheGetContentItemMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndAnEmptyCache_ItShouldPutTheContentInTheCache,The following statement contains a magic number: Assert.True(EqualWithDrift(TimeSpan.FromSeconds(42)' (cached.ExpiryUtc - cached.RetrievedUtc)' TimeSpan.FromSeconds(2)));
Magic Number,NuGetGallery.Services,TheGetContentItemMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndAnEmptyCache_ItShouldPutTheContentInTheCache,The following statement contains a magic number: Assert.True(diff > TimeSpan.FromSeconds(40) && diff < TimeSpan.FromSeconds(43));
Magic Number,NuGetGallery.Services,TheGetContentItemMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndAnEmptyCache_ItShouldPutTheContentInTheCache,The following statement contains a magic number: Assert.True(diff > TimeSpan.FromSeconds(40) && diff < TimeSpan.FromSeconds(43));
Magic Number,NuGetGallery.Services,TheGetContentItemMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndACachedValueThatHasExpiredButNotChanged_ItShouldUseTheCachedValue,The following statement contains a magic number: var actual = await contentService.GetContentItemAsync("TestContentItem"' TimeSpan.FromHours(12));
Magic Number,NuGetGallery.Services,TheGetContentItemMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndACachedValueThatHasExpiredButNotChanged_ItShouldUseTheCachedValue,The following statement contains a magic number: Assert.True(EqualWithDrift(TimeSpan.FromHours(12)' (updatedCache.ExpiryUtc - DateTime.UtcNow)' TimeSpan.FromSeconds(2)));
Magic Number,NuGetGallery.Services,TheGetContentItemMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndACachedValueThatHasExpiredButNotChanged_ItShouldUseTheCachedValue,The following statement contains a magic number: Assert.True(EqualWithDrift(TimeSpan.FromHours(12)' (updatedCache.ExpiryUtc - DateTime.UtcNow)' TimeSpan.FromSeconds(2)));
Magic Number,NuGetGallery.Services,TheGetContentItemMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemAndACachedValueThatHasExpiredAndChanged_ItShouldUseTheFileContent,The following statement contains a magic number: var actual = await contentService.GetContentItemAsync("TestContentItem"' TimeSpan.FromHours(12));
Magic Number,NuGetGallery.Services,TheGetContentItemMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemAndACachedValueThatHasExpiredAndChanged_ItShouldUseTheFileContent,The following statement contains a magic number: Assert.True(EqualWithDrift(TimeSpan.FromHours(12)' (updatedCache.ExpiryUtc - updatedCache.RetrievedUtc)' TimeSpan.FromSeconds(2)));
Magic Number,NuGetGallery.Services,TheGetContentItemMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemAndACachedValueThatHasExpiredAndChanged_ItShouldUseTheFileContent,The following statement contains a magic number: Assert.True(EqualWithDrift(TimeSpan.FromHours(12)' (updatedCache.ExpiryUtc - updatedCache.RetrievedUtc)' TimeSpan.FromSeconds(2)));
Magic Number,NuGetGallery.Services,TheGetContentItemWithExtensionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndAnEmptyCache_ItShouldPutTheContentInTheCache,The following statement contains a magic number: await contentService.GetContentItemAsync("TestContentItem"' ".md"' TimeSpan.FromSeconds(42));
Magic Number,NuGetGallery.Services,TheGetContentItemWithExtensionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndAnEmptyCache_ItShouldPutTheContentInTheCache,The following statement contains a magic number: Assert.True(EqualWithDrift(TimeSpan.FromSeconds(42)' (cached.ExpiryUtc - cached.RetrievedUtc)' TimeSpan.FromSeconds(2)));
Magic Number,NuGetGallery.Services,TheGetContentItemWithExtensionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndAnEmptyCache_ItShouldPutTheContentInTheCache,The following statement contains a magic number: Assert.True(EqualWithDrift(TimeSpan.FromSeconds(42)' (cached.ExpiryUtc - cached.RetrievedUtc)' TimeSpan.FromSeconds(2)));
Magic Number,NuGetGallery.Services,TheGetContentItemWithExtensionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndAnEmptyCache_ItShouldPutTheContentInTheCache,The following statement contains a magic number: Assert.True(diff > TimeSpan.FromSeconds(40) && diff < TimeSpan.FromSeconds(43));
Magic Number,NuGetGallery.Services,TheGetContentItemWithExtensionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndAnEmptyCache_ItShouldPutTheContentInTheCache,The following statement contains a magic number: Assert.True(diff > TimeSpan.FromSeconds(40) && diff < TimeSpan.FromSeconds(43));
Magic Number,NuGetGallery.Services,TheGetContentItemWithExtensionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndACachedValueThatHasExpiredButNotChanged_ItShouldUseTheCachedValue,The following statement contains a magic number: var actual = await contentService.GetContentItemAsync("TestContentItem"' ".md"' TimeSpan.FromHours(12));
Magic Number,NuGetGallery.Services,TheGetContentItemWithExtensionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndACachedValueThatHasExpiredButNotChanged_ItShouldUseTheCachedValue,The following statement contains a magic number: Assert.True(EqualWithDrift(TimeSpan.FromHours(12)' (updatedCache.ExpiryUtc - DateTime.UtcNow)' TimeSpan.FromSeconds(2)));
Magic Number,NuGetGallery.Services,TheGetContentItemWithExtensionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemNameAndACachedValueThatHasExpiredButNotChanged_ItShouldUseTheCachedValue,The following statement contains a magic number: Assert.True(EqualWithDrift(TimeSpan.FromHours(12)' (updatedCache.ExpiryUtc - DateTime.UtcNow)' TimeSpan.FromSeconds(2)));
Magic Number,NuGetGallery.Services,TheGetContentItemWithExtensionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemAndACachedValueThatHasExpiredAndChanged_ItShouldUseTheFileContent,The following statement contains a magic number: var actual = await contentService.GetContentItemAsync("TestContentItem"' ".md"' TimeSpan.FromHours(12));
Magic Number,NuGetGallery.Services,TheGetContentItemWithExtensionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemAndACachedValueThatHasExpiredAndChanged_ItShouldUseTheFileContent,The following statement contains a magic number: Assert.True(EqualWithDrift(TimeSpan.FromHours(12)' (updatedCache.ExpiryUtc - updatedCache.RetrievedUtc)' TimeSpan.FromSeconds(2)));
Magic Number,NuGetGallery.Services,TheGetContentItemWithExtensionMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ContentServiceFacts.cs,GivenAContentItemAndACachedValueThatHasExpiredAndChanged_ItShouldUseTheFileContent,The following statement contains a magic number: Assert.True(EqualWithDrift(TimeSpan.FromHours(12)' (updatedCache.ExpiryUtc - updatedCache.RetrievedUtc)' TimeSpan.FromSeconds(2)));
Magic Number,NuGetGallery.SearchClient,RetryingHttpClientWrapperFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\SearchClient\RetryingHttpClientWrapperFacts.cs,LoadBalancesBetweenValidUrisForGetStringAsync,The following statement contains a magic number: while ((!hasHitUri1 || !hasHitUri2) && numRequests < 25)              {                  numRequests++;                  var result = await client.GetStringAsync(new[] { ValidUri1' ValidUri2 });                    Assert.NotNull(result);                  if (!hasHitUri1) hasHitUri1 = inspectingHandler.Requests.Any(r => r.RequestUri == ValidUri1);                  if (!hasHitUri2) hasHitUri2 = inspectingHandler.Requests.Any(r => r.RequestUri == ValidUri2);              }
Magic Number,NuGetGallery.SearchClient,RetryingHttpClientWrapperFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\SearchClient\RetryingHttpClientWrapperFacts.cs,LoadBalancesBetweenValidUrisForGetAsync,The following statement contains a magic number: while ((!hasHitUri1 || !hasHitUri2) && numRequests < 25)              {                  numRequests++;                  var result = await client.GetAsync(new[] { ValidUri1' ValidUri2 });                    Assert.NotNull(result);                  if (!hasHitUri1) hasHitUri1 = inspectingHandler.Requests.Any(r => r.RequestUri == ValidUri1);                  if (!hasHitUri2) hasHitUri2 = inspectingHandler.Requests.Any(r => r.RequestUri == ValidUri2);              }
Magic Number,NuGetGallery.Telemetry,ClientInformationTelemetryEnricherTests,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Telemetry\ClientInformationTelemetryEnricherTests.cs,EnrichesOnlyRequestsTelemetry,The following statement contains a magic number: if (telemetry is RequestTelemetry)              {                  Assert.Equal(4' telemetry.Context.Properties.Count);              }              else              {                  Assert.Equal(1' telemetry.Context.Properties.Count);              }
Magic Number,NuGetGallery.OData.Interceptors,PackageExtensionsFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,CreateFakeBasePackage,The following statement contains a magic number: return new Package()              {                  PackageRegistration = new PackageRegistration                  {                      Id = "Hitchhikers.Guide"'                      DownloadCount = 420000                  }'                  Version = "04.02-harmless"'                  NormalizedVersion = "4.2.0-harmless"'                  FlattenedAuthors = "Life' The Universe' Everything"'                  Copyright = "Megadodo Publications"'                  Created = new DateTime(1971' 4' 2)'                  FlattenedDependencies = "A|B|C"'                  Description = "The standard repository for all knowledge and wisdom"'                  IconUrl = "http://notreal.example/foo.ico"'                  IsLatestStable = false'                  IsLatestStableSemVer2 = false'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsPrerelease = true'                  LastUpdated = new DateTime(2002' 4' 30)'                  Language = "en-GB"'                  Hash = "abc123"'                  HashAlgorithm = "ROT13"'                  PackageFileSize = 4200'                  ProjectUrl = "https://en.wikipedia.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy_(fictional)"'                  ReleaseNotes = "Mostly Harmless"'                  RequiresLicenseAcceptance = true'                  Published = new DateTime(1979' 10' 12)'                  Summary = "A truly remarkable book"'                  Tags = "Guide' Harmless' Mostly"'                  Title = "The Hitchhiker's Guide to the Galaxy"'                  DownloadCount = 421'                  MinClientVersion = "4.2.8"'                  LicenseUrl = "https://blarg/"'                  LicenseNames = "Foo Public License' Some Other License"'                  LicenseReportUrl = "https://reporturl"              };
Magic Number,NuGetGallery.OData.Interceptors,PackageExtensionsFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,CreateFakeBasePackage,The following statement contains a magic number: return new Package()              {                  PackageRegistration = new PackageRegistration                  {                      Id = "Hitchhikers.Guide"'                      DownloadCount = 420000                  }'                  Version = "04.02-harmless"'                  NormalizedVersion = "4.2.0-harmless"'                  FlattenedAuthors = "Life' The Universe' Everything"'                  Copyright = "Megadodo Publications"'                  Created = new DateTime(1971' 4' 2)'                  FlattenedDependencies = "A|B|C"'                  Description = "The standard repository for all knowledge and wisdom"'                  IconUrl = "http://notreal.example/foo.ico"'                  IsLatestStable = false'                  IsLatestStableSemVer2 = false'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsPrerelease = true'                  LastUpdated = new DateTime(2002' 4' 30)'                  Language = "en-GB"'                  Hash = "abc123"'                  HashAlgorithm = "ROT13"'                  PackageFileSize = 4200'                  ProjectUrl = "https://en.wikipedia.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy_(fictional)"'                  ReleaseNotes = "Mostly Harmless"'                  RequiresLicenseAcceptance = true'                  Published = new DateTime(1979' 10' 12)'                  Summary = "A truly remarkable book"'                  Tags = "Guide' Harmless' Mostly"'                  Title = "The Hitchhiker's Guide to the Galaxy"'                  DownloadCount = 421'                  MinClientVersion = "4.2.8"'                  LicenseUrl = "https://blarg/"'                  LicenseNames = "Foo Public License' Some Other License"'                  LicenseReportUrl = "https://reporturl"              };
Magic Number,NuGetGallery.OData.Interceptors,PackageExtensionsFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,CreateFakeBasePackage,The following statement contains a magic number: return new Package()              {                  PackageRegistration = new PackageRegistration                  {                      Id = "Hitchhikers.Guide"'                      DownloadCount = 420000                  }'                  Version = "04.02-harmless"'                  NormalizedVersion = "4.2.0-harmless"'                  FlattenedAuthors = "Life' The Universe' Everything"'                  Copyright = "Megadodo Publications"'                  Created = new DateTime(1971' 4' 2)'                  FlattenedDependencies = "A|B|C"'                  Description = "The standard repository for all knowledge and wisdom"'                  IconUrl = "http://notreal.example/foo.ico"'                  IsLatestStable = false'                  IsLatestStableSemVer2 = false'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsPrerelease = true'                  LastUpdated = new DateTime(2002' 4' 30)'                  Language = "en-GB"'                  Hash = "abc123"'                  HashAlgorithm = "ROT13"'                  PackageFileSize = 4200'                  ProjectUrl = "https://en.wikipedia.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy_(fictional)"'                  ReleaseNotes = "Mostly Harmless"'                  RequiresLicenseAcceptance = true'                  Published = new DateTime(1979' 10' 12)'                  Summary = "A truly remarkable book"'                  Tags = "Guide' Harmless' Mostly"'                  Title = "The Hitchhiker's Guide to the Galaxy"'                  DownloadCount = 421'                  MinClientVersion = "4.2.8"'                  LicenseUrl = "https://blarg/"'                  LicenseNames = "Foo Public License' Some Other License"'                  LicenseReportUrl = "https://reporturl"              };
Magic Number,NuGetGallery.OData.Interceptors,PackageExtensionsFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,CreateFakeBasePackage,The following statement contains a magic number: return new Package()              {                  PackageRegistration = new PackageRegistration                  {                      Id = "Hitchhikers.Guide"'                      DownloadCount = 420000                  }'                  Version = "04.02-harmless"'                  NormalizedVersion = "4.2.0-harmless"'                  FlattenedAuthors = "Life' The Universe' Everything"'                  Copyright = "Megadodo Publications"'                  Created = new DateTime(1971' 4' 2)'                  FlattenedDependencies = "A|B|C"'                  Description = "The standard repository for all knowledge and wisdom"'                  IconUrl = "http://notreal.example/foo.ico"'                  IsLatestStable = false'                  IsLatestStableSemVer2 = false'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsPrerelease = true'                  LastUpdated = new DateTime(2002' 4' 30)'                  Language = "en-GB"'                  Hash = "abc123"'                  HashAlgorithm = "ROT13"'                  PackageFileSize = 4200'                  ProjectUrl = "https://en.wikipedia.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy_(fictional)"'                  ReleaseNotes = "Mostly Harmless"'                  RequiresLicenseAcceptance = true'                  Published = new DateTime(1979' 10' 12)'                  Summary = "A truly remarkable book"'                  Tags = "Guide' Harmless' Mostly"'                  Title = "The Hitchhiker's Guide to the Galaxy"'                  DownloadCount = 421'                  MinClientVersion = "4.2.8"'                  LicenseUrl = "https://blarg/"'                  LicenseNames = "Foo Public License' Some Other License"'                  LicenseReportUrl = "https://reporturl"              };
Magic Number,NuGetGallery.OData.Interceptors,PackageExtensionsFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,CreateFakeBasePackage,The following statement contains a magic number: return new Package()              {                  PackageRegistration = new PackageRegistration                  {                      Id = "Hitchhikers.Guide"'                      DownloadCount = 420000                  }'                  Version = "04.02-harmless"'                  NormalizedVersion = "4.2.0-harmless"'                  FlattenedAuthors = "Life' The Universe' Everything"'                  Copyright = "Megadodo Publications"'                  Created = new DateTime(1971' 4' 2)'                  FlattenedDependencies = "A|B|C"'                  Description = "The standard repository for all knowledge and wisdom"'                  IconUrl = "http://notreal.example/foo.ico"'                  IsLatestStable = false'                  IsLatestStableSemVer2 = false'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsPrerelease = true'                  LastUpdated = new DateTime(2002' 4' 30)'                  Language = "en-GB"'                  Hash = "abc123"'                  HashAlgorithm = "ROT13"'                  PackageFileSize = 4200'                  ProjectUrl = "https://en.wikipedia.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy_(fictional)"'                  ReleaseNotes = "Mostly Harmless"'                  RequiresLicenseAcceptance = true'                  Published = new DateTime(1979' 10' 12)'                  Summary = "A truly remarkable book"'                  Tags = "Guide' Harmless' Mostly"'                  Title = "The Hitchhiker's Guide to the Galaxy"'                  DownloadCount = 421'                  MinClientVersion = "4.2.8"'                  LicenseUrl = "https://blarg/"'                  LicenseNames = "Foo Public License' Some Other License"'                  LicenseReportUrl = "https://reporturl"              };
Magic Number,NuGetGallery.OData.Interceptors,PackageExtensionsFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,CreateFakeBasePackage,The following statement contains a magic number: return new Package()              {                  PackageRegistration = new PackageRegistration                  {                      Id = "Hitchhikers.Guide"'                      DownloadCount = 420000                  }'                  Version = "04.02-harmless"'                  NormalizedVersion = "4.2.0-harmless"'                  FlattenedAuthors = "Life' The Universe' Everything"'                  Copyright = "Megadodo Publications"'                  Created = new DateTime(1971' 4' 2)'                  FlattenedDependencies = "A|B|C"'                  Description = "The standard repository for all knowledge and wisdom"'                  IconUrl = "http://notreal.example/foo.ico"'                  IsLatestStable = false'                  IsLatestStableSemVer2 = false'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsPrerelease = true'                  LastUpdated = new DateTime(2002' 4' 30)'                  Language = "en-GB"'                  Hash = "abc123"'                  HashAlgorithm = "ROT13"'                  PackageFileSize = 4200'                  ProjectUrl = "https://en.wikipedia.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy_(fictional)"'                  ReleaseNotes = "Mostly Harmless"'                  RequiresLicenseAcceptance = true'                  Published = new DateTime(1979' 10' 12)'                  Summary = "A truly remarkable book"'                  Tags = "Guide' Harmless' Mostly"'                  Title = "The Hitchhiker's Guide to the Galaxy"'                  DownloadCount = 421'                  MinClientVersion = "4.2.8"'                  LicenseUrl = "https://blarg/"'                  LicenseNames = "Foo Public License' Some Other License"'                  LicenseReportUrl = "https://reporturl"              };
Magic Number,NuGetGallery.OData.Interceptors,PackageExtensionsFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,CreateFakeBasePackage,The following statement contains a magic number: return new Package()              {                  PackageRegistration = new PackageRegistration                  {                      Id = "Hitchhikers.Guide"'                      DownloadCount = 420000                  }'                  Version = "04.02-harmless"'                  NormalizedVersion = "4.2.0-harmless"'                  FlattenedAuthors = "Life' The Universe' Everything"'                  Copyright = "Megadodo Publications"'                  Created = new DateTime(1971' 4' 2)'                  FlattenedDependencies = "A|B|C"'                  Description = "The standard repository for all knowledge and wisdom"'                  IconUrl = "http://notreal.example/foo.ico"'                  IsLatestStable = false'                  IsLatestStableSemVer2 = false'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsPrerelease = true'                  LastUpdated = new DateTime(2002' 4' 30)'                  Language = "en-GB"'                  Hash = "abc123"'                  HashAlgorithm = "ROT13"'                  PackageFileSize = 4200'                  ProjectUrl = "https://en.wikipedia.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy_(fictional)"'                  ReleaseNotes = "Mostly Harmless"'                  RequiresLicenseAcceptance = true'                  Published = new DateTime(1979' 10' 12)'                  Summary = "A truly remarkable book"'                  Tags = "Guide' Harmless' Mostly"'                  Title = "The Hitchhiker's Guide to the Galaxy"'                  DownloadCount = 421'                  MinClientVersion = "4.2.8"'                  LicenseUrl = "https://blarg/"'                  LicenseNames = "Foo Public License' Some Other License"'                  LicenseReportUrl = "https://reporturl"              };
Magic Number,NuGetGallery.OData.Interceptors,PackageExtensionsFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,CreateFakeBasePackage,The following statement contains a magic number: return new Package()              {                  PackageRegistration = new PackageRegistration                  {                      Id = "Hitchhikers.Guide"'                      DownloadCount = 420000                  }'                  Version = "04.02-harmless"'                  NormalizedVersion = "4.2.0-harmless"'                  FlattenedAuthors = "Life' The Universe' Everything"'                  Copyright = "Megadodo Publications"'                  Created = new DateTime(1971' 4' 2)'                  FlattenedDependencies = "A|B|C"'                  Description = "The standard repository for all knowledge and wisdom"'                  IconUrl = "http://notreal.example/foo.ico"'                  IsLatestStable = false'                  IsLatestStableSemVer2 = false'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsPrerelease = true'                  LastUpdated = new DateTime(2002' 4' 30)'                  Language = "en-GB"'                  Hash = "abc123"'                  HashAlgorithm = "ROT13"'                  PackageFileSize = 4200'                  ProjectUrl = "https://en.wikipedia.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy_(fictional)"'                  ReleaseNotes = "Mostly Harmless"'                  RequiresLicenseAcceptance = true'                  Published = new DateTime(1979' 10' 12)'                  Summary = "A truly remarkable book"'                  Tags = "Guide' Harmless' Mostly"'                  Title = "The Hitchhiker's Guide to the Galaxy"'                  DownloadCount = 421'                  MinClientVersion = "4.2.8"'                  LicenseUrl = "https://blarg/"'                  LicenseNames = "Foo Public License' Some Other License"'                  LicenseReportUrl = "https://reporturl"              };
Magic Number,NuGetGallery.OData.Interceptors,PackageExtensionsFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,CreateFakeBasePackage,The following statement contains a magic number: return new Package()              {                  PackageRegistration = new PackageRegistration                  {                      Id = "Hitchhikers.Guide"'                      DownloadCount = 420000                  }'                  Version = "04.02-harmless"'                  NormalizedVersion = "4.2.0-harmless"'                  FlattenedAuthors = "Life' The Universe' Everything"'                  Copyright = "Megadodo Publications"'                  Created = new DateTime(1971' 4' 2)'                  FlattenedDependencies = "A|B|C"'                  Description = "The standard repository for all knowledge and wisdom"'                  IconUrl = "http://notreal.example/foo.ico"'                  IsLatestStable = false'                  IsLatestStableSemVer2 = false'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsPrerelease = true'                  LastUpdated = new DateTime(2002' 4' 30)'                  Language = "en-GB"'                  Hash = "abc123"'                  HashAlgorithm = "ROT13"'                  PackageFileSize = 4200'                  ProjectUrl = "https://en.wikipedia.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy_(fictional)"'                  ReleaseNotes = "Mostly Harmless"'                  RequiresLicenseAcceptance = true'                  Published = new DateTime(1979' 10' 12)'                  Summary = "A truly remarkable book"'                  Tags = "Guide' Harmless' Mostly"'                  Title = "The Hitchhiker's Guide to the Galaxy"'                  DownloadCount = 421'                  MinClientVersion = "4.2.8"'                  LicenseUrl = "https://blarg/"'                  LicenseNames = "Foo Public License' Some Other License"'                  LicenseReportUrl = "https://reporturl"              };
Magic Number,NuGetGallery.OData.Interceptors,PackageExtensionsFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,CreateFakeBasePackage,The following statement contains a magic number: return new Package()              {                  PackageRegistration = new PackageRegistration                  {                      Id = "Hitchhikers.Guide"'                      DownloadCount = 420000                  }'                  Version = "04.02-harmless"'                  NormalizedVersion = "4.2.0-harmless"'                  FlattenedAuthors = "Life' The Universe' Everything"'                  Copyright = "Megadodo Publications"'                  Created = new DateTime(1971' 4' 2)'                  FlattenedDependencies = "A|B|C"'                  Description = "The standard repository for all knowledge and wisdom"'                  IconUrl = "http://notreal.example/foo.ico"'                  IsLatestStable = false'                  IsLatestStableSemVer2 = false'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsPrerelease = true'                  LastUpdated = new DateTime(2002' 4' 30)'                  Language = "en-GB"'                  Hash = "abc123"'                  HashAlgorithm = "ROT13"'                  PackageFileSize = 4200'                  ProjectUrl = "https://en.wikipedia.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy_(fictional)"'                  ReleaseNotes = "Mostly Harmless"'                  RequiresLicenseAcceptance = true'                  Published = new DateTime(1979' 10' 12)'                  Summary = "A truly remarkable book"'                  Tags = "Guide' Harmless' Mostly"'                  Title = "The Hitchhiker's Guide to the Galaxy"'                  DownloadCount = 421'                  MinClientVersion = "4.2.8"'                  LicenseUrl = "https://blarg/"'                  LicenseNames = "Foo Public License' Some Other License"'                  LicenseReportUrl = "https://reporturl"              };
Magic Number,NuGetGallery.OData.Interceptors,PackageExtensionsFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,CreateFakeBasePackage,The following statement contains a magic number: return new Package()              {                  PackageRegistration = new PackageRegistration                  {                      Id = "Hitchhikers.Guide"'                      DownloadCount = 420000                  }'                  Version = "04.02-harmless"'                  NormalizedVersion = "4.2.0-harmless"'                  FlattenedAuthors = "Life' The Universe' Everything"'                  Copyright = "Megadodo Publications"'                  Created = new DateTime(1971' 4' 2)'                  FlattenedDependencies = "A|B|C"'                  Description = "The standard repository for all knowledge and wisdom"'                  IconUrl = "http://notreal.example/foo.ico"'                  IsLatestStable = false'                  IsLatestStableSemVer2 = false'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsPrerelease = true'                  LastUpdated = new DateTime(2002' 4' 30)'                  Language = "en-GB"'                  Hash = "abc123"'                  HashAlgorithm = "ROT13"'                  PackageFileSize = 4200'                  ProjectUrl = "https://en.wikipedia.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy_(fictional)"'                  ReleaseNotes = "Mostly Harmless"'                  RequiresLicenseAcceptance = true'                  Published = new DateTime(1979' 10' 12)'                  Summary = "A truly remarkable book"'                  Tags = "Guide' Harmless' Mostly"'                  Title = "The Hitchhiker's Guide to the Galaxy"'                  DownloadCount = 421'                  MinClientVersion = "4.2.8"'                  LicenseUrl = "https://blarg/"'                  LicenseNames = "Foo Public License' Some Other License"'                  LicenseReportUrl = "https://reporturl"              };
Magic Number,NuGetGallery.OData.Interceptors,PackageExtensionsFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,CreateFakeBasePackage,The following statement contains a magic number: return new Package()              {                  PackageRegistration = new PackageRegistration                  {                      Id = "Hitchhikers.Guide"'                      DownloadCount = 420000                  }'                  Version = "04.02-harmless"'                  NormalizedVersion = "4.2.0-harmless"'                  FlattenedAuthors = "Life' The Universe' Everything"'                  Copyright = "Megadodo Publications"'                  Created = new DateTime(1971' 4' 2)'                  FlattenedDependencies = "A|B|C"'                  Description = "The standard repository for all knowledge and wisdom"'                  IconUrl = "http://notreal.example/foo.ico"'                  IsLatestStable = false'                  IsLatestStableSemVer2 = false'                  IsLatest = true'                  IsLatestSemVer2 = true'                  IsPrerelease = true'                  LastUpdated = new DateTime(2002' 4' 30)'                  Language = "en-GB"'                  Hash = "abc123"'                  HashAlgorithm = "ROT13"'                  PackageFileSize = 4200'                  ProjectUrl = "https://en.wikipedia.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy_(fictional)"'                  ReleaseNotes = "Mostly Harmless"'                  RequiresLicenseAcceptance = true'                  Published = new DateTime(1979' 10' 12)'                  Summary = "A truly remarkable book"'                  Tags = "Guide' Harmless' Mostly"'                  Title = "The Hitchhiker's Guide to the Galaxy"'                  DownloadCount = 421'                  MinClientVersion = "4.2.8"'                  LicenseUrl = "https://blarg/"'                  LicenseNames = "Foo Public License' Some Other License"'                  LicenseReportUrl = "https://reporturl"              };
Magic Number,NuGetGallery.OData.Interceptors,TheProjectV2FeedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,MapsBasicPackagePropertiesCorrectly,The following statement contains a magic number: Assert.Equal(420000' actual.DownloadCount);
Magic Number,NuGetGallery.OData.Interceptors,TheProjectV2FeedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,MapsBasicPackagePropertiesCorrectly,The following statement contains a magic number: Assert.Equal(new DateTime(1971' 4' 2)' actual.Created);
Magic Number,NuGetGallery.OData.Interceptors,TheProjectV2FeedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,MapsBasicPackagePropertiesCorrectly,The following statement contains a magic number: Assert.Equal(new DateTime(1971' 4' 2)' actual.Created);
Magic Number,NuGetGallery.OData.Interceptors,TheProjectV2FeedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,MapsBasicPackagePropertiesCorrectly,The following statement contains a magic number: Assert.Equal(new DateTime(1971' 4' 2)' actual.Created);
Magic Number,NuGetGallery.OData.Interceptors,TheProjectV2FeedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,MapsBasicPackagePropertiesCorrectly,The following statement contains a magic number: Assert.Equal(new DateTime(2002' 4' 30)' actual.LastUpdated);
Magic Number,NuGetGallery.OData.Interceptors,TheProjectV2FeedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,MapsBasicPackagePropertiesCorrectly,The following statement contains a magic number: Assert.Equal(new DateTime(2002' 4' 30)' actual.LastUpdated);
Magic Number,NuGetGallery.OData.Interceptors,TheProjectV2FeedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,MapsBasicPackagePropertiesCorrectly,The following statement contains a magic number: Assert.Equal(new DateTime(2002' 4' 30)' actual.LastUpdated);
Magic Number,NuGetGallery.OData.Interceptors,TheProjectV2FeedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,MapsBasicPackagePropertiesCorrectly,The following statement contains a magic number: Assert.Equal(4200' actual.PackageSize);
Magic Number,NuGetGallery.OData.Interceptors,TheProjectV2FeedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,MapsBasicPackagePropertiesCorrectly,The following statement contains a magic number: Assert.Equal(new DateTime(1979' 10' 12)' actual.Published);
Magic Number,NuGetGallery.OData.Interceptors,TheProjectV2FeedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,MapsBasicPackagePropertiesCorrectly,The following statement contains a magic number: Assert.Equal(new DateTime(1979' 10' 12)' actual.Published);
Magic Number,NuGetGallery.OData.Interceptors,TheProjectV2FeedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,MapsBasicPackagePropertiesCorrectly,The following statement contains a magic number: Assert.Equal(new DateTime(1979' 10' 12)' actual.Published);
Magic Number,NuGetGallery.OData.Interceptors,TheProjectV2FeedPackageMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\OData\Interceptors\PackageExtensionsFacts.cs,MapsBasicPackagePropertiesCorrectly,The following statement contains a magic number: Assert.Equal(421' actual.VersionDownloadCount);
Magic Number,NuGetGallery.PackageCurators,TheCurateMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\PackageCurators\Windows8PackageCuratorFacts.cs,WillIncludeThePackageUsingTheCuratedFeedKey,The following statement contains a magic number: curator.StubCuratedFeed.Key = 42;
Magic Number,NuGetGallery.PackageCurators,TheCurateMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\PackageCurators\Windows8PackageCuratorFacts.cs,WillIncludeThePackageUsingThePackageRegistrationKey,The following statement contains a magic number: stubGalleryPackage.PackageRegistration.Key = 42;
Magic Number,NuGetGallery.PackageCurators,TheCurateMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\PackageCurators\Windows8PackageCuratorFacts.cs,WillIncludeThePackageUsingTheCuratedFeedKey,The following statement contains a magic number: curator.StubCuratedFeed.Key = 42;
Magic Number,NuGetGallery.PackageCurators,TheCurateMethod,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\PackageCurators\Windows8PackageCuratorFacts.cs,WillIncludeThePackageUsingThePackageRegistrationKey,The following statement contains a magic number: stubGalleryPackage.PackageRegistration.Key = 42;
Magic Number,NuGetGallery.TestUtils,PackageServiceUtility,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\TestUtils\TestServiceUtility.cs,CreateTestPackage,The following statement contains a magic number: var package = new Package              {                  Key = 123'                  PackageRegistration = packageRegistration'                  Version = "1.0.0"'                  Hash = _packageHashForTests'                  SupportedFrameworks = new List<PackageFramework>                  {                      framework                  }'                  FlattenedAuthors = "maarten"'                  Authors = new List<PackageAuthor>                  {                      author                  }'                  Dependencies = new List<PackageDependency>                  {                      dependency                  }'                  User = new User("test")              };
Magic Number,NuGetGallery.ViewModels,TheHasOrphanPackagesProperty,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DeleteAccountViewModelFacts.cs,WhenPackageHasMultipleUserOwners_ReturnsFalse,The following statement contains a magic number: Assert.Equal(2' viewModel.Packages.First().Owners.Count);
Magic Number,NuGetGallery.ViewModels,TheHasOrphanPackagesProperty,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DeleteAccountViewModelFacts.cs,WhenPackageHasSingleOrgOwnerWithMultipleMembers_ReturnsFalse,The following statement contains a magic number: for (int i = 0; i < 2; i++)                  {                      var user = new User();                      var membership = new Membership()                      {                          Organization = organization'                          Member = user'                          IsAdmin = false                      };                      organization.Members.Add(membership);                      user.Organizations.Add(membership);                  }
Magic Number,NuGetGallery.ViewModels,TheHasOrphanPackagesProperty,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DeleteAccountViewModelFacts.cs,WhenPackageHasSingleOrgOwnerWithMultipleMembers_ReturnsFalse,The following statement contains a magic number: Assert.Equal(2' organization.Members.Count);
Magic Number,NuGetGallery.ViewModels,TheConstructor,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DependencySetsViewModelFacts.cs,GivenAListOfDependenciesItShouldGroupByTargetFrameworkName,The following statement contains a magic number: Assert.Equal(3' vm.DependencySets.Count);
Magic Number,NuGetGallery.ViewModels,TheConstructor,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DependencySetsViewModelFacts.cs,GivenAListOfDependenciesTargetFrameworksWillBeOrdered,The following statement contains a magic number: Assert.Equal(7' viewModel.DependencySets.Count);
Magic Number,NuGetGallery.ViewModels,TheConstructor,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DependencySetsViewModelFacts.cs,GivenAListOfDependenciesTargetFrameworksWillBeOrdered,The following statement contains a magic number: Assert.Equal(".NETStandard 1.3"' dependencySetsList[2]);
Magic Number,NuGetGallery.ViewModels,TheConstructor,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DependencySetsViewModelFacts.cs,GivenAListOfDependenciesTargetFrameworksWillBeOrdered,The following statement contains a magic number: Assert.Equal(".NETStandard 1.5"' dependencySetsList[3]);
Magic Number,NuGetGallery.ViewModels,TheConstructor,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DependencySetsViewModelFacts.cs,GivenAListOfDependenciesTargetFrameworksWillBeOrdered,The following statement contains a magic number: Assert.Equal("MonoAndroid 2.3"' dependencySetsList[4]);
Magic Number,NuGetGallery.ViewModels,TheConstructor,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DependencySetsViewModelFacts.cs,GivenAListOfDependenciesTargetFrameworksWillBeOrdered,The following statement contains a magic number: Assert.Equal("Silverlight 4.0"' dependencySetsList[5]);
Magic Number,NuGetGallery.ViewModels,TheConstructor,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DependencySetsViewModelFacts.cs,GivenAListOfDependenciesTargetFrameworksWillBeOrdered,The following statement contains a magic number: Assert.Equal("Silverlight 5.0"' dependencySetsList[6]);
Magic Number,NuGetGallery.ViewModels,TheConstructor,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DependencySetsViewModelFacts.cs,GivenAListOfDependenciesPackageIdsWillBeOrdered,The following statement contains a magic number: Assert.Equal(4' viewModel.DependencySets.First().Value.Count());
Magic Number,NuGetGallery.ViewModels,TheConstructor,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DependencySetsViewModelFacts.cs,GivenAListOfDependenciesPackageIdsWillBeOrdered,The following statement contains a magic number: Assert.Equal("cde"' dependencyViewModels[2].Id);
Magic Number,NuGetGallery.ViewModels,TheConstructor,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DependencySetsViewModelFacts.cs,GivenAListOfDependenciesPackageIdsWillBeOrdered,The following statement contains a magic number: Assert.Equal("def"' dependencyViewModels[3].Id);
Magic Number,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,TheCtorSortsPackageVersionsProperly,The following statement contains a magic number: Assert.Equal("1.0.0-alpha"' packageVersions[6].Version);
Magic Number,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,TheCtorSortsPackageVersionsProperly,The following statement contains a magic number: Assert.Equal("1.0.0-alpha2"' packageVersions[5].Version);
Magic Number,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,TheCtorSortsPackageVersionsProperly,The following statement contains a magic number: Assert.Equal("1.0.0-beta"' packageVersions[4].Version);
Magic Number,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,TheCtorSortsPackageVersionsProperly,The following statement contains a magic number: Assert.Equal("1.0.0"' packageVersions[3].Version);
Magic Number,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,TheCtorSortsPackageVersionsProperly,The following statement contains a magic number: Assert.Equal("1.0.2-beta"' packageVersions[2].Version);
Magic Number,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,AvgDownloadsPerDayConsidersOldestPackageVersionInHistory,The following statement contains a magic number: const int daysSinceFirstPackageCreated = 10;
Magic Number,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,AvgDownloadsPerDayConsidersOldestPackageVersionInHistory,The following statement contains a magic number: const int totalDownloadCount = 250;
Magic Number,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,AvgDownloadsPerDayConsidersOldestPackageVersionInHistory,The following statement contains a magic number: var package = new Package              {                  // Simulating that lowest package version was pushed latest' on-purpose'                   // to assert we use the *oldest* package version in the calculation.                  Created = utcNow'                  Dependencies = Enumerable.Empty<PackageDependency>().ToList()'                  DownloadCount = 10'                  PackageRegistration = packageRegistration'                  Version = "1.0.0"              };
Magic Number,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,AvgDownloadsPerDayConsidersOldestPackageVersionInHistory,The following statement contains a magic number: package.PackageRegistration.Packages = new[]                  {                      package'                      new Package { Version = "1.0.1"' PackageRegistration = packageRegistration' DownloadCount = 100' Created = utcNow.AddDays(-daysSinceFirstPackageCreated) }'                      new Package { Version = "2.0.1"' PackageRegistration = packageRegistration' DownloadCount = 140' Created = utcNow.AddDays(-3) }                  };
Magic Number,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,AvgDownloadsPerDayConsidersOldestPackageVersionInHistory,The following statement contains a magic number: package.PackageRegistration.Packages = new[]                  {                      package'                      new Package { Version = "1.0.1"' PackageRegistration = packageRegistration' DownloadCount = 100' Created = utcNow.AddDays(-daysSinceFirstPackageCreated) }'                      new Package { Version = "2.0.1"' PackageRegistration = packageRegistration' DownloadCount = 140' Created = utcNow.AddDays(-3) }                  };
Magic Number,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,AvgDownloadsPerDayConsidersOldestPackageVersionInHistory,The following statement contains a magic number: package.PackageRegistration.Packages = new[]                  {                      package'                      new Package { Version = "1.0.1"' PackageRegistration = packageRegistration' DownloadCount = 100' Created = utcNow.AddDays(-daysSinceFirstPackageCreated) }'                      new Package { Version = "2.0.1"' PackageRegistration = packageRegistration' DownloadCount = 140' Created = utcNow.AddDays(-3) }                  };
Magic Number,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,DownloadsPerDayLabelShowsLessThanOneWhenAverageBelowOne,The following statement contains a magic number: const int downloadCount = 10;
Magic Number,NuGetGallery.ViewModels,DisplayPackageViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\DisplayPackageViewModelFacts.cs,DownloadsPerDayLabelShowsLessThanOneWhenAverageBelowOne,The following statement contains a magic number: const int daysSinceCreated = 11;
Magic Number,NuGetGallery.ViewModels,ListPackageItemViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\ListPackageItemViewModelFacts.cs,LongDescriptionsSingleWordTruncatedToLimit,The following statement contains a magic number: var charLimit = 300;
Magic Number,NuGetGallery.ViewModels,ListPackageItemViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\ListPackageItemViewModelFacts.cs,TagsAreParsed,The following statement contains a magic number: Assert.Equal(3' listPackageItemViewModel.Tags.Count());
Magic Number,NuGetGallery.ViewModels,PreviousNextPagerViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\PreviousNextPagerViewModelFacts.cs,PagerAtFirstPageDoesNotHavePreviousPageButDoesHaveNext,The following statement contains a magic number: var pager = new PreviousNextPagerViewModel<int>(new[] { 0' 1' 2 }' currentPageIndex' 2' p => p.ToString());
Magic Number,NuGetGallery.ViewModels,PreviousNextPagerViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\PreviousNextPagerViewModelFacts.cs,PagerAtFirstPageDoesNotHavePreviousPageButDoesHaveNext,The following statement contains a magic number: var pager = new PreviousNextPagerViewModel<int>(new[] { 0' 1' 2 }' currentPageIndex' 2' p => p.ToString());
Magic Number,NuGetGallery.ViewModels,PreviousNextPagerViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\PreviousNextPagerViewModelFacts.cs,PagerWithPageSizeGreaterThanItemsDoesNotHavePreviousOrNext,The following statement contains a magic number: var pager = new PreviousNextPagerViewModel<int>(new[] { 0' 1' 2 }' currentPageIndex' 1' p => p.ToString());
Magic Number,NuGetGallery.ViewModels,PreviousNextPagerViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\PreviousNextPagerViewModelFacts.cs,PagerWithPageSizeEqualToItemsCountDoesNotHavePreviousOrNext,The following statement contains a magic number: var pager = new PreviousNextPagerViewModel<int>(new[] { 0' 1' 2' 3' 4 }' currentPageIndex' 1' p => p.ToString());
Magic Number,NuGetGallery.ViewModels,PreviousNextPagerViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\PreviousNextPagerViewModelFacts.cs,PagerWithPageSizeEqualToItemsCountDoesNotHavePreviousOrNext,The following statement contains a magic number: var pager = new PreviousNextPagerViewModel<int>(new[] { 0' 1' 2' 3' 4 }' currentPageIndex' 1' p => p.ToString());
Magic Number,NuGetGallery.ViewModels,PreviousNextPagerViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\PreviousNextPagerViewModelFacts.cs,PagerWithPageSizeEqualToItemsCountDoesNotHavePreviousOrNext,The following statement contains a magic number: var pager = new PreviousNextPagerViewModel<int>(new[] { 0' 1' 2' 3' 4 }' currentPageIndex' 1' p => p.ToString());
Magic Number,NuGetGallery.ViewModels,PreviousNextPagerViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\PreviousNextPagerViewModelFacts.cs,LastPageShowsPreviousLinkButNotNextLink,The following statement contains a magic number: var pager = new PreviousNextPagerViewModel<int>(new[] { 0' 1' 2' 3' 4' 5 }' currentPageIndex' 2' p => p.ToString());
Magic Number,NuGetGallery.ViewModels,PreviousNextPagerViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\PreviousNextPagerViewModelFacts.cs,LastPageShowsPreviousLinkButNotNextLink,The following statement contains a magic number: var pager = new PreviousNextPagerViewModel<int>(new[] { 0' 1' 2' 3' 4' 5 }' currentPageIndex' 2' p => p.ToString());
Magic Number,NuGetGallery.ViewModels,PreviousNextPagerViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\PreviousNextPagerViewModelFacts.cs,LastPageShowsPreviousLinkButNotNextLink,The following statement contains a magic number: var pager = new PreviousNextPagerViewModel<int>(new[] { 0' 1' 2' 3' 4' 5 }' currentPageIndex' 2' p => p.ToString());
Magic Number,NuGetGallery.ViewModels,PreviousNextPagerViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\PreviousNextPagerViewModelFacts.cs,LastPageShowsPreviousLinkButNotNextLink,The following statement contains a magic number: var pager = new PreviousNextPagerViewModel<int>(new[] { 0' 1' 2' 3' 4' 5 }' currentPageIndex' 2' p => p.ToString());
Magic Number,NuGetGallery.ViewModels,PreviousNextPagerViewModelFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\PreviousNextPagerViewModelFacts.cs,LastPageShowsPreviousLinkButNotNextLink,The following statement contains a magic number: var pager = new PreviousNextPagerViewModel<int>(new[] { 0' 1' 2' 3' 4' 5 }' currentPageIndex' 2' p => p.ToString());
Magic Number,NuGetGallery.ViewModels,TheTotalDownloadCountProperty,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\UserProfileModelFacts.cs,TotalDownloadCount_DoesNotThrowIntegerOverflow,The following statement contains a magic number: var profile = new UserProfileModel(user' packages' 0' 10' controller.Url);
Magic Number,NuGetGallery.ViewModels,TheTotalDownloadCountProperty,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\ViewModels\UserProfileModelFacts.cs,TotalDownloadCount_DoesNotThrowIntegerOverflow,The following statement contains a magic number: long expected = (long)int.MaxValue * 2;
Missing Default,NuGetGallery,ReadMeServiceFacts,C:\repos\NuGet_NuGetGallery\tests\NuGetGallery.Facts\Services\ReadMeServiceFacts.cs,GetReadMeRequest,The following switch statement is missing a default case: switch (sourceType)              {                  case ReadMeService.TypeFile:                      var fileMock = new Mock<HttpPostedFileBase>();                      fileMock.Setup(f => f.FileName).Returns(fileName);                      fileMock.Setup(f => f.ContentLength).Returns(markdown.Length);                      fileMock.Setup(f => f.InputStream).Returns(new MemoryStream(Encoding.UTF8.GetBytes(markdown)));                      request.SourceFile = fileMock.Object;                      break;                    case ReadMeService.TypeWritten:                      request.SourceText = markdown;                      break;                    case ReadMeService.TypeUrl:                      request.SourceUrl = url;                      break;              }
