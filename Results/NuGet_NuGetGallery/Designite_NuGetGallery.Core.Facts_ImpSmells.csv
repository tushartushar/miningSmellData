Implementation smell,Namespace,Class,File,Method,Description
Long Method,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_PackageAuditRecord,The method has 109 lines of code.
Long Parameter List,NuGetGallery.Auditing,TestAuditingService,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AggregateAuditingServiceTests.cs,SaveAuditRecordAsync,The method has 5 parameters. Parameters: auditData' resourceType' filePath' action' timestamp
Long Parameter List,NuGetGallery.Auditing,TestAuditingService,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AggregateAuditingServiceTests.cs,SaveAuditRecordAsync,The method has 5 parameters. Parameters: auditData' resourceType' filePath' action' timestamp
Long Parameter List,NuGetGallery.Auditing,Data,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\ObfuscatorJsonConverterTests.cs,Data,The method has 7 parameters. Parameters: userName' ip' authors' userKey' supportedTypeRandom' notSupportedTypeRandom' otherData
Long Parameter List,NuGetGallery,CloudBlobCoreFileStorageServiceIntegrationTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceIntegrationTests.cs,CopyFileWorksAsync,The method has 5 parameters. Parameters: copyAsync' srcPrefix' srcService' destPrefix' destService
Long Parameter List,NuGetGallery,CloudBlobCoreFileStorageServiceIntegrationTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceIntegrationTests.cs,CopyFileWithNamesAsync,The method has 6 parameters. Parameters: srcService' srcFolderName' srcFileName' destService' destFolderName' destFileName
Long Parameter List,NuGetGallery,CloudBlobCoreFileStorageServiceIntegrationTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceIntegrationTests.cs,CopyFileWithUriAsync,The method has 6 parameters. Parameters: srcService' srcFolderName' srcFileName' destService' destFolderName' destFileName
Long Parameter List,NuGetGallery,TestPackage,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\TestUtils\TestPackage.cs,WriteNuspec,The method has 27 parameters. Parameters: stream' leaveStreamOpen' id' version' title' summary' authors' owners' description' tags' language' copyright' releaseNotes' minClientVersion' licenseUrl' projectUrl' iconUrl' requireLicenseAcceptance' developmentDependency' packageDependencyGroups' packageTypes' isSymbolPackage' repositoryMetadata' getCustomNodes' licenseExpression' licenseFilename' iconFilename
Long Parameter List,NuGetGallery,TestPackage,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\TestUtils\TestPackage.cs,CreateTestPackageStream,The method has 29 parameters. Parameters: id' version' title' summary' authors' owners' description' tags' language' copyright' releaseNotes' minClientVersion' licenseUrl' projectUrl' iconUrl' requireLicenseAcceptance' developmentDependency' packageDependencyGroups' packageTypes' repositoryMetadata' populatePackage' isSymbolPackage' desiredTotalEntryCount' getCustomNuspecNodes' licenseExpression' licenseFilename' licenseFileContents' iconFilename' iconFileContents
Long Parameter List,NuGetGallery.Infrastructure.Mail.Messages,TheConstructor,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Infrastructure\Mail\Messages\CredentialRevokedMessageFacts.cs,GivenANullArgument_ItShouldThrow,The method has 6 parameters. Parameters: configuration' credential' leakedUrl' revocationSource' manageApiKeyUrl' contactUrl
Long Parameter List,NuGetGallery.Infrastructure.Mail.Messages,TheConstructor,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Infrastructure\Mail\Messages\CredentialRevokedMessageFacts.cs,GivenANullArgument_ItShouldThrow,The method has 6 parameters. Parameters: configuration' package' packageUrl' packageSupportUrl' emailSettingsUrl' warningMessages
Long Parameter List,NuGetGallery.Infrastructure.Mail.Messages,TheConstructor,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Infrastructure\Mail\Messages\CredentialRevokedMessageFacts.cs,GivenANullArgument_ItShouldThrow,The method has 7 parameters. Parameters: configuration' package' packageValidationSet' packageUrl' packageSupportUrl' announcementsUrl' twitterUrl
Long Parameter List,NuGetGallery.Infrastructure.Mail.Messages,TheConstructor,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Infrastructure\Mail\Messages\CredentialRevokedMessageFacts.cs,GivenANullArgument_ItShouldThrow,The method has 6 parameters. Parameters: configuration' symbolPackage' packageUrl' packageSupportUrl' emailSettingsUrl' warningMessages
Long Parameter List,NuGetGallery.Infrastructure.Mail.Messages,TheConstructor,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Infrastructure\Mail\Messages\CredentialRevokedMessageFacts.cs,GivenANullArgument_ItShouldThrow,The method has 7 parameters. Parameters: configuration' symbolPackage' packageValidationSet' packageUrl' packageSupportUrl' announcementsUrl' twitterUrl
Long Parameter List,NuGetGallery.TestUtils,PackageServiceUtility,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\TestUtils\PackageServiceUtility.cs,CreateNuGetPackage,The method has 26 parameters. Parameters: id' version' title' summary' authors' owners' description' tags' language' copyright' releaseNotes' minClientVersion' licenseUrl' projectUrl' iconUrl' requireLicenseAcceptance' developmentDependency' packageDependencyGroups' packageTypes' repositoryMetadata' isSigned' desiredTotalEntryCount' getCustomNuspecNodes' licenseExpression' licenseFilename' licenseFileContents
Long Parameter List,NuGetGallery.TestUtils,PackageServiceUtility,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\TestUtils\PackageServiceUtility.cs,CreateNuGetPackageStream,The method has 28 parameters. Parameters: id' version' title' summary' authors' owners' description' tags' language' copyright' releaseNotes' minClientVersion' licenseUrl' projectUrl' iconUrl' requireLicenseAcceptance' developmentDependency' packageDependencyGroups' packageTypes' repositoryMetadata' isSigned' desiredTotalEntryCount' getCustomNuspecNodes' licenseExpression' licenseFilename' licenseFileContents' iconFilename' iconFileBinaryContents
Long Identifier,NuGetGallery,TheCopyFileAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,,The length of the parameter _metadataSha512HashAlgorithmId is 30.
Long Identifier,NuGetGallery.Infrastructure.Mail.Messages,CredentialRevokedMessageFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Infrastructure\Mail\Messages\CredentialRevokedMessageFacts.cs,,The length of the parameter _expectedMarkdownBodyWithCredentialDescription is 46.
Long Identifier,NuGetGallery.Infrastructure.Mail.Messages,CredentialRevokedMessageFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Infrastructure\Mail\Messages\CredentialRevokedMessageFacts.cs,,The length of the parameter _expectedPlainTextBodyWithCredentialDescription is 47.
Long Identifier,NuGetGallery.Infrastructure.Mail.Messages,CredentialRevokedMessageFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Infrastructure\Mail\Messages\CredentialRevokedMessageFacts.cs,,The length of the parameter _expectedHtmlBodyWithCredentialDescription is 42.
Long Identifier,NuGetGallery.Infrastructure.Mail.Messages,CredentialRevokedMessageFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Infrastructure\Mail\Messages\CredentialRevokedMessageFacts.cs,,The length of the parameter _expectedMarkdownBodyWithNullCredentialDescription is 50.
Long Identifier,NuGetGallery.Infrastructure.Mail.Messages,CredentialRevokedMessageFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Infrastructure\Mail\Messages\CredentialRevokedMessageFacts.cs,,The length of the parameter _expectedPlainTextBodyWithNullCredentialDescription is 51.
Long Identifier,NuGetGallery.Infrastructure.Mail.Messages,CredentialRevokedMessageFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Infrastructure\Mail\Messages\CredentialRevokedMessageFacts.cs,,The length of the parameter _expectedHtmlBodyWithNullCredentialDescription is 46.
Long Identifier,NuGetGallery.Infrastructure.Mail.Messages,Fakes,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Infrastructure\Mail\Messages\MarkdownMessageBuilderFacts.cs,,The length of the parameter PackageOwnerSubscribedToPackagePushedNotification is 49.
Long Identifier,NuGetGallery.Infrastructure.Mail.Messages,Fakes,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Infrastructure\Mail\Messages\MarkdownMessageBuilderFacts.cs,,The length of the parameter PackageOwnerNotSubscribedToPackagePushedNotification is 52.
Long Identifier,NuGetGallery.Infrastructure.Mail.Messages,Fakes,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Infrastructure\Mail\Messages\MarkdownMessageBuilderFacts.cs,,The length of the parameter PackageOwnerWithEmailNotAllowed is 31.
Long Identifier,NuGetGallery.Packaging,ManifestValidatorFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\ManifestValidatorFacts.cs,,The length of the parameter NuSpecDependencyVersionPlaceholder is 34.
Long Identifier,NuGetGallery.Packaging,ManifestValidatorFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\ManifestValidatorFacts.cs,,The length of the parameter NuSpecDependencySetContainsInvalidId is 36.
Long Identifier,NuGetGallery.Packaging,ManifestValidatorFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\ManifestValidatorFacts.cs,,The length of the parameter NuSpecDependencySetContainsEmptyTargetFramework is 47.
Long Identifier,NuGetGallery.Packaging,ManifestValidatorFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\ManifestValidatorFacts.cs,,The length of the parameter NuSpecDependencySetContainsInvalidVersionRange is 46.
Long Identifier,NuGetGallery.Packaging,ManifestValidatorFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\ManifestValidatorFacts.cs,,The length of the parameter NuSpecFrameworkAssemblyReferenceContainsEmptyTargetFramework is 60.
Long Identifier,NuGetGallery.Packaging,ManifestValidatorFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\ManifestValidatorFacts.cs,,The length of the parameter NuSpecFrameworkAssemblyReferenceContainsUnsupportedTargetFramework is 66.
Long Identifier,NuGetGallery.Packaging,ManifestValidatorFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\ManifestValidatorFacts.cs,,The length of the parameter NuSpecFrameworkAssemblyReferenceContainsDuplicateDependency is 59.
Long Identifier,NuGetGallery.Packaging,ManifestValidatorFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\ManifestValidatorFacts.cs,,The length of the parameter NuSpecDependenciesContainsUnsupportedTargetFramework is 52.
Long Statement,NuGetGallery.Auditing,AuditActorTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditActorTests.cs,GetAspNetOnBehalfOfAsync_WithContext_ResturnActorWithCredentialKey,The length of the statement  "            var cliamsIdentity = new ClaimsIdentity(identity.Object' new List<Claim> { new Claim(NuGetClaims.CredentialKey' "99") }); " is 121.
Long Statement,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_UserAuditRecord,The length of the statement  "            var service = new TestAuditingService(async (string auditData' string resourceType' string filePath' string action' DateTime timestamp) => " is 138.
Long Statement,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_PackageAuditRecord,The length of the statement  "            var service = new TestAuditingService(async (string auditData' string resourceType' string filePath' string action' DateTime timestamp) => " is 138.
Long Statement,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_PackageRegistrationAuditRecord,The length of the statement  "            var auditRecord = new PackageRegistrationAuditRecord(packageRegistration' AuditedPackageRegistrationAction.AddOwner' owner: "b"); " is 129.
Long Statement,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_PackageRegistrationAuditRecord,The length of the statement  "            var service = new TestAuditingService(async (string auditData' string resourceType' string filePath' string action' DateTime timestamp) => " is 138.
Long Statement,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_FailedAuthenticatedOperationAuditRecord,The length of the statement  "            var service = new TestAuditingService(async (string auditData' string resourceType' string filePath' string action' DateTime timestamp) => " is 138.
Long Statement,NuGetGallery.Auditing,AuditRecordTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditRecordTests.cs,SubclassingTypeSet_HasNotChanged,The length of the statement  "                $"Audit record types have been {(actualAuditRecordTypeNames.Length > expectedAuditRecords.Count ? "added" : "removed")}.  " + " is 125.
Long Statement,NuGetGallery.Auditing,CertificateAuditRecordFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\CertificateAuditRecordFacts.cs,Constructor_WhenThumbprintIsUnexpectedLength_Throws,The length of the statement  "            Assert.StartsWith("The thumbprint is expected to be a SHA-256 thumbprint' which is exactly 64 characters in length.  Did the hash algorithm change?"' exception.Message); " is 169.
Long Statement,NuGetGallery.Auditing,CloudAuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\CloudAuditingServiceTests.cs,CloudAuditServiceObfuscateAuditRecord,The length of the statement  "            AuditActor onBehalfOf = new AuditActor("machineName"' "3.3.3.3"' "userName1"' "NoAuthentication"' "someKey"' DateTime.Now' null); " is 129.
Long Statement,NuGetGallery.Auditing,CloudAuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\CloudAuditingServiceTests.cs,CloudAuditServiceObfuscateAuditRecord,The length of the statement  "            AuditActor auditActor = new AuditActor("machineName"' "2.2.2.2"' "userName1"' "NoAuthentication"' "someKey"' DateTime.Now' onBehalfOf); " is 135.
Long Statement,NuGetGallery.Auditing,CloudAuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\CloudAuditingServiceTests.cs,CreatePackageAuditRecord,The length of the statement  "            return new PackageAuditRecord(new Package() { PackageRegistration = new PackageRegistration() { Id = "id" } }' packageAction); " is 126.
Long Statement,NuGetGallery.Auditing,EnumTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\EnumTests.cs,Verify,The length of the statement  "            var commonMessage = $"The {enumType.Name} enum definition has changed.  Please evaluate this change against all {nameof(AuditingService)} implementations."; " is 156.
Long Statement,NuGetGallery.Auditing,EnumTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\EnumTests.cs,Verify,The length of the statement  "            Assert.False(actualNotInExpected.Any()' $"{commonMessage}  Unexpected members found:  {string.Join("' "' actualNotInExpected)}"); " is 129.
Long Statement,NuGetGallery.Auditing,EnumTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\EnumTests.cs,Verify,The length of the statement  "            Assert.False(expectedNotInActual.Any()' $"{commonMessage}  Expected members not found:  {string.Join("' "' expectedNotInActual)}"); " is 131.
Long Statement,NuGetGallery.Auditing,ReservedNamespaceAuditRecordTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\ReservedNamespaceAuditRecordTests.cs,InvalidActionsThrowException,The length of the statement  "            Assert.Throws<ArgumentException>(() => new ReservedNamespaceAuditRecord(prefix' action' owner.Username' registrations: registrationsList)); " is 139.
Long Statement,NuGetGallery.Auditing,FileSystemAuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\FileSystemAuditingServiceTests.cs,SaveAuditRecord_CreatesAuditFile,The length of the statement  "                Assert.InRange(DateTime.Parse(json["Actor"]["TimestampUtc"].Value<string>()' CultureInfo.InvariantCulture)' DateTime.UtcNow.AddMinutes(-1)' DateTime.UtcNow.AddMinutes(1)); " is 171.
Long Statement,NuGetGallery.Auditing,FileSystemAuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\FileSystemAuditingServiceTests.cs,SaveAuditRecord_CreatesAuditFile,The length of the statement  "                Assert.Equal(DateTime.MinValue' DateTime.Parse(json["Actor"]["OnBehalfOf"]["TimestampUtc"].Value<string>()' CultureInfo.InvariantCulture)); " is 139.
Long Statement,NuGetGallery.Auditing,UserAuditRecordTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\UserAuditRecordTests.cs,Constructor_WithRevocationSource_SetsProperties,The length of the statement  "            var record = new UserAuditRecord(user' AuditedUserAction.RevokeCredential' new Credential(type: "b"' value: "c")' testRevocationSource); " is 136.
Long Statement,NuGetGallery.Features,TryRemoveUserAsync,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Features\EditableFeatureFlagFileStorageServiceFacts.cs,WhenExtraDataInJson_Throws,The length of the statement  "                var exception = await Assert.ThrowsAsync<JsonSerializationException>(() => _target.RemoveUserAsync(new User { Username = "user1" })); " is 133.
Long Statement,NuGetGallery.Features,TryRemoveUserAsync,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Features\EditableFeatureFlagFileStorageServiceFacts.cs,WhenSavePreconditionAlwaysFails_Throws,The length of the statement  "                var exception = await Assert.ThrowsAsync<InvalidOperationException>(() => _target.RemoveUserAsync(new User { Username = "user1" })); " is 132.
Long Statement,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,MultiReposSameDependencyOrderedByStarCount,The length of the statement  "                Assert.Equal(Math.Min(expectedRepos.Length' NuGetPackageGitHubInformation.ReposPerPackage)' nupkgInformation.Repos.Count); " is 122.
Long Statement,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,OrderedByStarCountThenByIdThenTrimmed,The length of the statement  "                Assert.Equal(Math.Min(expectedRepos.Length' NuGetPackageGitHubInformation.ReposPerPackage)' nupkgInformation.Repos.Count); " is 122.
Long Statement,NuGetGallery,CloudBlobCoreFileStorageServiceFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,CreateService,The length of the statement  "            return new CloudBlobCoreFileStorageService(fakeBlobClient.Object' Mock.Of<IDiagnosticsService>()' fakeFolderInformationProvider.Object); " is 136.
Long Statement,NuGetGallery,TheCtor,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillCreateABlobContainerForDemandedFoldersIfTheyDoNotExist,The length of the statement  "                simpleCloudBlob.Setup(x => x.DownloadToStreamAsync(It.IsAny<Stream>()' It.IsAny<AccessCondition>())).Returns(Task.FromResult(0)); " is 129.
Long Statement,NuGetGallery,TheCtor,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillSetPermissionsForDemandedFolderInBlobContainers,The length of the statement  "                simpleCloudBlob.Setup(x => x.DownloadToStreamAsync(It.IsAny<Stream>()' It.IsAny<AccessCondition>())).Returns(Task.FromResult(0)); " is 129.
Long Statement,NuGetGallery,TheGetFileMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillDownloadTheFile,The length of the statement  "                fakeBlob.Setup(x => x.DownloadToStreamAsync(It.IsAny<Stream>()' It.IsAny<AccessCondition>())).Returns(Task.FromResult(0)).Verifiable(); " is 135.
Long Statement,NuGetGallery,TheSaveFileMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillThrowIfBlobExistsAndOverwriteFalse,The length of the statement  "                await Assert.ThrowsAsync<FileAlreadyExistsException>(async () => await service.SaveFileAsync(CoreConstants.Folders.PackagesFolderName' "theFileName"' new MemoryStream()' overwrite: false)); " is 189.
Long Statement,NuGetGallery,TheSaveFileMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillSetTheBlobContentType,The length of the statement  "                var service = CreateService(fakeBlobClient: fakeBlobClient' fakeFolderInformationProvider: fakeFolderInformationProvider); " is 122.
Long Statement,NuGetGallery,TheSaveFileMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillSetTheBlobControlCacheOnPackagesFolder,The length of the statement  "                var service = CreateService(fakeBlobClient: fakeBlobClient' fakeFolderInformationProvider: fakeFolderInformationProvider); " is 122.
Long Statement,NuGetGallery,TheSaveFileWithAccessConditionMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillSetTheBlobContentType,The length of the statement  "                var service = CreateService(fakeBlobClient: fakeBlobClient' fakeFolderInformationProvider: fakeFolderInformationProvider); " is 122.
Long Statement,NuGetGallery,TheSaveFileWithAccessConditionMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillSetTheBlobContentType,The length of the statement  "                await service.SaveFileAsync(folderName' "theFileName"' new MemoryStream()' AccessConditionWrapper.GenerateIfNotExistsCondition()); " is 130.
Long Statement,NuGetGallery,TheGetFileReadUriAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillThrowIfFolderIsNull,The length of the statement  "                var ex = await Assert.ThrowsAsync<ArgumentNullException>(() => service.GetFileReadUriAsync(null' fileName' DateTimeOffset.UtcNow.AddHours(3))); " is 143.
Long Statement,NuGetGallery,TheGetFileReadUriAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillThrowIfFilenameIsNull,The length of the statement  "                var ex = await Assert.ThrowsAsync<ArgumentNullException>(() => service.GetFileReadUriAsync(folderName' null' DateTimeOffset.UtcNow.AddHours(3))); " is 145.
Long Statement,NuGetGallery,TheGetFileReadUriAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillThrowIfEndOfAccessIsInThePast,The length of the statement  "                var ex = await Assert.ThrowsAsync<ArgumentOutOfRangeException>(() => service.GetFileReadUriAsync(folderName' fileName' inThePast)); " is 131.
Long Statement,NuGetGallery,TheGetFileReadUriAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillThrowIfNoEndOfAccessSpecifiedForNonPublicContainer,The length of the statement  "                var ex = await Assert.ThrowsAsync<ArgumentNullException>(() => service.GetFileReadUriAsync(CoreConstants.Folders.ValidationFolderName' fileName' null)); " is 152.
Long Statement,NuGetGallery,TheGetFileReadUriAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillPassTheEndOfAccessTimestampFurther,The length of the statement  "                fakeBlob.Verify(b => b.GetSharedAccessSignature(It.IsAny<SharedAccessBlobPermissions>()' It.IsAny<DateTimeOffset?>())' Times.Once); " is 131.
Long Statement,NuGetGallery,TheCopyFileAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillThrowFileAlreadyExistsExceptionForConflict,The length of the statement  "                    .Throws(new StorageException(new RequestResult { HttpStatusCode = (int)HttpStatusCode.Conflict }' "Conflict!"' inner: null)); " is 125.
Long Statement,NuGetGallery,CloudBlobCoreFileStorageServiceIntegrationTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceIntegrationTests.cs,OpenReadAsyncReturnsContentWhenIfNoneMatchSucceeds,The length of the statement  "            using (var stream = await file.OpenReadAsync(accessCondition: AccessCondition.GenerateIfNoneMatchCondition("WON'T MATCH"))) " is 123.
Long Statement,NuGetGallery,CorePackageFileServiceFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,BuildFileName,The length of the statement  "                NuGetVersionFormatter.Normalize(version).ToLowerInvariant()' // No matter what ends up getting passed in' the version should be normalized " is 138.
Long Statement,NuGetGallery,CorePackageFileServiceFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,CreatePackage,The length of the statement  "            var package = new Package { Version = "theVersion"' NormalizedVersion = "theNormalizedVersion"' PackageRegistration = packageRegistration }; " is 140.
Long Statement,NuGetGallery,TheSavePackageFileMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillThrowIfPackageIsMissingPackageRegistration,The length of the statement  "                var ex = Assert.Throws<ArgumentException>(() => service.SavePackageFileAsync(package' CreatePackageFileStream()).Wait()); " is 121.
Long Statement,NuGetGallery,TheSavePackageFileMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillThrowIfPackageIsMissingPackageRegistrationId,The length of the statement  "                var ex = Assert.Throws<ArgumentException>(() => service.SavePackageFileAsync(package' CreatePackageFileStream()).Wait()); " is 121.
Long Statement,NuGetGallery,TheSavePackageFileMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillThrowIfPackageIsMissingNormalizedVersionAndVersion,The length of the statement  "                var ex = Assert.Throws<ArgumentException>(() => service.SavePackageFileAsync(package' CreatePackageFileStream()).Wait()); " is 121.
Long Statement,NuGetGallery,TheSavePackageFileMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillUseNormalizedRegularVersionIfNormalizedVersionMissing,The length of the statement  "                fileStorageSvc.Setup(x => x.SaveFileAsync(It.IsAny<string>()' BuildFileName("theId"' "1.1.1"' CoreConstants.NuGetPackageFileExtension' CoreConstants.PackageFileSavePathTemplate)' It.IsAny<Stream>()' It.Is<bool>(b => !b))) " is 221.
Long Statement,NuGetGallery,TheSavePackageFileMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillSaveTheFileViaTheFileStorageServiceUsingThePackagesFolder,The length of the statement  "                fileStorageSvc.Setup(x => x.SaveFileAsync(CoreConstants.Folders.PackagesFolderName' It.IsAny<string>()' It.IsAny<Stream>()' It.Is<bool>(b => !b))) " is 146.
Long Statement,NuGetGallery,TheSavePackageFileMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillSaveTheFileViaTheFileStorageServiceUsingAFileNameWithIdAndNormalizedersion,The length of the statement  "                fileStorageSvc.Setup(x => x.SaveFileAsync(It.IsAny<string>()' BuildFileName("theId"' "theNormalizedVersion"' CoreConstants.NuGetPackageFileExtension' CoreConstants.PackageFileSavePathTemplate)' It.IsAny<Stream>()' It.Is<bool>(b => !b))) " is 236.
Long Statement,NuGetGallery,TheGetValidationPackageReadUriAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillThrowIfPackageIsNull,The length of the statement  "                var ex = await Assert.ThrowsAsync<ArgumentNullException>(() => _service.GetValidationPackageReadUriAsync(null' DateTimeOffset.UtcNow.AddHours(3))); " is 147.
Long Statement,NuGetGallery,TheGetPackageReadUriMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillUseFileStorageService,The length of the statement  "                string filename = BuildFileName(_package.PackageRegistration.Id' _package.NormalizedVersion' CoreConstants.NuGetPackageFileExtension' CoreConstants.PackageFileSavePathTemplate); " is 177.
Long Statement,NuGetGallery,TheDoesPackageFileExistMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillUseFileStorageService,The length of the statement  "                string filename = BuildFileName(_package.PackageRegistration.Id' _package.NormalizedVersion' CoreConstants.NuGetPackageFileExtension' CoreConstants.PackageFileSavePathTemplate); " is 177.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillThrowIfPackageIsNull,The length of the statement  "                var ex = await Assert.ThrowsAsync<ArgumentNullException>(() => service.StorePackageFileInBackupLocationAsync(null' Stream.Null)); " is 129.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillThrowIfPackageFileIsNull,The length of the statement  "                var ex = await Assert.ThrowsAsync<ArgumentNullException>(() => service.StorePackageFileInBackupLocationAsync(new Package { PackageRegistration = new PackageRegistration() }' null)); " is 181.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillThrowIfPackageIsMissingPackageRegistration,The length of the statement  "                var ex = await Assert.ThrowsAsync<ArgumentException>(() => service.StorePackageFileInBackupLocationAsync(package' CreatePackageFileStream())); " is 142.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillThrowIfPackageIsMissingPackageRegistrationId,The length of the statement  "                var ex = await Assert.ThrowsAsync<ArgumentException>(() => service.StorePackageFileInBackupLocationAsync(package' CreatePackageFileStream())); " is 142.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillThrowIfPackageIsMissingNormalizedVersionAndVersion,The length of the statement  "                var ex = await Assert.ThrowsAsync<ArgumentException>(() => service.StorePackageFileInBackupLocationAsync(package' CreatePackageFileStream())); " is 142.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillUseNormalizedRegularVersionIfNormalizedVersionMissing,The length of the statement  "                fileStorageSvc.Setup(x => x.SaveFileAsync(It.IsAny<string>()' BuildBackupFileName("theId"' "1.1.1"' PackageHash)' It.IsAny<Stream>()' It.Is<bool>(b => b))) " is 155.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillSeekTheStreamBeforeAndAfterHashing,The length of the statement  "                Assert.Equal($"nuget.versioning/4.3.0-beta/{HttpServerUtility.UrlTokenEncode(Convert.FromBase64String(PackageHash))}..nupkg"' path); " is 132.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillUseLowercaseNormalizedIdAndVersionAndStreamHash,The length of the statement  "                Assert.Equal($"nuget.versioning/4.3.0-beta/{HttpServerUtility.UrlTokenEncode(Convert.FromBase64String(PackageHash))}..nupkg"' path); " is 132.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillSaveTheFileViaTheFileStorageServiceUsingThePackagesFolder,The length of the statement  "                fileStorageSvc.Setup(x => x.SaveFileAsync(CoreConstants.Folders.PackageBackupsFolderName' It.IsAny<string>()' It.IsAny<Stream>()' It.Is<bool>(b => b))) " is 151.
Long Statement,NuGetGallery,TheStorePackageFileInBackupLocationAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillSaveTheFileViaTheFileStorageServiceUsingAFileNameWithIdAndNormalizedersion,The length of the statement  "                fileStorageSvc.Setup(x => x.SaveFileAsync(It.IsAny<string>()' BuildBackupFileName("theId"' "theNormalizedVersion"' PackageHash)' It.IsAny<Stream>()' It.Is<bool>(b => b))) " is 170.
Long Statement,NuGetGallery,TheUpdateIsLatestMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,ResetsCurrentLatestPackageVersionsBeforeUpdate,The length of the statement  "                var previousLatestStable = new Package { PackageRegistration = packageRegistration' Version = "1.0.0"' IsLatestStable = true }; " is 127.
Long Statement,NuGetGallery,TheUpdateIsLatestMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,ResetsCurrentLatestPackageVersionsBeforeUpdate,The length of the statement  "                var previousLatest = new Package { PackageRegistration = packageRegistration' Version = "1.0.0-alpha"' IsLatest = true' IsPrerelease = true }; " is 142.
Long Statement,NuGetGallery,TheUpdateIsLatestMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,ResetsCurrentLatestPackageVersionsBeforeUpdate,The length of the statement  "                var previousLatestStableSemVer2 = new Package { PackageRegistration = packageRegistration' Version = "1.0.1+metadata"' IsLatestStableSemVer2 = true' SemVerLevelKey = SemVerLevelKey.SemVer2 }; " is 191.
Long Statement,NuGetGallery,TheUpdateIsLatestMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,ResetsCurrentLatestPackageVersionsBeforeUpdate,The length of the statement  "                var previousLatestSemVer2 = new Package { PackageRegistration = packageRegistration' Version = "1.0.1-alpha.1"' IsLatestSemVer2 = true' IsPrerelease = true' SemVerLevelKey = SemVerLevelKey.SemVer2 }; " is 199.
Long Statement,NuGetGallery,TheUpdateIsLatestMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,ResetsCurrentLatestPackageVersionsBeforeUpdate,The length of the statement  "                var newLatestStable = new Package { PackageRegistration = packageRegistration' Version = "1.0.1"' IsLatestStable = true }; " is 122.
Long Statement,NuGetGallery,TheUpdateIsLatestMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,ResetsCurrentLatestPackageVersionsBeforeUpdate,The length of the statement  "                var newLatest = new Package { PackageRegistration = packageRegistration' Version = "1.0.2-alpha"' IsLatest = true' IsPrerelease = true }; " is 137.
Long Statement,NuGetGallery,TheUpdateIsLatestMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,ResetsCurrentLatestPackageVersionsBeforeUpdate,The length of the statement  "                var newLatestStableSemVer2 = new Package { PackageRegistration = packageRegistration' Version = "1.0.2+metadata"' IsLatestStableSemVer2 = true' SemVerLevelKey = SemVerLevelKey.SemVer2 }; " is 186.
Long Statement,NuGetGallery,TheUpdateIsLatestMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,ResetsCurrentLatestPackageVersionsBeforeUpdate,The length of the statement  "                var newLatestSemVer2 = new Package { PackageRegistration = packageRegistration' Version = "1.0.3-alpha.1"' IsLatestSemVer2 = true' IsPrerelease = true' SemVerLevelKey = SemVerLevelKey.SemVer2 }; " is 194.
Long Statement,NuGetGallery,TheUpdateIsLatestMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,UpdateIsLatestScenarioForSemVer2PrereleaseAsAbsoluteLatest,The length of the statement  "                var semVer2Package = new Package { PackageRegistration = packageRegistration' Version = "1.0.1-alpha.1"' IsPrerelease = true' SemVerLevelKey = SemVerLevelKey.SemVer2 }; " is 168.
Long Statement,NuGetGallery,TheUpdateIsLatestMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,UpdateIsLatestScenarioForSemVer2StableAsAbsoluteLatest,The length of the statement  "                var semVer2Package = new Package { PackageRegistration = packageRegistration' Version = "1.0.1+metadata"' SemVerLevelKey = SemVerLevelKey.SemVer2 }; " is 148.
Long Statement,NuGetGallery,TestPackage,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\TestUtils\TestPackage.cs,WriteNuspec,The length of the statement  "                    <metadata" + (!string.IsNullOrEmpty(minClientVersion) ? @" minClientVersion=""" + minClientVersion + @"""" : string.Empty) + @"> " is 128.
Long Statement,NuGetGallery,TestPackage,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\TestUtils\TestPackage.cs,WriteNuspec,The length of the statement  "                        " + (developmentDependency.HasValue ? ("<developmentDependency>" + developmentDependency.Value + "</developmentDependency>") : string.Empty) + " is 142.
Long Statement,NuGetGallery,TestPackage,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\TestUtils\TestPackage.cs,WriteNuspec,The length of the statement  "                        <metadata" + (!string.IsNullOrEmpty(minClientVersion) ? @" minClientVersion=""" + minClientVersion + @"""" : string.Empty) + @"> " is 128.
Long Statement,NuGetGallery,TestPackage,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\TestUtils\TestPackage.cs,CreateTestPackageStream,The length of the statement  "                        requireLicenseAcceptance' developmentDependency' packageDependencyGroups' packageTypes' isSymbolPackage' repositoryMetadata' " is 124.
Long Statement,NuGetGallery,TestPackage,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\TestUtils\TestPackage.cs,CreateTestPackageStream,The length of the statement  "                        $"The desired count ({desiredTotalEntryCount.Value}) of package entries is less than the actual count ({packageEntryCount}) of package entries."' " is 145.
Long Statement,NuGetGallery.Packaging,ManifestValidatorFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\ManifestValidatorFacts.cs,ReturnsErrorIfFrameworkAssemblyReferenceContainsUnsupportedTargetFramework,The length of the statement  "            Assert.Equal(new[] { String.Format(CoreStrings.Manifest_TargetFrameworkNotSupported' "Unsupported'Version=v0.0") }' GetErrors(nuspecStream)); " is 141.
Long Statement,NuGetGallery.Packaging,ManifestValidatorFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\ManifestValidatorFacts.cs,ReturnsErrorIfDependencySetContainsInvalidId,The length of the statement  "            Assert.Equal(new[] { $"Invalid package version for a dependency with id 'jQuery' in package 'packageA.1.0.1-alpha': ''" }' GetErrors(nuspecStream)); " is 148.
Long Statement,NuGetGallery.Packaging,ManifestValidatorFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\ManifestValidatorFacts.cs,ReturnsErrorIfDependencySetContainsUnsupportedTargetFramework,The length of the statement  "            Assert.Equal(new[] { String.Format(CoreStrings.Manifest_TargetFrameworkNotSupported' "Unsupported'Version=v0.0") }' GetErrors(nuspecStream)); " is 141.
Long Statement,NuGetGallery.Packaging,ManifestValidatorFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\ManifestValidatorFacts.cs,ReturnsErrorIfDependencySetContainsDuplicateDependency,The length of the statement  "            Assert.Equal(new[] { String.Format(CoreStrings.Manifest_DuplicateDependency' "net40"' "SomeDependency") }' GetErrors(nuspecStream)); " is 132.
Long Statement,NuGetGallery.Packaging,ManifestValidatorFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\ManifestValidatorFacts.cs,ReturnsErrorIfDependencyVersionRangeInvalid,The length of the statement  "            Assert.Equal(new[] { $"Invalid package version for a dependency with id 'a.b.c' in package 'packageA.1.0.1-alpha': '{versionRange}'" }' errors); " is 144.
Long Statement,NuGetGallery.Packaging,PackageIdValidatorTest,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\PackageIdValidatorTest.cs,ValidatePackageIdInvalidIdThrows,The length of the statement  "            Assert.Equal("The package ID '" + packageId + "' contains invalid characters. Examples of valid package IDs include 'MyPackage' and 'MyPackage.Sample'."' thrownException.Message); " is 179.
Long Statement,NuGetGallery.Packaging,PackageMetadataFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\PackageMetadataFacts.cs,RejectsInvalidBooleanValue,The length of the statement  "            Assert.Equal($"The package manifest contains an invalid boolean value for metadata element: '{name}'. The value should be 'true' or 'false'."' ex.Message); " is 155.
Long Statement,NuGetGallery.Packaging,PackageMetadataFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\PackageMetadataFacts.cs,RejectsEmptyBooleanValue,The length of the statement  "            Assert.Equal($"The package manifest contains an invalid boolean value for metadata element: '{name}'. The value should be 'true' or 'false'."' ex.Message); " is 155.
Long Statement,NuGetGallery.Packaging,PackageMetadataFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\PackageMetadataFacts.cs,ThrowsPackagingExceptionWhenEmptyAndNonEmptyDuplicateMetadataElementsDetected,The length of the statement  "                "The package manifest contains duplicate metadata elements: 'title'' 'authors'' 'owners'' 'description'' 'language'' 'foo'' 'releaseNotes'"' " is 140.
Long Statement,NuGetGallery.Packaging,PackageMetadataFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\PackageMetadataFacts.cs,CreateTestPackageStream,The length of the statement  "                        <repository type=""git"" url=""https://github.com/NuGet/NuGetGallery"" commit=""33a34174353a8bf64ab0ee0373936010e948d59d"" branch=""dev"" /> " is 140.
Long Statement,NuGetGallery.Services,CoreLicenseFileServiceFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CoreLicenseFileServiceFacts.cs,CreatePackage,The length of the statement  "            var package = new Package { Version = "theVersion"' NormalizedVersion = "theNormalizedVersion"' PackageRegistration = packageRegistration }; " is 140.
Long Statement,NuGetGallery.Services,CoreLicenseFileServiceFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CoreLicenseFileServiceFacts.cs,BuildLicenseFileName,The length of the statement  "            return string.Format(CoreConstants.PackageContentFileSavePathTemplate + "/license"' id.ToLowerInvariant()' version.ToLowerInvariant()); " is 135.
Long Statement,NuGetGallery.Services,TheSaveLicenseFileAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CoreLicenseFileServiceFacts.cs,WillThrowIfPackageIsMissingNormalizedVersionAndVersion,The length of the statement  "                var package = new Package { PackageRegistration = packageRegistration' NormalizedVersion = null' Version = null' EmbeddedLicenseType = licenseFileType }; " is 153.
Long Statement,NuGetGallery.Services,TheSaveLicenseFileAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CoreLicenseFileServiceFacts.cs,WillUseNormalizedRegularVersionIfNormalizedVersionMissing,The length of the statement  "                var package = new Package { PackageRegistration = packageRegistration' NormalizedVersion = null' Version = "01.01.01"' EmbeddedLicenseType = licenseFileType }; " is 159.
Long Statement,NuGetGallery.Services,TheSaveLicenseFileAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CoreLicenseFileServiceFacts.cs,WillUseNormalizedRegularVersionIfNormalizedVersionMissing,The length of the statement  "                fileStorageSvc.Setup(x => x.SaveFileAsync(CoreConstants.Folders.PackagesContentFolderName' BuildLicenseFileName("theId"' "1.1.1")' expectedContentType' It.IsAny<Stream>()' true)) " is 178.
Long Statement,NuGetGallery.Services,ExtractAndSaveLicenseFileAsync,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CoreLicenseFileServiceFacts.cs,ThrowsWhenNoLicenseFileSpecified,The length of the statement  "                package.EmbeddedLicenseType = EmbeddedLicenseFileType.PlainText; // tested method should ignore the package settings and check .nuspec " is 134.
Long Statement,NuGetGallery.Services,ExtractAndSaveLicenseFileAsync,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CoreLicenseFileServiceFacts.cs,ThrowsWhenNoLicenseFileSpecified,The length of the statement  "                var ex = await Assert.ThrowsAsync<InvalidOperationException>(() => service.ExtractAndSaveLicenseFileAsync(package' packageStream)); " is 131.
Long Statement,NuGetGallery.Services,ExtractAndSaveLicenseFileAsync,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CoreLicenseFileServiceFacts.cs,ThrowsOnMissingLicenseFile,The length of the statement  "                var ex = await Assert.ThrowsAsync<FileNotFoundException>(() => service.ExtractAndSaveLicenseFileAsync(package' packageStream)); " is 127.
Long Statement,NuGetGallery.Services,ExtractAndSaveLicenseFileAsync,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CoreLicenseFileServiceFacts.cs,ThrowsOnMissingLicenseFile,The length of the statement  "                Assert.Contains(LicenseFileName' ex.Message); // current implementation of the client does not properly set the FileName property " is 129.
Long Statement,NuGetGallery.Services,ExtractAndSaveLicenseFileAsync,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CoreLicenseFileServiceFacts.cs,SavesLicenseFile,The length of the statement  "                    .Callback<string' string' string' Stream' bool>((_' __' ___' s' ____) => s.Read(savedLicenseBytes' 0' savedLicenseBytes.Length)) " is 128.
Long Statement,NuGetGallery.Services,TheDownloadLicenseFileAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CoreLicenseFileServiceFacts.cs,WillThrowIfPackageIsMissingNormalizedVersionAndVersion,The length of the statement  "                var package = new Package { PackageRegistration = packageRegistration' NormalizedVersion = null' Version = null' EmbeddedLicenseType = licenseFileType }; " is 153.
Long Statement,NuGetGallery.Services,TheDownloadLicenseFileAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CoreLicenseFileServiceFacts.cs,WillUseNormalizedRegularVersionIfNormalizedVersionMissing,The length of the statement  "                var package = new Package { PackageRegistration = packageRegistration' NormalizedVersion = null' Version = "01.01.01"' EmbeddedLicenseType = licenseFileType }; " is 159.
Long Statement,NuGetGallery.Services,TheDownloadLicenseFileAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CoreLicenseFileServiceFacts.cs,WillUseNormalizedRegularVersionIfNormalizedVersionMissing,The length of the statement  "                    .Verify(fss => fss.GetFileAsync(CoreConstants.Folders.PackagesContentFolderName' BuildLicenseFileName("theId"' "1.1.1"))' " is 121.
Long Statement,NuGetGallery.Services,TheDeleteLicenseFileAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CoreLicenseFileServiceFacts.cs,WillNormalizeVersion,The length of the statement  "                    .Verify(fss => fss.DeleteFileAsync(CoreConstants.Folders.PackagesContentFolderName' BuildLicenseFileName("theId"' "1.2.3"))' Times.Once); " is 137.
Long Statement,NuGetGallery.Services,TheUpdateStateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\RevalidationStateServiceFacts.cs,UpdatesLatestState,The length of the statement  "                using (Mock("{'IsInitialized': false' 'IsKillswitchActive': true' 'DesiredPackageEventRate': 123}"' contentId: "foo-bar")) " is 122.
Long Statement,NuGetGallery.Services,TheMaybeUpdateStateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\RevalidationStateServiceFacts.cs,DoesntUpdateStateIfReturnsFalse,The length of the statement  "                using (Mock("{'IsInitialized': false' 'IsKillswitchActive': true' 'DesiredPackageEventRate': 123}"' contentId: "foo-bar")) " is 122.
Long Statement,NuGetGallery.Services,TheMaybeUpdateStateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\RevalidationStateServiceFacts.cs,DoesntUpdateStateIfReturnsFalse,The length of the statement  "                _storage.Verify(s => s.SaveFileAsync("revalidation"' "state.json"' It.IsAny<Stream>()' It.IsAny<IAccessCondition>())' Times.Never); " is 131.
Long Statement,NuGetGallery.Services,TheMaybeUpdateStateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\RevalidationStateServiceFacts.cs,UpdatesStateIfReturnsTrue,The length of the statement  "                using (Mock("{'IsInitialized': false' 'IsKillswitchActive': true' 'DesiredPackageEventRate': 123}"' contentId: "foo-bar")) " is 122.
Long Statement,NuGetGallery.Services,StringReplaceTemplateProcessorFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\StringReplaceTemplateProcessorFacts.cs,ReplacesPlaceholders,The length of the statement  "            var target = new StringReplaceTemplateProcessor<object>(template' new Dictionary<string' Func<object' string>> { { placeholder' _ => substitution } }); " is 151.
Long Statement,NuGetGallery.Services,GetBlobFromUri,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobClientWrapperFacts.cs,UsesQueryStringAsSasToken,The length of the statement  "                var sasToken = "?st=2018-03-12T14%3A55%3A00Z&se=2018-03-13T14%3A55%3A00Z&sp=r&sv=2017-04-17&sr=c&sig=dCXxOlBp6dQHqxTeCRABpr1lfpt40QUaHsAQqs9zHds%3D"; " is 149.
Empty Catch Block,NuGetGallery.Utilities,TestDirectory,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Utilities\TestDirectory.cs,DeleteDirectory,The method has an empty catch block.
Magic Number,NuGetGallery.Auditing,AggregateAuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AggregateAuditingServiceTests.cs,CreateAuditRecord,The following statement contains a magic number: var packageRegistration = new PackageRegistration()              {                  DownloadCount = 1'                  Id = "a"'                  Key = 2              };
Magic Number,NuGetGallery.Auditing,AggregateAuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AggregateAuditingServiceTests.cs,CreateTestAuditingServices,The following statement contains a magic number: i < 10
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_UserAuditRecord,The following statement contains a magic number: var user = new User()              {                  CreatedUtc = DateTime.Now'                  Credentials = new List<Credential>()                  {                      new Credential(                          CredentialTypes.Password.V3'                          value: "a"'                          expiration: new TimeSpan(days: 1' hours: 2' minutes:3' seconds: 4))                  }'                  EmailAddress = "b"'                  Roles = new List<Role>() { new Role() { Key = 5' Name = "c" } }'                  UnconfirmedEmailAddress = "d"'                  Username = "e"              };
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_UserAuditRecord,The following statement contains a magic number: var user = new User()              {                  CreatedUtc = DateTime.Now'                  Credentials = new List<Credential>()                  {                      new Credential(                          CredentialTypes.Password.V3'                          value: "a"'                          expiration: new TimeSpan(days: 1' hours: 2' minutes:3' seconds: 4))                  }'                  EmailAddress = "b"'                  Roles = new List<Role>() { new Role() { Key = 5' Name = "c" } }'                  UnconfirmedEmailAddress = "d"'                  Username = "e"              };
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_UserAuditRecord,The following statement contains a magic number: var user = new User()              {                  CreatedUtc = DateTime.Now'                  Credentials = new List<Credential>()                  {                      new Credential(                          CredentialTypes.Password.V3'                          value: "a"'                          expiration: new TimeSpan(days: 1' hours: 2' minutes:3' seconds: 4))                  }'                  EmailAddress = "b"'                  Roles = new List<Role>() { new Role() { Key = 5' Name = "c" } }'                  UnconfirmedEmailAddress = "d"'                  Username = "e"              };
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_UserAuditRecord,The following statement contains a magic number: var user = new User()              {                  CreatedUtc = DateTime.Now'                  Credentials = new List<Credential>()                  {                      new Credential(                          CredentialTypes.Password.V3'                          value: "a"'                          expiration: new TimeSpan(days: 1' hours: 2' minutes:3' seconds: 4))                  }'                  EmailAddress = "b"'                  Roles = new List<Role>() { new Role() { Key = 5' Name = "c" } }'                  UnconfirmedEmailAddress = "d"'                  Username = "e"              };
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_PackageAuditRecord,The following statement contains a magic number: var package = new Package()              {                  Copyright = "a"'                  Created = DateTime.Now'  #pragma warning disable CS0612 // Type or member is obsolete                  Deleted = true'  #pragma warning restore CS0612 // Type or member is obsolete                  Description = "b"'                  DownloadCount = 1'  #pragma warning disable CS0612 // Type or member is obsolete                  ExternalPackageUrl = "c"'  #pragma warning restore CS0612 // Type or member is obsolete                  FlattenedAuthors = "d"'                  FlattenedDependencies = "e"'                  Hash = "f"'                  HashAlgorithm = "g"'                  HideLicenseReport = true'                  IconUrl = "h"'                  IsLatest = true'                  IsLatestStable = true'                  IsPrerelease = true'                  Key = 2'                  Language = "i"'                  LastEdited = DateTime.Now.AddMinutes(1)'                  LastUpdated = DateTime.Now.AddMinutes(2)'                  LicenseNames = "j"'                  LicenseReportUrl = "k"'                  LicenseUrl = "l"'                  Listed = true'                  MinClientVersion = "m"'                  NormalizedVersion = "n"'                  PackageFileSize = 3'                  PackageRegistration = new PackageRegistration() { Id = "o" }'                  PackageRegistrationKey = 4'                  PackageStatusKey = PackageStatus.Deleted'                  ProjectUrl = "p"'                  Published = DateTime.Now.AddMinutes(3)'                  ReleaseNotes = "q"'                  RequiresLicenseAcceptance = true'                  DevelopmentDependency = true'                  Summary = "r"'                  Tags = "s"'                  Title = "t"'                  UserKey = 5'                  Version = "u"              };
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_PackageAuditRecord,The following statement contains a magic number: var package = new Package()              {                  Copyright = "a"'                  Created = DateTime.Now'  #pragma warning disable CS0612 // Type or member is obsolete                  Deleted = true'  #pragma warning restore CS0612 // Type or member is obsolete                  Description = "b"'                  DownloadCount = 1'  #pragma warning disable CS0612 // Type or member is obsolete                  ExternalPackageUrl = "c"'  #pragma warning restore CS0612 // Type or member is obsolete                  FlattenedAuthors = "d"'                  FlattenedDependencies = "e"'                  Hash = "f"'                  HashAlgorithm = "g"'                  HideLicenseReport = true'                  IconUrl = "h"'                  IsLatest = true'                  IsLatestStable = true'                  IsPrerelease = true'                  Key = 2'                  Language = "i"'                  LastEdited = DateTime.Now.AddMinutes(1)'                  LastUpdated = DateTime.Now.AddMinutes(2)'                  LicenseNames = "j"'                  LicenseReportUrl = "k"'                  LicenseUrl = "l"'                  Listed = true'                  MinClientVersion = "m"'                  NormalizedVersion = "n"'                  PackageFileSize = 3'                  PackageRegistration = new PackageRegistration() { Id = "o" }'                  PackageRegistrationKey = 4'                  PackageStatusKey = PackageStatus.Deleted'                  ProjectUrl = "p"'                  Published = DateTime.Now.AddMinutes(3)'                  ReleaseNotes = "q"'                  RequiresLicenseAcceptance = true'                  DevelopmentDependency = true'                  Summary = "r"'                  Tags = "s"'                  Title = "t"'                  UserKey = 5'                  Version = "u"              };
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_PackageAuditRecord,The following statement contains a magic number: var package = new Package()              {                  Copyright = "a"'                  Created = DateTime.Now'  #pragma warning disable CS0612 // Type or member is obsolete                  Deleted = true'  #pragma warning restore CS0612 // Type or member is obsolete                  Description = "b"'                  DownloadCount = 1'  #pragma warning disable CS0612 // Type or member is obsolete                  ExternalPackageUrl = "c"'  #pragma warning restore CS0612 // Type or member is obsolete                  FlattenedAuthors = "d"'                  FlattenedDependencies = "e"'                  Hash = "f"'                  HashAlgorithm = "g"'                  HideLicenseReport = true'                  IconUrl = "h"'                  IsLatest = true'                  IsLatestStable = true'                  IsPrerelease = true'                  Key = 2'                  Language = "i"'                  LastEdited = DateTime.Now.AddMinutes(1)'                  LastUpdated = DateTime.Now.AddMinutes(2)'                  LicenseNames = "j"'                  LicenseReportUrl = "k"'                  LicenseUrl = "l"'                  Listed = true'                  MinClientVersion = "m"'                  NormalizedVersion = "n"'                  PackageFileSize = 3'                  PackageRegistration = new PackageRegistration() { Id = "o" }'                  PackageRegistrationKey = 4'                  PackageStatusKey = PackageStatus.Deleted'                  ProjectUrl = "p"'                  Published = DateTime.Now.AddMinutes(3)'                  ReleaseNotes = "q"'                  RequiresLicenseAcceptance = true'                  DevelopmentDependency = true'                  Summary = "r"'                  Tags = "s"'                  Title = "t"'                  UserKey = 5'                  Version = "u"              };
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_PackageAuditRecord,The following statement contains a magic number: var package = new Package()              {                  Copyright = "a"'                  Created = DateTime.Now'  #pragma warning disable CS0612 // Type or member is obsolete                  Deleted = true'  #pragma warning restore CS0612 // Type or member is obsolete                  Description = "b"'                  DownloadCount = 1'  #pragma warning disable CS0612 // Type or member is obsolete                  ExternalPackageUrl = "c"'  #pragma warning restore CS0612 // Type or member is obsolete                  FlattenedAuthors = "d"'                  FlattenedDependencies = "e"'                  Hash = "f"'                  HashAlgorithm = "g"'                  HideLicenseReport = true'                  IconUrl = "h"'                  IsLatest = true'                  IsLatestStable = true'                  IsPrerelease = true'                  Key = 2'                  Language = "i"'                  LastEdited = DateTime.Now.AddMinutes(1)'                  LastUpdated = DateTime.Now.AddMinutes(2)'                  LicenseNames = "j"'                  LicenseReportUrl = "k"'                  LicenseUrl = "l"'                  Listed = true'                  MinClientVersion = "m"'                  NormalizedVersion = "n"'                  PackageFileSize = 3'                  PackageRegistration = new PackageRegistration() { Id = "o" }'                  PackageRegistrationKey = 4'                  PackageStatusKey = PackageStatus.Deleted'                  ProjectUrl = "p"'                  Published = DateTime.Now.AddMinutes(3)'                  ReleaseNotes = "q"'                  RequiresLicenseAcceptance = true'                  DevelopmentDependency = true'                  Summary = "r"'                  Tags = "s"'                  Title = "t"'                  UserKey = 5'                  Version = "u"              };
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_PackageAuditRecord,The following statement contains a magic number: var package = new Package()              {                  Copyright = "a"'                  Created = DateTime.Now'  #pragma warning disable CS0612 // Type or member is obsolete                  Deleted = true'  #pragma warning restore CS0612 // Type or member is obsolete                  Description = "b"'                  DownloadCount = 1'  #pragma warning disable CS0612 // Type or member is obsolete                  ExternalPackageUrl = "c"'  #pragma warning restore CS0612 // Type or member is obsolete                  FlattenedAuthors = "d"'                  FlattenedDependencies = "e"'                  Hash = "f"'                  HashAlgorithm = "g"'                  HideLicenseReport = true'                  IconUrl = "h"'                  IsLatest = true'                  IsLatestStable = true'                  IsPrerelease = true'                  Key = 2'                  Language = "i"'                  LastEdited = DateTime.Now.AddMinutes(1)'                  LastUpdated = DateTime.Now.AddMinutes(2)'                  LicenseNames = "j"'                  LicenseReportUrl = "k"'                  LicenseUrl = "l"'                  Listed = true'                  MinClientVersion = "m"'                  NormalizedVersion = "n"'                  PackageFileSize = 3'                  PackageRegistration = new PackageRegistration() { Id = "o" }'                  PackageRegistrationKey = 4'                  PackageStatusKey = PackageStatus.Deleted'                  ProjectUrl = "p"'                  Published = DateTime.Now.AddMinutes(3)'                  ReleaseNotes = "q"'                  RequiresLicenseAcceptance = true'                  DevelopmentDependency = true'                  Summary = "r"'                  Tags = "s"'                  Title = "t"'                  UserKey = 5'                  Version = "u"              };
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_PackageAuditRecord,The following statement contains a magic number: var package = new Package()              {                  Copyright = "a"'                  Created = DateTime.Now'  #pragma warning disable CS0612 // Type or member is obsolete                  Deleted = true'  #pragma warning restore CS0612 // Type or member is obsolete                  Description = "b"'                  DownloadCount = 1'  #pragma warning disable CS0612 // Type or member is obsolete                  ExternalPackageUrl = "c"'  #pragma warning restore CS0612 // Type or member is obsolete                  FlattenedAuthors = "d"'                  FlattenedDependencies = "e"'                  Hash = "f"'                  HashAlgorithm = "g"'                  HideLicenseReport = true'                  IconUrl = "h"'                  IsLatest = true'                  IsLatestStable = true'                  IsPrerelease = true'                  Key = 2'                  Language = "i"'                  LastEdited = DateTime.Now.AddMinutes(1)'                  LastUpdated = DateTime.Now.AddMinutes(2)'                  LicenseNames = "j"'                  LicenseReportUrl = "k"'                  LicenseUrl = "l"'                  Listed = true'                  MinClientVersion = "m"'                  NormalizedVersion = "n"'                  PackageFileSize = 3'                  PackageRegistration = new PackageRegistration() { Id = "o" }'                  PackageRegistrationKey = 4'                  PackageStatusKey = PackageStatus.Deleted'                  ProjectUrl = "p"'                  Published = DateTime.Now.AddMinutes(3)'                  ReleaseNotes = "q"'                  RequiresLicenseAcceptance = true'                  DevelopmentDependency = true'                  Summary = "r"'                  Tags = "s"'                  Title = "t"'                  UserKey = 5'                  Version = "u"              };
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_PackageAuditRecord,The following statement contains a magic number: var service = new TestAuditingService(async (string auditData' string resourceType' string filePath' string action' DateTime timestamp) =>              {                  Assert.Equal("Package"' resourceType);                  Assert.Equal("o/u"' filePath);                  Assert.Equal("create"' action);                  Assert.InRange(timestamp' DateTime.UtcNow.AddMinutes(-1)' DateTime.UtcNow.AddMinutes(1));                    var jObject = JObject.Parse(auditData);                    var record = jObject["Record"];                    Assert.Equal("o"' record["Id"].Value<string>());                  Assert.Equal("u"' record["Version"].Value<string>());                  Assert.Equal("f"' record["Hash"].Value<string>());                    var packageRecord = record["PackageRecord"];                    Assert.Equal(4' packageRecord["PackageRegistrationKey"].Value<int>());                  Assert.Equal("a"' packageRecord["Copyright"].Value<string>());                  Assert.Equal(package.Created.ToUniversalTime()' packageRecord["Created"].Value<DateTime>());                  Assert.Equal("b"' packageRecord["Description"].Value<string>());                  Assert.Equal("q"' packageRecord["ReleaseNotes"].Value<string>());                  Assert.Equal(1' packageRecord["DownloadCount"].Value<int>());                  Assert.Equal(JTokenType.Null' packageRecord["ExternalPackageUrl"].Type);                  Assert.Equal("g"' packageRecord["HashAlgorithm"].Value<string>());                  Assert.Equal("f"' packageRecord["Hash"].Value<string>());                  Assert.Equal("h"' packageRecord["IconUrl"].Value<string>());                  Assert.True(packageRecord["IsLatest"].Value<bool>());                  Assert.True(packageRecord["IsLatestStable"].Value<bool>());                  Assert.Equal(package.LastUpdated.ToUniversalTime()' packageRecord["LastUpdated"].Value<DateTime>());                  Assert.Equal(package.LastEdited.Value.ToUniversalTime()' packageRecord["LastEdited"].Value<DateTime>());                  Assert.Equal("l"' packageRecord["LicenseUrl"].Value<string>());                  Assert.True(packageRecord["HideLicenseReport"].Value<bool>());                  Assert.Equal("i"' packageRecord["Language"].Value<string>());                  Assert.Equal(package.Published.ToUniversalTime()' packageRecord["Published"].Value<DateTime>());                  Assert.Equal(3' packageRecord["PackageFileSize"].Value<int>());                  Assert.Equal("p"' packageRecord["ProjectUrl"].Value<string>());                  Assert.True(packageRecord["RequiresLicenseAcceptance"].Value<bool>());                  Assert.True(packageRecord["DevelopmentDependency"].Value<bool>());                  Assert.Equal("r"' packageRecord["Summary"].Value<string>());                  Assert.Equal("s"' packageRecord["Tags"].Value<string>());                  Assert.Equal("t"' packageRecord["Title"].Value<string>());                  Assert.Equal("u"' packageRecord["Version"].Value<string>());                  Assert.Equal("n"' packageRecord["NormalizedVersion"].Value<string>());                  Assert.Equal("j"' packageRecord["LicenseNames"].Value<string>());                  Assert.Equal("k"' packageRecord["LicenseReportUrl"].Value<string>());                  Assert.True(packageRecord["Listed"].Value<bool>());                  Assert.True(packageRecord["IsPrerelease"].Value<bool>());                  Assert.Equal("d"' packageRecord["FlattenedAuthors"].Value<string>());                  Assert.Equal("e"' packageRecord["FlattenedDependencies"].Value<string>());                  Assert.Equal(2' packageRecord["Key"].Value<int>());                  Assert.Equal("m"' packageRecord["MinClientVersion"].Value<string>());                  Assert.Equal(5' packageRecord["UserKey"].Value<int>());                  Assert.True(packageRecord["Deleted"].Value<bool>());                  Assert.Equal(1' packageRecord["PackageStatusKey"].Value<int>());                    var registrationRecord = record["RegistrationRecord"];                    Assert.Equal("o"' registrationRecord["Id"].Value<string>());                  Assert.Equal(0' registrationRecord["DownloadCount"].Value<int>());                  Assert.Equal(0' registrationRecord["Key"].Value<int>());                    Assert.Equal("v"' record["Reason"].Value<string>());                  Assert.Equal("Create"' record["Action"].Value<string>());                    await VerifyActor(jObject);                    return null;              });
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_PackageAuditRecord,The following statement contains a magic number: var service = new TestAuditingService(async (string auditData' string resourceType' string filePath' string action' DateTime timestamp) =>              {                  Assert.Equal("Package"' resourceType);                  Assert.Equal("o/u"' filePath);                  Assert.Equal("create"' action);                  Assert.InRange(timestamp' DateTime.UtcNow.AddMinutes(-1)' DateTime.UtcNow.AddMinutes(1));                    var jObject = JObject.Parse(auditData);                    var record = jObject["Record"];                    Assert.Equal("o"' record["Id"].Value<string>());                  Assert.Equal("u"' record["Version"].Value<string>());                  Assert.Equal("f"' record["Hash"].Value<string>());                    var packageRecord = record["PackageRecord"];                    Assert.Equal(4' packageRecord["PackageRegistrationKey"].Value<int>());                  Assert.Equal("a"' packageRecord["Copyright"].Value<string>());                  Assert.Equal(package.Created.ToUniversalTime()' packageRecord["Created"].Value<DateTime>());                  Assert.Equal("b"' packageRecord["Description"].Value<string>());                  Assert.Equal("q"' packageRecord["ReleaseNotes"].Value<string>());                  Assert.Equal(1' packageRecord["DownloadCount"].Value<int>());                  Assert.Equal(JTokenType.Null' packageRecord["ExternalPackageUrl"].Type);                  Assert.Equal("g"' packageRecord["HashAlgorithm"].Value<string>());                  Assert.Equal("f"' packageRecord["Hash"].Value<string>());                  Assert.Equal("h"' packageRecord["IconUrl"].Value<string>());                  Assert.True(packageRecord["IsLatest"].Value<bool>());                  Assert.True(packageRecord["IsLatestStable"].Value<bool>());                  Assert.Equal(package.LastUpdated.ToUniversalTime()' packageRecord["LastUpdated"].Value<DateTime>());                  Assert.Equal(package.LastEdited.Value.ToUniversalTime()' packageRecord["LastEdited"].Value<DateTime>());                  Assert.Equal("l"' packageRecord["LicenseUrl"].Value<string>());                  Assert.True(packageRecord["HideLicenseReport"].Value<bool>());                  Assert.Equal("i"' packageRecord["Language"].Value<string>());                  Assert.Equal(package.Published.ToUniversalTime()' packageRecord["Published"].Value<DateTime>());                  Assert.Equal(3' packageRecord["PackageFileSize"].Value<int>());                  Assert.Equal("p"' packageRecord["ProjectUrl"].Value<string>());                  Assert.True(packageRecord["RequiresLicenseAcceptance"].Value<bool>());                  Assert.True(packageRecord["DevelopmentDependency"].Value<bool>());                  Assert.Equal("r"' packageRecord["Summary"].Value<string>());                  Assert.Equal("s"' packageRecord["Tags"].Value<string>());                  Assert.Equal("t"' packageRecord["Title"].Value<string>());                  Assert.Equal("u"' packageRecord["Version"].Value<string>());                  Assert.Equal("n"' packageRecord["NormalizedVersion"].Value<string>());                  Assert.Equal("j"' packageRecord["LicenseNames"].Value<string>());                  Assert.Equal("k"' packageRecord["LicenseReportUrl"].Value<string>());                  Assert.True(packageRecord["Listed"].Value<bool>());                  Assert.True(packageRecord["IsPrerelease"].Value<bool>());                  Assert.Equal("d"' packageRecord["FlattenedAuthors"].Value<string>());                  Assert.Equal("e"' packageRecord["FlattenedDependencies"].Value<string>());                  Assert.Equal(2' packageRecord["Key"].Value<int>());                  Assert.Equal("m"' packageRecord["MinClientVersion"].Value<string>());                  Assert.Equal(5' packageRecord["UserKey"].Value<int>());                  Assert.True(packageRecord["Deleted"].Value<bool>());                  Assert.Equal(1' packageRecord["PackageStatusKey"].Value<int>());                    var registrationRecord = record["RegistrationRecord"];                    Assert.Equal("o"' registrationRecord["Id"].Value<string>());                  Assert.Equal(0' registrationRecord["DownloadCount"].Value<int>());                  Assert.Equal(0' registrationRecord["Key"].Value<int>());                    Assert.Equal("v"' record["Reason"].Value<string>());                  Assert.Equal("Create"' record["Action"].Value<string>());                    await VerifyActor(jObject);                    return null;              });
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_PackageAuditRecord,The following statement contains a magic number: var service = new TestAuditingService(async (string auditData' string resourceType' string filePath' string action' DateTime timestamp) =>              {                  Assert.Equal("Package"' resourceType);                  Assert.Equal("o/u"' filePath);                  Assert.Equal("create"' action);                  Assert.InRange(timestamp' DateTime.UtcNow.AddMinutes(-1)' DateTime.UtcNow.AddMinutes(1));                    var jObject = JObject.Parse(auditData);                    var record = jObject["Record"];                    Assert.Equal("o"' record["Id"].Value<string>());                  Assert.Equal("u"' record["Version"].Value<string>());                  Assert.Equal("f"' record["Hash"].Value<string>());                    var packageRecord = record["PackageRecord"];                    Assert.Equal(4' packageRecord["PackageRegistrationKey"].Value<int>());                  Assert.Equal("a"' packageRecord["Copyright"].Value<string>());                  Assert.Equal(package.Created.ToUniversalTime()' packageRecord["Created"].Value<DateTime>());                  Assert.Equal("b"' packageRecord["Description"].Value<string>());                  Assert.Equal("q"' packageRecord["ReleaseNotes"].Value<string>());                  Assert.Equal(1' packageRecord["DownloadCount"].Value<int>());                  Assert.Equal(JTokenType.Null' packageRecord["ExternalPackageUrl"].Type);                  Assert.Equal("g"' packageRecord["HashAlgorithm"].Value<string>());                  Assert.Equal("f"' packageRecord["Hash"].Value<string>());                  Assert.Equal("h"' packageRecord["IconUrl"].Value<string>());                  Assert.True(packageRecord["IsLatest"].Value<bool>());                  Assert.True(packageRecord["IsLatestStable"].Value<bool>());                  Assert.Equal(package.LastUpdated.ToUniversalTime()' packageRecord["LastUpdated"].Value<DateTime>());                  Assert.Equal(package.LastEdited.Value.ToUniversalTime()' packageRecord["LastEdited"].Value<DateTime>());                  Assert.Equal("l"' packageRecord["LicenseUrl"].Value<string>());                  Assert.True(packageRecord["HideLicenseReport"].Value<bool>());                  Assert.Equal("i"' packageRecord["Language"].Value<string>());                  Assert.Equal(package.Published.ToUniversalTime()' packageRecord["Published"].Value<DateTime>());                  Assert.Equal(3' packageRecord["PackageFileSize"].Value<int>());                  Assert.Equal("p"' packageRecord["ProjectUrl"].Value<string>());                  Assert.True(packageRecord["RequiresLicenseAcceptance"].Value<bool>());                  Assert.True(packageRecord["DevelopmentDependency"].Value<bool>());                  Assert.Equal("r"' packageRecord["Summary"].Value<string>());                  Assert.Equal("s"' packageRecord["Tags"].Value<string>());                  Assert.Equal("t"' packageRecord["Title"].Value<string>());                  Assert.Equal("u"' packageRecord["Version"].Value<string>());                  Assert.Equal("n"' packageRecord["NormalizedVersion"].Value<string>());                  Assert.Equal("j"' packageRecord["LicenseNames"].Value<string>());                  Assert.Equal("k"' packageRecord["LicenseReportUrl"].Value<string>());                  Assert.True(packageRecord["Listed"].Value<bool>());                  Assert.True(packageRecord["IsPrerelease"].Value<bool>());                  Assert.Equal("d"' packageRecord["FlattenedAuthors"].Value<string>());                  Assert.Equal("e"' packageRecord["FlattenedDependencies"].Value<string>());                  Assert.Equal(2' packageRecord["Key"].Value<int>());                  Assert.Equal("m"' packageRecord["MinClientVersion"].Value<string>());                  Assert.Equal(5' packageRecord["UserKey"].Value<int>());                  Assert.True(packageRecord["Deleted"].Value<bool>());                  Assert.Equal(1' packageRecord["PackageStatusKey"].Value<int>());                    var registrationRecord = record["RegistrationRecord"];                    Assert.Equal("o"' registrationRecord["Id"].Value<string>());                  Assert.Equal(0' registrationRecord["DownloadCount"].Value<int>());                  Assert.Equal(0' registrationRecord["Key"].Value<int>());                    Assert.Equal("v"' record["Reason"].Value<string>());                  Assert.Equal("Create"' record["Action"].Value<string>());                    await VerifyActor(jObject);                    return null;              });
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_PackageAuditRecord,The following statement contains a magic number: var service = new TestAuditingService(async (string auditData' string resourceType' string filePath' string action' DateTime timestamp) =>              {                  Assert.Equal("Package"' resourceType);                  Assert.Equal("o/u"' filePath);                  Assert.Equal("create"' action);                  Assert.InRange(timestamp' DateTime.UtcNow.AddMinutes(-1)' DateTime.UtcNow.AddMinutes(1));                    var jObject = JObject.Parse(auditData);                    var record = jObject["Record"];                    Assert.Equal("o"' record["Id"].Value<string>());                  Assert.Equal("u"' record["Version"].Value<string>());                  Assert.Equal("f"' record["Hash"].Value<string>());                    var packageRecord = record["PackageRecord"];                    Assert.Equal(4' packageRecord["PackageRegistrationKey"].Value<int>());                  Assert.Equal("a"' packageRecord["Copyright"].Value<string>());                  Assert.Equal(package.Created.ToUniversalTime()' packageRecord["Created"].Value<DateTime>());                  Assert.Equal("b"' packageRecord["Description"].Value<string>());                  Assert.Equal("q"' packageRecord["ReleaseNotes"].Value<string>());                  Assert.Equal(1' packageRecord["DownloadCount"].Value<int>());                  Assert.Equal(JTokenType.Null' packageRecord["ExternalPackageUrl"].Type);                  Assert.Equal("g"' packageRecord["HashAlgorithm"].Value<string>());                  Assert.Equal("f"' packageRecord["Hash"].Value<string>());                  Assert.Equal("h"' packageRecord["IconUrl"].Value<string>());                  Assert.True(packageRecord["IsLatest"].Value<bool>());                  Assert.True(packageRecord["IsLatestStable"].Value<bool>());                  Assert.Equal(package.LastUpdated.ToUniversalTime()' packageRecord["LastUpdated"].Value<DateTime>());                  Assert.Equal(package.LastEdited.Value.ToUniversalTime()' packageRecord["LastEdited"].Value<DateTime>());                  Assert.Equal("l"' packageRecord["LicenseUrl"].Value<string>());                  Assert.True(packageRecord["HideLicenseReport"].Value<bool>());                  Assert.Equal("i"' packageRecord["Language"].Value<string>());                  Assert.Equal(package.Published.ToUniversalTime()' packageRecord["Published"].Value<DateTime>());                  Assert.Equal(3' packageRecord["PackageFileSize"].Value<int>());                  Assert.Equal("p"' packageRecord["ProjectUrl"].Value<string>());                  Assert.True(packageRecord["RequiresLicenseAcceptance"].Value<bool>());                  Assert.True(packageRecord["DevelopmentDependency"].Value<bool>());                  Assert.Equal("r"' packageRecord["Summary"].Value<string>());                  Assert.Equal("s"' packageRecord["Tags"].Value<string>());                  Assert.Equal("t"' packageRecord["Title"].Value<string>());                  Assert.Equal("u"' packageRecord["Version"].Value<string>());                  Assert.Equal("n"' packageRecord["NormalizedVersion"].Value<string>());                  Assert.Equal("j"' packageRecord["LicenseNames"].Value<string>());                  Assert.Equal("k"' packageRecord["LicenseReportUrl"].Value<string>());                  Assert.True(packageRecord["Listed"].Value<bool>());                  Assert.True(packageRecord["IsPrerelease"].Value<bool>());                  Assert.Equal("d"' packageRecord["FlattenedAuthors"].Value<string>());                  Assert.Equal("e"' packageRecord["FlattenedDependencies"].Value<string>());                  Assert.Equal(2' packageRecord["Key"].Value<int>());                  Assert.Equal("m"' packageRecord["MinClientVersion"].Value<string>());                  Assert.Equal(5' packageRecord["UserKey"].Value<int>());                  Assert.True(packageRecord["Deleted"].Value<bool>());                  Assert.Equal(1' packageRecord["PackageStatusKey"].Value<int>());                    var registrationRecord = record["RegistrationRecord"];                    Assert.Equal("o"' registrationRecord["Id"].Value<string>());                  Assert.Equal(0' registrationRecord["DownloadCount"].Value<int>());                  Assert.Equal(0' registrationRecord["Key"].Value<int>());                    Assert.Equal("v"' record["Reason"].Value<string>());                  Assert.Equal("Create"' record["Action"].Value<string>());                    await VerifyActor(jObject);                    return null;              });
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_PackageRegistrationAuditRecord,The following statement contains a magic number: var packageRegistration = new PackageRegistration()              {                  DownloadCount = 1'                  Id = "a"'                  Key = 2              };
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_PackageRegistrationAuditRecord,The following statement contains a magic number: var service = new TestAuditingService(async (string auditData' string resourceType' string filePath' string action' DateTime timestamp) =>              {                  Assert.Equal("PackageRegistration"' resourceType);                  Assert.Equal("a"' filePath);                  Assert.Equal("addowner"' action);                  Assert.InRange(timestamp' DateTime.UtcNow.AddMinutes(-1)' DateTime.UtcNow.AddMinutes(1));                    var jObject = JObject.Parse(auditData);                    var record = jObject["Record"];                    Assert.Equal("a"' record["Id"].Value<string>());                    var registrationRecord = record["RegistrationRecord"];                    Assert.Equal("a"' registrationRecord["Id"].Value<string>());                  Assert.Equal(1' registrationRecord["DownloadCount"].Value<int>());                  Assert.Equal(2' registrationRecord["Key"].Value<int>());                    Assert.Equal("b"' record["Owner"].Value<string>());                  Assert.Equal("AddOwner"' record["Action"].Value<string>());                    await VerifyActor(jObject);                    return null;              });
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_FailedAuthenticatedOperationAuditRecord,The following statement contains a magic number: var expiresIn = new TimeSpan(days: 1' hours: 2' minutes: 3' seconds: 4);
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_FailedAuthenticatedOperationAuditRecord,The following statement contains a magic number: var expiresIn = new TimeSpan(days: 1' hours: 2' minutes: 3' seconds: 4);
Magic Number,NuGetGallery.Auditing,AuditingServiceTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\AuditingServiceTests.cs,SaveAuditRecordAsync_FailedAuthenticatedOperationAuditRecord,The following statement contains a magic number: var expiresIn = new TimeSpan(days: 1' hours: 2' minutes: 3' seconds: 4);
Magic Number,NuGetGallery.Auditing,CredentialAuditRecordTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\CredentialAuditRecordTests.cs,Constructor_SetsProperties,The following statement contains a magic number: var lastUsed = DateTime.MinValue.AddDays(2);
Magic Number,NuGetGallery.Auditing,ObfuscatorJsonConverterTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\ObfuscatorJsonConverterTests.cs,WriteHappyJson,The following statement contains a magic number: var dataChild = new Data("name"' "1.1.1.1"' "authors"' 1' "abc"' 2.5' null);
Magic Number,NuGetGallery.Auditing,ObfuscatorJsonConverterTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\ObfuscatorJsonConverterTests.cs,WriteHappyJson,The following statement contains a magic number: var data = new Data("name"' "1.1.1.1"' "authors"' 1' "abc"' 2.5' dataChild);
Magic Number,NuGetGallery.Auditing,ObfuscatorJsonConverterTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Auditing\ObfuscatorJsonConverterTests.cs,WriteHappyJson,The following statement contains a magic number: var settings = new JsonSerializerSettings              {                  DateFormatHandling = DateFormatHandling.IsoDateFormat'                  DateTimeZoneHandling = DateTimeZoneHandling.Utc'                  DefaultValueHandling = DefaultValueHandling.Include'                  Formatting = Formatting.Indented'                  MaxDepth = 10'                  MissingMemberHandling = MissingMemberHandling.Ignore'                  NullValueHandling = NullValueHandling.Include'                  TypeNameHandling = TypeNameHandling.None'                };
Magic Number,NuGetGallery.Features,TryRemoveUserAsync,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Features\EditableFeatureFlagFileStorageServiceFacts.cs,RemovesUser,The following statement contains a magic number: Assert.Equal(3' savedFlags.Flights.Count);
Magic Number,NuGetGallery.Features,TryRemoveUserAsync,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Features\EditableFeatureFlagFileStorageServiceFacts.cs,WhenSavePreconditionFailsOnce_Retries,The following statement contains a magic number: _storage.Verify(                      s => s.SaveFileAsync(                          CoreConstants.Folders.ContentFolderName'                          CoreConstants.FeatureFlagsFileName'                          It.IsAny<Stream>()'                          It.IsAny<IAccessCondition>())'                      Times.Exactly(2));
Magic Number,NuGetGallery.Features,TryRemoveUserAsync,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Features\EditableFeatureFlagFileStorageServiceFacts.cs,WhenSavePreconditionAlwaysFails_Throws,The following statement contains a magic number: _storage.Verify(                      s => s.SaveFileAsync(                          CoreConstants.Folders.ContentFolderName'                          CoreConstants.FeatureFlagsFileName'                          It.IsAny<Stream>()'                          It.IsAny<IAccessCondition>())'                      Times.Exactly(3));
Magic Number,NuGetGallery.Features,TryRemoveUserAsync,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Features\EditableFeatureFlagFileStorageServiceFacts.cs,WhenSavePreconditionAlwaysFails_Throws,The following statement contains a magic number: _auditing.Verify(                      a => a.SaveAuditRecordAsync(                          It.Is<FeatureFlagsAuditRecord>(                              r => r.Action == AuditedFeatureFlagsAction.Update                                  && r.ContentId == "fake-content-id"                                  && r.Result == FeatureFlagSaveResult.Conflict                                  && !r.Features.Any()                                   && r.Flights.SingleOrDefault(                                      f => f.Name == "A"                                           && !f.All                                          && !f.SiteAdmins                                          && f.Accounts.Single() == "user2"                                           && !f.Domains.Any()) != null))'                      Times.Exactly(3));
Magic Number,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,MultiReposSameDependency,The following statement contains a magic number: Assert.Equal(2' nupkgInformation.Repos.Count);
Magic Number,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,MultiReposSameDependency,The following statement contains a magic number: Assert.Equal(2' nupkgInformation.TotalRepos);
Magic Number,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,MultiReposSameDependencyOrderedByStarCount,The following statement contains a magic number: RepositoryInformation[] expectedRepos =                  {                      CreateRepo("owner/A"'  1' "nupkg1")'                      CreateRepo("owner/B"'  2' "nupkg1")'                      CreateRepo("owner/C"'  3' "nupkg1")'                      CreateRepo("owner/D"'  4' "nupkg1")'                      CreateRepo("owner/E"'  5' "nupkg1")                  };
Magic Number,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,MultiReposSameDependencyOrderedByStarCount,The following statement contains a magic number: RepositoryInformation[] expectedRepos =                  {                      CreateRepo("owner/A"'  1' "nupkg1")'                      CreateRepo("owner/B"'  2' "nupkg1")'                      CreateRepo("owner/C"'  3' "nupkg1")'                      CreateRepo("owner/D"'  4' "nupkg1")'                      CreateRepo("owner/E"'  5' "nupkg1")                  };
Magic Number,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,MultiReposSameDependencyOrderedByStarCount,The following statement contains a magic number: RepositoryInformation[] expectedRepos =                  {                      CreateRepo("owner/A"'  1' "nupkg1")'                      CreateRepo("owner/B"'  2' "nupkg1")'                      CreateRepo("owner/C"'  3' "nupkg1")'                      CreateRepo("owner/D"'  4' "nupkg1")'                      CreateRepo("owner/E"'  5' "nupkg1")                  };
Magic Number,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,MultiReposSameDependencyOrderedByStarCount,The following statement contains a magic number: RepositoryInformation[] expectedRepos =                  {                      CreateRepo("owner/A"'  1' "nupkg1")'                      CreateRepo("owner/B"'  2' "nupkg1")'                      CreateRepo("owner/C"'  3' "nupkg1")'                      CreateRepo("owner/D"'  4' "nupkg1")'                      CreateRepo("owner/E"'  5' "nupkg1")                  };
Magic Number,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,OrderedByStarCountThenByIdThenTrimmed,The following statement contains a magic number: RepositoryInformation[] expectedRepos =                  {                      CreateRepo("owner/A"'  1' "nupkg1")'                      CreateRepo("owner/B"'  2' "nupkg1")'                      CreateRepo("owner/C"'  3' "nupkg1")'                      CreateRepo("owner/D"'  5' "nupkg1")'                      CreateRepo("owner/E"'  5' "nupkg1")'                      CreateRepo("owner/F"'  7' "nupkg1")'                      CreateRepo("owner/G"'  7' "nupkg1")'                      CreateRepo("owner/H"'  7' "nupkg1")'                      CreateRepo("owner/I"'  8' "nupkg1")'                      CreateRepo("owner/J"'  9' "nupkg1")'                      CreateRepo("owner/K"'  1' "nupkg1")'                      CreateRepo("owner/L"'  10' "nupkg1")                  };
Magic Number,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,OrderedByStarCountThenByIdThenTrimmed,The following statement contains a magic number: RepositoryInformation[] expectedRepos =                  {                      CreateRepo("owner/A"'  1' "nupkg1")'                      CreateRepo("owner/B"'  2' "nupkg1")'                      CreateRepo("owner/C"'  3' "nupkg1")'                      CreateRepo("owner/D"'  5' "nupkg1")'                      CreateRepo("owner/E"'  5' "nupkg1")'                      CreateRepo("owner/F"'  7' "nupkg1")'                      CreateRepo("owner/G"'  7' "nupkg1")'                      CreateRepo("owner/H"'  7' "nupkg1")'                      CreateRepo("owner/I"'  8' "nupkg1")'                      CreateRepo("owner/J"'  9' "nupkg1")'                      CreateRepo("owner/K"'  1' "nupkg1")'                      CreateRepo("owner/L"'  10' "nupkg1")                  };
Magic Number,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,OrderedByStarCountThenByIdThenTrimmed,The following statement contains a magic number: RepositoryInformation[] expectedRepos =                  {                      CreateRepo("owner/A"'  1' "nupkg1")'                      CreateRepo("owner/B"'  2' "nupkg1")'                      CreateRepo("owner/C"'  3' "nupkg1")'                      CreateRepo("owner/D"'  5' "nupkg1")'                      CreateRepo("owner/E"'  5' "nupkg1")'                      CreateRepo("owner/F"'  7' "nupkg1")'                      CreateRepo("owner/G"'  7' "nupkg1")'                      CreateRepo("owner/H"'  7' "nupkg1")'                      CreateRepo("owner/I"'  8' "nupkg1")'                      CreateRepo("owner/J"'  9' "nupkg1")'                      CreateRepo("owner/K"'  1' "nupkg1")'                      CreateRepo("owner/L"'  10' "nupkg1")                  };
Magic Number,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,OrderedByStarCountThenByIdThenTrimmed,The following statement contains a magic number: RepositoryInformation[] expectedRepos =                  {                      CreateRepo("owner/A"'  1' "nupkg1")'                      CreateRepo("owner/B"'  2' "nupkg1")'                      CreateRepo("owner/C"'  3' "nupkg1")'                      CreateRepo("owner/D"'  5' "nupkg1")'                      CreateRepo("owner/E"'  5' "nupkg1")'                      CreateRepo("owner/F"'  7' "nupkg1")'                      CreateRepo("owner/G"'  7' "nupkg1")'                      CreateRepo("owner/H"'  7' "nupkg1")'                      CreateRepo("owner/I"'  8' "nupkg1")'                      CreateRepo("owner/J"'  9' "nupkg1")'                      CreateRepo("owner/K"'  1' "nupkg1")'                      CreateRepo("owner/L"'  10' "nupkg1")                  };
Magic Number,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,OrderedByStarCountThenByIdThenTrimmed,The following statement contains a magic number: RepositoryInformation[] expectedRepos =                  {                      CreateRepo("owner/A"'  1' "nupkg1")'                      CreateRepo("owner/B"'  2' "nupkg1")'                      CreateRepo("owner/C"'  3' "nupkg1")'                      CreateRepo("owner/D"'  5' "nupkg1")'                      CreateRepo("owner/E"'  5' "nupkg1")'                      CreateRepo("owner/F"'  7' "nupkg1")'                      CreateRepo("owner/G"'  7' "nupkg1")'                      CreateRepo("owner/H"'  7' "nupkg1")'                      CreateRepo("owner/I"'  8' "nupkg1")'                      CreateRepo("owner/J"'  9' "nupkg1")'                      CreateRepo("owner/K"'  1' "nupkg1")'                      CreateRepo("owner/L"'  10' "nupkg1")                  };
Magic Number,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,OrderedByStarCountThenByIdThenTrimmed,The following statement contains a magic number: RepositoryInformation[] expectedRepos =                  {                      CreateRepo("owner/A"'  1' "nupkg1")'                      CreateRepo("owner/B"'  2' "nupkg1")'                      CreateRepo("owner/C"'  3' "nupkg1")'                      CreateRepo("owner/D"'  5' "nupkg1")'                      CreateRepo("owner/E"'  5' "nupkg1")'                      CreateRepo("owner/F"'  7' "nupkg1")'                      CreateRepo("owner/G"'  7' "nupkg1")'                      CreateRepo("owner/H"'  7' "nupkg1")'                      CreateRepo("owner/I"'  8' "nupkg1")'                      CreateRepo("owner/J"'  9' "nupkg1")'                      CreateRepo("owner/K"'  1' "nupkg1")'                      CreateRepo("owner/L"'  10' "nupkg1")                  };
Magic Number,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,OrderedByStarCountThenByIdThenTrimmed,The following statement contains a magic number: RepositoryInformation[] expectedRepos =                  {                      CreateRepo("owner/A"'  1' "nupkg1")'                      CreateRepo("owner/B"'  2' "nupkg1")'                      CreateRepo("owner/C"'  3' "nupkg1")'                      CreateRepo("owner/D"'  5' "nupkg1")'                      CreateRepo("owner/E"'  5' "nupkg1")'                      CreateRepo("owner/F"'  7' "nupkg1")'                      CreateRepo("owner/G"'  7' "nupkg1")'                      CreateRepo("owner/H"'  7' "nupkg1")'                      CreateRepo("owner/I"'  8' "nupkg1")'                      CreateRepo("owner/J"'  9' "nupkg1")'                      CreateRepo("owner/K"'  1' "nupkg1")'                      CreateRepo("owner/L"'  10' "nupkg1")                  };
Magic Number,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,OrderedByStarCountThenByIdThenTrimmed,The following statement contains a magic number: RepositoryInformation[] expectedRepos =                  {                      CreateRepo("owner/A"'  1' "nupkg1")'                      CreateRepo("owner/B"'  2' "nupkg1")'                      CreateRepo("owner/C"'  3' "nupkg1")'                      CreateRepo("owner/D"'  5' "nupkg1")'                      CreateRepo("owner/E"'  5' "nupkg1")'                      CreateRepo("owner/F"'  7' "nupkg1")'                      CreateRepo("owner/G"'  7' "nupkg1")'                      CreateRepo("owner/H"'  7' "nupkg1")'                      CreateRepo("owner/I"'  8' "nupkg1")'                      CreateRepo("owner/J"'  9' "nupkg1")'                      CreateRepo("owner/K"'  1' "nupkg1")'                      CreateRepo("owner/L"'  10' "nupkg1")                  };
Magic Number,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,OrderedByStarCountThenByIdThenTrimmed,The following statement contains a magic number: RepositoryInformation[] expectedRepos =                  {                      CreateRepo("owner/A"'  1' "nupkg1")'                      CreateRepo("owner/B"'  2' "nupkg1")'                      CreateRepo("owner/C"'  3' "nupkg1")'                      CreateRepo("owner/D"'  5' "nupkg1")'                      CreateRepo("owner/E"'  5' "nupkg1")'                      CreateRepo("owner/F"'  7' "nupkg1")'                      CreateRepo("owner/G"'  7' "nupkg1")'                      CreateRepo("owner/H"'  7' "nupkg1")'                      CreateRepo("owner/I"'  8' "nupkg1")'                      CreateRepo("owner/J"'  9' "nupkg1")'                      CreateRepo("owner/K"'  1' "nupkg1")'                      CreateRepo("owner/L"'  10' "nupkg1")                  };
Magic Number,NuGetGallery,TheGetPackageInformationMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\GitHub\GitHubUsageConfigurationFacts.cs,OrderedByStarCountThenByIdThenTrimmed,The following statement contains a magic number: RepositoryInformation[] expectedRepos =                  {                      CreateRepo("owner/A"'  1' "nupkg1")'                      CreateRepo("owner/B"'  2' "nupkg1")'                      CreateRepo("owner/C"'  3' "nupkg1")'                      CreateRepo("owner/D"'  5' "nupkg1")'                      CreateRepo("owner/E"'  5' "nupkg1")'                      CreateRepo("owner/F"'  7' "nupkg1")'                      CreateRepo("owner/G"'  7' "nupkg1")'                      CreateRepo("owner/H"'  7' "nupkg1")'                      CreateRepo("owner/I"'  8' "nupkg1")'                      CreateRepo("owner/J"'  9' "nupkg1")'                      CreateRepo("owner/K"'  1' "nupkg1")'                      CreateRepo("owner/L"'  10' "nupkg1")                  };
Magic Number,NuGetGallery,SemVerLevelKeyFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\SemVerLevelKeyFacts.cs,AssertSemVer2KeyNotChanged,The following statement contains a magic number: Assert.Equal(2' SemVerLevelKey.SemVer2);
Magic Number,NuGetGallery,TheGetFileMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillReturnTheStreamWhenTheFileExists,The following statement contains a magic number: fakeBlob.Setup(x => x.DownloadToStreamAsync(It.IsAny<Stream>()' It.IsAny<AccessCondition>()))                      .Callback<Stream' AccessCondition>((x' _) => { x.WriteByte(42); })                      .Returns(Task.FromResult(0));
Magic Number,NuGetGallery,TheGetFileMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillReturnTheStreamWhenTheFileExists,The following statement contains a magic number: Assert.Equal(42' ((MemoryStream)stream).ToArray()[0]);
Magic Number,NuGetGallery,TheGetFileMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillSetTheStreamPositionToZero,The following statement contains a magic number: fakeBlob.Setup(x => x.DownloadToStreamAsync(It.IsAny<Stream>()' It.IsAny<AccessCondition>()))                          .Callback<Stream' AccessCondition>((x' _) => { x.WriteByte(42); })                          .Returns(Task.FromResult(0));
Magic Number,NuGetGallery,TheGetPriviledgedFileUriAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillThrowIfFolderIsNull,The following statement contains a magic number: var ex = await Assert.ThrowsAsync<ArgumentNullException>(() => service.GetPriviledgedFileUriAsync(                      null'                      fileName'                      FileUriPermissions.Read'                      DateTimeOffset.UtcNow.AddHours(3)));
Magic Number,NuGetGallery,TheGetPriviledgedFileUriAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillThrowIfFilenameIsNull,The following statement contains a magic number: var ex = await Assert.ThrowsAsync<ArgumentNullException>(() => service.GetPriviledgedFileUriAsync(                      folderName'                      null'                      FileUriPermissions.Read'                      DateTimeOffset.UtcNow.AddHours(3)));
Magic Number,NuGetGallery,TheGetPriviledgedFileUriAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillAlwaysUseSasTokenDependingOnContainerAvailability,The following statement contains a magic number: var uri = await service.GetPriviledgedFileUriAsync(                      containerName'                      fileName'                      FileUriPermissions.Read'                      DateTimeOffset.Now.AddHours(3));
Magic Number,NuGetGallery,TheGetPriviledgedFileUriAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillPassTheEndOfAccessTimestampFurther,The following statement contains a magic number: DateTimeOffset endOfAccess = DateTimeOffset.Now.AddHours(3);
Magic Number,NuGetGallery,TheGetFileReadUriAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillThrowIfFolderIsNull,The following statement contains a magic number: var ex = await Assert.ThrowsAsync<ArgumentNullException>(() => service.GetFileReadUriAsync(null' fileName' DateTimeOffset.UtcNow.AddHours(3)));
Magic Number,NuGetGallery,TheGetFileReadUriAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillThrowIfFilenameIsNull,The following statement contains a magic number: var ex = await Assert.ThrowsAsync<ArgumentNullException>(() => service.GetFileReadUriAsync(folderName' null' DateTimeOffset.UtcNow.AddHours(3)));
Magic Number,NuGetGallery,TheGetFileReadUriAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillUseSasTokenDependingOnContainerAvailability,The following statement contains a magic number: var uri = await service.GetFileReadUriAsync(containerName' fileName' DateTimeOffset.Now.AddHours(3));
Magic Number,NuGetGallery,TheGetFileReadUriAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WillPassTheEndOfAccessTimestampFurther,The following statement contains a magic number: DateTimeOffset endOfAccess = DateTimeOffset.Now.AddHours(3);
Magic Number,NuGetGallery,TheCopyFileAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,NoOpsIfPackageLengthAndHashMatch,The following statement contains a magic number: SetBlobLength(_srcProperties' 42);
Magic Number,NuGetGallery,TheSetMetadataAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WhenLazyStreamRead_ReturnsContent,The following statement contains a magic number: _blob.Setup(x => x.DownloadToStreamAsync(It.IsAny<Stream>()' It.IsAny<AccessCondition>()))                      .Callback<Stream' AccessCondition>((stream' _) =>                      {                          using (var writer = new StreamWriter(stream' Encoding.UTF8' bufferSize: 4096' leaveOpen: true))                          {                              writer.Write(_content);                          }                      })                      .Returns(Task.FromResult(0));
Magic Number,NuGetGallery,TheSetPropertiesAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceFacts.cs,WhenLazyStreamRead_ReturnsContent,The following statement contains a magic number: _blob.Setup(x => x.DownloadToStreamAsync(It.IsAny<Stream>()' It.IsAny<AccessCondition>()))                      .Callback<Stream' AccessCondition>((stream' _) =>                      {                          using (var writer = new StreamWriter(stream' Encoding.UTF8' bufferSize: 4096' leaveOpen: true))                          {                              writer.Write(_content);                          }                      })                      .Returns(Task.FromResult(0));
Magic Number,NuGetGallery,CloudBlobCoreFileStorageServiceIntegrationTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceIntegrationTests.cs,EnumeratesBlobs,The following statement contains a magic number: var segmentA = await container.ListBlobsSegmentedAsync(                  _prefixA'                  useFlatBlobListing: true'                  blobListingDetails: BlobListingDetails.None'                  maxResults: 2'                  blobContinuationToken: null'                  options: null'                  operationContext: null'                  cancellationToken: CancellationToken.None);
Magic Number,NuGetGallery,CloudBlobCoreFileStorageServiceIntegrationTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceIntegrationTests.cs,EnumeratesBlobs,The following statement contains a magic number: var segmentB = await container.ListBlobsSegmentedAsync(                  _prefixA'                  useFlatBlobListing: true'                  blobListingDetails: BlobListingDetails.None'                  maxResults: 2'                  blobContinuationToken: segmentA.ContinuationToken'                  options: null'                  operationContext: null'                  cancellationToken: CancellationToken.None);
Magic Number,NuGetGallery,CloudBlobCoreFileStorageServiceIntegrationTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceIntegrationTests.cs,EnumeratesBlobs,The following statement contains a magic number: Assert.Equal(2' segmentA.Results.Count);
Magic Number,NuGetGallery,CloudBlobCoreFileStorageServiceIntegrationTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceIntegrationTests.cs,EnumeratesSnapshots,The following statement contains a magic number: var segmentA = await container.ListBlobsSegmentedAsync(                  _prefixA'                  useFlatBlobListing: true'                  blobListingDetails: BlobListingDetails.Snapshots'                  maxResults: 2'                  blobContinuationToken: null'                  options: null'                  operationContext: null'                  cancellationToken: CancellationToken.None);
Magic Number,NuGetGallery,CloudBlobCoreFileStorageServiceIntegrationTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceIntegrationTests.cs,EnumeratesSnapshots,The following statement contains a magic number: var segmentB = await container.ListBlobsSegmentedAsync(                  _prefixA'                  useFlatBlobListing: true'                  blobListingDetails: BlobListingDetails.Snapshots'                  maxResults: 2'                  blobContinuationToken: segmentA.ContinuationToken'                  options: null'                  operationContext: null'                  cancellationToken: CancellationToken.None);
Magic Number,NuGetGallery,CloudBlobCoreFileStorageServiceIntegrationTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceIntegrationTests.cs,EnumeratesSnapshots,The following statement contains a magic number: Assert.Equal(2' segmentA.Results.Count);
Magic Number,NuGetGallery,CloudBlobCoreFileStorageServiceIntegrationTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceIntegrationTests.cs,AllowsDefaultRequestOptionsToBeSet,The following statement contains a magic number: await _targetA.SaveFileAsync(                  folderName'                  fileName'                  new MemoryStream(new byte[1024 * 1024])'                  overwrite: false);
Magic Number,NuGetGallery,CloudBlobCoreFileStorageServiceIntegrationTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceIntegrationTests.cs,AllowsDefaultRequestOptionsToBeSet,The following statement contains a magic number: await _targetA.SaveFileAsync(                  folderName'                  fileName'                  new MemoryStream(new byte[1024 * 1024])'                  overwrite: false);
Magic Number,NuGetGallery,CloudBlobCoreFileStorageServiceIntegrationTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceIntegrationTests.cs,OpenWriteAsyncRejectsETagMismatchFoundAfterUploadStarts,The following statement contains a magic number: Assert.Equal(2' writeCount);
Magic Number,NuGetGallery,CloudBlobCoreFileStorageServiceIntegrationTests,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CloudBlobCoreFileStorageServiceIntegrationTests.cs,ReturnsTheETagMatchingTheContent,The following statement contains a magic number: var iterations = 20;
Magic Number,NuGetGallery,TheGetValidationPackageReadUriAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillThrowIfPackageIsNull,The following statement contains a magic number: var ex = await Assert.ThrowsAsync<ArgumentNullException>(() => _service.GetValidationPackageReadUriAsync(null' DateTimeOffset.UtcNow.AddHours(3)));
Magic Number,NuGetGallery,TheGetValidationPackageReadUriAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageFileServiceFacts.cs,WillUseTheFileStorageService,The following statement contains a magic number: DateTimeOffset endOfAccess = DateTimeOffset.UtcNow.AddHours(3);
Magic Number,NuGetGallery,TheUpdatePackageStreamMetadataMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,UpdatesTheStreamMetadata,The following statement contains a magic number: var package = new Package                  {                      Hash = "hash-before"'                      HashAlgorithm = "hash-algorithm-before"'                      PackageFileSize = 23'                      LastUpdated = new DateTime(2017' 1' 1' 8' 30' 0)'                      LastEdited = new DateTime(2017' 1' 1' 7' 30' 0)'                      PackageStatusKey = PackageStatus.Available'                  };
Magic Number,NuGetGallery,TheUpdatePackageStreamMetadataMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,UpdatesTheStreamMetadata,The following statement contains a magic number: var package = new Package                  {                      Hash = "hash-before"'                      HashAlgorithm = "hash-algorithm-before"'                      PackageFileSize = 23'                      LastUpdated = new DateTime(2017' 1' 1' 8' 30' 0)'                      LastEdited = new DateTime(2017' 1' 1' 7' 30' 0)'                      PackageStatusKey = PackageStatus.Available'                  };
Magic Number,NuGetGallery,TheUpdatePackageStreamMetadataMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,UpdatesTheStreamMetadata,The following statement contains a magic number: var package = new Package                  {                      Hash = "hash-before"'                      HashAlgorithm = "hash-algorithm-before"'                      PackageFileSize = 23'                      LastUpdated = new DateTime(2017' 1' 1' 8' 30' 0)'                      LastEdited = new DateTime(2017' 1' 1' 7' 30' 0)'                      PackageStatusKey = PackageStatus.Available'                  };
Magic Number,NuGetGallery,TheUpdatePackageStreamMetadataMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,UpdatesTheStreamMetadata,The following statement contains a magic number: var package = new Package                  {                      Hash = "hash-before"'                      HashAlgorithm = "hash-algorithm-before"'                      PackageFileSize = 23'                      LastUpdated = new DateTime(2017' 1' 1' 8' 30' 0)'                      LastEdited = new DateTime(2017' 1' 1' 7' 30' 0)'                      PackageStatusKey = PackageStatus.Available'                  };
Magic Number,NuGetGallery,TheUpdatePackageStreamMetadataMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,UpdatesTheStreamMetadata,The following statement contains a magic number: var package = new Package                  {                      Hash = "hash-before"'                      HashAlgorithm = "hash-algorithm-before"'                      PackageFileSize = 23'                      LastUpdated = new DateTime(2017' 1' 1' 8' 30' 0)'                      LastEdited = new DateTime(2017' 1' 1' 7' 30' 0)'                      PackageStatusKey = PackageStatus.Available'                  };
Magic Number,NuGetGallery,TheUpdatePackageStreamMetadataMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,UpdatesTheStreamMetadata,The following statement contains a magic number: var package = new Package                  {                      Hash = "hash-before"'                      HashAlgorithm = "hash-algorithm-before"'                      PackageFileSize = 23'                      LastUpdated = new DateTime(2017' 1' 1' 8' 30' 0)'                      LastEdited = new DateTime(2017' 1' 1' 7' 30' 0)'                      PackageStatusKey = PackageStatus.Available'                  };
Magic Number,NuGetGallery,TheUpdatePackageStreamMetadataMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,UpdatesTheStreamMetadata,The following statement contains a magic number: var package = new Package                  {                      Hash = "hash-before"'                      HashAlgorithm = "hash-algorithm-before"'                      PackageFileSize = 23'                      LastUpdated = new DateTime(2017' 1' 1' 8' 30' 0)'                      LastEdited = new DateTime(2017' 1' 1' 7' 30' 0)'                      PackageStatusKey = PackageStatus.Available'                  };
Magic Number,NuGetGallery,TheUpdatePackageStreamMetadataMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,UpdatesTheStreamMetadata,The following statement contains a magic number: var metadata = new PackageStreamMetadata                  {                      Hash = "hash-after"'                      HashAlgorithm = "hash-algorithm-after"'                      Size = 42'                  };
Magic Number,NuGetGallery,TheUpdatePackageStreamMetadataMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,UpdatesTheStreamMetadata,The following statement contains a magic number: Assert.Equal(42' package.PackageFileSize);
Magic Number,NuGetGallery,TheUpdatePackageStreamMetadataMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,DoesNotUpdateLastEditedWhenNotAvailable,The following statement contains a magic number: var originalLastEdited = new DateTime(2017' 1' 1' 7' 30' 0);
Magic Number,NuGetGallery,TheUpdatePackageStreamMetadataMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,DoesNotUpdateLastEditedWhenNotAvailable,The following statement contains a magic number: var originalLastEdited = new DateTime(2017' 1' 1' 7' 30' 0);
Magic Number,NuGetGallery,TheUpdatePackageStreamMetadataMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,DoesNotUpdateLastEditedWhenNotAvailable,The following statement contains a magic number: var originalLastEdited = new DateTime(2017' 1' 1' 7' 30' 0);
Magic Number,NuGetGallery,TheUpdatePackageSigningCertificateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,TheUpdatePackageSigningCertificateAsyncMethod,The following statement contains a magic number: _packageRegistration = new PackageRegistration()                  {                      Key = 2'                      Id = "b"                  };
Magic Number,NuGetGallery,TheUpdatePackageSigningCertificateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,TheUpdatePackageSigningCertificateAsyncMethod,The following statement contains a magic number: _package = new Package()                  {                      Key = 3'                      PackageRegistration = _packageRegistration'                      NormalizedVersion = "1.2.3"                  };
Magic Number,NuGetGallery,TheUpdatePackageSigningCertificateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\CorePackageServiceFacts.cs,TheUpdatePackageSigningCertificateAsyncMethod,The following statement contains a magic number: _certificate = new Certificate()                  {                      Key = 4'                      Thumbprint = "c"                  };
Magic Number,NuGetGallery.Infrastructure.Mail.Messages,TheGetRecipientsMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Infrastructure\Mail\Messages\CredentialRevokedMessageFacts.cs,AddsOwnersToToList,The following statement contains a magic number: Assert.Equal(4' recipients.To.Count);
Magic Number,NuGetGallery.Infrastructure.Mail.Messages,TheGetRecipientsMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Infrastructure\Mail\Messages\CredentialRevokedMessageFacts.cs,AddsOwnersToToList,The following statement contains a magic number: Assert.Equal(4' recipients.To.Count);
Magic Number,NuGetGallery.Packaging,PackageMetadataFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\PackageMetadataFacts.cs,CanReadBasicMetadataProperties,The following statement contains a magic number: Assert.Equal(2' packageMetadata.Authors.Count);
Magic Number,NuGetGallery.Packaging,PackageMetadataFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Packaging\PackageMetadataFacts.cs,DoesNotThrowWhenInvalidDependencyVersionRangeDetectedAndParsingIsNotStrict,The following statement contains a magic number: Assert.Equal(2' packageMetadata.Authors.Count);
Magic Number,NuGetGallery.Services,TheGetStateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\RevalidationStateServiceFacts.cs,GetsLatestState,The following statement contains a magic number: Assert.Equal(123' state.DesiredPackageEventRate);
Magic Number,NuGetGallery.Services,TheGetStateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\RevalidationStateServiceFacts.cs,InitializedDefaultsToFalse,The following statement contains a magic number: Assert.Equal(123' state.DesiredPackageEventRate);
Magic Number,NuGetGallery.Services,TheGetStateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\RevalidationStateServiceFacts.cs,KillswitchDefaultsToFalse,The following statement contains a magic number: Assert.Equal(123' state.DesiredPackageEventRate);
Magic Number,NuGetGallery.Services,TheUpdateStateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\RevalidationStateServiceFacts.cs,UpdatesLatestState,The following statement contains a magic number: await _target.UpdateStateAsync(state =>                      {                          Assert.False(state.IsInitialized);                          Assert.True(state.IsKillswitchActive);                          Assert.Equal(123' state.DesiredPackageEventRate);                            state.IsInitialized = true;                          state.IsKillswitchActive = false;                          state.DesiredPackageEventRate = 456;                      });
Magic Number,NuGetGallery.Services,TheUpdateStateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\RevalidationStateServiceFacts.cs,UpdatesLatestState,The following statement contains a magic number: await _target.UpdateStateAsync(state =>                      {                          Assert.False(state.IsInitialized);                          Assert.True(state.IsKillswitchActive);                          Assert.Equal(123' state.DesiredPackageEventRate);                            state.IsInitialized = true;                          state.IsKillswitchActive = false;                          state.DesiredPackageEventRate = 456;                      });
Magic Number,NuGetGallery.Services,TheUpdateStateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\RevalidationStateServiceFacts.cs,UpdatesLatestState,The following statement contains a magic number: Assert.Equal(456' stateResult.DesiredPackageEventRate);
Magic Number,NuGetGallery.Services,TheMaybeUpdateStateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\RevalidationStateServiceFacts.cs,DoesntUpdateStateIfReturnsFalse,The following statement contains a magic number: result = await _target.MaybeUpdateStateAsync(state =>                      {                          Assert.False(state.IsInitialized);                          Assert.True(state.IsKillswitchActive);                          Assert.Equal(123' state.DesiredPackageEventRate);                            state.IsInitialized = true;                          state.IsKillswitchActive = false;                          state.DesiredPackageEventRate = 456;                            return false;                      });
Magic Number,NuGetGallery.Services,TheMaybeUpdateStateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\RevalidationStateServiceFacts.cs,DoesntUpdateStateIfReturnsFalse,The following statement contains a magic number: result = await _target.MaybeUpdateStateAsync(state =>                      {                          Assert.False(state.IsInitialized);                          Assert.True(state.IsKillswitchActive);                          Assert.Equal(123' state.DesiredPackageEventRate);                            state.IsInitialized = true;                          state.IsKillswitchActive = false;                          state.DesiredPackageEventRate = 456;                            return false;                      });
Magic Number,NuGetGallery.Services,TheMaybeUpdateStateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\RevalidationStateServiceFacts.cs,DoesntUpdateStateIfReturnsFalse,The following statement contains a magic number: Assert.Equal(123' result.DesiredPackageEventRate);
Magic Number,NuGetGallery.Services,TheMaybeUpdateStateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\RevalidationStateServiceFacts.cs,UpdatesStateIfReturnsTrue,The following statement contains a magic number: await _target.MaybeUpdateStateAsync(state =>                      {                          Assert.False(state.IsInitialized);                          Assert.True(state.IsKillswitchActive);                          Assert.Equal(123' state.DesiredPackageEventRate);                            state.IsInitialized = true;                          state.IsKillswitchActive = false;                          state.DesiredPackageEventRate = 456;                            return true;                      });
Magic Number,NuGetGallery.Services,TheMaybeUpdateStateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\RevalidationStateServiceFacts.cs,UpdatesStateIfReturnsTrue,The following statement contains a magic number: await _target.MaybeUpdateStateAsync(state =>                      {                          Assert.False(state.IsInitialized);                          Assert.True(state.IsKillswitchActive);                          Assert.Equal(123' state.DesiredPackageEventRate);                            state.IsInitialized = true;                          state.IsKillswitchActive = false;                          state.DesiredPackageEventRate = 456;                            return true;                      });
Magic Number,NuGetGallery.Services,TheMaybeUpdateStateAsyncMethod,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\RevalidationStateServiceFacts.cs,UpdatesStateIfReturnsTrue,The following statement contains a magic number: Assert.Equal(456' stateResult.DesiredPackageEventRate);
Magic Number,NuGetGallery.Services,StringReplaceTemplateProcessorFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\StringReplaceTemplateProcessorFacts.cs,GeneratePlaceholder,The following statement contains a magic number: int remainder = index % 26;
Magic Number,NuGetGallery.Services,StringReplaceTemplateProcessorFacts,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\Services\StringReplaceTemplateProcessorFacts.cs,GeneratePlaceholder,The following statement contains a magic number: index = index / 26;
Magic Number,NuGetGallery.TestUtils,PackageServiceUtility,C:\research\architectureSmells\repos\NuGet_NuGetGallery\tests\NuGetGallery.Core.Facts\TestUtils\PackageServiceUtility.cs,CreateTestPackage,The following statement contains a magic number: var package = new Package              {                  Key = 123'                  PackageRegistration = packageRegistration'                  Version = "1.0.0"'                  Hash = _packageHashForTests'                  SupportedFrameworks = new List<PackageFramework>                  {                      framework                  }'                  FlattenedAuthors = "maarten"'  #pragma warning disable 0618                  Authors = new List<PackageAuthor>                  {                      author                  }'  #pragma warning restore 0618                  Dependencies = new List<PackageDependency>                  {                      dependency                  }'                  User = new User("test")              };
