Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BuildingBlocks.Membership,MembershipProvider,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\MembershipProvider.cs,CreateUser,Cyclomatic complexity of the method is 8
Long Parameter List,BuildingBlocks.Membership,MembershipProvider,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\MembershipProvider.cs,CreateUser,The method has 8 parameters. Parameters: username' password' email' passwordQuestion' passwordAnswer' isApproved' providerUserKey' status
Long Identifier,BuildingBlocks.Membership,MembershipProvider,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\MembershipProvider.cs,,The length of the parameter _minRequiredNonAlphanumericCharacters is 37.
Long Statement,BuildingBlocks.Membership,ConfigHelper,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\ConfigHelper.cs,GetOf,The length of the statement  "                throw new InvalidCastException(string.Format("Value \"{0}\" of membership attribute \"{1}\" can be converted to \"{2}\""' settingValue' sectionName' type)); " is 156.
Long Statement,BuildingBlocks.Membership,ConfigHelper,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\ConfigHelper.cs,GetOf,The length of the statement  "                    throw new ConfigurationErrorsException(string.Format("Value \"{0}\" of membership attribute \"{1}\" is invalid: \"{2}\""' value' sectionName' error)); " is 150.
Long Statement,BuildingBlocks.Membership,LogExtentions,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\LogExtentions.cs,PasswordFailuresIncreased,The length of the statement  "                log.DebugFormat("Password failures attemps for user \"{0}\" was set to {1}"' user.Username' user.PasswordFailuresSinceLastSuccess); " is 131.
Long Statement,BuildingBlocks.Membership,MembershipProvider,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\MembershipProvider.cs,Initialize,The length of the statement  "            _minRequiredNonAlphanumericCharacters = config.GetOf<int?>("minRequiredNonalphanumericCharacters"' validator: ShouldBePositive); " is 128.
Long Statement,BuildingBlocks.Membership,MembershipProvider,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\MembershipProvider.cs,ValidateUser,The length of the statement  "            _log.Trace(m => m("User with name \"{0}\" validation successfully completed with result {1}"' username' verificationSucceeded)); " is 128.
Long Statement,BuildingBlocks.Membership,RoleProvider,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\RoleProvider.cs,FindUsersInRole,The length of the statement  "            var usersInRole = UserRepository.FindUsersInRole(ApplicationName' roleName' usernameToMatch).Select(u => u.Username).ToArray(); " is 127.
Long Statement,BuildingBlocks.Membership,RoleProvider,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\RoleProvider.cs,FindUsersInRole,The length of the statement  "            _log.Trace(m => m("Successfully finded users contained in role\"{0}\" and with names contained \"{1}\""' roleName' usernameToMatch)); " is 133.
Long Statement,BuildingBlocks.Membership,RoleProvider,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\RoleProvider.cs,AddUsersToRoles,The length of the statement  "            _log.Debug(m => m("Founded [{0}] users by [{1}] names"' users.Select(u => u.Username).JoinToString()' usernames.JoinToString())); " is 129.
Long Statement,BuildingBlocks.Membership,RoleProvider,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\RoleProvider.cs,RemoveUsersFromRoles,The length of the statement  "            _log.Trace(m => m("Removing users {0} from roles \"{1}\" succedded"' usernames.JoinToString()' roleNames.JoinToString())); " is 122.
Long Statement,BuildingBlocks.Membership.Entities,User,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\Entities\User.cs,AddRole,The length of the statement  "            _log.Debug(m => m("Role \"{0}\" sucessfully added to user' user has following roles [{1}]"' roleName' _roles.JoinToString())); " is 126.
Magic Number,BuildingBlocks.Membership,MembershipProvider,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\MembershipProvider.cs,CreateUser,The following statement contains a magic number: if (hashedPassword.Length > 128)              {                  status = MembershipCreateStatus.InvalidPassword;              }
Magic Number,BuildingBlocks.Membership,MembershipProvider,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\MembershipProvider.cs,ChangePassword,The following statement contains a magic number: if (newHashedPassword.Length > 128)              {                  _log.Debug(m => m("New password hash has invalid lenght"));                  return false;              }
Magic Number,BuildingBlocks.Membership,MembershipProvider,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\MembershipProvider.cs,ChangePassword,The following statement contains a magic number: if (newHashedPassword.Length > 128)              {                  _log.Debug(m => m("New password hash has invalid lenght"));                  return false;              }
Magic Number,BuildingBlocks.Membership,Crypto,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\Crypto.cs,BinaryToHex,The following statement contains a magic number: var hex = new char[data.Length * 2];
Magic Number,BuildingBlocks.Membership,Crypto,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\Crypto.cs,BinaryToHex,The following statement contains a magic number: for (int iter = 0; iter < data.Length; iter++)              {                  var hexChar = ((byte) (data[iter] >> 4));                  hex[iter * 2] = (char)(hexChar > 9 ? hexChar + 0x37 : hexChar + 0x30);                  hexChar = ((byte)(data[iter] & 0xF));                  hex[iter * 2 + 1] = (char)(hexChar > 9 ? hexChar + 0x37 : hexChar + 0x30);              }
Magic Number,BuildingBlocks.Membership,Crypto,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\Crypto.cs,BinaryToHex,The following statement contains a magic number: for (int iter = 0; iter < data.Length; iter++)              {                  var hexChar = ((byte) (data[iter] >> 4));                  hex[iter * 2] = (char)(hexChar > 9 ? hexChar + 0x37 : hexChar + 0x30);                  hexChar = ((byte)(data[iter] & 0xF));                  hex[iter * 2 + 1] = (char)(hexChar > 9 ? hexChar + 0x37 : hexChar + 0x30);              }
Magic Number,BuildingBlocks.Membership,Crypto,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\Crypto.cs,BinaryToHex,The following statement contains a magic number: for (int iter = 0; iter < data.Length; iter++)              {                  var hexChar = ((byte) (data[iter] >> 4));                  hex[iter * 2] = (char)(hexChar > 9 ? hexChar + 0x37 : hexChar + 0x30);                  hexChar = ((byte)(data[iter] & 0xF));                  hex[iter * 2 + 1] = (char)(hexChar > 9 ? hexChar + 0x37 : hexChar + 0x30);              }
Magic Number,BuildingBlocks.Membership,Crypto,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\Crypto.cs,BinaryToHex,The following statement contains a magic number: for (int iter = 0; iter < data.Length; iter++)              {                  var hexChar = ((byte) (data[iter] >> 4));                  hex[iter * 2] = (char)(hexChar > 9 ? hexChar + 0x37 : hexChar + 0x30);                  hexChar = ((byte)(data[iter] & 0xF));                  hex[iter * 2 + 1] = (char)(hexChar > 9 ? hexChar + 0x37 : hexChar + 0x30);              }
Magic Number,BuildingBlocks.Membership,Crypto,C:\repos\ifilipenko_Building-Blocks\src\BuildingBlocks.Membership\Crypto.cs,BinaryToHex,The following statement contains a magic number: for (int iter = 0; iter < data.Length; iter++)              {                  var hexChar = ((byte) (data[iter] >> 4));                  hex[iter * 2] = (char)(hexChar > 9 ? hexChar + 0x37 : hexChar + 0x30);                  hexChar = ((byte)(data[iter] & 0xF));                  hex[iter * 2 + 1] = (char)(hexChar > 9 ? hexChar + 0x37 : hexChar + 0x30);              }
