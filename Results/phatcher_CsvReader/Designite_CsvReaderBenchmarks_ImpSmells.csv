Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,CsvReaderDemo,Program,C:\repos\phatcher_CsvReader\code\CsvReaderBenchmarks\Program.cs,GetStats,The method has 7 parameters. Parameters: start' end' frequency' fileSize' clocks' time' rate
Long Statement,CsvReaderDemo,OleDbBenchmark,C:\repos\phatcher_CsvReader\code\CsvReaderBenchmarks\OleDbBenchmark.cs,Run,The length of the statement  "			using (OleDbConnection cnn = new OleDbConnection(@"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + directory + @";Extended Properties=""Text;HDR=No;FMT=Delimited""")) " is 167.
Magic Number,CsvReaderDemo,Program,C:\repos\phatcher_CsvReader\code\CsvReaderBenchmarks\Program.cs,Main,The following statement contains a magic number: const int Field = 72;
Magic Number,CsvReaderDemo,Program,C:\repos\phatcher_CsvReader\code\CsvReaderBenchmarks\Program.cs,Main,The following statement contains a magic number: long fileSize = new System.IO.FileInfo(TestFile2).Length / 1024 / 1024;
Magic Number,CsvReaderDemo,Program,C:\repos\phatcher_CsvReader\code\CsvReaderBenchmarks\Program.cs,Main,The following statement contains a magic number: long fileSize = new System.IO.FileInfo(TestFile2).Length / 1024 / 1024;
Magic Number,CsvReaderDemo,Program,C:\repos\phatcher_CsvReader\code\CsvReaderBenchmarks\Program.cs,Main,The following statement contains a magic number: for (int i = 1; i < 4; i++)  			{  				object csv;    				Console.WriteLine("Test pass #{0} - All fields\n"' i);    				DoTest("CsvReader - No cache"' fileSize' CsvReaderBenchmark.Run' TestFile2);  				csv = DoTest("CachedCsvReader - Run 1"' fileSize' CachedCsvReaderBenchmark.Run1' TestFile2);  				DoTest("CachedCsvReader - Run 2"' fileSize' CachedCsvReaderBenchmark.Run2' csv);  				DoTest("TextFieldParser"' fileSize' TextFieldParserBenchmark.Run' TestFile2);  				DoTest("Regex"' fileSize' RegexBenchmark.Run' TestFile2);    				// seems to not be working on Windows 7 with Office 2007 (and I'm not bothering to try to make it run on my machine)  				//DoTest("OleDb"' fileSize' OleDbBenchmark.Run' TestFile2);    				Console.WriteLine();    				Console.WriteLine("Test pass #{0} - Field #{1} (middle)\n"' i' Field);    				DoTest("CsvReader - No cache"' fileSize' CsvReaderBenchmark.Run' TestFile2' Field);  				csv = DoTest("CachedCsvReader - Run 1"' fileSize' CachedCsvReaderBenchmark.Run1' TestFile2' Field);  				DoTest("CachedCsvReader - Run 2"' fileSize' CachedCsvReaderBenchmark.Run2' csv' Field);  				DoTest("TextFieldParser"' fileSize' TextFieldParserBenchmark.Run' TestFile2' Field);  				DoTest("Regex"' fileSize' RegexBenchmark.Run' TestFile2' Field);    				// seems to not be working on Windows 7 with Office 2007 (and I'm not bothering to try to make it run on my machine)  				//DoTest("OleDb"' fileSize' OleDbBenchmark.Run' TestFile2' Field);    				Console.WriteLine();  				Console.WriteLine();  			}
Magic Number,CsvReaderDemo,Program,C:\repos\phatcher_CsvReader\code\CsvReaderBenchmarks\Program.cs,DoTest,The following statement contains a magic number: Console.WriteLine("{0} : {1} ticks' {2:f4} sec.' {3:f4} MB/sec."' name.PadRight(25)' clocks' time' rate);
Magic Number,CsvReaderDemo,RegexBenchmark,C:\repos\phatcher_CsvReader\code\CsvReaderBenchmarks\RegexBenchmark.cs,Run,The following statement contains a magic number: using (StreamReader csv = new StreamReader(path))  			{  				string s;    				if (field == -1)  				{  					while ((s = csv.ReadLine()) != null)  					{  						MatchCollection m = regex.Matches(s);    						for (int i = 0; i < m.Count; i += 2)  							s = m[i].Groups[fieldGroupIndex].Value;  					}  				}  				else  				{  					while ((s = csv.ReadLine()) != null)  					{  						MatchCollection m = regex.Matches(s);    						s = m[field << 1].Groups[fieldGroupIndex].Value;  					}  				}  			}
Missing Default,CsvReaderDemo,Program,C:\repos\phatcher_CsvReader\code\CsvReaderBenchmarks\Program.cs,Main,The following switch statement is missing a default case: switch (s)  					{  						case "CSVREADER":  							CsvReaderBenchmark.Run(TestFile3);  							return;  						case "OLEDB":  							OleDbBenchmark.Run(TestFile3);  							return;  						case "REGEX":  							RegexBenchmark.Run(TestFile3);  							return;  					}
