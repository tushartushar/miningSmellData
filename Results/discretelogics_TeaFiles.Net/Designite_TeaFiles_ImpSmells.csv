Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TeaTime,Extensions,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Access\Extensions.cs,Read,Cyclomatic complexity of the method is 13
Complex Method,TeaTime,Extensions,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Access\Extensions.cs,GetFieldType,Cyclomatic complexity of the method is 14
Complex Method,TeaTime,Extensions,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Access\Extensions.cs,GetSize,Cyclomatic complexity of the method is 13
Complex Method,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,Cyclomatic complexity of the method is 15
Complex Method,TeaTime,ItemDescription,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Description\ItemDescription.cs,IsAccessibleWith,Cyclomatic complexity of the method is 16
Complex Method,TeaTime,NameValueCollection,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Base\NameValue.cs,From,Cyclomatic complexity of the method is 9
Complex Method,TeaTime.Header,HeaderManager,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Header\HeaderManager.cs,ReadHeader,Cyclomatic complexity of the method is 9
Long Parameter List,TeaTime,UnsafeNativeMethods,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Access\RawMemoryMapping.cs,CreateFileMapping,The method has 6 parameters. Parameters: hFile' lpAttributes' flProtect' dwMaximumSizeHigh' dwMaximumSizeLow' lpName
Long Parameter List,TeaTime,UnsafeNativeMethods,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Access\RawMemoryMapping.cs,MapViewOfFile,The method has 5 parameters. Parameters: hFileMappingObject' dwDesiredAccess' dwFileOffsetHigh' dwFileOffsetLow' dwNumBytesToMap
Long Parameter List,TeaTime,Time,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Base\Time.cs,Time,The method has 6 parameters. Parameters: year' month' day' hour' minute' second
Long Parameter List,TeaTime,Time,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Base\Time.cs,Time,The method has 7 parameters. Parameters: year' month' day' hour' minute' second' millisecond
Long Parameter List,TeaTime,TeaFile<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\TeaFileT.cs,Create,The method has 5 parameters. Parameters: stream' ownsStream' contentDescription' nameValues' includeItemDescription
Long Statement,TeaTime,Extensions,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Access\Extensions.cs,Read,The length of the statement  "                throw new ArgumentOutOfRangeException("Reading FieldType '{0}' from the stream failed' the type is not supported.".Formatted(fieldType)); " is 137.
Long Statement,TeaTime,Extensions,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Access\Extensions.cs,GetFieldType,The length of the statement  "            if (t == typeof (Time)) return FieldType.Int64; // in doubt we use signed integers to avoid computational issues with signed values " is 131.
Long Statement,TeaTime,RawMemoryMapping<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Access\RawMemoryMapping.cs,OpenRead,The length of the statement  "                if (fs == null) throw new InvalidOperationException("TeaFile used for MemoryMapping is not a file stream but memory mapping requires a file."); " is 143.
Long Statement,TeaTime,Timescale,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Base\TimeScale.cs,FromEpoch,The length of the statement  "            if (ticksPerDay > TimeSpan.TicksPerDay) throw new ArgumentException("ticksPerDay must be less than 100ns / s resolution."); " is 123.
Long Statement,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetPrimitiveFields,The length of the statement  "                foreach (FieldPath primitiveField in f.FieldType.GetFields(bindingFlags).Select(path.AppendChild).SelectMany(this.GetPrimitiveFields)) " is 134.
Long Statement,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The length of the statement  "            throw new ItemException("The FieldType '{0}' of field '{1}' is not supported.'".Formatted(field.FieldType' field.Name)); " is 120.
Long Statement,TeaTime,ItemDescription,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Description\ItemDescription.cs,FromAnalysis,The length of the statement  "                    throw new ItemException("The item '{0}' has no fields. Creation of TeaFiles with empty structs is not supported.".Formatted(typeof (T).FullName)); " is 146.
Long Statement,TeaTime,ItemDescription,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Description\ItemDescription.cs,IsAccessibleWith,The length of the statement  "                    throw new TypeMismatchException("ItemNames do not match: '{0}' vs '{1}'".Formatted(this.ItemTypeName' accessorDescription.ItemTypeName)' "ItemName Check"); " is 155.
Long Statement,TeaTime,ItemDescription,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Description\ItemDescription.cs,IsAccessibleWith,The length of the statement  "                    throw new TypeMismatchException("ItemSizes do not match: {0} vs {1}".Formatted(this.ItemSize' accessorDescription.ItemSize)' "ItemSize Check"); " is 143.
Long Statement,TeaTime,ItemDescription,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Description\ItemDescription.cs,IsAccessibleWith,The length of the statement  "                if (!this.fields.Any()) throw new TypeMismatchException("No fields are available in {0} to check field offsets. Empty structs are not supported by this API.".Formatted(this.Source.ToString())' "No ItemFields"); " is 210.
Long Statement,TeaTime,ItemDescription,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Description\ItemDescription.cs,IsAccessibleWith,The length of the statement  "                if (!accessorDescription.fields.Any()) throw new TypeMismatchException("No fields are available in {0} to check field offsets. Empty structs are not supported by this API.".Formatted(accessorDescription.Source.ToString())' "No ItemFields Accessor"); " is 249.
Long Statement,TeaTime,ItemDescription,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Description\ItemDescription.cs,IsAccessibleWith,The length of the statement  "                    throw new TypeMismatchException("Field has no field with matching byte offset:'{0}'".Formatted(f)' "FieldOffsets Check"); " is 121.
Long Statement,TeaTime,ItemDescription,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Description\ItemDescription.cs,IsAccessibleWith,The length of the statement  "                // ItemDescriptionDetails.FieldNames includes ItemDescriptionDetails.FieldOffsets by the definition of ItemDescriptionDetails values! " is 133.
Long Statement,TeaTime,ItemDescription,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Description\ItemDescription.cs,IsAccessibleWith,The length of the statement  "                    throw new TypeMismatchException("Fields have different names: '{0}' vs '{1}'".Formatted(f' accessorDescription.FindFieldByOffset(f.Offset).Name)' "FieldNames Check"); " is 166.
Long Statement,TeaTime,ItemDescription,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Description\ItemDescription.cs,IsAccessibleWith,The length of the statement  "                // ItemDescriptionDetails.FieldNames includes ItemDescriptionDetails.FieldOffsets by the definition of ItemDescriptionDetails values! " is 133.
Long Statement,TeaTime,ItemDescription,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Description\ItemDescription.cs,IsAccessibleWith,The length of the statement  "                    throw new TypeMismatchException("Fields have different types: '{0}' vs '{1}'".Formatted(f' accessorDescription.FindFieldByOffset(f.Offset).Name)' "FieldTypes Check"); " is 166.
Long Statement,TeaTime,ItemDescription,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Description\ItemDescription.cs,ToString,The length of the statement  "                                                         this.fields.Select(f => string.Format("{0}' {1}' {2}"' f.Name.SafeToString("unnamed")' f.Offset' f.FieldType)).Joined(delimiter)); " is 130.
Long Statement,TeaTime,TeaFile,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\TeaFile.cs,OpenRead,The length of the statement  "                        throw new ItemException("Cannot read this file because the item has no fields according to its item description in the file."); " is 127.
Long Statement,TeaTime,TeaFile,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\TeaFile.cs,GetEventTime,The length of the statement  "            if (this.Description.ItemDescription == null) throw new InvalidOperationException("Cannot read event time' because the file contains no item description."); " is 156.
Long Statement,TeaTime,TeaFile<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\TeaFileT.cs,Append,The length of the statement  "                // A file opened for appending' cannot be read. Therefore we create a second file' read it and assign its description to the current TeaFile<> instance. " is 152.
Long Statement,TeaTime,TeaFile<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\TeaFileT.cs,Append,The length of the statement  "                using (var tfheader = OpenRead(headerReadStream' false' elementsToValidate)) // we pass headerStream ownership to tfheader' so it will be closed after header reaeding. " is 167.
Long Statement,TeaTime,TeaFile<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\TeaFileT.cs,Append,The length of the statement  "                        throw new IOException("Cannot append to file because it has preallocated space between the end of the item area and the end of the file."); " is 139.
Long Statement,TeaTime.Header,TimeSectionFormatter,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Header\Sections\TimeSectionFormatter.cs,Read,The length of the statement  "                    if (f == null) throw new FileFormatException("Time format section contains an entry for a field at offset {0} but no such field was found in the item description."); " is 165.
Long Statement,TeaTime.Header,HeaderManager,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Header\HeaderManager.cs,ReadHeader,The length of the statement  "                if (bom != 0x0d0e0a0402080500) throw new FileFormatException("Expected Signature not found. Either this file is not a TeaFile or the byte order (endianness) differs between the machine were the file was written and the local machine. Expected:'{0:x}'\nFound:   '{1:x}'\n".Formatted(0x0d0e0a0402080500' bom)); " is 308.
Long Statement,TeaTime.Header,HeaderManager,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Header\HeaderManager.cs,ReadHeader,The length of the statement  "                    if (nextSectionStart > rc.ItemAreaStart) throw new FileFormatException("NextSectionOffset of section number {0} is wrong: Next Section Start would be beyond ItemStart.".Formatted(i)); " is 183.
Long Statement,TeaTime.Header,HeaderManager,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Header\HeaderManager.cs,ReadHeader,The length of the statement  "                        if (r.Position > nextSectionStart) throw new FileFormatException("Section read too many bytes from the stream. SectionId:{0} SectionName:{1}".Formatted(sectionId' sectionFormatter.GetType().Name.Replace("Formatter"' ""))); " is 222.
Long Statement,TeaTime.Header,HeaderManager,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Header\HeaderManager.cs,ReadHeader,The length of the statement  "                    if (bytesToSkip < 0) throw new FileFormatException("Reading sections from the file header failed. Section with id {0} reads more bytes than reserved for that section".Formatted(sectionId)); " is 189.
Long Statement,TeaTime.Header,HeaderManager,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Header\HeaderManager.cs,ReadHeader,The length of the statement  "                if (rc.ItemAreaStart != r.Position) throw new FileFormatException("Stream Position could not be set to start of item area."); " is 125.
Long Statement,TeaTime.Header,HeaderManager,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Header\HeaderManager.cs,WriteHeader,The length of the statement  "            wc.ItemAreaStart = 32; //  if no sections are created' ItemArea will start at 32. This value will change is sections are created " is 128.
Long Statement,TeaTime.Header,HeaderManager,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Header\HeaderManager.cs,WriteHeader,The length of the statement  "            //if (sectionPadding < 0) throw new FileFormatException("Stream position (potentially after writing sections) is behind item start. After opening a TeaFile and reading the header' the file pointer must be exactly at the begin of the item area."); " is 246.
Long Statement,TeaTime.Header,HeaderManager,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Header\HeaderManager.cs,CreateSections,The length of the statement  "                    using (var payloadStream = new MemoryStream()) // actually MemoryStream.Dispose() is a noop here' but for the code analysers pleasure we wrap these usings around " is 161.
Magic Number,TeaTime,Extensions,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Access\Extensions.cs,GetSize,The following statement contains a magic number: switch (fieldType)              {              case FieldType.Int8:                  return 1;              case FieldType.Int16:                  return 2;              case FieldType.Int32:                  return 4;              case FieldType.Int64:                  return 8;                case FieldType.UInt8:                  return 1;              case FieldType.UInt16:                  return 2;              case FieldType.UInt32:                  return 4;              case FieldType.UInt64:                  return 8;                case FieldType.Float:                  return 4;              case FieldType.Double:                  return 8;                case FieldType.NetDecimal:                  return 16;                case FieldType.None:                  throw new InvalidOperationException("FieldType was not set to a valid type.");                default:                  throw new ArgumentOutOfRangeException("The FieldType '{0}' is not supported by this API.".Formatted(fieldType));              }
Magic Number,TeaTime,Extensions,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Access\Extensions.cs,GetSize,The following statement contains a magic number: switch (fieldType)              {              case FieldType.Int8:                  return 1;              case FieldType.Int16:                  return 2;              case FieldType.Int32:                  return 4;              case FieldType.Int64:                  return 8;                case FieldType.UInt8:                  return 1;              case FieldType.UInt16:                  return 2;              case FieldType.UInt32:                  return 4;              case FieldType.UInt64:                  return 8;                case FieldType.Float:                  return 4;              case FieldType.Double:                  return 8;                case FieldType.NetDecimal:                  return 16;                case FieldType.None:                  throw new InvalidOperationException("FieldType was not set to a valid type.");                default:                  throw new ArgumentOutOfRangeException("The FieldType '{0}' is not supported by this API.".Formatted(fieldType));              }
Magic Number,TeaTime,Extensions,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Access\Extensions.cs,GetSize,The following statement contains a magic number: switch (fieldType)              {              case FieldType.Int8:                  return 1;              case FieldType.Int16:                  return 2;              case FieldType.Int32:                  return 4;              case FieldType.Int64:                  return 8;                case FieldType.UInt8:                  return 1;              case FieldType.UInt16:                  return 2;              case FieldType.UInt32:                  return 4;              case FieldType.UInt64:                  return 8;                case FieldType.Float:                  return 4;              case FieldType.Double:                  return 8;                case FieldType.NetDecimal:                  return 16;                case FieldType.None:                  throw new InvalidOperationException("FieldType was not set to a valid type.");                default:                  throw new ArgumentOutOfRangeException("The FieldType '{0}' is not supported by this API.".Formatted(fieldType));              }
Magic Number,TeaTime,Extensions,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Access\Extensions.cs,GetSize,The following statement contains a magic number: switch (fieldType)              {              case FieldType.Int8:                  return 1;              case FieldType.Int16:                  return 2;              case FieldType.Int32:                  return 4;              case FieldType.Int64:                  return 8;                case FieldType.UInt8:                  return 1;              case FieldType.UInt16:                  return 2;              case FieldType.UInt32:                  return 4;              case FieldType.UInt64:                  return 8;                case FieldType.Float:                  return 4;              case FieldType.Double:                  return 8;                case FieldType.NetDecimal:                  return 16;                case FieldType.None:                  throw new InvalidOperationException("FieldType was not set to a valid type.");                default:                  throw new ArgumentOutOfRangeException("The FieldType '{0}' is not supported by this API.".Formatted(fieldType));              }
Magic Number,TeaTime,Extensions,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Access\Extensions.cs,GetSize,The following statement contains a magic number: switch (fieldType)              {              case FieldType.Int8:                  return 1;              case FieldType.Int16:                  return 2;              case FieldType.Int32:                  return 4;              case FieldType.Int64:                  return 8;                case FieldType.UInt8:                  return 1;              case FieldType.UInt16:                  return 2;              case FieldType.UInt32:                  return 4;              case FieldType.UInt64:                  return 8;                case FieldType.Float:                  return 4;              case FieldType.Double:                  return 8;                case FieldType.NetDecimal:                  return 16;                case FieldType.None:                  throw new InvalidOperationException("FieldType was not set to a valid type.");                default:                  throw new ArgumentOutOfRangeException("The FieldType '{0}' is not supported by this API.".Formatted(fieldType));              }
Magic Number,TeaTime,Extensions,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Access\Extensions.cs,GetSize,The following statement contains a magic number: switch (fieldType)              {              case FieldType.Int8:                  return 1;              case FieldType.Int16:                  return 2;              case FieldType.Int32:                  return 4;              case FieldType.Int64:                  return 8;                case FieldType.UInt8:                  return 1;              case FieldType.UInt16:                  return 2;              case FieldType.UInt32:                  return 4;              case FieldType.UInt64:                  return 8;                case FieldType.Float:                  return 4;              case FieldType.Double:                  return 8;                case FieldType.NetDecimal:                  return 16;                case FieldType.None:                  throw new InvalidOperationException("FieldType was not set to a valid type.");                default:                  throw new ArgumentOutOfRangeException("The FieldType '{0}' is not supported by this API.".Formatted(fieldType));              }
Magic Number,TeaTime,Extensions,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Access\Extensions.cs,GetSize,The following statement contains a magic number: switch (fieldType)              {              case FieldType.Int8:                  return 1;              case FieldType.Int16:                  return 2;              case FieldType.Int32:                  return 4;              case FieldType.Int64:                  return 8;                case FieldType.UInt8:                  return 1;              case FieldType.UInt16:                  return 2;              case FieldType.UInt32:                  return 4;              case FieldType.UInt64:                  return 8;                case FieldType.Float:                  return 4;              case FieldType.Double:                  return 8;                case FieldType.NetDecimal:                  return 16;                case FieldType.None:                  throw new InvalidOperationException("FieldType was not set to a valid type.");                default:                  throw new ArgumentOutOfRangeException("The FieldType '{0}' is not supported by this API.".Formatted(fieldType));              }
Magic Number,TeaTime,Extensions,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Access\Extensions.cs,GetSize,The following statement contains a magic number: switch (fieldType)              {              case FieldType.Int8:                  return 1;              case FieldType.Int16:                  return 2;              case FieldType.Int32:                  return 4;              case FieldType.Int64:                  return 8;                case FieldType.UInt8:                  return 1;              case FieldType.UInt16:                  return 2;              case FieldType.UInt32:                  return 4;              case FieldType.UInt64:                  return 8;                case FieldType.Float:                  return 4;              case FieldType.Double:                  return 8;                case FieldType.NetDecimal:                  return 16;                case FieldType.None:                  throw new InvalidOperationException("FieldType was not set to a valid type.");                default:                  throw new ArgumentOutOfRangeException("The FieldType '{0}' is not supported by this API.".Formatted(fieldType));              }
Magic Number,TeaTime,Extensions,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Access\Extensions.cs,GetSize,The following statement contains a magic number: switch (fieldType)              {              case FieldType.Int8:                  return 1;              case FieldType.Int16:                  return 2;              case FieldType.Int32:                  return 4;              case FieldType.Int64:                  return 8;                case FieldType.UInt8:                  return 1;              case FieldType.UInt16:                  return 2;              case FieldType.UInt32:                  return 4;              case FieldType.UInt64:                  return 8;                case FieldType.Float:                  return 4;              case FieldType.Double:                  return 8;                case FieldType.NetDecimal:                  return 16;                case FieldType.None:                  throw new InvalidOperationException("FieldType was not set to a valid type.");                default:                  throw new ArgumentOutOfRangeException("The FieldType '{0}' is not supported by this API.".Formatted(fieldType));              }
Magic Number,TeaTime,Timescale,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Base\TimeScale.cs,GetHashCode,The following statement contains a magic number: return (this.epochOffsetInDays.GetHashCode() * 397) ^ this.ticksPerDay.GetHashCode();
Magic Number,TeaTime,Time,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Base\Time.cs,AddHours,The following statement contains a magic number: return new Time((long)(this.Ticks + hours * scale.TicksPerDay / 24));
Magic Number,TeaTime,Time,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Base\Time.cs,AddMinutes,The following statement contains a magic number: return new Time((long)(this.Ticks + (minutes * scale.TicksPerDay / (24 * 60))));
Magic Number,TeaTime,Time,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Base\Time.cs,AddMinutes,The following statement contains a magic number: return new Time((long)(this.Ticks + (minutes * scale.TicksPerDay / (24 * 60))));
Magic Number,TeaTime,Time,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Base\Time.cs,AddSeconds,The following statement contains a magic number: return new Time((long)(this.Ticks + seconds * scale.TicksPerDay / (24 * 60 * 60)));
Magic Number,TeaTime,Time,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Base\Time.cs,AddSeconds,The following statement contains a magic number: return new Time((long)(this.Ticks + seconds * scale.TicksPerDay / (24 * 60 * 60)));
Magic Number,TeaTime,Time,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Base\Time.cs,AddSeconds,The following statement contains a magic number: return new Time((long)(this.Ticks + seconds * scale.TicksPerDay / (24 * 60 * 60)));
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: sbyte magic = 17;
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: Int16 magic = 1702;
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: Int32 magic = 4122;
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: byte magic = 125;
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: UInt16 magic = 125;
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: UInt32 magic = 433322211;
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: UInt64 magic = 99887766554433;
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: double magic = 1234.5678;
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: float magic = 12.34f;
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: DateTime magic = new DateTime(1967' 3' 4' 11' 7' 12);
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: DateTime magic = new DateTime(1967' 3' 4' 11' 7' 12);
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: DateTime magic = new DateTime(1967' 3' 4' 11' 7' 12);
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: DateTime magic = new DateTime(1967' 3' 4' 11' 7' 12);
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: DateTime magic = new DateTime(1967' 3' 4' 11' 7' 12);
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: DateTime magic = new DateTime(1967' 3' 4' 11' 7' 12);
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: Time magic = new Time(1972' 3' 4' 11' 7' 12);
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: Time magic = new Time(1972' 3' 4' 11' 7' 12);
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: Time magic = new Time(1972' 3' 4' 11' 7' 12);
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: Time magic = new Time(1972' 3' 4' 11' 7' 12);
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: Time magic = new Time(1972' 3' 4' 11' 7' 12);
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: Time magic = new Time(1972' 3' 4' 11' 7' 12);
Magic Number,TeaTime,LayoutAnalyzer<T>,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Layout\LayoutAnalyzer.cs,GetOffset,The following statement contains a magic number: decimal magic = 1234.5678m;
Magic Number,TeaTime,TeaFileCore,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\TeaFileCore.cs,Truncate,The following statement contains a magic number: this.stream.Position = 8;
Magic Number,TeaTime,NameValueCollection,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Base\NameValue.cs,From,The following statement contains a magic number: args.Length % 2 == 1
Magic Number,TeaTime,NameValueCollection,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Base\NameValue.cs,ToString,The following statement contains a magic number: var s = string.Join(Environment.NewLine' this.nameValues.Take(10));
Magic Number,TeaTime,NameValueCollection,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Base\NameValue.cs,ToString,The following statement contains a magic number: this.nameValues.Count > 10
Magic Number,TeaTime,TeaFile,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\TeaFile.cs,GetFieldSpacings,The following statement contains a magic number: i <= fields.Count - 2
Magic Number,TeaTime.Header,HeaderManager,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Header\HeaderManager.cs,WriteHeader,The following statement contains a magic number: wc.ItemAreaStart = 32;
Magic Number,TeaTime.Header,HeaderManager,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Header\HeaderManager.cs,CreateSections,The following statement contains a magic number: int pos = 32;
Magic Number,TeaTime.Header,HeaderManager,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Header\HeaderManager.cs,CreateSections,The following statement contains a magic number: pos += 4;
Magic Number,TeaTime.Header,HeaderManager,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Header\HeaderManager.cs,CreateSections,The following statement contains a magic number: pos += 4;
Magic Number,TeaTime.Header,HeaderManager,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Header\HeaderManager.cs,CreateSections,The following statement contains a magic number: int paddingBytes = (8 - pos % 8);
Magic Number,TeaTime.Header,HeaderManager,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Header\HeaderManager.cs,CreateSections,The following statement contains a magic number: int paddingBytes = (8 - pos % 8);
Magic Number,TeaTime.Header,HeaderManager,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\Header\HeaderManager.cs,CreateSections,The following statement contains a magic number: paddingBytes == 8
Magic Number,TeaTime.IO,FormattedReader,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\IO\FormattedReader.cs,ReadGuid,The following statement contains a magic number: var bytes = this.fileIO.ReadBytes(16);
Missing Default,TeaTime,TeaFileCore,D:\research\architectureSmells\repos\discretelogics_TeaFiles.Net\TeaFiles\TeaFileCore.cs,ReadHeader,The following switch statement is missing a default case: switch (Time.ScaleCollisionBehavior)                      {                      case ScaleCollisionBehavior.ThrowException:                          throw new TimescaleException();                        case ScaleCollisionBehavior.Ignore:                          break;                        case ScaleCollisionBehavior.UseNewScale:                          Time.Scale = fileTimeScale;                          break;                      }
