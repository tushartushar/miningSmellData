Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DataTableStorageSample,Program,C:\repos\Azure_AzureQuickStartsProjects\Data Services\DataTableStorage\Program.cs,CreateTableAsync,The length of the statement  "            CloudStorageAccount storageAccount = CreateStorageAccountFromConnectionString(CloudConfigurationManager.GetSetting("StorageConnectionString")); " is 143.
Long Statement,DataTableStorageSample,Program,C:\repos\Azure_AzureQuickStartsProjects\Data Services\DataTableStorage\Program.cs,CreateTableAsync,The length of the statement  "                Console.WriteLine("If you are running with the default configuration please make sure you have started the storage emulator. Press the Windows key and type Azure Storage to select and run it from the list of applications - then restart the sample."); " is 250.
Long Statement,DataTableStorageSample,Program,C:\repos\Azure_AzureQuickStartsProjects\Data Services\DataTableStorage\Program.cs,CreateStorageAccountFromConnectionString,The length of the statement  "                Console.WriteLine("Invalid storage account information provided. Please confirm the AccountName and AccountKey are valid in the app.config file - then restart the application."); " is 178.
Long Statement,DataTableStorageSample,Program,C:\repos\Azure_AzureQuickStartsProjects\Data Services\DataTableStorage\Program.cs,CreateStorageAccountFromConnectionString,The length of the statement  "                Console.WriteLine("Invalid storage account information provided. Please confirm the AccountName and AccountKey are valid in the app.config file - then restart the sample."); " is 173.
Long Statement,DataTableStorageSample,Program,C:\repos\Azure_AzureQuickStartsProjects\Data Services\DataTableStorage\Program.cs,RetrieveEntityUsingPointQueryAsync,The length of the statement  "                Console.WriteLine("\t{0}\t{1}\t{2}\t{3}"' customer.PartitionKey' customer.RowKey' customer.Email' customer.PhoneNumber); " is 120.
Long Statement,DataTableStorageSample,Program,C:\repos\Azure_AzureQuickStartsProjects\Data Services\DataTableStorage\Program.cs,BatchInsertOfCustomerEntitiesAsync,The length of the statement  "                Console.WriteLine("Inserted entity with\t Etag = {0} and PartitionKey = {1}' RowKey = {2}"' customerInserted.ETag' customerInserted.PartitionKey' customerInserted.RowKey); " is 171.
Magic Number,DataTableStorageSample,Program,C:\repos\Azure_AzureQuickStartsProjects\Data Services\DataTableStorage\Program.cs,BatchInsertOfCustomerEntitiesAsync,The following statement contains a magic number: for (int i = 0; i < 100; i++)              {                  batchOperation.InsertOrMerge(new CustomerEntity("Smith"' string.Format("{0}"' i.ToString("D4")))                      {                          Email = string.Format("{0}@contoso.com"' i.ToString("D4"))'                          PhoneNumber = string.Format("425-555-{0}"' i.ToString("D4"))                      });              }
Magic Number,DataTableStorageSample,Program,C:\repos\Azure_AzureQuickStartsProjects\Data Services\DataTableStorage\Program.cs,PartitionRangeQueryAsync,The following statement contains a magic number: rangeQuery.TakeCount = 50;
