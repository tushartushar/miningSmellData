Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,DeployManageVirtualMachines,Program,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\Program.cs,SetupAndTearDownVirtualMachine,The length of the parameter managementControllerParameters is 30.
Long Statement,AzureQuickStarts.Common,CertificateAuthenticationHelper,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\CertificateAuthenticationHelper.cs,GetCredentials,The length of the statement  "	return new CertificateCloudCredentials (subscrtionId' new X509Certificate2 (Convert.FromBase64String (base64EncodedCert))); " is 123.
Long Statement,DeployManageVirtualMachines,VMManagementController,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\VMManagementController.cs,GetSubscriptionCloudCredentials,The length of the statement  "	return new CertificateCloudCredentials (publishSettingCreds.SubscriptionId' new X509Certificate2 (Convert.FromBase64String (publishSettingCreds.ManagementCertificate))); " is 169.
Long Statement,DeployManageVirtualMachines,VMManagementController,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\VMManagementController.cs,CreateVirtualMachine,The length of the statement  "			MediaLink = new Uri (string.Format ("https://{0}.blob.core.windows.net/vhds/{1}"' _parameters.StorageAccountName' _parameters.VMName))' " is 135.
Long Statement,DeployManageVirtualMachines,VMManagementController,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\VMManagementController.cs,CreateVirtualMachine,The length of the statement  "	var response = await _computeManagementClient.VirtualMachines.CreateDeploymentAsync (_parameters.CloudServiceName' parameters); " is 127.
Long Statement,DeployManageVirtualMachines,VMManagementController,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\VMManagementController.cs,StopVirtualMachine,The length of the statement  "	await _computeManagementClient.VirtualMachines.ShutdownAsync (_parameters.CloudServiceName' _parameters.CloudServiceName' _parameters.VMName' shutdownParams); " is 158.
Long Statement,DeployManageVirtualMachines,VMManagementController,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\VMManagementController.cs,StartVirtualMachine,The length of the statement  "	await _computeManagementClient.VirtualMachines.StartAsync (_parameters.CloudServiceName' _parameters.CloudServiceName' _parameters.VMName); " is 139.
Long Statement,DeployManageVirtualMachines,VMManagementController,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\VMManagementController.cs,DeleteVirtualMachine,The length of the statement  "	var deleteDeploymentOp = await _computeManagementClient.Deployments.DeleteByNameAsync (_parameters.CloudServiceName' deployment.Name' true); " is 140.
Long Statement,DeployManageVirtualMachines,VMManagementController,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\VMManagementController.cs,PollVMStatus,The length of the statement  "		deployment = _computeManagementClient.Deployments.GetByName (_parameters.CloudServiceName' _parameters.CloudServiceName); " is 121.
Long Statement,DeployManageVirtualMachines,VMManagementController,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\VMManagementController.cs,PollVHDBlob,The length of the statement  "	//var account = new CloudStorageAccount(new Microsoft.WindowsAzure.Storage.Auth.StorageCredentials(_parameters.StorageAccountName' _primaryKey)' true); " is 151.
Long Statement,DeployManageVirtualMachines,VMManagementController,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\VMManagementController.cs,PollVHDBlob,The length of the statement  "	var blobName = String.Format ("https://{0}.blob.core.windows.net/vhds/{1}"' _parameters.StorageAccountName' _parameters.VMName); " is 128.
Long Statement,DeployManageVirtualMachines,VMManagementController,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\VMManagementController.cs,PollVHDBlob,The length of the statement  "	var blob = new CloudPageBlob (new Uri (blobName)' new Microsoft.WindowsAzure.Storage.Auth.StorageCredentials (_parameters.StorageAccountName' _primaryKey)); " is 156.
Long Statement,DeployManageVirtualMachines,Program,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\Program.cs,SetupAndTearDownVirtualMachine,The length of the statement  "		var windowsImages = images.Where (i => i.OperatingSystemType == "Windows" && i.PublisherName == "Microsoft Windows Server Group"); " is 130.
Long Statement,DeployManageVirtualMachines,Program,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\Program.cs,SetupAndTearDownVirtualMachine,The length of the statement  "		Console.WriteLine ("1. Creating Storage Account named {0} in Region {1}..."' managementControllerParameters.StorageAccountName' managementControllerParameters.Region); " is 167.
Long Statement,DeployManageVirtualMachines,Program,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\Program.cs,SetupAndTearDownVirtualMachine,The length of the statement  "		Console.WriteLine ("2. Creating a Cloud Service named {0} in Region {1}"' managementControllerParameters.CloudServiceName' managementControllerParameters.Region); " is 162.
Magic Number,DeployManageVirtualMachines,VMManagementController,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\VMManagementController.cs,CreateVirtualMachine,The following statement contains a magic number: parameters.Roles [0].ConfigurationSets.Add (new ConfigurationSet {  	ConfigurationSetType = ConfigurationSetTypes.NetworkConfiguration'  	InputEndpoints = new List<InputEndpoint> () {  		// Open the RDP port using a non-standard external port   		new InputEndpoint () {  			Name = "RDP"'  			Protocol = InputEndpointTransportProtocol.Tcp'  			LocalPort = 3389'  			Port = _parameters.RDPPort  		}  	}  });  
Magic Number,DeployManageVirtualMachines,VMManagementController,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\VMManagementController.cs,PollVMStatus,The following statement contains a magic number: while (true) {  	// Get the deployment  	deployment = _computeManagementClient.Deployments.GetByName (_parameters.CloudServiceName' _parameters.CloudServiceName);  	// Retrieve the status of the first Role Instance (the VM)  	status = deployment.RoleInstances [0].InstanceStatus;  	// Break if we reached the target status  	if (status == targetStatus)  		break;  	// Execute the action  	action (status);  	// Wait a while  	System.Threading.Thread.Sleep (pollIntervalSeconds * 1000);  }  
Magic Number,DeployManageVirtualMachines,VMManagementController,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\VMManagementController.cs,PollVMStatus,The following statement contains a magic number: System.Threading.Thread.Sleep (pollIntervalSeconds * 1000);  
Magic Number,DeployManageVirtualMachines,VMManagementController,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\VMManagementController.cs,PollVHDBlob,The following statement contains a magic number: while (true) {  	// Break if the Blob has disappeared  	if (!blob.Exists ())  		break;  	// Execute the action  	action ();  	// Wait a while  	System.Threading.Thread.Sleep (pollIntervalSeconds * 1000);  }  
Magic Number,DeployManageVirtualMachines,VMManagementController,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\VMManagementController.cs,PollVHDBlob,The following statement contains a magic number: System.Threading.Thread.Sleep (pollIntervalSeconds * 1000);  
Magic Number,DeployManageVirtualMachines,Program,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\Program.cs,SetupAndTearDownVirtualMachine,The following statement contains a magic number: using (VMManagementController controller = new VMManagementController (managementControllerParameters)) {  	// Retrieve a list of available images and display a choice of Windows images  	Console.WriteLine ("Please choose an OS image to use:");  	var images = await controller.GetImagesList ();  	var windowsImages = images.Where (i => i.OperatingSystemType == "Windows" && i.PublisherName == "Microsoft Windows Server Group");  	for (int i = 0; i < windowsImages.Count (); i++) {  		Console.WriteLine (i + 1 + ". " + windowsImages.ElementAt (i).Label);  	}  	var imageId = Console.ReadLine ();  	// Keep a reference to the chosen image  	var imageToGet = windowsImages.ElementAt (int.Parse (imageId) - 1);  	// Start the steps to create the VM  	Console.WriteLine ("1. Creating Storage Account named {0} in Region {1}..."' managementControllerParameters.StorageAccountName' managementControllerParameters.Region);  	// Create the Storage Account  	await controller.CreateStorageAccount ();  	Console.WriteLine ("...Complete");  	Console.WriteLine ("2. Creating a Cloud Service named {0} in Region {1}"' managementControllerParameters.CloudServiceName' managementControllerParameters.Region);  	ConsoleContinuePrompt ("Create the Cloud Service");  	// Create the Cloud Service  	await controller.CreateCloudService ();  	Console.WriteLine ("...Complete");  	Console.WriteLine ("3. Create the Virtual Machine");  	ConsoleContinuePrompt ("Create the VM");  	// Create the Virtual Machine  	await controller.CreateVirtualMachine (imageToGet.Name);  	// Wait for the Virtual Machine to be ready  	controller.PollVMStatus ("ReadyRole"' 5' s => {  		Console.WriteLine ("Waiting... Current status: " + s);  	});  	Console.WriteLine ("...Complete. You can now log on the Virtual Machine.");  	Console.WriteLine ("4. Shut down the Virtual Machine and deallocate resources");  	ConsoleContinuePrompt ("Shutdown the VM");  	// Shutdown the Virtual Machine  	await controller.StopVirtualMachine (true);  	// Wait for the Virtual Machine to be stopped  	controller.PollVMStatus ("StoppedDeallocated"' 5' s => {  		Console.WriteLine ("Waiting... Current status: " + s);  	});  	Console.WriteLine ("...Complete.");  	Console.WriteLine ("5. Start the Virtual Machine again");  	ConsoleContinuePrompt ("Start the VM");  	// Shutdown the Virtual Machine  	await controller.StartVirtualMachine ();  	// Wait for the Virtual Machine to be ready  	controller.PollVMStatus ("ReadyRole"' 5' s => {  		Console.WriteLine ("Waiting... Current status: " + s);  	});  	Console.WriteLine ("...Complete. You can now log back on the Virtual Machine.");  	Console.WriteLine ("6. Delete Virtual Machine");  	ConsoleContinuePrompt ("Delete the VM");  	// Delete the Virtual Machine  	await controller.DeleteVirtualMachine ();  	// Wait for the disk to disappear  	controller.PollVHDBlob (5' () => {  		Console.WriteLine ("Waiting...");  	});  	Console.WriteLine ("...Complete");  	Console.WriteLine ("7. Delete Storage Account {0}"' managementControllerParameters.StorageAccountName);  	ConsoleContinuePrompt ("Delete the Storage Account");  	// Delete the Storage Account  	await controller.DeleteStorageAccount ();  	Console.WriteLine ("...Complete");  }  
Magic Number,DeployManageVirtualMachines,Program,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\Program.cs,SetupAndTearDownVirtualMachine,The following statement contains a magic number: using (VMManagementController controller = new VMManagementController (managementControllerParameters)) {  	// Retrieve a list of available images and display a choice of Windows images  	Console.WriteLine ("Please choose an OS image to use:");  	var images = await controller.GetImagesList ();  	var windowsImages = images.Where (i => i.OperatingSystemType == "Windows" && i.PublisherName == "Microsoft Windows Server Group");  	for (int i = 0; i < windowsImages.Count (); i++) {  		Console.WriteLine (i + 1 + ". " + windowsImages.ElementAt (i).Label);  	}  	var imageId = Console.ReadLine ();  	// Keep a reference to the chosen image  	var imageToGet = windowsImages.ElementAt (int.Parse (imageId) - 1);  	// Start the steps to create the VM  	Console.WriteLine ("1. Creating Storage Account named {0} in Region {1}..."' managementControllerParameters.StorageAccountName' managementControllerParameters.Region);  	// Create the Storage Account  	await controller.CreateStorageAccount ();  	Console.WriteLine ("...Complete");  	Console.WriteLine ("2. Creating a Cloud Service named {0} in Region {1}"' managementControllerParameters.CloudServiceName' managementControllerParameters.Region);  	ConsoleContinuePrompt ("Create the Cloud Service");  	// Create the Cloud Service  	await controller.CreateCloudService ();  	Console.WriteLine ("...Complete");  	Console.WriteLine ("3. Create the Virtual Machine");  	ConsoleContinuePrompt ("Create the VM");  	// Create the Virtual Machine  	await controller.CreateVirtualMachine (imageToGet.Name);  	// Wait for the Virtual Machine to be ready  	controller.PollVMStatus ("ReadyRole"' 5' s => {  		Console.WriteLine ("Waiting... Current status: " + s);  	});  	Console.WriteLine ("...Complete. You can now log on the Virtual Machine.");  	Console.WriteLine ("4. Shut down the Virtual Machine and deallocate resources");  	ConsoleContinuePrompt ("Shutdown the VM");  	// Shutdown the Virtual Machine  	await controller.StopVirtualMachine (true);  	// Wait for the Virtual Machine to be stopped  	controller.PollVMStatus ("StoppedDeallocated"' 5' s => {  		Console.WriteLine ("Waiting... Current status: " + s);  	});  	Console.WriteLine ("...Complete.");  	Console.WriteLine ("5. Start the Virtual Machine again");  	ConsoleContinuePrompt ("Start the VM");  	// Shutdown the Virtual Machine  	await controller.StartVirtualMachine ();  	// Wait for the Virtual Machine to be ready  	controller.PollVMStatus ("ReadyRole"' 5' s => {  		Console.WriteLine ("Waiting... Current status: " + s);  	});  	Console.WriteLine ("...Complete. You can now log back on the Virtual Machine.");  	Console.WriteLine ("6. Delete Virtual Machine");  	ConsoleContinuePrompt ("Delete the VM");  	// Delete the Virtual Machine  	await controller.DeleteVirtualMachine ();  	// Wait for the disk to disappear  	controller.PollVHDBlob (5' () => {  		Console.WriteLine ("Waiting...");  	});  	Console.WriteLine ("...Complete");  	Console.WriteLine ("7. Delete Storage Account {0}"' managementControllerParameters.StorageAccountName);  	ConsoleContinuePrompt ("Delete the Storage Account");  	// Delete the Storage Account  	await controller.DeleteStorageAccount ();  	Console.WriteLine ("...Complete");  }  
Magic Number,DeployManageVirtualMachines,Program,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\Program.cs,SetupAndTearDownVirtualMachine,The following statement contains a magic number: using (VMManagementController controller = new VMManagementController (managementControllerParameters)) {  	// Retrieve a list of available images and display a choice of Windows images  	Console.WriteLine ("Please choose an OS image to use:");  	var images = await controller.GetImagesList ();  	var windowsImages = images.Where (i => i.OperatingSystemType == "Windows" && i.PublisherName == "Microsoft Windows Server Group");  	for (int i = 0; i < windowsImages.Count (); i++) {  		Console.WriteLine (i + 1 + ". " + windowsImages.ElementAt (i).Label);  	}  	var imageId = Console.ReadLine ();  	// Keep a reference to the chosen image  	var imageToGet = windowsImages.ElementAt (int.Parse (imageId) - 1);  	// Start the steps to create the VM  	Console.WriteLine ("1. Creating Storage Account named {0} in Region {1}..."' managementControllerParameters.StorageAccountName' managementControllerParameters.Region);  	// Create the Storage Account  	await controller.CreateStorageAccount ();  	Console.WriteLine ("...Complete");  	Console.WriteLine ("2. Creating a Cloud Service named {0} in Region {1}"' managementControllerParameters.CloudServiceName' managementControllerParameters.Region);  	ConsoleContinuePrompt ("Create the Cloud Service");  	// Create the Cloud Service  	await controller.CreateCloudService ();  	Console.WriteLine ("...Complete");  	Console.WriteLine ("3. Create the Virtual Machine");  	ConsoleContinuePrompt ("Create the VM");  	// Create the Virtual Machine  	await controller.CreateVirtualMachine (imageToGet.Name);  	// Wait for the Virtual Machine to be ready  	controller.PollVMStatus ("ReadyRole"' 5' s => {  		Console.WriteLine ("Waiting... Current status: " + s);  	});  	Console.WriteLine ("...Complete. You can now log on the Virtual Machine.");  	Console.WriteLine ("4. Shut down the Virtual Machine and deallocate resources");  	ConsoleContinuePrompt ("Shutdown the VM");  	// Shutdown the Virtual Machine  	await controller.StopVirtualMachine (true);  	// Wait for the Virtual Machine to be stopped  	controller.PollVMStatus ("StoppedDeallocated"' 5' s => {  		Console.WriteLine ("Waiting... Current status: " + s);  	});  	Console.WriteLine ("...Complete.");  	Console.WriteLine ("5. Start the Virtual Machine again");  	ConsoleContinuePrompt ("Start the VM");  	// Shutdown the Virtual Machine  	await controller.StartVirtualMachine ();  	// Wait for the Virtual Machine to be ready  	controller.PollVMStatus ("ReadyRole"' 5' s => {  		Console.WriteLine ("Waiting... Current status: " + s);  	});  	Console.WriteLine ("...Complete. You can now log back on the Virtual Machine.");  	Console.WriteLine ("6. Delete Virtual Machine");  	ConsoleContinuePrompt ("Delete the VM");  	// Delete the Virtual Machine  	await controller.DeleteVirtualMachine ();  	// Wait for the disk to disappear  	controller.PollVHDBlob (5' () => {  		Console.WriteLine ("Waiting...");  	});  	Console.WriteLine ("...Complete");  	Console.WriteLine ("7. Delete Storage Account {0}"' managementControllerParameters.StorageAccountName);  	ConsoleContinuePrompt ("Delete the Storage Account");  	// Delete the Storage Account  	await controller.DeleteStorageAccount ();  	Console.WriteLine ("...Complete");  }  
Magic Number,DeployManageVirtualMachines,Program,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\Program.cs,SetupAndTearDownVirtualMachine,The following statement contains a magic number: using (VMManagementController controller = new VMManagementController (managementControllerParameters)) {  	// Retrieve a list of available images and display a choice of Windows images  	Console.WriteLine ("Please choose an OS image to use:");  	var images = await controller.GetImagesList ();  	var windowsImages = images.Where (i => i.OperatingSystemType == "Windows" && i.PublisherName == "Microsoft Windows Server Group");  	for (int i = 0; i < windowsImages.Count (); i++) {  		Console.WriteLine (i + 1 + ". " + windowsImages.ElementAt (i).Label);  	}  	var imageId = Console.ReadLine ();  	// Keep a reference to the chosen image  	var imageToGet = windowsImages.ElementAt (int.Parse (imageId) - 1);  	// Start the steps to create the VM  	Console.WriteLine ("1. Creating Storage Account named {0} in Region {1}..."' managementControllerParameters.StorageAccountName' managementControllerParameters.Region);  	// Create the Storage Account  	await controller.CreateStorageAccount ();  	Console.WriteLine ("...Complete");  	Console.WriteLine ("2. Creating a Cloud Service named {0} in Region {1}"' managementControllerParameters.CloudServiceName' managementControllerParameters.Region);  	ConsoleContinuePrompt ("Create the Cloud Service");  	// Create the Cloud Service  	await controller.CreateCloudService ();  	Console.WriteLine ("...Complete");  	Console.WriteLine ("3. Create the Virtual Machine");  	ConsoleContinuePrompt ("Create the VM");  	// Create the Virtual Machine  	await controller.CreateVirtualMachine (imageToGet.Name);  	// Wait for the Virtual Machine to be ready  	controller.PollVMStatus ("ReadyRole"' 5' s => {  		Console.WriteLine ("Waiting... Current status: " + s);  	});  	Console.WriteLine ("...Complete. You can now log on the Virtual Machine.");  	Console.WriteLine ("4. Shut down the Virtual Machine and deallocate resources");  	ConsoleContinuePrompt ("Shutdown the VM");  	// Shutdown the Virtual Machine  	await controller.StopVirtualMachine (true);  	// Wait for the Virtual Machine to be stopped  	controller.PollVMStatus ("StoppedDeallocated"' 5' s => {  		Console.WriteLine ("Waiting... Current status: " + s);  	});  	Console.WriteLine ("...Complete.");  	Console.WriteLine ("5. Start the Virtual Machine again");  	ConsoleContinuePrompt ("Start the VM");  	// Shutdown the Virtual Machine  	await controller.StartVirtualMachine ();  	// Wait for the Virtual Machine to be ready  	controller.PollVMStatus ("ReadyRole"' 5' s => {  		Console.WriteLine ("Waiting... Current status: " + s);  	});  	Console.WriteLine ("...Complete. You can now log back on the Virtual Machine.");  	Console.WriteLine ("6. Delete Virtual Machine");  	ConsoleContinuePrompt ("Delete the VM");  	// Delete the Virtual Machine  	await controller.DeleteVirtualMachine ();  	// Wait for the disk to disappear  	controller.PollVHDBlob (5' () => {  		Console.WriteLine ("Waiting...");  	});  	Console.WriteLine ("...Complete");  	Console.WriteLine ("7. Delete Storage Account {0}"' managementControllerParameters.StorageAccountName);  	ConsoleContinuePrompt ("Delete the Storage Account");  	// Delete the Storage Account  	await controller.DeleteStorageAccount ();  	Console.WriteLine ("...Complete");  }  
Magic Number,DeployManageVirtualMachines,Program,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\Program.cs,SetupAndTearDownVirtualMachine,The following statement contains a magic number: controller.PollVMStatus ("ReadyRole"' 5' s => {  	Console.WriteLine ("Waiting... Current status: " + s);  });  
Magic Number,DeployManageVirtualMachines,Program,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\Program.cs,SetupAndTearDownVirtualMachine,The following statement contains a magic number: controller.PollVMStatus ("StoppedDeallocated"' 5' s => {  	Console.WriteLine ("Waiting... Current status: " + s);  });  
Magic Number,DeployManageVirtualMachines,Program,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\Program.cs,SetupAndTearDownVirtualMachine,The following statement contains a magic number: controller.PollVMStatus ("ReadyRole"' 5' s => {  	Console.WriteLine ("Waiting... Current status: " + s);  });  
Magic Number,DeployManageVirtualMachines,Program,F:\newReposMay17\Azure_AzureQuickStartsProjects\Compute\DeployManageVirtualMachines\Program.cs,SetupAndTearDownVirtualMachine,The following statement contains a magic number: controller.PollVHDBlob (5' () => {  	Console.WriteLine ("Waiting...");  });  
