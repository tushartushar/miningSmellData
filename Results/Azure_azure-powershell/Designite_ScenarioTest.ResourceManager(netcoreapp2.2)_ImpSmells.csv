Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.WindowsAzure.Commands.ScenarioTest,EnvironmentSetupHelper,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\EnvironmentSetupHelper.cs,SetEnvironmentVariableFromCredentialFile,Cyclomatic complexity of the method is 17
Complex Method,Microsoft.WindowsAzure.Commands.ScenarioTest,PermissiveRecordMatcherWithResourceApiExclusion,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\PermissiveRecordMatcherWithResourceApiExlcusion.cs,ContainsIgnoredProvider,Cyclomatic complexity of the method is 13
Long Parameter List,Microsoft.WindowsAzure.Commands.ScenarioTest,PermissiveRecordMatcherWithResourceApiExclusion,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\PermissiveRecordMatcherWithResourceApiExlcusion.cs,ContainsIgnoredProvider,The method has 5 parameters. Parameters: requestUri' shouldIgnoreGenericResource' providersToIgnore' resourcesToIgnore' apiVersion
Long Parameter List,Microsoft.WindowsAzure.Commands.Common.Test.Mocks,MockCertificateAuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Mocks\MockCertificateAuthenticationFactory.cs,Authenticate,The method has 8 parameters. Parameters: account' environment' tenant' password' promptBehavior' promptAction' tokenCache' resourceId
Long Parameter List,Microsoft.WindowsAzure.Commands.Common.Test.Mocks,MockCertificateAuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Mocks\MockCertificateAuthenticationFactory.cs,Authenticate,The method has 7 parameters. Parameters: account' environment' tenant' password' promptBehavior' promptAction' resourceId
Long Parameter List,Microsoft.WindowsAzure.Commands.Common.Test.Mocks,MockPSHostUI,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Mocks\MockCommandRuntime.cs,PromptForCredential,The method has 6 parameters. Parameters: caption' message' userName' targetName' allowedCredentialTypes' options
Long Parameter List,Microsoft.WindowsAzure.Commands.Common.Test.Mocks,MockTokenAuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Mocks\MockTokenAuthenticationFactory.cs,Authenticate,The method has 8 parameters. Parameters: account' environment' tenant' password' promptBehavior' promptActionr' tokenCache' resourceId
Long Parameter List,Microsoft.WindowsAzure.Commands.Common.Test.Mocks,MockTokenAuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Mocks\MockTokenAuthenticationFactory.cs,Authenticate,The method has 7 parameters. Parameters: account' environment' tenant' password' promptBehavior' promptAction' resourceId
Long Parameter List,Microsoft.WindowsAzure.Commands.Test.Utilities.Common,MockAccessTokenProvider,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Mocks\MockAccessTokenProvider.cs,GetAccessToken,The method has 6 parameters. Parameters: config' promptBehavior' promptAction' userId' password' credentialType
Long Statement,Microsoft.WindowsAzure.Commands.ScenarioTest,EnvironmentSetupHelper,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\EnvironmentSetupHelper.cs,GetModuleManifest,The length of the statement  "            return Path.Combine(baseDirectory' desktopModuleName.Replace("AzureRM"' "Az")' $"{desktopModuleName.Replace("AzureRM"' "Az")}.psd1"); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.ScenarioTest,EnvironmentSetupHelper,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\EnvironmentSetupHelper.cs,GetRMModulePath,The length of the statement  "                throw new InvalidOperationException("No ResourceManager Modules Directory found in build. Please build the modules before running tests."); " is 139.
Long Statement,Microsoft.WindowsAzure.Commands.ScenarioTest,EnvironmentSetupHelper,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\EnvironmentSetupHelper.cs,GetStackRMModulePath,The length of the statement  "                throw new InvalidOperationException("No ResourceManager Modules Directory for Azure Stack found in build. Please build the modules before running tests."); " is 155.
Long Statement,Microsoft.WindowsAzure.Commands.ScenarioTest,EnvironmentSetupHelper,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\EnvironmentSetupHelper.cs,SetEnvironmentVariableFromCredentialFile,The length of the statement  "            var filePath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile)' ".azure"' "testcredentials.json"); " is 128.
Long Statement,Microsoft.WindowsAzure.Commands.ScenarioTest,EnvironmentSetupHelper,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\EnvironmentSetupHelper.cs,SetEnvironmentVariableFromCredentialFile,The length of the statement  "                formattedConnectionString.AppendFormat("SubscriptionId={0};HttpRecorderMode={1};Environment={2}"' credentials["SubscriptionId"]' credentials["HttpRecorderMode"]' credentials["Environment"]); " is 190.
Long Statement,Microsoft.WindowsAzure.Commands.ScenarioTest,EnvironmentSetupHelper,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\EnvironmentSetupHelper.cs,SetEnvironmentVariableFromCredentialFile,The length of the statement  "                    formattedConnectionString.AppendFormat(";DataLakeAnalyticsJobAndCatalogServiceUri={0}"' credentials["DataLakeAnalyticsJobAndCatalogServiceUri"]); " is 145.
Long Statement,Microsoft.WindowsAzure.Commands.ScenarioTest,EnvironmentSetupHelper,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\EnvironmentSetupHelper.cs,SetupAzureEnvironmentFromEnvironmentVariables,The length of the statement  "            environment.AzureDataLakeAnalyticsCatalogAndJobEndpointSuffix = currentEnvironment.Endpoints.DataLakeAnalyticsJobAndCatalogServiceUri.OriginalString.Replace("https://"' ""); // because it is just a sufix " is 203.
Long Statement,Microsoft.WindowsAzure.Commands.ScenarioTest,EnvironmentSetupHelper,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\EnvironmentSetupHelper.cs,SetupAzureEnvironmentFromEnvironmentVariables,The length of the statement  "            environment.AzureDataLakeStoreFileSystemEndpointSuffix = currentEnvironment.Endpoints.DataLakeStoreServiceUri.OriginalString.Replace("https://"' ""); // because it is just a sufix " is 179.
Long Statement,Microsoft.WindowsAzure.Commands.ScenarioTest,EnvironmentSetupHelper,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\EnvironmentSetupHelper.cs,SetupAzureEnvironmentFromEnvironmentVariables,The length of the statement  "                AzureRmProfileProvider.Instance.Profile.DefaultContext = new AzureContext(testSubscription' testAccount' environment' testTenant); " is 130.
Long Statement,Microsoft.WindowsAzure.Commands.ScenarioTest,EnvironmentSetupHelper,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\EnvironmentSetupHelper.cs,RunPowerShellTest,The length of the statement  "                            $"Test failed due to a non-empty error stream. First error: {PowerShellExtensions.FormatErrorRecord(powershell.Streams.Error[0])}{(powershell.Streams.Error.Count > 0 ? "Check the error stream in the test log for additional errors." : "")}"); " is 241.
Long Statement,Microsoft.WindowsAzure.Commands.ScenarioTest,EnvironmentSetupHelper,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\EnvironmentSetupHelper.cs,SetupPowerShellModules,The length of the statement  "                    var moduleShortName = moduleName.Split(new string[] { "\\" }' StringSplitOptions.None).Last().Split(new string[] { "/" }' StringSplitOptions.None).Last(); " is 154.
Long Statement,Microsoft.WindowsAzure.Commands.ScenarioTest,EnvironmentSetupHelper,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\EnvironmentSetupHelper.cs,SetupPowerShellModules,The length of the statement  "                        powershell.AddScript("Get-Alias | Where-Object {$_.Name -like '*-AzureRmStorage*'} | ForEach-Object { Remove-Item \"alias:\\$_\" }"); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.ScenarioTest,PermissiveRecordMatcherWithResourceApiExclusion,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\PermissiveRecordMatcherWithResourceApiExlcusion.cs,ContainsIgnoredProvider,The length of the statement  "            return ContainsIgnoredProvider(requestUri' _ignoreGenericResource' _providersToIgnore' _resourcesToIgnore' apiVersion: out version); " is 132.
Long Statement,Microsoft.WindowsAzure.Commands.ScenarioTest,PermissiveRecordMatcherWithResourceApiExclusion,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\PermissiveRecordMatcherWithResourceApiExlcusion.cs,ContainsIgnoredProvider,The length of the statement  "                    var regex = new Regex(@"\/subscriptions\/[0-9A-Fa-f-]*\/resourceGroups\/[a-zA-Z0-9_-]*\/providers\/[a-zA-Z0-9_-]*.[a-zA-Z0-9_-]*\/.*[?api-version=[0-9-]*]?"); " is 158.
Long Statement,Microsoft.WindowsAzure.Commands.ScenarioTest,PermissiveRecordMatcherWithResourceApiExclusion,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\PermissiveRecordMatcherWithResourceApiExlcusion.cs,ContainsIgnoredProvider,The length of the statement  "                    regex = new Regex(@"\/subscriptions\/[0-9A-Fa-f-]*\/providers\/[a-zA-Z0-9_-]*.[a-zA-Z0-9_-]*\/.*?[api-version=[0-9-]*]?"); " is 122.
Long Statement,Microsoft.Azure.Commands.ScenarioTest.Extensions,TestModelExtensions,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Extensions\TestModelExtensions.cs,IsEqual,The length of the statement  "            bool result = (cache == null && other == null) || (cache != null && cache.CacheData == null && other != null && other.CacheData == null); " is 137.
Long Statement,Microsoft.Azure.Commands.ScenarioTest.Extensions,TestModelExtensions,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Extensions\TestModelExtensions.cs,IsEqual,The length of the statement  "            if (cache != null && other != null && cache.CacheData != null && other.CacheData != null && cache.CacheData.Length == other.CacheData.Length) " is 141.
Long Statement,Microsoft.WindowsAzure.Commands.Common.Test.Mocks,MockCertificateAuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Mocks\MockCertificateAuthenticationFactory.cs,Authenticate,The length of the statement  "            return Authenticate(account' environment' tenant' password' promptBehavior' promptAction' AzureSession.Instance.TokenCache' resourceId); " is 136.
Long Statement,Microsoft.WindowsAzure.Commands.Common.Test.Mocks,MockClientFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Mocks\MockClientFactory.cs,CreateClient,The length of the statement  "                throw new ArgumentException(Microsoft.Azure.Commands.ResourceManager.Common.Properties.Resources.InvalidDefaultSubscription); " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.Common.Test.Mocks,MockClientFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Mocks\MockClientFactory.cs,CreateClient,The length of the statement  "            Uri endpointUri = profile.Environments.FirstOrDefault((e) => e.Name.Equals(subscription.GetEnvironment()' StringComparison.OrdinalIgnoreCase)).GetEndpointAsUri(endpoint); " is 170.
Long Statement,Microsoft.WindowsAzure.Commands.Common.Test.Mocks,MockClientFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Mocks\MockClientFactory.cs,CreateCustomClient,The length of the statement  "                    var initialTimeoutPropInfo = typeof(TClient).GetProperty("LongRunningOperationInitialTimeout"' BindingFlags.Public | BindingFlags.Instance); " is 140.
Long Statement,Microsoft.WindowsAzure.Commands.Common.Test.Mocks,MockClientFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Mocks\MockClientFactory.cs,CreateCustomClient,The length of the statement  "                    var retryTimeoutPropInfo = typeof(TClient).GetProperty("LongRunningOperationRetryTimeout"' BindingFlags.Public | BindingFlags.Instance); " is 136.
Long Statement,Microsoft.WindowsAzure.Commands.Common.Test.Mocks,MockTokenAuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Mocks\MockTokenAuthenticationFactory.cs,Authenticate,The length of the statement  "            return Authenticate(account' environment' tenant' password' promptBehavior' promptAction' AzureSession.Instance.TokenCache' resourceId); " is 136.
Complex Conditional,Microsoft.WindowsAzure.Commands.ScenarioTest,PermissiveRecordMatcherWithApiExclusion,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\PermissiveRecordMatcherWithApiExclusion.cs,ContainsIgnoredProvider,The conditional expression  "_ignoreGenericResource &&                  !requestUri.Contains("providers/") &&                  !requestUri.StartsWith("/certificates?"' StringComparison.InvariantCultureIgnoreCase) &&                  !requestUri.StartsWith("/pools"' StringComparison.InvariantCultureIgnoreCase) &&                  !requestUri.StartsWith("/jobs"' StringComparison.InvariantCultureIgnoreCase) &&                  !requestUri.StartsWith("/jobschedules"' StringComparison.InvariantCultureIgnoreCase) &&                  !requestUri.Contains("/applications?") &&                  !requestUri.Contains("/servicePrincipals?") &&                  !requestUri.StartsWith("/webhdfs/v1/?aclspec"' StringComparison.InvariantCultureIgnoreCase)"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.ScenarioTest,PermissiveRecordMatcherWithResourceApiExclusion,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\PermissiveRecordMatcherWithResourceApiExlcusion.cs,ContainsIgnoredProvider,The conditional expression  "shouldIgnoreGenericResource &&                  !requestUri.Contains("providers/") &&                  !requestUri.StartsWith("/certificates?"' StringComparison.InvariantCultureIgnoreCase) &&                  !requestUri.StartsWith("/pools"' StringComparison.InvariantCultureIgnoreCase) &&                  !requestUri.StartsWith("/jobs"' StringComparison.InvariantCultureIgnoreCase) &&                  !requestUri.StartsWith("/jobschedules"' StringComparison.InvariantCultureIgnoreCase) &&                  !requestUri.Contains("/applications?") &&                  !requestUri.Contains("/servicePrincipals?") &&                  !requestUri.StartsWith("/webhdfs/v1/?aclspec"' StringComparison.InvariantCultureIgnoreCase)"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.ScenarioTest,PowerShellExtensions,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\PowerShellExtensions.cs,LogPowerShellResults,The conditional expression  "xunitLogger != null &&                  powershell.Commands != null &&                  powershell.Commands.Commands != null &&                  powershell.Commands.Commands.Count > 0"  is complex.
Complex Conditional,Microsoft.Azure.Commands.ScenarioTest.Extensions,TestModelExtensions,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Extensions\TestModelExtensions.cs,IsEqual,The conditional expression  "cache != null && other != null && cache.CacheData != null && other.CacheData != null && cache.CacheData.Length == other.CacheData.Length"  is complex.
Empty Catch Block,Microsoft.WindowsAzure.Commands.ScenarioTest,PowerShellExtensions,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\PowerShellExtensions.cs,GetPowerShellCollection,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceManagement.Common.Models,XunitTracingInterceptor,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\XunitTracingInterceptor.cs,Write,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceManagement.Common.Models,XunitTracingInterceptor,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\XunitTracingInterceptor.cs,RemoveFromContext,The method has an empty catch block.
Magic Number,Microsoft.WindowsAzure.Commands.ScenarioTest,EnvironmentSetupHelper,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\EnvironmentSetupHelper.cs,SetupPowerShellModules,The following statement contains a magic number: powershell.AddScript("Enable-AzureRmAlias -Module " + moduleShortName.Substring(0' moduleShortName.Length - 5));
Magic Number,Microsoft.WindowsAzure.Commands.ScenarioTest,PermissiveRecordMatcherWithResourceApiExclusion,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\PermissiveRecordMatcherWithResourceApiExlcusion.cs,ContainsIgnoredProvider,The following statement contains a magic number: segments.Length > 7
Magic Number,Microsoft.WindowsAzure.Commands.ScenarioTest,PermissiveRecordMatcherWithResourceApiExclusion,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\PermissiveRecordMatcherWithResourceApiExlcusion.cs,ContainsIgnoredProvider,The following statement contains a magic number: var resourceType = $"{segments[3]}/{segments[4]}";
Magic Number,Microsoft.WindowsAzure.Commands.ScenarioTest,PermissiveRecordMatcherWithResourceApiExclusion,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\PermissiveRecordMatcherWithResourceApiExlcusion.cs,ContainsIgnoredProvider,The following statement contains a magic number: var resourceType = $"{segments[3]}/{segments[4]}";
Magic Number,Microsoft.WindowsAzure.Commands.Common.Test.Mocks,MockClientFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Mocks\MockClientFactory.cs,CreateHttpClient,The following statement contains a magic number: HttpClient client = new HttpClient(mockHandler)              {                  BaseAddress = new Uri(serviceUrl)'                  MaxResponseContentBufferSize = 30 * 1024 * 1024              };
Magic Number,Microsoft.WindowsAzure.Commands.Common.Test.Mocks,MockClientFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Mocks\MockClientFactory.cs,CreateHttpClient,The following statement contains a magic number: HttpClient client = new HttpClient(mockHandler)              {                  BaseAddress = new Uri(serviceUrl)'                  MaxResponseContentBufferSize = 30 * 1024 * 1024              };
Magic Number,Microsoft.WindowsAzure.Commands.Common.Test.Mocks,MockClientFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\tools\ScenarioTest.ResourceManager\Mocks\MockClientFactory.cs,CreateHttpClient,The following statement contains a magic number: HttpClient client = new HttpClient(mockHandler)              {                  BaseAddress = new Uri(serviceUrl)'                  MaxResponseContentBufferSize = 30 * 1024 * 1024              };
