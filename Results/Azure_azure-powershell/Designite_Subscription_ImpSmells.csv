Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Microsoft.Azure.Commands.Subscription.Cmdlets,NewAzureRmSubscription,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Subscription\Subscription\Cmdlets\NewAzureRmSubscription.cs,ExecuteCmdlet,The length of the statement  "                var owners = this.ResolveObjectIds(this.OwnerObjectId' this.OwnerApplicationId' this.OwnerSignInName).Select(id => new AdPrincipal() { ObjectId = id }).ToArray(); " is 162.
Long Statement,Microsoft.Azure.Commands.Subscription.Cmdlets,NewAzureRmSubscription,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Subscription\Subscription\Cmdlets\NewAzureRmSubscription.cs,ExecuteCmdlet,The length of the statement  "                var result = this.SubscriptionClient.SubscriptionFactory.CreateSubscriptionInEnrollmentAccount(EnrollmentAccountObjectId' new SubscriptionCreationParameters() " is 158.
Empty Catch Block,Microsoft.Azure.Commands.Subscription.Models,PSAzureSubscription,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Subscription\Subscription\Models\PSAzureSubscription.cs,GetAccountName,The method has an empty catch block.
Magic Number,Microsoft.Azure.Commands.Subscription.Cmdlets,NewAzureRmSubscription,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Subscription\Subscription\Cmdlets\NewAzureRmSubscription.cs,ExecuteCmdlet,The following statement contains a magic number: var createdSubscription = new AzureSubscription()                  {                      // SubscriptionLink format is: "/subscriptions/{subscriptionid}"                      Id = result.SubscriptionLink.Split('/')[2]'                      Name = this.Name'                      // By definition' a new subscription is always in the enabled state.                      State = "Enabled"'                  };
Magic Number,Microsoft.Azure.Commands.Subscription.Models,PSAzureSubscription,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Subscription\Subscription\Models\PSAzureSubscription.cs,GetAccountName,The following statement contains a magic number: var sides = pair.Split(new char[] { '=' }' 2' StringSplitOptions.RemoveEmptyEntries);
