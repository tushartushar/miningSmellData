Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,NewAzureStorSimpleDeviceVolumeContainer,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DataContainer\NewAzureStorSimpleDeviceVolumeContainer.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleDeviceVolume,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Volume\SetAzureStorSimpleDeviceVolume.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,UpdateDeviceDetailsWithNetworkConfig,Cyclomatic complexity of the method is 10
Long Parameter List,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,GetAllBackups,The method has 8 parameters. Parameters: deviceId' filterType' isAllSelected' filterValue' startDateTime' endDateTime' skip' top
Long Parameter List,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,GetDeviceJobs,The method has 8 parameters. Parameters: deviceId' jobType' jobStatus' jobId' startTime' endTime' skip' top
Long Parameter List,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,UpdateDeviceDetails,The method has 5 parameters. Parameters: deviceDetails' newName' timeZone' secondaryDnsServer' networkConfigs
Long Parameter List,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,UpdateDeviceDetailsObject,The method has 5 parameters. Parameters: deviceDetails' newName' timeZone' secondaryDnsServer' networkConfigs
Long Parameter List,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,UpdateVirtualDeviceDetails,The method has 7 parameters. Parameters: details' timeZone' sek' adminPasswd' snapshotPasswd' cik' cryptoManager
Long Parameter List,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleResourceContext,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StorSimpleContextClient.cs,StorSimpleResourceContext,The method has 7 parameters. Parameters: resourceId' resourceName' stampId' cloudServiceName' resourceProviderNameSpace' resourceType' keyManager
Long Parameter List,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleCmdletBase,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\StorSimpleCmdletBase.cs,ValidateAndEncryptStorageCred,The method has 5 parameters. Parameters: name' key' endpoint' encryptedKey' thumbprint
Long Identifier,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,StartAzureStorSimpleDeviceFailoverJob,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Failover\StartAzureStorSimpleDeviceFailoverJob.cs,ExecuteCmdlet,The length of the parameter sourceDeviceIdentifierInMessage is 31.
Long Identifier,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,StartAzureStorSimpleDeviceFailoverJob,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Failover\StartAzureStorSimpleDeviceFailoverJob.cs,ExecuteCmdlet,The length of the parameter targetDeviceIdentifierInMessage is 31.
Long Identifier,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleLegacyVolumeContainerStatus,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Migration\GetAzureStorSimpleLegacyVolumeContainerStatus.cs,ExecuteCmdlet,The length of the parameter migrationDataContainerStatusList is 32.
Long Identifier,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,UpdateVirtualDeviceDetails,The length of the parameter encryptedSnapshotManagerPasswd is 30.
Long Identifier,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,CreateVirtualDevice,The length of the parameter virtualApplianceProvisioningInfo is 32.
Long Identifier,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleCmdletBase,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\StorSimpleCmdletBase.cs,,The length of the parameter verifyResourceBeforeCmdletExecute is 33.
Long Identifier,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleCmdletHelpMessage,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\StorSimpleCmdletHelpMessage.cs,,The length of the parameter DataContainerEncryptionEnabled is 30.
Long Identifier,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleCmdletHelpMessage,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\StorSimpleCmdletHelpMessage.cs,,The length of the parameter BackupScheduleBaseObjsToUpdate is 30.
Long Identifier,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleCmdletHelpMessage,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\StorSimpleCmdletHelpMessage.cs,,The length of the parameter BackupScheduleBaseObjsToDelete is 30.
Long Identifier,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleCmdletHelpMessage,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\StorSimpleCmdletHelpMessage.cs,,The length of the parameter StorageAccountNameForVirtualDevice is 34.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleDeviceBackupPolicy,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\BackupPolicy\GetAzureStorSimpleDeviceBackupPolicy.cs,ExecuteCmdlet,The length of the statement  "                    WriteVerbose(string.Format(Resources.BackupPolicyGet_StatusMessage' backupPolicyList.BackupPolicies.Count' backupPolicyList.BackupPolicies.Count > 1 ? "ies" : "y")); " is 165.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleDeviceBackupPolicy,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\BackupPolicy\GetAzureStorSimpleDeviceBackupPolicy.cs,ProcessParameters,The length of the statement  "                throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,NewAzureStorSimpleDeviceBackupPolicy,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\BackupPolicy\NewAzureStorSimpleDeviceBackupPolicy.cs,ProcessParameters,The length of the statement  "                throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,RemoveAzureStorSimpleDeviceBackupPolicy,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\BackupPolicy\RemoveAzureStorSimpleDeviceBackupPolicy.cs,ProcessParameters,The length of the statement  "                throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleDeviceBackupPolicy,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\BackupPolicy\SetAzureStorSimpleDeviceBackupPolicy.cs,ProcessParameters,The length of the statement  "                throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleDeviceBackup,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\BackupSet\GetAzureStorSimpleDeviceBackup.cs,ProcessParameters,The length of the statement  "                throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,RemoveAzureStorSimpleDeviceBackup,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\BackupSet\RemoveAzureStorSimpleDeviceBackup.cs,ProcessParameters,The length of the statement  "                throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,StartAzureStorSimpleBackupCloneJob,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Clone\StartAzureStorSimpleBackupCloneJob.cs,ProcessParameters,The length of the statement  "                        throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' SourceDeviceName)); " is 148.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,StartAzureStorSimpleBackupCloneJob,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Clone\StartAzureStorSimpleBackupCloneJob.cs,ProcessParameters,The length of the statement  "                        throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' TargetDeviceName)); " is 148.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,StartAzureStorSimpleDeviceBackupJob,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\BackupSet\StartAzureStorSimpleDeviceBackupJob.cs,ProcessParameters,The length of the statement  "                throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,StartAzureStorSimpleDeviceBackupRestoreJob,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\BackupSet\StartAzureStorSimpleDeviceBackupRestoreJob.cs,ProcessParameters,The length of the statement  "                throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleDeviceVolumeContainer,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DataContainer\GetAzureStorSimpleDeviceVolumeContainer.cs,ExecuteCmdlet,The length of the statement  "                    throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleDeviceVolumeContainer,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DataContainer\GetAzureStorSimpleDeviceVolumeContainer.cs,ExecuteCmdlet,The length of the statement  "                    WriteVerbose(string.Format(Resources.ReturnedCountDataContainerMessage' dataContainerList.DataContainers.Count' dataContainerList.DataContainers.Count > 1 ? "s" : string.Empty)); " is 178.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,NewAzureStorSimpleDeviceVolumeContainer,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DataContainer\NewAzureStorSimpleDeviceVolumeContainer.cs,ExecuteCmdlet,The length of the statement  "                    throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,RemoveAzureStorSimpleDeviceVolumeContainer,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DataContainer\RemoveAzureStorSimpleDeviceVolumeContainer.cs,ExecuteCmdlet,The length of the statement  "                                      throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleVirtualDevice,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DeviceDetails\SetAzureStorSimpleVirtualDevice.cs,ExecuteCmdlet,The length of the statement  "                    throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleVirtualDevice,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DeviceDetails\SetAzureStorSimpleVirtualDevice.cs,ExecuteCmdlet,The length of the statement  "                StorSimpleClient.UpdateVirtualDeviceDetails(deviceDetails' TimeZone' SecretKey' AdministratorPassword' SnapshotManagerPassword' cik' cryptoManager); " is 148.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleVirtualDevice,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DeviceDetails\SetAzureStorSimpleVirtualDevice.cs,ExecuteCmdlet,The length of the statement  "                    WriteVerbose(string.Format(Resources.StorSimpleDeviceUpdatedSuccessfully' updatedDetails.DeviceProperties.FriendlyName' updatedDetails.DeviceProperties.DeviceId)); " is 163.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleDevice,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DeviceDetails\SetAzureStorSimpleDevice.cs,ExecuteCmdlet,The length of the statement  "                    throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenIdInResourceMessage' StorSimpleContext.ResourceName' DeviceId)); " is 138.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleDevice,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DeviceDetails\SetAzureStorSimpleDevice.cs,ExecuteCmdlet,The length of the statement  "                if (!deviceDetails.DeviceProperties.IsConfigUpdated && !ValidParamsForFirstDeviceConfiguration(StorSimpleNetworkConfig' TimeZone' SecondaryDnsServer)) " is 150.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleDevice,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DeviceDetails\SetAzureStorSimpleDevice.cs,ExecuteCmdlet,The length of the statement  "                var taskStatusInfo = StorSimpleClient.UpdateDeviceDetails(deviceDetails' this.NewName' this.TimeZone' this.secondaryDnsServer' this.StorSimpleNetworkConfig); " is 157.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleDevice,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DeviceDetails\SetAzureStorSimpleDevice.cs,ExecuteCmdlet,The length of the statement  "                    WriteVerbose(string.Format(Resources.StorSimpleDeviceUpdatedSuccessfully' updatedDetails.DeviceProperties.FriendlyName' updatedDetails.DeviceProperties.DeviceId)); " is 163.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleDevice,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DeviceDetails\SetAzureStorSimpleDevice.cs,ProcessParameters,The length of the statement  "                    throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleJob,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DeviceJobs\GetAzureStorSimpleJob.cs,ExecuteCmdlet,The length of the statement  "                var response = StorSimpleClient.GetDeviceJobs(deviceId' Type' Status' InstanceId' fromDateTimeIsoString' toDateTimeIsoString' (int)Skip' (int)First); " is 149.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleJob,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DeviceJobs\GetAzureStorSimpleJob.cs,ProcessParameters,The length of the statement  "                    throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage'StorSimpleContext.ResourceName' DeviceName)); " is 141.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleFailoverVolumeContainers,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Failover\GetAzureStorSimpleFailoverVolumeContainers.cs,ExecuteCmdlet,The length of the statement  "                            throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenIdInResourceMessage' StorSimpleContext.ResourceName' DeviceId)); " is 138.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleFailoverVolumeContainers,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Failover\GetAzureStorSimpleFailoverVolumeContainers.cs,ExecuteCmdlet,The length of the statement  "                            throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,StartAzureStorSimpleDeviceFailoverJob,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Failover\StartAzureStorSimpleDeviceFailoverJob.cs,ExecuteCmdlet,The length of the statement  "                    string.Format(Resources.StartDeviceFailoverJobWarningMessage' sourceDeviceIdentifierInMessage' targetDeviceIdentifierInMessage)' " is 128.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,StartAzureStorSimpleDeviceFailoverJob,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Failover\StartAzureStorSimpleDeviceFailoverJob.cs,ExecuteCmdlet,The length of the statement  "                    string.Format(Resources.StartDeviceFailoverJobMessage' sourceDeviceIdentifierInMessage' targetDeviceIdentifierInMessage)' " is 121.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,StartAzureStorSimpleDeviceFailoverJob,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Failover\StartAzureStorSimpleDeviceFailoverJob.cs,ExecuteCmdlet,The length of the statement  "                                    throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,StartAzureStorSimpleDeviceFailoverJob,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Failover\StartAzureStorSimpleDeviceFailoverJob.cs,ExecuteCmdlet,The length of the statement  "                                    throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' TargetDeviceName)); " is 148.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleDevice,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\GetAzureStorSimpleDevice.cs,ExecuteCmdlet,The length of the statement  "                        deviceInfos = deviceInfos.Where(x => x.FriendlyName.Equals(DeviceName' System.StringComparison.InvariantCultureIgnoreCase)); " is 124.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleDevice,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\GetAzureStorSimpleDevice.cs,ExecuteCmdlet,The length of the statement  "                    deviceInfos = deviceInfos.Where(x => x.ModelDescription.Equals(ModelID' System.StringComparison.InvariantCultureIgnoreCase)); " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleDevice,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\GetAzureStorSimpleDevice.cs,ExecuteCmdlet,The length of the statement  "                WriteVerbose(string.Format(Resources.DeviceGet_StatusMessage' deviceInfos.Count()' deviceInfos.Count() > 1 ? "s" : string.Empty)); " is 130.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleDeviceConnectedInitiator,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\GetAzureStorSimpleDeviceConnectedInitiator.cs,ExecuteCmdlet,The length of the statement  "                    var deviceToUse = StorSimpleClient.GetAllDevices().Where(x => x.FriendlyName.Equals(DeviceName' StringComparison.InvariantCultureIgnoreCase)).FirstOrDefault(); " is 159.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleDeviceConnectedInitiator,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\GetAzureStorSimpleDeviceConnectedInitiator.cs,ExecuteCmdlet,The length of the statement  "                        throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' currentResourceName' DeviceName)); " is 131.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleDeviceConnectedInitiator,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\GetAzureStorSimpleDeviceConnectedInitiator.cs,ExecuteCmdlet,The length of the statement  "                WriteVerbose(string.Format(Resources.IscsiConnectionGet_StatusMessage'iscsiConnections.Count' (iscsiConnections.Count > 1?"s":string.Empty))); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleResource,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\GetAzureStorSimpleResource.cs,ExecuteCmdlet,The length of the statement  "                    serviceList = serviceList.Where(x => x.ResourceName.Equals(ResourceName' System.StringComparison.InvariantCultureIgnoreCase)).Cast<ResourceCredentials>().ToList(); " is 163.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleResource,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\GetAzureStorSimpleResource.cs,ExecuteCmdlet,The length of the statement  "                WriteVerbose(string.Format(Resources.ResourceGet_StatusMessage' serviceList.Count()'(serviceList.Count() > 1 ? "s" : string.Empty))); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleResourceContext,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\GetAzureStorSimpleResourceContext.cs,ExecuteCmdlet,The length of the statement  "                this.WriteVerbose(string.Format(Resources.ResourceContextFound'currentContext.ResourceName' currentContext.ResourceId)); " is 120.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleStorageAccountCredential,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\ServiceConfig\GetAzureStorSimpleStorageAccountCredential.cs,ExecuteCmdlet,The length of the statement  "                var sac = allSACs.Where(x => x.Name.Equals(StorageAccountName' StringComparison.InvariantCultureIgnoreCase)).FirstOrDefault(); " is 126.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SelectAzureStorSimpleResource,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\SelectAzureStorSimpleResource.cs,ExecuteCmdlet,The length of the statement  "                    EncryptionCmdLetHelper.PersistCIK(this' resCred.ResourceId' StorSimpleClient.ParseCIKFromRegistrationKey(RegistrationKey)); " is 123.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,RemoveAzureStorSimpleStorageAccountCredential,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\ServiceConfig\RemoveAzureStorSimpleStorageAccountCredential.cs,ExecuteCmdlet,The length of the statement  "                                          existingSac = allSACs.Where(x => x.Name.Equals(StorageAccountName' StringComparison.InvariantCultureIgnoreCase)).FirstOrDefault(); " is 130.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleAccessControlRecord,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\ServiceConfig\SetAzureStorSimpleAccessControlRecord.cs,ExecuteCmdlet,The length of the statement  "                var existingAcr = allACRs.Where(x => x.Name.Equals(ACRName' StringComparison.InvariantCultureIgnoreCase)).FirstOrDefault(); " is 123.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleStorageAccountCredential,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\ServiceConfig\SetAzureStorSimpleStorageAccountCredential.cs,ExecuteCmdlet,The length of the statement  "                var existingSac = allSACs.Where(x => x.Name.Equals(StorageAccountName' StringComparison.InvariantCultureIgnoreCase)).FirstOrDefault(); " is 134.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleDeviceVolume,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Volume\GetAzureStorSimpleDeviceVolume .cs,ExecuteCmdlet,The length of the statement  "                    throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleDeviceVolume,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Volume\GetAzureStorSimpleDeviceVolume .cs,ExecuteCmdlet,The length of the statement  "                        WriteVerbose(string.Format(Resources.ReturnedCountVolumeMessage' volumeInfoList.ListofVirtualDisks.Count' volumeInfoList.ListofVirtualDisks.Count > 1 ? "s" : string.Empty)); " is 173.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,RemoveAzureStorSimpleDeviceVolume,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Volume\RemoveAzureStorSimpleDeviceVolume .cs,ExecuteCmdlet,The length of the statement  "                                      throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleDeviceVolume,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Volume\SetAzureStorSimpleDeviceVolume.cs,ExecuteCmdlet,The length of the statement  "                    throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,ServiceSecretEncryptor,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Encryption\MigrationServiceSecretsEncryptor.cs,EncryptSecret,The length of the statement  "            KeyStoreOperationStatus status = storSimpleCryptoManager.EncryptSecretWithRakPub(secretToBeEncrypted' out encryptedPassword); " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets.Volume,NewAzureStorSimpleDeviceVolume,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Volume\NewAzureStorSimpleDeviceVolume.cs,ExecuteCmdlet,The length of the statement  "                    throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' DeviceName)); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,GetBackupPolicyByName,The length of the statement  "            var backupPolicyDetail = this.GetStorSimpleClient().BackupPolicy.GetBackupPolicyDetailsByName(deviceId' backupPolicyName' GetCustomRequestHeaders()); " is 149.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,UpdateBackupPolicyAsync,The length of the statement  "            return GetStorSimpleClient().BackupPolicy.BeginUpdatingBackupPolicy(deviceId' policyId' updatepolicyConfig' GetCustomRequestHeaders()); " is 135.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,ImportLegacyApplianceConfig,The length of the statement  "            return this.GetStorSimpleClient().MigrateLegacyAppliance.ImportLegacyApplianceConfig(configId' legacyApplConfig' this.GetCustomRequestHeaders()); " is 145.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,ConfirmLegacyVolumeContainerStatus,The length of the statement  "            return this.GetStorSimpleClient().MigrateLegacyAppliance.ConfirmMigration(configId' request' this.GetCustomRequestHeaders()); " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,UpdateMigrationPlanAsync,The length of the statement  "            return this.GetStorSimpleClient().MigrateLegacyAppliance.BeginUpdateMigrationPlan(configId' this.GetCustomRequestHeaders()); " is 124.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,MigrationImportDataContainer,The length of the statement  "            return this.GetStorSimpleClient().MigrateLegacyAppliance.MigrationImportDataContainer(configId' request' this.GetCustomRequestHeaders()); " is 137.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,UpdateDataContainerMigrationStatusSync,The length of the statement  "            return this.GetStorSimpleClient().MigrateLegacyAppliance.UpdateDataContainerMigrationStatus(configId' this.GetCustomRequestHeaders()); " is 134.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,UpdateDataContainerMigrationStatusAsync,The length of the statement  "            return this.GetStorSimpleClient().MigrateLegacyAppliance.BeginUpdateDataContainerMigrationStatus(configId' this.GetCustomRequestHeaders()); " is 139.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,GetDataContainerMigrationStatus,The length of the statement  "            return this.GetStorSimpleClient().MigrateLegacyAppliance.GetDataContainerMigrationStatus(configId' this.GetCustomRequestHeaders()); " is 131.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,UpdateMigrationConfirmStatusAsync,The length of the statement  "            return this.GetStorSimpleClient().MigrateLegacyAppliance.BeginUpdateMigrationConfirmStatus(configId' this.GetCustomRequestHeaders()); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,UpdateMigrationConfirmStatusSync,The length of the statement  "            return this.GetStorSimpleClient().MigrateLegacyAppliance.UpdateMigrationConfirmStatus(configId' this.GetCustomRequestHeaders()); " is 128.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,GetMigrationConfirmStatus,The length of the statement  "            return this.GetStorSimpleClient().MigrateLegacyAppliance.GetMigrationConfirmStatus(configId' this.GetCustomRequestHeaders()); " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,GetDeviceJobById,The length of the statement  "            var deviceJobsResponse = this.GetStorSimpleClient().DeviceJob.Get(null' null' null' instanceId' null' null' 0' 1' this.GetCustomRequestHeaders()); " is 146.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,GetDeviceJobs,The length of the statement  "            var deviceJobsResponse = this.GetStorSimpleClient().DeviceJob.Get(deviceId' jobType' jobStatus' jobId' startTime' endTime' skip' top' this.GetCustomRequestHeaders()); " is 166.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,StopDeviceJob,The length of the statement  "            var stopJobResponse = this.GetStorSimpleClient().DeviceJob.UpdateDeviceJob(deviceId' instanceId' updateRequest' this.GetCustomRequestHeaders()); " is 144.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,UpdateDeviceDetails,The length of the statement  "            var taskStatusInfo = this.GetStorSimpleClient().DeviceDetails.UpdateDeviceDetails(request' this.GetCustomRequestHeaders()); " is 123.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,UpdateDeviceDetails,The length of the statement  "            var taskStatusInfo = this.GetStorSimpleClient().DeviceDetails.UpdateDeviceDetails(request' this.GetCustomRequestHeaders()); " is 123.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,GetDeviceId,The length of the statement  "            return (from deviceInfo in deviceInfos where deviceInfo.FriendlyName.Equals(deviceToUse' StringComparison.InvariantCultureIgnoreCase) select deviceInfo.DeviceId).FirstOrDefault(); " is 179.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,UpdateDeviceDetailsWithNetworkConfig,The length of the statement  "            netInterface.IsIScsiEnabled = netConfig.IsIscsiEnabled.HasValue ? netConfig.IsIscsiEnabled.Value : netInterface.IsIScsiEnabled; " is 127.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,UpdateDeviceDetailsWithNetworkConfig,The length of the statement  "            netInterface.IsCloudEnabled = netConfig.IsCloudEnabled.HasValue ? netConfig.IsCloudEnabled.Value : netInterface.IsCloudEnabled; " is 127.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,CreateVirtualDevice,The length of the statement  "            return this.GetStorSimpleClient().VirtualDevice.Create(virtualApplianceProvisioningInfo' this.GetCustomRequestHeaders()); " is 121.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleCmdletBase,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\StorSimpleCmdletBase.cs,IsDeviceConfigurationCompleteForDevice,The length of the statement  "                NetInterface data0 = details.NetInterfaceList.Where(x => x.InterfaceId == NetInterfaceId.Data0).ToList<NetInterface>().First<NetInterface>(); " is 141.
Long Statement,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleCmdletBase,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\StorSimpleCmdletBase.cs,ValidateNetworkConfigs,The length of the statement  "                        throw new ArgumentException(string.Format(Resources.IPAddressesNotProvidedForNetInterfaceBeingEnabled' StorSimpleContext.ResourceName' details.DeviceProperties.DeviceId)); " is 171.
Complex Conditional,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleDevice,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DeviceDetails\SetAzureStorSimpleDevice.cs,ProcessParameters,The conditional expression  "string.IsNullOrEmpty(NewName) && TimeZone == null &&                  string.IsNullOrEmpty(SecondaryDnsServer) &&                  (StorSimpleNetworkConfig == null || StorSimpleNetworkConfig.Count() < 1)"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,NewAzureStorSimpleNetworkConfig,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DeviceDetails\NewAzureStorSimpleNetworkConfig.cs,ProcessParameters,The conditional expression  "IPv4Address != null || IPv4Gateway != null || IPv4Netmask != null                      && IPv6Gateway != null || IPv6Prefix != null || EnableCloud != null"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleCmdletBase,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\StorSimpleCmdletBase.cs,IsDeviceConfigurationCompleteForDevice,The conditional expression  "data0 != null                      && data0.IsEnabled                      && data0.NicIPv4Settings != null                      && !string.IsNullOrEmpty(data0.NicIPv4Settings.Controller0IPv4Address)"  is complex.
Empty Catch Block,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,GetAllResources,The method has an empty catch block.
Empty Catch Block,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleCmdletBase,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\StorSimpleCmdletBase.cs,HandleException,The method has an empty catch block.
Empty Catch Block,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleCmdletBase,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\StorSimpleCmdletBase.cs,HandleException,The method has an empty catch block.
Magic Number,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleVirtualDevice,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DeviceDetails\SetAzureStorSimpleVirtualDevice.cs,ValidateParams,The following statement contains a magic number: ValidateLength(AdministratorPassword' 8' 15' Resources.AdminPasswordLengthError);
Magic Number,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleVirtualDevice,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DeviceDetails\SetAzureStorSimpleVirtualDevice.cs,ValidateParams,The following statement contains a magic number: ValidateLength(AdministratorPassword' 8' 15' Resources.AdminPasswordLengthError);
Magic Number,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleVirtualDevice,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DeviceDetails\SetAzureStorSimpleVirtualDevice.cs,ValidateParams,The following statement contains a magic number: ValidateLength(SnapshotManagerPassword' 14' 15' Resources.SnapshotPasswordLengthError);
Magic Number,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,SetAzureStorSimpleVirtualDevice,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\DeviceDetails\SetAzureStorSimpleVirtualDevice.cs,ValidateParams,The following statement contains a magic number: ValidateLength(SnapshotManagerPassword' 14' 15' Resources.SnapshotPasswordLengthError);
Magic Number,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets.Library,CryptoHelper,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Library\CryptoHelper.cs,DecryptCipherAES,The following statement contains a magic number: using (MemoryStream memoryDecrypt = new MemoryStream(bytes))              {                  aesAlg = new AesManaged();                  aesAlg.Key = key.GetBytes(aesAlg.KeySize / 8);                  // Get the initialization vector from the encrypted stream                  aesAlg.IV = ReadByteArray(memoryDecrypt);                  // Create a decrytor to perform the stream transform.                  ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key' aesAlg.IV);                  using (CryptoStream cryptoDecrypt =                      new CryptoStream(memoryDecrypt' decryptor' CryptoStreamMode.Read))                  {                      using (StreamReader streamDecrypt = new StreamReader(cryptoDecrypt))                      {                          plaintext = streamDecrypt.ReadToEnd();                      }                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,CorrectLastBackupForNewPolicy,The following statement contains a magic number: if (backupPolicyList != null)              {                  for (int i = 0; i < backupPolicyList.Count; ++i)                  {                      if (backupPolicyList[i].LastBackup.Value.Year == 2010                          && backupPolicyList[i].LastBackup.Value.Month == 1                          && backupPolicyList[i].LastBackup.Value.Day == 1)                      {                          //this means that for this policy no backup has yet been taken                          //so the service returns 1/1/2010 which is incorrect. hence we are correcting it here                          backupPolicyList[i].LastBackup = null;                      }                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,CorrectLastBackupForNewPolicyDetail,The following statement contains a magic number: if (backupPolicyDetail != null && backupPolicyDetail.LastBackup != null)              {                  if (backupPolicyDetail.LastBackup.Value.Year == 2010                      && backupPolicyDetail.LastBackup.Value.Month == 1                      && backupPolicyDetail.LastBackup.Value.Day == 1)                  {                      //this means that for this policy no backup has yet been taken                      //so the service returns 1/1/2010 which is incorrect. hence we are correcting it here                      backupPolicyDetail.LastBackup = null;                  }                }
Magic Number,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,ValidateRetentionCount,The following statement contains a magic number: if (retentionCount < 1 || retentionCount > 64)              {                  throw new ArgumentException(Resources.RetentionCountRangeInvalid);              }
Magic Number,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleClient,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\ServiceClients\StoreSimpleBackupPolicyClient.cs,ParseCIKFromRegistrationKey,The following statement contains a magic number: try              {                  string[] parts = registrationKey.Split(new char[] { ':' });                  return parts[2].Split(new char[] { '#' })[0];              }              catch (Exception ex)              {                  throw new Exception(Resources.IncorrectFormatInRegistrationKey' ex);              }
Magic Number,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleCmdletBase,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\StorSimpleCmdletBase.cs,ValidStorageAccountCred,The following statement contains a magic number: using (System.Management.Automation.PowerShell ps = System.Management.Automation.PowerShell.Create())              {                  bool valid = true;                  Random rnd = new Random();                  string testContainerName = string.Format("storsimplesdkvalidation{0}"' rnd.Next());                  //create a storage container and then delete it                  string validateScript = string.Format(                                    @"$context = New-AzureStorageContext -StorageAccountName {0} -StorageAccountKey {1} -Endpoint {2};"                                  + @"New-AzureStorageContainer -Name {3} -Context $context;"                                  + @"Remove-AzureStorageContainer -Name {3} -Context $context -Force;"'                                  storageAccountName' storageAccountKey' endpoint' testContainerName);                  ps.AddScript(validateScript);                  ps.Invoke();                  if (ps.HadErrors)                  {                      var exception = ps.Streams.Error[0].Exception;                      string getScript = string.Format(                                    @"$context = New-AzureStorageContext -StorageAccountName {0} -StorageAccountKey {1};"                                  + @"Get-AzureStorageContainer -Name {2} -Context $context;"'                                  storageAccountName' storageAccountKey' testContainerName);                      ps.AddScript(getScript);                      var result = ps.Invoke();                      if (result != null && result.Count > 0)                      {                          //storage container successfully created and still exists' retry deleting it                          int retryCount = 1;                          string removeScript = string.Format(                                    @"$context = New-AzureStorageContext -StorageAccountName {0} -StorageAccountKey {1};"                                  + @"Remove-AzureStorageContainer -Name {2} -Context $context -Force;"'                                  storageAccountName' storageAccountKey' testContainerName);                          do                          {                              WriteVerbose(string.Format(Resources.StorageAccountCleanupRetryMessage' retryCount));                              ps.AddScript(removeScript);                              ps.Invoke();                              Thread.Sleep(retryCount * 1000);                              ps.AddScript(getScript);                              result = ps.Invoke();                          } while (result != null && result.Count > 0 && ++retryCount <= 5);                      }                      else                      {                          valid = false;                          HandleException(exception);                      }                  }                  return valid;              }
Magic Number,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleCmdletBase,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\StorSimpleCmdletBase.cs,ValidStorageAccountCred,The following statement contains a magic number: using (System.Management.Automation.PowerShell ps = System.Management.Automation.PowerShell.Create())              {                  bool valid = true;                  Random rnd = new Random();                  string testContainerName = string.Format("storsimplesdkvalidation{0}"' rnd.Next());                  //create a storage container and then delete it                  string validateScript = string.Format(                                    @"$context = New-AzureStorageContext -StorageAccountName {0} -StorageAccountKey {1} -Endpoint {2};"                                  + @"New-AzureStorageContainer -Name {3} -Context $context;"                                  + @"Remove-AzureStorageContainer -Name {3} -Context $context -Force;"'                                  storageAccountName' storageAccountKey' endpoint' testContainerName);                  ps.AddScript(validateScript);                  ps.Invoke();                  if (ps.HadErrors)                  {                      var exception = ps.Streams.Error[0].Exception;                      string getScript = string.Format(                                    @"$context = New-AzureStorageContext -StorageAccountName {0} -StorageAccountKey {1};"                                  + @"Get-AzureStorageContainer -Name {2} -Context $context;"'                                  storageAccountName' storageAccountKey' testContainerName);                      ps.AddScript(getScript);                      var result = ps.Invoke();                      if (result != null && result.Count > 0)                      {                          //storage container successfully created and still exists' retry deleting it                          int retryCount = 1;                          string removeScript = string.Format(                                    @"$context = New-AzureStorageContext -StorageAccountName {0} -StorageAccountKey {1};"                                  + @"Remove-AzureStorageContainer -Name {2} -Context $context -Force;"'                                  storageAccountName' storageAccountKey' testContainerName);                          do                          {                              WriteVerbose(string.Format(Resources.StorageAccountCleanupRetryMessage' retryCount));                              ps.AddScript(removeScript);                              ps.Invoke();                              Thread.Sleep(retryCount * 1000);                              ps.AddScript(getScript);                              result = ps.Invoke();                          } while (result != null && result.Count > 0 && ++retryCount <= 5);                      }                      else                      {                          valid = false;                          HandleException(exception);                      }                  }                  return valid;              }
Magic Number,Microsoft.WindowsAzure.Commands.StorSimple,StorSimpleCmdletBase,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\StorSimpleCmdletBase.cs,ValidatePasswordComplexity,The following statement contains a magic number: if(criteriaFulfilled < 3){                  throw new ArgumentException(errorMessage);              }
Missing Default,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,RemoveAzureStorSimpleDeviceBackupPolicy,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\BackupPolicy\RemoveAzureStorSimpleDeviceBackupPolicy.cs,ProcessParameters,The following switch statement is missing a default case: switch (ParameterSetName)              {                  case StorSimpleCmdletParameterSet.IdentifyById:                      Guid backuppolicyIdGuid;                      bool isIdValidGuid = Guid.TryParse(BackupPolicyId'out backuppolicyIdGuid);                      if (string.IsNullOrEmpty(BackupPolicyId)                          || !isIdValidGuid)                          throw new ArgumentException(Resources.InvalidBackupPolicyIdParameter);                      else                      {                          backupPolicyIdFinal = BackupPolicyId;                      }                      break;                  case StorSimpleCmdletParameterSet.IdentifyByObject:                      if (BackupPolicy == null || string.IsNullOrEmpty(BackupPolicy.InstanceId))                          throw new ArgumentException(Resources.InvalidBackupPolicyObjectParameter);                      else                      {                          backupPolicyIdFinal = BackupPolicy.InstanceId;                      }                      break;              }
Missing Default,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,RemoveAzureStorSimpleDeviceBackup,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\BackupSet\RemoveAzureStorSimpleDeviceBackup.cs,ProcessParameters,The following switch statement is missing a default case: switch (ParameterSetName)              {                  case StorSimpleCmdletParameterSet.IdentifyById:                      if (string.IsNullOrEmpty(BackupId))                          throw new ArgumentException(Resources.InvalidBackupIdParameter);                      else                      {                          finalBackupId = BackupId;                      }                      break;                  case StorSimpleCmdletParameterSet.IdentifyByObject:                      if(Backup==null || string.IsNullOrEmpty(Backup.InstanceId))                          throw new ArgumentException(Resources.InvalidBackupObjectParameter);                      else                      {                          finalBackupId = Backup.InstanceId;                      }                      break;              }
Missing Default,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,StartAzureStorSimpleBackupCloneJob,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Clone\StartAzureStorSimpleBackupCloneJob.cs,ProcessParameters,The following switch statement is missing a default case: switch (ParameterSetName)              {                  case StorSimpleCmdletParameterSet.IdentifyById:                      this.sourceDeviceId = SourceDeviceId;                      this.targetDeviceId = TargetDeviceId;                      break;                  case StorSimpleCmdletParameterSet.IdentifyByName:                      this.sourceDeviceId = StorSimpleClient.GetDeviceId(SourceDeviceName);                        if (this.sourceDeviceId == null)                      {                          throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' SourceDeviceName));                      }                        this.targetDeviceId = StorSimpleClient.GetDeviceId(TargetDeviceName);                        if (this.targetDeviceId == null)                      {                          throw new ArgumentException(string.Format(Resources.NoDeviceFoundWithGivenNameInResourceMessage' StorSimpleContext.ResourceName' TargetDeviceName));                      }                      break;              }
Missing Default,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,StartAzureStorSimpleDeviceBackupJob,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\BackupSet\StartAzureStorSimpleDeviceBackupJob.cs,ProcessParameters,The following switch statement is missing a default case: switch (ParameterSetName)               {                   case StorSimpleCmdletParameterSet.Empty:                       backupTypeSelected = Microsoft.WindowsAzure.Management.StorSimple.Models.BackupType.LocalSnapshot;                       break;                   case PARAMETERSET_BACKUPTYPE:                       backupTypeSelected = (BackupType)Enum.Parse(typeof(BackupType)' BackupType);                       break;               }
Missing Default,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,RemoveAzureStorSimpleAccessControlRecord,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\ServiceConfig\RemoveAzureStorSimpleAccessControlRecord.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)                                    {                                        case StorSimpleCmdletParameterSet.IdentifyByName:                                            var allACRs = StorSimpleClient.GetAllAccessControlRecords();                                            existingAcr = allACRs.Where(x => x.Name.Equals(ACRName' StringComparison.InvariantCultureIgnoreCase)).FirstOrDefault();                                            acrName = ACRName;                                            break;                                        case StorSimpleCmdletParameterSet.IdentifyByObject:                                            existingAcr = ACR;                                            acrName = ACR.Name;                                            break;                                    }
Missing Default,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,RemoveAzureStorSimpleStorageAccountCredential,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\ServiceConfig\RemoveAzureStorSimpleStorageAccountCredential.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)                                    {                                        case StorSimpleCmdletParameterSet.IdentifyByName:                                            var allSACs = StorSimpleClient.GetAllStorageAccountCredentials();                                            existingSac = allSACs.Where(x => x.Name.Equals(StorageAccountName' StringComparison.InvariantCultureIgnoreCase)).FirstOrDefault();                                            sacName = StorageAccountName;                                            break;                                        case StorSimpleCmdletParameterSet.IdentifyByObject:                                            existingSac = SAC;                                            sacName = SAC.Name;                                            break;                                    }
Missing Default,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,GetAzureStorSimpleDeviceVolume,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Volume\GetAzureStorSimpleDeviceVolume .cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)                  {                      case StorSimpleCmdletParameterSet.IdentifyByParentObject:                          var volumeInfoList = StorSimpleClient.GetAllVolumesFordataContainer(deviceId' VolumeContainer.InstanceId);                          WriteObject(volumeInfoList.ListofVirtualDisks);                          WriteVerbose(string.Format(Resources.ReturnedCountVolumeMessage' volumeInfoList.ListofVirtualDisks.Count' volumeInfoList.ListofVirtualDisks.Count > 1 ? "s" : string.Empty));                          break;                      case StorSimpleCmdletParameterSet.IdentifyByName:                          var volumeInfo = StorSimpleClient.GetVolumeByName(deviceId' VolumeName);                          if (volumeInfo != null                               && volumeInfo.VirtualDiskInfo != null                               && volumeInfo.VirtualDiskInfo.InstanceId != null)                          {                              WriteObject(volumeInfo.VirtualDiskInfo);                              WriteVerbose(string.Format(Resources.FoundVolumeMessage' VolumeName));                          }                          else                          {                              throw new ArgumentException(string.Format(Resources.NotFoundVolumeMessage' VolumeName));                          }                          break;                  }
Missing Default,Microsoft.WindowsAzure.Commands.StorSimple.Cmdlets,RemoveAzureStorSimpleDeviceVolume,C:\repos\Azure_azure-powershell\src\ServiceManagement\StorSimple\Commands.StorSimple\Cmdlets\Volume\RemoveAzureStorSimpleDeviceVolume .cs,ExecuteCmdlet,The following switch statement is missing a default case: switch(ParameterSetName)                                    {                                        case StorSimpleCmdletParameterSet.IdentifyByObject:                                            volumeId = Volume.InstanceId;                                            break;                                        case StorSimpleCmdletParameterSet.IdentifyByName:                                            var volumeInfo = StorSimpleClient.GetVolumeByName(deviceid' VolumeName);                                            if (volumeInfo == null || volumeInfo.VirtualDiskInfo == null || volumeInfo.VirtualDiskInfo.InstanceId == null)                                            {                                                throw new ArgumentException(Resources.NotFoundMessageVirtualDisk);                                            }                                            volumeId = volumeInfo.VirtualDiskInfo.InstanceId;                                            break;                                    }
