Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Microsoft.Azure.Commands.Common.Authentication.ResourceManager,ContextModelExtensions,C:\repos\Azure_azure-powershell\src\ResourceManager\Common\Commands.Common.Authentication.ResourceManager\ContextModelExtensions.cs,WithAccount,The length of the statement  "                account.SetOrAppendProperty(AzureAccount.Property.Subscriptions' context.Subscription == null ? null : context.Subscription.Id); " is 128.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.ResourceManager,ContextModelExtensions,C:\repos\Azure_azure-powershell\src\ResourceManager\Common\Commands.Common.Authentication.ResourceManager\ContextModelExtensions.cs,Merge,The length of the statement  "                ActiveDirectoryServiceEndpointResourceId = environment1.ActiveDirectoryServiceEndpointResourceId ?? environment2.ActiveDirectoryServiceEndpointResourceId' " is 154.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.ResourceManager,ContextModelExtensions,C:\repos\Azure_azure-powershell\src\ResourceManager\Common\Commands.Common.Authentication.ResourceManager\ContextModelExtensions.cs,Merge,The length of the statement  "                AzureDataLakeAnalyticsCatalogAndJobEndpointSuffix = environment1.AzureDataLakeAnalyticsCatalogAndJobEndpointSuffix ?? environment2.AzureDataLakeAnalyticsCatalogAndJobEndpointSuffix' " is 181.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.ResourceManager,ContextModelExtensions,C:\repos\Azure_azure-powershell\src\ResourceManager\Common\Commands.Common.Authentication.ResourceManager\ContextModelExtensions.cs,Merge,The length of the statement  "                AzureDataLakeStoreFileSystemEndpointSuffix = environment1.AzureDataLakeStoreFileSystemEndpointSuffix ?? environment2.AzureDataLakeStoreFileSystemEndpointSuffix' " is 160.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.ResourceManager,ContextModelExtensions,C:\repos\Azure_azure-powershell\src\ResourceManager\Common\Commands.Common.Authentication.ResourceManager\ContextModelExtensions.cs,Merge,The length of the statement  "                AzureKeyVaultServiceEndpointResourceId = environment1.AzureKeyVaultServiceEndpointResourceId ?? environment2.AzureKeyVaultServiceEndpointResourceId' " is 148.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Models,AzureRmProfile,C:\repos\Azure_azure-powershell\src\ResourceManager\Common\Commands.Common.Authentication.ResourceManager\AzureRmProfile.cs,SafeDeserializeObject,The length of the statement  "                result = converter == null? JsonConvert.DeserializeObject<T>(serialization) : JsonConvert.DeserializeObject<T>(serialization' converter); " is 137.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Models,AzureRmProfile,C:\repos\Azure_azure-powershell\src\ResourceManager\Common\Commands.Common.Authentication.ResourceManager\AzureRmProfile.cs,TryFindContext,The length of the statement  "                        (c.Value.Account != null && context.Account != null && string.Equals(c.Value.Account.Id' context.Account.Id' StringComparison.OrdinalIgnoreCase)) " is 145.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Models,AzureRmProfile,C:\repos\Azure_azure-powershell\src\ResourceManager\Common\Commands.Common.Authentication.ResourceManager\AzureRmProfile.cs,TryFindContext,The length of the statement  "                        (c.Value.Subscription != null && context.Subscription != null && c.Value.Subscription.GetId() == context.Subscription.GetId()) " is 126.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Models,AzureRmProfile,C:\repos\Azure_azure-powershell\src\ResourceManager\Common\Commands.Common.Authentication.ResourceManager\AzureRmProfile.cs,TryCopyProfile,The length of the statement  "            foreach (var environment in other.EnvironmentTable.Where((e) => !AzureEnvironment.PublicEnvironments.ContainsKey(e.Key))) " is 121.
Long Statement,Microsoft.Azure.Commands.Profile.Models,AzureContextConverter,C:\repos\Azure_azure-powershell\src\ResourceManager\Common\Commands.Common.Authentication.ResourceManager\Models\AzureContextConverter.cs,CanConvertFrom,The length of the statement  "                result = (IsContainerType(sourceObject) || IsContextType(sourceObject)) && destinationType == typeof(IAzureContextContainer); " is 125.
Long Statement,Microsoft.Azure.Commands.Profile.Models,AzureContextConverter,C:\repos\Azure_azure-powershell\src\ResourceManager\Common\Commands.Common.Authentication.ResourceManager\Models\AzureContextConverter.cs,CanConvertFrom,The length of the statement  "                result = IsContainerType(sourceValue) || IsContextType(sourceValue) && destinationType == typeof(IAzureContextContainer); " is 121.
Complex Conditional,Microsoft.Azure.Commands.ResourceManager.Common,AzureRmProfileConverter,C:\repos\Azure_azure-powershell\src\ResourceManager\Common\Commands.Common.Authentication.ResourceManager\AzureRmProfileConverter.cs,ReadJson,The conditional expression  "_serializeCache && tempResult != null && tempResult.CacheData != null && tempResult.CacheData.Length > 0"  is complex.
Empty Catch Block,Microsoft.Azure.Commands.Common.Authentication.Models,AzureRmProfile,C:\repos\Azure_azure-powershell\src\ResourceManager\Common\Commands.Common.Authentication.ResourceManager\AzureRmProfile.cs,SafeDeserializeObject,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.Commands.Profile.Models,PSAzureSubscription,C:\repos\Azure_azure-powershell\src\ResourceManager\Common\Commands.Common.Authentication.ResourceManager\Models\PSAzureSubscription.cs,GetAccountName,The method has an empty catch block.
Magic Number,Microsoft.Azure.Commands.Profile.Models,PSAzureSubscription,C:\repos\Azure_azure-powershell\src\ResourceManager\Common\Commands.Common.Authentication.ResourceManager\Models\PSAzureSubscription.cs,GetAccountName,The following statement contains a magic number: if (!string.IsNullOrWhiteSpace(result))              {                  try                  {                      var pairs = result.Split(new char[] { ';' }' StringSplitOptions.RemoveEmptyEntries);                      foreach (var pair in pairs)                      {                          var sides = pair.Split(new char[] { '=' }' 2' StringSplitOptions.RemoveEmptyEntries);                          if (string.Equals("AccountName"' sides[0].Trim()' StringComparison.OrdinalIgnoreCase))                          {                              result = sides[1].Trim();                              break;                          }                      }                  }                  catch                  {                      // if there are any errors' return the unchanged account name                  }              }
