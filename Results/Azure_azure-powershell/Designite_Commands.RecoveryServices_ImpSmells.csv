Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.Azure.Commands.RecoveryServices,RecoveryServicesCmdletBase,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Common\RecoveryServicesCmdletBase.cs,HandleException,Cyclomatic complexity of the method is 8
Long Parameter List,Microsoft.Azure.Commands.RecoveryServices,PSRecoveryServicesClient,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Common\PSRecoveryServicesClient.cs,GenerateCredentialObject,The method has 5 parameters. Parameters: managementCert' acsDetails' channelIntegrityKey' vault' site
Long Parameter List,Microsoft.Azure.Commands.RecoveryServices,VaultCreds,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Models\PSContracts.cs,VaultCreds,The method has 5 parameters. Parameters: subscriptionId' resourceName' managementCert' acsNamespace' resourceType
Long Parameter List,Microsoft.Azure.Commands.RecoveryServices,ASRVaultCreds,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Models\PSContracts.cs,ASRVaultCreds,The method has 11 parameters. Parameters: subscriptionId' resourceName' managementCert' acsNamespace' channelIntegrityKey' resourceGroupName' siteId' siteName' resourceNamespace' resourceType' location
Long Parameter List,Microsoft.Azure.Commands.RecoveryServices,CertUtils,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Utilities\CertUtils.cs,CreateSelfSignedCertificate,The method has 5 parameters. Parameters: validForHours' subscriptionId' certificateNamePrefix' issuer' password
Long Parameter List,Microsoft.Azure.Commands.RecoveryServices.RestApiInfra,VaultCreds,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Models\PSContracts.cs,VaultCreds,The method has 5 parameters. Parameters: subscriptionId' resourceName' managementCert' acsNamespace' resourceType
Long Parameter List,Microsoft.Azure.Commands.RecoveryServices.RestApiInfra,ASRVaultCreds,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Models\PSContracts.cs,ASRVaultCreds,The method has 11 parameters. Parameters: subscriptionId' resourceName' managementCert' acsNamespace' channelIntegrityKey' resourceGroupName' siteId' siteName' resourceNamespace' resourceType' location
Long Parameter List,Microsoft.Azure.Portal.RecoveryServices.Models.Common,VaultCreds,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Models\PSContracts.cs,VaultCreds,The method has 5 parameters. Parameters: subscriptionId' resourceName' managementCert' acsNamespace' resourceType
Long Parameter List,Microsoft.Azure.Portal.RecoveryServices.Models.Common,ASRVaultCreds,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Models\PSContracts.cs,ASRVaultCreds,The method has 11 parameters. Parameters: subscriptionId' resourceName' managementCert' acsNamespace' channelIntegrityKey' resourceGroupName' siteId' siteName' resourceNamespace' resourceType' location
Long Identifier,Microsoft.Azure.Commands.RecoveryServices,Constants,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Models\PSObjects.cs,,The length of the parameter VaultExtendedInfoContractVersion is 32.
Long Identifier,Microsoft.Azure.Commands.RecoveryServices,Constants,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Models\PSObjects.cs,,The length of the parameter RecoveryServicesProviderAuthType is 32.
Long Identifier,Microsoft.Azure.Commands.RecoveryServices,GetAzureRmRecoveryServicesVaultSettingsFile,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Vault\GetAzureRmRecoveryServicesVaultSettingsFile.cs,,The length of the parameter VaultCertificateExpiryInHoursForHRM is 35.
Long Identifier,Microsoft.Azure.Commands.RecoveryServices,GetAzureRmRecoveryServicesVaultSettingsFile,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Vault\GetAzureRmRecoveryServicesVaultSettingsFile.cs,,The length of the parameter VaultCertificateExpiryInHoursForBackup is 38.
Long Statement,Microsoft.Azure.Commands.RecoveryServices,PSRecoveryServicesClient,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Common\PSRecoveryServicesClient.cs,GetRequestHeaders,The length of the statement  "            this.ClientRequestId = Guid.NewGuid().ToString() + "-" + DateTime.Now.ToUniversalTime().ToString("yyyy-MM-dd HH:mm:ssZ") + "-P"; " is 128.
Long Statement,Microsoft.Azure.Commands.RecoveryServices,CertUtils,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Utilities\CertUtils.cs,CreateSelfSignedCertificate,The length of the statement  "            return NewX509Certificate2(bytes' password' X509KeyStorageFlags.PersistKeySet | X509KeyStorageFlags.Exportable' shouldValidatePfx: false); " is 138.
Long Statement,Microsoft.Azure.Commands.RecoveryServices,CertUtils,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Utilities\CertUtils.cs,Create2048RsaKey,The length of the statement  "            keyCreationParameters.Parameters.Add(new CngProperty("Length"' BitConverter.GetBytes(KeySize2048)' CngPropertyOptions.None)); " is 125.
Long Statement,Microsoft.Azure.Commands.RecoveryServices,GetAzureRmRecoveryServicesVaultSettingsFile,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Vault\GetAzureRmRecoveryServicesVaultSettingsFile.cs,GenerateFileName,The length of the statement  "                fileName = string.Format("{0}_{1}_{2}.VaultCredentials"' this.SiteFriendlyName' this.Vault.Name' DateTime.UtcNow.ToString(format)); " is 131.
Long Statement,Microsoft.Azure.Commands.RecoveryServices,RemoveAzureRmRecoveryServicesVault,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Vault\RemoveAzureRmRecoveryServicesVault.cs,ExecuteCmdlet,The length of the statement  "                        Response = response.Response.StatusCode == HttpStatusCode.OK ? Resources.VaultDeletionSuccessMessage : response.Response.StatusCode.ToString() " is 142.
Empty Catch Block,Microsoft.Azure.Commands.RecoveryServices,CertUtils,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Utilities\CertUtils.cs,NewX509Certificate2,The method has an empty catch block.
Magic Number,Microsoft.Azure.Commands.RecoveryServices,PSRecoveryServicesClient,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Common\PSRecoveryServicesClient.cs,CreateVaultExtendedInformation,The following statement contains a magic number: extendedInformation.IntegrityKey = Utilities.GenerateRandomKey(128);
Magic Number,Microsoft.Azure.Commands.RecoveryServices,CertUtils,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Utilities\CertUtils.cs,CreateSelfSignedCertificate,The following statement contains a magic number: DateTime startTime = DateTime.UtcNow.AddMinutes(-10);
Magic Number,Microsoft.Azure.Commands.RecoveryServices,CertUtils,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Utilities\CertUtils.cs,GetCertInBase64EncodedForm,The following statement contains a magic number: try              {                  fileStream = new FileStream(certFileName' FileMode.Open' FileAccess.Read);                    // If the file size is more than 1MB' fail the call - this is just to avoid Dos Attacks                  if (fileStream.Length > 1048576)                  {                      throw new Exception("The Certficate size exceeds 1MB. Please provide a file whose size is utmost 1 MB");                  }                    int size = (int)fileStream.Length;                  data = new byte[size];                  size = fileStream.Read(data' 0' size);                    // Check if the file is a valid certificate before sending it to service                  X509Certificate2 x509 = new X509Certificate2();                  x509.Import(data);                  if (string.IsNullOrEmpty(x509.Thumbprint))                  {                      throw new Exception("The thumbprint of Certificate is null or empty");                  }                    certInBase64EncodedForm = Convert.ToBase64String(data);              }              catch (Exception e)              {                  certInBase64EncodedForm = null;                  throw new ArgumentException(e.Message' certFileName' e);              }              finally              {                  if (null != fileStream)                  {                      fileStream.Close();                  }              }
Magic Number,Microsoft.Azure.Commands.RecoveryServices,Utilities,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Utilities\Utilities.cs,GenerateRandomKey,The following statement contains a magic number: byte[] key = new byte[(int)size / 8];
Magic Number,Microsoft.Azure.Commands.RecoveryServices,Utilities,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Utilities\Utilities.cs,GetValueFromArmId,The following statement contains a magic number: if (armFields.Length % 2 == 0)              {                  throw new Exception("Invalid ARM ID");              }
Magic Number,Microsoft.Azure.Commands.RecoveryServices,Utilities,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices\Commands.RecoveryServices\Utilities\Utilities.cs,GetValueFromArmId,The following statement contains a magic number: for (int i = 1; i < armFields.Length; i = i + 2)              {                  dictionary.Add(armFields[i]' armFields[i + 1]);              }
