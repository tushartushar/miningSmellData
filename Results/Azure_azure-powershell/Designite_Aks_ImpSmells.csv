Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Azure.Commands.Aks,SetAzureRmAks,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Commands\SetAzureRmAks.cs,ExecuteCmdlet,The method has 116 lines of code.
Long Parameter List,Microsoft.Azure.Commands.Aks.Models,PSContainerServiceAgentPoolProfile,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Models\PSContainerServiceAgentPoolProfile.cs,PSContainerServiceAgentPoolProfile,The method has 10 parameters. Parameters: name' vmSize' count' osDiskSizeGB' dnsPrefix' fqdn' ports' storageProfile' vnetSubnetID' osType
Long Parameter List,Microsoft.Azure.Commands.Aks.Models,PSKubernetesCluster,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Models\PSKubernetesCluster.cs,PSKubernetesCluster,The method has 12 parameters. Parameters: location' id' name' type' tags' provisioningState' dnsPrefix' fqdn' kubernetesVersion' agentPoolProfiles' linuxProfile' servicePrincipalProfile
Long Parameter List,Microsoft.Azure.Commands.Aks.Models,PSResource,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Models\PSResource.cs,PSResource,The method has 5 parameters. Parameters: location' id' name' type' tags
Long Statement,Microsoft.Azure.Commands.Aks,CreateOrUpdateKubeBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Commands\CreateOrUpdateKubeBase.cs,BuildNewCluster,The length of the statement  "                var validLocations = RmClient.Providers.Get("Microsoft.ContainerService").ResourceTypes.ToList().Find(x => x.ResourceType.Equals("managedClusters")).Locations; " is 159.
Long Statement,Microsoft.Azure.Commands.Aks,CreateOrUpdateKubeBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Commands\CreateOrUpdateKubeBase.cs,BuildNewCluster,The length of the statement  "                validLocations = validLocations.Select(l => l.Replace(" "' string.Empty).Replace("-"' string.Empty).ToLower()).ToList(); " is 120.
Long Statement,Microsoft.Azure.Commands.Aks,StartAzureRmAksDashboard,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Commands\StartAzureRmAksDashboard.cs,ExecuteCmdlet,The length of the statement  "                        Arguments = $"get pods --kubeconfig {tmpFileName} --namespace kube-system --output name --selector k8s-app=kubernetes-dashboard"' " is 129.
Magic Number,Microsoft.Azure.Commands.Aks,CreateOrUpdateKubeBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Commands\CreateOrUpdateKubeBase.cs,EnsureServicePrincipal,The following statement contains a magic number: clientSecret = RandomBase64String(16);
Magic Number,Microsoft.Azure.Commands.Aks,CreateOrUpdateKubeBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Commands\CreateOrUpdateKubeBase.cs,EnsureServicePrincipal,The following statement contains a magic number: var salt = RandomBase64String(3);
Magic Number,Microsoft.Azure.Commands.Aks,CreateOrUpdateKubeBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Commands\CreateOrUpdateKubeBase.cs,BuildServicePrincipal,The following statement contains a magic number: var pwCreds = new PasswordCredential(                  value: clientSecret'                  startDate: DateTime.UtcNow'                  endDate: DateTime.UtcNow.AddYears(2));
Magic Number,Microsoft.Azure.Commands.Aks,CreateOrUpdateKubeBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Commands\CreateOrUpdateKubeBase.cs,RetryAction,The following statement contains a magic number: Enumerable.Range(1' 10)
Magic Number,Microsoft.Azure.Commands.Aks,CreateOrUpdateKubeBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Commands\CreateOrUpdateKubeBase.cs,DefaultDnsPrefix,The following statement contains a magic number: var namePart = string.Join(""' DnsRegex.Replace(Name' "").Take(10));
Magic Number,Microsoft.Azure.Commands.Aks,CreateOrUpdateKubeBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Commands\CreateOrUpdateKubeBase.cs,DefaultDnsPrefix,The following statement contains a magic number: var subPart = string.Join(""' DefaultContext.Subscription.Id.Take(6));
Magic Number,Microsoft.Azure.Commands.Aks,StartAzureRmAksDashboard,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Commands\StartAzureRmAksDashboard.cs,ExecuteCmdlet,The following statement contains a magic number: RunCmdLet(() =>              {                  if (!GeneralUtilities.Probe("kubectl"))                      throw new CmdletInvocationException(Resources.KubectlIsRequriedToBeInstalledAndOnYourPathToExecute);                    var tmpFileName = Path.GetTempFileName();                  var encoded = Client.ManagedClusters.GetAccessProfiles(ResourceGroupName' Name' "clusterUser")                      .KubeConfig;                  AzureSession.Instance.DataStore.WriteFile(                      tmpFileName'                      Encoding.UTF8.GetString(Convert.FromBase64String(encoded)));                    WriteVerbose(string.Format(                      Resources.RunningKubectlGetPodsKubeconfigNamespaceSelector'                      tmpFileName));                  var proc = new Process                  {                      StartInfo = new ProcessStartInfo                      {                          FileName = "kubectl"'                          Arguments = $"get pods --kubeconfig {tmpFileName} --namespace kube-system --output name --selector k8s-app=kubernetes-dashboard"'                          UseShellExecute = false'                          RedirectStandardOutput = true'                          CreateNoWindow = true                      }                  };                  proc.Start();                  var dashPodName = proc.StandardOutput.ReadToEnd();                  proc.WaitForExit();                    // remove "pods/"                  dashPodName = dashPodName.Substring(5).TrimEnd('\r'' '\n');                    WriteVerbose(string.Format(                      Resources.RunningInBackgroundJobKubectlTunnel'                      tmpFileName' dashPodName));                    var exitingJob = JobRepository.Jobs.FirstOrDefault(j => j.Name == "Kubectl-Tunnel");                  if (exitingJob != null)                  {                      WriteVerbose(Resources.StoppingExistingKubectlTunnelJob);                      exitingJob.StopJob();                      JobRepository.Remove(exitingJob);                  }                    var job = new KubeTunnelJob(tmpFileName' dashPodName);                  if (!DisableBrowser)                  {                      WriteVerbose(Resources.SettingUpBrowserPop);                      job.StartJobCompleted += (sender' evt) =>                      {                          WriteVerbose(string.Format(Resources.StartingBrowser' ProxyUrl));                          PopBrowser(ProxyUrl);                      };                  }                    JobRepository.Add(job);                  job.StartJob();                  WriteObject(job);              });
Magic Number,Microsoft.Azure.Commands.Aks,KubeTunnelJob,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Commands\StartAzureRmAksDashboard.cs,StartJob,The following statement contains a magic number: TestMockSupport.Delay(1500);
Missing Default,Microsoft.Azure.Commands.Aks,ImportAzureRmAksCredential,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Commands\ImportAzureRmAksCredential.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)              {                  case IdParameterSet:                  {                      var resource = new ResourceIdentifier(Id);                      ResourceGroupName = resource.ResourceGroupName;                      Name = resource.ResourceName;                      break;                  }                  case InputObjectParameterSet:                  {                      var resource = new ResourceIdentifier(InputObject.Id);                      ResourceGroupName = resource.ResourceGroupName;                      Name = resource.ResourceName;                      break;                  }              }
Missing Default,Microsoft.Azure.Commands.Aks,RemoveAzureRmAks,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Commands\RemoveAzureRmAks.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)              {                  case IdParameterSet:                      {                          var resource = new ResourceIdentifier(Id);                          ResourceGroupName = resource.ResourceGroupName;                          Name = resource.ResourceName;                          break;                      }                  case InputObjectParameterSet:                      {                          var resource = new ResourceIdentifier(InputObject.Id);                          ResourceGroupName = resource.ResourceGroupName;                          Name = resource.ResourceName;                          break;                      }              }
Missing Default,Microsoft.Azure.Commands.Aks,SetAzureRmAks,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Commands\SetAzureRmAks.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)              {                  case IdParameterSet:                  {                      var resource = new ResourceIdentifier(Id);                      ResourceGroupName = resource.ResourceGroupName;                      Name = resource.ResourceName;                      break;                  }                  case InputObjectParameterSet:                  {                      WriteVerbose(Resources.UsingClusterFromPipeline);                      cluster = PSMapper.Instance.Map<ManagedCluster>(InputObject);                      var resource = new ResourceIdentifier(cluster.Id);                      ResourceGroupName = resource.ResourceGroupName;                      Name = resource.ResourceName;                      break;                  }              }
Missing Default,Microsoft.Azure.Commands.Aks,StartAzureRmAksDashboard,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Aks\Aks\Commands\StartAzureRmAksDashboard.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)              {                  case IdParameterSet:                      {                          var resource = new ResourceIdentifier(Id);                          ResourceGroupName = resource.ResourceGroupName;                          Name = resource.ResourceName;                          break;                      }                  case InputObjectParameterSet:                      {                          var resource = new ResourceIdentifier(InputObject.Id);                          ResourceGroupName = resource.ResourceGroupName;                          Name = resource.ResourceName;                          break;                      }              }
