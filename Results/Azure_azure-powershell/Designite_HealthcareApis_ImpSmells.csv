Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Microsoft.Azure.Commands.HealthcareApis.Common,HealthcareApisBaseCmdlet,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\Common\HealthcareApisBaseCmdlet.cs,,The length of the parameter _healthcareApisManagementClientWrapper is 38.
Long Identifier,Microsoft.Azure.Commands.HealthcareApis.Common,HealthcareApisBaseCmdlet,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\Common\HealthcareApisBaseCmdlet.cs,,The length of the parameter HealthcareApisAccountNameAlias is 30.
Long Identifier,Microsoft.Azure.Commands.HealthcareApis.Commands,GetAzureRmHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\HealthcareApis\GetAzureRmHealthcareApisService.cs,ExecuteCmdlet,The length of the parameter healthcareApisServicesBySubscription is 36.
Long Identifier,Microsoft.Azure.Commands.HealthcareApis.Commands,GetAzureRmHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\HealthcareApis\GetAzureRmHealthcareApisService.cs,ExecuteCmdlet,The length of the parameter healthcareApisServicesResourceGroup is 35.
Long Identifier,Microsoft.Azure.Commands.HealthcareApis.Commands,SetAzureRmHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\HealthcareApis\SetAzureRmHealthcareApisService.cs,ExecuteCmdlet,The length of the parameter healthcareApisFhirServiceUpdateAccount is 38.
Long Identifier,Microsoft.Azure.Commands.HealthcareApis.Commands,SetAzureRmHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\HealthcareApis\SetAzureRmHealthcareApisService.cs,ExecuteCmdlet,The length of the parameter healthcareApisFhirServiceUpdateAccount is 38.
Long Identifier,Microsoft.Azure.Commands.HealthcareApis.Commands,SetAzureRmHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\HealthcareApis\SetAzureRmHealthcareApisService.cs,IsCorsCredentialsAllowed,The length of the parameter currentAllowCorsCrendentialsValue is 33.
Long Identifier,Microsoft.Azure.Commands.HealthcareApis.Models,PSHealthcareApisFhirServiceAuthenticationConfig,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\Models\PSHealthcareApisFhirServiceAuthenticationConfig.cs,PSHealthcareApisFhirServiceAuthenticationConfig,The length of the parameter serviceAuthenticationConfigurationInfo is 38.
Long Identifier,Microsoft.Azure.Commands.HealthcareApis.Models,PSHealthcareApisFhirServiceCosmosDbConfig,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\Models\PSHealthcareApisFhirServiceCosmosDbConfig.cs,PSHealthcareApisFhirServiceCosmosDbConfig,The length of the parameter serviceCosmosDbConfigurationInfo is 32.
Long Statement,Microsoft.Azure.Commands.HealthcareApis.Common,HealthcareApisBaseCmdlet,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\Common\HealthcareApisBaseCmdlet.cs,ParseKind,The length of the statement  "            else if (kind.Equals("fhir-stu3"' StringComparison.OrdinalIgnoreCase) || kind.Equals("stu3"' StringComparison.OrdinalIgnoreCase)) " is 129.
Long Statement,Microsoft.Azure.Commands.HealthcareApis.Common,HealthcareApisBaseCmdlet,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\Common\HealthcareApisBaseCmdlet.cs,ParseKind,The length of the statement  "            else if (kind.Equals("fhir-r4"' StringComparison.OrdinalIgnoreCase) || kind.Equals("r4"' StringComparison.OrdinalIgnoreCase)) " is 125.
Long Statement,Microsoft.Azure.Commands.HealthcareApis.Commands,GetAzureRmHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\HealthcareApis\GetAzureRmHealthcareApisService.cs,ExecuteCmdlet,The length of the statement  "                                        IPage<ServicesDescription> healthcareApisServicesResourceGroup = this.HealthcareApisClient.Services.ListByResourceGroup(this.ResourceGroupName); " is 144.
Long Statement,Microsoft.Azure.Commands.HealthcareApis.Commands,NewAzureRmHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\HealthcareApis\NewAzureRmHealthcareApisService.cs,ExecuteCmdlet,The length of the statement  "                            AuthenticationConfiguration = new ServiceAuthenticationConfigurationInfo() { Authority = GetAuthority()' Audience = GetAudience()' SmartProxyEnabled = EnableSmartProxy.ToBool() }' " is 179.
Long Statement,Microsoft.Azure.Commands.HealthcareApis.Commands,NewAzureRmHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\HealthcareApis\NewAzureRmHealthcareApisService.cs,ExecuteCmdlet,The length of the statement  "                            CorsConfiguration = new ServiceCorsConfigurationInfo() { Origins = CorsOrigin' Headers = CorsHeader' Methods = CorsMethod' MaxAge = CorsMaxAge' AllowCredentials = AllowCorsCredential }' " is 185.
Long Statement,Microsoft.Azure.Commands.HealthcareApis.Commands,SetAzureRmHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\HealthcareApis\SetAzureRmHealthcareApisService.cs,ExecuteCmdlet,The length of the statement  "                                    var createAccountResponse = this.HealthcareApisClient.Services.CreateOrUpdate(this.ResourceGroupName' this.Name' servicesDescription); " is 134.
Long Statement,Microsoft.Azure.Commands.HealthcareApis.Commands,SetAzureRmHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\HealthcareApis\SetAzureRmHealthcareApisService.cs,GenerateServiceDescription,The length of the statement  "                        SmartProxyEnabled = IsSmartOnFhirEnabled(healthcareApisAccount.Properties.AuthenticationConfiguration.SmartProxyEnabled) " is 120.
Long Statement,Microsoft.Azure.Commands.HealthcareApis.Commands,SetAzureRmHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\HealthcareApis\SetAzureRmHealthcareApisService.cs,InputObjectToServiceDescription,The length of the statement  "                        SmartProxyEnabled = InputObject.SmartProxyEnabled != healthcareApisAccount.Properties.AuthenticationConfiguration.SmartProxyEnabled ? InputObject.SmartProxyEnabled : healthcareApisAccount.Properties.AuthenticationConfiguration.SmartProxyEnabled " is 244.
Long Statement,Microsoft.Azure.Commands.HealthcareApis.Commands,SetAzureRmHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\HealthcareApis\SetAzureRmHealthcareApisService.cs,InputObjectToServiceDescription,The length of the statement  "                        OfferThroughput = InputObject.CosmosDbOfferThroughput ?? healthcareApisAccount.Properties.CosmosDbConfiguration.OfferThroughput " is 127.
Long Statement,Microsoft.Azure.Commands.HealthcareApis.Commands,SetAzureRmHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\HealthcareApis\SetAzureRmHealthcareApisService.cs,InputObjectToServiceDescription,The length of the statement  "                        AllowCredentials = InputObject.CorsAllowCredentials ?? healthcareApisAccount.Properties.CorsConfiguration.AllowCredentials " is 122.
Magic Number,Microsoft.Azure.Commands.HealthcareApis.Models,PSHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\Models\PSHealthcareApisService.cs,ParseResourceGroupFromId,The following statement contains a magic number: return tokens[3];
Missing Default,Microsoft.Azure.Commands.HealthcareApis.Commands,GetAzureRmHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\HealthcareApis\GetAzureRmHealthcareApisService.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)                      {                          case ServiceNameParameterSet:                              {                                  try                                  {                                      var healthcareApisAccount = this.HealthcareApisClient.Services.Get(this.ResourceGroupName' this.Name);                                      WriteHealthcareApisAccount(healthcareApisAccount);                                  }                                  catch (ErrorDetailsException wex)                                  {                                      WriteError(WriteErrorforBadrequest(wex));                                  }                                  break;                              }                          case ResourceIdParameterSet:                              {                                  string resourceGroupName;                                  string resourceName;                                    if (ValidateAndExtractName(this.ResourceId' out resourceGroupName' out resourceName))                                  {                                      try                                      {                                          var healthcareApisAccount = this.HealthcareApisClient.Services.Get(resourceGroupName' resourceName);                                          WriteHealthcareApisAccount(healthcareApisAccount);                                      }                                      catch (ErrorDetailsException wex)                                      {                                          WriteError(WriteErrorforBadrequest(wex));                                      }                                  }                                  break;                              }                          case ListParameterSet:                              {                                  if (string.IsNullOrEmpty(this.ResourceGroupName))                                  {                                      try                                      {                                          IPage<ServicesDescription> healthcareApisServicesBySubscription = this.HealthcareApisClient.Services.List();                                          this.WriteObject(ToPSFhirServices(healthcareApisServicesBySubscription)' enumerateCollection: true);                                      }                                      catch (ErrorDetailsException wex)                                      {                                          WriteError(WriteErrorforBadrequest(wex));                                      }                                      break;                                  }                                  else                                  {                                      try                                      {                                          IPage<ServicesDescription> healthcareApisServicesResourceGroup = this.HealthcareApisClient.Services.ListByResourceGroup(this.ResourceGroupName);                                          this.WriteObject(ToPSFhirServices(healthcareApisServicesResourceGroup)' enumerateCollection: true);                                      }                                      catch (ErrorDetailsException wex)                                      {                                          WriteError(WriteErrorforBadrequest(wex));                                      }                                      break;                                  }                              }                      }
Missing Default,Microsoft.Azure.Commands.HealthcareApis.Commands,RemoveAzureRmHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\HealthcareApis\RemoveAzureRmHealthcareApisService.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)                      {                          case InputObjectParameterSet:                              {                                  rgName = InputObject.ResourceGroupName;                                  name = InputObject.Name;                                  break;                              }                          case ServiceNameParameterSet:                              {                                  rgName = this.ResourceGroupName;                                  name = this.Name;                                  break;                              }                          case ResourceIdParameterSet:                              {                                  ValidateAndExtractName(this.ResourceId' out rgName' out name);                                  break;                              }                      }
Missing Default,Microsoft.Azure.Commands.HealthcareApis.Commands,SetAzureRmHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\HealthcareApis\SetAzureRmHealthcareApisService.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)                      {                          case ServiceNameParameterSet:                              {                                  var healthcareApisAccount = this.HealthcareApisClient.Services.Get(this.ResourceGroupName' this.Name);                                    IList<ServiceAccessPolicyEntry> accessPolicies = GetAccessPolicies(healthcareApisAccount);                                    ServicesDescription servicesDescription = GenerateServiceDescription(healthcareApisAccount' accessPolicies);                                    try                                  {                                      var createAccountResponse = this.HealthcareApisClient.Services.CreateOrUpdate(this.ResourceGroupName' this.Name' servicesDescription);                                      var healthCareFhirService = this.HealthcareApisClient.Services.Get(this.ResourceGroupName' this.Name);                                      WriteHealthcareApisAccount(healthCareFhirService);                                  }                                  catch (ErrorDetailsException wex)                                  {                                      WriteError(WriteErrorforBadrequest(wex));                                  }                                    break;                              }                          case ResourceIdParameterSet:                              {                                  string rgName = null;                                  string name = null;                                  ValidateAndExtractName(this.ResourceId' out rgName' out name);                                    var healthcareApisAccount = this.HealthcareApisClient.Services.Get(rgName' name);                                    IList<ServiceAccessPolicyEntry> accessPolicies = GetAccessPolicies(healthcareApisAccount);                                    ServicesDescription servicesDescription = GenerateServiceDescription(healthcareApisAccount' accessPolicies);                                    try                                  {                                      var healthcareApisFhirServiceUpdateAccount = this.HealthcareApisClient.Services.CreateOrUpdate(                                                      rgName'                                                      name'                                                      servicesDescription);                                      var healthCareFhirService = this.HealthcareApisClient.Services.Get(rgName' name);                                      WriteHealthcareApisAccount(healthCareFhirService);                                  }                                  catch (ErrorDetailsException wex)                                  {                                      WriteError(WriteErrorforBadrequest(wex));                                  }                                    break;                              }                          case InputObjectParameterSet:                              {                                  IList<PSHealthcareApisFhirServiceAccessPolicyEntry> entries = InputObject.AccessPolicies;                                  List<ServiceAccessPolicyEntry> accessPolicies = new List<ServiceAccessPolicyEntry>();                                    foreach (PSHealthcareApisFhirServiceAccessPolicyEntry entry in entries)                                  {                                      accessPolicies.Add(new ServiceAccessPolicyEntry(entry.ObjectId));                                  }                                    var healthcareApisAccount = this.HealthcareApisClient.Services.Get(InputObject.ResourceGroupName'                                                   InputObject.Name);                                      ServicesDescription servicesDescription = InputObjectToServiceDescription(healthcareApisAccount' accessPolicies);                                    try                                  {                                      var healthcareApisFhirServiceUpdateAccount = this.HealthcareApisClient.Services.CreateOrUpdate(                                                       InputObject.ResourceGroupName'                                                       InputObject.Name'                                                       servicesDescription);                                        WriteHealthcareApisAccount(healthcareApisFhirServiceUpdateAccount);                                  }                                  catch (ErrorDetailsException wex)                                  {                                      WriteError(WriteErrorforBadrequest(wex));                                  }                                  break;                              }                      }
Missing Default,Microsoft.Azure.Commands.HealthcareApis.Models,PSHealthcareApisService,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HealthcareApis\HealthcareApis\Models\PSHealthcareApisService.cs,GetKindValue,The following switch statement is missing a default case: switch (kind)              {                  case Management.HealthcareApis.Models.Kind.Fhir:                      return "fhir-R4";                  case Management.HealthcareApis.Models.Kind.FhirStu3:                      return "fhir-Stu3";                  case Management.HealthcareApis.Models.Kind.FhirR4:                      return "fhir-R4";              }
