Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Microsoft.Azure.Commands.Maps.MapsAccount,MapsAccountBaseCmdlet,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Maps\Maps\MapsAccount\MapsAccountBaseCmdlet.cs,,The length of the parameter _mapsMapsManagementClientWrapper is 32.
Long Statement,Microsoft.Azure.Commands.Maps.MapsAccount,NewAzureMapsAccountKey,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Maps\Maps\MapsAccount\NewAzureMapsAccountKey.cs,ExecuteCmdlet,The length of the statement  "                    && ShouldProcess(name' string.Format(CultureInfo.CurrentCulture' Resources.NewAccountKey_ProcessMessage' this.KeyName' name))) " is 126.
Magic Number,Microsoft.Azure.Commands.Maps.Models,PSMapsAccount,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Maps\Maps\Models\PSMapsAccount.cs,ParseResourceGroupFromId,The following statement contains a magic number: return tokens[3];
Missing Default,Microsoft.Azure.Commands.Maps.MapsAccount,GetAzureMapsAccount,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Maps\Maps\MapsAccount\GetAzureMapsAccount.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)                  {                      case AccountNameParameterSet:                      {                          var mapsAccount = this.MapsClient.Accounts.Get(this.ResourceGroupName' this.Name);                          WriteMapsAccount(mapsAccount);                          break;                      }                      case ResourceGroupParameterSet:                      {                          if (string.IsNullOrEmpty(this.ResourceGroupName))                          {                              var mapsAccounts = this.MapsClient.Accounts.ListBySubscription();                              WriteMapsAccountList(mapsAccounts);                          }                          else                          {                              var mapsAccounts = this.MapsClient.Accounts.ListByResourceGroup(this.ResourceGroupName);                              WriteMapsAccountList(mapsAccounts);                          }                          break;                      }                      case ResourceIdParameterSet:                      {                          string resourceGroupName;                          string resourceName;                            if (ValidateAndExtractName(this.ResourceId' out resourceGroupName' out resourceName))                          {                              var mapsAccount = this.MapsClient.Accounts.Get(resourceGroupName' resourceName);                              WriteMapsAccount(mapsAccount);                          }                          break;                      }                  }
Missing Default,Microsoft.Azure.Commands.Maps.MapsAccount,GetAzureMapsAccountKey,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Maps\Maps\MapsAccount\GetAzureMapsAccountKey.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)                  {                      case InputObjectParameterSet:                      {                          rgName = InputObject.ResourceGroupName;                          name = InputObject.AccountName;                          break;                      }                      case NameParameterSet:                      {                          rgName = this.ResourceGroupName;                          name = this.Name;                          break;                      }                      case ResourceIdParameterSet:                      {                          ValidateAndExtractName(this.ResourceId' out rgName' out name);                          break;                      }                  }
Missing Default,Microsoft.Azure.Commands.Maps.MapsAccount,NewAzureMapsAccountKey,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Maps\Maps\MapsAccount\NewAzureMapsAccountKey.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)                  {                      case InputObjectParameterSet:                      {                          rgName = InputObject.ResourceGroupName;                          name = InputObject.AccountName;                          break;                      }                      case NameParameterSet:                      {                          rgName = this.ResourceGroupName;                          name = this.Name;                          break;                      }                      case ResourceIdParameterSet:                      {                          ValidateAndExtractName(this.ResourceId' out rgName' out name);                          break;                      }                  }
Missing Default,Microsoft.Azure.Commands.Maps.MapsAccount,RemoveAzureMapsAccount,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Maps\Maps\MapsAccount\RemoveAzureMapsAccount.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)                  {                      case InputObjectParameterSet:                      {                          rgName = InputObject.ResourceGroupName;                          name = InputObject.AccountName;                          break;                      }                      case NameParameterSet:                      {                          rgName = this.ResourceGroupName;                          name = this.Name;                          break;                      }                      case ResourceIdParameterSet:                      {                          ValidateAndExtractName(this.ResourceId' out rgName' out name);                          break;                      }                  }
