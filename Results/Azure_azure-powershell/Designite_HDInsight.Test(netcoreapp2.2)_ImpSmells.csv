Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,CreateNewHDInsightCluster,The method has 125 lines of code.
Long Method,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,CanCreateNewHDInsightCluster_LinuxComponentVersion,The method has 102 lines of code.
Long Identifier,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,,The length of the parameter scriptActionDetailWithApplicationName is 37.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,HDInsightTestBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\HDInsightTestBase.cs,SetupManagementClientForJobTests,The length of the statement  "                id: $"/subscriptions/{Guid.NewGuid()}/resourceGroups/{ResourceGroupName}/providers/Microsoft.HDInsight/clusters/{ClusterName}"' " is 127.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,HDInsightTestBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\HDInsightTestBase.cs,SetupManagementClientForJobTests,The length of the statement  "                    ConnectivityEndpoints = new List<ConnectivityEndpoint> { new ConnectivityEndpoint { Location = ClusterName' Name = "HTTPS" } } " is 126.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,HDInsightTestBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\HDInsightTestBase.cs,SetupManagementClientForJobTests,The length of the statement  "            hdinsightManagementMock.Setup(c => c.GetClusterConfigurations(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<string>())) " is 122.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,ConfigurationTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ConfigurationTests.cs,CreateNewConfig,The length of the statement  "                                ((!setEdgeNodeVmSize && string.IsNullOrEmpty(c.EdgeNodeSize)) || (setEdgeNodeVmSize && c.EdgeNodeSize == "edgeNodeVmSizeSetTest")) && " is 133.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,ConfigurationTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ConfigurationTests.cs,CustomizeSpark,The length of the statement  "                                c.Configurations[ConfigurationKey.SparkDefaults]["spark.executor.instances"].Equals(sparkDefaults["spark.executor.instances"]) && " is 129.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,ConfigurationTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ConfigurationTests.cs,CustomizeSpark,The length of the statement  "                                c.Configurations[ConfigurationKey.SparkThriftConf]["spark.executor.cores"].Equals(sparkThriftConf["spark.executor.cores"])) || " is 126.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,ConfigurationTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ConfigurationTests.cs,CustomizeSpark,The length of the statement  "                                c.Configurations[ConfigurationKey.Spark2Defaults]["spark.executor.instances"].Equals(sparkDefaults["spark.executor.instances"]) && " is 130.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,ConfigurationTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ConfigurationTests.cs,CustomizeSpark,The length of the statement  "                                c.Configurations[ConfigurationKey.Spark2ThriftConf]["spark.executor.cores"].Equals(sparkThriftConf["spark.executor.cores"])))))' " is 128.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,JobTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\JobTests.cs,ListJobs,The length of the statement  "                    f.WriteObject(It.Is<IEnumerable<string>>(job => job.ElementAt(0).Equals(jobListResponse.ElementAt(0).Detail.Id) && job.ElementAt(1).Equals(jobListResponse.ElementAt(1).Detail.Id))' true)); " is 188.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,JobTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\JobTests.cs,ListJobsAfterJobId,The length of the statement  "                    f.WriteObject(It.Is<IEnumerable<AzureHDInsightJob>>(job => job.ElementAt(0).JobId.Equals(jobListResponse.ElementAt(0).Detail.Id) && job.ElementAt(1).JobId.Equals(jobListResponse.ElementAt(1).Detail.Id))' true)); " is 211.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,JobTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\JobTests.cs,WaitForJobCompletion_TimeOut,The length of the statement  "            var expectedExceptionMessage = "HDInsight job with ID {0} has not completed in {1} seconds. Increase the value of -TimeoutInSeconds or check the job runtime."; " is 159.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,JobTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\JobTests.cs,WaitForJobCompletion_Internal,The length of the statement  "                var expectedExceptionMessage = string.Format(CultureInfo.InvariantCulture' expectedMessageFormat' cmdlet.JobId' cmdlet.TimeoutInSeconds); " is 137.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,JobTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\JobTests.cs,GetWaitAzureHDInsightJobCommandDefinition,The length of the statement  "                .Callback((string id' TimeSpan? duration' TimeSpan? interval) => { jobDetails = MockJobCompletion(id' jobCompetionType); }) " is 123.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,CanCreateNewHDInsightCluster,The length of the statement  "            hdinsightManagementMock.Setup(c => c.CreateNewCluster(ResourceGroupName' ClusterName' OSType.Linux' It.Is<ClusterCreateParameters>( " is 131.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,CreateNewHDInsightCluster,The length of the statement  "                        ((!setEdgeNodeVmSize && parameters.EdgeNodeSize == null) || (setEdgeNodeVmSize && parameters.EdgeNodeSize == "edgeNodeVmSizeSetTest")) && " is 137.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,CreateNewHDInsightCluster,The length of the statement  "                        (workerNodeDataDisks == 0) || (workerNodeDataDisks > 0 && parameters.WorkerNodeDataDisksGroups.First().DisksPerNode == workerNodeDataDisks)))) " is 142.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,CanCreateNewHDInsightCluster_LinuxComponentVersion,The length of the statement  "            hdinsightManagementMock.Setup(c => c.CreateNewCluster(ResourceGroupName' ClusterName' OSType.Linux' It.Is<ClusterCreateParameters>( " is 131.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,TestStorageAccountTypeDefaultsToAzureStorage,The length of the statement  "            hdinsightManagementMock.Setup(c => c.CreateNewCluster(ResourceGroupName' ClusterName'  OSType.Linux' It.IsAny<ClusterCreateParameters>())); " is 139.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,TestStorageAccountTypeDefaultsToAzureStorage,The length of the statement  "            hdinsightManagementMock.Verify(c => c.CreateNewCluster(It.IsAny<string>()' It.IsAny<string>()' OSType.Linux' It.Is<ClusterCreateParameters>( " is 140.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,TestStorageAccountTypeAzureStorage,The length of the statement  "            hdinsightManagementMock.Setup(c => c.CreateNewCluster(ResourceGroupName' ClusterName' OSType.Linux' It.IsAny<ClusterCreateParameters>())); " is 138.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,TestStorageAccountTypeAzureStorage,The length of the statement  "            hdinsightManagementMock.Verify(c => c.CreateNewCluster(It.IsAny<string>()' It.IsAny<string>()' OSType.Linux' It.Is<ClusterCreateParameters>( " is 140.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,TestStorageAccountTypeAzureDataLakeStore,The length of the statement  "            hdinsightManagementMock.Setup(c => c.CreateNewCluster(ResourceGroupName' ClusterName' OSType.Linux' It.IsAny<ClusterCreateParameters>())); " is 138.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,TestStorageAccountTypeAzureDataLakeStore,The length of the statement  "            hdinsightManagementMock.Verify(c => c.CreateNewCluster(It.IsAny<string>()' It.IsAny<string>()' OSType.Linux' It.Is<ClusterCreateParameters>( " is 140.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,PremiumClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\PremiumClusterTests.cs,CanCreateNewPremiumHDInsightCluster,The length of the statement  "            hdinsightManagementMock.Setup(c => c.CreateNewCluster(ResourceGroupName' ClusterName' OSType.Linux' It.Is<ClusterCreateParameters>( " is 131.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,SubmitScriptAction,The length of the statement  "                NodeTypes = scriptActionDetail.Roles.Select(r => (RuntimeScriptActionClusterNodeType)Enum.Parse(typeof(RuntimeScriptActionClusterNodeType)' r' true)).ToArray()' " is 160.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,SubmitScriptAction,The length of the statement  "                It.Is<ExecuteScriptActionParameters>(param => CompareScriptActions(param.ScriptActions.First()' scriptActionDetail) && param.PersistOnSuccess == true))) " is 152.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,SubmitScriptAction,The length of the statement  "            hdinsightManagementMock.Verify(c => c.ExecuteScriptActions(ResourceGroupName' ClusterName' It.IsAny<ExecuteScriptActionParameters>())' " is 134.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,SubmitScriptActionOnEdgeNode,The length of the statement  "                NodeTypes = scriptActionDetailWithApplicationName.Roles.Select(r => (RuntimeScriptActionClusterNodeType)Enum.Parse(typeof(RuntimeScriptActionClusterNodeType)' r' true)).ToArray()' " is 179.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,SubmitScriptActionOnEdgeNode,The length of the statement  "                It.Is<ExecuteScriptActionParameters>(param => CompareScriptActions(param.ScriptActions.First()' scriptActionDetailWithApplicationName) && param.PersistOnSuccess == false))) " is 172.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,SubmitScriptActionOnEdgeNode,The length of the statement  "                        CompareScriptActions(scriptOperationResource' new AzureHDInsightRuntimeScriptAction(scriptActionDetailWithApplicationName)) && " is 126.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,SubmitScriptActionOnEdgeNode,The length of the statement  "            hdinsightManagementMock.Verify(c => c.ExecuteScriptActions(ResourceGroupName' ClusterName' It.IsAny<ExecuteScriptActionParameters>())' " is 134.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,PromoteScriptAction,The length of the statement  "            hdinsightManagementMock.Setup(c => c.PromoteScript(ResourceGroupName' ClusterName' scriptActionDetail.ScriptExecutionId.Value)) " is 127.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,PromoteScriptAction,The length of the statement  "            hdinsightManagementMock.Verify(c => c.PromoteScript(ResourceGroupName' ClusterName' scriptActionDetail.ScriptExecutionId.Value)' " is 128.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,GetScriptExecutionDetail,The length of the statement  "            hdinsightManagementMock.Setup(c => c.GetScriptExecutionDetail(ResourceGroupName' ClusterName' scriptActionDetail.ScriptExecutionId.Value)) " is 138.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,GetScriptExecutionDetail,The length of the statement  "            hdinsightManagementMock.Verify(c => c.GetScriptExecutionDetail(ResourceGroupName' ClusterName' scriptActionDetail.ScriptExecutionId.Value)' " is 139.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,CompareScriptActions,The length of the statement  "            return CompareScriptActions(new AzureHDInsightRuntimeScriptAction(scriptA)' new AzureHDInsightRuntimeScriptAction(scriptB)); " is 124.
Long Statement,Microsoft.Azure.Commands.HDInsight.Test,SecurityProfileTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\SecurityProfileTests.cs,CanCreateNewSecurityProfile,The length of the statement  "                                c.SecurityProfile.ClusterUsersGroupDNs.ArrayToString("").Equals(newconfigcmdlet.ClusterUsersGroupDNs.ArrayToString(""))))' " is 122.
Long Statement,Commands.HDInsight.Test.ScenarioTests,TestController,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\ScenarioTests\TestController.cs,SetupManagementClient,The length of the statement  "            _helper.SetupManagementClients(ResourceManagementClient' HDInsightManagementClient' StorageManagementClient' OperationalInsightsManagementClient); " is 146.
Virtual Method Call from Constructor,Commands.HDInsight.Test.UnitTests,DataLakeStoreDefaultFilesystemTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\DataLakeStoreDefaultFilesystemTests.cs,DataLakeStoreDefaultFilesystemTests,The constructor "DataLakeStoreDefaultFilesystemTests" calls a virtual method "SetupTestsForManagement".
Virtual Method Call from Constructor,Commands.HDInsight.Test.UnitTests,DataLakeStoreTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\DataLakeStoreTests.cs,DataLakeStoreTests,The constructor "DataLakeStoreTests" calls a virtual method "SetupTestsForManagement".
Virtual Method Call from Constructor,Microsoft.Azure.Commands.HDInsight.Test,ConfigurationTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ConfigurationTests.cs,ConfigurationTests,The constructor "ConfigurationTests" calls a virtual method "SetupTestsForManagement".
Virtual Method Call from Constructor,Microsoft.Azure.Commands.HDInsight.Test,GetClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\GetClusterTests.cs,GetClusterTests,The constructor "GetClusterTests" calls a virtual method "SetupTestsForManagement".
Virtual Method Call from Constructor,Microsoft.Azure.Commands.HDInsight.Test,GetPropertiesTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\GetPropertiesTests.cs,GetPropertiesTests,The constructor "GetPropertiesTests" calls a virtual method "SetupTestsForManagement".
Virtual Method Call from Constructor,Microsoft.Azure.Commands.HDInsight.Test,HttpTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\HttpTests.cs,HttpTests,The constructor "HttpTests" calls a virtual method "SetupTestsForManagement".
Virtual Method Call from Constructor,Microsoft.Azure.Commands.HDInsight.Test,JobTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\JobTests.cs,JobTests,The constructor "JobTests" calls a virtual method "SetupTestsForData".
Virtual Method Call from Constructor,Microsoft.Azure.Commands.HDInsight.Test,MonitoringTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\MonitoringTests.cs,MonitoringTests,The constructor "MonitoringTests" calls a virtual method "SetupTestsForManagement".
Virtual Method Call from Constructor,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,NewClusterTests,The constructor "NewClusterTests" calls a virtual method "SetupTestsForManagement".
Virtual Method Call from Constructor,Microsoft.Azure.Commands.HDInsight.Test,PremiumClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\PremiumClusterTests.cs,PremiumClusterTests,The constructor "PremiumClusterTests" calls a virtual method "SetupTestsForManagement".
Virtual Method Call from Constructor,Microsoft.Azure.Commands.HDInsight.Test,ResizeClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ResizeClusterTests.cs,ResizeClusterTests,The constructor "ResizeClusterTests" calls a virtual method "SetupTestsForManagement".
Virtual Method Call from Constructor,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,ScriptActionTests,The constructor "ScriptActionTests" calls a virtual method "SetupTestsForManagement".
Virtual Method Call from Constructor,Microsoft.Azure.Commands.HDInsight.Test,SecurityProfileTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\SecurityProfileTests.cs,SecurityProfileTests,The constructor "SecurityProfileTests" calls a virtual method "SetupTestsForManagement".
Empty Catch Block,Microsoft.Azure.Commands.HDInsight.Test,JobTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\JobTests.cs,WaitForJobCompletion_Fail,The method has an empty catch block.
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,HDInsightTestBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\HDInsightTestBase.cs,SetupManagementClientForJobTests,The following statement contains a magic number: var cluster1 = new Cluster(                  id: $"/subscriptions/{Guid.NewGuid()}/resourceGroups/{ResourceGroupName}/providers/Microsoft.HDInsight/clusters/{ClusterName}"'                  name: ClusterName)              {                  Location = Location'                  Properties = new ClusterGetProperties                  {                      ClusterVersion = "3.6"'                      ClusterState = "Running"'                      ClusterDefinition = new ClusterDefinition                      {                          Kind = ClusterType                      }'                      QuotaInfo = new QuotaInfo                      {                          CoresUsed = 24                      }'                      OsType = OSType.Linux'                      ConnectivityEndpoints = new List<ConnectivityEndpoint> { new ConnectivityEndpoint { Location = ClusterName' Name = "HTTPS" } }                  }              };
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,ConfigurationTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ConfigurationTests.cs,CanAddSpark2CustomConfigs,The following statement contains a magic number: CustomizeSpark(2);
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,ConfigurationTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ConfigurationTests.cs,CustomizeSpark,The following statement contains a magic number: commandRuntimeMock.Verify(                  f =>                      f.WriteObject(                          It.Is<AzureHDInsightConfig>(                              c =>                                  c.Configurations != null &&                                  ((sparkVersion == 1 && c.Configurations.ContainsKey(ConfigurationKey.SparkDefaults) &&                                  c.Configurations[ConfigurationKey.SparkDefaults]["spark.executor.instances"].Equals(sparkDefaults["spark.executor.instances"]) &&                                  c.Configurations.ContainsKey(ConfigurationKey.SparkThriftConf) &&                                  c.Configurations[ConfigurationKey.SparkThriftConf]["spark.executor.cores"].Equals(sparkThriftConf["spark.executor.cores"])) ||                                  (sparkVersion == 2 &&  c.Configurations.ContainsKey(ConfigurationKey.Spark2Defaults) &&                                  c.Configurations[ConfigurationKey.Spark2Defaults]["spark.executor.instances"].Equals(sparkDefaults["spark.executor.instances"]) &&                                  c.Configurations.ContainsKey(ConfigurationKey.Spark2ThriftConf) &&                                  c.Configurations[ConfigurationKey.Spark2ThriftConf]["spark.executor.cores"].Equals(sparkThriftConf["spark.executor.cores"])))))'                  Times.Once);
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,GetClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\GetClusterTests.cs,CanGetHDInsightCluster,The following statement contains a magic number: var cluster = new Cluster(id: "id"' name: ClusterName)              {                  Location = Location'                  Properties = new ClusterGetProperties                  {                      ClusterVersion = "3.6"'                      ClusterState = "Running"'                      ClusterDefinition = new ClusterDefinition                      {                          Kind = ClusterType                      }'                      QuotaInfo = new QuotaInfo                      {                          CoresUsed = 24                      }'                      OsType = OSType.Linux                  }              };
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,GetClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\GetClusterTests.cs,CanListHDInsightClustersInRG,The following statement contains a magic number: var cluster1 = new Cluster(id: "id"' name: ClusterName + "1")              {                  Location = Location'                  Properties = new ClusterGetProperties                  {                      ClusterVersion = "3.6"'                      ClusterState = "Running"'                      ClusterDefinition = new ClusterDefinition                      {                          Kind = ClusterType                      }'                      QuotaInfo = new QuotaInfo                      {                          CoresUsed = 24                      }'                      OsType = OSType.Linux                  }              };
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,GetClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\GetClusterTests.cs,CanListHDInsightClustersInRG,The following statement contains a magic number: var cluster2 = new Cluster(id: "id"' name: ClusterName + "2")              {                  Location = Location'                  Properties = new ClusterGetProperties                  {                      ClusterVersion = "3.6"'                      ClusterState = "Running"'                      ClusterDefinition = new ClusterDefinition                      {                          Kind = ClusterType                      }'                      QuotaInfo = new QuotaInfo                      {                          CoresUsed = 24                      }'                      OsType = OSType.Linux                  }              };
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,GetClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\GetClusterTests.cs,CanListHDInsightClustersInRG,The following statement contains a magic number: commandRuntimeMock.Verify(                  f =>                      f.WriteObject(                          It.Is<List<AzureHDInsightCluster>>(                              list =>                                  list.Count == 2 &&                                  list.Any(c => c.Name == cluster1.Name) &&                                  list.Any(c => c.Name == cluster2.Name))' true)' Times.Once);
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,GetClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\GetClusterTests.cs,CanListHDInsightClusters,The following statement contains a magic number: var cluster1 = new Cluster(id: "id"' name: ClusterName + "1")              {                  Location = Location'                  Properties = new ClusterGetProperties                  {                      ClusterVersion = "3.6"'                      ClusterState = "Running"'                      ClusterDefinition = new ClusterDefinition                      {                          Kind = ClusterType                      }'                      QuotaInfo = new QuotaInfo                      {                          CoresUsed = 24                      }'                      OsType = OSType.Linux                  }              };
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,GetClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\GetClusterTests.cs,CanListHDInsightClusters,The following statement contains a magic number: var cluster2 = new Cluster(id: "id"' name: ClusterName + "2")              {                  Location = Location'                  Properties = new ClusterGetProperties                  {                      ClusterVersion = "3.6"'                      ClusterState = "Running"'                      ClusterDefinition = new ClusterDefinition                      {                          Kind = ClusterType                      }'                      QuotaInfo = new QuotaInfo                      {                          CoresUsed = 24                      }'                      OsType = OSType.Linux                  }              };
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,GetClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\GetClusterTests.cs,CanListHDInsightClusters,The following statement contains a magic number: commandRuntimeMock.Verify(                  f =>                      f.WriteObject(                          It.Is<List<AzureHDInsightCluster>>(                              list =>                                  list.Count == 2 &&                                  list.Any(c => c.Name == cluster1.Name) &&                                  list.Any(c => c.Name == cluster2.Name))' true)' Times.Once);
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,JobTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\JobTests.cs,ListJobsAfterJobId,The following statement contains a magic number: cmdlet.NumOfJobs = 2;
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,JobTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\JobTests.cs,GetWaitAzureHDInsightJobCommandDefinition,The following statement contains a magic number: var cmdlet = new WaitAzureHDInsightJobCommand              {                  CommandRuntime = commandRuntimeMock.Object'                  HDInsightJobClient = hdinsightJobManagementMock.Object'                  HDInsightManagementClient = hdinsightManagementMock.Object'                  HttpCredential = new PSCredential("httpuser"' string.Format("Password1!").ConvertToSecureString())'                  ClusterName = ClusterName'                  JobId = jobId'                  TimeoutInSeconds = 10              };
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,JobTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\JobTests.cs,GetWaitAzureHDInsightJobCommandDefinition,The following statement contains a magic number: TimeSpan? jobDuration = TimeSpan.FromSeconds(10);
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,CanCreateNewHDInsightCluster,The following statement contains a magic number: var cluster = new Cluster(id: "id"' name: ClusterName)              {                  Location = Location'                  Properties = new ClusterGetProperties                  {                      ClusterVersion = "3.6"'                      ClusterState = "Running"'                      ClusterDefinition = new ClusterDefinition                      {                          Kind = ClusterType                      }'                      QuotaInfo = new QuotaInfo                      {                          CoresUsed = 24                      }'                      OsType = OSType.Linux                  }              };
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,CanCreateNewHDInsightCluster,The following statement contains a magic number: commandRuntimeMock.Verify(f => f.WriteObject(It.Is<AzureHDInsightCluster>(                  clusterout =>                      clusterout.ClusterState == "Running" &&                      clusterout.ClusterType == ClusterType &&                      clusterout.ClusterVersion == "3.6" &&                      clusterout.CoresUsed == 24 &&                      clusterout.Location == Location &&                      clusterout.Name == ClusterName &&                      clusterout.OperatingSystemType == OSType.Linux))'                      Times.Once);
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,CanCreateNewHDInsightCluster_Linux,The following statement contains a magic number: commandRuntimeMock.Verify(f => f.WriteObject(It.Is<AzureHDInsightCluster>(                  clusterout =>                      clusterout.ClusterState == "Running" &&                      clusterout.ClusterType == ClusterType &&                      clusterout.ClusterVersion == HdiVersion &&                      clusterout.CoresUsed == 24 &&                      clusterout.Location == Location &&                      clusterout.Name == ClusterName &&                      clusterout.OperatingSystemType == OSType.Linux))'                  Times.Once);
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,CanCreateNewHDInsightCluster_Secure_Linux,The following statement contains a magic number: commandRuntimeMock.Verify(f => f.WriteObject(It.Is<AzureHDInsightCluster>(                  clusterout =>                      clusterout.ClusterState == "Running" &&                      clusterout.ClusterType == ClusterType &&                      clusterout.ClusterVersion == HdiVersion &&                      clusterout.CoresUsed == 24 &&                      clusterout.Location == Location &&                      clusterout.Name == ClusterName &&                      clusterout.OperatingSystemType == OSType.Linux &&                      clusterout.SecurityProfile.Domain.Equals(cmdlet.SecurityProfile.Domain) &&                      clusterout.SecurityProfile.DomainUserCredential.UserName.Equals(                          cmdlet.SecurityProfile.DomainUserCredential.UserName) &&                      clusterout.SecurityProfile.OrganizationalUnitDN.Equals(cmdlet.SecurityProfile.OrganizationalUnitDN) &&                      clusterout.SecurityProfile.LdapsUrls.ArrayToString("")                          .Equals(cmdlet.SecurityProfile.LdapsUrls.ArrayToString("")) &&                      clusterout.SecurityProfile.ClusterUsersGroupDNs.ArrayToString("")                          .Equals(cmdlet.SecurityProfile.ClusterUsersGroupDNs.ArrayToString(""))))'                  Times.Once);
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,CreateNewHDInsightCluster,The following statement contains a magic number: var cluster = new Cluster(id: "id"' name: ClusterName)              {                  Location = Location'                  Properties = new ClusterGetProperties                  {                      ClusterVersion = HdiVersion'                      ClusterState = "Running"'                      ClusterDefinition = new ClusterDefinition                      {                          Kind = ClusterType                      }'                      QuotaInfo = new QuotaInfo                      {                          CoresUsed = 24                      }'                      OsType = OSType.Linux'                      ComputeProfile = new ComputeProfile()                      {                          Roles = new List<Role>()                      }                  }              };
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,CreateNewHDInsightCluster,The following statement contains a magic number: commandRuntimeMock.Verify(f => f.WriteObject(It.Is<AzureHDInsightCluster>(                  clusterout =>                      clusterout.ClusterState == "Running" &&                      clusterout.ClusterType == ClusterType &&                      clusterout.ClusterVersion == HdiVersion &&                      clusterout.CoresUsed == 24 &&                      clusterout.Location == Location &&                      clusterout.Name == ClusterName &&                      clusterout.OperatingSystemType == OSType.Linux &&                      (workerNodeDataDisks == 0) || (clusterout.WorkerNodeDataDisksGroups.First().DisksPerNode == workerNodeDataDisks)))'                      Times.Once);
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,CanCreateNewHDInsightCluster_LinuxComponentVersion,The following statement contains a magic number: var cluster = new Cluster(id: "id"' name: ClusterName)              {                  Location = Location'                  Properties = new ClusterGetProperties                  {                      ClusterVersion = "3.6"'                      ClusterState = "Running"'                      ClusterDefinition = new ClusterDefinition                      {                          Kind = sparkClusterType                      }'                      QuotaInfo = new QuotaInfo                      {                          CoresUsed = 24                      }'                      OsType = OSType.Linux                  }              };
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,CanCreateNewHDInsightCluster_LinuxComponentVersion,The following statement contains a magic number: commandRuntimeMock.Verify(f => f.WriteObject(It.Is<AzureHDInsightCluster>(                  clusterout =>                      clusterout.ClusterState == "Running" &&                      clusterout.ClusterType == sparkClusterType &&                      clusterout.ClusterVersion == "3.6" &&                      clusterout.CoresUsed == 24 &&                      clusterout.Location == Location &&                      clusterout.Name == ClusterName &&                      clusterout.OperatingSystemType == OSType.Linux &&                      clusterout.ComponentVersion[0] == componentVersionResponse))'                      Times.Once);
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,NewClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\NewClusterTests.cs,CanCreateNewHDInsightCluster_Kafka_DataDisks_Linux,The following statement contains a magic number: CreateNewHDInsightCluster(workerNodeDataDisks: 8);
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,PremiumClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\PremiumClusterTests.cs,CanCreateNewPremiumHDInsightCluster,The following statement contains a magic number: var cluster = new Cluster(id: "id"' name: ClusterName)              {                  Location = Location'                  Properties = new ClusterGetProperties                  {                      ClusterVersion = "3.6"'                      ClusterState = "Running"'                      ClusterDefinition = new ClusterDefinition                      {                          Kind = ClusterType                      }'                      QuotaInfo = new QuotaInfo                      {                          CoresUsed = 24                      }'                      OsType = OSType.Linux'                      Tier = Tier.Premium                  }              };
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,PremiumClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\PremiumClusterTests.cs,CanCreateNewPremiumHDInsightCluster,The following statement contains a magic number: commandRuntimeMock.Verify(f => f.WriteObject(It.Is<AzureHDInsightCluster>(                  clusterout =>                      clusterout.ClusterState == "Running" &&                      clusterout.ClusterType == ClusterType &&                      clusterout.ClusterVersion == "3.6" &&                      clusterout.CoresUsed == 24 &&                      clusterout.Location == Location &&                      clusterout.Name == ClusterName &&                      clusterout.OperatingSystemType == OSType.Linux &&                      clusterout.ClusterTier == Tier.Premium))'                      Times.Once);
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,ResizeClusterTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ResizeClusterTests.cs,CanResizeCluster,The following statement contains a magic number: var cluster = new Cluster(id: "id"' name: ClusterName + "1")              {                  Location = Location'                  Properties = new ClusterGetProperties                  {                      ClusterVersion = "3.6"'                      ClusterState = "Running"'                      ClusterDefinition = new ClusterDefinition                      {                          Kind = ClusterType                      }'                      QuotaInfo = new QuotaInfo                      {                          CoresUsed = 24                      }'                      OsType = OSType.Linux                  }'              };
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,ScriptActionTests,The following statement contains a magic number: scriptActionDetail = new RuntimeScriptActionDetail              (                  applicationName: "AppName"'                  debugInformation: "DebugInfo"'                  endTime: new DateTime(2016' 1' 1).ToString()'                  executionSummary:                      new List<Microsoft.Azure.Management.HDInsight.Models.ScriptActionExecutionSummary>                      {                          new Microsoft.Azure.Management.HDInsight.Models.ScriptActionExecutionSummary                          (                              status: "Succeeded"'                              instanceCount: 4                          )                      }'                  name: "ScriptName"'                  operation: "PostCreation"'                  parameters: "Parameters"'                  roles: new List<string> { "HeadNode"' "WorkerNode" }'                  scriptExecutionId: DateTime.UtcNow.Ticks'                  startTime: new DateTime(2016' 1' 2).ToString()'                  status: "Succeeded"'                  uri: "http://bing.com"              );
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,ScriptActionTests,The following statement contains a magic number: scriptActionDetail = new RuntimeScriptActionDetail              (                  applicationName: "AppName"'                  debugInformation: "DebugInfo"'                  endTime: new DateTime(2016' 1' 1).ToString()'                  executionSummary:                      new List<Microsoft.Azure.Management.HDInsight.Models.ScriptActionExecutionSummary>                      {                          new Microsoft.Azure.Management.HDInsight.Models.ScriptActionExecutionSummary                          (                              status: "Succeeded"'                              instanceCount: 4                          )                      }'                  name: "ScriptName"'                  operation: "PostCreation"'                  parameters: "Parameters"'                  roles: new List<string> { "HeadNode"' "WorkerNode" }'                  scriptExecutionId: DateTime.UtcNow.Ticks'                  startTime: new DateTime(2016' 1' 2).ToString()'                  status: "Succeeded"'                  uri: "http://bing.com"              );
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,ScriptActionTests,The following statement contains a magic number: scriptActionDetail = new RuntimeScriptActionDetail              (                  applicationName: "AppName"'                  debugInformation: "DebugInfo"'                  endTime: new DateTime(2016' 1' 1).ToString()'                  executionSummary:                      new List<Microsoft.Azure.Management.HDInsight.Models.ScriptActionExecutionSummary>                      {                          new Microsoft.Azure.Management.HDInsight.Models.ScriptActionExecutionSummary                          (                              status: "Succeeded"'                              instanceCount: 4                          )                      }'                  name: "ScriptName"'                  operation: "PostCreation"'                  parameters: "Parameters"'                  roles: new List<string> { "HeadNode"' "WorkerNode" }'                  scriptExecutionId: DateTime.UtcNow.Ticks'                  startTime: new DateTime(2016' 1' 2).ToString()'                  status: "Succeeded"'                  uri: "http://bing.com"              );
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,ScriptActionTests,The following statement contains a magic number: scriptActionDetail = new RuntimeScriptActionDetail              (                  applicationName: "AppName"'                  debugInformation: "DebugInfo"'                  endTime: new DateTime(2016' 1' 1).ToString()'                  executionSummary:                      new List<Microsoft.Azure.Management.HDInsight.Models.ScriptActionExecutionSummary>                      {                          new Microsoft.Azure.Management.HDInsight.Models.ScriptActionExecutionSummary                          (                              status: "Succeeded"'                              instanceCount: 4                          )                      }'                  name: "ScriptName"'                  operation: "PostCreation"'                  parameters: "Parameters"'                  roles: new List<string> { "HeadNode"' "WorkerNode" }'                  scriptExecutionId: DateTime.UtcNow.Ticks'                  startTime: new DateTime(2016' 1' 2).ToString()'                  status: "Succeeded"'                  uri: "http://bing.com"              );
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,ScriptActionTests,The following statement contains a magic number: scriptActionDetailWithApplicationName = new RuntimeScriptActionDetail              (                  applicationName: "AppName"'                  debugInformation: "DebugInfo"'                  endTime: new DateTime(2016' 1' 1).ToString()'                  executionSummary:                      new List<Microsoft.Azure.Management.HDInsight.Models.ScriptActionExecutionSummary>                      {                          new Microsoft.Azure.Management.HDInsight.Models.ScriptActionExecutionSummary                          (                              status: "Succeeded"'                              instanceCount: 1                          )                      }'                  name: "ScriptNameWithApp"'                  operation: "PostCreation"'                  parameters: "Parameters"'                  roles: new List<string> { "EdgeNode" }'                  scriptExecutionId: DateTime.UtcNow.Ticks'                  startTime: new DateTime(2016' 1' 2).ToString()'                  status: "Succeeded"'                  uri: "http://bing.com"              );
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,ScriptActionTests,The following statement contains a magic number: scriptActionDetailWithApplicationName = new RuntimeScriptActionDetail              (                  applicationName: "AppName"'                  debugInformation: "DebugInfo"'                  endTime: new DateTime(2016' 1' 1).ToString()'                  executionSummary:                      new List<Microsoft.Azure.Management.HDInsight.Models.ScriptActionExecutionSummary>                      {                          new Microsoft.Azure.Management.HDInsight.Models.ScriptActionExecutionSummary                          (                              status: "Succeeded"'                              instanceCount: 1                          )                      }'                  name: "ScriptNameWithApp"'                  operation: "PostCreation"'                  parameters: "Parameters"'                  roles: new List<string> { "EdgeNode" }'                  scriptExecutionId: DateTime.UtcNow.Ticks'                  startTime: new DateTime(2016' 1' 2).ToString()'                  status: "Succeeded"'                  uri: "http://bing.com"              );
Magic Number,Microsoft.Azure.Commands.HDInsight.Test,ScriptActionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\HDInsight\HDInsight.Test\UnitTests\ScriptActionTests.cs,ScriptActionTests,The following statement contains a magic number: scriptActionDetailWithApplicationName = new RuntimeScriptActionDetail              (                  applicationName: "AppName"'                  debugInformation: "DebugInfo"'                  endTime: new DateTime(2016' 1' 1).ToString()'                  executionSummary:                      new List<Microsoft.Azure.Management.HDInsight.Models.ScriptActionExecutionSummary>                      {                          new Microsoft.Azure.Management.HDInsight.Models.ScriptActionExecutionSummary                          (                              status: "Succeeded"'                              instanceCount: 1                          )                      }'                  name: "ScriptNameWithApp"'                  operation: "PostCreation"'                  parameters: "Parameters"'                  roles: new List<string> { "EdgeNode" }'                  scriptExecutionId: DateTime.UtcNow.Ticks'                  startTime: new DateTime(2016' 1' 2).ToString()'                  status: "Succeeded"'                  uri: "http://bing.com"              );
