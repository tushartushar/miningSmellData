Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareServiceProperties,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.WindowsAzure.Management.Storage.Test.Common,FileNamingGenerator,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\FileNamingGenerator.cs,GenerateShareNameInternal,Cyclomatic complexity of the method is 10
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.Common,FileNamingGenerator,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\FileNamingGenerator.cs,GenerateShareNameInternal,The method has 5 parameters. Parameters: length' ensureDoubleDash' startsWithDash' endsWithDash' ensureUpperCase
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.Common,MockTransferManager,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\MockTransferManager.cs,DownloadAsync,The method has 5 parameters. Parameters: sourceFile' destPath' options' context' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.Common,MockTransferManager,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\MockTransferManager.cs,DownloadAsync,The method has 5 parameters. Parameters: sourceBlob' destPath' options' context' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.Common,MockTransferManager,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\MockTransferManager.cs,UploadAsync,The method has 5 parameters. Parameters: sourcePath' destFile' options' context' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.Common,MockTransferManager,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\MockTransferManager.cs,UploadAsync,The method has 5 parameters. Parameters: sourcePath' destBlob' options' context' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,DownloadTransferManager,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageFileContentTest.cs,DownloadAsync,The method has 5 parameters. Parameters: sourceFile' destFilePath' options' context' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,UploadTransferManager,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\SetAzureStorageFileContentTest.cs,UploadAsync,The method has 5 parameters. Parameters: sourcePath' destFile' options' context' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,SetContainerPermissions,The method has 5 parameters. Parameters: container' permissions' accessCondition' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,GetBlobReferenceFromServer,The method has 6 parameters. Parameters: container' blobName' accessCondition' options' operationContext' snapshotTime
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,ListBlobs,The method has 6 parameters. Parameters: container' prefix' useFlatBlobListing' blobListingDetails' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,DeleteCloudBlob,The method has 5 parameters. Parameters: blob' deleteSnapshotsOption' accessCondition' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,AbortCopy,The method has 5 parameters. Parameters: blob' copyId' accessCondition' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,ListBlobsSegmented,The method has 8 parameters. Parameters: container' prefix' useFlatBlobListing' blobListingDetails' maxResults' currentToken' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,ListContainersSegmented,The method has 6 parameters. Parameters: prefix' detailsIncluded' maxResults' currentToken' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,GetContainerPermissionsAsync,The method has 5 parameters. Parameters: container' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,GetBlobReferenceFromServerAsync,The method has 6 parameters. Parameters: container' blobName' accessCondition' options' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,FetchBlobAttributesAsync,The method has 5 parameters. Parameters: blob' accessCondition' options' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,CreateContainerIfNotExistsAsync,The method has 5 parameters. Parameters: container' accessType' requestOptions' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,DeleteContainerAsync,The method has 5 parameters. Parameters: container' accessCondition' requestOptions' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,AbortCopyAsync,The method has 6 parameters. Parameters: blob' copyId' accessCondition' requestOption' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,SetContainerPermissionsAsync,The method has 6 parameters. Parameters: container' permissions' accessCondition' requestOptions' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,DeleteCloudBlobAsync,The method has 6 parameters. Parameters: blob' deleteSnapshotsOption' accessCondition' requestOptions' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,SetBlobPropertiesAsync,The method has 5 parameters. Parameters: blob' accessCondition' options' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,SetBlobMetadataAsync,The method has 5 parameters. Parameters: blob' accessCondition' options' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,ListBlobsSegmentedAsync,The method has 9 parameters. Parameters: container' prefix' useFlatBlobListing' blobListingDetails' maxResults' currentToken' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,StartCopyAsync,The method has 7 parameters. Parameters: blob' source' sourceAccessCondition' destAccessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,StartIncrementalCopyAsync,The method has 6 parameters. Parameters: blob' source' destAccessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,SetPageBlobTierAsync,The method has 5 parameters. Parameters: blob' tier' options' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,StartCopyAsync,The method has 8 parameters. Parameters: blob' source' premiumPageBlobTier' sourceAccessCondition' destAccessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,SetStandardBlobTierAsync,The method has 7 parameters. Parameters: blob' accessCondition' tier' rehydratePriority' options' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,GetUserDelegationKey,The method has 5 parameters. Parameters: keyStart' keyEnd' accessCondition' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,StartCopyAsync,The method has 9 parameters. Parameters: blob' source' standardBlobTier' rehydratePriority' sourceAccessCondition' destAccessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.Service,MockStorageFileManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageFileManagement.cs,EnumerateFilesAndDirectoriesAsync,The method has 5 parameters. Parameters: directory' enumerationAction' options' operationContext' token
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.Service,MockStorageFileManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageFileManagement.cs,FetchShareAttributesAsync,The method has 5 parameters. Parameters: share' accessCondition' options' operationContext' token
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.Service,MockStorageFileManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageFileManagement.cs,EnumerateSharesAsync,The method has 6 parameters. Parameters: prefix' detailsIncluded' enumerationAction' options' operationContext' token
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.Service,MockStorageFileManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageFileManagement.cs,DeleteDirectoryAsync,The method has 5 parameters. Parameters: directory' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.Service,MockStorageFileManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageFileManagement.cs,DeleteShareAsync,The method has 6 parameters. Parameters: share' deleteShareSnapshotsOption' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.Service,MockStorageFileManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageFileManagement.cs,DeleteFileAsync,The method has 5 parameters. Parameters: file' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.Service,MockStorageFileManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageFileManagement.cs,GetSharePermissionsAsync,The method has 5 parameters. Parameters: share' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.Service,MockStorageFileManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageFileManagement.cs,SetSharePermissions,The method has 5 parameters. Parameters: share' permissions' accessCondition' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.Service,MockStorageFileManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageFileManagement.cs,FetchFileAttributesAsync,The method has 5 parameters. Parameters: file' accessCondition' options' operationContext' token
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.Service,MockStorageFileManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageFileManagement.cs,FetchDirectoryAttributesAsync,The method has 5 parameters. Parameters: directory' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Management.Storage.Test.Service,MockStorageFileManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageFileManagement.cs,AbortCopyAsync,The method has 6 parameters. Parameters: file' copyId' accessCondition' requestOptions' operationContext' cancellationToken
Long Identifier,Microsoft.WindowsAzure.Management.Storage.Test.Common,FileNamingGenerator,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\FileNamingGenerator.cs,,The length of the parameter ValidShareNameCharactersExceptDash is 34.
Long Identifier,Microsoft.WindowsAzure.Commands.Storage.Test.Table,NewAzureStorageTableStoredAccessPolicyTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Table\NewAzureStorageTableStoredAccessPolicyTest.cs,CreateStoredAccessPolicyInvalidExpirtTime,The length of the parameter expectedSharedAccessExpiryTime is 30.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Blob.Cmdlet,GetAzureStorageContainerTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Blob\Cmdlet\GetAzureStorageContainerTest.cs,ListContainerByPrefixWithInvalidPrefixTest,The length of the statement  "            AssertThrows<ArgumentException>(() => RunAsyncCommand(() => command.ListContainersByPrefix(prefix).ToList())' String.Format(Resources.InvalidContainerName' prefix)); " is 165.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Blob.Cmdlet,RemoveAzureStorageBlobTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Blob\Cmdlet\RemoveAzureStorageBlobTest.cs,RemoveAzureBlobByNameTest,The length of the statement  "            AssertThrowsAsync<ResourceNotFoundException>(() => command.RemoveAzureBlob(InitTaskId' BlobMock' containerName' blobName)' " is 122.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Blob,NewAzureStorageContainerTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Blob\Cmdlet\NewAzureStorageContainerTest.cs,CreateContainerForAlreadyExistsContainerTest,The length of the statement  "            AssertThrowsAsync<ResourceAlreadyExistException>(() => command.CreateAzureContainer(InitTaskId' BlobMock' name' accesslevel)' " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Blob,NewAzureStorageContainerTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Blob\Cmdlet\NewAzureStorageContainerTest.cs,CreateContainerSuccessfullyTest,The length of the statement  "            AssertThrowsAsync<ResourceAlreadyExistException>(() => command.CreateAzureContainer(InitTaskId' BlobMock' name' accesslevel)' " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Blob,SetAzureStorageContainerAclTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Blob\Cmdlet\SetAzureStorageContainerAclTest.cs,SetContainerAclWithInvalidContainerNameTest,The length of the statement  "            AssertThrowsAsync<ArgumentException>(() => command.SetContainerAcl(InitTaskId' BlobMock' name' accessLevel)' String.Format(Resources.InvalidContainerName' name)); " is 162.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Blob,SetAzureStorageContainerAclTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Blob\Cmdlet\SetAzureStorageContainerAclTest.cs,SetContainerAclForNotExistContainer,The length of the statement  "            AssertThrowsAsync<ResourceNotFoundException>(() => command.SetContainerAcl(InitTaskId' BlobMock' name' accessLevel)' String.Format(Resources.ContainerNotFound' name)); " is 167.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Blob,StorageCloudBlobCmdletBaseTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Blob\StorageCloudBlobCmdletBaseTest.cs,ValidatePipelineCloudBlobWithNullTest,The length of the statement  "            AssertThrows<ArgumentException>(() => command.ValidatePipelineCloudBlob(null)' String.Format(Resources.ObjectCannotBeNull' typeof(CloudBlob).Name)); " is 148.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Blob,StorageCloudBlobCmdletBaseTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Blob\StorageCloudBlobCmdletBaseTest.cs,ValidatePipelineCloudBlobWithInvalidBlobNameTest,The length of the statement  "            AssertThrows<ArgumentException>(() => command.ValidatePipelineCloudBlob(blob)' String.Format(Resources.InvalidBlobName' blob.Name)); " is 132.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Blob,StorageCloudBlobCmdletBaseTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Blob\StorageCloudBlobCmdletBaseTest.cs,ValidatePipelineCloudBlobContainerWithNullObjectTest,The length of the statement  "            AssertThrows<ArgumentException>(() => command.ValidatePipelineCloudBlobContainer(null)' String.Format(Resources.ObjectCannotBeNull' typeof(CloudBlobContainer).Name)); " is 166.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Blob,StorageCloudBlobCmdletBaseTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Blob\StorageCloudBlobCmdletBaseTest.cs,ValidatePipelineCloudBlobContainerWithInvalidNameTest,The length of the statement  "            AssertThrows<ArgumentException>(() => command.ValidatePipelineCloudBlobContainer(container)' String.Format(Resources.InvalidContainerName' container.Name)); " is 156.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,AccessPolicyHelperTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\AccessPolicyHelperTest.cs,ValidateSetupAccessPolicyPermissionTest,The length of the statement  "            Assert.AreEqual(fileAccessPolicy.Permissions' SharedAccessFilePermissions.List | SharedAccessFilePermissions.Write | SharedAccessFilePermissions.Create);  " is 153.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,AccessPolicyHelperTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\AccessPolicyHelperTest.cs,SetupAccessPolicyLifeTimeTest,The length of the statement  "            AssertThrows<ArgumentException>(() => SasTokenHelper.SetupAccessPolicyLifeTime(end' start' out testStart' out testEnd' true)); " is 126.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,AccessPolicyHelperTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\AccessPolicyHelperTest.cs,SetupAccessPolicyTest,The length of the statement  "            Assert.AreEqual(blobAccessPolicy.SharedAccessStartTime.Value.UtcDateTime.ToString()' start.Value.ToUniversalTime().ToString()); " is 127.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,AccessPolicyHelperTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\AccessPolicyHelperTest.cs,SetupAccessPolicyTest,The length of the statement  "            Assert.AreEqual(blobAccessPolicy.SharedAccessExpiryTime.Value.UtcDateTime.ToString()' end.Value.ToUniversalTime().ToString()); " is 126.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,AccessPolicyHelperTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\AccessPolicyHelperTest.cs,SetupAccessPolicyTest,The length of the statement  "            Assert.AreEqual(tableAccessPolicy.SharedAccessExpiryTime.Value.UtcDateTime.ToString()' end.Value.ToUniversalTime().ToString()); " is 127.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,AccessPolicyHelperTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\AccessPolicyHelperTest.cs,SetupAccessPolicyTest,The length of the statement  "            Assert.AreEqual(queueAccessPolicy.SharedAccessStartTime.Value.UtcDateTime.ToString()' start.Value.ToUniversalTime().ToString()); " is 128.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidContainerPrefixTest,The length of the statement  "            string[] positives = { "$"' "$ro"' "$l"' "$root"' "a"' "ab"' "abc"' "$logs"' "$web"' "abc"' "abc987"' "abc2de"' "4abc"' "abc-def"' "a-c"' "ac-"' new String('a'' 63) }; " is 167.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidBlobNameTest,The length of the statement  "            string[] positives = { "$"' "$ro"' "$l"' "$root"' "a"' "*&(&^$^*"' "ab"' "abc"' "$logs"' "$web"' "abc"' "abc987"' "abc2de"' "4abc"' "abc-def"' "a-c"' "ac-"' new String('a'' 1024)}; " is 180.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidBlobPrefixTest,The length of the statement  "            string[] positives = { "$"' "$ro"' "$l"' "$root"' "a"' "*&(&^$^*"' "ab"' "abc"' "$logs"' "$web"' "abc"' "abc987"' "abc2de"' "4abc"' "abc-def"' "a-c"' "ac-"' new String('a'' 1024) }; " is 181.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidQueuePrefixTest,The length of the statement  "            string[] positives = {"a"' "ab"' "abc"' "abc"' "abc987"' "abc2de"' "4abc"' "abc-def"' "a-c"' "ac-"' new String('a'' 63) }; " is 122.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidFileNameTest,The length of the statement  "            string[] positives = { "a"' "ab"' "abc"' "Aabc"' "abc987"' "abc2de"' "4abc"' "abc-def"' "a-c"' "ac-"' new String('a'' 63) }; " is 124.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareServiceProperties,The length of the statement  "            if ((pSSeriviceProperties != null && pSSeriviceProperties.HourMetrics != null) || (serviceProperties != null && serviceProperties.HourMetrics != null)) " is 151.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareServiceProperties,The length of the statement  "            if ((pSSeriviceProperties != null && pSSeriviceProperties.MinuteMetrics != null) || (serviceProperties != null && serviceProperties.MinuteMetrics != null)) " is 155.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareServiceProperties,The length of the statement  "            if ((pSSeriviceProperties != null && pSSeriviceProperties.Logging != null) || (serviceProperties != null && serviceProperties.Logging != null)) " is 143.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareServiceProperties,The length of the statement  "            if ((pSSeriviceProperties != null && pSSeriviceProperties.Cors != null) || (serviceProperties != null && serviceProperties.Cors != null)) " is 137.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareServiceProperties,The length of the statement  "            if ((pSSeriviceProperties != null && pSSeriviceProperties.DefaultServiceVersion != null) || (serviceProperties != null && serviceProperties.DefaultServiceVersion != null)) " is 171.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareServiceProperties,The length of the statement  "            if ((pSSeriviceProperties != null && pSSeriviceProperties.DeleteRetentionPolicy != null) || (serviceProperties != null && serviceProperties.DeleteRetentionPolicy != null)) " is 171.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareServiceProperties,The length of the statement  "                Assert.AreEqual(serviceProperties.DeleteRetentionPolicy.RetentionDays' pSSeriviceProperties.DeleteRetentionPolicy.RetentionDays); " is 129.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareServiceProperties,The length of the statement  "            if ((pSSeriviceProperties != null && pSSeriviceProperties.StaticWebsite != null) || (serviceProperties != null && serviceProperties.StaticWebsite != null)) " is 155.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareServiceProperties,The length of the statement  "                Assert.AreEqual(serviceProperties.StaticWebsite.ErrorDocument404Path' pSSeriviceProperties.StaticWebsite.ErrorDocument404Path); " is 127.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,PrepareCoresproperties,The length of the statement  "                        AllowedMethods = CorsHttpMethods.Connect | CorsHttpMethods.Delete | CorsHttpMethods.Get | CorsHttpMethods.Head | CorsHttpMethods.Merge' " is 135.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common,SasTokenHelperTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\SasTokenHelperTest.cs,SetupAccessPolicyLifeTimeTest,The length of the statement  "            AssertThrows<ArgumentException>(() => SasTokenHelper.SetupAccessPolicyLifeTime(end' start' out testStart' out testEnd' true)); " is 126.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common.Cmdlet,NewAzureStorageContextTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\Cmdlet\NewAzureStorageContextTest.cs,GetStorageAccountByNameAndKeyTest,The length of the statement  "            command.GetStorageAccountByNameAndKey("a"' "Xg+4nFQ832QfisuH/CkQwdQUmlqrZebQTJWpAQZ6klWjTVsIBVZy5xNdCDje4EWP0gdWK8vIFAX8LOmz85Wmcg=="' false); " is 142.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common.Cmdlet,NewAzureStorageContextTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\Cmdlet\NewAzureStorageContextTest.cs,GetStorageAccountByConnectionStringTest,The length of the statement  "            Assert.IsNotNull(command.GetStorageAccountByConnectionString("UseDevelopmentStorage=true;DevelopmentStorageProxyUri=http://myProxyUri")); " is 137.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common.Cmdlet,NewAzureStorageContextTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\Cmdlet\NewAzureStorageContextTest.cs,GetStorageAccountWithEndPointTest,The length of the statement  "            AssertThrows<ArgumentException>(() => command.GetStorageAccountWithEndPoint(credential' name' false)' String.Format(Resources.ObjectCannotBeNull' StorageNouns.StorageAccountName)); " is 180.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common.Cmdlet,NewAzureStorageContextTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\Cmdlet\NewAzureStorageContextTest.cs,GetStorageAccountByConnectionStringAndSasToken,The length of the statement  "            string sasToken = "?st=2013-09-03T04%3A12%3A15Z&se=2013-09-03T05%3A12%3A15Z&sr=c&sp=r&sig=fN2NPxLK99tR2%2BWnk48L3lMjutEj7nOwBo7MXs2hEV8%3D"; " is 140.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Common.Cmdlet,NewAzureStorageContextTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\Cmdlet\NewAzureStorageContextTest.cs,GetStorageAccountByConnectionStringAndSasToken,The length of the statement  "            string connectionString = String.Format("BlobEndpoint={0};QueueEndpoint={0};TableEndpoint={0};SharedAccessSignature={1}"' endpoint' sasToken); " is 142.
Long Statement,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageFileContentTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageFileContentTest.cs,DownloadFileUsingFileObjectToLocalFileTest,The length of the statement  "                    new KeyValuePair<string' object>("File"' this.MockChannel.GetShareReference("share").GetRootDirectoryReference().GetFileReference("remoteFile"))' " is 145.
Long Statement,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageFileContentTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageFileContentTest.cs,DownloadFileUsingFileObjectToLocalDirectoryTest,The length of the statement  "                    new KeyValuePair<string' object>("File"' this.MockChannel.GetShareReference("share").GetRootDirectoryReference().GetFileReference("remoteFile"))' " is 145.
Long Statement,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageFileTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageFileTest.cs,GetFileFromRootTest_ShareNameParameterSet,The length of the statement  "            var listItems = Enumerable.Range(0' 10).Select(x => share.GetRootDirectoryReference().GetFileReference(string.Format("file{0}"' x))).Cast<IListFileItem>() " is 154.
Long Statement,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageFileTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageFileTest.cs,GetFileFromRootTest_ShareNameParameterSet,The length of the statement  "                .Concat(Enumerable.Range(0' 5).Select(x => share.GetRootDirectoryReference().GetDirectoryReference(string.Format("dir{0}"' x)))).ToArray(); " is 139.
Long Statement,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageFileTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageFileTest.cs,GetFileFromRootTest_ShareParameterSet,The length of the statement  "            var listItems = Enumerable.Range(0' 10).Select(x => share.GetRootDirectoryReference().GetFileReference(string.Format("file{0}"' x))).Cast<IListFileItem>() " is 154.
Long Statement,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageFileTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageFileTest.cs,GetFileFromRootTest_ShareParameterSet,The length of the statement  "                .Concat(Enumerable.Range(0' 5).Select(x => share.GetRootDirectoryReference().GetDirectoryReference(string.Format("dir{0}"' x)))).ToArray(); " is 139.
Long Statement,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageFileTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageFileTest.cs,GetFileFromSubDirectoryTest_UsingDirectoryObject,The length of the statement  "            var listItems = Enumerable.Range(0' 10).Select(x => dir.GetFileReference(string.Format("file{0}"' x))).Cast<IListFileItem>() " is 124.
Long Statement,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageShareTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageShareTest.cs,GetShareByPrefixTest,The length of the statement  "            var expectedShares = Enumerable.Range(0' 10).Select(x => string.Format(CultureInfo.InvariantCulture' "share{0}"' x)).ToArray(); " is 127.
Long Statement,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageShareTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageShareTest.cs,GetShareByPrefixTest,The length of the statement  "            this.MockChannel.SetsAvailableShare(expectedShares.Concat(Enumerable.Range(0' 5).Select(x => string.Format(CultureInfo.InvariantCulture' "nonshare{0}"' x))).ToArray()); " is 168.
Long Statement,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageShareTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageShareTest.cs,GetShareByPrefixTest_NoShareMatchingPrefix,The length of the statement  "            this.MockChannel.SetsAvailableShare(Enumerable.Range(0' 5).Select(x => string.Format(CultureInfo.InvariantCulture' "nonshare{0}"' x)).ToArray()); " is 145.
Long Statement,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,RemoveAzureStorageDirectoryTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\RemoveAzureStorageDirectoryTest.cs,RemoveDirectoryUsingDirectoryObjectOnlyTest,The length of the statement  "                new KeyValuePair<string' object>("Directory"' this.MockChannel.GetShareReference("share").GetRootDirectoryReference().GetDirectoryReference("directory"))' " is 154.
Long Statement,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,RemoveAzureStorageFileTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\RemoveAzureStorageFileTest.cs,RemoveFileUsingFileObjectTest,The length of the statement  "                new KeyValuePair<string' object>("File"' this.MockChannel.GetShareReference("share").GetRootDirectoryReference().GetFileReference("file"))' " is 139.
Long Statement,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,SetAzureStorageFileContentTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\SetAzureStorageFileContentTest.cs,UploadFileUsingDirectoryObjectOnlyTest,The length of the statement  "                    new KeyValuePair<string' object>("Directory"' this.MockChannel.GetShareReference("share").GetRootDirectoryReference().GetDirectoryReference("dir"))' " is 148.
Long Statement,Microsoft.WindowsAzure.Management.Storage.Test.File,FileAssertUtil,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\FileAssertUtil.cs,AssertMockupException,The length of the statement  "            Assert.IsTrue(errors[0].Exception is MockupException' "The exception in the error record should be an instance of MockupException class."); " is 139.
Long Statement,Microsoft.WindowsAzure.Management.Storage.Test.File,FileAssertUtil,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\FileAssertUtil.cs,AssertListFileItems,The length of the statement  "            var directoryItems = assertItems.Where(x => x is CloudFileDirectory).Cast<CloudFileDirectory>().Select(x => x.Name).ToList(); " is 125.
Long Statement,Microsoft.WindowsAzure.Management.Storage.Test.File,FileAssertUtil,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\FileAssertUtil.cs,AssertListFileItems,The length of the statement  "                Assert.IsTrue(expectList.Remove(name)' string.Format(CultureInfo.InvariantCulture' "Item {0} does not exist in the expected list."' item)); " is 139.
Long Statement,Microsoft.WindowsAzure.Management.Storage.Test.File,FileAssertUtil,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\FileAssertUtil.cs,AssertShares,The length of the statement  "                Assert.IsTrue(expectedShareNameList.Remove(share.Name)' string.Format(CultureInfo.InvariantCulture' "Share {0} was not expected."' share.Name)); " is 144.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Queue,GetAzureStorageQueueTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Queue\GetAzureStorageQueueTest.cs,ListQueuesByPrefixWithInvalidPrefixTest,The length of the statement  "            AssertThrows<ArgumentException>(() => command.ListQueuesByPrefix(prefix).ToList()' String.Format(Resources.InvalidQueueName' prefix)); " is 134.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,GetStorageServiceProperties,The length of the statement  "            throw new NotImplementedException("No need to cover this in unit test since the logic is quite simple. For more details' please read GetAzureStorageServiceLogging.cs"); " is 168.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,SetStorageServiceProperties,The length of the statement  "            throw new NotImplementedException("No need to cover this in unit test since there are no additional logics on this api"); " is 121.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,GetBlobReferenceFromServerAsync,The length of the statement  "            return Task.Factory.StartNew(() => this.GetBlobReferenceFromServer(container' blobName' accessCondition' options' operationContext)); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,SetContainerPermissionsAsync,The length of the statement  "            return Task.Factory.StartNew(() => this.SetContainerPermissions(container' permissions' accessCondition' requestOptions' operationContext)); " is 140.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageBlobManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageBlobManagement.cs,DeleteCloudBlobAsync,The length of the statement  "            return Task.Factory.StartNew(() => this.DeleteCloudBlob(blob' deleteSnapshotsOption' accessCondition' requestOptions' operationContext)); " is 137.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Service,MockStorageTableManagement,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Service\MockStorageTableManagement.cs,SetTablePermissionsAsync,The length of the statement  "            return Task.Factory.StartNew(() => this.SetTablePermissions(table' tablePermissions' requestOptions' operationContext)); " is 120.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Table,NewAzureStorageTableStoredAccessPolicyTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Table\NewAzureStorageTableStoredAccessPolicyTest.cs,CreateAzureTableStoredAccessPolicyWithInvalidNameTest,The length of the statement  "            AssertThrows<ArgumentException>(() => command.CreateAzureTableStoredAccessPolicy(command.Channel' tableName' policyName' null' null' null)' " is 139.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Table,NewAzureStorageTableStoredAccessPolicyTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Table\NewAzureStorageTableStoredAccessPolicyTest.cs,CreateStoredAccessPolicyAlreadyExistsTest,The length of the statement  "            AssertThrows<ResourceAlreadyExistException>(() => command.CreateAzureTableStoredAccessPolicy(command.Channel' tableName' policyName' null' null' null)' " is 151.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Table,NewAzureStorageTableStoredAccessPolicyTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Table\NewAzureStorageTableStoredAccessPolicyTest.cs,CreateStoredAccessPolicyInvalidExpirtTime,The length of the statement  "            AssertThrows<ArgumentException>(() => command.CreateAzureTableStoredAccessPolicy(command.Channel' tableName' policyName' startTime' expiryTime' null)' " is 150.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Table,NewAzureStorageTableStoredAccessPolicyTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Table\NewAzureStorageTableStoredAccessPolicyTest.cs,CreateStoredAccessPolicyInvalidExpirtTime,The length of the statement  "                String.Format(CultureInfo.CurrentCulture' Resources.ExpiryTimeGreatThanStartTime' expectedSharedAccessExpiryTime' expectedSharedAccessStartTime)); " is 146.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Table,RemoveAzureStorageTableStoredAccessPolicyTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Table\RemoveAzureStorageTableStoredAccessPolicyTest.cs,RemoveStoredAccessPolicyNotExistsTest,The length of the statement  "            AssertThrows<ResourceNotFoundException>(() => command.RemoveAzureTableStoredAccessPolicy(tableMock' tableName' policyName)' " is 123.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Table,SetAzureStorageTableStoredAccessPolicyTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Table\SetAzureStorageTableStoredAccessPolicyTest.cs,SetStoredAccessPolicyNotExistsTest,The length of the statement  "            AssertThrows<ArgumentException>(() => command.SetAzureTableStoredAccessPolicy(command.Channel' tableName' policyName' null' null' null' false' false)' " is 150.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Test.Table,SetAzureStorageTableStoredAccessPolicyTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Table\SetAzureStorageTableStoredAccessPolicyTest.cs,SetStoredAccessPolicySuccessTest,The length of the statement  "            command.SetAzureTableStoredAccessPolicy(command.Channel' tableName' policyName' startTime' expiryTime' permission' false' false); " is 129.
Complex Conditional,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareServiceProperties,The conditional expression  "(pSSeriviceProperties != null && pSSeriviceProperties.HourMetrics != null) || (serviceProperties != null && serviceProperties.HourMetrics != null)"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareServiceProperties,The conditional expression  "(pSSeriviceProperties != null && pSSeriviceProperties.MinuteMetrics != null) || (serviceProperties != null && serviceProperties.MinuteMetrics != null)"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareServiceProperties,The conditional expression  "(pSSeriviceProperties != null && pSSeriviceProperties.Logging != null) || (serviceProperties != null && serviceProperties.Logging != null)"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareServiceProperties,The conditional expression  "(pSSeriviceProperties != null && pSSeriviceProperties.Cors != null) || (serviceProperties != null && serviceProperties.Cors != null)"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareServiceProperties,The conditional expression  "(pSSeriviceProperties != null && pSSeriviceProperties.DefaultServiceVersion != null) || (serviceProperties != null && serviceProperties.DefaultServiceVersion != null)"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareServiceProperties,The conditional expression  "(pSSeriviceProperties != null && pSSeriviceProperties.DeleteRetentionPolicy != null) || (serviceProperties != null && serviceProperties.DeleteRetentionPolicy != null)"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareServiceProperties,The conditional expression  "(pSSeriviceProperties != null && pSSeriviceProperties.StaticWebsite != null) || (serviceProperties != null && serviceProperties.StaticWebsite != null)"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareCors,The conditional expression  "(psCorsRules == null || psCorsRules.Length == 0)                   && (corsProperties == null || corsProperties.CorsRules == null || corsProperties.CorsRules.Count == 0)"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,CompareStrings,The conditional expression  "(stringArray == null || stringArray.Length == 0) && (stringList == null || stringList.Count == 0)"  is complex.
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Blob.Cmdlet,GetAzureStorageContainerTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Blob\Cmdlet\GetAzureStorageContainerTest.cs,PackCloudBlobContainerWithAclTest,The following statement contains a magic number: Assert.AreEqual(5' MockCmdRunTime.OutputPipeline.Count());
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Blob,StorageBlobTestBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Blob\StorageBlobTestBase.cs,AddTestBlobs,The following statement contains a magic number: AddContainerBlobs("container20"' 20);
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,CmdletOperationContextTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\CmdletOperationContextTest.cs,CmdletOperationContextInitTwiceTest,The following statement contains a magic number: int sleepInterval = 1 * 1000;
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidContainerNameTest,The following statement contains a magic number: string[] positives = { "$root"' "$logs"' "$web"' "abc"' "abc987"' "abc2de"' "4abc"' "abc-def"' new String('a'' 63) };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidContainerPrefixTest,The following statement contains a magic number: string[] positives = { "$"' "$ro"' "$l"' "$root"' "a"' "ab"' "abc"' "$logs"' "$web"' "abc"' "abc987"' "abc2de"' "4abc"' "abc-def"' "a-c"' "ac-"' new String('a'' 63) };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidBlobNameTest,The following statement contains a magic number: string[] positives = { "$"' "$ro"' "$l"' "$root"' "a"' "*&(&^$^*"' "ab"' "abc"' "$logs"' "$web"' "abc"' "abc987"' "abc2de"' "4abc"' "abc-def"' "a-c"' "ac-"' new String('a'' 1024)};
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidBlobNameTest,The following statement contains a magic number: string[] negatives =                  {                      String.Empty' //can not empty                      new String('a'' 1025)                  };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidBlobPrefixTest,The following statement contains a magic number: string[] positives = { "$"' "$ro"' "$l"' "$root"' "a"' "*&(&^$^*"' "ab"' "abc"' "$logs"' "$web"' "abc"' "abc987"' "abc2de"' "4abc"' "abc-def"' "a-c"' "ac-"' new String('a'' 1024) };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidBlobPrefixTest,The following statement contains a magic number: string[] negatives =                  {                      String.Empty' //can not empty                      new String('a'' 1025)                  };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidTableNameTest,The following statement contains a magic number: string[] positives = { "Abc"' "abc"' "a99"' new String('a'' 63) };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidTableNameTest,The following statement contains a magic number: string[] negatives =                  {                      String.Empty' //can not empty                      "9a"' //only start with A-Za-z                      "a"' //too short                      "a?"' //? is invalid                      "af*"' //* is invalid                      "abc+"' //+ is invalid                      new String('a'' 64)' //too long                      new String('a'' 256) //too long                  };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidTableNameTest,The following statement contains a magic number: string[] negatives =                  {                      String.Empty' //can not empty                      "9a"' //only start with A-Za-z                      "a"' //too short                      "a?"' //? is invalid                      "af*"' //* is invalid                      "abc+"' //+ is invalid                      new String('a'' 64)' //too long                      new String('a'' 256) //too long                  };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidTablePrefixTest,The following statement contains a magic number: string[] positives = {"a"' "A"' "Ab"' "ab"' "a99"' new String('a'' 63) };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidTablePrefixTest,The following statement contains a magic number: string[] negatives =                  {                      String.Empty' //can not empty                      "9"' //only start with a-zA-Z                      "9a"' //only start with A-Za-z                      "a?"' //? is invalid                      "af*"' //* is invalid                      "abc+"' //+ is invalid                      new String('a'' 64)' //too long                      new String('a'' 256) //too long                  };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidTablePrefixTest,The following statement contains a magic number: string[] negatives =                  {                      String.Empty' //can not empty                      "9"' //only start with a-zA-Z                      "9a"' //only start with A-Za-z                      "a?"' //? is invalid                      "af*"' //* is invalid                      "abc+"' //+ is invalid                      new String('a'' 64)' //too long                      new String('a'' 256) //too long                  };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidQueueNameTest,The following statement contains a magic number: string[] positives = {"abc"' "abc987"' "abc2de"' "4abc"' "abc-def"' new String('a'' 63) };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidQueueNameTest,The following statement contains a magic number: string[] negatives =                  {                      String.Empty' //can not empty                      "$ROOT"' //can not use upper case                      "a"' //too short                      "ab"' //too short                      "Aabc"' //start with a-z0-9                      "abcAde"' //can not contain upper case                      "-abc"' //start with a-z0-9                      "a--bc"' //can not contain consecutive dash                      "abc-"' //dash can not be the last character                      "$abc"' //$ is invalid                      "abd*677"' //* is invalid                      "abc?"' //? is invalid                      new String('a'' 64)' //too long                      new String('a'' 256) //too long                  };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidQueueNameTest,The following statement contains a magic number: string[] negatives =                  {                      String.Empty' //can not empty                      "$ROOT"' //can not use upper case                      "a"' //too short                      "ab"' //too short                      "Aabc"' //start with a-z0-9                      "abcAde"' //can not contain upper case                      "-abc"' //start with a-z0-9                      "a--bc"' //can not contain consecutive dash                      "abc-"' //dash can not be the last character                      "$abc"' //$ is invalid                      "abd*677"' //* is invalid                      "abc?"' //? is invalid                      new String('a'' 64)' //too long                      new String('a'' 256) //too long                  };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidQueuePrefixTest,The following statement contains a magic number: string[] positives = {"a"' "ab"' "abc"' "abc"' "abc987"' "abc2de"' "4abc"' "abc-def"' "a-c"' "ac-"' new String('a'' 63) };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidQueuePrefixTest,The following statement contains a magic number: string[] negatives =                  {                      String.Empty' //can not empty                      "Aabc"' //start with a-z0-9                      "abcAde"' //can not contain upper case                      "-abc"' //start with a-z0-9                      "a--bc"' //can not contain consecutive dash                      "$abc"' //$ is invalid                      "abd*677"' //* is invalid                      "abc?"' //? is invalid                      new String('a'' 64)' //too long                      new String('a'' 256) //too long                  };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidQueuePrefixTest,The following statement contains a magic number: string[] negatives =                  {                      String.Empty' //can not empty                      "Aabc"' //start with a-z0-9                      "abcAde"' //can not contain upper case                      "-abc"' //start with a-z0-9                      "a--bc"' //can not contain consecutive dash                      "$abc"' //$ is invalid                      "abd*677"' //* is invalid                      "abc?"' //? is invalid                      new String('a'' 64)' //too long                      new String('a'' 256) //too long                  };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidFileNameTest,The following statement contains a magic number: string[] positives = { "a"' "ab"' "abc"' "Aabc"' "abc987"' "abc2de"' "4abc"' "abc-def"' "a-c"' "ac-"' new String('a'' 63) };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidFileNameTest,The following statement contains a magic number: string[] negatives =                  {                      String.Empty' //can not empty                      "abc/e"' //$ is invalid                      "COM1"' //forbidden file name                      "abd*677"' //* is invalid                      "abc?"' //? is invalid                      new String('a'' 512)' //too long                      new String('a'' 1024) //too long                  };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,NameUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\NameUtilTest.cs,IsValidFileNameTest,The following statement contains a magic number: string[] negatives =                  {                      String.Empty' //can not empty                      "abc/e"' //$ is invalid                      "COM1"' //forbidden file name                      "abd*677"' //* is invalid                      "abc?"' //? is invalid                      new String('a'' 512)' //too long                      new String('a'' 1024) //too long                  };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,ValidateParseServicePropertiesTest,The following statement contains a magic number: serviceProperties.MinuteMetrics.RetentionDays = 3;
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,ValidateParseServicePropertiesTest,The following statement contains a magic number: serviceProperties.Logging.RetentionDays = 5;
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,ValidateParseServicePropertiesTest,The following statement contains a magic number: serviceProperties.DeleteRetentionPolicy.RetentionDays = 5;
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,PrepareCoresproperties,The following statement contains a magic number: coresproperties.CorsRules.Add(                      new CorsRule()                      {                          AllowedHeaders = new List<string>                          {                          "x-ms-meta-data*"'                          "x -ms-meta-target*"'                          "x -ms-meta-abc"                          }'                          AllowedMethods = CorsHttpMethods.Connect | CorsHttpMethods.Delete | CorsHttpMethods.Get | CorsHttpMethods.Head | CorsHttpMethods.Merge'                          AllowedOrigins = new List<string>                          {                          "http://www.contoso.com"'                          "http://www.fabrikam.com"                          }'                          ExposedHeaders = new List<string>                          {                          "x-ms-meta-*"                          }'                          MaxAgeInSeconds = 100                      });
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,PSServicePropertiesTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\PSServicePropertiesTest.cs,PrepareCoresproperties,The following statement contains a magic number: coresproperties.CorsRules.Add(                  new CorsRule()                  {                      AllowedHeaders = new List<string>                      {                          "x -ms-meta-12345675754564*"                      }'                      AllowedMethods = CorsHttpMethods.None'                      AllowedOrigins = new List<string>                      {                          "http://www.abc23.com"'                          "https://www.fabrikam.com/*"                      }'                      ExposedHeaders = new List<string>                      {                          "x-ms-meta-data*"'                          "x -ms-meta-target*"'                          "x -ms-meta-abc"                      }'                      MaxAgeInSeconds = 2000                  });
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,StorageCloudCmdletBaseTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\StorageCloudCmdletBaseTest.cs,WriteObjectWithStorageContextWihtEnumerableList,The following statement contains a magic number: Assert.AreEqual(2' MockCmdRunTime.OutputPipeline.Count);
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,StorageExceptionUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\StorageExceptionUtilTest.cs,IsNotFoundExceptionTest,The following statement contains a magic number: RequestResult result = new RequestResult()              {                  HttpStatusCode = 500              };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,StorageExceptionUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\StorageExceptionUtilTest.cs,IsNotFoundExceptionTest,The following statement contains a magic number: result = new RequestResult()              {                  HttpStatusCode = 404              };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,StorageExceptionUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\StorageExceptionUtilTest.cs,RepackStorageExceptionWithoutStatusMessageTest,The following statement contains a magic number: RequestResult result = new RequestResult()              {                  HttpStatusCode = 500              };
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Common,StorageExceptionUtilTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\StorageExceptionUtilTest.cs,RepackStorageExceptionTest,The following statement contains a magic number: RequestResult result = new RequestResult()              {                  HttpStatusCode = 404              };
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.Common,FileNamingGenerator,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\FileNamingGenerator.cs,GenerateShareNameInternal,The following statement contains a magic number: i < length - 2
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.Common,FileNamingGenerator,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Common\FileNamingGenerator.cs,GenerateShareNameInternal,The following statement contains a magic number: int pos = r.Next(1' length - 2);
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageFileTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageFileTest.cs,GetFileFromRootTest_ShareNameParameterSet,The following statement contains a magic number: var listItems = Enumerable.Range(0' 10).Select(x => share.GetRootDirectoryReference().GetFileReference(string.Format("file{0}"' x))).Cast<IListFileItem>()                  .Concat(Enumerable.Range(0' 5).Select(x => share.GetRootDirectoryReference().GetDirectoryReference(string.Format("dir{0}"' x)))).ToArray();
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageFileTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageFileTest.cs,GetFileFromRootTest_ShareNameParameterSet,The following statement contains a magic number: var listItems = Enumerable.Range(0' 10).Select(x => share.GetRootDirectoryReference().GetFileReference(string.Format("file{0}"' x))).Cast<IListFileItem>()                  .Concat(Enumerable.Range(0' 5).Select(x => share.GetRootDirectoryReference().GetDirectoryReference(string.Format("dir{0}"' x)))).ToArray();
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageFileTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageFileTest.cs,GetFileFromRootTest_ShareParameterSet,The following statement contains a magic number: var listItems = Enumerable.Range(0' 10).Select(x => share.GetRootDirectoryReference().GetFileReference(string.Format("file{0}"' x))).Cast<IListFileItem>()                  .Concat(Enumerable.Range(0' 5).Select(x => share.GetRootDirectoryReference().GetDirectoryReference(string.Format("dir{0}"' x)))).ToArray();
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageFileTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageFileTest.cs,GetFileFromRootTest_ShareParameterSet,The following statement contains a magic number: var listItems = Enumerable.Range(0' 10).Select(x => share.GetRootDirectoryReference().GetFileReference(string.Format("file{0}"' x))).Cast<IListFileItem>()                  .Concat(Enumerable.Range(0' 5).Select(x => share.GetRootDirectoryReference().GetDirectoryReference(string.Format("dir{0}"' x)))).ToArray();
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageFileTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageFileTest.cs,GetFileFromSubDirectoryTest_UsingDirectoryObject,The following statement contains a magic number: var listItems = Enumerable.Range(0' 10).Select(x => dir.GetFileReference(string.Format("file{0}"' x))).Cast<IListFileItem>()                  .Concat(Enumerable.Range(0' 5).Select(x => dir.GetDirectoryReference(string.Format("dir{0}"' x)))).ToArray();
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageFileTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageFileTest.cs,GetFileFromSubDirectoryTest_UsingDirectoryObject,The following statement contains a magic number: var listItems = Enumerable.Range(0' 10).Select(x => dir.GetFileReference(string.Format("file{0}"' x))).Cast<IListFileItem>()                  .Concat(Enumerable.Range(0' 5).Select(x => dir.GetDirectoryReference(string.Format("dir{0}"' x)))).ToArray();
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageShareTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageShareTest.cs,GetShareByPrefixTest,The following statement contains a magic number: var expectedShares = Enumerable.Range(0' 10).Select(x => string.Format(CultureInfo.InvariantCulture' "share{0}"' x)).ToArray();
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageShareTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageShareTest.cs,GetShareByPrefixTest,The following statement contains a magic number: this.MockChannel.SetsAvailableShare(expectedShares.Concat(Enumerable.Range(0' 5).Select(x => string.Format(CultureInfo.InvariantCulture' "nonshare{0}"' x))).ToArray());
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,GetAzureStorageShareTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\GetAzureStorageShareTest.cs,GetShareByPrefixTest_NoShareMatchingPrefix,The following statement contains a magic number: this.MockChannel.SetsAvailableShare(Enumerable.Range(0' 5).Select(x => string.Format(CultureInfo.InvariantCulture' "nonshare{0}"' x)).ToArray());
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,NewAzureStorageDirectoryTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\NewAzureStorageDirectoryTest.cs,NewDirectoryWithTooLongNameTest,The following statement contains a magic number: NewDirectoryAndAssert(FileNamingGenerator.GenerateValidASCIIName(256)' "ArgumentException");
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,NewAzureStorageDirectoryTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\NewAzureStorageDirectoryTest.cs,NewDirectoryWithLongNameTest,The following statement contains a magic number: NewDirectoryAndAssert(FileNamingGenerator.GenerateValidASCIIName(255));
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,NewAzureStorageShareTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\NewAzureStorageShareTest.cs,NewShareWithLongName,The following statement contains a magic number: this.NewShareAndValidate(FileNamingGenerator.GenerateValidShareName(63));
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,NewAzureStorageShareTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\NewAzureStorageShareTest.cs,NewShareWithInvalidShareName_DoubleDash,The following statement contains a magic number: this.NewShareAndValidate(FileNamingGenerator.GenerateInvalidShareName_DoubleDash(20)' "ArgumentException");
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,NewAzureStorageShareTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\NewAzureStorageShareTest.cs,NewShareWithInvalidShareName_EndsWithDash,The following statement contains a magic number: this.NewShareAndValidate(FileNamingGenerator.GenerateInvalidShareName_EndsWithDash(20)' "ArgumentException");
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,NewAzureStorageShareTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\NewAzureStorageShareTest.cs,NewShareWithInvalidShareName_StartsWithDash,The following statement contains a magic number: this.NewShareAndValidate(FileNamingGenerator.GenerateInvalidShareName_StartsWithDash(20)' "ArgumentException");
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,NewAzureStorageShareTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\NewAzureStorageShareTest.cs,NewShareWithInvalidShareName_UpperCase,The following statement contains a magic number: this.NewShareAndValidate(FileNamingGenerator.GenerateInvalidShareName_UpperCase(20)' "ArgumentException");
Magic Number,Microsoft.WindowsAzure.Management.Storage.Test.File.Cmdlet,NewAzureStorageShareTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\File\Cmdlet\NewAzureStorageShareTest.cs,NewShareWithTooLongName,The following statement contains a magic number: this.NewShareAndValidate(FileNamingGenerator.GenerateValidASCIIName(64)' "ArgumentException");
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Queue,GetAzureStorageQueueTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Queue\GetAzureStorageQueueTest.cs,ListQueuesByNameWithEmptyNameTest,The following statement contains a magic number: Assert.AreEqual(2' queueList.Count);
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Queue,GetAzureStorageQueueTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Queue\GetAzureStorageQueueTest.cs,ListQueuesByNameWithWildCardTest,The following statement contains a magic number: Assert.AreEqual(2' queueList.Count);
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Queue,GetAzureStorageQueueTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Queue\GetAzureStorageQueueTest.cs,ListQueuesByPrefixSuccessfullyTest,The following statement contains a magic number: Assert.AreEqual(2' queueList.Count);
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Queue,GetAzureStorageQueueTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Queue\GetAzureStorageQueueTest.cs,WriteQueueWithCountTest,The following statement contains a magic number: Assert.AreEqual(2' MockCmdRunTime.OutputPipeline.Count);
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Table,GetAzureStorageTableStoredAccessPolicyTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Table\GetAzureStorageTableStoredAccessPolicyTest.cs,GetAllStoredAccessPolicySuccessTest,The following statement contains a magic number: Assert.AreEqual(2' MockCmdRunTime.OutputPipeline.Count);
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Table,GetAzureStorageTableTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Table\GetAzureStorageTableTest.cs,ListTablesByNameWithEmptyNameTest,The following statement contains a magic number: Assert.AreEqual(2' tableList.Count);
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Table,GetAzureStorageTableTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Table\GetAzureStorageTableTest.cs,ListTablesByNameWithWildCardTest,The following statement contains a magic number: Assert.AreEqual(2' tableList.Count);
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Table,GetAzureStorageTableTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Table\GetAzureStorageTableTest.cs,ListTablesByPrefixSuccessfullyTest,The following statement contains a magic number: Assert.AreEqual(2' tableList.Count);
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Table,GetAzureStorageTableTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Table\GetAzureStorageTableTest.cs,WriteTablesWithStorageContextTest,The following statement contains a magic number: Assert.AreEqual(2' MockCmdRunTime.OutputPipeline.Count);
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Test.Table,SetAzureStorageTableStoredAccessPolicyTest,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Test\Table\SetAzureStorageTableStoredAccessPolicyTest.cs,SetStoredAccessPolicySuccessTest,The following statement contains a magic number: DateTime expiryTime = DateTime.Today.AddDays(2);
