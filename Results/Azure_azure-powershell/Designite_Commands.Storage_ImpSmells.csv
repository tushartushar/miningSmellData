Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StopAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StopAzureStorageBlobCopy.cs,StopCopyBlob,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,SetAzureStorageServiceLoggingCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\SetAzureStorageServiceLogging.cs,UpdateServiceProperties,Cyclomatic complexity of the method is 9
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageBlobCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageBlob.cs,ListBlobsByPrefix,The method has 5 parameters. Parameters: taskId' localChannel' containerName' prefix' blobFilter
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,NewAzureStorageBlobSasTokenCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\NewAzureStorageBlobSasToken.cs,GetBlobSharedAccessSignature,The method has 5 parameters. Parameters: blob' accessPolicy' policyIdentifier' protocol' iPAddressOrRange
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,NewAzureStorageContainerStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\NewAzureStorageContainerStoredAccessPolicy.cs,CreateAzureContainerStoredAccessPolicy,The method has 6 parameters. Parameters: localChannel' containerName' policyName' startTime' expiryTime' permission
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,SetAzureStorageContainerStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\SetAzureStorageContainerStoredAccessPolicy.cs,SetAzureContainerStoredAccessPolicy,The method has 8 parameters. Parameters: localChannel' containerName' policyName' startTime' expiryTime' permission' noStartTime' noExpiryTime
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobIncrementalCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobIncrementalCopy.cs,StartCopyBlob,The method has 5 parameters. Parameters: destChannel' srcUri' destContainer' destBlobName' context
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobIncrementalCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobIncrementalCopy.cs,StartCopyBlob,The method has 7 parameters. Parameters: SrcChannel' destChannel' srcContainerName' srcBlobName' SrcBlobSnapshotTime' destContainerName' destBlobName
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobIncrementalCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobIncrementalCopy.cs,StartCopyAsync,The method has 5 parameters. Parameters: taskId' destChannel' uri' destContainer' destBlobName
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobCopy.cs,StartCopyBlob,The method has 5 parameters. Parameters: destChannel' srcUri' destContainer' destBlobName' context
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobCopy.cs,StartCopyBlob,The method has 6 parameters. Parameters: SrcChannel' destChannel' srcContainerName' srcBlobName' destContainerName' destBlobName
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobCopy.cs,StartCopyFromFile,The method has 6 parameters. Parameters: srcChannel' destChannel' srcShareName' srcFilePath' destContainerName' destBlobName
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobCopy.cs,StartCopyFromFile,The method has 5 parameters. Parameters: destChannel' srcDir' srcFilePath' destContainerName' destBlobName
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobCopy.cs,StartCopyAsync,The method has 5 parameters. Parameters: taskId' destChannel' uri' destContainer' destBlobName
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StopAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StopAzureStorageBlobCopy.cs,StopCopyBlob,The method has 5 parameters. Parameters: taskId' localChannel' containerName' blobName' copyId
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StopAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StopAzureStorageBlobCopy.cs,StopCopyBlob,The method has 5 parameters. Parameters: taskId' localChannel' container' blobName' copyId
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StopAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StopAzureStorageBlobCopy.cs,StopCopyBlob,The method has 5 parameters. Parameters: taskId' localChannel' blob' copyId' fetchCopyIdFromBlob
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Common,AccessPolicyHelper,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\AccessPolicyHelper.cs,SetupAccessPolicy,The method has 6 parameters. Parameters: policy' startTime' expiryTime' permission' noStartTime' noExpiryTime
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Common,DataManagementWrapper,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\DataManagementWrapper.cs,DownloadAsync,The method has 5 parameters. Parameters: sourceFile' destPath' options' context' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Common,DataManagementWrapper,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\DataManagementWrapper.cs,DownloadAsync,The method has 5 parameters. Parameters: sourceBlob' destPath' options' context' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Common,DataManagementWrapper,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\DataManagementWrapper.cs,UploadAsync,The method has 5 parameters. Parameters: sourcePath' destFile' options' context' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Common,DataManagementWrapper,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\DataManagementWrapper.cs,UploadAsync,The method has 5 parameters. Parameters: sourcePath' destBlob' options' context' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Common,ITransferManager,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\ITransferManager.cs,DownloadAsync,The method has 5 parameters. Parameters: sourceFile' destPath' options' context' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Common,ITransferManager,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\ITransferManager.cs,DownloadAsync,The method has 5 parameters. Parameters: sourceBlob' destPath' options' context' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Common,ITransferManager,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\ITransferManager.cs,UploadAsync,The method has 5 parameters. Parameters: sourcePath' destFile' options' context' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Common,ITransferManager,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\ITransferManager.cs,UploadAsync,The method has 5 parameters. Parameters: sourcePath' destBlob' options' context' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Common,SasTokenHelper,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\SasTokenHelper.cs,ValidateShareAccessPolicy,The method has 6 parameters. Parameters: channel' shareName' policyIdentifier' shouldNoPermission' shouldNoStartTime' shouldNoExpiryTime
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Common,SasTokenHelper,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\SasTokenHelper.cs,SetupAccessPolicyLifeTime,The method has 5 parameters. Parameters: startTime' expiryTime' SharedAccessStartTime' SharedAccessExpiryTime' shouldSetExpiryTime
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Common,Util,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Util.cs,GetBlobReferenceFromServer,The method has 6 parameters. Parameters: container' blobName' accessCondition' options' operationContext' snapshotTime
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Common,Util,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Util.cs,GetBlobReferenceFromServer,The method has 5 parameters. Parameters: blob' accessCondition' options' operationContext' snapshotTime
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage,StorageCloudBlobCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\StorageCloudBlobCmdletBase.cs,GetBlobReferenceFromServerWithContainer,The method has 7 parameters. Parameters: localChannel' container' blobName' accessCondition' requestOptions' operationContext' snapshotTime
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage,StorageCloudBlobCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\StorageCloudBlobCmdletBase.cs,GetBlobSnapshotReferenceFromServerWithContainer,The method has 7 parameters. Parameters: localChannel' container' blobName' SrcBlobSnapshotTime' accessCondition' requestOptions' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage,StorageCloudBlobCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\StorageCloudBlobCmdletBase.cs,WriteCloudContainerObject,The method has 5 parameters. Parameters: taskId' channel' container' permissions' continuationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,SetAzureStorageShareStoredAccessPolicy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\SetAzureStorageShareStoredAccessPolicy.cs,SetAzureShareStoredAccessPolicy,The method has 8 parameters. Parameters: localChannel' shareName' policyName' startTime' expiryTime' permission' noStartTime' noExpiryTime
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageFileManagement.cs,SetSharePermissions,The method has 5 parameters. Parameters: share' permissions' accessCondition' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageFileManagement.cs,EnumerateFilesAndDirectoriesAsync,The method has 5 parameters. Parameters: directory' enumerationAction' options' operationContext' token
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageFileManagement.cs,FetchShareAttributesAsync,The method has 5 parameters. Parameters: share' accessCondition' options' operationContext' token
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageFileManagement.cs,EnumerateSharesAsync,The method has 6 parameters. Parameters: prefix' detailsIncluded' enumerationAction' options' operationContext' token
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageFileManagement.cs,DeleteDirectoryAsync,The method has 5 parameters. Parameters: directory' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageFileManagement.cs,FetchDirectoryAttributesAsync,The method has 5 parameters. Parameters: directory' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageFileManagement.cs,DeleteShareAsync,The method has 6 parameters. Parameters: share' deleteShareSnapshotsOption' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageFileManagement.cs,DeleteFileAsync,The method has 5 parameters. Parameters: file' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageFileManagement.cs,GetSharePermissionsAsync,The method has 5 parameters. Parameters: share' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageFileManagement.cs,FetchFileAttributesAsync,The method has 5 parameters. Parameters: file' accessCondition' options' operationContext' token
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageFileManagement.cs,AbortCopyAsync,The method has 6 parameters. Parameters: file' copyId' accessCondition' requestOptions' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageFileManagement.cs,EnumerateFilesAndDirectoriesAsync,The method has 5 parameters. Parameters: directory' enumerationAction' options' operationContext' token
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageFileManagement.cs,FetchShareAttributesAsync,The method has 5 parameters. Parameters: share' accessCondition' options' operationContext' token
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageFileManagement.cs,EnumerateSharesAsync,The method has 6 parameters. Parameters: prefix' detailsIncluded' enumerationAction' options' operationContext' token
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageFileManagement.cs,DeleteDirectoryAsync,The method has 5 parameters. Parameters: directory' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageFileManagement.cs,DeleteShareAsync,The method has 6 parameters. Parameters: share' deleteShareSnapshotsOption' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageFileManagement.cs,DeleteFileAsync,The method has 5 parameters. Parameters: file' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageFileManagement.cs,GetSharePermissionsAsync,The method has 5 parameters. Parameters: share' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageFileManagement.cs,SetSharePermissions,The method has 5 parameters. Parameters: share' permissions' accessCondition' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageFileManagement.cs,FetchFileAttributesAsync,The method has 5 parameters. Parameters: file' accessCondition' options' operationContext' token
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageFileManagement.cs,FetchDirectoryAttributesAsync,The method has 5 parameters. Parameters: directory' accessCondition' options' operationContext' token
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageFileManagement.cs,AbortCopyAsync,The method has 6 parameters. Parameters: file' copyId' accessCondition' requestOptions' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,ListContainersSegmented,The method has 6 parameters. Parameters: prefix' detailsIncluded' maxResults' continuationToken' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,SetContainerPermissions,The method has 5 parameters. Parameters: container' permissions' accessCondition' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,GetBlobReferenceFromServer,The method has 6 parameters. Parameters: container' blobName' accessCondition' options' operationContext' SnapshotTime
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,ListBlobs,The method has 6 parameters. Parameters: container' prefix' useFlatBlobListing' blobListingDetails' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,DeleteCloudBlob,The method has 5 parameters. Parameters: blob' deleteSnapshotsOption' accessCondition' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,AbortCopy,The method has 5 parameters. Parameters: blob' copyId' accessCondition' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,GetContainerPermissionsAsync,The method has 5 parameters. Parameters: container' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,GetBlobReferenceFromServerAsync,The method has 6 parameters. Parameters: container' blobName' accessCondition' options' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,FetchBlobAttributesAsync,The method has 5 parameters. Parameters: blob' accessCondition' options' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,CreateContainerIfNotExistsAsync,The method has 5 parameters. Parameters: container' accessType' requestOptions' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,DeleteContainerAsync,The method has 5 parameters. Parameters: container' accessCondition' requestOptions' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,AbortCopyAsync,The method has 6 parameters. Parameters: blob' copyId' accessCondition' requestOption' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,StartCopyAsync,The method has 7 parameters. Parameters: blob' source' sourceAccessCondition' destAccessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,StartCopyAsync,The method has 8 parameters. Parameters: blob' source' premiumPageBlobTier' sourceAccessCondition' destAccessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,StartIncrementalCopyAsync,The method has 6 parameters. Parameters: blob' source' destAccessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,SetContainerPermissionsAsync,The method has 6 parameters. Parameters: container' permissions' accessCondition' requestOptions' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,DeleteCloudBlobAsync,The method has 6 parameters. Parameters: blob' deleteSnapshotsOption' accessCondition' requestOptions' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,SetBlobPropertiesAsync,The method has 5 parameters. Parameters: blob' accessCondition' options' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,SetBlobMetadataAsync,The method has 5 parameters. Parameters: blob' accessCondition' options' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,SetPageBlobTierAsync,The method has 5 parameters. Parameters: blob' tier' options' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,ListBlobsSegmentedAsync,The method has 9 parameters. Parameters: container' prefix' useFlatBlobListing' blobListingDetails' maxResults' currentToken' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,IStorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\IStorageBlobManagement.cs,ListBlobsSegmented,The method has 8 parameters. Parameters: container' prefix' useFlatBlobListing' blobListingDetails' maxResults' currentToken' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,SetContainerPermissions,The method has 5 parameters. Parameters: container' permissions' accessCondition' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,GetBlobReferenceFromServer,The method has 6 parameters. Parameters: container' blobName' accessCondition' options' operationContext' SnapshotTime
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,ListBlobs,The method has 6 parameters. Parameters: container' prefix' useFlatBlobListing' blobListingDetails' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,DeleteCloudBlob,The method has 5 parameters. Parameters: blob' deleteSnapshotsOption' accessCondition' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,AbortCopy,The method has 5 parameters. Parameters: blob' copyId' accessCondition' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,GetContainerPermissionsAsync,The method has 5 parameters. Parameters: container' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,GetBlobReferenceFromServerAsync,The method has 6 parameters. Parameters: container' blobName' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,FetchBlobAttributesAsync,The method has 5 parameters. Parameters: blob' accessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,CreateContainerIfNotExistsAsync,The method has 5 parameters. Parameters: container' accessType' requestOptions' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,DeleteContainerAsync,The method has 5 parameters. Parameters: container' accessCondition' requestOptions' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,AbortCopyAsync,The method has 6 parameters. Parameters: blob' copyId' accessCondition' requestOptions' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,SetContainerPermissionsAsync,The method has 6 parameters. Parameters: container' permissions' accessCondition' requestOptions' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,DeleteCloudBlobAsync,The method has 6 parameters. Parameters: blob' deleteSnapshotsOption' accessCondition' requestOptions' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,SetBlobPropertiesAsync,The method has 5 parameters. Parameters: blob' accessCondition' options' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,SetBlobMetadataAsync,The method has 5 parameters. Parameters: blob' accessCondition' options' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,SetPageBlobTierAsync,The method has 5 parameters. Parameters: blob' tier' options' operationContext' cmdletCancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,ListBlobsSegmentedAsync,The method has 9 parameters. Parameters: container' prefix' useFlatBlobListing' blobListingDetails' maxResults' currentToken' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,ListBlobsSegmented,The method has 8 parameters. Parameters: container' prefix' useFlatBlobListing' blobListingDetails' maxResults' currentToken' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,ListContainersSegmented,The method has 6 parameters. Parameters: prefix' detailsIncluded' maxResults' currentToken' options' operationContext
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,StartCopyAsync,The method has 7 parameters. Parameters: blob' source' sourceAccessCondition' destAccessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,StartCopyAsync,The method has 8 parameters. Parameters: blob' source' premiumPageBlobTier' sourceAccessCondition' destAccessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,StartIncrementalCopyAsync,The method has 6 parameters. Parameters: blob' source' destAccessCondition' options' operationContext' cancellationToken
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Queue.Cmdlet,NewAzureStorageQueueStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Queue\Cmdlet\NewAzureStorageQueueStoredAccessPolicy.cs,CreateAzureQueueStoredAccessPolicy,The method has 6 parameters. Parameters: localChannel' queueName' policyName' startTime' expiryTime' permission
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Queue.Cmdlet,SetAzureStorageQueueStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Queue\Cmdlet\SetAzureStorageQueueStoredAccessPolicy.cs,SetAzureQueueStoredAccessPolicy,The method has 8 parameters. Parameters: localChannel' queueName' policyName' startTime' expiryTime' permission' noStartTime' noExpiryTime
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Table.Cmdlet,NewAzureStorageTableStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Table\Cmdlet\NewAzureStorageTableStoredAccessPolicy.cs,CreateAzureTableStoredAccessPolicy,The method has 6 parameters. Parameters: localChannel' tableName' policyName' startTime' expiryTime' permission
Long Parameter List,Microsoft.WindowsAzure.Commands.Storage.Table.Cmdlet,SetAzureStorageTableStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Table\Cmdlet\SetAzureStorageTableStoredAccessPolicy.cs,SetAzureTableStoredAccessPolicy,The method has 8 parameters. Parameters: localChannel' tableName' policyName' startTime' expiryTime' permission' noStartTime' noExpiryTime
Long Identifier,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,NewAzureStorageBlobSasTokenCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\NewAzureStorageBlobSasToken.cs,,The length of the parameter BlobNamePipelineParmeterSetWithPermission is 41.
Long Identifier,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,NewAzureStorageBlobSasTokenCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\NewAzureStorageBlobSasToken.cs,,The length of the parameter BlobNamePipelineParmeterSetWithPolicy is 37.
Long Identifier,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,NewAzureStorageBlobSasTokenCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\NewAzureStorageBlobSasToken.cs,,The length of the parameter BlobPipelineParameterSetWithPermision is 37.
Long Identifier,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,NewAzureStorageBlobSasTokenCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\NewAzureStorageBlobSasToken.cs,,The length of the parameter BlobPipelineParameterSetWithPolicy is 34.
Long Identifier,Microsoft.WindowsAzure.Commands.Storage.Common,BlobToFileNameResolver,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\BlobToFileNameResolver.cs,,The length of the parameter translateDelimitersRegexFormat is 30.
Long Identifier,Microsoft.WindowsAzure.Commands.Storage.Common,NameUtil,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\NameUtil.cs,,The length of the parameter MaxStoredAccessPolicyNameLength is 31.
Long Identifier,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,NewAzureStorageContext,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\NewAzureStorageContext.cs,,The length of the parameter SasTokenEnvironmentParameterSet is 31.
Long Identifier,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,NewAzureStorageContext,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\NewAzureStorageContext.cs,,The length of the parameter AccountNameKeyEnvironmentParameterSet is 37.
Long Identifier,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,NewAzureStorageContext,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\NewAzureStorageContext.cs,,The length of the parameter AnonymousEnvironmentParameterSet is 32.
Long Identifier,Microsoft.WindowsAzure.Commands.Storage.File,Constants,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Constants.cs,,The length of the parameter MatchingPrefixParameterSetName is 30.
Long Identifier,Microsoft.WindowsAzure.Commands.Storage.File,Constants,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Constants.cs,,The length of the parameter ConnectionStringEnvironmentName is 31.
Long Identifier,Microsoft.WindowsAzure.Commands.Storage.File,Constants,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Constants.cs,,The length of the parameter DefaultServerTimeoutPerRequest is 30.
Long Identifier,Microsoft.WindowsAzure.Commands.Storage.File,Constants,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Constants.cs,,The length of the parameter DefaultClientTimeoutPerRequests is 31.
Long Identifier,Microsoft.WindowsAzure.Commands.Storage.File,Constants,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Constants.cs,,The length of the parameter DefaultTimeoutForDownloadingAndUploading is 40.
Long Identifier,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,NewAzureStorageFileSasToken,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\NewAzureStorageFileSasToken.cs,,The length of the parameter CloudFileSasPermissionParameterSet is 34.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Adapters,AzureContextAdapterExtensions,C:\repos\Azure_azure-powershell\src\Common\Commands.Common.Storage\Adapters\WindowsAzure.Storage.8\AzureContextAdapterExtensions.cs,GetStorageContext,The length of the statement  "            return new AzureStorageContext(new CloudStorageAccount(new StorageCredentials(service.Name' service.AuthenticationKeys.First())' " is 128.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageBlobCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageBlob.cs,GetCloudBlobContainerByName,The length of the statement  "                && !await localChannel.DoesContainerExistAsync(container' requestOptions' OperationContext' CmdletCancellationToken).ConfigureAwait(false)) " is 139.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageBlobCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageBlob.cs,ListBlobsByName,The length of the statement  "                CloudBlob blob = await localChannel.GetBlobReferenceFromServerAsync(container' blobName' accessCondition' requestOptions' OperationContext' CmdletCancellationToken).ConfigureAwait(false); " is 187.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageBlobCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageBlob.cs,ListBlobsByPrefix,The length of the statement  "                    details' requestCount' continuationToken' requestOptions' OperationContext' CmdletCancellationToken).ConfigureAwait(false); " is 123.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageBlobContentCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageBlobContent.cs,GetBlobContent,The length of the statement  "            CloudBlob blob = GetBlobReferenceFromServerWithContainer(Channel' container' blobName' accessCondition' requestOptions' OperationContext); " is 138.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageBlobContentCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageBlobContent.cs,GetBlobContent,The length of the statement  "            CloudBlob blob = GetBlobReferenceFromServerWithContainer(Channel' container' blobName' accessCondition' requestOptions' OperationContext); " is 138.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageBlobContentCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageBlobContent.cs,GetBlobContent,The length of the statement  "                throw new ArgumentNullException(typeof(CloudBlob).Name' String.Format(Resources.ObjectCannotBeNull' typeof(CloudBlob).Name)); " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageBlobContentCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageBlobContent.cs,GetFullReceiveFilePath,The length of the statement  "            //there is no need to check the read/write permission on the specified file path' the datamovement libraray will do that " is 120.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageBlobCopyState,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageBlobCopyState.cs,WriteCopyProgress,The length of the statement  "            string activity = String.Format(Resources.CopyBlobStatus' blob.CopyState.Status.ToString()' blob.Name' blob.Container.Name' blob.CopyState.Source.ToString()); " is 158.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageBlobCopyState,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageBlobCopyState.cs,WriteCopyProgress,The length of the statement  "            string message = String.Format(Resources.CopyPendingStatus' percent' blob.CopyState.BytesCopied' blob.CopyState.TotalBytes); " is 124.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageBlobCopyState,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageBlobCopyState.cs,GetCloudBlobObject,The length of the statement  "            CloudBlob blob = GetBlobReferenceFromServerWithContainer(Channel' container' blobName' accessCondition' options' OperationContext); " is 131.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageBlobCopyState,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageBlobCopyState.cs,MonitorBlobCopyStatusAsync,The length of the statement  "            ProgressRecord records = new ProgressRecord(OutputStream.GetProgressId(taskId)' Resources.CopyBlobActivity' Resources.CopyBlobActivity); " is 136.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageBlobCopyState,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageBlobCopyState.cs,MonitorBlobCopyStatusAsync,The length of the statement  "                    await Channel.FetchBlobAttributesAsync(blob' accessCondition' requestOptions' context' CmdletCancellationToken).ConfigureAwait(false); " is 134.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageContainerCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageContainer.cs,ListContainersByName,The length of the statement  "                IEnumerable<Tuple<CloudBlobContainer' BlobContinuationToken>> containerList = ListContainersByPrefix(prefix' containerFilter); " is 126.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageContainerCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageContainer.cs,ListContainersByPrefix,The length of the statement  "                ContainerResultSegment containerResult = Channel.ListContainersSegmented(prefix' details' requestCount' continuationToken' requestOptions' OperationContext); " is 157.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageContainerCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageContainer.cs,PackCloudBlobContainerWithAcl,The length of the statement  "                Func<long' Task> generator = (taskId) => GetContainerPermission(taskId' localChannel' containerInfo.Item1' containerInfo.Item2); " is 128.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageContainerStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageContainerStoredAccessPolicy.cs,GetAzureContainerStoredAccessPolicyAsync,The length of the statement  "            SharedAccessBlobPolicies shareAccessPolicies = await GetPoliciesAsync(localChannel' containerName' policyName).ConfigureAwait(false); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageContainerStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageContainerStoredAccessPolicy.cs,GetAzureContainerStoredAccessPolicyAsync,The length of the statement  "                    OutputStream.WriteObject(taskId' AccessPolicyHelper.ConstructPolicyOutputPSObject<SharedAccessBlobPolicy>(shareAccessPolicies' policyName)); " is 140.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageContainerStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageContainerStoredAccessPolicy.cs,GetAzureContainerStoredAccessPolicyAsync,The length of the statement  "                    OutputStream.WriteObject(taskId' AccessPolicyHelper.ConstructPolicyOutputPSObject<SharedAccessBlobPolicy>(shareAccessPolicies' key)); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageContainerStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageContainerStoredAccessPolicy.cs,GetPoliciesAsync,The length of the statement  "            BlobContainerPermissions blobContainerPermissions = await localChannel.GetContainerPermissionsAsync(container' null' null' null' CmdletCancellationToken).ConfigureAwait(false); " is 176.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageContainerStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageContainerStoredAccessPolicy.cs,ExecuteCmdlet,The length of the statement  "            Func<long' Task> taskGenerator = (taskId) => GetAzureContainerStoredAccessPolicyAsync(taskId' Channel' Container' Policy); " is 122.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,NewAzureStorageBlobSasTokenCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\NewAzureStorageBlobSasToken.cs,ExecuteCmdlet,The length of the statement  "            bool shouldSetExpiryTime = SasTokenHelper.ValidateContainerAccessPolicy(Channel' blob.Container.Name' accessPolicy' accessPolicyIdentifier); " is 140.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,NewAzureStorageBlobSasTokenCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\NewAzureStorageBlobSasToken.cs,ExecuteCmdlet,The length of the statement  "            string sasToken = GetBlobSharedAccessSignature(blob' accessPolicy' accessPolicyIdentifier' Protocol' Util.SetupIPAddressOrRangeForSAS(IPAddressOrRange)); " is 153.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,NewAzureStorageBlobSasTokenCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\NewAzureStorageBlobSasToken.cs,GetCloudBlobByName,The length of the statement  "            //Create a block blob object in local no mattter what's the real blob type. If so' we can save the unnecessary request calls. " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,NewAzureStorageContainerCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\NewAzureStorageContainer.cs,CreateAzureContainer,The length of the statement  "            bool created = await localChannel.CreateContainerIfNotExistsAsync(container' permissions.PublicAccess' requestOptions' OperationContext' CmdletCancellationToken).ConfigureAwait(false); " is 184.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,NewAzureStorageContainerSasTokenCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\NewAzureStorageContainerSasToken.cs,ExecuteCmdlet,The length of the statement  "            bool shouldSetExpiryTime = SasTokenHelper.ValidateContainerAccessPolicy(Channel' container.Name' accessPolicy' accessPolicyIdentifier); " is 135.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,NewAzureStorageContainerSasTokenCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\NewAzureStorageContainerSasToken.cs,ExecuteCmdlet,The length of the statement  "            string sasToken = container.GetSharedAccessSignature(accessPolicy' accessPolicyIdentifier' Protocol' Util.SetupIPAddressOrRangeForSAS(IPAddressOrRange)); " is 153.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,NewAzureStorageContainerStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\NewAzureStorageContainerStoredAccessPolicy.cs,CreateAzureContainerStoredAccessPolicy,The length of the statement  "                throw new ResourceAlreadyExistException(String.Format(CultureInfo.CurrentCulture' Resources.PolicyAlreadyExists' policyName)); " is 126.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,NewAzureStorageContainerStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\NewAzureStorageContainerStoredAccessPolicy.cs,ExecuteCmdlet,The length of the statement  "            string resultPolicy = CreateAzureContainerStoredAccessPolicy(Channel' Container' Policy' StartTime' ExpiryTime' Permission); " is 124.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,RemoveAzureStorageContainerCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\RemoveAzureStorageContainer.cs,RemoveAzureContainer,The length of the statement  "            if (!await localChannel.DoesContainerExistAsync(container' requestOptions' OperationContext' CmdletCancellationToken).ConfigureAwait(false)) " is 140.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,RemoveAzureStorageContainerCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\RemoveAzureStorageContainer.cs,RemoveAzureContainer,The length of the statement  "            if (force || ContainerIsEmpty(container) || OutputStream.ConfirmAsync(String.Format("Remove container and all content in it: {0}"' name)).Result) " is 145.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,RemoveAzureStorageContainerCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\RemoveAzureStorageContainer.cs,RemoveAzureContainer,The length of the statement  "                await localChannel.DeleteContainerAsync(container' accessCondition' requestOptions' OperationContext' CmdletCancellationToken).ConfigureAwait(false); " is 149.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,SetAzureStorageContainerStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\SetAzureStorageContainerStoredAccessPolicy.cs,SetAzureContainerStoredAccessPolicy,The length of the statement  "            AccessPolicyHelper.SetupAccessPolicy<SharedAccessBlobPolicy>(policy' startTime' expiryTime' permission' noStartTime' noExpiryTime); " is 131.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,SetAzureStorageContainerStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\SetAzureStorageContainerStoredAccessPolicy.cs,SetAzureContainerStoredAccessPolicy,The length of the statement  "            WriteObject(AccessPolicyHelper.ConstructPolicyOutputPSObject<SharedAccessBlobPolicy>(blobContainerPermissions.SharedAccessPolicies' policyName)); " is 145.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,SetAzureStorageContainerStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\SetAzureStorageContainerStoredAccessPolicy.cs,ExecuteCmdlet,The length of the statement  "                SetAzureContainerStoredAccessPolicy(Channel' Container' Policy' StartTime' ExpiryTime' Permission' NoStartTime' NoExpiryTime); " is 126.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobIncrementalCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobIncrementalCopy.cs,ExecuteCmdlet,The length of the statement  "                    copyAction = () => StartCopyBlob(srcChannel' destChannel' SrcContainer' SrcBlob' SrcBlobSnapshotTime' DestContainer' DestBlob); " is 127.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobIncrementalCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobIncrementalCopy.cs,ExecuteCmdlet,The length of the statement  "                    copyAction = () => StartCopyBlob(destChannel' AbsoluteUri' DestContainer' DestBlob' (Context != null? GetCmdletStorageContext(Context): null)); " is 143.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobIncrementalCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobIncrementalCopy.cs,ExecuteCmdlet,The length of the statement  "                    copyAction = () => StartCopyBlob(srcChannel' destChannel' CloudBlobContainer.Name' SrcBlob' SrcBlobSnapshotTime' DestContainer' DestBlob); " is 138.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobIncrementalCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobIncrementalCopy.cs,StartCopyBlob,The length of the statement  "                Func<long' Task> taskGenerator = (taskId) => StartCopyAsync(taskId' destChannel' new Uri(srcUri)' container' destBlobName); " is 123.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobIncrementalCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobIncrementalCopy.cs,StartCopyBlob,The length of the statement  "            CloudBlob blob = GetBlobReferenceFromServerWithContainer(SrcChannel' container' srcBlobName' accessCondition' options' OperationContext' SrcBlobSnapshotTime); " is 158.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobIncrementalCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobIncrementalCopy.cs,StartCopyFromUri,The length of the statement  "            //Don't need to verify the Dest Exist and warn user for overwrite' since incremental Copy won't overwrite the dest blob' but will create a new snapshot for it. " is 159.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobIncrementalCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobIncrementalCopy.cs,StartCopyFromUri,The length of the statement  "            string copyId = await destChannel.StartIncrementalCopyAsync(destBlob' new CloudPageBlob(srcUri)' null' this.RequestOptions' this.OperationContext' this.CmdletCancellationToken).ConfigureAwait(false); " is 199.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobIncrementalCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobIncrementalCopy.cs,StartCopyFromUri,The length of the statement  "            this.OutputStream.WriteVerbose(taskId' String.Format(Resources.CopyDestinationBlobPending' destBlob.Name' destBlob.Container.Name' copyId)); " is 140.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobIncrementalCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobIncrementalCopy.cs,GetDestinationBlobWithCopyId,The length of the statement  "            CloudPageBlob blob = (CloudPageBlob)destChannel.GetBlobReferenceFromServer(container' blobName' accessCondition' options' OperationContext); " is 140.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobIncrementalCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobIncrementalCopy.cs,VerifyIncrementalCopySourceBlob,The length of the statement  "                throw new ArgumentException(String.Format("Blob {0} with Type {1} is not supported as incremental copy source' only page blob snapshot is supported as incremental copy source."' blob.Name' blob.Properties.BlobType)); " is 216.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobCopy.cs,ExecuteCmdlet,The length of the statement  "                    copyAction = () => StartCopyBlob(destChannel' AbsoluteUri' DestContainer' DestBlob' (Context != null? GetCmdletStorageContext(Context) : null)); " is 144.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobCopy.cs,StartCopyBlob,The length of the statement  "                Func<long' Task> taskGenerator = (taskId) => StartCopyAsync(taskId' destChannel' new Uri(srcUri)' container' destBlobName); " is 123.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobCopy.cs,StartCopyBlob,The length of the statement  "            CloudBlob blob = GetBlobReferenceFromServerWithContainer(SrcChannel' container' srcBlobName' accessCondition' options' OperationContext); " is 137.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobCopy.cs,StartCopyFromUri,The length of the statement  "                await destBlob.FetchAttributesAsync(null' this.RequestOptions' this.OperationContext' this.CmdletCancellationToken).ConfigureAwait(false); " is 138.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobCopy.cs,StartCopyFromUri,The length of the statement  "                    copyId = await destChannel.StartCopyAsync(destBlob' srcUri' null' null' this.RequestOptions' this.OperationContext' this.CmdletCancellationToken).ConfigureAwait(false); " is 168.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobCopy.cs,StartCopyFromUri,The length of the statement  "                    copyId = await destChannel.StartCopyAsync((CloudPageBlob)destBlob' srcUri' pageBlobTier.Value' null' null' this.RequestOptions' this.OperationContext' this.CmdletCancellationToken).ConfigureAwait(false); " is 203.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobCopy.cs,StartCopyFromUri,The length of the statement  "                this.OutputStream.WriteVerbose(taskId' String.Format(Resources.CopyDestinationBlobPending' destBlob.Name' destBlob.Container.Name' copyId)); " is 140.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobCopy.cs,GetDestinationBlobWithCopyId,The length of the statement  "            CloudBlob blob = destChannel.GetBlobReferenceFromServer(container' blobName' accessCondition' options' OperationContext); " is 121.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StopAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StopAzureStorageBlobCopy.cs,StopCopyBlob,The length of the statement  "            CloudBlob blob = GetBlobReferenceFromServerWithContainer(localChannel' container' blobName' accessCondition' options' OperationContext); " is 136.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StopAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StopAzureStorageBlobCopy.cs,StopCopyBlob,The length of the statement  "                await localChannel.FetchBlobAttributesAsync(blob' accessCondition' options' OperationContext' CmdletCancellationToken).ConfigureAwait(false); " is 141.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StopAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StopAzureStorageBlobCopy.cs,StopCopyBlob,The length of the statement  "            await localChannel.AbortCopyAsync(blob' abortCopyId' accessCondition' abortRequestOption' OperationContext' CmdletCancellationToken).ConfigureAwait(false); " is 155.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob,RemoveStorageAzureBlobCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\RemoveAzureStorageBlob.cs,RemoveAzureBlob,The length of the statement  "                    //If x-ms-delete-snapshots is not specified on the request and the blob has associated snapshots' the Blob service returns status code 409 (Conflict). " is 150.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob,SetAzureBlobContentCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\SetAzureStorageBlobContent.cs,EndProcessing,The length of the statement  "                Func<long' Task> taskGenerator = (taskId) => Upload2Blob(taskId' localChannel' uploadRequest.Item1' uploadRequest.Item2); " is 121.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob,SetAzureBlobContentCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\SetAzureStorageBlobContent.cs,ValidateBlobProperties,The length of the statement  "                    throw new ArgumentException(String.Format(Resources.InvalidBlobProperties' entry.Key.ToString()' entry.Value.ToString())); " is 122.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob,SetAzureBlobContentCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\SetAzureStorageBlobContent.cs,SetBlobProperties,The length of the statement  "            await Channel.SetBlobPropertiesAsync(blob' accessCondition' requestOptions' OperationContext' CmdletCancellationToken).ConfigureAwait(false); " is 141.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob,SetAzureBlobContentCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\SetAzureStorageBlobContent.cs,SetBlobMeta,The length of the statement  "            await Channel.SetBlobMetadataAsync(blob' accessCondition' requestOptions' OperationContext' CmdletCancellationToken).ConfigureAwait(false); " is 139.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob,SetAzureBlobContentCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\SetAzureStorageBlobContent.cs,SetBlobTier,The length of the statement  "                await Channel.SetPageBlobTierAsync((CloudPageBlob)blob' pageBlobTier.Value' requestOptions' OperationContext' CmdletCancellationToken).ConfigureAwait(false); " is 157.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob,SetAzureBlobContentCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\SetAzureStorageBlobContent.cs,OnTaskSuccessful,The length of the statement  "                    localChannel.FetchBlobAttributesAsync(blob' accessCondition' requestOptions' OperationContext' CmdletCancellationToken).Wait(); " is 127.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob,SetAzureBlobContentCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\SetAzureStorageBlobContent.cs,ExecuteCmdlet,The length of the statement  "            ValidateBlobTier(string.Equals(blobType' PageBlobType' StringComparison.InvariantCultureIgnoreCase)? StorageBlob.BlobType.PageBlob : StorageBlob.BlobType.Unspecified'  " is 166.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob,StorageDataMovementCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\StorageDataMovementCmdletBase.cs,ConfirmOverwrite,The length of the statement  "            string overwriteMessage = string.Format(CultureInfo.CurrentCulture' Resources.OverwriteConfirmation' Util.ConvertToString(destination)); " is 136.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob,StorageDataMovementCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\StorageDataMovementCmdletBase.cs,GetTransferContext,The length of the statement  "                        userData.Record.PercentComplete = 0 == userData.TotalSize ? 100 : (int)(transferProgress.BytesTransferred * 100 / userData.TotalSize); " is 134.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Blob,StorageDataMovementCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\StorageDataMovementCmdletBase.cs,GetTransferContext,The length of the statement  "                        userData.Record.StatusDescription = string.Format(CultureInfo.CurrentCulture' Resources.FileTransmitStatus' userData.Record.PercentComplete); " is 141.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Cmdlet,SetAzureStorageContainerAclCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\SetAzureStorageContainerAcl.cs,SetContainerAcl,The length of the statement  "            if (!await localChannel.DoesContainerExistAsync(container' requestOptions' OperationContext' CmdletCancellationToken).ConfigureAwait(false)) " is 140.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Cmdlet,SetAzureStorageContainerAclCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\SetAzureStorageContainerAcl.cs,SetContainerAcl,The length of the statement  "            await localChannel.SetContainerPermissionsAsync(container' permissions' accessCondition' requestOptions' OperationContext' CmdletCancellationToken).ConfigureAwait(false); " is 170.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common,AccessPolicyHelper,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\AccessPolicyHelper.cs,SetupAccessPolicyPermission,The length of the statement  "                    ((SharedAccessTablePolicy)(Object)policy).Permissions = SharedAccessTablePolicy.PermissionsFromString(convertedPermission); " is 123.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common,AccessPolicyHelper,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\AccessPolicyHelper.cs,ConstructPolicyOutputPSObject,The length of the statement  "                (sharedAccessPolicies[policyName]).GetType().GetProperty("SharedAccessStartTime").GetValue(sharedAccessPolicies[policyName])' " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common,AccessPolicyHelper,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\AccessPolicyHelper.cs,ConstructPolicyOutputPSObject,The length of the statement  "                (sharedAccessPolicies[policyName]).GetType().GetProperty("SharedAccessExpiryTime").GetValue(sharedAccessPolicies[policyName])); " is 127.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common,BlobToFileNameResolver,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\BlobToFileNameResolver.cs,ResolveFileName,The length of the statement  "            string destinationRelativePath = EscapeInvalidCharacters(this.TranslateDelimiters(relativePath).TrimEnd(new char[] { ' ' })); " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common,BlobToFileNameResolver,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\BlobToFileNameResolver.cs,IsReservedFileName,The length of the statement  "            if (Array.Exists<string>(reservedBaseFileNames' delegate (string s) { return fileNameNoExt.Equals(s' StringComparison.OrdinalIgnoreCase); })) " is 141.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common,BlobToFileNameResolver,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\BlobToFileNameResolver.cs,IsReservedFileName,The length of the statement  "            if (Array.Exists<string>(reservedFileNames' delegate (string s) { return fileNameWithExt.Equals(s' StringComparison.OrdinalIgnoreCase); })) " is 139.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common,CmdletOperationContext,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\CmdletOperationContext.cs,GetStorageOperationContext,The length of the statement  "                    e.Request.RequestUri.ToString()' (int)e.Response.StatusCode' e.Response.StatusCode' e.RequestInformation.ServiceRequestID' elapsedTime); " is 136.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common,StorageCloudCmdletBase<T>,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\StorageCloudCmdletBase.cs,GetCmdletStorageContext,The length of the statement  "                        throw new InvalidOperationException("Could not get the storage context.  Please pass in a storage context or set the current storage context."); " is 144.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common,StorageCloudCmdletBase<T>,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\StorageCloudCmdletBase.cs,TryGetStorageAccount,The length of the statement  "            if (Context == null && profile != null && profile.DefaultContext != null && profile.DefaultContext.Subscription != null) " is 120.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common,StorageCloudCmdletBase<T>,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\StorageCloudCmdletBase.cs,ConvertToTimeSpan,The length of the statement  "                throw new ArgumentOutOfRangeException(string.Format(CultureInfo.CurrentCulture' Resources.InvalidTimeoutValue' timeoutInSeconds)); " is 130.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common,StorageCloudCmdletBase<T>,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\StorageCloudCmdletBase.cs,ConfigureServicePointManager,The length of the statement  "            //Set the default connection limit to a very high value and control the concurrency with LimitedConcurrencyTaskScheduler. " is 121.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common,StorageCloudCmdletBase<T>,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\StorageCloudCmdletBase.cs,BeginProcessing,The length of the statement  "            WriteDebugLog(String.Format(Resources.InitOperationContextLog' this.GetType().Name' CmdletOperationContext.ClientRequestId)); " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common,StorageCloudCmdletBase<T>,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\StorageCloudCmdletBase.cs,BeginProcessing,The length of the statement  "                    args.Request.UserAgent = Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.HeaderConstants.UserAgent + " " + ApiConstants.UserAgentHeaderValue; " is 150.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common,StorageCloudCmdletBase<T>,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\StorageCloudCmdletBase.cs,EndProcessing,The length of the statement  "                this.GetType().Name' CmdletOperationContext.StartedRemoteCallCounter' CmdletOperationContext.FinishedRemoteCallCounter' timespan' CmdletOperationContext.ClientRequestId); " is 170.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common,StorageExtensions,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\StorageExtensions.cs,GenerateUriWithCredentials,The length of the statement  "                uriStr = string.Format(CultureInfo.InvariantCulture' "{0}&{1}"' blob.SnapshotQualifiedUri.AbsoluteUri' sasToken.Substring(1)); " is 126.
Long Statement,Microsoft.WindowsAzure.Commands.Storage,StorageCloudBlobCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\StorageCloudBlobCmdletBase.cs,GetBlobReferenceFromServerWithContainer,The length of the statement  "                        return localChannel.GetBlobReferenceFromServer(container' blobName' accessCondition' requestOptions' operationContext' snapshotTime); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.Storage,StorageCloudBlobCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\StorageCloudBlobCmdletBase.cs,ValidateBlobTier,The length of the statement  "                throw new ArgumentOutOfRangeException("BlobType' PageBlobTier"' String.Format("PremiumPageBlobTier can only be set to Page Blob. The Current BlobType is: {0}"' type)); " is 167.
Long Statement,Microsoft.WindowsAzure.Commands.Storage,StorageCloudBlobCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\StorageCloudBlobCmdletBase.cs,ContainerIsEmpty,The length of the statement  "                IEnumerator<IListBlobItem> listedBlobs = container.ListBlobsSegmented(""' true' BlobListingDetails.None' 1' blobToken' RequestOptions' OperationContext).Results.GetEnumerator(); " is 177.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,SetAzureStorageCORSRuleCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\SetAzureStorageCORSRule.cs,ExecuteCmdlet,The length of the statement  "                    (string.Equals(InvalidXMLNodeValueError' se.RequestInformation.ExtendedErrorInformation.ErrorCode' StringComparison.OrdinalIgnoreCase) || " is 137.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,SetAzureStorageCORSRuleCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\SetAzureStorageCORSRule.cs,ExecuteCmdlet,The length of the statement  "                    string.Equals(InvalidXMLDocError' se.RequestInformation.ExtendedErrorInformation.ErrorCode' StringComparison.OrdinalIgnoreCase))) " is 129.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,GetAzureStorageCORSRuleCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\GetAzureStorageCORSRule.cs,ExecuteCmdlet,The length of the statement  "            ServiceProperties currentServiceProperties = Channel.GetStorageServiceProperties(ServiceType' GetRequestOptions(ServiceType)' OperationContext); " is 144.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,GetAzureStorageServiceLoggingCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\GetAzureStorageServiceLogging.cs,ExecuteCmdlet,The length of the statement  "            ServiceProperties serviceProperties = Channel.GetStorageServiceProperties(ServiceType' GetRequestOptions(ServiceType)' OperationContext); " is 137.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,GetAzureStorageServiceMetricsCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\GetAzureStorageServiceMetrics.cs,ExecuteCmdlet,The length of the statement  "            ServiceProperties serviceProperties = Channel.GetStorageServiceProperties(ServiceType' GetRequestOptions(ServiceType)' OperationContext); " is 137.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,RemoveAzureStorageCORSRuleCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\RemoveAzureStorageCORSRule.cs,ExecuteCmdlet,The length of the statement  "            ServiceProperties currentServiceProperties = Channel.GetStorageServiceProperties(ServiceType' GetRequestOptions(ServiceType)' OperationContext); " is 144.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,SetAzureStorageServiceLoggingCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\SetAzureStorageServiceLogging.cs,ExecuteCmdlet,The length of the statement  "            StorageClient.ServiceProperties currentServiceProperties = Channel.GetStorageServiceProperties(ServiceType' GetRequestOptions(ServiceType)' OperationContext); " is 158.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,SetAzureStorageServiceMetricsCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\SetAzureStorageServiceMetrics.cs,ExecuteCmdlet,The length of the statement  "            ServiceProperties currentServiceProperties = Channel.GetStorageServiceProperties(ServiceType' GetRequestOptions(ServiceType)' OperationContext); " is 144.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,NewAzureStorageContext,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\NewAzureStorageContext.cs,GetStorageAccountWithEndPoint,The length of the statement  "            return new CloudStorageAccount(credential' new Uri(blobEndpoint)' new Uri(queueEndpoint)' new Uri(tableEndpoint)' new Uri(fileEndpoint)); " is 137.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,NewAzureStorageContext,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\NewAzureStorageContext.cs,GetStorageAccountWithAzureEnvironment,The length of the statement  "                if (profile.DefaultContext != null && profile.DefaultContext.Environment != null && string.IsNullOrEmpty(azureEnvironmentName)) " is 127.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,NewAzureStorageContext,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\NewAzureStorageContext.cs,GetStorageAccountWithAzureEnvironment,The length of the statement  "                        azureEnvironment = profile.Environments.FirstOrDefault((s) => string.Equals(s.Name' azureEnvironmentName' StringComparison.OrdinalIgnoreCase)); " is 143.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,NewAzureStorageContext,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\NewAzureStorageContext.cs,GetStorageAccountWithAzureEnvironment,The length of the statement  "                        throw new ArgumentException(e.Message + " " + string.Format(CultureInfo.CurrentCulture' Resources.ValidEnvironmentName' EnvironmentName.AzureCloud' EnvironmentName.AzureChinaCloud)); " is 182.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,NewAzureStorageContext,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\NewAzureStorageContext.cs,GetStorageAccountWithAzureEnvironment,The length of the statement  "                    // the environment may not have value for StorageEndpointSuffix' in this case' we'll still use the default domain of "core.windows.net" " is 135.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File,AzureStorageFileCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\AzureStorageFileCmdletBase.cs,ShareIsEmpty,The length of the statement  "                IEnumerator<IListFileItem> listedFiles = share.GetRootDirectoryReference().ListFilesAndDirectoriesSegmented(1' fileToken' RequestOptions' OperationContext).Results.GetEnumerator(); " is 180.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File,NamingUtil,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\NamingUtil.cs,ValidatePath,The length of the statement  "                throw new ArgumentOutOfRangeException(string.Format(CultureInfo.CurrentCulture' Resources.PathTooLong' path' MaxPathLength)); " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File,StorageFileDataManagementCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\StorageFileDataManagementCmdletBase.cs,ConfirmOverwrite,The length of the statement  "            return this.Force || this.OutputStream.ConfirmAsync(string.Format(CultureInfo.CurrentCulture' Resources.OverwriteConfirmation' Util.ConvertToString(destination))).Result; " is 170.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File,StorageFileDataManagementCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\StorageFileDataManagementCmdletBase.cs,GetTransferContext,The length of the statement  "                    record.PercentComplete = (totalTransferLength == 0) ? 100 : (int)(transferProgress.BytesTransferred * 100 / totalTransferLength); " is 129.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File,StorageFileDataManagementCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\StorageFileDataManagementCmdletBase.cs,GetTransferContext,The length of the statement  "                    record.StatusDescription = string.Format(CultureInfo.CurrentCulture' Resources.FileTransmitStatus' record.PercentComplete); " is 123.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,GetAzureStorageFile,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\GetAzureStorageFile.cs,ExecuteCmdlet,The length of the statement  "                    throw new PSArgumentException(string.Format(CultureInfo.InvariantCulture' "Invalid parameter set name: {0}"' this.ParameterSetName)); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,GetAzureStorageFileContent,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\GetAzureStorageFileContent.cs,ExecuteCmdlet,The length of the statement  "                    throw new PSArgumentException(string.Format(CultureInfo.InvariantCulture' "Invalid parameter set name: {0}"' this.ParameterSetName)); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,GetAzureStorageFileCopyStateCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\GetAzureStorageFileCopyState.cs,WriteCopyProgress,The length of the statement  "            string activity = String.Format(Resources.CopyFileStatus' file.CopyState.Status.ToString()' file.GetFullPath()' file.Share.Name' file.CopyState.Source.ToString()); " is 163.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,GetAzureStorageFileCopyStateCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\GetAzureStorageFileCopyState.cs,WriteCopyProgress,The length of the statement  "            string message = String.Format(Resources.CopyPendingStatus' percent' file.CopyState.BytesCopied' file.CopyState.TotalBytes); " is 124.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,GetAzureStorageFileCopyStateCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\GetAzureStorageFileCopyState.cs,MonitorFileCopyStatusAsync,The length of the statement  "            ProgressRecord records = new ProgressRecord(OutputStream.GetProgressId(taskId)' Resources.CopyFileActivity' Resources.CopyFileActivity); " is 136.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,GetAzureStorageFileCopyStateCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\GetAzureStorageFileCopyState.cs,MonitorFileCopyStatusAsync,The length of the statement  "                    await Channel.FetchFileAttributesAsync(file' accessCondition' requestOptions' context' CmdletCancellationToken).ConfigureAwait(false); " is 134.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,GetAzureStorageFileCopyStateCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\GetAzureStorageFileCopyState.cs,MonitorFileCopyStatusAsync,The length of the statement  "                        ArgumentException e = new ArgumentException(String.Format(Resources.FileCopyTaskNotFound' file.SnapshotQualifiedUri.ToString())); " is 129.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,GetAzureStorageShare,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\GetAzureStorageShare.cs,ExecuteCmdlet,The length of the statement  "                        await this.Channel.FetchShareAttributesAsync(share' null' this.RequestOptions' this.OperationContext' this.CmdletCancellationToken).ConfigureAwait(false); " is 154.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,GetAzureStorageShare,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\GetAzureStorageShare.cs,ExecuteCmdlet,The length of the statement  "                        throw new PSArgumentException(string.Format(CultureInfo.InvariantCulture' "Invalid parameter set name: {0}"' this.ParameterSetName)); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,GetAzureStorageShareStoredAccessPolicy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\GetAzureStorageShareStoredAccessPolicy.cs,GetAzureShareStoredAccessPolicyAsync,The length of the statement  "            SharedAccessFilePolicies shareAccessPolicies = await GetPoliciesAsync(localChannel' shareName' policyName).ConfigureAwait(false); " is 129.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,GetAzureStorageShareStoredAccessPolicy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\GetAzureStorageShareStoredAccessPolicy.cs,GetAzureShareStoredAccessPolicyAsync,The length of the statement  "                    OutputStream.WriteObject(taskId' AccessPolicyHelper.ConstructPolicyOutputPSObject<SharedAccessFilePolicy>(shareAccessPolicies' policyName)); " is 140.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,GetAzureStorageShareStoredAccessPolicy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\GetAzureStorageShareStoredAccessPolicy.cs,GetAzureShareStoredAccessPolicyAsync,The length of the statement  "                    OutputStream.WriteObject(taskId' AccessPolicyHelper.ConstructPolicyOutputPSObject<SharedAccessFilePolicy>(shareAccessPolicies' key)); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,GetAzureStorageShareStoredAccessPolicy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\GetAzureStorageShareStoredAccessPolicy.cs,GetPoliciesAsync,The length of the statement  "            FileSharePermissions permissions = await localChannel.GetSharePermissionsAsync(share' null' null' null' CmdletCancellationToken).ConfigureAwait(false); " is 151.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,NewAzureStorageDirectory,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\NewAzureStorageDirectory.cs,ExecuteCmdlet,The length of the statement  "                    throw new PSArgumentException(string.Format(CultureInfo.InvariantCulture' "Invalid parameter set name: {0}"' this.ParameterSetName)); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,NewAzureStorageDirectory,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\NewAzureStorageDirectory.cs,ExecuteCmdlet,The length of the statement  "                await this.Channel.CreateDirectoryAsync(directoryToBeCreated' this.RequestOptions' this.OperationContext' this.CmdletCancellationToken).ConfigureAwait(false); " is 158.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,NewAzureStorageFileSasToken,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\NewAzureStorageFileSasToken.cs,ExecuteCmdlet,The length of the statement  "            string sasToken = file.GetSharedAccessSignature(accessPolicy' null' accessPolicyIdentifier' Protocol' Util.SetupIPAddressOrRangeForSAS(IPAddressOrRange)); " is 154.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,NewAzureStorageShare,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\NewAzureStorageShare.cs,ExecuteCmdlet,The length of the statement  "                await this.Channel.CreateShareAsync(share' this.RequestOptions' this.OperationContext' this.CmdletCancellationToken).ConfigureAwait(false); " is 139.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,NewAzureStorageShareSasToken,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\NewAzureStorageShareSasToken.cs,ExecuteCmdlet,The length of the statement  "            string sasToken = fileShare.GetSharedAccessSignature(accessPolicy' accessPolicyIdentifier' Protocol' Util.SetupIPAddressOrRangeForSAS(IPAddressOrRange)); " is 153.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,NewAzureStorageShareSasToken,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\NewAzureStorageShareSasToken.cs,ExecuteCmdlet,The length of the statement  "                string fullUri = SasTokenHelper.GetFullUriWithSASToken(fileShare.SnapshotQualifiedUri.AbsoluteUri.ToString()' sasToken); " is 120.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,NewAzureStorageShareStoredAccessPolicy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\NewAzureStorageShareStoredAccessPolicy.cs,ExecuteCmdlet,The length of the statement  "                throw new ResourceAlreadyExistException(String.Format(CultureInfo.CurrentCulture' Resources.PolicyAlreadyExists' this.Policy)); " is 127.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,RemoveAzureStorageDirectory,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\RemoveAzureStorageDirectory.cs,ExecuteCmdlet,The length of the statement  "                    throw new PSArgumentException(string.Format(CultureInfo.InvariantCulture' "Invalid parameter set name: {0}"' this.ParameterSetName)); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,RemoveAzureStorageDirectory,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\RemoveAzureStorageDirectory.cs,ExecuteCmdlet,The length of the statement  "                    await this.Channel.DeleteDirectoryAsync(directoryToBeRemoved' null' this.RequestOptions' this.OperationContext' this.CmdletCancellationToken).ConfigureAwait(false); " is 164.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,RemoveAzureStorageFile,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\RemoveAzureStorageFile.cs,ExecuteCmdlet,The length of the statement  "                    throw new PSArgumentException(string.Format(CultureInfo.InvariantCulture' "Invalid parameter set name: {0}"' this.ParameterSetName)); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,RemoveAzureStorageFile,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\RemoveAzureStorageFile.cs,ExecuteCmdlet,The length of the statement  "                    await this.Channel.DeleteFileAsync(fileToBeRemoved' null' this.RequestOptions' this.OperationContext' this.CmdletCancellationToken).ConfigureAwait(false); " is 154.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,RemoveAzureStorageShare,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\RemoveAzureStorageShare.cs,ExecuteCmdlet,The length of the statement  "                    throw new PSArgumentException(string.Format(CultureInfo.InvariantCulture' "Invalid parameter set name: {0}"' this.ParameterSetName)); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,RemoveAzureStorageShare,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\RemoveAzureStorageShare.cs,ExecuteCmdlet,The length of the statement  "                        throw new PSArgumentException(string.Format(CultureInfo.InvariantCulture' "'IncludeAllSnapshot' should only be specified to delete a base share' and should not be specified to delete a Share snapshot: {0}"' share.SnapshotQualifiedUri)); " is 236.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,RemoveAzureStorageShare,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\RemoveAzureStorageShare.cs,ExecuteCmdlet,The length of the statement  "                    if (force || ShareIsEmpty(share) || ShouldContinue(string.Format("Remove share and all content in it: {0}"' share.Name)' "")) " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,RemoveAzureStorageShare,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\RemoveAzureStorageShare.cs,ExecuteCmdlet,The length of the statement  "                        //Force means will delete the share anyway' so use 'IncludeSnapshots' to delete the share even has snapshot' or delete will fail when share has snapshot " is 152.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,RemoveAzureStorageShare,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\RemoveAzureStorageShare.cs,ExecuteCmdlet,The length of the statement  "                            await this.Channel.DeleteShareAsync(share' deleteShareSnapshotsOption' null' this.RequestOptions' this.OperationContext' this.CmdletCancellationToken).ConfigureAwait(false); " is 173.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,RemoveAzureStorageShare,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\RemoveAzureStorageShare.cs,ExecuteCmdlet,The length of the statement  "                            //If x-ms-delete-snapshots is not specified on the request and the share has associated snapshots' the File service returns status code 409 (Conflict). " is 151.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,RemoveAzureStorageShare,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\RemoveAzureStorageShare.cs,ExecuteCmdlet,The length of the statement  "                            if (force || await OutputStream.ConfirmAsync(string.Format("This share might have snapshots' remove the share and all snapshots?: {0}"' share.Name)).ConfigureAwait(false)) " is 171.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,RemoveAzureStorageShare,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\RemoveAzureStorageShare.cs,ExecuteCmdlet,The length of the statement  "                                await this.Channel.DeleteShareAsync(share' deleteShareSnapshotsOption' null' this.RequestOptions' this.OperationContext' this.CmdletCancellationToken).ConfigureAwait(false); " is 173.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,SetAzureStorageFileContent,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\SetAzureStorageFileContent.cs,BuildCloudFileInstanceFromPathAsync,The length of the statement  "                    throw new PSArgumentException(string.Format(CultureInfo.InvariantCulture' "Invalid parameter set name: {0}"' this.ParameterSetName)); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,SetAzureStorageFileContent,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\SetAzureStorageFileContent.cs,BuildCloudFileInstanceFromPathAsync,The length of the statement  "                directoryExists = await this.Channel.DirectoryExistsAsync(directory' this.RequestOptions' this.OperationContext' this.CmdletCancellationToken).ConfigureAwait(false); " is 165.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,SetAzureStorageFileContent,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\SetAzureStorageFileContent.cs,BuildCloudFileInstanceFromPathAsync,The length of the statement  "                    throw new AzureStorageFileException(ErrorCategory.InvalidArgument' ErrorIdConstants.InvalidResource' Resources.InvalidResource' this); " is 134.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,SetAzureStorageShareQuota,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\SetAzureStorageShareQuota.cs,ExecuteCmdlet,The length of the statement  "                    throw new PSArgumentException(string.Format(CultureInfo.InvariantCulture' "Invalid parameter set name: {0}"' this.ParameterSetName)); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,SetAzureStorageShareStoredAccessPolicy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\SetAzureStorageShareStoredAccessPolicy.cs,SetAzureShareStoredAccessPolicy,The length of the statement  "            AccessPolicyHelper.SetupAccessPolicy<SharedAccessFilePolicy>(policy' startTime' expiryTime' permission' noStartTime' noExpiryTime); " is 131.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,SetAzureStorageShareStoredAccessPolicy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\SetAzureStorageShareStoredAccessPolicy.cs,SetAzureShareStoredAccessPolicy,The length of the statement  "            WriteObject(AccessPolicyHelper.ConstructPolicyOutputPSObject<SharedAccessFilePolicy>(permissions.SharedAccessPolicies' policyName)); " is 132.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,SetAzureStorageShareStoredAccessPolicy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\SetAzureStorageShareStoredAccessPolicy.cs,ExecuteCmdlet,The length of the statement  "                SetAzureShareStoredAccessPolicy(Channel' ShareName' Policy' StartTime' ExpiryTime' Permission' NoStartTime' NoExpiryTime); " is 122.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,StartAzureStorageFileCopyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\StartAzureStorageFileCopy.cs,StartCopyFromBlob,The length of the statement  "                () => destFile.StartCopyAsync(blob.GenerateCopySourceBlob()' null' null' this.RequestOptions' this.OperationContext' CmdletCancellationToken)); " is 143.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,StartAzureStorageFileCopyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\StartAzureStorageFileCopy.cs,StartCopyFromFile,The length of the statement  "                () => destFile.StartCopyAsync(sourceFile.GenerateCopySourceFile()' null' null' this.RequestOptions' this.OperationContext' this.CmdletCancellationToken)); " is 154.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,StartAzureStorageFileCopyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\StartAzureStorageFileCopy.cs,StartAsyncCopy,The length of the statement  "                await destFile.FetchAttributesAsync(null' this.RequestOptions' this.OperationContext' this.CmdletCancellationToken).ConfigureAwait(false); " is 138.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,StartAzureStorageFileCopyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\StartAzureStorageFileCopy.cs,StartAsyncCopy,The length of the statement  "                this.OutputStream.WriteVerbose(taskId' String.Format(Resources.CopyDestinationBlobPending' destFile.GetFullPath()' destFile.Share.Name' copyId)); " is 145.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,StopAzureStorageFileCopyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\StopAzureStorageFileCopy.cs,StopCopyFile,The length of the statement  "                await localChannel.FetchFileAttributesAsync(file' null' options' OperationContext' CmdletCancellationToken).ConfigureAwait(false); " is 130.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,StopAzureStorageFileCopyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\StopAzureStorageFileCopy.cs,StopCopyFile,The length of the statement  "                    ArgumentException e = new ArgumentException(String.Format(Resources.FileCopyTaskNotFound' file.SnapshotQualifiedUri.ToString())); " is 129.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,StopAzureStorageFileCopyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\StopAzureStorageFileCopy.cs,StopCopyFile,The length of the statement  "                    string confirmation = String.Format(Resources.ConfirmAbortFileCopyOperation' file.SnapshotQualifiedUri.ToString()' abortCopyId); " is 128.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,StopAzureStorageFileCopyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\StopAzureStorageFileCopy.cs,StopCopyFile,The length of the statement  "            await localChannel.AbortCopyAsync(file' abortCopyId' null' requestOptions' OperationContext' CmdletCancellationToken).ConfigureAwait(false); " is 140.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageFileManagement.cs,EnumerateFilesAndDirectoriesAsync,The length of the statement  "                var segment = await directory.ListFilesAndDirectoriesSegmentedAsync(null' continuationToken' options' operationContext' token).ConfigureAwait(false); " is 149.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageFileManagement.cs,EnumerateSharesAsync,The length of the statement  "                var segment = await this.Client.ListSharesSegmentedAsync(prefix' detailsIncluded' null' continuationToken' options' operationContext' token).ConfigureAwait(false); " is 163.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageFileManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageFileManagement.cs,AbortCopyAsync,The length of the statement  "            // Workaround for XSCL 8.4.0 issue: File abort copy fail with null reference. Will remove the line with the issue fixed. " is 120.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,GetBlobReferenceFromServer,The length of the statement  "                CloudBlob blob = Util.GetBlobReferenceFromServer(container' blobName' accessCondition' options' operationContext' SnapshotTime); " is 128.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,GetStorageServiceProperties,The length of the statement  "                    FileServiceProperties fileServiceProperties = account.CreateCloudFileClient().GetServiceProperties((FileRequestOptions)options' operationContext); " is 146.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,SetStorageServiceProperties,The length of the statement  "                    account.CreateCloudFileClient().SetServiceProperties(fileServiceProperties' (FileRequestOptions)options' operationContext); " is 123.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,SetContainerPermissionsAsync,The length of the statement  "            return container.SetPermissionsAsync(permissions' accessCondition' requestOptions' operationContext' cancellationToken); " is 120.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,ListBlobsSegmentedAsync,The length of the statement  "            return container.ListBlobsSegmentedAsync(prefix' useFlatBlobListing' blobListingDetails' maxResults' currentToken' options' operationContext' cancellationToken); " is 161.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,ListBlobsSegmented,The length of the statement  "            return container.ListBlobsSegmented(prefix' useFlatBlobListing' blobListingDetails' maxResults' currentToken' options' operationContext); " is 137.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,ListContainersSegmented,The length of the statement  "            return this.BlobClient.ListContainersSegmented(prefix' detailsIncluded' maxResults' currentToken' options' operationContext); " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,StartCopyAsync,The length of the statement  "            return blob.StartCopyAsync(source' sourceAccessCondition' destAccessCondition' options' operationContext' cancellationToken); " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Model.Contract,StorageBlobManagement,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Model\Contract\StorageBlobManagement.cs,StartCopyAsync,The length of the statement  "            return blob.StartCopyAsync(new CloudPageBlob(source)' premiumPageBlobTier' sourceAccessCondition' destAccessCondition' options' operationContext' cancellationToken); " is 165.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Queue.Cmdlet,GetAzureStorageQueueStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Queue\Cmdlet\GetAzureStorageQueueStoredAccessPolicy.cs,GetAzureQueueStoredAccessPolicyAsync,The length of the statement  "            SharedAccessQueuePolicies shareAccessPolicies = await GetPoliciesAsync(localChannel' queueName' policyName).ConfigureAwait(false); " is 130.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Queue.Cmdlet,GetAzureStorageQueueStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Queue\Cmdlet\GetAzureStorageQueueStoredAccessPolicy.cs,GetAzureQueueStoredAccessPolicyAsync,The length of the statement  "                    OutputStream.WriteObject(taskId' AccessPolicyHelper.ConstructPolicyOutputPSObject<SharedAccessQueuePolicy>(shareAccessPolicies' policyName)); " is 141.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Queue.Cmdlet,GetAzureStorageQueueStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Queue\Cmdlet\GetAzureStorageQueueStoredAccessPolicy.cs,GetAzureQueueStoredAccessPolicyAsync,The length of the statement  "                    OutputStream.WriteObject(taskId' AccessPolicyHelper.ConstructPolicyOutputPSObject<SharedAccessQueuePolicy>(shareAccessPolicies' key)); " is 134.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Queue.Cmdlet,NewAzureStorageQueueSasTokenCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Queue\Cmdlet\NewAzureStorageQueueSasToken.cs,ExecuteCmdlet,The length of the statement  "            bool shouldSetExpiryTime = SasTokenHelper.ValidateQueueAccessPolicy(Channel' queue.Name' policy' accessPolicyIdentifier); " is 121.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Queue.Cmdlet,NewAzureStorageQueueSasTokenCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Queue\Cmdlet\NewAzureStorageQueueSasToken.cs,ExecuteCmdlet,The length of the statement  "            string sasToken = queue.GetSharedAccessSignature(policy' accessPolicyIdentifier' Protocol' Util.SetupIPAddressOrRangeForSAS(IPAddressOrRange)); " is 143.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Queue.Cmdlet,NewAzureStorageQueueSasTokenCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Queue\Cmdlet\NewAzureStorageQueueSasToken.cs,SetupAccessPolicy,The length of the statement  "            SasTokenHelper.SetupAccessPolicyLifeTime(StartTime' ExpiryTime' out accessStartTime' out accessEndTime' shouldSetExpiryTime); " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Queue.Cmdlet,NewAzureStorageQueueStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Queue\Cmdlet\NewAzureStorageQueueStoredAccessPolicy.cs,CreateAzureQueueStoredAccessPolicy,The length of the statement  "                throw new ResourceAlreadyExistException(String.Format(CultureInfo.CurrentCulture' Resources.PolicyAlreadyExists' policyName)); " is 126.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Queue.Cmdlet,SetAzureStorageQueueStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Queue\Cmdlet\SetAzureStorageQueueStoredAccessPolicy.cs,SetAzureQueueStoredAccessPolicy,The length of the statement  "            AccessPolicyHelper.SetupAccessPolicy<SharedAccessQueuePolicy>(policy' startTime' expiryTime' permission' noStartTime' noExpiryTime); " is 132.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Queue.Cmdlet,SetAzureStorageQueueStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Queue\Cmdlet\SetAzureStorageQueueStoredAccessPolicy.cs,SetAzureQueueStoredAccessPolicy,The length of the statement  "            WriteObject(AccessPolicyHelper.ConstructPolicyOutputPSObject<SharedAccessQueuePolicy>(queuePermissions.SharedAccessPolicies' policyName)); " is 138.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Table.Cmdlet,NewAzureStorageTableSasTokenCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Table\Cmdlet\NewAzureStorageTableSasToken.cs,ExecuteCmdlet,The length of the statement  "            bool shouldSetExpiryTime = SasTokenHelper.ValidateTableAccessPolicy(Channel' table.Name' policy' accessPolicyIdentifier); " is 121.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Table.Cmdlet,NewAzureStorageTableStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Table\Cmdlet\NewAzureStorageTableStoredAccessPolicy.cs,CreateAzureTableStoredAccessPolicy,The length of the statement  "                throw new ResourceAlreadyExistException(String.Format(CultureInfo.CurrentCulture' Resources.PolicyAlreadyExists' policyName)); " is 126.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Table.Cmdlet,GetAzureStorageTableStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Table\Cmdlet\GetAzureStorageTableStoredAccessPolicy.cs,GetAzureTableStoredAccessPolicyAsync,The length of the statement  "            SharedAccessTablePolicies shareAccessPolicies = await GetPoliciesAsync(localChannel' tableName' policyName).ConfigureAwait(false); " is 130.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Table.Cmdlet,GetAzureStorageTableStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Table\Cmdlet\GetAzureStorageTableStoredAccessPolicy.cs,GetAzureTableStoredAccessPolicyAsync,The length of the statement  "                    OutputStream.WriteObject(taskId' AccessPolicyHelper.ConstructPolicyOutputPSObject<SharedAccessTablePolicy>(shareAccessPolicies' policyName)); " is 141.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Table.Cmdlet,GetAzureStorageTableStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Table\Cmdlet\GetAzureStorageTableStoredAccessPolicy.cs,GetAzureTableStoredAccessPolicyAsync,The length of the statement  "                    OutputStream.WriteObject(taskId' AccessPolicyHelper.ConstructPolicyOutputPSObject<SharedAccessTablePolicy>(shareAccessPolicies' key)); " is 134.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Table.Cmdlet,SetAzureStorageTableStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Table\Cmdlet\SetAzureStorageTableStoredAccessPolicy.cs,SetAzureTableStoredAccessPolicy,The length of the statement  "            AccessPolicyHelper.SetupAccessPolicy<SharedAccessTablePolicy>(policy' startTime' expiryTime' permission' noStartTime' noExpiryTime); " is 132.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Table.Cmdlet,SetAzureStorageTableStoredAccessPolicyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Table\Cmdlet\SetAzureStorageTableStoredAccessPolicy.cs,SetAzureTableStoredAccessPolicy,The length of the statement  "            WriteObject(AccessPolicyHelper.ConstructPolicyOutputPSObject<SharedAccessTablePolicy>(tablePermissions.SharedAccessPolicies' policyName)); " is 138.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Table,StorageCloudTableCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Table\StorageCloudTableCmdletBase.cs,TableIsEmpty,The length of the statement  "                TableQuery<DynamicTableEntity> projectionQuery = new TableQuery<DynamicTableEntity>().Select(new string[] { "PartitionKey" }); " is 126.
Complex Conditional,Microsoft.WindowsAzure.Commands.Storage.Common,AccessPolicyHelper,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\AccessPolicyHelper.cs,SetupAccessPolicy,The conditional expression  "!(typeof(T) == typeof(SharedAccessTablePolicy) ||                  typeof(T) == typeof(SharedAccessFilePolicy) ||                  typeof(T) == typeof(SharedAccessBlobPolicy) ||                  (typeof(T) == typeof(SharedAccessQueuePolicy)))"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.Storage.Common,AccessPolicyHelper,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\AccessPolicyHelper.cs,ConstructPolicyOutputPSObject,The conditional expression  "!(typeof(T) == typeof(SharedAccessTablePolicy) ||                 typeof(T) == typeof(SharedAccessBlobPolicy) ||                 (typeof(T) == typeof(SharedAccessQueuePolicy)) ||                 (typeof(T) == typeof(SharedAccessFilePolicy)))"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.Storage.Common,StorageCloudCmdletBase<T>,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\StorageCloudCmdletBase.cs,TryGetStorageAccount,The conditional expression  "Context == null && profile != null && profile.DefaultContext != null && profile.DefaultContext.Subscription != null"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,SetAzureStorageCORSRuleCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\SetAzureStorageCORSRule.cs,ExecuteCmdlet,The conditional expression  "(null != se.RequestInformation) &&                      ((int)HttpStatusCode.BadRequest == se.RequestInformation.HttpStatusCode) &&                      (null != se.RequestInformation.ExtendedErrorInformation) &&                      (string.Equals(InvalidXMLNodeValueError' se.RequestInformation.ExtendedErrorInformation.ErrorCode' StringComparison.OrdinalIgnoreCase) ||                      string.Equals(InvalidXMLDocError' se.RequestInformation.ExtendedErrorInformation.ErrorCode' StringComparison.OrdinalIgnoreCase))"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,StartAzureStorageFileCopyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\StartAzureStorageFileCopy.cs,GetDestinationChannel,The conditional expression  "ContainerNameParameterSet == this.ParameterSetName ||                      ContainerParameterSet == this.ParameterSetName ||                      BlobFilePathParameterSet == this.ParameterSetName ||                      ShareNameParameterSet == this.ParameterSetName ||                      ShareParameterSet == this.ParameterSetName ||                      FileFilePathParameterSet == this.ParameterSetName ||                      UriFilePathParameterSet == this.ParameterSetName"  is complex.
Empty Catch Block,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobCopy.cs,OnImport,The method has an empty catch block.
Empty Catch Block,Microsoft.WindowsAzure.Commands.Storage.Common,CmdletOperationContext,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\CmdletOperationContext.cs,GetStorageOperationContext,The method has an empty catch block.
Empty Catch Block,Microsoft.WindowsAzure.Commands.Storage.Common,CmdletOperationContext,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\CmdletOperationContext.cs,GetStorageOperationContext,The method has an empty catch block.
Empty Catch Block,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,NewAzureStorageContext,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\NewAzureStorageContext.cs,GetStorageAccountWithAzureEnvironment,The method has an empty catch block.
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageBlobCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageBlob.cs,ListBlobsByPrefix,The following statement contains a magic number: int MaxListCount = 5000;
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageBlobCopyState,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageBlobCopyState.cs,WriteCopyProgress,The following statement contains a magic number: if (totalBytes != 0)              {                  percent = (int)(bytesCopied * 100 / totalBytes);                  progress.PercentComplete = percent;              }
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageContainerCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageContainer.cs,ListContainersByPrefix,The following statement contains a magic number: int MaxListCount = 5000;
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Blob,SetAzureBlobContentCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\SetAzureStorageBlobContent.cs,OnTaskSuccessful,The following statement contains a magic number: if (blob != null)              {                  AccessCondition accessCondition = null;                  StorageBlob.BlobRequestOptions requestOptions = RequestOptions;                    if (BlobProperties != null || BlobMetadata != null || this.pageBlobTier != null)                  {                      Task[] tasks = new Task[3];                      tasks[0] = SetBlobProperties(localChannel' blob' BlobProperties);                      tasks[1] = SetBlobMeta(localChannel' blob' BlobMetadata);                      tasks[2] = SetBlobTier(localChannel' blob' pageBlobTier);                      Task.WaitAll(tasks);                  }                    try                  {                      localChannel.FetchBlobAttributesAsync(blob' accessCondition' requestOptions' OperationContext' CmdletCancellationToken).Wait();                  }                  catch (AggregateException e)                  {                      StorageException storageException = e.InnerException as StorageException;                      //Handle the limited read permission.                      if (storageException == null || !storageException.IsNotFoundException())                      {                          throw e.InnerException;                      }                  }                    WriteCloudBlobObject(data.TaskId' localChannel' blob);              }
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Blob,SetAzureBlobContentCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\SetAzureStorageBlobContent.cs,OnTaskSuccessful,The following statement contains a magic number: if (blob != null)              {                  AccessCondition accessCondition = null;                  StorageBlob.BlobRequestOptions requestOptions = RequestOptions;                    if (BlobProperties != null || BlobMetadata != null || this.pageBlobTier != null)                  {                      Task[] tasks = new Task[3];                      tasks[0] = SetBlobProperties(localChannel' blob' BlobProperties);                      tasks[1] = SetBlobMeta(localChannel' blob' BlobMetadata);                      tasks[2] = SetBlobTier(localChannel' blob' pageBlobTier);                      Task.WaitAll(tasks);                  }                    try                  {                      localChannel.FetchBlobAttributesAsync(blob' accessCondition' requestOptions' OperationContext' CmdletCancellationToken).Wait();                  }                  catch (AggregateException e)                  {                      StorageException storageException = e.InnerException as StorageException;                      //Handle the limited read permission.                      if (storageException == null || !storageException.IsNotFoundException())                      {                          throw e.InnerException;                      }                  }                    WriteCloudBlobObject(data.TaskId' localChannel' blob);              }
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Blob,StorageDataMovementCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\StorageDataMovementCmdletBase.cs,GetTransferContext,The following statement contains a magic number: transferContext.ProgressHandler = new TransferProgressHandler((transferProgress) =>                  {                      if (userData.Record != null)                      {                          // Size of the source file might be 0' when it is' directly treat the progress as 100 percent.                          userData.Record.PercentComplete = 0 == userData.TotalSize ? 100 : (int)(transferProgress.BytesTransferred * 100 / userData.TotalSize);                          userData.Record.StatusDescription = string.Format(CultureInfo.CurrentCulture' Resources.FileTransmitStatus' userData.Record.PercentComplete);                          this.OutputStream.WriteProgress(userData.Record);                      }                  });
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Blob,StorageDataMovementCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\StorageDataMovementCmdletBase.cs,GetTransferContext,The following statement contains a magic number: transferContext.ProgressHandler = new TransferProgressHandler((transferProgress) =>                  {                      if (userData.Record != null)                      {                          // Size of the source file might be 0' when it is' directly treat the progress as 100 percent.                          userData.Record.PercentComplete = 0 == userData.TotalSize ? 100 : (int)(transferProgress.BytesTransferred * 100 / userData.TotalSize);                          userData.Record.StatusDescription = string.Format(CultureInfo.CurrentCulture' Resources.FileTransmitStatus' userData.Record.PercentComplete);                          this.OutputStream.WriteProgress(userData.Record);                      }                  });
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Common,DataMovementTransferHelper,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\DataMovementTransferHelper.cs,DoTransfer,The following statement contains a magic number: try              {                  await doTransfer().ConfigureAwait(false);                    if (record != null)                  {                      record.PercentComplete = 100;                      record.StatusDescription = Resources.TransmitSuccessfully;                      outputStream.WriteProgress(record);                  }              }              catch (OperationCanceledException)              {                  if (record != null)                  {                      record.StatusDescription = Resources.TransmitCancelled;                      outputStream.WriteProgress(record);                  }              }              catch (TransferException e)              {                  // DMLib wrappers StorageException in its InnerException but didn't expose any detailed error messages'                   // here throw its inner exception out to show more readable error messages.                  StorageException se = e.InnerException as StorageException;                    if (null != se)                  {                      HandleTransferException(se' record' outputStream);                      throw se;                  }                  else                  {                      HandleTransferException(e' record' outputStream);                      throw;                  }              }              catch (Exception e)              {                  HandleTransferException(e' record' outputStream);                  throw;              }
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Common,NameUtil,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\NameUtil.cs,IsValidContainerPrefix,The following statement contains a magic number: if (containerPrefix.StartsWith("$"))              {                  string root = "$root";                  string logs = "$logs";                    if (root.IndexOf(containerPrefix) == 0 || logs.IndexOf(containerPrefix) == 0)                  {                      return true;                  }                  else                  {                      return false;                  }              }              else              {                  if (containerPrefix.Length > 0 && containerPrefix.Length < 3)                  {                      containerPrefix = containerPrefix + "abc";                  };                    if (containerPrefix.EndsWith("-"))                  {                      containerPrefix += "a";                  }                    return IsValidContainerName(containerPrefix);              }
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Common,NameUtil,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\NameUtil.cs,IsValidBlobName,The following statement contains a magic number: int maxLength = 1024;
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Common,NameUtil,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\NameUtil.cs,IsValidTablePrefix,The following statement contains a magic number: if (tablePrefix.Length > 0 && tablePrefix.Length < 3)              {                  tablePrefix = tablePrefix + "abc";              }
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Common,NameUtil,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\NameUtil.cs,IsValidQueuePrefix,The following statement contains a magic number: if (queuePrefix.Length > 0 && queuePrefix.Length < 3)              {                  queuePrefix = queuePrefix + "abc";              }
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Common,StorageCloudCmdletBase<T>,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\StorageCloudCmdletBase.cs,ConfigureServicePointManager,The following statement contains a magic number: int maxConcurrency = 1000;
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Common,StorageExceptionUtil,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\StorageExceptionUtil.cs,IsNotFoundException,The following statement contains a magic number: return e.RequestInformation != null && e.RequestInformation.HttpStatusCode == 404;
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Common,StorageExceptionUtil,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\StorageExceptionUtil.cs,IsConflictException,The following statement contains a magic number: return e.RequestInformation != null && e.RequestInformation.HttpStatusCode == 409;
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Common,StorageExceptionUtil,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\StorageExceptionUtil.cs,IsSuccessfulResponse,The following statement contains a magic number: return e.RequestInformation != null && (e.RequestInformation.HttpStatusCode / 100 == 2);
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Common,StorageExceptionUtil,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\StorageExceptionUtil.cs,IsSuccessfulResponse,The following statement contains a magic number: return e.RequestInformation != null && (e.RequestInformation.HttpStatusCode / 100 == 2);
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Common,Util,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Util.cs,BytesToHumanReadableSize,The following statement contains a magic number: while (size >= 1024 && order + 1 < sizeFormats.Length)              {                  ++order;                  size /= 1024;              }
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Common,Util,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Util.cs,BytesToHumanReadableSize,The following statement contains a magic number: while (size >= 1024 && order + 1 < sizeFormats.Length)              {                  ++order;                  size /= 1024;              }
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,SetAzureStorageServiceLoggingCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\SetAzureStorageServiceLogging.cs,UpdateServiceProperties,The following statement contains a magic number: if (RetentionDays != null)              {                  if (RetentionDays == -1)                  {                      //Disable logging retention policy                      logging.RetentionDays = null;                  }                  else if (RetentionDays < 1 || RetentionDays > 365)                  {                      throw new ArgumentException(string.Format(Resources.InvalidRetentionDay' RetentionDays));                  }                  else                  {                      logging.RetentionDays = RetentionDays;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,SetAzureStorageServiceMetricsCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\SetAzureStorageServiceMetrics.cs,UpdateServiceProperties,The following statement contains a magic number: if (RetentionDays != null)              {                  if (RetentionDays == -1)                  {                      //Disable metrics retention policy                      metrics.RetentionDays = null;                  }                  else if (RetentionDays < 1 || RetentionDays > 365)                  {                      throw new ArgumentException(string.Format(Resources.InvalidRetentionDay' RetentionDays));                  }                  else                  {                      metrics.RetentionDays = RetentionDays;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Storage.File,StorageFileDataManagementCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\StorageFileDataManagementCmdletBase.cs,GetTransferContext,The following statement contains a magic number: transferContext.ProgressHandler = new TransferProgressHandler((transferProgress) =>              {                  if (record != null)                  {                      // Size of the source file might be 0' when it is' directly treat the progress as 100 percent.                      record.PercentComplete = (totalTransferLength == 0) ? 100 : (int)(transferProgress.BytesTransferred * 100 / totalTransferLength);                      record.StatusDescription = string.Format(CultureInfo.CurrentCulture' Resources.FileTransmitStatus' record.PercentComplete);                      this.OutputStream.WriteProgress(record);                  }              });
Magic Number,Microsoft.WindowsAzure.Commands.Storage.File,StorageFileDataManagementCmdletBase,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\StorageFileDataManagementCmdletBase.cs,GetTransferContext,The following statement contains a magic number: transferContext.ProgressHandler = new TransferProgressHandler((transferProgress) =>              {                  if (record != null)                  {                      // Size of the source file might be 0' when it is' directly treat the progress as 100 percent.                      record.PercentComplete = (totalTransferLength == 0) ? 100 : (int)(transferProgress.BytesTransferred * 100 / totalTransferLength);                      record.StatusDescription = string.Format(CultureInfo.CurrentCulture' Resources.FileTransmitStatus' record.PercentComplete);                      this.OutputStream.WriteProgress(record);                  }              });
Magic Number,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,GetAzureStorageFileCopyStateCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\GetAzureStorageFileCopyState.cs,WriteCopyProgress,The following statement contains a magic number: if (totalBytes != 0)              {                  percent = (int)(bytesCopied * 100 / totalBytes);                  progress.PercentComplete = percent;              }
Missing Default,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageBlobContentCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageBlobContent.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)              {                  case BlobParameterSet:                      if (ShouldProcess(CloudBlob.Name' "Download"))                      {                          GetBlobContent(CloudBlob' FileName' true);                      }                      break;                    case ContainerParameterSet:                      if (ShouldProcess(BlobName' "Download"))                      {                          GetBlobContent(CloudBlobContainer' BlobName' FileName);                      }                      break;                    case ManualParameterSet:                      if (ShouldProcess(BlobName' "Download"))                      {                          GetBlobContent(ContainerName' BlobName' FileName);                      }                      break;              }
Missing Default,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,GetAzureStorageBlobCopyState,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\GetAzureStorageBlobCopyState.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)              {                  case NameParameterSet:                      blob = GetCloudBlobObject(ContainerName' BlobName);                      break;                  case ContainerPipelineParmeterSet:                      blob = GetCloudBlobObject(CloudBlobContainer' BlobName);                      break;                  case BlobPipelineParameterSet:                      blob = GetCloudBlobObject(CloudBlob);                      break;              }
Missing Default,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobIncrementalCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobIncrementalCopy.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)              {                  case ContainerNameParameterSet:                      copyAction = () => StartCopyBlob(srcChannel' destChannel' SrcContainer' SrcBlob' SrcBlobSnapshotTime' DestContainer' DestBlob);                      target = SrcBlob;                      break;                    case UriParameterSet:                      copyAction = () => StartCopyBlob(destChannel' AbsoluteUri' DestContainer' DestBlob' (Context != null? GetCmdletStorageContext(Context): null));                      target = AbsoluteUri;                      break;                    case BlobParameterSet:                      copyAction = () => StartCopyBlob(destChannel' CloudBlob' DestContainer' DestBlob);                      target = CloudBlob.Name;                      break;                    case ContainerParameterSet:                      copyAction = () => StartCopyBlob(srcChannel' destChannel' CloudBlobContainer.Name' SrcBlob' SrcBlobSnapshotTime' DestContainer' DestBlob);                      target = SrcBlob;                      break;                    case BlobToBlobParameterSet:                      copyAction = () => StartCopyBlob(destChannel' CloudBlob' DestCloudBlob);                      target = CloudBlob.Name;                      break;              }
Missing Default,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StartAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StartAzureStorageBlobCopy.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)              {                  case ContainerNameParameterSet:                      copyAction = () => StartCopyBlob(srcChannel' destChannel' SrcContainer' SrcBlob' DestContainer' DestBlob);                      target = SrcBlob;                      break;                    case UriParameterSet:                      copyAction = () => StartCopyBlob(destChannel' AbsoluteUri' DestContainer' DestBlob' (Context != null? GetCmdletStorageContext(Context) : null));                      target = AbsoluteUri;                      break;                    case BlobParameterSet:                      copyAction = () => StartCopyBlob(destChannel' CloudBlob' DestContainer' DestBlob);                      target = CloudBlob.Name;                      break;                    case ContainerParameterSet:                      copyAction = () => StartCopyBlob(srcChannel' destChannel' CloudBlobContainer.Name' SrcBlob' DestContainer' DestBlob);                      target = SrcBlob;                      break;                    case BlobToBlobParameterSet:                      copyAction = () => StartCopyBlob(destChannel' CloudBlob' DestCloudBlob);                      target = CloudBlob.Name;                      break;                  case ShareNameParameterSet:                      copyAction = () => StartCopyFromFile(                          this.GetFileChannel()'                          destChannel'                          this.SrcShareName'                          this.SrcFilePath'                          this.DestContainer'                          this.DestBlob);                      target = SrcFilePath;                      break;                  case ShareParameterSet:                      copyAction = () => StartCopyFromFile(                          destChannel'                          this.SrcShare.GetRootDirectoryReference()'                          this.SrcFilePath'                          this.DestContainer'                          this.DestBlob);                      target = SrcFilePath;                      break;                  case DirParameterSet:                      copyAction = () => StartCopyFromFile(                          destChannel'                          this.SrcDir'                          this.SrcFilePath'                          this.DestContainer'                          this.DestBlob);                      target = SrcFilePath;                      break;                  case FileParameterSet:                      copyAction = () => StartCopyFromFile(                          destChannel'                          this.SrcFile'                          this.DestContainer'                          this.DestBlob);                      target = SrcFile.Name;                      break;                  case FileToBlobParameterSet:                      copyAction = () => StartCopyFromFile(                          destChannel'                          this.SrcFile'                          this.DestCloudBlob);                      target = SrcFile.Name;                      break;              }
Missing Default,Microsoft.WindowsAzure.Commands.Storage.Blob.Cmdlet,StopAzureStorageBlobCopy,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Blob\Cmdlet\StopAzureStorageBlobCopy.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)              {                  case NameParameterSet:                      string localContainerName = ContainerName;                      string localBlobName = BlobName;                      taskGenerator = (taskId) => StopCopyBlob(taskId' localChannel' localContainerName' localBlobName' copyId);                      target = localBlobName;                      break;                  case ContainerPipelineParmeterSet:                      CloudBlobContainer localContainer = CloudBlobContainer;                      string localName = BlobName;                      taskGenerator = (taskId) => StopCopyBlob(taskId' localChannel' localContainer' localName' copyId);                      target = localName;                      break;                  case BlobPipelineParameterSet:                      CloudBlob localBlob = CloudBlob;                      taskGenerator = (taskId) => StopCopyBlob(taskId' localChannel' localBlob' copyId' true);                      target = localBlob.Name;                      break;              }
Missing Default,Microsoft.WindowsAzure.Commands.Storage.Common,TaskOutputStream,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\TaskOutputStream.cs,ProcessDataOutput,The following switch statement is missing a default case: switch (unit.Type)                                  {                                      case OutputType.Object:                                          OutputWriter(unit.Data);                                          break;                                      case OutputType.Error:                                          ErrorWriter(unit.Data as Exception);                                          break;                                      case OutputType.Verbose:                                          VerboseWriter(unit.Data as string);                                          break;                                  }
Missing Default,Microsoft.WindowsAzure.Commands.Storage.Common.Cmdlet,SetAzureStorageServiceMetricsCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\Common\Cmdlet\SetAzureStorageServiceMetrics.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (MetricsType)              {                  case ServiceMetricsType.Hour:                      serviceProperties.HourMetrics = currentServiceProperties.HourMetrics;                      UpdateServiceProperties(serviceProperties.HourMetrics);                      isHourMetrics = true;                      break;                  case ServiceMetricsType.Minute:                      serviceProperties.MinuteMetrics = currentServiceProperties.MinuteMetrics;                      UpdateServiceProperties(serviceProperties.MinuteMetrics);                      isHourMetrics = false;                      break;              }
Missing Default,Microsoft.WindowsAzure.Commands.Storage.File.Cmdlet,StartAzureStorageFileCopyCommand,C:\repos\Azure_azure-powershell\src\Storage\Commands.Storage\File\Cmdlet\StartAzureStorageFileCopy.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)              {                  case ContainerNameParameterSet:                  case ContainerParameterSet:                  case BlobFilePathParameterSet:                  case BlobFileParameterSet:                      copyAction = () => this.StartCopyFromBlob();                      break;                  case ShareNameParameterSet:                  case ShareParameterSet:                  case FileFilePathParameterSet:                  case FileFileParameterSet:                      copyAction = () => this.StartCopyFromFile();                      break;                  case UriFilePathParameterSet:                  case UriFileParameterSet:                      copyAction = () => this.StartCopyFromUri();                      break;              }
