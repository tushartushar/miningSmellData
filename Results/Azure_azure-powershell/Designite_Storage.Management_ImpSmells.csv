Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.Azure.Commands.Management.Storage,AddAzureStorageAccountManagementPolicyActionCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\AddAzureStorageAccountManagementPolicyAction.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Azure.Commands.Management.Storage,AddAzureStorageAccountNetworkRuleCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\AddAzureStorageAccountNetworkRule.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.Azure.Commands.Management.Storage,NewAzureStorageAccountCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\NewAzureStorageAccount.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.Azure.Commands.Management.Storage,RemoveAzureStorageAccountNetworkRuleCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\RemoveAzureStorageAccountNetworkRule.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 19
Complex Method,Microsoft.Azure.Commands.Management.Storage,SetAzureStorageAccountCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\SetAzureStorageAccount.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 17
Complex Method,Microsoft.Azure.Commands.Management.Storage,UpdateAzureStorageAccountRuleSetCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\UpdateAzureStorageAccountNetworkRuleSet.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 8
Long Parameter List,Microsoft.Azure.Commands.Management.Storage,StorageAccountBaseCmdlet,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\StorageAccountBaseCmdlet.cs,ParseEncryption,The method has 5 parameters. Parameters: storageEncryption' keyVaultEncryption' keyName' keyVersion' keyVaultUri
Long Identifier,Microsoft.Azure.Commands.Management.Storage,DisableAzStorageBlobDeleteRetentionPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\DisableAzureStorageBlobDeleteRetentionPolicy.cs,,The length of the parameter PropertiesResourceIdParameterSet is 32.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,EnableAzStorageBlobDeleteRetentionPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\EnableAzureStorageBlobDeleteRetentionPolicy.cs,,The length of the parameter PropertiesResourceIdParameterSet is 32.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,GetAzStorageBlobServicePropertyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\GetAzureStorageBlobServiceProperties.cs,,The length of the parameter PropertiesResourceIdParameterSet is 32.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,LockAzureStorageContainerImmutabilityPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\LockAzureStorageContainerImmutabilityPolicy.cs,,The length of the parameter ImmutabilityPolicyObjectParameterSet is 36.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,RemoveAzureStorageContainerImmutabilityPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\RemoveAzureStorageContainerImmutabilityPolicy.cs,,The length of the parameter ImmutabilityPolicyObjectParameterSet is 36.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,SetAzureStorageContainerImmutabilityPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\SetAzureStorageContainerImmutabilityPolicy.cs,,The length of the parameter ImmutabilityPolicyObjectParameterSet is 36.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,SetAzureStorageContainerImmutabilityPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\SetAzureStorageContainerImmutabilityPolicy.cs,,The length of the parameter ExtendAccountObjectParameterSet is 31.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,SetAzureStorageContainerImmutabilityPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\SetAzureStorageContainerImmutabilityPolicy.cs,,The length of the parameter ExtendContainerObjectParameterSet is 33.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,SetAzureStorageContainerImmutabilityPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\SetAzureStorageContainerImmutabilityPolicy.cs,,The length of the parameter ExtendImmutabilityPolicyObjectParameterSet is 42.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,StorageBlobBaseCmdlet,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\StorageBlobBaseCmdlet.cs,,The length of the parameter StorageContainerImmutabilityPolicyNounStr is 41.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,StorageBlobBaseCmdlet,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\StorageBlobBaseCmdlet.cs,,The length of the parameter StorageContainerLegalHoldNounStr is 32.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,StorageBlobBaseCmdlet,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\StorageBlobBaseCmdlet.cs,,The length of the parameter StorageBlobDeleteRetentionPolicy is 32.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,UpdateAzStorageBlobServicePropertyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\UpdateAzureStorageBlobServiceProperties.cs,,The length of the parameter PropertiesResourceIdParameterSet is 32.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,NewAzureStorageAccountCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\NewAzureStorageAccount.cs,,The length of the parameter enableAzureActiveDirectoryDomainServicesForFile is 47.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,SetAzureStorageAccountCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\SetAzureStorageAccount.cs,,The length of the parameter KeyvaultEncryptionParameterSet is 30.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,SetAzureStorageAccountCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\SetAzureStorageAccount.cs,,The length of the parameter enableAzureActiveDirectoryDomainServicesForFile is 47.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,SetAzureStorageAccountManagementPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\SetAzureStorageAccountManagementPolicy.cs,,The length of the parameter AccountNamePolicyRuleParameterSet is 33.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,SetAzureStorageAccountManagementPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\SetAzureStorageAccountManagementPolicy.cs,,The length of the parameter AccountNamePolicyObjectParameterSet is 35.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,SetAzureStorageAccountManagementPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\SetAzureStorageAccountManagementPolicy.cs,,The length of the parameter AccountObjectPolicyRuleParameterSet is 35.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,SetAzureStorageAccountManagementPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\SetAzureStorageAccountManagementPolicy.cs,,The length of the parameter AccountObjectPolicyObjectParameterSet is 37.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,SetAzureStorageAccountManagementPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\SetAzureStorageAccountManagementPolicy.cs,,The length of the parameter AccountResourceIdPolicyRuleParameterSet is 39.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,SetAzureStorageAccountManagementPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\SetAzureStorageAccountManagementPolicy.cs,,The length of the parameter AccountResourceIdPolicyObjectParameterSet is 41.
Long Identifier,Microsoft.Azure.Commands.Management.Storage,StorageAccountBaseCmdlet,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\StorageAccountBaseCmdlet.cs,,The length of the parameter StorageAccountNameAvailabilityStr is 33.
Long Identifier,Microsoft.Azure.Commands.Management.Storage.Models,PSDateAfterModification,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Models\PSDataPolicy.cs,PSDateAfterModification,The length of the parameter daysAfterModificationGreaterThan is 32.
Long Statement,Microsoft.Azure.Commands.Management.Storage,DisableAzStorageBlobDeleteRetentionPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\DisableAzureStorageBlobDeleteRetentionPolicy.cs,ExecuteCmdlet,The length of the statement  "                BlobServiceProperties serviceProperties = this.StorageClient.BlobServices.GetServiceProperties( this.ResourceGroupName' this.StorageAccountName); " is 145.
Long Statement,Microsoft.Azure.Commands.Management.Storage,DisableAzStorageBlobDeleteRetentionPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\DisableAzureStorageBlobDeleteRetentionPolicy.cs,ExecuteCmdlet,The length of the statement  "                serviceProperties = this.StorageClient.BlobServices.SetServiceProperties(this.ResourceGroupName' this.StorageAccountName' serviceProperties); " is 141.
Long Statement,Microsoft.Azure.Commands.Management.Storage,EnableAzStorageBlobDeleteRetentionPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\EnableAzureStorageBlobDeleteRetentionPolicy.cs,ExecuteCmdlet,The length of the statement  "                BlobServiceProperties serviceProperties = this.StorageClient.BlobServices.GetServiceProperties( this.ResourceGroupName' this.StorageAccountName); " is 145.
Long Statement,Microsoft.Azure.Commands.Management.Storage,EnableAzStorageBlobDeleteRetentionPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\EnableAzureStorageBlobDeleteRetentionPolicy.cs,ExecuteCmdlet,The length of the statement  "                serviceProperties = this.StorageClient.BlobServices.SetServiceProperties(this.ResourceGroupName' this.StorageAccountName' serviceProperties); " is 141.
Long Statement,Microsoft.Azure.Commands.Management.Storage,GetAzStorageBlobServicePropertyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\GetAzureStorageBlobServiceProperties.cs,ExecuteCmdlet,The length of the statement  "            BlobServiceProperties serviceProperties = this.StorageClient.BlobServices.GetServiceProperties(this.ResourceGroupName' this.StorageAccountName); " is 144.
Long Statement,Microsoft.Azure.Commands.Management.Storage,LockAzureStorageContainerImmutabilityPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\LockAzureStorageContainerImmutabilityPolicy.cs,ExecuteCmdlet,The length of the statement  "                if (Force || ShouldContinue(string.Format("Lock ImmutabilityPolicy in container '{0}' with Etag {1}"' this.ContainerName' this.Etag)' "")) " is 138.
Long Statement,Microsoft.Azure.Commands.Management.Storage,UpdateAzStorageBlobServicePropertyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\UpdateAzureStorageBlobServiceProperties.cs,ExecuteCmdlet,The length of the statement  "                serviceProperties = this.StorageClient.BlobServices.GetServiceProperties(this.ResourceGroupName' this.StorageAccountName); " is 122.
Long Statement,Microsoft.Azure.Commands.Management.Storage,UpdateAzStorageBlobServicePropertyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Blob\UpdateAzureStorageBlobServiceProperties.cs,ExecuteCmdlet,The length of the statement  "                serviceProperties = this.StorageClient.BlobServices.SetServiceProperties(this.ResourceGroupName' this.StorageAccountName' serviceProperties); " is 141.
Long Statement,Microsoft.Azure.Commands.Management.Storage,AddAzureStorageAccountManagementPolicyActionCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\AddAzureStorageAccountManagementPolicyAction.cs,ExecuteCmdlet,The length of the statement  "                            throw new PSArgumentException(string.Format(CultureInfo.InvariantCulture' "Invalid BaseBlobAction: {0}"' this.BaseBlobAction)); " is 127.
Long Statement,Microsoft.Azure.Commands.Management.Storage,AddAzureStorageAccountManagementPolicyActionCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\AddAzureStorageAccountManagementPolicyAction.cs,ExecuteCmdlet,The length of the statement  "                    throw new PSArgumentException(string.Format(CultureInfo.InvariantCulture' "Invalid ParameterSet: {0}"' this.ParameterSetName)); " is 127.
Long Statement,Microsoft.Azure.Commands.Management.Storage,GetAzureStorageAccountCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\GetAzureStorageAccount.cs,ExecuteCmdlet,The length of the statement  "                IPage<Microsoft.Azure.Management.Storage.Models.StorageAccount> storageAccounts = this.StorageClient.StorageAccounts.List(); " is 124.
Long Statement,Microsoft.Azure.Commands.Management.Storage,NewAzureStorageAccountCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\NewAzureStorageAccount.cs,ExecuteCmdlet,The length of the statement  "            CheckNameAvailabilityResult checkNameAvailabilityResult = this.StorageClient.StorageAccounts.CheckNameAvailability(this.Name); " is 126.
Long Statement,Microsoft.Azure.Commands.Management.Storage,RemoveAzureStorageAccountNetworkRuleCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\RemoveAzureStorageAccountNetworkRule.cs,ExecuteCmdlet,The length of the statement  "                                throw new ArgumentOutOfRangeException("VirtualNetworkResourceId"' String.Format("Can't remove VirtualNetworkRule with specific ResourceId since not exist: {0}"' rule.VirtualNetworkResourceId)); " is 193.
Long Statement,Microsoft.Azure.Commands.Management.Storage,RemoveAzureStorageAccountNetworkRuleCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\RemoveAzureStorageAccountNetworkRule.cs,ExecuteCmdlet,The length of the statement  "                                throw new ArgumentOutOfRangeException("IPAddressOrRange"' String.Format("Can't remove IpRule with specific IPAddressOrRange since not exist: {0}"' rule.IPAddressOrRange)); " is 171.
Long Statement,Microsoft.Azure.Commands.Management.Storage,RemoveAzureStorageAccountNetworkRuleCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\RemoveAzureStorageAccountNetworkRule.cs,ExecuteCmdlet,The length of the statement  "                            if (!RemoveNetworkRule(storageACL.VirtualNetworkRules' PSNetworkRuleSet.ParseStorageNetworkRuleVirtualNetworkRule(rule))) " is 121.
Long Statement,Microsoft.Azure.Commands.Management.Storage,RemoveAzureStorageAccountNetworkRuleCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\RemoveAzureStorageAccountNetworkRule.cs,ExecuteCmdlet,The length of the statement  "                                throw new ArgumentOutOfRangeException("VirtualNetworkRule"' String.Format("Can't remove VirtualNetworkRule with specific ResourceId since not exist: {0}"' rule.VirtualNetworkResourceId)); " is 187.
Long Statement,Microsoft.Azure.Commands.Management.Storage,RemoveAzureStorageAccountNetworkRuleCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\RemoveAzureStorageAccountNetworkRule.cs,ExecuteCmdlet,The length of the statement  "                                throw new ArgumentOutOfRangeException("IPRule"' String.Format("Can't remove IpRule with specific IPAddressOrRange since not exist: {0}"' rule.IPAddressOrRange)); " is 161.
Long Statement,Microsoft.Azure.Commands.Management.Storage,SetAzureStorageAccountCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\SetAzureStorageAccount.cs,ExecuteCmdlet,The length of the statement  "                if (this.force || this.AccessTier == null || ShouldContinue("Changing the access tier may result in additional charges. See (http://go.microsoft.com/fwlink/?LinkId=786482) to learn more."' "")) " is 193.
Long Statement,Microsoft.Azure.Commands.Management.Storage,SetAzureStorageAccountManagementPolicyCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\SetAzureStorageAccountManagementPolicy.cs,ExecuteCmdlet,The length of the statement  "                        throw new PSArgumentException(string.Format(CultureInfo.InvariantCulture' "Invalid ParameterSet: {0}"' this.ParameterSetName)); " is 127.
Long Statement,Microsoft.Azure.Commands.Management.Storage,UpdateAzureStorageAccountRuleSetCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\UpdateAzureStorageAccountNetworkRuleSet.cs,ExecuteCmdlet,The length of the statement  "                    throw new System.ArgumentNullException("IPRules' VirtualNetworkRules' Bypass' DefaultAction"' "Request must specify an account NetworkRule property to update."); " is 161.
Long Statement,Microsoft.WindowsAzure.Commands.Storage.Adapters,AzureContextAdapterExtensions,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Common\AzureContextAdapterExtensions.cs,GetStorageContext,The length of the statement  "            return new AzureStorageContext(new CloudStorageAccount(new StorageCredentials(service.Name' service.AuthenticationKeys.First())' " is 128.
Long Statement,Microsoft.Azure.Commands.Management.Storage.Models,PSBlobServiceProperties,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Models\PSBlobServiceProperties.cs,ParseBlobServiceProperties,The length of the statement  "                DeleteRetentionPolicy = this.DeleteRetentionPolicy is null ? null : this.DeleteRetentionPolicy.ParseDeleteRetentionPolicy() " is 123.
Complex Conditional,Microsoft.Azure.Commands.Management.Storage,UpdateAzureStorageAccountRuleSetCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\UpdateAzureStorageAccountNetworkRuleSet.cs,ExecuteCmdlet,The conditional expression  "IPRule == null && VirtualNetworkRule == null && bypass == null && defaultAction == null"  is complex.
Magic Number,Microsoft.Azure.Commands.Management.Storage.Models,PSContainer,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Models\PSContainer.cs,ParseResourceGroupFromId,The following statement contains a magic number: return tokens[3];
Magic Number,Microsoft.Azure.Commands.Management.Storage.Models,PSContainer,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Models\PSContainer.cs,ParseStorageAccountNameFromId,The following statement contains a magic number: return tokens[7];
Magic Number,Microsoft.Azure.Commands.Management.Storage.Models,PSContainer,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Models\PSContainer.cs,ParseStorageContainerNameFromId,The following statement contains a magic number: return tokens[11];
Magic Number,Microsoft.Azure.Commands.Management.Storage.Models,PSShare,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Models\PSShare.cs,ParseResourceGroupFromId,The following statement contains a magic number: return tokens[3];
Magic Number,Microsoft.Azure.Commands.Management.Storage.Models,PSShare,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Models\PSShare.cs,ParseStorageAccountNameFromId,The following statement contains a magic number: return tokens[7];
Magic Number,Microsoft.Azure.Commands.Management.Storage.Models,PSShare,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\Models\PSShare.cs,ParseStorageContainerNameFromId,The following statement contains a magic number: return tokens[11];
Missing Default,Microsoft.Azure.Commands.Management.Storage,AddAzureStorageAccountNetworkRuleCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\AddAzureStorageAccountNetworkRule.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)                  {                      case NetWorkRuleStringParameterSet:                          if (storageACL.VirtualNetworkRules == null)                              storageACL.VirtualNetworkRules = new List<VirtualNetworkRule>();                          foreach (string s in VirtualNetworkResourceId)                          {                              VirtualNetworkRule rule = new VirtualNetworkRule(s);                              storageACL.VirtualNetworkRules.Add(rule);                          }                          break;                      case IpRuleStringParameterSet:                          if (storageACL.IpRules == null)                              storageACL.IpRules = new List<IPRule>();                          foreach (string s in IPAddressOrRange)                          {                              IPRule rule = new IPRule(s);                              storageACL.IpRules.Add(rule);                          }                          break;                      case NetworkRuleObjectParameterSet:                          if (storageACL.VirtualNetworkRules == null)                              storageACL.VirtualNetworkRules = new List<VirtualNetworkRule>();                          foreach (PSVirtualNetworkRule rule in VirtualNetworkRule)                          {                              storageACL.VirtualNetworkRules.Add(PSNetworkRuleSet.ParseStorageNetworkRuleVirtualNetworkRule(rule));                          }                          break;                      case IpRuleObjectParameterSet:                          if (storageACL.IpRules == null)                              storageACL.IpRules = new List<IPRule>();                          foreach (PSIpRule rule in IPRule)                          {                              storageACL.IpRules.Add(PSNetworkRuleSet.ParseStorageNetworkRuleIPRule(rule));                          }                          break;                  }
Missing Default,Microsoft.Azure.Commands.Management.Storage,AddAzureStorageAccountNetworkRuleCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\AddAzureStorageAccountNetworkRule.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)                  {                      case NetWorkRuleStringParameterSet:                      case NetworkRuleObjectParameterSet:                          WriteObject(PSNetworkRuleSet.ParsePSNetworkRule(storageAccount.NetworkRuleSet).VirtualNetworkRules);                          break;                      case IpRuleStringParameterSet:                      case IpRuleObjectParameterSet:                          WriteObject(PSNetworkRuleSet.ParsePSNetworkRule(storageAccount.NetworkRuleSet).IpRules);                          break;                  }
Missing Default,Microsoft.Azure.Commands.Management.Storage,RemoveAzureStorageAccountNetworkRuleCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\RemoveAzureStorageAccountNetworkRule.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)                  {                      case NetWorkRuleStringParameterSet:                          if (storageACL.VirtualNetworkRules == null)                              storageACL.VirtualNetworkRules = new List<VirtualNetworkRule>();                          foreach (string s in VirtualNetworkResourceId)                          {                              VirtualNetworkRule rule = new VirtualNetworkRule(s);                              if (!RemoveNetworkRule(storageACL.VirtualNetworkRules' rule))                                  throw new ArgumentOutOfRangeException("VirtualNetworkResourceId"' String.Format("Can't remove VirtualNetworkRule with specific ResourceId since not exist: {0}"' rule.VirtualNetworkResourceId));                          }                          break;                      case IpRuleStringParameterSet:                          if (storageACL.IpRules == null)                              storageACL.IpRules = new List<IPRule>();                          foreach (string s in IPAddressOrRange)                          {                              IPRule rule = new IPRule(s);                              if (!RemoveIpRule(storageACL.IpRules' rule))                                  throw new ArgumentOutOfRangeException("IPAddressOrRange"' String.Format("Can't remove IpRule with specific IPAddressOrRange since not exist: {0}"' rule.IPAddressOrRange));                          }                          break;                      case NetworkRuleObjectParameterSet:                          if (storageACL.VirtualNetworkRules == null)                              storageACL.VirtualNetworkRules = new List<VirtualNetworkRule>();                          foreach (PSVirtualNetworkRule rule in VirtualNetworkRule)                          {                              if (!RemoveNetworkRule(storageACL.VirtualNetworkRules' PSNetworkRuleSet.ParseStorageNetworkRuleVirtualNetworkRule(rule)))                                  throw new ArgumentOutOfRangeException("VirtualNetworkRule"' String.Format("Can't remove VirtualNetworkRule with specific ResourceId since not exist: {0}"' rule.VirtualNetworkResourceId));                          }                          break;                      case IpRuleObjectParameterSet:                          if (storageACL.IpRules == null)                              storageACL.IpRules = new List<IPRule>();                          foreach (PSIpRule rule in IPRule)                          {                              if (!RemoveIpRule(storageACL.IpRules' PSNetworkRuleSet.ParseStorageNetworkRuleIPRule(rule)))                                  throw new ArgumentOutOfRangeException("IPRule"' String.Format("Can't remove IpRule with specific IPAddressOrRange since not exist: {0}"' rule.IPAddressOrRange));                          }                          break;                  }
Missing Default,Microsoft.Azure.Commands.Management.Storage,RemoveAzureStorageAccountNetworkRuleCommand,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Storage\Storage.Management\StorageAccount\RemoveAzureStorageAccountNetworkRule.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)                  {                      case NetWorkRuleStringParameterSet:                      case NetworkRuleObjectParameterSet:                          WriteObject(PSNetworkRuleSet.ParsePSNetworkRule(storageAccount.NetworkRuleSet).VirtualNetworkRules);                          break;                      case IpRuleStringParameterSet:                      case IpRuleObjectParameterSet:                          WriteObject(PSNetworkRuleSet.ParsePSNetworkRule(storageAccount.NetworkRuleSet).IpRules);                          break;                  }
