Implementation smell,Namespace,Class,File,Method,Description
Long Method,Common.Authentication.Test.Cmdlets,ConnectAccount,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\Cmdlets\ConnectAccount.cs,Login,The method has 152 lines of code.
Complex Method,Common.Authentication.Test.Cmdlets,ConnectAccount,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\Cmdlets\ConnectAccount.cs,Login,Cyclomatic complexity of the method is 19
Long Parameter List,Common.Authentication.Test,TypeConversionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\TypeConversionTests.cs,CanConvertValidEnvironments,The method has 24 parameters. Parameters: name' onPremise' activeDirectory' serviceResource' adTenant' dataLakeJobs' dataLakeFiles' kvDnsSuffix' kvResource' gallery' graph' graphResource' portal' publishSettings' resourceManager' serviceManagement' sqlSuffix' storageSuffix' trafficManagerSuffix' batchResource' dataLakeResource' azureOperationalInsightsEndpointResourceId' azureOperationalInsightsEndpoint' analysisServicesSuffix
Long Parameter List,Common.Authentication.Test,TypeConversionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\TypeConversionTests.cs,CanConvertValidPSEnvironments,The method has 24 parameters. Parameters: name' onPremise' activeDirectory' serviceResource' adTenant' dataLakeJobs' dataLakeFiles' kvDnsSuffix' kvResource' gallery' graph' graphResource' portal' publishSettings' resourceManager' serviceManagement' sqlSuffix' storageSuffix' trafficManagerSuffix' batchResource' dataLakeResource' azureOperationalInsightsEndpointResourceId' azureOperationalInsightsEndpoint' analysisServicesSuffix
Long Parameter List,Common.Authentication.Test,TypeConversionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\TypeConversionTests.cs,CreateEnvironment,The method has 24 parameters. Parameters: name' onPremise' activeDirectory' serviceResource' adTenant' dataLakeJobs' dataLakeFiles' kvDnsSuffix' kvResource' gallery' graph' graphResource' portal' publishSettings' resourceManager' serviceManagement' sqlSuffix' storageSuffix' trafficManagerSuffix' batchResource' dataLakeResource' azureOperationalInsightsEndpointResourceId' azureOperationalInsightsEndpoint' analysisServicesSuffix
Long Parameter List,Common.Authentication.Test,TypeConversionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\TypeConversionTests.cs,CanConvertValidAzureSubscriptions,The method has 5 parameters. Parameters: account' name' environment' storageAccount' expectedAccountName
Long Parameter List,Common.Authentication.Test.Cmdlets,ConnectAccount,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\Cmdlets\ConnectAccount.cs,Login,The method has 7 parameters. Parameters: account' environment' tenantId' subscriptionId' subscriptionName' password' promptAction
Long Parameter List,Common.Authentication.Test.Cmdlets,ConnectAccount,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\Cmdlets\ConnectAccount.cs,ListAccountTenants,The method has 5 parameters. Parameters: account' environment' password' promptBehavior' promptAction
Long Parameter List,Common.Authentication.Test.Cmdlets,ConnectAccount,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\Cmdlets\ConnectAccount.cs,AcquireAccessToken,The method has 6 parameters. Parameters: account' environment' tenantId' password' promptBehavior' promptAction
Long Parameter List,Common.Authentication.Test.Cmdlets,ConnectAccount,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\Cmdlets\ConnectAccount.cs,TryGetTenantSubscription,The method has 8 parameters. Parameters: accessToken' account' environment' tenantId' subscriptionId' subscriptionName' subscription' tenant
Long Identifier,Common.Authentication.Test,TypeConversionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\TypeConversionTests.cs,CanConvertValidEnvironments,The length of the parameter azureOperationalInsightsEndpointResourceId is 42.
Long Identifier,Common.Authentication.Test,TypeConversionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\TypeConversionTests.cs,CanConvertValidEnvironments,The length of the parameter azureOperationalInsightsEndpoint is 32.
Long Identifier,Common.Authentication.Test,TypeConversionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\TypeConversionTests.cs,CanConvertValidPSEnvironments,The length of the parameter azureOperationalInsightsEndpointResourceId is 42.
Long Identifier,Common.Authentication.Test,TypeConversionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\TypeConversionTests.cs,CanConvertValidPSEnvironments,The length of the parameter azureOperationalInsightsEndpoint is 32.
Long Identifier,Common.Authentication.Test,TypeConversionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\TypeConversionTests.cs,CreateEnvironment,The length of the parameter azureOperationalInsightsEndpointResourceId is 42.
Long Identifier,Common.Authentication.Test,TypeConversionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\TypeConversionTests.cs,CreateEnvironment,The length of the parameter azureOperationalInsightsEndpoint is 32.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateWithAccessToken,The length of the statement  "            var checkArmToken = authFactory.Authenticate(account' environment' tenant' new System.Security.SecureString()' "Never"' null); " is 126.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateWithAccessToken,The length of the statement  "            checkArmToken = authFactory.Authenticate(account' environment' tenant' new System.Security.SecureString()' "Never"' null' environment.ActiveDirectoryServiceEndpointResourceId); " is 176.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateWithAccessToken,The length of the statement  "            var checkGraphToken = authFactory.Authenticate(account' environment' tenant' new System.Security.SecureString()' "Never"' null' AzureEnvironment.Endpoint.GraphEndpointResourceId); " is 179.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateWithAccessToken,The length of the statement  "            checkGraphToken = authFactory.Authenticate(account' environment' tenant' new System.Security.SecureString()' "Never"' null' environment.GraphEndpointResourceId); " is 161.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateWithAccessToken,The length of the statement  "            var checkKVToken = authFactory.Authenticate(account' environment' tenant' new System.Security.SecureString()' "Never"' null' environment.AzureKeyVaultServiceEndpointResourceId); " is 177.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateWithAccessToken,The length of the statement  "            checkKVToken = authFactory.Authenticate(account' environment' tenant' new System.Security.SecureString()' "Never"' null' AzureEnvironment.Endpoint.AzureKeyVaultServiceEndpointResourceId); " is 187.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIDefault,The length of the statement  "            builder.Query = $"resource={Uri.EscapeDataString(environment.ActiveDirectoryServiceEndpointResourceId)}&api-version=2018-02-01"; " is 128.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIDefault,The length of the statement  "                {defaultUri' new ManagedServiceTokenInfo { AccessToken = expectedAccessToken' ExpiresIn = 3600' Resource=expectedResource}}' " is 124.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIDefault,The length of the statement  "                {"http://myfunkyurl:10432/oauth2/token?resource=foo&api-version=2018-02-01"' new ManagedServiceTokenInfo { AccessToken = expectedToken2' ExpiresIn = 3600' Resource="foo"} } " is 172.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIDefault,The length of the statement  "            AzureSession.Instance.RegisterComponent(HttpClientOperationsFactory.Name' () => TestHttpOperationsFactory.Create(responses' _output)' true); " is 140.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIResourceId,The length of the statement  "            builder.Query = $"resource={Uri.EscapeDataString(environment.ActiveDirectoryServiceEndpointResourceId)}&msi_res_id={Uri.EscapeDataString(userId)}&api-version=2018-02-01"; " is 170.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIResourceId,The length of the statement  "            customBuilder.Query = $"resource={Uri.EscapeDataString(environment.GraphEndpointResourceId)}&msi_res_id={Uri.EscapeDataString(userId)}&api-version=2018-02-01"; " is 159.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIResourceId,The length of the statement  "                {defaultUri' new ManagedServiceTokenInfo { AccessToken = expectedAccessToken' ExpiresIn = 3600' Resource=expectedResource}}' " is 124.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIResourceId,The length of the statement  "                {customUri' new ManagedServiceTokenInfo { AccessToken = expectedToken2' ExpiresIn = 3600' Resource=environment.GraphEndpointResourceId} } " is 137.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIResourceId,The length of the statement  "            AzureSession.Instance.RegisterComponent(HttpClientOperationsFactory.Name' () => TestHttpOperationsFactory.Create(responses' _output)' true); " is 140.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIResourceId,The length of the statement  "            var token2 = authFactory.Authenticate(account2' environment' tenant' null' null' null' AzureEnvironment.Endpoint.GraphEndpointResourceId); " is 138.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIClientId,The length of the statement  "            builder.Query = $"resource={Uri.EscapeDataString(environment.ActiveDirectoryServiceEndpointResourceId)}&client_id={userId}&api-version=2018-02-01"; " is 147.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIClientId,The length of the statement  "            customBuilder.Query = $"resource={Uri.EscapeDataString(environment.GraphEndpointResourceId)}&client_id={userId}&api-version=2018-02-01"; " is 136.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIClientId,The length of the statement  "                {defaultUri' new ManagedServiceTokenInfo { AccessToken = expectedAccessToken' ExpiresIn = 3600' Resource=expectedResource}}' " is 124.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIClientId,The length of the statement  "                {customUri' new ManagedServiceTokenInfo { AccessToken = expectedToken2' ExpiresIn = 3600' Resource=environment.GraphEndpointResourceId} } " is 137.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIClientId,The length of the statement  "            AzureSession.Instance.RegisterComponent(HttpClientOperationsFactory.Name' () => TestHttpOperationsFactory.Create(responses' _output)' true); " is 140.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIClientId,The length of the statement  "            var token2 = authFactory.Authenticate(account2' environment' tenant' null' null' null' AzureEnvironment.Endpoint.GraphEndpointResourceId); " is 138.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIObjectId,The length of the statement  "            builder.Query = $"resource={Uri.EscapeDataString(environment.ActiveDirectoryServiceEndpointResourceId)}&object_id={userId}&api-version=2018-02-01"; " is 147.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIObjectId,The length of the statement  "            customBuilder.Query = $"resource={Uri.EscapeDataString(environment.GraphEndpointResourceId)}&object_id={userId}&api-version=2018-02-01"; " is 136.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIObjectId,The length of the statement  "                {defaultUri' new ManagedServiceTokenInfo { AccessToken = expectedAccessToken' ExpiresIn = 3600' Resource=expectedResource}}' " is 124.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIObjectId,The length of the statement  "                {customUri' new ManagedServiceTokenInfo { AccessToken = expectedToken2' ExpiresIn = 3600' Resource=environment.GraphEndpointResourceId} } " is 137.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIObjectId,The length of the statement  "            AzureSession.Instance.RegisterComponent(HttpClientOperationsFactory.Name' () => TestHttpOperationsFactory.Create(responses' _output)' true); " is 140.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIObjectId,The length of the statement  "            var token2 = authFactory.Authenticate(account2' environment' tenant' null' null' null' AzureEnvironment.Endpoint.GraphEndpointResourceId); " is 138.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,ResponseRedactionWorks,The length of the statement  "            Assert.Equal("   \"access_token\": \"<redacted>\""' GeneralUtilities.TransformBody("   \"access_token\": \"eyJo1234567\"")); " is 124.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,AppServiceManagedIdentity,The length of the statement  "            AzureSession.Instance.RegisterComponent(HttpClientOperationsFactory.Name' () => TestHttpOperationsFactory.Create(responses' _output)' true); " is 140.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,AppServiceUserManagedIdentityWithDataPlane,The length of the statement  "            AzureSession.Instance.RegisterComponent(HttpClientOperationsFactory.Name' () => TestHttpOperationsFactory.Create(responses' _output)' true); " is 140.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,AppServiceUserManagedIdentityWithDataPlane,The length of the statement  "            var msat = new ManagedServiceAppServiceAccessToken(account' environment' environment.GetEndpoint(resource) ?? resource' tenant); " is 128.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,AppServiceManagedIdentityWithDataPlane,The length of the statement  "            AzureSession.Instance.RegisterComponent(HttpClientOperationsFactory.Name' () => TestHttpOperationsFactory.Create(responses' _output)' true); " is 140.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,AppServiceManagedIdentityWithDataPlane,The length of the statement  "            var msat = new ManagedServiceAppServiceAccessToken(account' environment' environment.GetEndpoint(resource) ?? resource' tenant); " is 128.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,AppServiceManagedIdentityWithServiceManagement,The length of the statement  "            AzureSession.Instance.RegisterComponent(HttpClientOperationsFactory.Name' () => TestHttpOperationsFactory.Create(responses' _output)' true); " is 140.
Long Statement,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,AppServiceManagedIdentityWithServiceManagement,The length of the statement  "            var msat = new ManagedServiceAppServiceAccessToken(account' environment' GetFunctionsResourceId(serviceManagementResource' environment)' tenant); " is 145.
Long Statement,Common.Authentication.Test,CommonDataCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\CommonDataCmdletTests.cs,CanClearStorageAccountForRMProfile,The length of the statement  "                    Assert.True(string.IsNullOrEmpty(AzureRmProfileProvider.Instance.Profile.DefaultContext.GetCurrentStorageAccountName())); " is 121.
Long Statement,Common.Authentication.Test,LoginTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LoginTests.cs,EnableAutosave,The length of the statement  "                throw new PSInvalidOperationException(string.Format("'{0}' is not a valid path. You cannot enable context autosave without a valid context path"' contextPath)); " is 160.
Long Statement,Common.Authentication.Test,LoginTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LoginTests.cs,EnableAutosave,The length of the statement  "                throw new PSInvalidOperationException(string.Format("'{0}' is not a valid path. You cannot enable context autosave without a valid token cache path"' tokenPath)); " is 162.
Long Statement,Common.Authentication.Test,LongRunningCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LongRunningCmdletTests.cs,CanHandleShouldProcessExceptionForConfirm,The length of the statement  "            mockRuntime.Setup((r) => r.ShouldProcess(It.IsAny<string>()' It.IsAny<string>())).Throws(new InvalidOperationException("Exception on ShouldProcess")); " is 150.
Long Statement,Common.Authentication.Test,LongRunningCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LongRunningCmdletTests.cs,CanHandleShouldProcessExceptionForConfirm,The length of the statement  "                    Assert.True(j.Error.Count > 0 && j.Error.Any(e => e.Exception != null && e.Exception.GetType() == typeof(InvalidOperationException) && e.Exception.Message.Contains("Confirm"))); " is 177.
Long Statement,Common.Authentication.Test,LongRunningCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LongRunningCmdletTests.cs,CanHandleShouldProcessExceptionForWhatIf,The length of the statement  "            mockRuntime.Setup((r) => r.ShouldProcess(It.IsAny<string>()' It.IsAny<string>())).Throws(new InvalidOperationException("Exception on ShouldProcess")); " is 150.
Long Statement,Common.Authentication.Test,LongRunningCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LongRunningCmdletTests.cs,CanHandleShouldProcessExceptionForWhatIf,The length of the statement  "               Assert.True(j.Error.Count > 0 && j.Error.Any(e => e.Exception != null && e.Exception.GetType() == typeof(InvalidOperationException) && e.Exception.Message.Contains("WhatIf"))); " is 176.
Long Statement,Common.Authentication.Test,LongRunningCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LongRunningCmdletTests.cs,CanHandleShouldContinueException,The length of the statement  "            mockRuntime.Setup((r) => r.ShouldContinue(It.IsAny<string>()' It.IsAny<string>())).Throws(new InvalidOperationException("Exception on ShouldContinue")); " is 152.
Long Statement,Common.Authentication.Test,LongRunningCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LongRunningCmdletTests.cs,CanHandleShouldContinueException,The length of the statement  "                Assert.True(j.Error.Count > 0 && j.Error.Any(e => e.Exception != null && e.Exception.GetType() == typeof(InvalidOperationException) && e.Exception.Message.Contains("Force"))); " is 175.
Long Statement,Common.Authentication.Test,LongRunningCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LongRunningCmdletTests.cs,SetupCmdlet,The length of the statement  "                mockRuntime.Setup(m => m.ShouldProcess(It.IsAny<string>())).Throws(new InvalidOperationException("ShouldProcess should not be called")); " is 136.
Long Statement,Common.Authentication.Test,LongRunningCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LongRunningCmdletTests.cs,SetupCmdlet,The length of the statement  "                mockRuntime.Setup(m => m.ShouldProcess(It.IsAny<string>()' It.IsAny<string>())).Throws(new InvalidOperationException("ShouldProcess should not be called")); " is 156.
Long Statement,Common.Authentication.Test,LongRunningCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LongRunningCmdletTests.cs,SetupCmdlet,The length of the statement  "                mockRuntime.Setup(m => m.ShouldProcess(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<string>())).Throws(new InvalidOperationException("ShouldProcess should not be called")); " is 176.
Long Statement,Common.Authentication.Test,LongRunningCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LongRunningCmdletTests.cs,SetupCmdlet,The length of the statement  "                mockRuntime.Setup(m => m.ShouldContinue(It.IsAny<string>()' It.IsAny<string>())).Throws(new InvalidOperationException("ShouldContinue should not be called")); " is 158.
Long Statement,Common.Authentication.Test,LongRunningCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LongRunningCmdletTests.cs,HandleStateChange,The length of the statement  "                xunitLogger.Information(string.Format("[statechangedhandler]: previous state: '{0}'' current state: '{1}'"' args.PreviousJobStateInfo?.State' args.JobStateInfo?.State)); " is 169.
Long Statement,Common.Authentication.Test,LongRunningCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LongRunningCmdletTests.cs,HandleStateChange,The length of the statement  "                if (args.JobStateInfo.State == JobState.Completed || args.JobStateInfo.State == JobState.Failed || args.JobStateInfo.State == JobState.Stopped) " is 143.
Long Statement,Common.Authentication.Test,ProtectedFileProviderTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ProtectedFileProviderTests.cs,MultipleConcurrentReadsAllowed,The length of the statement  "                using (var tempStream = ProtectedFileProvider.CreateFileProvider(protectedFile' FileProtection.SharedRead' store).Stream) " is 121.
Long Statement,Common.Authentication.Test,ProtectedFileProviderTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ProtectedFileProviderTests.cs,MultipleConcurrentReadsAllowed,The length of the statement  "                    Assert.Throws<UnauthorizedAccessException>(() => ProtectedFileProvider.CreateFileProvider(protectedFile' FileProtection.ExclusiveWrite' store).Stream); " is 151.
Long Statement,Common.Authentication.Test,ProtectedFileProviderTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ProtectedFileProviderTests.cs,WriteAccessIsExclusive,The length of the statement  "                using (var tempStream = ProtectedFileProvider.CreateFileProvider(protectedFile' FileProtection.ExclusiveWrite' store).Stream) " is 125.
Long Statement,Common.Authentication.Test,ProtectedFileProviderTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ProtectedFileProviderTests.cs,WriteAccessIsExclusive,The length of the statement  "                    Assert.Throws<UnauthorizedAccessException>(() => ProtectedFileProvider.CreateFileProvider(protectedFile' FileProtection.ExclusiveWrite' store).Stream); " is 151.
Long Statement,Common.Authentication.Test,ProtectedFileProviderTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ProtectedFileProviderTests.cs,WriteAccessIsExclusive,The length of the statement  "                    Assert.Throws<UnauthorizedAccessException>(() => ProtectedFileProvider.CreateFileProvider(protectedFile' FileProtection.SharedRead' store).Stream); " is 147.
Long Statement,Common.Authentication.Test,ProtectedFileProviderTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ProtectedFileProviderTests.cs,FileProviderThrowsOnInvalidInputs,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => ProtectedFileProvider.CreateFileProvider(string.Empty' FileProtection.SharedRead' null)); " is 132.
Long Statement,Common.Authentication.Test,ProtectedFileProviderTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ProtectedFileProviderTests.cs,FileProviderThrowsOnInvalidInputs,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => ProtectedFileProvider.CreateFileProvider(string.Empty' FileProtection.SharedRead' new MemoryDataStore())); " is 155.
Long Statement,Common.Authentication.Test,ProtectedFileProviderTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ProtectedFileProviderTests.cs,LockFailureThrowsGoodException,The length of the statement  "                Assert.Contains(protectedFile' Assert.Throws<UnauthorizedAccessException>(() => ProtectedFileProvider.CreateFileProvider(protectedFile' FileProtection.SharedRead' store.Object).Stream).Message); " is 194.
Long Statement,Common.Authentication.Test,ProtectedFileProviderTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ProtectedFileProviderTests.cs,LockFailureThrowsGoodException,The length of the statement  "                Assert.Contains(protectedFile' Assert.Throws<UnauthorizedAccessException>(() => ProtectedFileProvider.CreateFileProvider(protectedFile' FileProtection.ExclusiveWrite' store.Object).Stream).Message); " is 198.
Long Statement,Common.Authentication.Test,PSSerializationTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\PSSerializationTests.cs,CanConvertProfieWithCustomEnvironment,The length of the statement  "            IAzureContext context = new AzureContext(new AzureSubscription()' new AzureAccount()' new AzureEnvironment()' new AzureTenant()' new byte[0]); " is 142.
Long Statement,Common.Authentication.Test,PSSerializationTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\PSSerializationTests.cs,CanConvertMinimalContext,The length of the statement  "            IAzureContext context = new AzureContext(new AzureSubscription()' new AzureAccount()' new AzureEnvironment()' new AzureTenant()' new byte[0]); " is 142.
Long Statement,Common.Authentication.Test,SessionInitializationTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\SessionInitializationTests.cs,DataCollectionSettingPreventsFileWrite,The length of the statement  "                store.Setup(f => f.WriteFile(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<Encoding>())).Throws(new IOException("Cannot access file")); " is 138.
Long Statement,Common.Authentication.Test,SessionInitializationTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\SessionInitializationTests.cs,TestInitializationCannotWrite,The length of the statement  "                store.Setup(f => f.WriteFile(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<Encoding>())).Throws(new IOException("Cannot access file")); " is 138.
Long Statement,Common.Authentication.Test,TelemetryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\TelemetryTests.cs,DataCollectionHandlesSerializationErrors,The length of the statement  "            var dataCollectionPath = Path.Combine(AzureSession.Instance.ProfileDirectory' AzurePSDataCollectionProfile.DefaultFileName); " is 124.
Long Statement,Common.Authentication.Test,TelemetryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\TelemetryTests.cs,DataCollectionHandlesWriteErrors,The length of the statement  "            mock.Setup(f => f.WriteFile(It.IsAny<string>()' It.IsAny<byte[]>())).Throws(new ArgumentException("This exception should be caught")); " is 134.
Long Statement,Common.Authentication.Test,TelemetryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\TelemetryTests.cs,DataCollectionHandlesWriteErrors,The length of the statement  "            mock.Setup(f => f.WriteFile(It.IsAny<string>()' It.IsAny<string>())).Throws(new ArgumentException("This exception should be caught")); " is 134.
Long Statement,Common.Authentication.Test,TelemetryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\TelemetryTests.cs,DataCollectionHandlesWriteErrors,The length of the statement  "            mock.Setup(f => f.WriteFile(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<Encoding>())).Throws(new ArgumentException("This exception should be caught")); " is 156.
Long Statement,Common.Authentication.Test.Cmdlets,ConnectAccount,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\Cmdlets\ConnectAccount.cs,Login,The length of the statement  "                        throw new ArgumentNullException(string.Format("Could not find tenant id for provided tenant domain '{0}'. Please ensure that " + " is 128.
Long Statement,Common.Authentication.Test.Cmdlets,ConnectAccount,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\Cmdlets\ConnectAccount.cs,Login,The length of the statement  "                        TryGetTenantSubscription(token' account' environment' tenant' subscriptionId' subscriptionName' out tempSubscription' out tempTenant)) " is 134.
Long Statement,Common.Authentication.Test.Cmdlets,ConnectAccount,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\Cmdlets\ConnectAccount.cs,Login,The length of the statement  "                    throw new PSInvalidOperationException(String.Format("The provided account {0} does not have access to subscription ID '{1}'. Please try logging in with different credentials or a different subscription ID."' account.Id' subscriptionId)); " is 237.
Long Statement,Common.Authentication.Test.Cmdlets,ConnectAccount,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\Cmdlets\ConnectAccount.cs,Login,The length of the statement  "                    throw new PSInvalidOperationException(String.Format("The provided account {0} does not have access to subscription name '{1}'. Please try logging in with different credentials or a different subscription name."' account.Id' subscriptionName)); " is 243.
Long Statement,Common.Authentication.Test.Cmdlets,ConnectAccount,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\Cmdlets\ConnectAccount.cs,ListTenants,The length of the statement  "            List<AzureTenant> tenants = ListAccountTenants(_profile.DefaultContext.Account' _profile.DefaultContext.Environment' null' ShowDialog.Never' null); " is 147.
Long Statement,Microsoft.WindowsAzure.Commands.Common.Test.Mocks,MockDataStore,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\Mocks\MockDataStore.cs,GetFiles,The length of the statement  "                if (key.StartsWith(startDirectory) && VirtualStore[key] != FolderKey && Regex.IsMatch(key' WildcardToRegex(filePattern)' RegexOptions.IgnoreCase)) " is 146.
Empty Catch Block,Common.Authentication.Test,AzureSessionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AzureSessionTests.cs,InitializerCreatesTokenCacheFile,The method has an empty catch block.
Empty Catch Block,Common.Authentication.Test,LoginTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LoginTests.cs,EnableAutosave,The method has an empty catch block.
Empty Catch Block,Common.Authentication.Test,LoginTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LoginTests.cs,EnableAutosave,The method has an empty catch block.
Empty Catch Block,Common.Authentication.Test,LoginTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LoginTests.cs,EnableAutosave,The method has an empty catch block.
Empty Catch Block,Common.Authentication.Test,LoginTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LoginTests.cs,IsValidPath,The method has an empty catch block.
Empty Catch Block,Common.Authentication.Test.Cmdlets,ConnectAccount,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\Cmdlets\ConnectAccount.cs,Login,The method has an empty catch block.
Empty Catch Block,Common.Authentication.Test.Cmdlets,ConnectAccount,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\Cmdlets\ConnectAccount.cs,ListSubscriptions,The method has an empty catch block.
Magic Number,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIDefault,The following statement contains a magic number: var responses = new Dictionary<string' ManagedServiceTokenInfo>(StringComparer.OrdinalIgnoreCase)              {                  {defaultUri' new ManagedServiceTokenInfo { AccessToken = expectedAccessToken' ExpiresIn = 3600' Resource=expectedResource}}'                  {"http://myfunkyurl:10432/oauth2/token?resource=foo&api-version=2018-02-01"' new ManagedServiceTokenInfo { AccessToken = expectedToken2' ExpiresIn = 3600' Resource="foo"} }              };
Magic Number,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIDefault,The following statement contains a magic number: var responses = new Dictionary<string' ManagedServiceTokenInfo>(StringComparer.OrdinalIgnoreCase)              {                  {defaultUri' new ManagedServiceTokenInfo { AccessToken = expectedAccessToken' ExpiresIn = 3600' Resource=expectedResource}}'                  {"http://myfunkyurl:10432/oauth2/token?resource=foo&api-version=2018-02-01"' new ManagedServiceTokenInfo { AccessToken = expectedToken2' ExpiresIn = 3600' Resource="foo"} }              };
Magic Number,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIDefault,The following statement contains a magic number: Assert.Equal(3600' Math.Round(token.ExpiresOn.Subtract(DateTimeOffset.Now).TotalSeconds));
Magic Number,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIResourceId,The following statement contains a magic number: var responses = new Dictionary<string' ManagedServiceTokenInfo>(StringComparer.OrdinalIgnoreCase)              {                  {defaultUri' new ManagedServiceTokenInfo { AccessToken = expectedAccessToken' ExpiresIn = 3600' Resource=expectedResource}}'                  {customUri' new ManagedServiceTokenInfo { AccessToken = expectedToken2' ExpiresIn = 3600' Resource=environment.GraphEndpointResourceId} }              };
Magic Number,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIResourceId,The following statement contains a magic number: var responses = new Dictionary<string' ManagedServiceTokenInfo>(StringComparer.OrdinalIgnoreCase)              {                  {defaultUri' new ManagedServiceTokenInfo { AccessToken = expectedAccessToken' ExpiresIn = 3600' Resource=expectedResource}}'                  {customUri' new ManagedServiceTokenInfo { AccessToken = expectedToken2' ExpiresIn = 3600' Resource=environment.GraphEndpointResourceId} }              };
Magic Number,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIResourceId,The following statement contains a magic number: Assert.Equal(3600' Math.Round(token.ExpiresOn.Subtract(DateTimeOffset.Now).TotalSeconds));
Magic Number,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIClientId,The following statement contains a magic number: var responses = new Dictionary<string' ManagedServiceTokenInfo>(StringComparer.OrdinalIgnoreCase)              {                  {defaultUri' new ManagedServiceTokenInfo { AccessToken = expectedAccessToken' ExpiresIn = 3600' Resource=expectedResource}}'                  {customUri' new ManagedServiceTokenInfo { AccessToken = expectedToken2' ExpiresIn = 3600' Resource=environment.GraphEndpointResourceId} }              };
Magic Number,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIClientId,The following statement contains a magic number: var responses = new Dictionary<string' ManagedServiceTokenInfo>(StringComparer.OrdinalIgnoreCase)              {                  {defaultUri' new ManagedServiceTokenInfo { AccessToken = expectedAccessToken' ExpiresIn = 3600' Resource=expectedResource}}'                  {customUri' new ManagedServiceTokenInfo { AccessToken = expectedToken2' ExpiresIn = 3600' Resource=environment.GraphEndpointResourceId} }              };
Magic Number,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIClientId,The following statement contains a magic number: Assert.Equal(3600' Math.Round(token.ExpiresOn.Subtract(DateTimeOffset.Now).TotalSeconds));
Magic Number,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIObjectId,The following statement contains a magic number: var responses = new Dictionary<string' ManagedServiceTokenInfo>(StringComparer.OrdinalIgnoreCase)              {                  {defaultUri' new ManagedServiceTokenInfo { AccessToken = expectedAccessToken' ExpiresIn = 3600' Resource=expectedResource}}'                  {customUri' new ManagedServiceTokenInfo { AccessToken = expectedToken2' ExpiresIn = 3600' Resource=environment.GraphEndpointResourceId} }              };
Magic Number,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIObjectId,The following statement contains a magic number: var responses = new Dictionary<string' ManagedServiceTokenInfo>(StringComparer.OrdinalIgnoreCase)              {                  {defaultUri' new ManagedServiceTokenInfo { AccessToken = expectedAccessToken' ExpiresIn = 3600' Resource=expectedResource}}'                  {customUri' new ManagedServiceTokenInfo { AccessToken = expectedToken2' ExpiresIn = 3600' Resource=environment.GraphEndpointResourceId} }              };
Magic Number,Common.Authentication.Test,AuthenticationFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AuthenticationFactoryTests.cs,CanAuthenticateUsingMSIObjectId,The following statement contains a magic number: Assert.Equal(3600' Math.Round(token.ExpiresOn.Subtract(DateTimeOffset.Now).TotalSeconds));
Magic Number,Common.Authentication.Test,AzureSessionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AzureSessionTests.cs,TokenCacheIgnoresInvalidData,The following statement contains a magic number: var store = new AzureTokenCache { CacheData = new byte[] { 3' 0' 0' 0' 0' 0' 0' 0 } };
Magic Number,Common.Authentication.Test,AzureSessionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\AzureSessionTests.cs,TokenCacheUsesValidData,The following statement contains a magic number: var store = new AzureTokenCache { CacheData = new byte[] { 2' 0' 0' 0' 0' 0' 0' 0 } };
Magic Number,Common.Authentication.Test,RetryTestHandler,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ClientFactoryHandlerTests.cs,SendAsync,The following statement contains a magic number: switch (Interlocked.Increment(ref times) % 3)                  {                      case 0:                      case 1:                          throw new TaskCanceledException();                      default:                          throw new InvalidOperationException();                  }
Magic Number,Common.Authentication.Test,ClientFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ClientFactoryTests.cs,ClientFactoryTests,The following statement contains a magic number: creds.Length != 3
Magic Number,Common.Authentication.Test,ClientFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ClientFactoryTests.cs,ClientFactoryTests,The following statement contains a magic number: creds[2]
Magic Number,Common.Authentication.Test,ClientFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ClientFactoryTests.cs,VerifyProductInfoHeaderValueEquality,The following statement contains a magic number: Assert.Equal(4' factory.UserAgents.Length);
Magic Number,Common.Authentication.Test,ClientFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ClientFactoryTests.cs,VerifyUserAgentValuesAreTransmitted,The following statement contains a magic number: Assert.Equal(4' factory.UserAgents.Length);
Magic Number,Common.Authentication.Test,ClientFactoryTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ClientFactoryTests.cs,VerifyUserAgentValuesAreTransmitted,The following statement contains a magic number: Assert.Equal(5' client.HttpClient.DefaultRequestHeaders.UserAgent.Count);
Magic Number,Common.Authentication.Test,LongRunningCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LongRunningCmdletTests.cs,CanHandleCmdletException,The following statement contains a magic number: WaitForCompletion(job' j =>              {                  Assert.Equal("Failed"' job.StatusMessage);                  Assert.Equal(2' job.Error.Count);              });
Magic Number,Common.Authentication.Test,LongRunningCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LongRunningCmdletTests.cs,CanHandleCmdletStop,The following statement contains a magic number: this.jobCompleted.WaitOne(TimeSpan.FromSeconds(10));
Magic Number,Common.Authentication.Test,LongRunningCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LongRunningCmdletTests.cs,WaitForCompletion,The following statement contains a magic number: jobCompleted.WaitOne(TimeSpan.FromSeconds(30));
Magic Number,Common.Authentication.Test,AzureStreamTestCmdlet,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\LongRunningCmdletTests.cs,ExecuteCmdlet,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromSeconds(5));
Magic Number,Common.Authentication.Test,PSSerializationTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\PSSerializationTests.cs,DoPSPassThroughConversion,The following statement contains a magic number: string content = PSSerializer.Serialize(objectToConvert' 10);
Magic Number,Common.Authentication.Test,PSSerializationTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\PSSerializationTests.cs,GetDefaultTokenCache,The following statement contains a magic number: var cache = new AzureTokenCache              {  #if !NETSTANDARD                  CacheData = new byte[] { 2' 0' 0' 0' 0' 0' 0' 0 }  #else                  CacheData = new byte[] { 3' 0' 0' 0' 0' 0' 0' 0 }  #endif              };
Magic Number,Common.Authentication.Test,TypeConversionTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\TypeConversionTests.cs,GetDomainName,The following statement contains a magic number: var parts = account.Split(new char[] { '@' }' 2' StringSplitOptions.RemoveEmptyEntries);
Magic Number,Common.Authentication.Test.Cmdlets,ConnectAccount,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\Cmdlets\ConnectAccount.cs,Login,The following statement contains a magic number: var subscriptions = ListSubscriptions(tenantId).Take(25);
Magic Number,Microsoft.WindowsAzure.Commands.Common.Test,ConversionUtilitiesTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ConversionUtilitiesTests.cs,DeserializeJsonWorksForSimpleCases,The following statement contains a magic number: Assert.Equal(5' result.Count);
Magic Number,Microsoft.WindowsAzure.Commands.Common.Test,ConversionUtilitiesTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ConversionUtilitiesTests.cs,DeserializeJsonWorksForSimpleCases,The following statement contains a magic number: Assert.Equal(2' ((Dictionary<string' object>)result["address"]).Count);
Magic Number,Microsoft.WindowsAzure.Commands.Common.Test,ConversionUtilitiesTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ConversionUtilitiesTests.cs,DeserializeJsonWorksForSimpleCases,The following statement contains a magic number: Assert.Equal(2' ((List<object>)result["list"]).Count);
Magic Number,Microsoft.WindowsAzure.Commands.Common.Test,ConversionUtilitiesTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\ConversionUtilitiesTests.cs,DeserializeJsonWorksForEmptyObjects,The following statement contains a magic number: Assert.Equal(5' result.Count);
Magic Number,Microsoft.WindowsAzure.Commands.Common.Test.Mocks,MockDataStore,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication.Test\Mocks\MockDataStore.cs,OpenForExclusiveWrite,The following statement contains a magic number: byte[] buffer = new byte[16384];
