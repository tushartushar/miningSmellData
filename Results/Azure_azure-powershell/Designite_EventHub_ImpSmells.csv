Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.Azure.Commands.EventHub.Commands,SetAzureEventhubAuthorizationRules,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\SetAzureEventhubAuthorizationRules.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.Azure.Commands.EventHub.Commands.GeoDR,GetEventHubGeoDRConfiguration,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\DRConfig\GetAzureEventHubGeoDRConfiguration.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Azure.Commands.EventHub.Commands.GeoDR,NewAzureRmEventHubGeoDRConfiguration,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\DRConfig\NewAzureEventHubGeoDRConfiguration.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Azure.Commands.EventHub.Commands.NetworkruleSet,RemoveAzureEventHubIPRule,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\NetworkRuleSet\RemoveAzureEventHubIPRule.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Azure.Commands.EventHub.Commands.NetworkruleSet,RemoveAzureEventHubVNetRule,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\NetworkRuleSet\RemoveAzureEventHubVirtualNetworkrule.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Azure.Commands.EventHub.Models,PSNamespaceAttributes,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Models\PSNamespaceAttributes.cs,PSNamespaceAttributes,Cyclomatic complexity of the method is 13
Long Parameter List,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,BeginCreateNamespace,The method has 9 parameters. Parameters: resourceGroupName' namespaceName' location' skuName' skuCapacity' tags' isAutoInflateEnabled' maximumThroughputUnits' isKafkaEnabled
Long Parameter List,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,UpdateNamespace,The method has 9 parameters. Parameters: resourceGroupName' namespaceName' location' skuName' skuCapacity' state' tags' isAutoInflateEnabled' maximumThroughputUnits
Long Parameter List,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,SetRegenerateKeys,The method has 5 parameters. Parameters: resourceGroupName' namespaceName' authRuleName' regenerateKeys' keyValue
Long Parameter List,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,CreateOrUpdateEventHubAuthorizationRules,The method has 5 parameters. Parameters: resourceGroupName' namespaceName' eventHubName' authorizationRuleName' parameters
Long Parameter List,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,SetRegenerateKeys,The method has 6 parameters. Parameters: resourceGroupName' namespaceName' eventHubName' authRuleName' regenerateKeys' keyValue
Long Parameter List,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,CreateOrUpdateConsumerGroup,The method has 5 parameters. Parameters: resourceGroupName' namespaceName' eventHubName' consumerGroupName' parameter
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter EventHubNamespaceAuthorizationRuleVerb is 38.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter NewEventHubAuthorizationRuleVerb is 32.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter EventhubDRConfigurationFailoverVerb is 35.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter EventhubDRConfigurationBreakPairingVerb is 39.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter NamespaceAuthoRuleParameterSet is 30.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter ConsumergroupAuthoRuleParameterSet is 34.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter AliasCheckNameAvailabilityParameterSet is 38.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter NamespaceCheckNameAvailabilityParameterSet is 42.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter NamespaceInputObjectParameterSet is 32.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter EventhubInputObjectParameterSet is 31.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter ConsumergroupInputObjectParameterSet is 36.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter AuthoRuleInputObjectParameterSet is 32.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter NetwrokruleSetInputObjectParameterSet is 37.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter VirtualNetworkRuleInputObjectParameterSet is 41.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter GeoDRConfigResourceIdParameterSet is 33.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter NamespaceResourceIdParameterSet is 31.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter EventhubResourceIdParameterSet is 30.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter ConsumergroupResourceIdParameterSet is 35.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter NetworkRuleSetResourceIdParameterSet is 36.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter NamespacePropertiesParameterSet is 31.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter EventhubPropertiesParameterSet is 30.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter ConsumergroupPropertiesParameterSet is 35.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter NetwrokruleSetPropertiesParameterSet is 36.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter NetwrokruleSetNamespacePropertiesParameterSet is 45.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter VirtualNetworkRulePropertiesParameterSet is 40.
Long Identifier,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,,The length of the parameter LongRunningOperationDefaultTimeout is 34.
Long Identifier,Microsoft.Azure.Commands.EventHub.Models,PSAuthorizationRuleAttributes,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Models\PSAuthorizationRuleAttributes.cs,,The length of the parameter DefaultNamespaceAuthorizationRule is 33.
Long Identifier,Microsoft.Azure.Commands.EventHub.Models,PSAuthorizationRuleKeysAttributes,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Models\PSAuthorizationRuleKeysAttributes.cs,,The length of the parameter DefaultNamespaceAuthorizationRule is 33.
Long Identifier,Microsoft.Azure.Commands.EventHub.Models,PSListKeysAttributes,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Models\PSListKeysAttributes.cs,,The length of the parameter DefaultNamespaceAuthorizationRule is 33.
Long Identifier,Microsoft.Azure.Commands.EventHub.Models,PSSharedAccessAuthorizationRuleAttributes,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Models\PSSharedAccessAuthorizationRuleAttributes.cs,,The length of the parameter DefaultNamespaceAuthorizationRule is 33.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,GetAzureEventHubAuthorizationRule,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\GetAzureEventhubAuthorizationRules.cs,ExecuteCmdlet,The length of the statement  "                        PSSharedAccessAuthorizationRuleAttributes authRule = Client.GetNamespaceAuthorizationRule(ResourceGroupName' Namespace' Name); " is 126.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,GetAzureEventHubAuthorizationRule,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\GetAzureEventhubAuthorizationRules.cs,ExecuteCmdlet,The length of the statement  "                        IEnumerable<PSSharedAccessAuthorizationRuleAttributes> authRuleList = Client.ListNamespaceAuthorizationRules(ResourceGroupName' Namespace); " is 139.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,GetAzureEventHubAuthorizationRule,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\GetAzureEventhubAuthorizationRules.cs,ExecuteCmdlet,The length of the statement  "                        PSSharedAccessAuthorizationRuleAttributes authRule = Client.GetEventHubAuthorizationRules(ResourceGroupName' Namespace' Eventhub' Name); " is 136.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,GetAzureEventHubAuthorizationRule,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\GetAzureEventhubAuthorizationRules.cs,ExecuteCmdlet,The length of the statement  "                        IEnumerable<PSSharedAccessAuthorizationRuleAttributes> authRuleList = Client.ListEventHubAuthorizationRules(ResourceGroupName' Namespace' Eventhub); " is 148.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,GetAzureEventHubAuthorizationRule,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\GetAzureEventhubAuthorizationRules.cs,ExecuteCmdlet,The length of the statement  "                        PSSharedAccessAuthorizationRuleAttributes authRule = Client.GetAliasAuthorizationRules(ResourceGroupName' Namespace' AliasName' Name); " is 134.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,GetAzureEventHubAuthorizationRule,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\GetAzureEventhubAuthorizationRules.cs,ExecuteCmdlet,The length of the statement  "                        IEnumerable<PSSharedAccessAuthorizationRuleAttributes> authRuleList = Client.ListAliasAuthorizationRules(ResourceGroupName' Namespace' AliasName); " is 146.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,NewAzureEventhubAuthorizationRules,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\NewAzureEventhubAuthorizationRules.cs,ExecuteCmdlet,The length of the statement  "            if (Array.Exists(Rights' element => element.Equals(Manage) && (!Array.Exists(Rights' element1 => element1.Equals(Listen)) || !Array.Exists(Rights' element1 => element1.Equals(Send))))) " is 184.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,NewAzureEventhubAuthorizationRules,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\NewAzureEventhubAuthorizationRules.cs,ExecuteCmdlet,The length of the statement  "                Exception exManage = new Exception("Assigning '" + Manage + "' to rights requires '" + Listen + "' and '" + Send + "' to be included with. e.g. @(\"" + Manage + "\"'\"" + Listen + "\"'\"" + Send + "\")"); " is 204.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,NewAzureEventhubAuthorizationRules,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\NewAzureEventhubAuthorizationRules.cs,ExecuteCmdlet,The length of the statement  "                    if (ShouldProcess(target: sasRule.Name' action: string.Format(Resources.CreateNamespaceAuthorizationrule' Name' Namespace))) " is 124.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,NewAzureEventhubAuthorizationRules,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\NewAzureEventhubAuthorizationRules.cs,ExecuteCmdlet,The length of the statement  "                    if (ShouldProcess(target: sasRule.Name' action: string.Format(Resources.CreateEventHubAuthorizationrule' Name' EventHub))) " is 122.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,NewAzureAuthorizationRuleSASToken,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\NewAzureEventhubAuthorizationRuleSASToken.cs,ExecuteCmdlet,The length of the statement  "                    listkeys =  Client.GetEventHubListKeys(identifier.ResourceGroupName' identifier.ParentResource' identifier.ParentResource1' identifier.ResourceName); " is 149.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,NewAzureAuthorizationRuleSASToken,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\NewAzureEventhubAuthorizationRuleSASToken.cs,ExecuteCmdlet,The length of the statement  "                    listkeys = Client.GetNamespaceListKeys(identifier.ResourceGroupName' identifier.ParentResource' identifier.ResourceName); " is 121.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,NewAzureAuthorizationRuleSASToken,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\NewAzureEventhubAuthorizationRuleSASToken.cs,ExecuteCmdlet,The length of the statement  "                string[] connectionstring = KeyType == "Primary" ? listkeys.PrimaryConnectionString.Split(';') : listkeys.SecondaryConnectionString.Split(';'); " is 143.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,NewAzureAuthorizationRuleSASToken,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\NewAzureEventhubAuthorizationRuleSASToken.cs,ExecuteCmdlet,The length of the statement  "                string stringToSign = StartTime.HasValue ? StartTime.ToString() + "\n" + System.Web.HttpUtility.UrlEncode(resourceUri) + "\n" + seconds : System.Web.HttpUtility.UrlEncode(resourceUri) + "\n" + seconds; " is 201.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,NewAzureAuthorizationRuleSASToken,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\NewAzureEventhubAuthorizationRuleSASToken.cs,ExecuteCmdlet,The length of the statement  "                string sasToken = String.Format(CultureInfo.InvariantCulture' "SharedAccessSignature sr={0}&sig={1}&se={2}&skn={3}"' HttpUtility.UrlEncode(resourceUri)' HttpUtility.UrlEncode(signature)' seconds' KeyType); " is 205.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,SetAzureEventhubAuthorizationRules,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\SetAzureEventhubAuthorizationRules.cs,ExecuteCmdlet,The length of the statement  "                    if (Array.Exists(Rights' element => element == "Manage") && !Array.Exists(Rights' element => element == "Listen") || !Array.Exists(Rights' element => element == "Send")) " is 169.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,SetAzureEventhubAuthorizationRules,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\SetAzureEventhubAuthorizationRules.cs,ExecuteCmdlet,The length of the statement  "                        Exception exManage = new Exception("Assigning 'Manage' to rights requires ‘Listen and ‘Send' to be included with. e.g. @(\"Manage\"'\"Listen\"'\"Send\")"); " is 155.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,SetAzureEventhubAuthorizationRules,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\SetAzureEventhubAuthorizationRules.cs,ExecuteCmdlet,The length of the statement  "                        if (ShouldProcess(target: sasRule.Name' action: string.Format(Resources.UpdateEventHubAuthorizationrule' Name' EventHub))) " is 122.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,SetAzureEventhubAuthorizationRules,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\SetAzureEventhubAuthorizationRules.cs,ExecuteCmdlet,The length of the statement  "                        if (ShouldProcess(target: sasRule.Name' action: string.Format(Resources.UpdateNamespaceAuthorizationrule' Name' Namespace))) " is 124.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,SetAzureEventhubAuthorizationRules,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\SetAzureEventhubAuthorizationRules.cs,ExecuteCmdlet,The length of the statement  "                    if (ShouldProcess(target: sasRule.Name' action: string.Format(Resources.UpdateNamespaceAuthorizationrule' Name' Namespace))) " is 124.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands,SetAzureEventhubAuthorizationRules,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\SetAzureEventhubAuthorizationRules.cs,ExecuteCmdlet,The length of the statement  "                    if (ShouldProcess(target: sasRule.Name' action: string.Format(Resources.UpdateEventHubAuthorizationrule' Name' EventHub))) " is 122.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.Namespace,TestAzureEventhubCheckNameAvailability,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\CheckNameAvailability\TestAzureEventhubCheckNameAvailability.cs,ExecuteCmdlet,The length of the statement  "                    PSCheckNameAvailabilityResultAttributes checkNameAvailabilityResult = Client.GetAliasCheckNameAvailability(ResourceGroupName' Namespace' AliasName); " is 148.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.Namespace,NewAzureEventHubNamespace,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\Namespace\NewAzureEventHubNamespace.cs,ExecuteCmdlet,The length of the statement  "                    WriteObject(Client.BeginCreateNamespace(ResourceGroupName' Name' Location' SkuName' SkuCapacity' tagDictionary' EnableAutoInflate.IsPresent' MaximumThroughputUnits' EnableKafka.IsPresent)); " is 189.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.Namespace,SetAzureEventHubNamespace,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\Namespace\SetAzureEventHubNamespace.cs,ExecuteCmdlet,The length of the statement  "                    WriteObject(Client.BeginCreateNamespace(ResourceGroupName' Name' Location' SkuName' SkuCapacity' tagDictionary' EnableAutoInflate.IsPresent' MaximumThroughputUnits' EnableKafka.IsPresent));                     " is 189.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.ConsumerGroup,GetAzureRmEventHubConsumerGroup,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\ConsumerGroup\GetAzureEventHubConsumerGroups.cs,ExecuteCmdlet,The length of the statement  "                    PSConsumerGroupAttributes consumergroupAttributesList = Client.GetConsumerGroup(ResourceGroupName' Namespace' EventHub' Name); " is 126.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.ConsumerGroup,GetAzureRmEventHubConsumerGroup,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\ConsumerGroup\GetAzureEventHubConsumerGroups.cs,ExecuteCmdlet,The length of the statement  "                        IEnumerable<PSConsumerGroupAttributes> consumergroupAttributesList = Client.ListAllConsumerGroup(ResourceGroupName' Namespace' EventHub' MaxCount); " is 147.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.ConsumerGroup,GetAzureRmEventHubConsumerGroup,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\ConsumerGroup\GetAzureEventHubConsumerGroups.cs,ExecuteCmdlet,The length of the statement  "                        IEnumerable<PSConsumerGroupAttributes> consumergroupAttributesList = Client.ListAllConsumerGroup(ResourceGroupName' Namespace' EventHub); " is 137.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.ConsumerGroup,SetAzureEventHubConsumerGroup,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\ConsumerGroup\SetAzureEventHubConsumerGroups.cs,ExecuteCmdlet,The length of the statement  "            if(ShouldProcess(target: consumerGroup.Name' action: string.Format(Resources.UpdateConsumerGroup'consumerGroup.Name'EventHub))) " is 127.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.ConsumerGroup,SetAzureEventHubConsumerGroup,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\ConsumerGroup\SetAzureEventHubConsumerGroups.cs,ExecuteCmdlet,The length of the statement  "                    WriteObject(Client.CreateOrUpdateConsumerGroup(ResourceGroupName' Namespace' EventHub' consumerGroup.Name' consumerGroup)); " is 123.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.GeoDR,GetEventHubGeoDRConfiguration,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\DRConfig\GetAzureEventHubGeoDRConfiguration.cs,ExecuteCmdlet,The length of the statement  "                            PSEventHubDRConfigurationAttributes drConfiguration = Client.GetEventHubDRConfiguration(getParamGeoDR.ResourceGroupName' getParamGeoDR.ResourceName' Name); " is 155.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.GeoDR,GetEventHubGeoDRConfiguration,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\DRConfig\GetAzureEventHubGeoDRConfiguration.cs,ExecuteCmdlet,The length of the statement  "                            IEnumerable<PSEventHubDRConfigurationAttributes> drConfigurationList = Client.ListAllEventHubDRConfiguration(getParamGeoDR.ResourceGroupName' getParamGeoDR.ResourceName); " is 170.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.GeoDR,GetEventHubGeoDRConfiguration,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\DRConfig\GetAzureEventHubGeoDRConfiguration.cs,ExecuteCmdlet,The length of the statement  "                            PSEventHubDRConfigurationAttributes drConfiguration = Client.GetEventHubDRConfiguration(getParamGeoDR.ResourceGroupName' getParamGeoDR.ResourceName' Name); " is 155.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.GeoDR,GetEventHubGeoDRConfiguration,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\DRConfig\GetAzureEventHubGeoDRConfiguration.cs,ExecuteCmdlet,The length of the statement  "                            IEnumerable<PSEventHubDRConfigurationAttributes> drConfigurationList = Client.ListAllEventHubDRConfiguration(getParamGeoDR.ResourceGroupName' getParamGeoDR.ResourceName); " is 170.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.GeoDR,GetEventHubGeoDRConfiguration,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\DRConfig\GetAzureEventHubGeoDRConfiguration.cs,ExecuteCmdlet,The length of the statement  "                        PSEventHubDRConfigurationAttributes drConfiguration = Client.GetEventHubDRConfiguration(ResourceGroupName' Namespace' Name); " is 124.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.GeoDR,GetEventHubGeoDRConfiguration,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\DRConfig\GetAzureEventHubGeoDRConfiguration.cs,ExecuteCmdlet,The length of the statement  "                        IEnumerable<PSEventHubDRConfigurationAttributes> drConfigurationList = Client.ListAllEventHubDRConfiguration(ResourceGroupName' Namespace); " is 139.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.GeoDR,NewAzureRmEventHubGeoDRConfiguration,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\DRConfig\NewAzureEventHubGeoDRConfiguration.cs,ExecuteCmdlet,The length of the statement  "            PSEventHubDRConfigurationAttributes drConfiguration = new PSEventHubDRConfigurationAttributes() { PartnerNamespace = this.PartnerNamespace }; " is 141.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.GeoDR,NewAzureRmEventHubGeoDRConfiguration,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\DRConfig\NewAzureEventHubGeoDRConfiguration.cs,ExecuteCmdlet,The length of the statement  "                            WriteObject(Client.CreateEventHubDRConfiguration(getParamGeoDR.ResourceGroupName' getParamGeoDR.ResourceName' Name' drConfiguration)); " is 134.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.GeoDR,NewAzureRmEventHubGeoDRConfiguration,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\DRConfig\NewAzureEventHubGeoDRConfiguration.cs,ExecuteCmdlet,The length of the statement  "                            WriteObject(Client.CreateEventHubDRConfiguration(getParamGeoDR.ResourceGroupName' getParamGeoDR.ResourceName' Name' drConfiguration)); " is 134.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.EventHub,AddAzureEventHubIPRule,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\NetworkRuleSet\AddAzureEventHubIPRule.cs,ExecuteCmdlet,The length of the statement  "                if (ShouldProcess(target: Name' action: string.Format("Adding IP rule for NetworkRuleSet of {0} in Resourcegroup {1}"' Name' ResourceGroupName))) " is 145.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.NetworkruleSet,NewAzureEventHubVNetRule,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\NetworkRuleSet\AddAzureEventHubVirtualNetworkrule.cs,ExecuteCmdlet,The length of the statement  "            if (!networkRuleSet.VirtualNetworkRules.Contains(new PSNWRuleSetVirtualNetworkRulesAttributes { Subnet = new PSSubnetAttributes { Id = SubnetId }' IgnoreMissingVnetServiceEndpoint = IgnoreMissingVnetServiceEndpoint })) " is 218.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.NetworkruleSet,NewAzureEventHubVNetRule,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\NetworkRuleSet\AddAzureEventHubVirtualNetworkrule.cs,ExecuteCmdlet,The length of the statement  "                if (ShouldProcess(target: Name' action: string.Format("Adding VirtualNetworkRule for NetworkRuleSet of {0} in Resourcegroup {1}"' Name' ResourceGroupName))) " is 156.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.NetworkruleSet,NewAzureEventHubVNetRule,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\NetworkRuleSet\AddAzureEventHubVirtualNetworkrule.cs,ExecuteCmdlet,The length of the statement  "                            networkRuleSet.VirtualNetworkRules.Add(new PSNWRuleSetVirtualNetworkRulesAttributes { Subnet = new PSSubnetAttributes { Id = SubnetId }' IgnoreMissingVnetServiceEndpoint = IgnoreMissingVnetServiceEndpoint.IsPresent }); " is 218.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.NetworkruleSet,RemoveAzureEventHubIPRule,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\NetworkRuleSet\RemoveAzureEventHubIPRule.cs,ExecuteCmdlet,The length of the statement  "                if (ShouldProcess(target: Name' action: string.Format("Removing IP rule for NetworkRuleSet of {0} in Resourcegroup {1}"' Name' ResourceGroupName))) " is 147.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.NetworkruleSet,RemoveAzureEventHubNetworkRuleSet,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\NetworkRuleSet\RemoveAzureEventHubNetworkRuleSet.cs,ExecuteCmdlet,The length of the statement  "            if (ShouldProcess(target:Name' action:string.Format("Delete NetwrokruleSet for Namespace {0} of ResourceGroup {1}"' Name'ResourceGroupName))) " is 141.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.NetworkruleSet,RemoveAzureEventHubVNetRule,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\NetworkRuleSet\RemoveAzureEventHubVirtualNetworkrule.cs,ExecuteCmdlet,The length of the statement  "                if (ShouldProcess(target: Name' action: string.Format("Removeing VirtualNetworkRule for NetworkRuleSet of {0} in Resourcegroup {1}"' Name' ResourceGroupName))) " is 159.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.NetworkruleSet,SetAzureEventHubNetworkrule,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\NetworkRuleSet\SetAzureEventHubNetworkrule.cs,ExecuteCmdlet,The length of the statement  "            if (ShouldProcess(target: Name' action: string.Format("Update NetworkruleSet for {0} Namespace in {1} ResourceGroup"' Name' ResourceGroupName))) " is 144.
Long Statement,Microsoft.Azure.Commands.EventHub.Commands.NetworkruleSet,SetAzureEventHubNetworkrule,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\NetworkRuleSet\SetAzureEventHubNetworkrule.cs,ExecuteCmdlet,The length of the statement  "                        PSNetworkRuleSetAttributes getNWRuleSet = Client.GetNetworkRuleSet(getParamGeoDR.ResourceGroupName' getParamGeoDR.ParentResource); " is 130.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,CreateOrUpdateNamespaceAuthorizationRules,The length of the statement  "            var response = Client.Namespaces.CreateOrUpdateAuthorizationRule(resourceGroupName' namespaceName' authorizationRuleName' parameter1); " is 134.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,DeleteNamespaceAuthorizationRules,The length of the statement  "            if (string.Equals(PSSharedAccessAuthorizationRuleAttributes.DefaultNamespaceAuthorizationRule' authRuleName' StringComparison.InvariantCultureIgnoreCase)) " is 154.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,ListAllEventHubs,The length of the statement  "                        resourceList = resourceList.Concat<PSEventHubAttributes>(response1.Select(resource => new PSEventHubAttributes(resource))); " is 123.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,CreateOrUpdateEventHub,The length of the statement  "                Parameter1.CaptureDescription.Encoding = (Management.EventHub.Models.EncodingCaptureDescription?)parameter.CaptureDescription.Encoding; " is 135.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,CreateOrUpdateEventHub,The length of the statement  "                Parameter1.CaptureDescription.Destination.ArchiveNameFormat = parameter.CaptureDescription.Destination.ArchiveNameFormat; " is 121.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,CreateOrUpdateEventHub,The length of the statement  "                Parameter1.CaptureDescription.Destination.StorageAccountResourceId = parameter.CaptureDescription.Destination.StorageAccountResourceId; " is 135.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,CreateOrUpdateEventHubAuthorizationRules,The length of the statement  "            var response = Client.EventHubs.CreateOrUpdateAuthorizationRule(resourceGroupName' namespaceName' eventHubName' authorizationRuleName' parameter1); " is 147.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,DeleteEventHubAuthorizationRules,The length of the statement  "            if (string.Equals(PSAuthorizationRuleAttributes.DefaultNamespaceAuthorizationRule' authRuleName' StringComparison.InvariantCultureIgnoreCase)) " is 142.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,SetRegenerateKeys,The length of the statement  "            regenerateKeyslistKeys = Client.EventHubs.RegenerateKeys(resourceGroupName' namespaceName' eventHubName' authRuleName' regenParam); " is 131.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,GetAliasAuthorizationRules,The length of the statement  "            var response = Client.DisasterRecoveryConfigs.GetAuthorizationRule(resourceGroupName' namespaceName' aliasName' authRuleName); " is 126.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,CreateOrUpdateConsumerGroup,The length of the statement  "            var response = Client.ConsumerGroups.CreateOrUpdate(resourceGroupName' namespaceName' eventHubName' consumerGroupName' Parameter1); " is 131.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,ListAllConsumerGroup,The length of the statement  "                    var response = Client.ConsumerGroups.ListByEventHub(resourceGroupName' namespaceName' eventHubName' skip: 0' top: maxCount); " is 124.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,ListAllConsumerGroup,The length of the statement  "                        var response1 = Client.ConsumerGroups.ListByEventHub(resourceGroupName' namespaceName' eventHubName' skip: skip' top: maxCount); " is 128.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,ListAllConsumerGroup,The length of the statement  "                        resourceList = resourceList.Concat<PSConsumerGroupAttributes>(response1.Select(resource => new PSConsumerGroupAttributes(resource))); " is 133.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,GetAliasCheckNameAvailability,The length of the statement  "            var response = Client.DisasterRecoveryConfigs.CheckNameAvailability(resourceGroup'namespaceName' new CheckNameAvailabilityParameter(aliasName)); " is 144.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,DeleteNetworkRuleSet,The length of the statement  "            var response = Client.Namespaces.CreateOrUpdateNetworkRuleSet(resourceGroupName' namespaceName' new NetworkRuleSet() { DefaultAction = "Allow" }); " is 146.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,CreateOrUpdateNetworkRuleSet,The length of the statement  "            foreach (PSNWRuleSetVirtualNetworkRulesAttributes psvisrtualnetworkrules in psNetworkRuleSetAttributes.VirtualNetworkRules) " is 123.
Long Statement,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,CreateOrUpdateNetworkRuleSet,The length of the statement  "                networkRuleSet.VirtualNetworkRules.Add(new NWRuleSetVirtualNetworkRules { Subnet = new Subnet { Id = psvisrtualnetworkrules.Subnet.Id }' IgnoreMissingVnetServiceEndpoint = psvisrtualnetworkrules.IgnoreMissingVnetServiceEndpoint }); " is 231.
Magic Number,Microsoft.Azure.Commands.EventHub.Commands,NewAzureAuthorizationRuleSASToken,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\NewAzureEventhubAuthorizationRuleSASToken.cs,ExecuteCmdlet,The following statement contains a magic number: DateTime EpochTime = new DateTime(1970' 1' 1' 0' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Microsoft.Azure.Commands.EventHub.Commands,NewAzureAuthorizationRuleSASToken,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\NewAzureEventhubAuthorizationRuleSASToken.cs,ExecuteCmdlet,The following statement contains a magic number: switch (connectionstring.Length)                  {                      case 4:                          {                              resourceUri = connectionstring[0].Replace("Endpoint=sb://"' "") + connectionstring[3].Replace("EntityPath="' "");                              strPolicyName = connectionstring[1].Replace("SharedAccessKeyName="' "");                              sakey = connectionstring[2].Replace("SharedAccessKey="' "");                              break;                          }                      case 3:                          {                              resourceUri = connectionstring[0].Replace("Endpoint=sb://"' "");                              strPolicyName = connectionstring[1].Replace("SharedAccessKeyName="' "");                              sakey = connectionstring[2].Replace("SharedAccessKey="' "");                              break;                          }                      default:                          {                              break;                          }                  }
Magic Number,Microsoft.Azure.Commands.EventHub.Commands,NewAzureAuthorizationRuleSASToken,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\NewAzureEventhubAuthorizationRuleSASToken.cs,ExecuteCmdlet,The following statement contains a magic number: switch (connectionstring.Length)                  {                      case 4:                          {                              resourceUri = connectionstring[0].Replace("Endpoint=sb://"' "") + connectionstring[3].Replace("EntityPath="' "");                              strPolicyName = connectionstring[1].Replace("SharedAccessKeyName="' "");                              sakey = connectionstring[2].Replace("SharedAccessKey="' "");                              break;                          }                      case 3:                          {                              resourceUri = connectionstring[0].Replace("Endpoint=sb://"' "");                              strPolicyName = connectionstring[1].Replace("SharedAccessKeyName="' "");                              sakey = connectionstring[2].Replace("SharedAccessKey="' "");                              break;                          }                      default:                          {                              break;                          }                  }
Magic Number,Microsoft.Azure.Commands.EventHub.Commands,NewAzureAuthorizationRuleSASToken,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\NewAzureEventhubAuthorizationRuleSASToken.cs,ExecuteCmdlet,The following statement contains a magic number: switch (connectionstring.Length)                  {                      case 4:                          {                              resourceUri = connectionstring[0].Replace("Endpoint=sb://"' "") + connectionstring[3].Replace("EntityPath="' "");                              strPolicyName = connectionstring[1].Replace("SharedAccessKeyName="' "");                              sakey = connectionstring[2].Replace("SharedAccessKey="' "");                              break;                          }                      case 3:                          {                              resourceUri = connectionstring[0].Replace("Endpoint=sb://"' "");                              strPolicyName = connectionstring[1].Replace("SharedAccessKeyName="' "");                              sakey = connectionstring[2].Replace("SharedAccessKey="' "");                              break;                          }                      default:                          {                              break;                          }                  }
Magic Number,Microsoft.Azure.Commands.EventHub.Commands,NewAzureAuthorizationRuleSASToken,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\NewAzureEventhubAuthorizationRuleSASToken.cs,ExecuteCmdlet,The following statement contains a magic number: switch (connectionstring.Length)                  {                      case 4:                          {                              resourceUri = connectionstring[0].Replace("Endpoint=sb://"' "") + connectionstring[3].Replace("EntityPath="' "");                              strPolicyName = connectionstring[1].Replace("SharedAccessKeyName="' "");                              sakey = connectionstring[2].Replace("SharedAccessKey="' "");                              break;                          }                      case 3:                          {                              resourceUri = connectionstring[0].Replace("Endpoint=sb://"' "");                              strPolicyName = connectionstring[1].Replace("SharedAccessKeyName="' "");                              sakey = connectionstring[2].Replace("SharedAccessKey="' "");                              break;                          }                      default:                          {                              break;                          }                  }
Magic Number,Microsoft.Azure.Commands.EventHub.Commands,NewAzureAuthorizationRuleSASToken,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AuthorizationRule\NewAzureEventhubAuthorizationRuleSASToken.cs,ExecuteCmdlet,The following statement contains a magic number: switch (connectionstring.Length)                  {                      case 4:                          {                              resourceUri = connectionstring[0].Replace("Endpoint=sb://"' "") + connectionstring[3].Replace("EntityPath="' "");                              strPolicyName = connectionstring[1].Replace("SharedAccessKeyName="' "");                              sakey = connectionstring[2].Replace("SharedAccessKey="' "");                              break;                          }                      case 3:                          {                              resourceUri = connectionstring[0].Replace("Endpoint=sb://"' "");                              strPolicyName = connectionstring[1].Replace("SharedAccessKeyName="' "");                              sakey = connectionstring[2].Replace("SharedAccessKey="' "");                              break;                          }                      default:                          {                              break;                          }                  }
Magic Number,Microsoft.Azure.Commands.EventHub.Commands,AzureEventHubsCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,GetResourceDetailsFromId,The following statement contains a magic number: returnResourceIdentifier.ParentResource = Regex.Split(strResourceId' @"/")[8];
Magic Number,Microsoft.Azure.Commands.EventHub.Commands,LocalResourceIdentifier,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,LocalResourceIdentifier,The following statement contains a magic number: switch (tokens.Length)              {                  case 2:                      ParentResource = tokens[1];                      break;                  case 4:                      ParentResource = tokens[1];                      ParentResource1 = tokens[3];                      break;                  case 6:                      ParentResource = tokens[1];                      ParentResource1 = tokens[3];                      ParentResource2 = tokens[5];                      break;              }
Magic Number,Microsoft.Azure.Commands.EventHub.Commands,LocalResourceIdentifier,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,LocalResourceIdentifier,The following statement contains a magic number: switch (tokens.Length)              {                  case 2:                      ParentResource = tokens[1];                      break;                  case 4:                      ParentResource = tokens[1];                      ParentResource1 = tokens[3];                      break;                  case 6:                      ParentResource = tokens[1];                      ParentResource1 = tokens[3];                      ParentResource2 = tokens[5];                      break;              }
Magic Number,Microsoft.Azure.Commands.EventHub.Commands,LocalResourceIdentifier,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,LocalResourceIdentifier,The following statement contains a magic number: switch (tokens.Length)              {                  case 2:                      ParentResource = tokens[1];                      break;                  case 4:                      ParentResource = tokens[1];                      ParentResource1 = tokens[3];                      break;                  case 6:                      ParentResource = tokens[1];                      ParentResource1 = tokens[3];                      ParentResource2 = tokens[5];                      break;              }
Magic Number,Microsoft.Azure.Commands.EventHub.Commands,LocalResourceIdentifier,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,LocalResourceIdentifier,The following statement contains a magic number: switch (tokens.Length)              {                  case 2:                      ParentResource = tokens[1];                      break;                  case 4:                      ParentResource = tokens[1];                      ParentResource1 = tokens[3];                      break;                  case 6:                      ParentResource = tokens[1];                      ParentResource1 = tokens[3];                      ParentResource2 = tokens[5];                      break;              }
Magic Number,Microsoft.Azure.Commands.EventHub.Commands,LocalResourceIdentifier,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,LocalResourceIdentifier,The following statement contains a magic number: switch (tokens.Length)              {                  case 2:                      ParentResource = tokens[1];                      break;                  case 4:                      ParentResource = tokens[1];                      ParentResource1 = tokens[3];                      break;                  case 6:                      ParentResource = tokens[1];                      ParentResource1 = tokens[3];                      ParentResource2 = tokens[5];                      break;              }
Magic Number,Microsoft.Azure.Commands.EventHub.Commands,LocalResourceIdentifier,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,LocalResourceIdentifier,The following statement contains a magic number: switch (tokens.Length)              {                  case 2:                      ParentResource = tokens[1];                      break;                  case 4:                      ParentResource = tokens[1];                      ParentResource1 = tokens[3];                      break;                  case 6:                      ParentResource = tokens[1];                      ParentResource1 = tokens[3];                      ParentResource2 = tokens[5];                      break;              }
Magic Number,Microsoft.Azure.Commands.EventHub.Models,PSNamespaceAttributes,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Models\PSNamespaceAttributes.cs,PSNamespaceAttributes,The following statement contains a magic number: ResourceGroup = Regex.Split(evResource.Id' @"/")[4];
Magic Number,Microsoft.Azure.Commands.EventHub.Models,PSNamespaceAttributes,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Models\PSNamespaceAttributes.cs,PSNamespaceAttributes,The following statement contains a magic number: ResourceGroupName = Regex.Split(evResource.Id' @"/")[4];
Magic Number,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,ListAllEventHubs,The following statement contains a magic number: switch (ReturnmaxCountvalueForSwtich(maxCount))              {                    case 0:                      var response = Client.EventHubs.ListByNamespace(resourceGroupName' namespaceName' skip: 0' top: maxCount);                      resourceList = response.Select(resource => new PSEventHubAttributes(resource));                      break;                  case 1:                      while (maxCount > 0)                      {                          var response1 = Client.EventHubs.ListByNamespace(resourceGroupName' namespaceName' skip: skip' top: maxCount);                          resourceList = resourceList.Concat<PSEventHubAttributes>(response1.Select(resource => new PSEventHubAttributes(resource)));                          skip += maxCount > 100 ? 100 : maxCount;                          maxCount = maxCount - 100;                      }                      break;                  default:                      var response2 = Client.EventHubs.ListByNamespace(resourceGroupName' namespaceName);                      resourceList = response2.Select(resource => new PSEventHubAttributes(resource));                      break;                }
Magic Number,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,ListAllEventHubs,The following statement contains a magic number: switch (ReturnmaxCountvalueForSwtich(maxCount))              {                    case 0:                      var response = Client.EventHubs.ListByNamespace(resourceGroupName' namespaceName' skip: 0' top: maxCount);                      resourceList = response.Select(resource => new PSEventHubAttributes(resource));                      break;                  case 1:                      while (maxCount > 0)                      {                          var response1 = Client.EventHubs.ListByNamespace(resourceGroupName' namespaceName' skip: skip' top: maxCount);                          resourceList = resourceList.Concat<PSEventHubAttributes>(response1.Select(resource => new PSEventHubAttributes(resource)));                          skip += maxCount > 100 ? 100 : maxCount;                          maxCount = maxCount - 100;                      }                      break;                  default:                      var response2 = Client.EventHubs.ListByNamespace(resourceGroupName' namespaceName);                      resourceList = response2.Select(resource => new PSEventHubAttributes(resource));                      break;                }
Magic Number,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,ListAllEventHubs,The following statement contains a magic number: switch (ReturnmaxCountvalueForSwtich(maxCount))              {                    case 0:                      var response = Client.EventHubs.ListByNamespace(resourceGroupName' namespaceName' skip: 0' top: maxCount);                      resourceList = response.Select(resource => new PSEventHubAttributes(resource));                      break;                  case 1:                      while (maxCount > 0)                      {                          var response1 = Client.EventHubs.ListByNamespace(resourceGroupName' namespaceName' skip: skip' top: maxCount);                          resourceList = resourceList.Concat<PSEventHubAttributes>(response1.Select(resource => new PSEventHubAttributes(resource)));                          skip += maxCount > 100 ? 100 : maxCount;                          maxCount = maxCount - 100;                      }                      break;                  default:                      var response2 = Client.EventHubs.ListByNamespace(resourceGroupName' namespaceName);                      resourceList = response2.Select(resource => new PSEventHubAttributes(resource));                      break;                }
Magic Number,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,ListAllConsumerGroup,The following statement contains a magic number: switch (ReturnmaxCountvalueForSwtich(maxCount))              {                    case 0:                      var response = Client.ConsumerGroups.ListByEventHub(resourceGroupName' namespaceName' eventHubName' skip: 0' top: maxCount);                      resourceList = response.Select(resource => new PSConsumerGroupAttributes(resource));                      break;                  case 1:                      while (maxCount > 0)                      {                          var response1 = Client.ConsumerGroups.ListByEventHub(resourceGroupName' namespaceName' eventHubName' skip: skip' top: maxCount);                          resourceList = resourceList.Concat<PSConsumerGroupAttributes>(response1.Select(resource => new PSConsumerGroupAttributes(resource)));                          skip += maxCount > 100 ? 100 : maxCount;                          maxCount = maxCount - 100;                      }                      break;                  default:                      var response2 = Client.ConsumerGroups.ListByEventHub(resourceGroupName' namespaceName' eventHubName);                      resourceList = response2.Select(resource => new PSConsumerGroupAttributes(resource));                      break;                }
Magic Number,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,ListAllConsumerGroup,The following statement contains a magic number: switch (ReturnmaxCountvalueForSwtich(maxCount))              {                    case 0:                      var response = Client.ConsumerGroups.ListByEventHub(resourceGroupName' namespaceName' eventHubName' skip: 0' top: maxCount);                      resourceList = response.Select(resource => new PSConsumerGroupAttributes(resource));                      break;                  case 1:                      while (maxCount > 0)                      {                          var response1 = Client.ConsumerGroups.ListByEventHub(resourceGroupName' namespaceName' eventHubName' skip: skip' top: maxCount);                          resourceList = resourceList.Concat<PSConsumerGroupAttributes>(response1.Select(resource => new PSConsumerGroupAttributes(resource)));                          skip += maxCount > 100 ? 100 : maxCount;                          maxCount = maxCount - 100;                      }                      break;                  default:                      var response2 = Client.ConsumerGroups.ListByEventHub(resourceGroupName' namespaceName' eventHubName);                      resourceList = response2.Select(resource => new PSConsumerGroupAttributes(resource));                      break;                }
Magic Number,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,ListAllConsumerGroup,The following statement contains a magic number: switch (ReturnmaxCountvalueForSwtich(maxCount))              {                    case 0:                      var response = Client.ConsumerGroups.ListByEventHub(resourceGroupName' namespaceName' eventHubName' skip: 0' top: maxCount);                      resourceList = response.Select(resource => new PSConsumerGroupAttributes(resource));                      break;                  case 1:                      while (maxCount > 0)                      {                          var response1 = Client.ConsumerGroups.ListByEventHub(resourceGroupName' namespaceName' eventHubName' skip: skip' top: maxCount);                          resourceList = resourceList.Concat<PSConsumerGroupAttributes>(response1.Select(resource => new PSConsumerGroupAttributes(resource)));                          skip += maxCount > 100 ? 100 : maxCount;                          maxCount = maxCount - 100;                      }                      break;                  default:                      var response2 = Client.ConsumerGroups.ListByEventHub(resourceGroupName' namespaceName' eventHubName);                      resourceList = response2.Select(resource => new PSConsumerGroupAttributes(resource));                      break;                }
Magic Number,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,ReturnmaxCountvalueForSwtich,The following statement contains a magic number: maxcount != null && maxcount <= 100
Magic Number,Microsoft.Azure.Commands.Eventhub,EventHubsClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Utilities\EventHubsClient.cs,ReturnmaxCountvalueForSwtich,The following statement contains a magic number: maxcount != null && maxcount > 100
Missing Default,Microsoft.Azure.Commands.EventHub.Commands,LocalResourceIdentifier,D:\research\architectureSmells\repos\Azure_azure-powershell\src\EventHub\EventHub\Cmdlets\AzureEventHubsCmdletBase.cs,LocalResourceIdentifier,The following switch statement is missing a default case: switch (tokens.Length)              {                  case 2:                      ParentResource = tokens[1];                      break;                  case 4:                      ParentResource = tokens[1];                      ParentResource1 = tokens[3];                      break;                  case 6:                      ParentResource = tokens[1];                      ParentResource1 = tokens[3];                      ParentResource2 = tokens[5];                      break;              }
