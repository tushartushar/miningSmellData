Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.Azure.Commands.Common.Authentication,ManagedServiceAccessTokenBase<TManagedServiceTokenInfo>,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\ManagedServiceAccessTokenBase.cs,ManagedServiceAccessTokenBase,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,Authenticate,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,GetSubscriptionCloudCredentials,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,GetServiceClientCredentials,Cyclomatic complexity of the method is 9
Long Parameter List,Microsoft.Azure.Commands.Common.Authentication,AdalTokenProvider,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\AdalTokenProvider.cs,GetAccessToken,The method has 6 parameters. Parameters: config' promptBehavior' promptAction' userId' password' credentialType
Long Parameter List,Microsoft.Azure.Commands.Common.Authentication,DelegatingAuthenticator,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\DelegatingAuthenticator.cs,CanAuthenticate,The method has 8 parameters. Parameters: account' environment' tenant' password' promptBehavior' promptAction' tokenCache' resourceId
Long Parameter List,Microsoft.Azure.Commands.Common.Authentication,DelegatingAuthenticator,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\DelegatingAuthenticator.cs,Authenticate,The method has 8 parameters. Parameters: account' environment' tenant' password' promptBehavior' promptAction' tokenCache' resourceId
Long Parameter List,Microsoft.Azure.Commands.Common.Authentication,DelegatingAuthenticator,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\DelegatingAuthenticator.cs,TryAuthenticate,The method has 9 parameters. Parameters: account' environment' tenant' password' promptBehavior' promptAction' tokenCache' resourceId' token
Long Parameter List,Microsoft.Azure.Commands.Common.Authentication,IAuthenticator,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\IAuthenticator.cs,CanAuthenticate,The method has 8 parameters. Parameters: account' environment' tenant' password' promptBehavior' promptAction' tokenCache' resourceId
Long Parameter List,Microsoft.Azure.Commands.Common.Authentication,IAuthenticator,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\IAuthenticator.cs,Authenticate,The method has 8 parameters. Parameters: account' environment' tenant' password' promptBehavior' promptAction' tokenCache' resourceId
Long Parameter List,Microsoft.Azure.Commands.Common.Authentication,IAuthenticator,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\IAuthenticator.cs,TryAuthenticate,The method has 9 parameters. Parameters: account' environment' tenant' password' promptBehavior' promptAction' tokenCache' resourceId' token
Long Parameter List,Microsoft.Azure.Commands.Common.Authentication,ITokenProvider,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\ITokenProvider.cs,GetAccessToken,The method has 6 parameters. Parameters: config' promptBehavior' promptAction' userId' password' credentialType
Long Parameter List,Microsoft.Azure.Commands.Common.Authentication,PassThroughAuthenticator,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\PassThroughAuthenticator.cs,Authenticate,The method has 8 parameters. Parameters: account' environment' tenant' password' promptBehavior' promptAction' tokenCache' resourceId
Long Parameter List,Microsoft.Azure.Commands.Common.Authentication,PassThroughAuthenticator,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\PassThroughAuthenticator.cs,CanAuthenticate,The method has 8 parameters. Parameters: account' environment' tenant' password' promptBehavior' promptAction' tokenCache' resourceId
Long Parameter List,Microsoft.Azure.Commands.Common.Authentication,ServicePrincipalTokenProvider,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\ServicePrincipalTokenProvider.cs,GetAccessToken,The method has 6 parameters. Parameters: config' promptBehavior' promptAction' userId' password' credentialType
Long Parameter List,Microsoft.Azure.Commands.Common.Authentication,UserTokenProvider,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\UserTokenProvider.Netcore.cs,GetAccessToken,The method has 6 parameters. Parameters: config' promptBehavior' promptAction' userId' password' credentialType
Long Parameter List,Microsoft.Azure.Commands.Common.Authentication,UserTokenProvider,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\UserTokenProvider.Netcore.cs,AcquireToken,The method has 5 parameters. Parameters: config' promptAction' userId' password' renew
Long Parameter List,Microsoft.Azure.Commands.Common.Authentication,UserTokenProvider,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\UserTokenProvider.Netcore.cs,SafeAquireToken,The method has 5 parameters. Parameters: config' promptAction' userId' password' ex
Long Parameter List,Microsoft.Azure.Commands.Common.Authentication,UserTokenProvider,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\UserTokenProvider.Netcore.cs,DoAcquireToken,The method has 5 parameters. Parameters: config' userId' password' promptAction' renew
Long Parameter List,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,Authenticate,The method has 8 parameters. Parameters: account' environment' tenant' password' promptBehavior' promptAction' tokenCache' resourceId
Long Parameter List,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,Authenticate,The method has 7 parameters. Parameters: account' environment' tenant' password' promptBehavior' promptAction' resourceId
Long Identifier,Microsoft.Azure.Commands.Common.Authentication,AzureSessionInitializer,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\AzureSessionInitializer.cs,,The length of the parameter ContextAutosaveSettingFileName is 30.
Long Statement,Microsoft.Azure.Commands.Common.Authentication,DelegatingAuthenticator,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\DelegatingAuthenticator.cs,TryAuthenticate,The length of the statement  "                return Next.TryAuthenticate(account' environment' tenant' password' promptBehavior' promptAction' tokenCache' resourceId' out token); " is 133.
Long Statement,Microsoft.Azure.Commands.Common.Authentication,RenewingTokenCredential,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\RenewingTokenCredential.cs,ProcessHttpRequestAsync,The length of the statement  "            return Task.Run( () => _token.AuthorizeRequest((type' token) => request.Headers.Authorization = new AuthenticationHeaderValue(type' token))); " is 141.
Long Statement,Microsoft.Azure.Commands.Common.Authentication,ServicePrincipalTokenProvider,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\ServicePrincipalTokenProvider.cs,GetAccessToken,The length of the statement  "            return new ServicePrincipalAccessToken(config' AcquireTokenWithSecret(config' userId' password)' this.RenewWithSecret' userId); " is 127.
Long Statement,Microsoft.Azure.Commands.Common.Authentication,ServicePrincipalTokenProvider,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\ServicePrincipalTokenProvider.cs,AcquireTokenWithCertificate,The length of the statement  "            return context.AcquireTokenAsync(config.ResourceClientUri' new Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate(appId' certificate)) " is 158.
Long Statement,Microsoft.Azure.Commands.Common.Authentication,AzureSessionInitializer,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\AzureSessionInitializer.cs,CreateInstance,The length of the statement  "            var autoSave = InitializeSessionSettings(dataStore' profilePath' ContextAutosaveSettings.AutoSaveSettingsFile' migrated); " is 121.
Long Statement,Microsoft.Azure.Commands.Common.Authentication,AzureSessionInitializer,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\AzureSessionInitializer.cs,CreateInstance,The length of the statement  "            session.TokenCache = InitializeTokenCache(dataStore' session.TokenCacheDirectory' session.TokenCacheFile' autoSave.Mode); " is 121.
Long Statement,Microsoft.Azure.Commands.Common.Authentication,HttpClientOperations<T>,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\HttpClientOperationsFactory.cs,SafeSendRequestAsync,The length of the statement  "                        response.StatusCode' request.Method' request.RequestUri' response.Content.ReadAsStringAsync().GetAwaiter().GetResult())); " is 121.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,Authenticate,The length of the statement  "            if (Builder.Authenticator.TryAuthenticate(account' environment' tenant' password' promptBehavior' Task.FromResult(promptAction)' tokenCache' resourceId' out authToken)) " is 168.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,Authenticate,The length of the statement  "                     || string.Equals(AzureEnvironment.Endpoint.AzureKeyVaultServiceEndpointResourceId' resourceId' StringComparison.OrdinalIgnoreCase)) " is 131.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,Authenticate,The length of the statement  "                else if ((string.Equals(resourceId' environment.ActiveDirectoryServiceEndpointResourceId' StringComparison.OrdinalIgnoreCase) " is 125.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,Authenticate,The length of the statement  "                    || string.Equals(AzureEnvironment.Endpoint.ActiveDirectoryServiceEndpointResourceId' resourceId' StringComparison.OrdinalIgnoreCase)) " is 133.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,GetSubscriptionCloudCredentials,The length of the statement  "                    return new TokenCloudCredentials(context.Subscription.Id.ToString()' GetEndpointToken(context.Account' targetEndpoint)); " is 120.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,GetServiceClientCredentials,The length of the statement  "                        result = new RenewingTokenCredential(Authenticate(context.Account' context.Environment' tenant' null' ShowDialog.Never' null' context.Environment.GetTokenAudience(targetEndpoint))); " is 181.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,GetManagedServiceToken,The length of the statement  "                return new ManagedServiceAppServiceAccessToken(account' environment' GetFunctionsResourceId(resourceId' environment)' tenant); " is 126.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,RemoveFromTokenCache,The length of the statement  "            if (cache != null && cache.Count > 0 && account != null && !string.IsNullOrWhiteSpace(account.Id) && !string.IsNullOrWhiteSpace(account.Type)) " is 142.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Factories,CancelRetryHandler,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\CancelRetryHandler.cs,SleepIfRunningLive,The length of the statement  "            if (string.IsNullOrWhiteSpace(testModeSetting) || TestModeLiveValues.Any( v => string.Equals(v' testModeSetting' StringComparison.OrdinalIgnoreCase))) " is 150.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Factories,ClientFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\ClientFactory.cs,CreateCustomArmClient,The length of the statement  "            List<DelegatingHandler> handlerList = new List<DelegatingHandler> { DefaultCancelRetryHandler.Clone() as CancelRetryHandler}; " is 125.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Factories,ClientFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\ClientFactory.cs,CreateClient,The length of the statement  "            SubscriptionCloudCredentials creds = AzureSession.Instance.AuthenticationFactory.GetSubscriptionCloudCredentials(context' endpoint); " is 132.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Factories,ClientFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\ClientFactory.cs,CreateClient,The length of the statement  "            var account = profile.Accounts.FirstOrDefault((a) => string.Equals(a.Id' (subscription.GetAccount())' StringComparison.OrdinalIgnoreCase)); " is 139.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Factories,ClientFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\ClientFactory.cs,CreateClient,The length of the statement  "                throw new ArgumentException(string.Format("Account with name '{0}' does not exist."' subscription.GetAccount())' "accountName"); " is 128.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Factories,ClientFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\ClientFactory.cs,CreateClient,The length of the statement  "            var environment = profile.Environments.FirstOrDefault((e) => string.Equals(e.Name' subscription.GetEnvironment()' StringComparison.OrdinalIgnoreCase)); " is 151.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Factories,ClientFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\ClientFactory.cs,RemoveUserAgent,The length of the statement  "                var agents = _userAgents.Keys.Where((k) => k.Product != null && string.Equals(k.Product.Name' name' StringComparison.OrdinalIgnoreCase)); " is 137.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Models,MemoryDataStore,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Models\MemoryDataStore.cs,GetFiles,The length of the statement  "                if (key.StartsWith(startDirectory) && VirtualStore[key] != FolderKey && Regex.IsMatch(key' WildcardToRegex(filePattern)' RegexOptions.IgnoreCase)) " is 146.
Long Statement,Microsoft.Azure.Commands.Common.Authentication.Utilities,ExponentialRetryAlgorithm,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Utilities\HttpRetryAlgorithm.cs,GetRetryInterval,The length of the statement  "                _currentInterval = TimeSpan.FromTicks(_currentInterval.Ticks * _multiplier) + TimeSpan.FromMilliseconds(_random.Next(0' 1000)); " is 127.
Complex Conditional,Microsoft.Azure.Common,CloudExceptionExtensions,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Extensions\CloudExceptionExtensions.cs,GetRequestId,The conditional expression  "exception == null ||                 exception.Response == null ||                 exception.Response.Headers == null ||                 !exception.Response.Headers.Keys.Contains("x-ms-request-id")"  is complex.
Complex Conditional,Microsoft.Azure.Common,CloudExceptionExtensions,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Extensions\CloudExceptionExtensions.cs,GetRoutingRequestId,The conditional expression  "exception == null ||                 exception.Response == null ||                 exception.Response.Headers == null ||                 !exception.Response.Headers.Keys.Contains("x-ms-routing-request-id")"  is complex.
Complex Conditional,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,RemoveUser,The conditional expression  "cache != null && account != null && !string.IsNullOrEmpty(account.Id) && !string.IsNullOrWhiteSpace(account.Type)"  is complex.
Complex Conditional,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,RemoveFromTokenCache,The conditional expression  "cache != null && cache.Count > 0 && account != null && !string.IsNullOrWhiteSpace(account.Id) && !string.IsNullOrWhiteSpace(account.Type)"  is complex.
Empty Catch Block,Microsoft.Azure.Commands.Common.Authentication,IdentityTokenHelpers,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\IdentityTokenHelpers.cs,TryGetIssuer,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.Commands.Common.Authentication,ManagedServiceAccessTokenBase<TManagedServiceTokenInfo>,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\ManagedServiceAccessTokenBase.cs,GetOrRenewAuthentication,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.Commands.Common.Authentication,AzureSessionInitializer,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\AzureSessionInitializer.cs,InitializeTokenCache,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.Commands.Common.Authentication,AzureSessionInitializer,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\AzureSessionInitializer.cs,MigrateSettings,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.Commands.Common.Authentication,ServicePrincipalKeyStore,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\KeyStore\ServicePrincipalKeyStore.cs,GetKey,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.Commands.Common.Authentication,ServicePrincipalKeyStore,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\KeyStore\ServicePrincipalKeyStore.cs,DeleteKey,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,RemoveUser,The method has an empty catch block.
Magic Number,Microsoft.Azure.Commands.Common.Authentication,IdentityTokenHelpers,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\IdentityTokenHelpers.cs,TryGetIssuer,The following statement contains a magic number: switch (token.Length % 4)                      {                          case 2:                              token += "==";                              break;                          case 3:                              token += "=";                              break;                      }
Magic Number,Microsoft.Azure.Commands.Common.Authentication,IdentityTokenHelpers,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\IdentityTokenHelpers.cs,TryGetIssuer,The following statement contains a magic number: switch (token.Length % 4)                      {                          case 2:                              token += "==";                              break;                          case 3:                              token += "=";                              break;                      }
Magic Number,Microsoft.Azure.Commands.Common.Authentication,IdentityTokenHelpers,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\IdentityTokenHelpers.cs,TryGetIssuer,The following statement contains a magic number: switch (token.Length % 4)                      {                          case 2:                              token += "==";                              break;                          case 3:                              token += "=";                              break;                      }
Magic Number,Microsoft.Azure.Commands.Common.Authentication,IdentityTokenHelpers,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\IdentityTokenHelpers.cs,TryGetTenantFromIssuer,The following statement contains a magic number: paths.Length > 2
Magic Number,Microsoft.Azure.Commands.Common.Authentication.Factories,ClientFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\ClientFactory.cs,CreateHttpClient,The following statement contains a magic number: HttpClient client = new HttpClient(effectiveHandler)              {                  BaseAddress = serviceAddr'                  MaxResponseContentBufferSize = 30 * 1024 * 1024              };
Magic Number,Microsoft.Azure.Commands.Common.Authentication.Factories,ClientFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\ClientFactory.cs,CreateHttpClient,The following statement contains a magic number: HttpClient client = new HttpClient(effectiveHandler)              {                  BaseAddress = serviceAddr'                  MaxResponseContentBufferSize = 30 * 1024 * 1024              };
Magic Number,Microsoft.Azure.Commands.Common.Authentication.Factories,ClientFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\ClientFactory.cs,CreateHttpClient,The following statement contains a magic number: HttpClient client = new HttpClient(effectiveHandler)              {                  BaseAddress = serviceAddr'                  MaxResponseContentBufferSize = 30 * 1024 * 1024              };
Magic Number,Microsoft.Azure.Commands.Common.Authentication.Models,MemoryDataStore,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Models\MemoryDataStore.cs,OpenForExclusiveWrite,The following statement contains a magic number: byte[] buffer = new byte[16384];
Magic Number,Microsoft.Azure.Commands.Common.Authentication.Utilities,LinearRetryAlgorithm,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Utilities\HttpRetryAlgorithm.cs,ShouldRetry,The following statement contains a magic number: return message != null && (int)message.StatusCode == 429 && _tries < _maxTries;
Magic Number,Microsoft.Azure.Commands.Common.Authentication.Utilities,LinearRetryAlgorithm,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Utilities\HttpRetryAlgorithm.cs,WaitForRetry,The following statement contains a magic number: TimeSpan waitTimeSpan = _tries++ > 0 ? _interval + TimeSpan.FromMilliseconds(_random.Next(0' 1000)) : TimeSpan.Zero;
Magic Number,Microsoft.Azure.Commands.Common.Authentication.Utilities,ExponentialRetryAlgorithm,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Utilities\HttpRetryAlgorithm.cs,GetRetryInterval,The following statement contains a magic number: _currentInterval = TimeSpan.FromTicks(_currentInterval.Ticks * _multiplier) + TimeSpan.FromMilliseconds(_random.Next(0' 1000));
Magic Number,Microsoft.Azure.Commands.Common.Authentication.Utilities,ExponentialRetryAlgorithm,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Utilities\HttpRetryAlgorithm.cs,ShouldRetry,The following statement contains a magic number: return message != null && (int)message.StatusCode == 429 && _tries < _maxTries;
Missing Default,Microsoft.Azure.Commands.Common.Authentication,IdentityTokenHelpers,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\IdentityTokenHelpers.cs,TryGetIssuer,The following switch statement is missing a default case: switch (token.Length % 4)                      {                          case 2:                              token += "==";                              break;                          case 3:                              token += "=";                              break;                      }
Missing Default,Microsoft.Azure.Commands.Common.Authentication,ManagedServiceAccessTokenBase<TManagedServiceTokenInfo>,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Authentication\ManagedServiceAccessTokenBase.cs,BuildTokenQuery,The following switch statement is missing a default case: switch (idType)              {                  case IdentityType.Resource:                      query.Append($"&msi_res_id={Uri.EscapeDataString(account.Id)}");                      break;                  case IdentityType.ClientId:                      query.Append($"&client_id={Uri.EscapeDataString(account.Id)}");                      break;                  case IdentityType.ObjectId:                      query.Append($"&object_id={Uri.EscapeDataString(account.Id)}");                      break;              }
Missing Default,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,GetSubscriptionCloudCredentials,The following switch statement is missing a default case: switch (context.Account.Type)              {                  case AzureAccount.AccountType.Certificate:                      var certificate = AzureSession.Instance.DataStore.GetCertificate(context.Account.Id);                      return new CertificateCloudCredentials(context.Subscription.Id.ToString()' certificate);                  case AzureAccount.AccountType.AccessToken:                      return new TokenCloudCredentials(context.Subscription.Id.ToString()' GetEndpointToken(context.Account' targetEndpoint));              }
Missing Default,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,GetServiceClientCredentials,The following switch statement is missing a default case: switch (context.Account.Type)              {                  case AzureAccount.AccountType.Certificate:                      throw new NotSupportedException(AzureAccount.AccountType.Certificate.ToString());                  case AzureAccount.AccountType.AccessToken:                      return new TokenCredentials(GetEndpointToken(context.Account' targetEndpoint));              }
Missing Default,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,RemoveUser,The following switch statement is missing a default case: switch (account.Type)                  {                      case AzureAccount.AccountType.AccessToken:                          account.SetProperty(AzureAccount.Property.AccessToken' null);                          account.SetProperty(AzureAccount.Property.GraphAccessToken' null);                          account.SetProperty(AzureAccount.Property.KeyVaultAccessToken' null);                          break;                      case AzureAccount.AccountType.ManagedService:                          account.SetProperty(AzureAccount.Property.MSILoginUri' null);                          break;                      case AzureAccount.AccountType.ServicePrincipal:                          try                          {                              KeyStore.DeleteKey(account.Id' account.GetTenants().FirstOrDefault());                          }                          catch                          {                              // make best effort to remove credentials                          }                            RemoveFromTokenCache(cache' account);                          break;                      case AzureAccount.AccountType.User:                          RemoveFromTokenCache(cache' account);                          break;                  }
Missing Default,Microsoft.Azure.Commands.Common.Authentication.Factories,AuthenticationFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Accounts\Authentication\Factories\AuthenticationFactory.cs,MatchCacheItem,The following switch statement is missing a default case: switch (account.Type)                  {                      case AzureAccount.AccountType.ServicePrincipal:                          result = string.Equals(account.Id' item.ClientId' StringComparison.OrdinalIgnoreCase);                          break;                      case AzureAccount.AccountType.User:                          result = string.Equals(account.Id' item.DisplayableId' StringComparison.OrdinalIgnoreCase)                              || (account.TenantMap != null && account.TenantMap.Any(                                  (m) => string.Equals(m.Key' item.TenantId' StringComparison.OrdinalIgnoreCase)                                         && string.Equals(m.Value' item.UniqueId' StringComparison.OrdinalIgnoreCase)));                          break;                  }
