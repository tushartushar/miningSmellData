Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.Azure.Commands.Blueprint.Cmdlets,NewAzureRMBlueprintArtifact,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintArtifacts\NewAzureRMBlueprintArtifact.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Azure.Commands.Blueprint.Cmdlets,SetAzureRmBlueprintArtifact,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintArtifacts\SetAzureRMBlueprintArtifact.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Azure.Commands.Blueprint.Cmdlets,BlueprintAssignmentCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintAssignment\BlueprintAssignmentCmdletBase.cs,CreateAssignmentObject,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.Azure.Commands.Blueprint.Cmdlets,NewAzureRmBlueprintAssignment,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintAssignment\NewAzureRMBlueprintAssignment.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Azure.Commands.Blueprint.Cmdlets,SetAzureRMBlueprintAssignment,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintAssignment\SetAzureRMBlueprintAssignment.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Azure.Commands.Blueprint.Cmdlets,GetAzureRmBlueprint,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintDefinition\GetAzureRMBlueprint.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 8
Long Parameter List,Microsoft.Azure.Commands.Blueprint.Cmdlets,BlueprintAssignmentCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintAssignment\BlueprintAssignmentCmdletBase.cs,CreateAssignmentObject,The method has 8 parameters. Parameters: identityType' userAssignedIdentity' bpLocation' blueprintId' lockMode' parameters' resourceGroups' secureStringParameters
Long Identifier,Microsoft.Azure.Commands.Blueprint.Cmdlets,BlueprintDefinitionCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintDefinition\BlueprintDefinitionCmdletBase.cs,GetManagementGroupAncestorsForSubscription,The length of the parameter managementGroupAncestorsObjects is 31.
Long Identifier,Microsoft.Azure.Commands.Blueprint.Cmdlets,PublishAzureRmBlueprint,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintDefinition\PublishAzureRMBlueprint.cs,ExecuteCmdlet,The length of the parameter publishedBlueprintObjForChangeNotes is 35.
Long Identifier,Microsoft.Azure.Commands.Blueprint.Common,ParameterSetNames,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintConstants.cs,,The length of the parameter BySubscriptionNameAndLatestPublished is 36.
Long Identifier,Microsoft.Azure.Commands.Blueprint.Common,ParameterSetNames,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintConstants.cs,,The length of the parameter ByManagementGroupNameAndVersion is 31.
Long Identifier,Microsoft.Azure.Commands.Blueprint.Common,ParameterSetNames,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintConstants.cs,,The length of the parameter ByManagementGroupNameAndLatestPublished is 39.
Long Identifier,Microsoft.Azure.Commands.Blueprint.Common,ParameterSetNames,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintConstants.cs,,The length of the parameter BlueprintAssignmentsBySubscription is 34.
Long Identifier,Microsoft.Azure.Commands.Blueprint.Common,ParameterSetNames,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintConstants.cs,,The length of the parameter CreateBlueprintAssignmentByFile is 31.
Long Identifier,Microsoft.Azure.Commands.Blueprint.Common,ParameterSetNames,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintConstants.cs,,The length of the parameter DeleteBlueprintAssignmentByName is 31.
Long Identifier,Microsoft.Azure.Commands.Blueprint.Common,ParameterSetNames,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintConstants.cs,,The length of the parameter DeleteBlueprintAssignmentByObject is 33.
Long Identifier,Microsoft.Azure.Commands.Blueprint.Common,ParameterSetNames,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintConstants.cs,,The length of the parameter UpdateBlueprintAssignmentByFile is 31.
Long Identifier,Microsoft.Azure.Commands.Blueprint.Common,ParameterSetNames,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintConstants.cs,,The length of the parameter CreatePolicyAssignmentArtifact is 30.
Long Identifier,Microsoft.Azure.Commands.Blueprint.Common,ParameterSetNames,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintConstants.cs,,The length of the parameter CreateBlueprintByManagementGroup is 32.
Long Identifier,Microsoft.Azure.Commands.Blueprint.Common,ParameterSetNames,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintConstants.cs,,The length of the parameter UpdatePolicyAssignmentArtifact is 30.
Long Identifier,Microsoft.Azure.Commands.Blueprint.Common,ParameterSetNames,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintConstants.cs,,The length of the parameter UpdateBlueprintByManagementGroup is 32.
Long Identifier,Microsoft.Azure.Commands.Blueprint.Common,ParameterHelpMessages,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintConstants.cs,,The length of the parameter BlueprintDefinitionVersionToPublish is 35.
Long Identifier,Microsoft.Azure.Commands.Blueprint.Common,ParameterHelpMessages,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintConstants.cs,,The length of the parameter ArtifactPolicyDefinitionParameter is 33.
Long Identifier,Microsoft.Azure.Commands.Blueprint.Common,ParameterHelpMessages,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintConstants.cs,,The length of the parameter ArtifactRoleDefinitionPrincipalId is 33.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,NewAzureRMBlueprintArtifact,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintArtifacts\NewAzureRMBlueprintArtifact.cs,ExecuteCmdlet,The length of the statement  "                        if (ShouldProcess(Utils.GetDefinitionLocationId(scope)' string.Format(Resources.CreateArtifactShouldProcessString' Name))) " is 122.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,NewAzureRMBlueprintArtifact,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintArtifacts\NewAzureRMBlueprintArtifact.cs,ExecuteCmdlet,The length of the statement  "                        if (ShouldProcess(Utils.GetDefinitionLocationId(scope)' string.Format(Resources.CreateArtifactShouldProcessString' Name))) " is 122.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,NewAzureRMBlueprintArtifact,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintArtifacts\NewAzureRMBlueprintArtifact.cs,ExecuteCmdlet,The length of the statement  "                        if (ShouldProcess(Utils.GetDefinitionLocationId(scope)' string.Format(Resources.CreateArtifactShouldProcessString' Name))) " is 122.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,NewAzureRMBlueprintArtifact,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintArtifacts\NewAzureRMBlueprintArtifact.cs,ExecuteCmdlet,The length of the statement  "                        if (ShouldProcess(Utils.GetDefinitionLocationId(scope)' string.Format(Resources.CreateArtifactShouldProcessString' Name))) " is 122.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,SetAzureRmBlueprintArtifact,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintArtifacts\SetAzureRMBlueprintArtifact.cs,ExecuteCmdlet,The length of the statement  "                        if (ShouldProcess(Utils.GetDefinitionLocationId(scope)' string.Format(Resources.UpdateArtifactShouldProcessString' Name))) " is 122.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,SetAzureRmBlueprintArtifact,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintArtifacts\SetAzureRMBlueprintArtifact.cs,ExecuteCmdlet,The length of the statement  "                        if (ShouldProcess(Utils.GetDefinitionLocationId(scope)' string.Format(Resources.UpdateArtifactShouldProcessString' Name))) " is 122.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,SetAzureRmBlueprintArtifact,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintArtifacts\SetAzureRMBlueprintArtifact.cs,ExecuteCmdlet,The length of the statement  "                        if (ShouldProcess(Utils.GetDefinitionLocationId(scope)' string.Format(Resources.UpdateArtifactShouldProcessString' Name))) " is 122.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,SetAzureRmBlueprintArtifact,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintArtifacts\SetAzureRMBlueprintArtifact.cs,ExecuteCmdlet,The length of the statement  "                        if (ShouldProcess(Utils.GetDefinitionLocationId(scope)' string.Format(Resources.UpdateArtifactShouldProcessString' Name))) " is 122.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,BlueprintAssignmentCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintAssignment\BlueprintAssignmentCmdletBase.cs,CreateAssignmentObject,The length of the statement  "                    var secretValue = new SecretReferenceParameterValue(new SecretValueReference(new KeyVaultReference(keyVaultId)' secretName' secretVersion)); " is 140.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,BlueprintAssignmentCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintAssignment\BlueprintAssignmentCmdletBase.cs,AssignOwnerPermission,The length of the statement  "            var roleAssignmentList = AuthorizationManagementClient.RoleAssignments.ListForScopeAsync(scope' filter).GetAwaiter().GetResult(); " is 129.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,NewAzureRmBlueprintAssignment,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintAssignment\NewAzureRMBlueprintAssignment.cs,ExecuteCmdlet,The length of the statement  "                        if (ShouldProcess(string.Join("'"' subscriptionsList)' string.Format(Resources.CreateAssignmentShouldProcessString' Name))) " is 123.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,NewAzureRmBlueprintAssignment,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintAssignment\NewAzureRMBlueprintAssignment.cs,ExecuteCmdlet,The length of the statement  "                        if (ShouldProcess(string.Join("'"' subscriptionsList)' string.Format(Resources.CreateAssignmentShouldProcessString' Name))) " is 123.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,BlueprintCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintCmdletBase.cs,RegisterBlueprintRp,The length of the statement  "            // The reason we poll for the registrationState for RP registration is because we'd like to make sure the RP registering " is 120.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,BlueprintCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintCmdletBase.cs,RegisterBlueprintRp,The length of the statement  "                    // We should ideally throw a timeout exception here but we're collecting logs on service side about RP registration failures " is 124.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,BlueprintCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintCmdletBase.cs,RegisterBlueprintRp,The length of the statement  "                    .BlueprintProviderNamespace); // Instead of Get' do Register call again since GET takes its sweet time to return the status. " is 124.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,BlueprintDefinitionCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintDefinition\BlueprintDefinitionCmdletBase.cs,GetManagementGroupAncestorsAsync,The length of the statement  "            var url = string.Format(BlueprintConstants.MgAncestorsRequestUrlTemplate' DefaultContext.Environment.ResourceManagerUrl' subscriptionId); " is 137.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,BlueprintDefinitionCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintDefinition\BlueprintDefinitionCmdletBase.cs,GetManagementGroupAncestorsAsync,The length of the statement  "                    CloudException cex = new CloudException(string.Format("Subscription Id '{0}' could not be found in current tenant."' subscriptionId)); " is 134.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,GetAzureRmBlueprint,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintDefinition\GetAzureRMBlueprint.cs,ExecuteCmdlet,The length of the statement  "                    case ParameterSetNames.BySubscriptionNameAndLatestPublished: case ParameterSetNames.ByManagementGroupNameAndLatestPublished: " is 124.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,PublishAzureRmBlueprint,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintDefinition\PublishAzureRMBlueprint.cs,ExecuteCmdlet,The length of the statement  "            if (ShouldProcess(Utils.GetDefinitionLocationId(Blueprint.Scope)' string.Format(Resources.PublishBlueprintShouldProcessString' Blueprint.Name))) " is 144.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,PublishAzureRmBlueprint,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintDefinition\PublishAzureRMBlueprint.cs,ExecuteCmdlet,The length of the statement  "                    // parameters property is placeholder here' backend strips this information and publishes the latest master. It is needed in the payload since swagger calls it required. " is 169.
Long Statement,Microsoft.Azure.Commands.Blueprint.Cmdlets,PublishAzureRmBlueprint,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintDefinition\PublishAzureRMBlueprint.cs,ExecuteCmdlet,The length of the statement  "                    WriteObject(BlueprintClient.CreatePublishedBlueprint(Blueprint.Scope' Blueprint.Name' Version' publishedBlueprintObjForChangeNotes)); " is 133.
Long Statement,Microsoft.Azure.Commands.Blueprint.Common,BlueprintClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintClient.cs,GetBlueprintAssignment,The length of the statement  "            var result = blueprintManagementClient.Assignments.GetWithHttpMessagesAsync(subscriptionId' blueprintAssignmentName).GetAwaiter().GetResult(); " is 142.
Long Statement,Microsoft.Azure.Commands.Blueprint.Common,BlueprintClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintClient.cs,GetPublishedBlueprint,The length of the statement  "            var result = blueprintManagementClient.PublishedBlueprints.GetWithHttpMessagesAsync(scope' blueprintName' version).GetAwaiter().GetResult(); " is 140.
Long Statement,Microsoft.Azure.Commands.Blueprint.Common,BlueprintClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintClient.cs,ListBlueprintAssignments,The length of the statement  "            foreach (var assignment in assignments.Select(assignment => PSBlueprintAssignment.FromAssignment(assignment' subscriptionId))) " is 126.
Long Statement,Microsoft.Azure.Commands.Blueprint.Common,BlueprintClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintClient.cs,ListBlueprintAssignments,The length of the statement  "                foreach (var assignment in assignments.Select(assignment => PSBlueprintAssignment.FromAssignment(assignment' subscriptionId))) " is 126.
Long Statement,Microsoft.Azure.Commands.Blueprint.Common,BlueprintClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintClient.cs,ListPublishedBlueprintsAsync,The length of the statement  "                response = await blueprintManagementClient.PublishedBlueprints.ListNextWithHttpMessagesAsync(response.Body.NextPageLink); " is 121.
Long Statement,Microsoft.Azure.Commands.Blueprint.Common,BlueprintClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintClient.cs,DeleteBlueprintAssignment,The length of the statement  "            var result = blueprintManagementClient.Assignments.DeleteWithHttpMessagesAsync(subscriptionId' blueprintAssignmentName).GetAwaiter().GetResult(); " is 145.
Long Statement,Microsoft.Azure.Commands.Blueprint.Common,BlueprintClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintClient.cs,CreateOrUpdateBlueprintAssignment,The length of the statement  "            var result = blueprintManagementClient.Assignments.CreateOrUpdateWithHttpMessagesAsync(subscriptionId' assignmentName' assignment).GetAwaiter().GetResult(); " is 156.
Long Statement,Microsoft.Azure.Commands.Blueprint.Common,BlueprintClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintClient.cs,CreatePublishedBlueprint,The length of the statement  "            return PSPublishedBlueprint.FromPublishedBlueprintModel(blueprintManagementClient.PublishedBlueprints.Create(scope' name' version' publishedBP)' scope); " is 152.
Long Statement,Microsoft.Azure.Commands.Blueprint.Common,BlueprintClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\BlueprintClient.cs,GetBlueprintDefinitionJsonFromObject,The length of the statement  "            var publishedBlueprint = blueprintManagementClient.PublishedBlueprints.Get(blueprintObject.Scope' blueprintObject.Name' version); " is 129.
Long Statement,Microsoft.Azure.Commands.Blueprint.Models,PSBlueprintAssignment,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Models\PSBlueprintAssignment.cs,GetAssignmentParameters,The length of the statement  "                parameter = new PSSecretReferenceParameterValue { Reference = secretReference' Description = parameterValue.Description }; " is 122.
Long Statement,Microsoft.Azure.Commands.Blueprint.Models,PSPolicyAssignmentArtifact,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Models\PSPolicyAssignmentArtifact.cs,GetArtifactParameters,The length of the statement  "                parameter = new PSSecretReferenceParameterValue { Reference = secretReference' Description = parameterValue.Description }; " is 122.
Magic Number,Microsoft.Azure.Commands.Blueprint.Cmdlets,BlueprintCmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintCmdletBase.cs,RegisterBlueprintRp,The following statement contains a magic number: const int MaxPoll = 20;
Magic Number,Microsoft.Azure.Commands.Blueprint.Common,Utils,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\Utils.cs,GetDefinitionLocationId,The following statement contains a magic number: tokens != null && tokens.Length == 2
Magic Number,Microsoft.Azure.Commands.Blueprint.Common,Utils,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\Utils.cs,GetDefinitionLocationId,The following statement contains a magic number: locationId = string.Equals(tokens[2]' "managementgroups"' StringComparison.OrdinalIgnoreCase) ? tokens[3] : null;
Magic Number,Microsoft.Azure.Commands.Blueprint.Common,Utils,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\Utils.cs,GetDefinitionLocationId,The following statement contains a magic number: locationId = string.Equals(tokens[2]' "managementgroups"' StringComparison.OrdinalIgnoreCase) ? tokens[3] : null;
Magic Number,Microsoft.Azure.Commands.Blueprint.Common,Utils,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Common\Utils.cs,GetDefinitionLocationId,The following statement contains a magic number: tokens != null && tokens.Length == 4
Missing Default,Microsoft.Azure.Commands.Blueprint.Cmdlets,NewAzureRmBlueprintAssignment,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintAssignment\NewAzureRMBlueprintAssignment.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)                  {                      case ParameterSetNames.CreateBlueprintAssignment:                          if (ShouldProcess(string.Join("'"' subscriptionsList)' string.Format(Resources.CreateAssignmentShouldProcessString' Name)))                          {                              var assignment = CreateAssignmentObject(                                  this.IsParameterBound(c => c.UserAssignedIdentity)                                      ? ManagedServiceIdentityType.UserAssigned                                      : ManagedServiceIdentityType.SystemAssigned'                                  this.IsParameterBound(c => c.UserAssignedIdentity)                                      ? UserAssignedIdentity                                      : null'                                  Location'                                  Blueprint.Id'                                  Lock'                                  Parameter'                                  ResourceGroupParameter'                                  SecureStringParameter);                                foreach (var subscription in subscriptionsList)                              {                                  var scope = Utils.GetScopeForSubscription(subscription);                                  ThrowIfAssignmentExists(scope' Name);                                  // Register Blueprint RP                                  RegisterBlueprintRp(subscription);                                    if (!this.IsParameterBound(c => c.UserAssignedIdentity))                                  {                                      var spnObjectId = GetBlueprintSpn(scope' Name);                                      AssignOwnerPermission(subscription' spnObjectId);                                  }                                    WriteObject(BlueprintClient.CreateOrUpdateBlueprintAssignment(scope' Name' assignment));                              }                          }                          break;                      case ParameterSetNames.CreateBlueprintAssignmentByFile:                            if (ShouldProcess(string.Join("'"' subscriptionsList)' string.Format(Resources.CreateAssignmentShouldProcessString' Name)))                          {                              var parametersFilePath = GetValidatedFilePath(AssignmentFile);                                foreach (var subscription in subscriptionsList)                              {                                  Assignment assignmentObject;                                  try                                  {                                      assignmentObject = JsonConvert.DeserializeObject<Assignment>(                                          AzureSession.Instance.DataStore.ReadFileAsText(parametersFilePath)'                                          DefaultJsonSettings.DeserializerSettings);                                  }                                  catch (Exception ex)                                  {                                      throw new Exception(string.Format(Resources.CantDeserializeJson' parametersFilePath'                                          ex.Message));                                  }                                    var scope = Utils.GetScopeForSubscription(subscription);                                  ThrowIfAssignmentExists(scope' Name);                                  // Register Blueprint RP                                  RegisterBlueprintRp(subscription);                                    if (!IsUserAssignedIdentity(assignmentObject.Identity))                                  {                                      // If user assigned identity is defined as the identity in the assignment                                      // we consider the user assigned MSI' otherwise system assigned MSI.                                      //                                      // Assign owner permission to Blueprint SPN only if assignment is being done using                                      // System assigned identity.                                      // This is a no-op for user assigned identity.                                        var spnObjectId = GetBlueprintSpn(scope' Name);                                      AssignOwnerPermission(subscription' spnObjectId);                                  }                                    WriteObject(BlueprintClient.CreateOrUpdateBlueprintAssignment(scope' Name' assignmentObject));                              }                          }                            break;                  }
Missing Default,Microsoft.Azure.Commands.Blueprint.Cmdlets,NewAzureRmBlueprint,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintDefinition\NewAzureRMBlueprint.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)                  {                      case ParameterSetNames.CreateBlueprintBySubscription:                          var subScope = Utils.GetScopeForSubscription(SubscriptionId ?? DefaultContext.Subscription.Id);                            ThrowIfBlueprintExits(subScope' Name);                            WriteObject(BlueprintClient.CreateOrUpdateBlueprint(subScope' Name' bp));                          break;                      case ParameterSetNames.CreateBlueprintByManagementGroup:                          var mgScope = Utils.GetScopeForManagementGroup(ManagementGroupId);                            ThrowIfBlueprintExits(mgScope' Name);                            WriteObject(BlueprintClient.CreateOrUpdateBlueprint(mgScope' Name' bp));                          break;                  }
Missing Default,Microsoft.Azure.Commands.Blueprint.Cmdlets,SetAzureRMBlueprint,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Blueprint\Blueprint\Cmdlets\BlueprintDefinition\SetAzureRMBlueprint.cs,ExecuteCmdlet,The following switch statement is missing a default case: switch (ParameterSetName)                  {                      case ParameterSetNames.UpdateBlueprintBySubscription:                          var subScope = Utils.GetScopeForSubscription(SubscriptionId ?? DefaultContext.Subscription.Id);                            ThrowIfBlueprintNotExist(subScope' Name);                            WriteObject(BlueprintClient.CreateOrUpdateBlueprint(subScope' Name' bp));                          break;                      case ParameterSetNames.UpdateBlueprintByManagementGroup:                          var mgScope = Utils.GetScopeForManagementGroup(ManagementGroupId);                            ThrowIfBlueprintNotExist(mgScope' Name);                            WriteObject(BlueprintClient.CreateOrUpdateBlueprint(mgScope' Name' bp));                          break;                  }
