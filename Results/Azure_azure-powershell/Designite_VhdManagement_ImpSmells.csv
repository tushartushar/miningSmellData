Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 5 parameters. Parameters: engine' param1' param2' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 6 parameters. Parameters: engine' param1' param2' param3' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 7 parameters. Parameters: engine' param1' param2' param3' param4' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 8 parameters. Parameters: engine' param1' param2' param3' param4' param5' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 9 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 10 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' param7' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 11 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' param7' param8' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 12 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' param7' param8' param9' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 13 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' param7' param8' param9' param10' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 14 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' param7' param8' param9' param10' param11' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 5 parameters. Parameters: engine' param1' param2' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 6 parameters. Parameters: engine' param1' param2' param3' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 7 parameters. Parameters: engine' param1' param2' param3' param4' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 8 parameters. Parameters: engine' param1' param2' param3' param4' param5' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 9 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 10 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' param7' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 11 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' param7' param8' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 12 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' param7' param8' param9' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 13 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' param7' param8' param9' param10' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 14 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' param7' param8' param9' param10' param11' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<TReturn;T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 5 parameters. Parameters: engine' param1' param2' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<TReturn;T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 6 parameters. Parameters: engine' param1' param2' param3' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<TReturn;T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 7 parameters. Parameters: engine' param1' param2' param3' param4' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<TReturn;T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 8 parameters. Parameters: engine' param1' param2' param3' param4' param5' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<TReturn;T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 9 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<TReturn;T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 10 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' param7' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<TReturn;T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 11 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' param7' param8' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<TReturn;T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 12 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' param7' param8' param9' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<TReturn;T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 13 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' param7' param8' param9' param10' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<TReturn;T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The method has 14 parameters. Parameters: engine' param1' param2' param3' param4' param5' param6' param7' param8' param9' param10' param11' callback' asyncState
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFile,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFile.cs,VhdFile,The method has 5 parameters. Parameters: footer' header' bat' parent' stream
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,StreamHelper,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\StreamHelper.cs,BeginReadBytes,The method has 5 parameters. Parameters: stream' offset' length' callback' state
Long Parameter List,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,StreamHelper,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\StreamHelper.cs,BeginReadBytes,The method has 6 parameters. Parameters: stream' offset' length' origin' callback' state
Long Identifier,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,,The length of the parameter asyncMachineCompletionCallback is 30.
Long Identifier,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdFooterFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdFooterFactory.cs,,The length of the parameter WindowsAzureCreatorApplicationName is 34.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncOperation,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,AsyncCallback,The length of the statement  "            // this.CheckOperationCompletion will set AsyncOperation.IsCompleted to false if quorum is reached or timeout is expired' " is 121.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncOperation,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,AsyncCallback,The length of the statement  "            if (!this.IsCompleted && this.EndAsynchronousOperation != null && Interlocked.CompareExchange(ref this.isEndOperationCalled' True' False) == False) " is 147.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The length of the statement  "            machine.Start(engine(machine' param1' param2' param3' param4' param5' param6' param7' param8' param9' param10' param11)); " is 121.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,MoveNextInternal,The length of the statement  "                // Call to asynchronous I/O was completed synchronously (i.e. this thread is currently executing MoveNext down the stack) " is 121.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The length of the statement  "            machine.Start(engine(machine' param1' param2' param3' param4' param5' param6' param7' param8' param9' param10' param11)); " is 121.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Common.General,AsyncMachine<TReturn;T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Async\AsyncMachine.cs,BeginAsyncMachine,The length of the statement  "            machine.Start(engine(machine' param1' param2' param3' param4' param5' param6' param7' param8' param9' param10' param11)); " is 121.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,AttributeHelper<T>,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\AttributeHelper.cs,GetEntityAttribute,The length of the statement  "                throw new InvalidOperationException(String.Format("Entity must have the attribute:{0}"' typeof(VhdEntityAttribute).Name)); " is 122.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdValidator,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Model.cs,BeginValidate,The length of the statement  "            return AsyncMachine<IList<VhdValidationResult>>.BeginAsyncMachine(ValidateAsync' validation' vhdStream' callback' state); " is 121.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFooter,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFooter.cs,Equals,The length of the statement  "            return Equals(other.Cookie' Cookie) && Equals(other.Features' Features) && Equals(other.FileFormatVersion' FileFormatVersion) && other.HeaderOffset == HeaderOffset && other.TimeStamp.Equals(TimeStamp) && Equals(other.CreatorApplication' CreatorApplication) && Equals(other.CreatorVersion' CreatorVersion) && Equals(other.CreatorHostOsType' CreatorHostOsType) && other.PhsyicalSize == PhsyicalSize && other.VirtualSize == VirtualSize && Equals(other.DiskGeometry' DiskGeometry) && Equals(other.DiskType' DiskType) && other.CheckSum == CheckSum && other.UniqueId.Equals(UniqueId) && other.SavedState.Equals(SavedState) && Equals(other.Reserved' Reserved) && Equals(other.RawData' RawData); " is 687.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,BeginReadString,The length of the statement  "            return AsyncMachine<string>.BeginAsyncMachine(ReadStringAsync' this.reader.BaseStream.Position' count' callback' state); " is 120.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdFileFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdFileFactory.cs,Create,The length of the statement  "                        var parentPath = streamSource.VhdDirectory == null ? header.ParentPath : Path.Combine(streamSource.VhdDirectory' header.GetRelativeParentPath()); " is 145.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdFileFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdFileFactory.cs,CreateAsync,The length of the statement  "                    var parentPath = streamSource.VhdDirectory == null ? header.ParentPath : Path.Combine(streamSource.VhdDirectory' header.GetRelativeParentPath()); " is 145.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdFooterFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdFooterFactory.cs,CreateFooterAsync,The length of the statement  "            BeginReadVhdFileFormatVersion(attributeHelper.GetAttribute(() => footer.FileFormatVersion)' machine.CompletionCallback' null); " is 126.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdFooterFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdFooterFactory.cs,CreateFooterAsync,The length of the statement  "            BeginReadCreatorApplication(attributeHelper.GetAttribute(() => footer.CreatorApplication)' machine.CompletionCallback' null); " is 125.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdFooterFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdFooterFactory.cs,CreateFooterAsync,The length of the statement  "            BeginReadCreatorHostOsType(attributeHelper.GetAttribute(() => footer.CreatorHostOsType)' machine.CompletionCallback' null); " is 123.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdFooterFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdFooterFactory.cs,ReadDiskGeometryAsync,The length of the statement  "            dataReader.BeginReadInt16(offset + attributeHelper.GetAttribute(() => diskGeometry.Cylinder).Offset' machine.CompletionCallback' null); " is 135.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdFooterFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdFooterFactory.cs,ReadDiskGeometryAsync,The length of the statement  "            dataReader.BeginReadByte(offset + attributeHelper.GetAttribute(() => diskGeometry.Heads).Offset' machine.CompletionCallback' null); " is 131.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdFooterFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdFooterFactory.cs,ReadDiskGeometryAsync,The length of the statement  "            dataReader.BeginReadByte(offset + attributeHelper.GetAttribute(() => diskGeometry.Sectors).Offset' machine.CompletionCallback' null); " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdParentLocatorFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdParentLocatorFactory.cs,CreateParentLocator,The length of the statement  "            BeginReadPlatformDataSpace(attributeHelper.GetAttribute(() => locator.PlatformDataSpace)' machine.CompletionCallback' null); " is 124.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdParentLocatorFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdParentLocatorFactory.cs,CreateParentLocator,The length of the statement  "            BeginReadPlatformDataLength(attributeHelper.GetAttribute(() => locator.PlatformDataLength)' machine.CompletionCallback' null); " is 126.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdParentLocatorFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdParentLocatorFactory.cs,CreateParentLocator,The length of the statement  "            BeginReadPlatformDataOffset(attributeHelper.GetAttribute(() => locator.PlatformDataOffset)' machine.CompletionCallback' null); " is 126.
Long Statement,Microsoft.WindowsAzure.Commands.Tools.Vhd,VirtualDiskStream,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\VirtualDiskStream.cs,Read,The length of the statement  "                    Buffer.BlockCopy(currentBlock.Data' (int) copyStartIndex' buffer' offset + writtenCount' (int) rangeToReadInBlock.Length); " is 122.
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,BlockAllocationTable,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\BlockAllocationTable.cs,GetBitmapSizeInBytes,The following statement contains a magic number: return (int)(blockSize / VhdConstants.VHD_SECTOR_LENGTH / 8);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors > 65535 * 16 * 255)              {                  totalSectors = 65535 * 16 * 255;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors > 65535 * 16 * 255)              {                  totalSectors = 65535 * 16 * 255;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors > 65535 * 16 * 255)              {                  totalSectors = 65535 * 16 * 255;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors > 65535 * 16 * 255)              {                  totalSectors = 65535 * 16 * 255;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors > 65535 * 16 * 255)              {                  totalSectors = 65535 * 16 * 255;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors > 65535 * 16 * 255)              {                  totalSectors = 65535 * 16 * 255;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)              {                  sectorsPerTrack = 255;                  heads = 16;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;              }              else              {                  sectorsPerTrack = 17;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;                    heads = (int) ((cylinderTimesHeads + 1023) / 1024);                    if (heads < 4)                  {                      heads = 4;                  }                  if (cylinderTimesHeads >= (heads * 1024) || heads > 16)                  {                      sectorsPerTrack = 31;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }                  if (cylinderTimesHeads >= (heads * 1024))                  {                      sectorsPerTrack = 63;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)              {                  sectorsPerTrack = 255;                  heads = 16;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;              }              else              {                  sectorsPerTrack = 17;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;                    heads = (int) ((cylinderTimesHeads + 1023) / 1024);                    if (heads < 4)                  {                      heads = 4;                  }                  if (cylinderTimesHeads >= (heads * 1024) || heads > 16)                  {                      sectorsPerTrack = 31;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }                  if (cylinderTimesHeads >= (heads * 1024))                  {                      sectorsPerTrack = 63;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)              {                  sectorsPerTrack = 255;                  heads = 16;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;              }              else              {                  sectorsPerTrack = 17;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;                    heads = (int) ((cylinderTimesHeads + 1023) / 1024);                    if (heads < 4)                  {                      heads = 4;                  }                  if (cylinderTimesHeads >= (heads * 1024) || heads > 16)                  {                      sectorsPerTrack = 31;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }                  if (cylinderTimesHeads >= (heads * 1024))                  {                      sectorsPerTrack = 63;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)              {                  sectorsPerTrack = 255;                  heads = 16;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;              }              else              {                  sectorsPerTrack = 17;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;                    heads = (int) ((cylinderTimesHeads + 1023) / 1024);                    if (heads < 4)                  {                      heads = 4;                  }                  if (cylinderTimesHeads >= (heads * 1024) || heads > 16)                  {                      sectorsPerTrack = 31;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }                  if (cylinderTimesHeads >= (heads * 1024))                  {                      sectorsPerTrack = 63;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)              {                  sectorsPerTrack = 255;                  heads = 16;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;              }              else              {                  sectorsPerTrack = 17;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;                    heads = (int) ((cylinderTimesHeads + 1023) / 1024);                    if (heads < 4)                  {                      heads = 4;                  }                  if (cylinderTimesHeads >= (heads * 1024) || heads > 16)                  {                      sectorsPerTrack = 31;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }                  if (cylinderTimesHeads >= (heads * 1024))                  {                      sectorsPerTrack = 63;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)              {                  sectorsPerTrack = 255;                  heads = 16;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;              }              else              {                  sectorsPerTrack = 17;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;                    heads = (int) ((cylinderTimesHeads + 1023) / 1024);                    if (heads < 4)                  {                      heads = 4;                  }                  if (cylinderTimesHeads >= (heads * 1024) || heads > 16)                  {                      sectorsPerTrack = 31;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }                  if (cylinderTimesHeads >= (heads * 1024))                  {                      sectorsPerTrack = 63;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)              {                  sectorsPerTrack = 255;                  heads = 16;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;              }              else              {                  sectorsPerTrack = 17;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;                    heads = (int) ((cylinderTimesHeads + 1023) / 1024);                    if (heads < 4)                  {                      heads = 4;                  }                  if (cylinderTimesHeads >= (heads * 1024) || heads > 16)                  {                      sectorsPerTrack = 31;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }                  if (cylinderTimesHeads >= (heads * 1024))                  {                      sectorsPerTrack = 63;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)              {                  sectorsPerTrack = 255;                  heads = 16;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;              }              else              {                  sectorsPerTrack = 17;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;                    heads = (int) ((cylinderTimesHeads + 1023) / 1024);                    if (heads < 4)                  {                      heads = 4;                  }                  if (cylinderTimesHeads >= (heads * 1024) || heads > 16)                  {                      sectorsPerTrack = 31;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }                  if (cylinderTimesHeads >= (heads * 1024))                  {                      sectorsPerTrack = 63;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)              {                  sectorsPerTrack = 255;                  heads = 16;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;              }              else              {                  sectorsPerTrack = 17;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;                    heads = (int) ((cylinderTimesHeads + 1023) / 1024);                    if (heads < 4)                  {                      heads = 4;                  }                  if (cylinderTimesHeads >= (heads * 1024) || heads > 16)                  {                      sectorsPerTrack = 31;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }                  if (cylinderTimesHeads >= (heads * 1024))                  {                      sectorsPerTrack = 63;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)              {                  sectorsPerTrack = 255;                  heads = 16;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;              }              else              {                  sectorsPerTrack = 17;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;                    heads = (int) ((cylinderTimesHeads + 1023) / 1024);                    if (heads < 4)                  {                      heads = 4;                  }                  if (cylinderTimesHeads >= (heads * 1024) || heads > 16)                  {                      sectorsPerTrack = 31;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }                  if (cylinderTimesHeads >= (heads * 1024))                  {                      sectorsPerTrack = 63;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)              {                  sectorsPerTrack = 255;                  heads = 16;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;              }              else              {                  sectorsPerTrack = 17;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;                    heads = (int) ((cylinderTimesHeads + 1023) / 1024);                    if (heads < 4)                  {                      heads = 4;                  }                  if (cylinderTimesHeads >= (heads * 1024) || heads > 16)                  {                      sectorsPerTrack = 31;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }                  if (cylinderTimesHeads >= (heads * 1024))                  {                      sectorsPerTrack = 63;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)              {                  sectorsPerTrack = 255;                  heads = 16;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;              }              else              {                  sectorsPerTrack = 17;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;                    heads = (int) ((cylinderTimesHeads + 1023) / 1024);                    if (heads < 4)                  {                      heads = 4;                  }                  if (cylinderTimesHeads >= (heads * 1024) || heads > 16)                  {                      sectorsPerTrack = 31;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }                  if (cylinderTimesHeads >= (heads * 1024))                  {                      sectorsPerTrack = 63;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)              {                  sectorsPerTrack = 255;                  heads = 16;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;              }              else              {                  sectorsPerTrack = 17;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;                    heads = (int) ((cylinderTimesHeads + 1023) / 1024);                    if (heads < 4)                  {                      heads = 4;                  }                  if (cylinderTimesHeads >= (heads * 1024) || heads > 16)                  {                      sectorsPerTrack = 31;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }                  if (cylinderTimesHeads >= (heads * 1024))                  {                      sectorsPerTrack = 63;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)              {                  sectorsPerTrack = 255;                  heads = 16;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;              }              else              {                  sectorsPerTrack = 17;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;                    heads = (int) ((cylinderTimesHeads + 1023) / 1024);                    if (heads < 4)                  {                      heads = 4;                  }                  if (cylinderTimesHeads >= (heads * 1024) || heads > 16)                  {                      sectorsPerTrack = 31;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }                  if (cylinderTimesHeads >= (heads * 1024))                  {                      sectorsPerTrack = 63;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)              {                  sectorsPerTrack = 255;                  heads = 16;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;              }              else              {                  sectorsPerTrack = 17;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;                    heads = (int) ((cylinderTimesHeads + 1023) / 1024);                    if (heads < 4)                  {                      heads = 4;                  }                  if (cylinderTimesHeads >= (heads * 1024) || heads > 16)                  {                      sectorsPerTrack = 31;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }                  if (cylinderTimesHeads >= (heads * 1024))                  {                      sectorsPerTrack = 63;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)              {                  sectorsPerTrack = 255;                  heads = 16;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;              }              else              {                  sectorsPerTrack = 17;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;                    heads = (int) ((cylinderTimesHeads + 1023) / 1024);                    if (heads < 4)                  {                      heads = 4;                  }                  if (cylinderTimesHeads >= (heads * 1024) || heads > 16)                  {                      sectorsPerTrack = 31;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }                  if (cylinderTimesHeads >= (heads * 1024))                  {                      sectorsPerTrack = 63;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,CreateFromVirtualSize,The following statement contains a magic number: if (totalSectors >= 65535 * 16 * 63)              {                  sectorsPerTrack = 255;                  heads = 16;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;              }              else              {                  sectorsPerTrack = 17;                  cylinderTimesHeads = totalSectors / sectorsPerTrack;                    heads = (int) ((cylinderTimesHeads + 1023) / 1024);                    if (heads < 4)                  {                      heads = 4;                  }                  if (cylinderTimesHeads >= (heads * 1024) || heads > 16)                  {                      sectorsPerTrack = 31;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }                  if (cylinderTimesHeads >= (heads * 1024))                  {                      sectorsPerTrack = 63;                      heads = 16;                      cylinderTimesHeads = totalSectors / sectorsPerTrack;                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = Cylinder.GetHashCode();                  result = (result*397) ^ Heads.GetHashCode();                  result = (result*397) ^ Sectors.GetHashCode();                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,DiskGeometry,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\DiskGeometry.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = Cylinder.GetHashCode();                  result = (result*397) ^ Heads.GetHashCode();                  result = (result*397) ^ Sectors.GetHashCode();                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,IndexRangeComparer,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\IndexRangeComparer.cs,GetHashCode,The following statement contains a magic number: var hash = 17 + range.StartIndex.GetHashCode();
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,IndexRangeComparer,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\IndexRangeComparer.cs,GetHashCode,The following statement contains a magic number: hash = hash * 17 + range.EndIndex.GetHashCode();
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdValidator,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Model.cs,DoValidate,The following statement contains a magic number: if ((validation & VhdValidationType.IsVhd) == VhdValidationType.IsVhd)              {                  var validationResult = new VhdValidationResult                                             {                                                 ValidationType = VhdValidationType.IsVhd                                             };                  if (vhdFile == null)                  {                      validationResult.ErrorCode = 1000;                      validationResult.Error = exception;                  }                  result.Add(validationResult);              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdValidator,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Model.cs,DoValidate,The following statement contains a magic number: if ((validation & VhdValidationType.FixedDisk) == VhdValidationType.FixedDisk)              {                  var validationResult = new VhdValidationResult                                             {                                                 ValidationType = VhdValidationType.FixedDisk                                             };                  if (vhdFile == null || vhdFile.Footer.DiskType != DiskType.Fixed)                  {                      validationResult.ErrorCode = 1001;                  }                  result.Add(validationResult);              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFooter,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFooter.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (Cookie != null ? Cookie.GetHashCode() : 0);                  result = (result*397) ^ Features.GetHashCode();                  result = (result*397) ^ (FileFormatVersion != null ? FileFormatVersion.GetHashCode() : 0);                  result = (result*397) ^ HeaderOffset.GetHashCode();                  result = (result*397) ^ TimeStamp.GetHashCode();                  result = (result*397) ^ (CreatorApplication != null ? CreatorApplication.GetHashCode() : 0);                  result = (result*397) ^ (CreatorVersion != null ? CreatorVersion.GetHashCode() : 0);                  result = (result*397) ^ CreatorHostOsType.GetHashCode();                  result = (result*397) ^ PhsyicalSize.GetHashCode();                  result = (result*397) ^ VirtualSize.GetHashCode();                  result = (result*397) ^ (DiskGeometry != null ? DiskGeometry.GetHashCode() : 0);                  result = (result*397) ^ DiskType.GetHashCode();                  result = (result*397) ^ CheckSum.GetHashCode();                  result = (result*397) ^ UniqueId.GetHashCode();                  result = (result*397) ^ SavedState.GetHashCode();                  result = (result*397) ^ (Reserved != null ? Reserved.GetHashCode() : 0);                  result = (result*397) ^ (RawData != null ? RawData.GetHashCode() : 0);                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFooter,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFooter.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (Cookie != null ? Cookie.GetHashCode() : 0);                  result = (result*397) ^ Features.GetHashCode();                  result = (result*397) ^ (FileFormatVersion != null ? FileFormatVersion.GetHashCode() : 0);                  result = (result*397) ^ HeaderOffset.GetHashCode();                  result = (result*397) ^ TimeStamp.GetHashCode();                  result = (result*397) ^ (CreatorApplication != null ? CreatorApplication.GetHashCode() : 0);                  result = (result*397) ^ (CreatorVersion != null ? CreatorVersion.GetHashCode() : 0);                  result = (result*397) ^ CreatorHostOsType.GetHashCode();                  result = (result*397) ^ PhsyicalSize.GetHashCode();                  result = (result*397) ^ VirtualSize.GetHashCode();                  result = (result*397) ^ (DiskGeometry != null ? DiskGeometry.GetHashCode() : 0);                  result = (result*397) ^ DiskType.GetHashCode();                  result = (result*397) ^ CheckSum.GetHashCode();                  result = (result*397) ^ UniqueId.GetHashCode();                  result = (result*397) ^ SavedState.GetHashCode();                  result = (result*397) ^ (Reserved != null ? Reserved.GetHashCode() : 0);                  result = (result*397) ^ (RawData != null ? RawData.GetHashCode() : 0);                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFooter,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFooter.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (Cookie != null ? Cookie.GetHashCode() : 0);                  result = (result*397) ^ Features.GetHashCode();                  result = (result*397) ^ (FileFormatVersion != null ? FileFormatVersion.GetHashCode() : 0);                  result = (result*397) ^ HeaderOffset.GetHashCode();                  result = (result*397) ^ TimeStamp.GetHashCode();                  result = (result*397) ^ (CreatorApplication != null ? CreatorApplication.GetHashCode() : 0);                  result = (result*397) ^ (CreatorVersion != null ? CreatorVersion.GetHashCode() : 0);                  result = (result*397) ^ CreatorHostOsType.GetHashCode();                  result = (result*397) ^ PhsyicalSize.GetHashCode();                  result = (result*397) ^ VirtualSize.GetHashCode();                  result = (result*397) ^ (DiskGeometry != null ? DiskGeometry.GetHashCode() : 0);                  result = (result*397) ^ DiskType.GetHashCode();                  result = (result*397) ^ CheckSum.GetHashCode();                  result = (result*397) ^ UniqueId.GetHashCode();                  result = (result*397) ^ SavedState.GetHashCode();                  result = (result*397) ^ (Reserved != null ? Reserved.GetHashCode() : 0);                  result = (result*397) ^ (RawData != null ? RawData.GetHashCode() : 0);                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFooter,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFooter.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (Cookie != null ? Cookie.GetHashCode() : 0);                  result = (result*397) ^ Features.GetHashCode();                  result = (result*397) ^ (FileFormatVersion != null ? FileFormatVersion.GetHashCode() : 0);                  result = (result*397) ^ HeaderOffset.GetHashCode();                  result = (result*397) ^ TimeStamp.GetHashCode();                  result = (result*397) ^ (CreatorApplication != null ? CreatorApplication.GetHashCode() : 0);                  result = (result*397) ^ (CreatorVersion != null ? CreatorVersion.GetHashCode() : 0);                  result = (result*397) ^ CreatorHostOsType.GetHashCode();                  result = (result*397) ^ PhsyicalSize.GetHashCode();                  result = (result*397) ^ VirtualSize.GetHashCode();                  result = (result*397) ^ (DiskGeometry != null ? DiskGeometry.GetHashCode() : 0);                  result = (result*397) ^ DiskType.GetHashCode();                  result = (result*397) ^ CheckSum.GetHashCode();                  result = (result*397) ^ UniqueId.GetHashCode();                  result = (result*397) ^ SavedState.GetHashCode();                  result = (result*397) ^ (Reserved != null ? Reserved.GetHashCode() : 0);                  result = (result*397) ^ (RawData != null ? RawData.GetHashCode() : 0);                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFooter,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFooter.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (Cookie != null ? Cookie.GetHashCode() : 0);                  result = (result*397) ^ Features.GetHashCode();                  result = (result*397) ^ (FileFormatVersion != null ? FileFormatVersion.GetHashCode() : 0);                  result = (result*397) ^ HeaderOffset.GetHashCode();                  result = (result*397) ^ TimeStamp.GetHashCode();                  result = (result*397) ^ (CreatorApplication != null ? CreatorApplication.GetHashCode() : 0);                  result = (result*397) ^ (CreatorVersion != null ? CreatorVersion.GetHashCode() : 0);                  result = (result*397) ^ CreatorHostOsType.GetHashCode();                  result = (result*397) ^ PhsyicalSize.GetHashCode();                  result = (result*397) ^ VirtualSize.GetHashCode();                  result = (result*397) ^ (DiskGeometry != null ? DiskGeometry.GetHashCode() : 0);                  result = (result*397) ^ DiskType.GetHashCode();                  result = (result*397) ^ CheckSum.GetHashCode();                  result = (result*397) ^ UniqueId.GetHashCode();                  result = (result*397) ^ SavedState.GetHashCode();                  result = (result*397) ^ (Reserved != null ? Reserved.GetHashCode() : 0);                  result = (result*397) ^ (RawData != null ? RawData.GetHashCode() : 0);                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFooter,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFooter.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (Cookie != null ? Cookie.GetHashCode() : 0);                  result = (result*397) ^ Features.GetHashCode();                  result = (result*397) ^ (FileFormatVersion != null ? FileFormatVersion.GetHashCode() : 0);                  result = (result*397) ^ HeaderOffset.GetHashCode();                  result = (result*397) ^ TimeStamp.GetHashCode();                  result = (result*397) ^ (CreatorApplication != null ? CreatorApplication.GetHashCode() : 0);                  result = (result*397) ^ (CreatorVersion != null ? CreatorVersion.GetHashCode() : 0);                  result = (result*397) ^ CreatorHostOsType.GetHashCode();                  result = (result*397) ^ PhsyicalSize.GetHashCode();                  result = (result*397) ^ VirtualSize.GetHashCode();                  result = (result*397) ^ (DiskGeometry != null ? DiskGeometry.GetHashCode() : 0);                  result = (result*397) ^ DiskType.GetHashCode();                  result = (result*397) ^ CheckSum.GetHashCode();                  result = (result*397) ^ UniqueId.GetHashCode();                  result = (result*397) ^ SavedState.GetHashCode();                  result = (result*397) ^ (Reserved != null ? Reserved.GetHashCode() : 0);                  result = (result*397) ^ (RawData != null ? RawData.GetHashCode() : 0);                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFooter,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFooter.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (Cookie != null ? Cookie.GetHashCode() : 0);                  result = (result*397) ^ Features.GetHashCode();                  result = (result*397) ^ (FileFormatVersion != null ? FileFormatVersion.GetHashCode() : 0);                  result = (result*397) ^ HeaderOffset.GetHashCode();                  result = (result*397) ^ TimeStamp.GetHashCode();                  result = (result*397) ^ (CreatorApplication != null ? CreatorApplication.GetHashCode() : 0);                  result = (result*397) ^ (CreatorVersion != null ? CreatorVersion.GetHashCode() : 0);                  result = (result*397) ^ CreatorHostOsType.GetHashCode();                  result = (result*397) ^ PhsyicalSize.GetHashCode();                  result = (result*397) ^ VirtualSize.GetHashCode();                  result = (result*397) ^ (DiskGeometry != null ? DiskGeometry.GetHashCode() : 0);                  result = (result*397) ^ DiskType.GetHashCode();                  result = (result*397) ^ CheckSum.GetHashCode();                  result = (result*397) ^ UniqueId.GetHashCode();                  result = (result*397) ^ SavedState.GetHashCode();                  result = (result*397) ^ (Reserved != null ? Reserved.GetHashCode() : 0);                  result = (result*397) ^ (RawData != null ? RawData.GetHashCode() : 0);                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFooter,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFooter.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (Cookie != null ? Cookie.GetHashCode() : 0);                  result = (result*397) ^ Features.GetHashCode();                  result = (result*397) ^ (FileFormatVersion != null ? FileFormatVersion.GetHashCode() : 0);                  result = (result*397) ^ HeaderOffset.GetHashCode();                  result = (result*397) ^ TimeStamp.GetHashCode();                  result = (result*397) ^ (CreatorApplication != null ? CreatorApplication.GetHashCode() : 0);                  result = (result*397) ^ (CreatorVersion != null ? CreatorVersion.GetHashCode() : 0);                  result = (result*397) ^ CreatorHostOsType.GetHashCode();                  result = (result*397) ^ PhsyicalSize.GetHashCode();                  result = (result*397) ^ VirtualSize.GetHashCode();                  result = (result*397) ^ (DiskGeometry != null ? DiskGeometry.GetHashCode() : 0);                  result = (result*397) ^ DiskType.GetHashCode();                  result = (result*397) ^ CheckSum.GetHashCode();                  result = (result*397) ^ UniqueId.GetHashCode();                  result = (result*397) ^ SavedState.GetHashCode();                  result = (result*397) ^ (Reserved != null ? Reserved.GetHashCode() : 0);                  result = (result*397) ^ (RawData != null ? RawData.GetHashCode() : 0);                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFooter,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFooter.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (Cookie != null ? Cookie.GetHashCode() : 0);                  result = (result*397) ^ Features.GetHashCode();                  result = (result*397) ^ (FileFormatVersion != null ? FileFormatVersion.GetHashCode() : 0);                  result = (result*397) ^ HeaderOffset.GetHashCode();                  result = (result*397) ^ TimeStamp.GetHashCode();                  result = (result*397) ^ (CreatorApplication != null ? CreatorApplication.GetHashCode() : 0);                  result = (result*397) ^ (CreatorVersion != null ? CreatorVersion.GetHashCode() : 0);                  result = (result*397) ^ CreatorHostOsType.GetHashCode();                  result = (result*397) ^ PhsyicalSize.GetHashCode();                  result = (result*397) ^ VirtualSize.GetHashCode();                  result = (result*397) ^ (DiskGeometry != null ? DiskGeometry.GetHashCode() : 0);                  result = (result*397) ^ DiskType.GetHashCode();                  result = (result*397) ^ CheckSum.GetHashCode();                  result = (result*397) ^ UniqueId.GetHashCode();                  result = (result*397) ^ SavedState.GetHashCode();                  result = (result*397) ^ (Reserved != null ? Reserved.GetHashCode() : 0);                  result = (result*397) ^ (RawData != null ? RawData.GetHashCode() : 0);                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFooter,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFooter.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (Cookie != null ? Cookie.GetHashCode() : 0);                  result = (result*397) ^ Features.GetHashCode();                  result = (result*397) ^ (FileFormatVersion != null ? FileFormatVersion.GetHashCode() : 0);                  result = (result*397) ^ HeaderOffset.GetHashCode();                  result = (result*397) ^ TimeStamp.GetHashCode();                  result = (result*397) ^ (CreatorApplication != null ? CreatorApplication.GetHashCode() : 0);                  result = (result*397) ^ (CreatorVersion != null ? CreatorVersion.GetHashCode() : 0);                  result = (result*397) ^ CreatorHostOsType.GetHashCode();                  result = (result*397) ^ PhsyicalSize.GetHashCode();                  result = (result*397) ^ VirtualSize.GetHashCode();                  result = (result*397) ^ (DiskGeometry != null ? DiskGeometry.GetHashCode() : 0);                  result = (result*397) ^ DiskType.GetHashCode();                  result = (result*397) ^ CheckSum.GetHashCode();                  result = (result*397) ^ UniqueId.GetHashCode();                  result = (result*397) ^ SavedState.GetHashCode();                  result = (result*397) ^ (Reserved != null ? Reserved.GetHashCode() : 0);                  result = (result*397) ^ (RawData != null ? RawData.GetHashCode() : 0);                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFooter,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFooter.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (Cookie != null ? Cookie.GetHashCode() : 0);                  result = (result*397) ^ Features.GetHashCode();                  result = (result*397) ^ (FileFormatVersion != null ? FileFormatVersion.GetHashCode() : 0);                  result = (result*397) ^ HeaderOffset.GetHashCode();                  result = (result*397) ^ TimeStamp.GetHashCode();                  result = (result*397) ^ (CreatorApplication != null ? CreatorApplication.GetHashCode() : 0);                  result = (result*397) ^ (CreatorVersion != null ? CreatorVersion.GetHashCode() : 0);                  result = (result*397) ^ CreatorHostOsType.GetHashCode();                  result = (result*397) ^ PhsyicalSize.GetHashCode();                  result = (result*397) ^ VirtualSize.GetHashCode();                  result = (result*397) ^ (DiskGeometry != null ? DiskGeometry.GetHashCode() : 0);                  result = (result*397) ^ DiskType.GetHashCode();                  result = (result*397) ^ CheckSum.GetHashCode();                  result = (result*397) ^ UniqueId.GetHashCode();                  result = (result*397) ^ SavedState.GetHashCode();                  result = (result*397) ^ (Reserved != null ? Reserved.GetHashCode() : 0);                  result = (result*397) ^ (RawData != null ? RawData.GetHashCode() : 0);                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFooter,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFooter.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (Cookie != null ? Cookie.GetHashCode() : 0);                  result = (result*397) ^ Features.GetHashCode();                  result = (result*397) ^ (FileFormatVersion != null ? FileFormatVersion.GetHashCode() : 0);                  result = (result*397) ^ HeaderOffset.GetHashCode();                  result = (result*397) ^ TimeStamp.GetHashCode();                  result = (result*397) ^ (CreatorApplication != null ? CreatorApplication.GetHashCode() : 0);                  result = (result*397) ^ (CreatorVersion != null ? CreatorVersion.GetHashCode() : 0);                  result = (result*397) ^ CreatorHostOsType.GetHashCode();                  result = (result*397) ^ PhsyicalSize.GetHashCode();                  result = (result*397) ^ VirtualSize.GetHashCode();                  result = (result*397) ^ (DiskGeometry != null ? DiskGeometry.GetHashCode() : 0);                  result = (result*397) ^ DiskType.GetHashCode();                  result = (result*397) ^ CheckSum.GetHashCode();                  result = (result*397) ^ UniqueId.GetHashCode();                  result = (result*397) ^ SavedState.GetHashCode();                  result = (result*397) ^ (Reserved != null ? Reserved.GetHashCode() : 0);                  result = (result*397) ^ (RawData != null ? RawData.GetHashCode() : 0);                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFooter,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFooter.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (Cookie != null ? Cookie.GetHashCode() : 0);                  result = (result*397) ^ Features.GetHashCode();                  result = (result*397) ^ (FileFormatVersion != null ? FileFormatVersion.GetHashCode() : 0);                  result = (result*397) ^ HeaderOffset.GetHashCode();                  result = (result*397) ^ TimeStamp.GetHashCode();                  result = (result*397) ^ (CreatorApplication != null ? CreatorApplication.GetHashCode() : 0);                  result = (result*397) ^ (CreatorVersion != null ? CreatorVersion.GetHashCode() : 0);                  result = (result*397) ^ CreatorHostOsType.GetHashCode();                  result = (result*397) ^ PhsyicalSize.GetHashCode();                  result = (result*397) ^ VirtualSize.GetHashCode();                  result = (result*397) ^ (DiskGeometry != null ? DiskGeometry.GetHashCode() : 0);                  result = (result*397) ^ DiskType.GetHashCode();                  result = (result*397) ^ CheckSum.GetHashCode();                  result = (result*397) ^ UniqueId.GetHashCode();                  result = (result*397) ^ SavedState.GetHashCode();                  result = (result*397) ^ (Reserved != null ? Reserved.GetHashCode() : 0);                  result = (result*397) ^ (RawData != null ? RawData.GetHashCode() : 0);                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFooter,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFooter.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (Cookie != null ? Cookie.GetHashCode() : 0);                  result = (result*397) ^ Features.GetHashCode();                  result = (result*397) ^ (FileFormatVersion != null ? FileFormatVersion.GetHashCode() : 0);                  result = (result*397) ^ HeaderOffset.GetHashCode();                  result = (result*397) ^ TimeStamp.GetHashCode();                  result = (result*397) ^ (CreatorApplication != null ? CreatorApplication.GetHashCode() : 0);                  result = (result*397) ^ (CreatorVersion != null ? CreatorVersion.GetHashCode() : 0);                  result = (result*397) ^ CreatorHostOsType.GetHashCode();                  result = (result*397) ^ PhsyicalSize.GetHashCode();                  result = (result*397) ^ VirtualSize.GetHashCode();                  result = (result*397) ^ (DiskGeometry != null ? DiskGeometry.GetHashCode() : 0);                  result = (result*397) ^ DiskType.GetHashCode();                  result = (result*397) ^ CheckSum.GetHashCode();                  result = (result*397) ^ UniqueId.GetHashCode();                  result = (result*397) ^ SavedState.GetHashCode();                  result = (result*397) ^ (Reserved != null ? Reserved.GetHashCode() : 0);                  result = (result*397) ^ (RawData != null ? RawData.GetHashCode() : 0);                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFooter,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFooter.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (Cookie != null ? Cookie.GetHashCode() : 0);                  result = (result*397) ^ Features.GetHashCode();                  result = (result*397) ^ (FileFormatVersion != null ? FileFormatVersion.GetHashCode() : 0);                  result = (result*397) ^ HeaderOffset.GetHashCode();                  result = (result*397) ^ TimeStamp.GetHashCode();                  result = (result*397) ^ (CreatorApplication != null ? CreatorApplication.GetHashCode() : 0);                  result = (result*397) ^ (CreatorVersion != null ? CreatorVersion.GetHashCode() : 0);                  result = (result*397) ^ CreatorHostOsType.GetHashCode();                  result = (result*397) ^ PhsyicalSize.GetHashCode();                  result = (result*397) ^ VirtualSize.GetHashCode();                  result = (result*397) ^ (DiskGeometry != null ? DiskGeometry.GetHashCode() : 0);                  result = (result*397) ^ DiskType.GetHashCode();                  result = (result*397) ^ CheckSum.GetHashCode();                  result = (result*397) ^ UniqueId.GetHashCode();                  result = (result*397) ^ SavedState.GetHashCode();                  result = (result*397) ^ (Reserved != null ? Reserved.GetHashCode() : 0);                  result = (result*397) ^ (RawData != null ? RawData.GetHashCode() : 0);                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model,VhdFooter,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\VhdFooter.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  int result = (Cookie != null ? Cookie.GetHashCode() : 0);                  result = (result*397) ^ Features.GetHashCode();                  result = (result*397) ^ (FileFormatVersion != null ? FileFormatVersion.GetHashCode() : 0);                  result = (result*397) ^ HeaderOffset.GetHashCode();                  result = (result*397) ^ TimeStamp.GetHashCode();                  result = (result*397) ^ (CreatorApplication != null ? CreatorApplication.GetHashCode() : 0);                  result = (result*397) ^ (CreatorVersion != null ? CreatorVersion.GetHashCode() : 0);                  result = (result*397) ^ CreatorHostOsType.GetHashCode();                  result = (result*397) ^ PhsyicalSize.GetHashCode();                  result = (result*397) ^ VirtualSize.GetHashCode();                  result = (result*397) ^ (DiskGeometry != null ? DiskGeometry.GetHashCode() : 0);                  result = (result*397) ^ DiskType.GetHashCode();                  result = (result*397) ^ CheckSum.GetHashCode();                  result = (result*397) ^ UniqueId.GetHashCode();                  result = (result*397) ^ SavedState.GetHashCode();                  result = (result*397) ^ (Reserved != null ? Reserved.GetHashCode() : 0);                  result = (result*397) ^ (RawData != null ? RawData.GetHashCode() : 0);                  return result;              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,BitMapFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\BitMapFactory.cs,ReverseBitsIfLittleEndian,The following statement contains a magic number: if (BitConverter.IsLittleEndian)              {                  for (int bit = 0; bit < bytes.Length; bit++)                  {                      // reverse the bits due to quirky BitArray                      bytes[bit] = (byte)(((bytes[bit] * 0x80200802UL) & 0x0884422110UL) * 0x0101010101UL >> 32);                  }              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,DiskTypeFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\DiskTypeFactory.cs,Create,The following statement contains a magic number: switch (diskType)              {                  case 0: return DiskType.None;                  case 2: return DiskType.Fixed;                  case 3: return DiskType.Dynamic;                  case 4: return DiskType.Differencing;                  default:                      throw new VhdParsingException(String.Format("Unsupported format: DiskType is {0}"' diskType));              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,DiskTypeFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\DiskTypeFactory.cs,Create,The following statement contains a magic number: switch (diskType)              {                  case 0: return DiskType.None;                  case 2: return DiskType.Fixed;                  case 3: return DiskType.Dynamic;                  case 4: return DiskType.Differencing;                  default:                      throw new VhdParsingException(String.Format("Unsupported format: DiskType is {0}"' diskType));              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,DiskTypeFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\DiskTypeFactory.cs,Create,The following statement contains a magic number: switch (diskType)              {                  case 0: return DiskType.None;                  case 2: return DiskType.Fixed;                  case 3: return DiskType.Dynamic;                  case 4: return DiskType.Differencing;                  default:                      throw new VhdParsingException(String.Format("Unsupported format: DiskType is {0}"' diskType));              }
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,VhdDataReader,The following statement contains a magic number: this.m_buffer = new byte[16];
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,BeginReadInt16,The following statement contains a magic number: return AsyncMachine.BeginAsyncMachine(FillBuffer' 2' callback' state);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadInt16,The following statement contains a magic number: short value = (short) (m_buffer[0] | m_buffer[1] << 8);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,BeginReadUInt32,The following statement contains a magic number: return AsyncMachine.BeginAsyncMachine(FillBuffer' 4' callback' state);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt32,The following statement contains a magic number: var value = (m_buffer[0] | m_buffer[1] << 8 | m_buffer[2] << 16 | m_buffer[3] << 24);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt32,The following statement contains a magic number: var value = (m_buffer[0] | m_buffer[1] << 8 | m_buffer[2] << 16 | m_buffer[3] << 24);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt32,The following statement contains a magic number: var value = (m_buffer[0] | m_buffer[1] << 8 | m_buffer[2] << 16 | m_buffer[3] << 24);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt32,The following statement contains a magic number: var value = (m_buffer[0] | m_buffer[1] << 8 | m_buffer[2] << 16 | m_buffer[3] << 24);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt32,The following statement contains a magic number: var value = (m_buffer[0] | m_buffer[1] << 8 | m_buffer[2] << 16 | m_buffer[3] << 24);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,BeginReadUInt32,The following statement contains a magic number: return AsyncMachine.BeginAsyncMachine(FillBuffer' 4' callback' state);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,BeginReadUInt64,The following statement contains a magic number: return AsyncMachine.BeginAsyncMachine(FillBuffer' 8' callback' state);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt64,The following statement contains a magic number: uint lo = (uint)(m_buffer[0] | m_buffer[1] << 8 |                               m_buffer[2] << 16 | m_buffer[3] << 24);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt64,The following statement contains a magic number: uint lo = (uint)(m_buffer[0] | m_buffer[1] << 8 |                               m_buffer[2] << 16 | m_buffer[3] << 24);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt64,The following statement contains a magic number: uint lo = (uint)(m_buffer[0] | m_buffer[1] << 8 |                               m_buffer[2] << 16 | m_buffer[3] << 24);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt64,The following statement contains a magic number: uint lo = (uint)(m_buffer[0] | m_buffer[1] << 8 |                               m_buffer[2] << 16 | m_buffer[3] << 24);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt64,The following statement contains a magic number: uint lo = (uint)(m_buffer[0] | m_buffer[1] << 8 |                               m_buffer[2] << 16 | m_buffer[3] << 24);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt64,The following statement contains a magic number: uint hi = (uint)(m_buffer[4] | m_buffer[5] << 8 |                               m_buffer[6] << 16 | m_buffer[7] << 24);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt64,The following statement contains a magic number: uint hi = (uint)(m_buffer[4] | m_buffer[5] << 8 |                               m_buffer[6] << 16 | m_buffer[7] << 24);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt64,The following statement contains a magic number: uint hi = (uint)(m_buffer[4] | m_buffer[5] << 8 |                               m_buffer[6] << 16 | m_buffer[7] << 24);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt64,The following statement contains a magic number: uint hi = (uint)(m_buffer[4] | m_buffer[5] << 8 |                               m_buffer[6] << 16 | m_buffer[7] << 24);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt64,The following statement contains a magic number: uint hi = (uint)(m_buffer[4] | m_buffer[5] << 8 |                               m_buffer[6] << 16 | m_buffer[7] << 24);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt64,The following statement contains a magic number: uint hi = (uint)(m_buffer[4] | m_buffer[5] << 8 |                               m_buffer[6] << 16 | m_buffer[7] << 24);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt64,The following statement contains a magic number: uint hi = (uint)(m_buffer[4] | m_buffer[5] << 8 |                               m_buffer[6] << 16 | m_buffer[7] << 24);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,EndReadUInt64,The following statement contains a magic number: ulong value = ((ulong) hi) << 32 | lo;
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,ReadGuid,The following statement contains a magic number: return new Guid(this.ReadBytes(offset' 16));
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdDataReader,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdDataReader.cs,BeginReadGuid,The following statement contains a magic number: return BeginReadBytes(offset' 16' callback' state);
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdFileFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdFileFactory.cs,Create,The following statement contains a magic number: var streamSource = new StreamSource              {                  Stream = new FileStream(path' FileMode.Open' FileAccess.Read' FileShare.Read' 1024)'                  VhdDirectory = Path.GetDirectoryName(path)'                  DisposeOnException = true              };
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdFileFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdFileFactory.cs,BeginCreate,The following statement contains a magic number: var streamSource = new StreamSource               {                   Stream = new FileStream(path' FileMode.Open' FileAccess.Read' FileShare.Read' 1024)'                   VhdDirectory = Path.GetDirectoryName(path)'                  DisposeOnException = true              };
Magic Number,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdFooterSerializer,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdFooterSerializer.cs,ComputeCheckSum,The following statement contains a magic number: for (var i = 0; i < attributeHelper.GetEntityAttribute().Size; i++)              {                  if (i < VhdConstants.VHD_FOOTER_OFFSET_CHECKSUM || i >= (VhdConstants.VHD_FOOTER_OFFSET_CHECKSUM + 4))                  {                      checksum += buffer[i];                  }              }
Missing Default,Microsoft.WindowsAzure.Commands.Tools.Vhd.Model.Persistence,VhdParentLocatorFactory,C:\repos\Azure_azure-powershell\src\ResourceManager\Compute\Stack\VhdManagement\Model\Persistence\VhdParentLocatorFactory.cs,CreateFileLocator,The following switch statement is missing a default case: switch(locator.PlatformCode)              {                  case PlatformCode.None:                      return String.Empty;                  case PlatformCode.Wi2R:                  case PlatformCode.Wi2K:                      throw new VhdParsingException(String.Format("Deprecated PlatformCode:{0}"'locator.PlatformCode));                  case PlatformCode.W2Ru:                      //TODO: Add differencing disks path name' this is relative path                      return Encoding.Unicode.GetString(fileLocator);                  case PlatformCode.W2Ku:                      return Encoding.Unicode.GetString(fileLocator);                  case PlatformCode.Mac:                      //TODO: Mac OS alias stored as a blob?                      throw new NotImplementedException(String.Format("PlatformCode: {0}"' locator.PlatformCode));                  case PlatformCode.MacX:                      return Encoding.UTF8.GetString(fileLocator);              }
