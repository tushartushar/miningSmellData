Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,GetProviderFeatureTests,The method has 168 lines of code.
Long Method,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Providers\GetAzureProviderCmdletTests.cs,GetsResourceProviderTests,The method has 142 lines of code.
Long Method,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupUsesDeploymentNameForDeploymentName,The method has 182 lines of code.
Long Method,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupDeploymentWithDelay,The method has 138 lines of code.
Long Method,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,ExtractsErrorMessageFromFailedDeploymentOperation,The method has 124 lines of code.
Long Method,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,RoleAssignmentTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\RoleAssignmentTests.cs,RaUserPermissions,The method has 101 lines of code.
Complex Method,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,AssertResult,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,ExpectedRecordCount,Cyclomatic complexity of the method is 11
Long Parameter List,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,ConfirmAction,The method has 6 parameters. Parameters: force' actionMessage' processMessage' target' action' predicate
Long Parameter List,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,RejectAction,The method has 6 parameters. Parameters: force' actionMessage' processMessage' target' action' predicate
Long Parameter List,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,ResourcesController,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\ResourcesController.cs,RunPsTestWorkflow,The method has 5 parameters. Parameters: interceptor' scriptBuilder' cleanup' callingClassType' mockName
Long Identifier,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,,The length of the parameter authorizationManagementClientMock is 33.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,GetProviderFeatureTests,The length of the statement  "            var listResult = new List<FeatureResult>() { provider1RegisteredFeature' provider1UnregisteredFeature' provider2UnregisteredFeature }; " is 134.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,GetProviderFeatureTests,The length of the statement  "            //pagableResult.SetItemValue<FeatureResult>(new List<FeatureResult>() { provider1RegisteredFeature' provider1UnregisteredFeature }); " is 132.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,GetProviderFeatureTests,The length of the statement  "                .Callback((string providerName' Dictionary<string' List<string>> customHeaders' CancellationToken ignored) => Assert.Equal(providerOfChoice' providerName' StringComparer.OrdinalIgnoreCase)) " is 189.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,GetProviderFeatureTests,The length of the statement  "            //pagableResult.SetItemValue<FeatureResult>(new List<FeatureResult>() { provider1RegisteredFeature' provider1UnregisteredFeature }); " is 132.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,GetProviderFeatureTests,The length of the statement  "                  Assert.Contains(features' feature => string.Equals(feature.FeatureName' Feature1Name' StringComparison.OrdinalIgnoreCase)); " is 123.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,GetProviderFeatureTests,The length of the statement  "                  Assert.Contains(features' feature => string.Equals(feature.FeatureName' Feature2Name' StringComparison.OrdinalIgnoreCase)); " is 123.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,GetProviderFeatureTests,The length of the statement  "                  Assert.True(features.All(feature => string.Equals(feature.ProviderName' Provider1Namespace' StringComparison.OrdinalIgnoreCase))); " is 130.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,GetProviderFeatureTests,The length of the statement  "              .Callback((string providerName' string featureName' Dictionary<string' List<string>> customHeaders' CancellationToken ignored) => " is 129.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,VerifyGetCallPatternAndReset,The length of the statement  "            this.featureOperationsMock.Verify(f => f.GetWithHttpMessagesAsync(It.IsAny<string>()' It.IsAny<string>()' null' It.IsAny<CancellationToken>())' Times.Once()); " is 158.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,VerifyGetCallPatternAndReset,The length of the statement  "            this.featureOperationsMock.Verify(f => f.ListWithHttpMessagesAsync(It.IsAny<string>()' null' It.IsAny<CancellationToken>())' Times.Never); " is 138.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,VerifyGetCallPatternAndReset,The length of the statement  "            this.featureOperationsMock.Verify(f => f.ListAllWithHttpMessagesAsync(null' It.IsAny<CancellationToken>())' Times.Never); " is 121.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,VerifyGetCallPatternAndReset,The length of the statement  "            this.featureOperationsMock.Verify(f => f.ListNextWithHttpMessagesAsync(It.IsAny<string>()' null' It.IsAny<CancellationToken>())' Times.Never); " is 142.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,VerifyGetCallPatternAndReset,The length of the statement  "            this.featureOperationsMock.Verify(f => f.ListAllNextWithHttpMessagesAsync(It.IsAny<string>()' null' It.IsAny<CancellationToken>())' Times.Never); " is 145.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,VerifyListAllCallPatternAndReset,The length of the statement  "            this.featureOperationsMock.Verify(f => f.ListAllWithHttpMessagesAsync(null' It.IsAny<CancellationToken>())' Times.Once()); " is 122.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,VerifyListAllCallPatternAndReset,The length of the statement  "            this.featureOperationsMock.Verify(f => f.ListAllNextWithHttpMessagesAsync(It.IsAny<string>()' null' It.IsAny<CancellationToken>())' Times.Never); " is 145.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,VerifyListProviderFeaturesCallPatternAndReset,The length of the statement  "            this.featureOperationsMock.Verify(f => f.ListWithHttpMessagesAsync(It.IsAny<string>()' null' It.IsAny<CancellationToken>())' Times.Once()); " is 139.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,VerifyListProviderFeaturesCallPatternAndReset,The length of the statement  "            this.featureOperationsMock.Verify(f => f.ListNextWithHttpMessagesAsync(It.IsAny<string>()' null' It.IsAny<CancellationToken>())' Times.Never); " is 142.
Long Statement,Microsoft.Azure.Commands.Resources.Test,RegisterAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\RegisterProviderFeatureCmdletTests.cs,RegisterResourceProviderFeatureTests,The length of the statement  "                .Setup(client => client.RegisterWithHttpMessagesAsync(It.IsAny<string>()' It.IsAny<string>()' null' It.IsAny<CancellationToken>())) " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test,RegisterAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\RegisterProviderFeatureCmdletTests.cs,RegisterResourceProviderFeatureTests,The length of the statement  "                .Callback((string providerName' string featureName' Dictionary<string' List<string>> customHeaders' CancellationToken ignored) => " is 129.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Providers\GetAzureProviderCmdletTests.cs,VerifyGetCallPatternAndReset,The length of the statement  "            this.providerOperationsMock.Verify(f => f.GetWithHttpMessagesAsync(It.IsAny<string>()' null' null' It.IsAny<CancellationToken>())' Times.Once()); " is 145.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Providers\GetAzureProviderCmdletTests.cs,VerifyGetCallPatternAndReset,The length of the statement  "            this.providerOperationsMock.Verify(f => f.ListWithHttpMessagesAsync(null' null' null' It.IsAny<CancellationToken>())' Times.Once()); " is 132.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Providers\GetAzureProviderCmdletTests.cs,VerifyGetCallPatternAndReset,The length of the statement  "            this.providerOperationsMock.Verify(f => f.ListNextWithHttpMessagesAsync(It.IsAny<string>()' null' It.IsAny<CancellationToken>())' Times.Never); " is 143.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Providers\GetAzureProviderCmdletTests.cs,VerifyListCallPatternAndReset,The length of the statement  "            this.providerOperationsMock.Verify(f => f.ListWithHttpMessagesAsync(null' null' null' It.IsAny<CancellationToken>())' Times.Once()); " is 132.
Long Statement,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Providers\GetAzureProviderCmdletTests.cs,VerifyListCallPatternAndReset,The length of the statement  "            this.providerOperationsMock.Verify(f => f.ListNextWithHttpMessagesAsync(It.IsAny<string>()' null' It.IsAny<CancellationToken>())' Times.Never()); " is 145.
Long Statement,Microsoft.Azure.Commands.Resources.Test,RegisterAzureProviderCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Providers\RegisterResourceProviderCmdletTests.cs,VerifyCallPatternAndReset,The length of the statement  "            this.providerOperationsMock.Verify(f => f.RegisterWithHttpMessagesAsync(It.IsAny<string>()' null' It.IsAny<CancellationToken>())' Times.Once()); " is 144.
Long Statement,Microsoft.Azure.Commands.Resources.Test,UnregisterAzureProviderCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Providers\UnregisterResourceProviderCmdletTests.cs,VerifyCallPatternAndReset,The length of the statement  "            this.providerOperationsMock.Verify(f => f.UnregisterWithHttpMessagesAsync(It.IsAny<string>()' null' It.IsAny<CancellationToken>())' Times.Once()); " is 146.
Long Statement,Microsoft.Azure.Commands.Resources.Test,RoleAssignmentUnitTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\RoleAssignment\RoleAssignmentUnitTests.cs,VerifyInvalidScopes,The length of the statement  "            scopeAndErrors.Add("/subscriptions/e9ee799d-6ab2-4084-b952-e7c86344bbab/Should be 'ResourceGroups'/any group name"' "Scope '/subscriptions/e9ee799d-6ab2-4084-b952-e7c86344bbab/Should be 'ResourceGroups'/any group name' should begin with '/subscriptions/<subid>/resourceGroups'."); " is 280.
Long Statement,Microsoft.Azure.Commands.Resources.Test,RoleAssignmentUnitTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\RoleAssignment\RoleAssignmentUnitTests.cs,VerifyInvalidScopes,The length of the statement  "            scopeAndErrors.Add("/subscriptions/e9ee799d-6ab2-4084-b952-e7c86344bbab/ResourceGroups"' "Scope '/subscriptions/e9ee799d-6ab2-4084-b952-e7c86344bbab/ResourceGroups' should have even number of parts."); " is 201.
Long Statement,Microsoft.Azure.Commands.Resources.Test,RoleAssignmentUnitTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\RoleAssignment\RoleAssignmentUnitTests.cs,VerifyInvalidScopes,The length of the statement  "            scopeAndErrors.Add("/subscriptions/e9ee799d-6ab2-4084-b952-e7c86344bbab/ResourceGroups/"' "Scope '/subscriptions/e9ee799d-6ab2-4084-b952-e7c86344bbab/ResourceGroups' should have even number of parts."); " is 202.
Long Statement,Microsoft.Azure.Commands.Resources.Test,RoleAssignmentUnitTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\RoleAssignment\RoleAssignmentUnitTests.cs,VerifyInvalidScopes,The length of the statement  "            scopeAndErrors.Add("/subscriptions/e9ee799d-6ab2-4084-b952-e7c86344bbab/ResourceGroups/groupname/Should be 'Providers'/any provider name"' "Scope '/subscriptions/e9ee799d-6ab2-4084-b952-e7c86344bbab/ResourceGroups/groupname/Should be 'Providers'/any provider name' should begin with '/subscriptions/<subid>/resourceGroups/<groupname>/providers'."); " is 348.
Long Statement,Microsoft.Azure.Commands.Resources.Test,RoleAssignmentUnitTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\RoleAssignment\RoleAssignmentUnitTests.cs,VerifyInvalidScopes,The length of the statement  "            scopeAndErrors.Add("/subscriptions/e9ee799d-6ab2-4084-b952-e7c86344bbab/ResourceGroups/groupname/Providers/providername"' "Scope '/subscriptions/e9ee799d-6ab2-4084-b952-e7c86344bbab/ResourceGroups/groupname/Providers/providername' should have at least one pair of resource type and resource name. e.g. '/subscriptions/<subid>/resourceGroups/<groupname>/providers/<providername>/<resourcetype>/<resourcename>'."); " is 412.
Long Statement,Microsoft.Azure.Commands.Resources.Test,RoleAssignmentUnitTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\RoleAssignment\RoleAssignmentUnitTests.cs,VerifyValidScopes,The length of the statement  "            validScopes.Add("/subscriptions/e9ee799d-6ab2-4084-b952-e7c86344bbab/ResourceGroups/groupname/Providers/providername/type/typename"); " is 133.
Long Statement,Microsoft.Azure.Commands.Resources.Test,RoleAssignmentUnitTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\RoleAssignment\RoleAssignmentUnitTests.cs,VerifyValidScopes,The length of the statement  "            validScopes.Add("/subscriptions/e9ee799d-6ab2-4084-b952-e7c86344bbab/ResourceGroups/groupname/Providers/providername/type/typename/"); " is 134.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,ConstructsDynamicParameter,The length of the statement  "            KeyValuePair<string' TemplateFileParameterV1> parameter = new KeyValuePair<string' TemplateFileParameterV1>(key' value); " is 120.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,ResolvesDuplicatedDynamicParameterName,The length of the statement  "            KeyValuePair<string' TemplateFileParameterV1> parameter = new KeyValuePair<string' TemplateFileParameterV1>(key' value); " is 120.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,ResolvesDuplicatedDynamicParameterNameCaseInsensitive,The length of the statement  "            KeyValuePair<string' TemplateFileParameterV1> parameter = new KeyValuePair<string' TemplateFileParameterV1>(key' value); " is 120.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,ConstructsDynamicParameterNoValidation,The length of the statement  "            KeyValuePair<string' TemplateFileParameterV1> parameter = new KeyValuePair<string' TemplateFileParameterV1>(key' value); " is 120.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,ConstructsDynamicParameterWithNullAllowedValues,The length of the statement  "            KeyValuePair<string' TemplateFileParameterV1> parameter = new KeyValuePair<string' TemplateFileParameterV1>(key' value); " is 120.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,ConstructsObjectTypeDynamicParameter,The length of the statement  "            KeyValuePair<string' TemplateFileParameterV1> parameter = new KeyValuePair<string' TemplateFileParameterV1>(key' value); " is 120.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,ConstructsArrayTypeDynamicParameter,The length of the statement  "            KeyValuePair<string' TemplateFileParameterV1> parameter = new KeyValuePair<string' TemplateFileParameterV1>(key' value); " is 120.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupChecksForPermissionForExistingResource,The length of the statement  "            PSCreateResourceGroupParameters parameters = new PSCreateResourceGroupParameters() { ResourceGroupName = resourceGroupName' ConfirmAction = RejectAction }; " is 155.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupChecksForPermissionForExistingResource,The length of the statement  "            resourceGroupMock.Setup(f => f.CheckExistenceWithHttpMessagesAsync(parameters.ResourceGroupName' null' new CancellationToken())) " is 128.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupWithoutDeploymentSucceeds,The length of the statement  "            resourceGroupMock.Setup(f => f.CheckExistenceWithHttpMessagesAsync(parameters.ResourceGroupName' null' new CancellationToken())) " is 128.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupWithoutDeploymentSucceeds,The length of the statement  "                    .Returns(Task.Factory.StartNew(() => CreateAzureOperationResponse(new ResourceGroup(location: parameters.Location' name: parameters.ResourceGroupName)))); " is 154.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,TestTemplateShowsErrorMessage,The length of the statement  "            resourceGroupMock.Setup(f => f.CheckExistenceWithHttpMessagesAsync(parameters.ResourceGroupName' null' new CancellationToken())) " is 128.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,TestTemplateShowsErrorMessage,The length of the statement  "            deploymentsMock.Setup(f => f.ValidateWithHttpMessagesAsync(resourceGroupName' It.IsAny<string>()' It.IsAny<Deployment>()' null' new CancellationToken())) " is 153.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,TestTemplateShowsErrorMessage,The length of the statement  "                .Callback((string rg' string dn' Deployment d' Dictionary<string' List<string>> customHeaders' CancellationToken c) => { deploymentFromValidate = d; }); " is 152.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,TestTemplateShowsSuccessMessage,The length of the statement  "            resourceGroupMock.Setup(f => f.CheckExistenceWithHttpMessagesAsync(parameters.ResourceGroupName' null' new CancellationToken())) " is 128.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,TestTemplateShowsSuccessMessage,The length of the statement  "            deploymentsMock.Setup(f => f.ValidateWithHttpMessagesAsync(resourceGroupName' It.IsAny<string>()' It.IsAny<Deployment>()' null' new CancellationToken())) " is 153.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,TestTemplateShowsSuccessMessage,The length of the statement  "                .Callback((string rg' string dn' Deployment d' Dictionary<string' List<string>> customHeaders' CancellationToken c) => { deploymentFromValidate = d; }); " is 152.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupDeploymentWithDelay,The length of the statement  "            Microsoft.Azure.Commands.ResourceManager.Cmdlets.SdkModels.PSResourceGroupDeployment result = resourcesClient.ExecuteDeployment(parameters); " is 140.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupDeploymentWithDelay,The length of the statement  "                f => f(string.Format("Resource {0} '{1}' provisioning status is {2}"' "Microsoft.Website"' resourceName' "Succeeded".ToLower()))' " is 129.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupWithDeploymentSucceeds,The length of the statement  "            resourceGroupMock.Setup(f => f.CheckExistenceWithHttpMessagesAsync(resourceGroupParameters.ResourceGroupName' null' new CancellationToken())) " is 141.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupWithDeploymentSucceeds,The length of the statement  "            deploymentsMock.Setup(f => f.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName' deploymentName' It.IsAny<Deployment>()' null' new CancellationToken())) " is 160.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupWithDeploymentSucceeds,The length of the statement  "                .Callback((string name' string dName' Deployment bDeploy' Dictionary<string' List<string>> customHeaders' CancellationToken token) => " is 133.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupWithDeploymentSucceeds,The length of the statement  "            deploymentsMock.Setup(f => f.GetWithHttpMessagesAsync(resourceGroupName' deploymentName' null' new CancellationToken())) " is 120.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupWithDeploymentSucceeds,The length of the statement  "            deploymentsMock.Setup(f => f.ValidateWithHttpMessagesAsync(resourceGroupName' It.IsAny<string>()' It.IsAny<Deployment>()' null' new CancellationToken())) " is 153.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupWithDeploymentSucceeds,The length of the statement  "                .Callback((string rg' string dn' Deployment d' Dictionary<string' List<string>> customHeaders' CancellationToken c) => { deploymentFromValidate = d; }); " is 152.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupWithDeploymentSucceeds,The length of the statement  "            SetupListForResourceGroupAsync(resourceGroupParameters.ResourceGroupName' new List<GenericResource>() { CreateGenericResource(null' null' "website") }); " is 152.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupWithDeploymentSucceeds,The length of the statement  "            deploymentOperationsMock.Setup(f => f.ListWithHttpMessagesAsync(resourceGroupName' deploymentName' null' null' new CancellationToken())) " is 136.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupWithDeploymentSucceeds,The length of the statement  "            Microsoft.Azure.Commands.ResourceManager.Cmdlets.SdkModels.PSResourceGroupDeployment deploymentResult = resourcesClient.ExecuteDeployment(deploymentParameters); " is 160.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupWithDeploymentSucceeds,The length of the statement  "            deploymentsMock.Verify((f => f.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName' deploymentName' deploymentFromGet' null' new CancellationToken()))' Times.Once()); " is 173.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,ShowsFailureErrorWhenResourceGroupWithDeploymentFails,The length of the statement  "            resourceGroupMock.Setup(f => f.CheckExistenceWithHttpMessagesAsync(resourceGroupparameters.ResourceGroupName' null' new CancellationToken())) " is 141.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,ShowsFailureErrorWhenResourceGroupWithDeploymentFails,The length of the statement  "                        CreateAzureOperationResponse(new ResourceGroup(location: resourceGroupparameters.Location' name: resourceGroupparameters.ResourceGroupName)) " is 140.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,ShowsFailureErrorWhenResourceGroupWithDeploymentFails,The length of the statement  "                .Returns(Task.Factory.StartNew(() => CreateAzureOperationResponse(new ResourceGroup() { Location = resourceGroupLocation }) " is 123.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,ShowsFailureErrorWhenResourceGroupWithDeploymentFails,The length of the statement  "            deploymentsMock.Setup(f => f.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName' deploymentName' It.IsAny<Deployment>()' null' new CancellationToken())) " is 155.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,ShowsFailureErrorWhenResourceGroupWithDeploymentFails,The length of the statement  "                .Returns(Task.Factory.StartNew(() => CreateAzureOperationResponse(new DeploymentExtended(name: deploymentName' id: requestId) " is 125.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,ShowsFailureErrorWhenResourceGroupWithDeploymentFails,The length of the statement  "                .Callback((string name' string dName' Deployment bDeploy' Dictionary<string' List<string>> customHeaders' CancellationToken token) => { deploymentFromGet = bDeploy; }); " is 168.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,ShowsFailureErrorWhenResourceGroupWithDeploymentFails,The length of the statement  "            deploymentsMock.Setup(f => f.GetWithHttpMessagesAsync(resourceGroupName' deploymentName' null' new CancellationToken())) " is 120.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,ShowsFailureErrorWhenResourceGroupWithDeploymentFails,The length of the statement  "            deploymentsMock.Setup(f => f.ValidateWithHttpMessagesAsync(resourceGroupName' It.IsAny<string>()' It.IsAny<Deployment>()' null' new CancellationToken())) " is 153.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,ShowsFailureErrorWhenResourceGroupWithDeploymentFails,The length of the statement  "                .Callback((string resourceGroup' string deployment' Deployment d' Dictionary<string' List<string>> customHeaders' CancellationToken c) => { deploymentFromValidate = d; }); " is 171.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,ShowsFailureErrorWhenResourceGroupWithDeploymentFails,The length of the statement  "            deploymentOperationsMock.Setup(f => f.ListWithHttpMessagesAsync(resourceGroupName' deploymentName' null' null' new CancellationToken())) " is 136.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,ShowsFailureErrorWhenResourceGroupWithDeploymentFails,The length of the statement  "            deploymentsMock.Verify((f => f.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName' deploymentName' deploymentFromGet' null' new CancellationToken()))' Times.Once()); " is 168.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,ExtractsErrorMessageFromFailedDeploymentOperation,The length of the statement  "            resourceGroupMock.Setup(f => f.CheckExistenceWithHttpMessagesAsync(resourceGroupparameters.ResourceGroupName' null' new CancellationToken())) " is 141.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,ExtractsErrorMessageFromFailedDeploymentOperation,The length of the statement  "            deploymentsMock.Setup(f => f.GetWithHttpMessagesAsync(resourceGroupName' deploymentName' null' new CancellationToken())) " is 120.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,ExtractsErrorMessageFromFailedDeploymentOperation,The length of the statement  "            Microsoft.Azure.Commands.ResourceManager.Cmdlets.SdkModels.PSResourceGroupDeployment deploymentResult = resourcesClient.ExecuteDeployment(deploymentParameters); " is 160.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroups,The length of the statement  "            SetupListForResourceGroupAsync(resourceGroup1.Name' new List<GenericResource>() { CreateGenericResource(null' null' "resource") }); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroups,The length of the statement  "            SetupListForResourceGroupAsync(resourceGroup2.Name' new List<GenericResource>() { CreateGenericResource(null' null' "resource") }); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroups,The length of the statement  "            SetupListForResourceGroupAsync(resourceGroup3.Name' new List<GenericResource>() { CreateGenericResource(null' null' "resource") }); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroups,The length of the statement  "            SetupListForResourceGroupAsync(resourceGroup4.Name' new List<GenericResource>() { CreateGenericResource(null' null' "resource") }); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroupsWithDetails,The length of the statement  "            SetupListForResourceGroupAsync(resourceGroup1.Name' new List<GenericResource>() { CreateGenericResource(null' null' "resource") }); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroupsWithDetails,The length of the statement  "            SetupListForResourceGroupAsync(resourceGroup2.Name' new List<GenericResource>() { CreateGenericResource(null' null' "resource") }); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroupsWithDetails,The length of the statement  "            SetupListForResourceGroupAsync(resourceGroup3.Name' new List<GenericResource>() { CreateGenericResource(null' null' "resource") }); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroupsWithDetails,The length of the statement  "            SetupListForResourceGroupAsync(resourceGroup4.Name' new List<GenericResource>() { CreateGenericResource(null' null' "resource") }); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTags,The length of the statement  "            ResourceGroup resourceGroup1 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 1' tags: tag1); " is 123.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTags,The length of the statement  "            ResourceGroup resourceGroup2 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 2' tags: tag2); " is 123.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTags,The length of the statement  "            ResourceGroup resourceGroup3 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 3' tags: tag3); " is 123.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTags,The length of the statement  "            SetupListForResourceGroupAsync(resourceGroup1.Name' new List<GenericResource>() { CreateGenericResource(null' null' "resource") }); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTags,The length of the statement  "            SetupListForResourceGroupAsync(resourceGroup2.Name' new List<GenericResource>() { CreateGenericResource(null' null' "resource") }); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTags,The length of the statement  "            SetupListForResourceGroupAsync(resourceGroup3.Name' new List<GenericResource>() { CreateGenericResource(null' null' "resource") }); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTags,The length of the statement  "            SetupListForResourceGroupAsync(resourceGroup4.Name' new List<GenericResource>() { CreateGenericResource(null' null' "resource") }); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTagsWithDetails,The length of the statement  "            ResourceGroup resourceGroup1 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 1' tags: tag1); " is 123.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTagsWithDetails,The length of the statement  "            ResourceGroup resourceGroup2 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 2' tags: tag2); " is 123.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTagsWithDetails,The length of the statement  "            ResourceGroup resourceGroup3 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 3' tags: tag3); " is 123.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTagsWithDetails,The length of the statement  "            SetupListForResourceGroupAsync(resourceGroup1.Name' new List<GenericResource>() { CreateGenericResource(null' null' "resource") }); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTagsWithDetails,The length of the statement  "            SetupListForResourceGroupAsync(resourceGroup2.Name' new List<GenericResource>() { CreateGenericResource(null' null' "resource") }); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTagsWithDetails,The length of the statement  "            SetupListForResourceGroupAsync(resourceGroup3.Name' new List<GenericResource>() { CreateGenericResource(null' null' "resource") }); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTagsWithDetails,The length of the statement  "            SetupListForResourceGroupAsync(resourceGroup4.Name' new List<GenericResource>() { CreateGenericResource(null' null' "resource") }); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,DeletesResourcesGroup,The length of the statement  "            resourceGroupMock.Verify(f => f.DeleteWithHttpMessagesAsync(resourceGroupName' null' It.IsAny<CancellationToken>())' Times.Once()); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,FiltersOneResourceGroupDeployment,The length of the statement  "            deploymentsMock.Setup(f => f.GetWithHttpMessagesAsync(resourceGroupName' deploymentName' null' new CancellationToken())) " is 120.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,FiltersOneResourceGroupDeployment,The length of the statement  "            List<Microsoft.Azure.Commands.ResourceManager.Cmdlets.SdkModels.PSResourceGroupDeployment> result = resourcesClient.FilterResourceGroupDeployments(options); " is 156.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,CancelsActiveDeployment,The length of the statement  "            deploymentsMock.Verify(f => f.CancelWithHttpMessagesAsync(resourceGroupName' deploymentName + 3' null' new CancellationToken())' Times.Once()); " is 143.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceIdentifierTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceIdentifierTests.cs,IdentifierIsConstructedFromProvidedValues,The length of the statement  "            Assert.Equal("/subscriptions/abc123/resourceGroups/group1/providers/Microsoft.Test/servers/r12345sql/db/r45678db"' id.ToString()); " is 130.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceIdentifierTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceIdentifierTests.cs,IdentifierIsParsedFromShortId,The length of the statement  "            ResourceIdentifier id = new ResourceIdentifier("/subscriptions/abc123/resourceGroups/group1/providers/Microsoft.Test/db/r45678db"); " is 131.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceIdentifierTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceIdentifierTests.cs,IdentifierIsParsedFromLongId,The length of the statement  "            ResourceIdentifier id = new ResourceIdentifier("/subscriptions/abc123/resourceGroups/group1/providers/Microsoft.Test/servers/r12345sql/db/r45678db"); " is 149.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Models,ResourceIdentifierTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceIdentifierTests.cs,IdentifierIsParsedFromVeryLongId,The length of the statement  "            ResourceIdentifier id = new ResourceIdentifier("/subscriptions/abc123/resourceGroups/group1/providers/Microsoft.Test/servers/r12345sql/subserver/r5555/db/r45678db"); " is 165.
Long Statement,Microsoft.Azure.Commands.Resources.Test.Resources,TestAzureResourceGroupDeploymentCommandTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ResourceGroupDeployments\TestAzureResourceGroupDeploymentCommandTests.cs,ValidatesPSResourceGroupDeploymentWithUserTemplate,The length of the statement  "                .Callback((PSDeploymentCmdletParameters p' DeploymentMode m) => { actualParameters = p; m = DeploymentMode.Incremental; }); " is 123.
Long Statement,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,TestGetAzureRmPolicyAliasAllParameters,The length of the statement  "            providers.AddProvider("Provider4").AddResourceType("ResourceType4"' new[] { "ApiVersion4" }' new[] { "Location4" }).AddAlias("Alias4"); " is 135.
Long Statement,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,TestGetAzureRmPolicyAliasAllParameters,The length of the statement  "            providers.AddProvider("Provider7").AddResourceType("ResourceType7").AddAlias("Alias7").AddAliasPath("AliasPath7"' new[] { "ApiVersion7" }); " is 139.
Long Statement,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,AssertResult,The length of the statement  "                var expectedProvider = expectedProviders.SingleOrDefault(item => item.NamespaceProperty.EqualsInsensitively(actualProvider.Namespace)); " is 135.
Long Statement,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,AssertResult,The length of the statement  "                var expectedResourceType = expectedProvider.ResourceTypes.SingleOrDefault(item => item.ResourceType.EqualsInsensitively(actualProvider.ResourceType)); " is 150.
Long Statement,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,AssertResult,The length of the statement  "                    var expectedAlias = expectedResourceType.Aliases.SingleOrDefault(item => item.Name.EqualsInsensitively(actualAlias.Name)); " is 122.
Long Statement,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,ExpectedRecordCount,The length of the statement  "            foreach (var expectedProvider in expectedProviders.Where(p => string.IsNullOrEmpty(namespaceMatch) || isMatch(p.NamespaceProperty' namespaceMatch))) " is 148.
Long Statement,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,ExpectedRecordCount,The length of the statement  "                foreach (var expectedResourceType in expectedProvider.ResourceTypes.Where(r => string.IsNullOrEmpty(resourceTypeMatch) || isMatch(r.ResourceType' resourceTypeMatch))) " is 166.
Long Statement,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,ExpectedRecordCount,The length of the statement  "                        else if (!string.IsNullOrEmpty(apiVersionMatch) && expectedResourceType.ApiVersions.Any(v => isMatch(v' apiVersionMatch))) " is 122.
Long Statement,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,ExpectedRecordCount,The length of the statement  "                        else if (!string.IsNullOrEmpty(pathMatch) && expectedResourceType.Aliases.SelectMany(a => a.Paths).Any(p => isMatch(p.Path' pathMatch))) " is 136.
Long Statement,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,ExpectedRecordCount,The length of the statement  "                        else if (!string.IsNullOrEmpty(apiVersionMatch) && expectedResourceType.Aliases.Any(a => a.Paths.Coalesce().Any(p => p.ApiVersions.Any(v => isMatch(v' apiVersionMatch))))) " is 171.
Long Statement,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,ExpectedRecordCount,The length of the statement  "                        else if (string.IsNullOrEmpty(locationMatch) && string.IsNullOrEmpty(aliasMatch) && string.IsNullOrEmpty(pathMatch) && string.IsNullOrEmpty(apiVersionMatch)) " is 157.
Long Statement,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,ResourcesController,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\ResourcesController.cs,GetGraphClient,The length of the statement  "                UserDomain = String.IsNullOrEmpty(environment.UserName) ? String.Empty : environment.UserName.Split(new[] { "@" }' StringSplitOptions.RemoveEmptyEntries).Last(); " is 161.
Long Statement,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,ResourcesController,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\ResourcesController.cs,GetSubscriptionClient,The length of the statement  "            return context.GetServiceClient<Internal.Subscriptions.SubscriptionClient>(TestEnvironmentFactory.GetTestEnvironment()); " is 120.
Long Statement,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,TestHttpClientHelperFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\ResourcesController.cs,CreateHttpClientHelper,The length of the statement  "                return new HttpClientHelperImpl(credentials: _credential' headerValues: headerValues' cmdletHeaderValues: cmdletHeaderValues); " is 126.
Long Statement,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,TestHttpClientHelperFactory,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\ResourcesController.cs,CreateHttpClientHelper,The length of the statement  "            return new TestHttpClientHelperFactory.HttpClientHelperImpl(credentials: credential' headerValues: headerValues' cmdletHeaderValues: cmdletHeaderValues); " is 153.
Complex Conditional,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,ExpectedRecordCount,The conditional expression  "string.IsNullOrEmpty(locationMatch) && string.IsNullOrEmpty(aliasMatch) && string.IsNullOrEmpty(pathMatch) && string.IsNullOrEmpty(apiVersionMatch)"  is complex.
Complex Conditional,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,ResourcesController,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\ResourcesController.cs,GetGraphClient,The conditional expression  "AzureRmProfileProvider.Instance != null &&                  AzureRmProfileProvider.Instance.Profile != null &&                  AzureRmProfileProvider.Instance.Profile.DefaultContext != null &&                  AzureRmProfileProvider.Instance.Profile.DefaultContext.Tenant != null"  is complex.
Magic Number,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderFeatureCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Features\GetAzureProviderFeatureCmdletTests.cs,GetProviderFeatureTests,The following statement contains a magic number: this.commandRuntimeMock                .Setup(m => m.WriteObject(It.IsAny<object>()))                .Callback((object obj) =>                {                    Assert.IsType<PSProviderFeature[]>(obj);                    var features = (PSProviderFeature[])obj;                    Assert.Equal(2' features.Length);                    Assert.Contains(features' feature => string.Equals(feature.FeatureName' Feature1Name' StringComparison.OrdinalIgnoreCase));                    Assert.Contains(features' feature => string.Equals(feature.FeatureName' Feature2Name' StringComparison.OrdinalIgnoreCase));                    Assert.True(features.All(feature => string.Equals(feature.ProviderName' Provider1Namespace' StringComparison.OrdinalIgnoreCase)));                });
Magic Number,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Providers\GetAzureProviderCmdletTests.cs,GetsResourceProviderTests,The following statement contains a magic number: this.commandRuntimeMock                  .Setup(m => m.WriteObject(It.IsAny<object>()))                  .Callback((object obj) =>                  {                      Assert.IsType<PSResourceProvider[]>(obj);                        var providers = (PSResourceProvider[])obj;                      Assert.Single(providers);                        var provider = providers.Single();                      Assert.Equal(RegisteredProviderNamespace' provider.ProviderNamespace);                      Assert.Equal(ResourceManagerSdkClient.RegisteredStateName' provider.RegistrationState);                        Assert.Single(provider.ResourceTypes);                        var resourceType = provider.ResourceTypes.Single();                      Assert.Equal(ResourceTypeName' resourceType.ResourceTypeName);                      Assert.Equal(2' resourceType.Locations.Length);                  });
Magic Number,Microsoft.Azure.Commands.Resources.Test,GetAzureProviderCmdletTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Providers\GetAzureProviderCmdletTests.cs,GetsResourceProviderTests,The following statement contains a magic number: this.commandRuntimeMock                .Setup(m => m.WriteObject(It.IsAny<object>()))                .Callback((object obj) =>                {                    Assert.IsType<PSResourceProvider[]>(obj);                    var providers = (PSResourceProvider[])obj;                    Assert.Equal(2' providers.Length);                });
Magic Number,Microsoft.Azure.Commands.Resources.Test,NewAzureResourceGroupDeploymentCommandTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ResourceGroupDeployments\NewAzureResourceGroupDeploymentCommandTests.cs,CreatesNewPSResourceGroupDeploymentWithUserTemplate,The following statement contains a magic number: PSResourceGroupDeployment expected = new PSResourceGroupDeployment()              {                  Mode = DeploymentMode.Incremental'                  DeploymentName = deploymentName'                  CorrelationId = "123"'                  Outputs = new Dictionary<string' DeploymentVariable>()                  {                      { "Variable1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Variable2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Variable3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  Parameters = new Dictionary<string' DeploymentVariable>()                  {                      { "Parameter1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Parameter2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Parameter3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  ProvisioningState = ProvisioningState.Succeeded.ToString()'                  ResourceGroupName = resourceGroupName'                  TemplateLink = new TemplateLink()                  {                      ContentVersion = "1.0"'                      Uri = "http://mytemplate.com"                  }'                  Timestamp = new DateTime(2014' 2' 13)              };
Magic Number,Microsoft.Azure.Commands.Resources.Test,NewAzureResourceGroupDeploymentCommandTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ResourceGroupDeployments\NewAzureResourceGroupDeploymentCommandTests.cs,CreatesNewPSResourceGroupDeploymentWithUserTemplate,The following statement contains a magic number: PSResourceGroupDeployment expected = new PSResourceGroupDeployment()              {                  Mode = DeploymentMode.Incremental'                  DeploymentName = deploymentName'                  CorrelationId = "123"'                  Outputs = new Dictionary<string' DeploymentVariable>()                  {                      { "Variable1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Variable2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Variable3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  Parameters = new Dictionary<string' DeploymentVariable>()                  {                      { "Parameter1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Parameter2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Parameter3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  ProvisioningState = ProvisioningState.Succeeded.ToString()'                  ResourceGroupName = resourceGroupName'                  TemplateLink = new TemplateLink()                  {                      ContentVersion = "1.0"'                      Uri = "http://mytemplate.com"                  }'                  Timestamp = new DateTime(2014' 2' 13)              };
Magic Number,Microsoft.Azure.Commands.Resources.Test,NewAzureResourceGroupDeploymentCommandTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ResourceGroupDeployments\NewAzureResourceGroupDeploymentCommandTests.cs,CreatesNewPSResourceGroupDeploymentWithUserTemplate,The following statement contains a magic number: PSResourceGroupDeployment expected = new PSResourceGroupDeployment()              {                  Mode = DeploymentMode.Incremental'                  DeploymentName = deploymentName'                  CorrelationId = "123"'                  Outputs = new Dictionary<string' DeploymentVariable>()                  {                      { "Variable1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Variable2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Variable3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  Parameters = new Dictionary<string' DeploymentVariable>()                  {                      { "Parameter1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Parameter2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Parameter3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  ProvisioningState = ProvisioningState.Succeeded.ToString()'                  ResourceGroupName = resourceGroupName'                  TemplateLink = new TemplateLink()                  {                      ContentVersion = "1.0"'                      Uri = "http://mytemplate.com"                  }'                  Timestamp = new DateTime(2014' 2' 13)              };
Magic Number,Microsoft.Azure.Commands.Resources.Test,NewAzureResourceGroupDeploymentCommandTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ResourceGroupDeployments\NewAzureResourceGroupDeploymentCommandTests.cs,CreatesNewPSResourceGroupDeploymentWithUserTemplateSpecificRollback,The following statement contains a magic number: PSResourceGroupDeployment expected = new PSResourceGroupDeployment()              {                  Mode = DeploymentMode.Incremental'                  DeploymentName = deploymentName'                  CorrelationId = "123"'                  Outputs = new Dictionary<string' DeploymentVariable>()                  {                      { "Variable1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Variable2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Variable3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  Parameters = new Dictionary<string' DeploymentVariable>()                  {                      { "Parameter1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Parameter2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Parameter3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  ProvisioningState = ProvisioningState.Succeeded.ToString()'                  ResourceGroupName = resourceGroupName'                  TemplateLink = new TemplateLink()                  {                      ContentVersion = "1.0"'                      Uri = "http://mytemplate.com"                  }'                  Timestamp = new DateTime(2014' 2' 13)'                  OnErrorDeployment = new OnErrorDeploymentExtended                  {                      Type = OnErrorDeploymentType.SpecificDeployment'                      DeploymentName = lastDeploymentName                  }              };
Magic Number,Microsoft.Azure.Commands.Resources.Test,NewAzureResourceGroupDeploymentCommandTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ResourceGroupDeployments\NewAzureResourceGroupDeploymentCommandTests.cs,CreatesNewPSResourceGroupDeploymentWithUserTemplateSpecificRollback,The following statement contains a magic number: PSResourceGroupDeployment expected = new PSResourceGroupDeployment()              {                  Mode = DeploymentMode.Incremental'                  DeploymentName = deploymentName'                  CorrelationId = "123"'                  Outputs = new Dictionary<string' DeploymentVariable>()                  {                      { "Variable1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Variable2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Variable3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  Parameters = new Dictionary<string' DeploymentVariable>()                  {                      { "Parameter1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Parameter2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Parameter3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  ProvisioningState = ProvisioningState.Succeeded.ToString()'                  ResourceGroupName = resourceGroupName'                  TemplateLink = new TemplateLink()                  {                      ContentVersion = "1.0"'                      Uri = "http://mytemplate.com"                  }'                  Timestamp = new DateTime(2014' 2' 13)'                  OnErrorDeployment = new OnErrorDeploymentExtended                  {                      Type = OnErrorDeploymentType.SpecificDeployment'                      DeploymentName = lastDeploymentName                  }              };
Magic Number,Microsoft.Azure.Commands.Resources.Test,NewAzureResourceGroupDeploymentCommandTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ResourceGroupDeployments\NewAzureResourceGroupDeploymentCommandTests.cs,CreatesNewPSResourceGroupDeploymentWithUserTemplateSpecificRollback,The following statement contains a magic number: PSResourceGroupDeployment expected = new PSResourceGroupDeployment()              {                  Mode = DeploymentMode.Incremental'                  DeploymentName = deploymentName'                  CorrelationId = "123"'                  Outputs = new Dictionary<string' DeploymentVariable>()                  {                      { "Variable1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Variable2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Variable3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  Parameters = new Dictionary<string' DeploymentVariable>()                  {                      { "Parameter1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Parameter2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Parameter3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  ProvisioningState = ProvisioningState.Succeeded.ToString()'                  ResourceGroupName = resourceGroupName'                  TemplateLink = new TemplateLink()                  {                      ContentVersion = "1.0"'                      Uri = "http://mytemplate.com"                  }'                  Timestamp = new DateTime(2014' 2' 13)'                  OnErrorDeployment = new OnErrorDeploymentExtended                  {                      Type = OnErrorDeploymentType.SpecificDeployment'                      DeploymentName = lastDeploymentName                  }              };
Magic Number,Microsoft.Azure.Commands.Resources.Test,NewAzureResourceGroupDeploymentCommandTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ResourceGroupDeployments\NewAzureResourceGroupDeploymentCommandTests.cs,CreatesNewPSResourceGroupDeploymentWithUserTemplateEmptyRollback,The following statement contains a magic number: PSResourceGroupDeployment expected = new PSResourceGroupDeployment()              {                  Mode = DeploymentMode.Incremental'                  DeploymentName = deploymentName'                  CorrelationId = "123"'                  Outputs = new Dictionary<string' DeploymentVariable>()                  {                      { "Variable1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Variable2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Variable3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  Parameters = new Dictionary<string' DeploymentVariable>()                  {                      { "Parameter1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Parameter2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Parameter3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  ProvisioningState = ProvisioningState.Succeeded.ToString()'                  ResourceGroupName = resourceGroupName'                  TemplateLink = new TemplateLink()                  {                      ContentVersion = "1.0"'                      Uri = "http://mytemplate.com"                  }'                  Timestamp = new DateTime(2014' 2' 13)'                  OnErrorDeployment = new OnErrorDeploymentExtended                  {                      Type = OnErrorDeploymentType.LastSuccessful'                  }              };
Magic Number,Microsoft.Azure.Commands.Resources.Test,NewAzureResourceGroupDeploymentCommandTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ResourceGroupDeployments\NewAzureResourceGroupDeploymentCommandTests.cs,CreatesNewPSResourceGroupDeploymentWithUserTemplateEmptyRollback,The following statement contains a magic number: PSResourceGroupDeployment expected = new PSResourceGroupDeployment()              {                  Mode = DeploymentMode.Incremental'                  DeploymentName = deploymentName'                  CorrelationId = "123"'                  Outputs = new Dictionary<string' DeploymentVariable>()                  {                      { "Variable1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Variable2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Variable3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  Parameters = new Dictionary<string' DeploymentVariable>()                  {                      { "Parameter1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Parameter2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Parameter3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  ProvisioningState = ProvisioningState.Succeeded.ToString()'                  ResourceGroupName = resourceGroupName'                  TemplateLink = new TemplateLink()                  {                      ContentVersion = "1.0"'                      Uri = "http://mytemplate.com"                  }'                  Timestamp = new DateTime(2014' 2' 13)'                  OnErrorDeployment = new OnErrorDeploymentExtended                  {                      Type = OnErrorDeploymentType.LastSuccessful'                  }              };
Magic Number,Microsoft.Azure.Commands.Resources.Test,NewAzureResourceGroupDeploymentCommandTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ResourceGroupDeployments\NewAzureResourceGroupDeploymentCommandTests.cs,CreatesNewPSResourceGroupDeploymentWithUserTemplateEmptyRollback,The following statement contains a magic number: PSResourceGroupDeployment expected = new PSResourceGroupDeployment()              {                  Mode = DeploymentMode.Incremental'                  DeploymentName = deploymentName'                  CorrelationId = "123"'                  Outputs = new Dictionary<string' DeploymentVariable>()                  {                      { "Variable1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Variable2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Variable3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  Parameters = new Dictionary<string' DeploymentVariable>()                  {                      { "Parameter1"' new DeploymentVariable() { Value = "true"' Type = "bool" } }'                      { "Parameter2"' new DeploymentVariable() { Value = "10"' Type = "int" } }'                      { "Parameter3"' new DeploymentVariable() { Value = "hello world"' Type = "string" } }                  }'                  ProvisioningState = ProvisioningState.Succeeded.ToString()'                  ResourceGroupName = resourceGroupName'                  TemplateLink = new TemplateLink()                  {                      ContentVersion = "1.0"'                      Uri = "http://mytemplate.com"                  }'                  Timestamp = new DateTime(2014' 2' 13)'                  OnErrorDeployment = new OnErrorDeploymentExtended                  {                      Type = OnErrorDeploymentType.LastSuccessful'                  }              };
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,ConstructsDynamicParameter,The following statement contains a magic number: Assert.Equal(2' dynamicParameter.Attributes.Count);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,ResolvesDuplicatedDynamicParameterName,The following statement contains a magic number: Assert.Equal(2' dynamicParameter.Attributes.Count);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,ResolvesDuplicatedDynamicParameterNameCaseInsensitive,The following statement contains a magic number: Assert.Equal(2' dynamicParameter.Attributes.Count);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,GetsDynamicParametersForTemplateFile,The following statement contains a magic number: Assert.Equal(7' result.Count);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,GetTemplateParametersFromObject,The following statement contains a magic number: templateParameterObject["int"] = 12;
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,GetTemplateParametersFromObject,The following statement contains a magic number: Assert.Equal(7' result.Count);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,GetTemplateParametersFromObject,The following statement contains a magic number: Assert.Equal(12' result["int"].Value);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,GetTemplateParametersFromObject,The following statement contains a magic number: Assert.Equal(2' objectValue.Count);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,GetTemplateParametersFromObject,The following statement contains a magic number: Assert.Equal(3' arrayValue.Length);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,GetTemplateParametersFromObject,The following statement contains a magic number: Assert.Equal("F"' arrayValue[2]);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,GetTemplateParametersFromFileMergesObjects,The following statement contains a magic number: Assert.Equal(7' result.Count);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,GetTemplateParametersFromFileMergesObjects,The following statement contains a magic number: Assert.Equal((System.Int64)12' result["int"].Value);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,GetTemplateParametersFromFileMergesObjects,The following statement contains a magic number: Assert.Equal(2' objectValue.Count);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,GetTemplateParametersFromFileMergesObjects,The following statement contains a magic number: Assert.Equal(3' arrayValue.Count);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,GetTemplateParametersFromFileMergesObjects,The following statement contains a magic number: Assert.Equal("F"' arrayValue[2].ToObject<string>());
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,GetTemplateParametersFromFileWithSchema2MergesObjects,The following statement contains a magic number: Assert.Equal(7' result.Count);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,GetTemplateParametersFromFileWithSchema2MergesObjects,The following statement contains a magic number: Assert.Equal(2' objectValue.Count);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,GetTemplateParametersFromFileWithSchema2MergesObjects,The following statement contains a magic number: Assert.Equal(3' arrayValue.Count);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,GalleryTemplatesClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\GalleryTemplatesClientTests.cs,GetTemplateParametersFromFileWithSchema2MergesObjects,The following statement contains a magic number: Assert.Equal("F"' arrayValue[2].ToObject<string>());
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupDeploymentWithDelay,The following statement contains a magic number: deploymentsMock.Setup(f => f.GetWithHttpMessagesAsync(                  parameters.ResourceGroupName'                  parameters.DeploymentName'                  null'                  new CancellationToken()))                  .Returns<string' string' Dictionary<string' List<string>>' CancellationToken>(                      async (getResourceGroupName' getDeploymentName' customHeaders' cancellationToken) =>                      {                          await Task.Delay(100' cancellationToken);                            if (deploymentNames.Contains(getDeploymentName))                          {                              return new AzureOperationResponse<DeploymentExtended>()                              {                                  Body = new DeploymentExtended(name: getDeploymentName' id: requestId)                                  {                                      Properties = new DeploymentPropertiesExtended(                                          mode: DeploymentMode.Incremental'                                          correlationId: "123"'                                          provisioningState: "Succeeded")'                                  }                              };                          }                            throw new CloudException(String.Format("Deployment '{0}' could not be found."' getDeploymentName));                      });
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupDeploymentWithDelay,The following statement contains a magic number: deploymentsMock.Setup(f => f.BeginCreateOrUpdateWithHttpMessagesAsync(                  parameters.ResourceGroupName'                  parameters.DeploymentName'                  It.IsAny<Deployment>()'                  null'                  new CancellationToken()))                  .Returns<string' string' Deployment' Dictionary<string' List<string>>' CancellationToken>(                      async (craeteResourceGroupName' createDeploymentName' createDeployment' customHeaders' cancellationToken) =>                      {                          await Task.Delay(500' cancellationToken);                            deploymentNames.Add(createDeploymentName);                            return new AzureOperationResponse<DeploymentExtended>()                          {                              Body = new DeploymentExtended(name: createDeploymentName' id: requestId)                              {                              }                          };                      });
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupDeploymentWithDelay,The following statement contains a magic number: deploymentsMock.Setup(f => f.CreateOrUpdateWithHttpMessagesAsync(                  parameters.ResourceGroupName'                  parameters.DeploymentName'                  It.IsAny<Deployment>()'                  null'                  new CancellationToken()))                  .Returns<string' string' Deployment' Dictionary<string' List<string>>' CancellationToken>(                      async (craeteResourceGroupName' createDeploymentName' createDeployment' customHeaders' cancellationToken) =>                      {                          await Task.Delay(10000' cancellationToken);                            deploymentNames.Add(createDeploymentName);                            return new AzureOperationResponse<DeploymentExtended>()                          {                              Body = new DeploymentExtended(name: createDeploymentName' id: requestId)                              {                              }                          };                      });
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,NewResourceGroupDeploymentWithDelay,The following statement contains a magic number: deploymentOperationsMock.Setup(f => f.ListWithHttpMessagesAsync(                  parameters.ResourceGroupName'                  parameters.DeploymentName'                  null'                  null'                  new CancellationToken()))                  .Returns<string' string' int?' Dictionary<string' List<string>>' CancellationToken>(                      async (getResourceGroupName' getDeploymentName' top' customHeaders' cancellationToken) =>                      {                          await Task.Delay(100' cancellationToken);                            if (deploymentNames.Contains(getDeploymentName))                          {                              return new AzureOperationResponse<IPage<DeploymentOperation>>()                              {                                  Body = GetPagableType(                                      new List<DeploymentOperation>()                                      {                                          operationQueue.Dequeue()                                      })                              };                          }                            throw new CloudException(String.Format("Deployment '{0}' could not be found."' getDeploymentName));                      });
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroups,The following statement contains a magic number: ResourceGroup resourceGroup2 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 2);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroups,The following statement contains a magic number: ResourceGroup resourceGroup3 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 3);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroups,The following statement contains a magic number: ResourceGroup resourceGroup4 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 4);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroups,The following statement contains a magic number: Assert.Equal(4' actual.Count);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroups,The following statement contains a magic number: Assert.Equal(resourceGroup3.Name' actual[2].ResourceGroupName);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroups,The following statement contains a magic number: Assert.Equal(resourceGroup4.Name' actual[3].ResourceGroupName);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroupsWithDetails,The following statement contains a magic number: ResourceGroup resourceGroup2 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 2);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroupsWithDetails,The following statement contains a magic number: ResourceGroup resourceGroup3 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 3);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroupsWithDetails,The following statement contains a magic number: ResourceGroup resourceGroup4 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 4);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroupsWithDetails,The following statement contains a magic number: Assert.Equal(4' actual.Count);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroupsWithDetails,The following statement contains a magic number: Assert.Equal(resourceGroup3.Name' actual[2].ResourceGroupName);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsAllResourceGroupsWithDetails,The following statement contains a magic number: Assert.Equal(resourceGroup4.Name' actual[3].ResourceGroupName);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTags,The following statement contains a magic number: ResourceGroup resourceGroup2 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 2' tags: tag2);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTags,The following statement contains a magic number: ResourceGroup resourceGroup3 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 3' tags: tag3);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTags,The following statement contains a magic number: ResourceGroup resourceGroup4 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 4);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTags,The following statement contains a magic number: Assert.Equal(2' groups2.Count);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTagsWithDetails,The following statement contains a magic number: ResourceGroup resourceGroup2 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 2' tags: tag2);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTagsWithDetails,The following statement contains a magic number: ResourceGroup resourceGroup3 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 3' tags: tag3);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTagsWithDetails,The following statement contains a magic number: ResourceGroup resourceGroup4 = new ResourceGroup(location: resourceGroupLocation' name: resourceGroupName + 4);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,GetsResourceGroupsFilteredByTagsWithDetails,The following statement contains a magic number: Assert.Equal(2' groups2.Count);
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,CancelsActiveDeployment,The following statement contains a magic number: var listResult = new List<DeploymentExtended>()              {                  new DeploymentExtended(                      name: deploymentName + 1'                      properties: new DeploymentPropertiesExtended(                          mode: DeploymentMode.Incremental'                          templateLink: new TemplateLink()                          {                              Uri = "http://microsoft1.com"                          }'                          provisioningState: "Succeeded"))'                  new DeploymentExtended(                      name: deploymentName + 2'                      properties: new DeploymentPropertiesExtended(                          mode: DeploymentMode.Incremental'                          templateLink: new TemplateLink()                          {                              Uri = "http://microsoft1.com"                          }'                          provisioningState: "Failed"))'                  new DeploymentExtended(                      name: deploymentName + 3'                      properties: new DeploymentPropertiesExtended(                          mode: DeploymentMode.Incremental'                          templateLink: new TemplateLink()                          {                              Uri = "http://microsoft1.com"                          }'                          provisioningState: "Running"))              };
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,CancelsActiveDeployment,The following statement contains a magic number: var listResult = new List<DeploymentExtended>()              {                  new DeploymentExtended(                      name: deploymentName + 1'                      properties: new DeploymentPropertiesExtended(                          mode: DeploymentMode.Incremental'                          templateLink: new TemplateLink()                          {                              Uri = "http://microsoft1.com"                          }'                          provisioningState: "Succeeded"))'                  new DeploymentExtended(                      name: deploymentName + 2'                      properties: new DeploymentPropertiesExtended(                          mode: DeploymentMode.Incremental'                          templateLink: new TemplateLink()                          {                              Uri = "http://microsoft1.com"                          }'                          provisioningState: "Failed"))'                  new DeploymentExtended(                      name: deploymentName + 3'                      properties: new DeploymentPropertiesExtended(                          mode: DeploymentMode.Incremental'                          templateLink: new TemplateLink()                          {                              Uri = "http://microsoft1.com"                          }'                          provisioningState: "Running"))              };
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,CancelsActiveDeployment,The following statement contains a magic number: deploymentsMock.Setup(f => f.CancelWithHttpMessagesAsync(                  resourceGroupName'                  It.IsIn(new[] { deploymentName + 1' deploymentName + 2' deploymentName + 3 })'                  null'                  It.IsAny<CancellationToken>()))                  .Returns(Task.Factory.StartNew(() => new Rest.Azure.AzureOperationResponse()));
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,CancelsActiveDeployment,The following statement contains a magic number: deploymentsMock.Setup(f => f.CancelWithHttpMessagesAsync(                  resourceGroupName'                  It.IsIn(new[] { deploymentName + 1' deploymentName + 2' deploymentName + 3 })'                  null'                  It.IsAny<CancellationToken>()))                  .Returns(Task.Factory.StartNew(() => new Rest.Azure.AzureOperationResponse()));
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,CancelsActiveDeployment,The following statement contains a magic number: deploymentsMock.Verify(f => f.CancelWithHttpMessagesAsync(resourceGroupName' deploymentName + 3' null' new CancellationToken())' Times.Once());
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,SerializeHashtableProperlyHandlesAllDataTypes,The following statement contains a magic number: hashtable.Add("key4"' new DateTime(2014' 05' 08));
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,SerializeHashtableProperlyHandlesAllDataTypes,The following statement contains a magic number: hashtable.Add("key4"' new DateTime(2014' 05' 08));
Magic Number,Microsoft.Azure.Commands.Resources.Test.Models,ResourceClientTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\Models.ResourceGroups\ResourceClientTests.cs,SerializeHashtableProperlyHandlesAllDataTypes,The following statement contains a magic number: hashtable.Add("key4"' new DateTime(2014' 05' 08));
Magic Number,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,TestGetAzureRmPolicyAliasByNamespace,The following statement contains a magic number: this.commandRuntimeMock                  .Setup(m => m.WriteObject(It.IsAny<object>()' It.IsAny<bool>()))                  .Callback((object obj' bool listAll) => { this.AssertResult(obj' listResult' 3); });
Magic Number,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,TestGetAzureRmPolicyAliasByNamespace,The following statement contains a magic number: this.commandRuntimeMock                  .Setup(m => m.WriteObject(It.IsAny<object>()' It.IsAny<bool>()))                  .Callback((object obj' bool listAll) => { this.AssertResult(obj' listResult' 2); });
Magic Number,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,TestGetAzureRmPolicyAliasByNamespace,The following statement contains a magic number: this.commandRuntimeMock                  .Setup(m => m.WriteObject(It.IsAny<object>()' It.IsAny<bool>()))                  .Callback((object obj' bool listAll) => { this.AssertResult(obj' listResult' 2); });
Magic Number,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,TestGetAzureRmPolicyAliasByResourceType,The following statement contains a magic number: this.commandRuntimeMock                  .Setup(m => m.WriteObject(It.IsAny<object>()' It.IsAny<bool>()))                  .Callback((object obj' bool listAll) => { this.AssertResult(obj' listResult' 3); });
Magic Number,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,TestGetAzureRmPolicyAliasByResourceType,The following statement contains a magic number: this.commandRuntimeMock                  .Setup(m => m.WriteObject(It.IsAny<object>()' It.IsAny<bool>()))                  .Callback((object obj' bool listAll) => { this.AssertResult(obj' listResult' 3); });
Magic Number,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,TestGetAzureRmPolicyAliasAllParameters,The following statement contains a magic number: this.commandRuntimeMock                  .Setup(m => m.WriteObject(It.IsAny<object>()' It.IsAny<bool>()))                  .Callback((object obj' bool listAll) => { this.AssertResult(obj' listResult' 2); });
Magic Number,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,TestGetAzureRmPolicyAliasAllParameters,The following statement contains a magic number: this.commandRuntimeMock                  .Setup(m => m.WriteObject(It.IsAny<object>()' It.IsAny<bool>()))                  .Callback((object obj' bool listAll) => { this.AssertResult(obj' listResult' 3); });
Magic Number,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,TestGetAzureRmPolicyAliasAllParameters,The following statement contains a magic number: this.commandRuntimeMock                  .Setup(m => m.WriteObject(It.IsAny<object>()' It.IsAny<bool>()))                  .Callback((object obj' bool listAll) => { this.AssertResult(obj' listResult' 4); });
Magic Number,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,TestGetAzureRmPolicyAliasAllParameters,The following statement contains a magic number: this.commandRuntimeMock                  .Setup(m => m.WriteObject(It.IsAny<object>()' It.IsAny<bool>()))                  .Callback((object obj' bool listAll) => { this.AssertResult(obj' listResult' 4); });
Magic Number,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,PolicyAliasTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\PolicyAliasTests.cs,TestGetAzureRmPolicyAliasAllParameters,The following statement contains a magic number: this.commandRuntimeMock                  .Setup(m => m.WriteObject(It.IsAny<object>()' It.IsAny<bool>()))                  .Callback((object obj' bool listAll) => { this.AssertResult(obj' listResult' 6); });
Magic Number,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,RoleAssignmentTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\RoleAssignmentTests.cs,RaUserPermissions,The following statement contains a magic number: controllerAdmin.RunPsTestWorkflow(                      _logger'                      // scriptBuilder                      () =>                      {                          userName = TestUtilities.GenerateName("aduser");                          userPass = TestUtilities.GenerateName("adpass") + "0#$";                            var upn = userName + "@" + controllerAdmin.UserDomain;                            var parameter = new UserCreateParameters                          {                              UserPrincipalName = upn'                              DisplayName = userName'                              AccountEnabled = true'                              MailNickname = userName + "test"'                              PasswordProfile = new PasswordProfile                              {                                  ForceChangePasswordNextLogin = false'                                  Password = userPass                              }                          };                            newUser = controllerAdmin.GraphClient.Users.Create(parameter);                          newUserObjectId = newUser.ObjectId;                            resourceGroup = controllerAdmin.ResourceManagementClient.ResourceGroups                                              .List()                                              .First();                        // Wait to allow newly created object changes to propagate                      TestMockSupport.Delay(20000);                            return new[]                          {                          string.Format(                              "CreateRoleAssignment '{0}' '{1}' '{2}' '{3}'"'                                  roleAssignmentId'                                  newUserObjectId'                                  roleDefinitionName'                                  resourceGroup.Name)                          };                      }'                      // cleanup                      null'                      MethodBase.GetCurrentMethod().ReflectedType?.ToString()'                      MethodBase.GetCurrentMethod().Name + "_Setup");
Magic Number,Microsoft.Azure.Commands.Resources.Test.ScenarioTests,RoleAssignmentTests,D:\research\architectureSmells\repos\Azure_azure-powershell\src\Resources\Resources.Test\ScenarioTests\RoleAssignmentTests.cs,RaUserPermissions,The following statement contains a magic number: controllerUser.RunPsTestWorkflow(                      _logger'                      // scriptBuilder                      () =>                      {                      // Wait to allow for the role assignment to propagate                      TestMockSupport.Delay(20000);                            return new[]                          {                          string.Format(                              "Test-RaUserPermissions '{0}' '{1}'"'                              resourceGroup.Name'                              userPermission)                          };                      }'                      // cleanup                      null'                      MethodBase.GetCurrentMethod().ReflectedType?.ToString()'                      MethodBase.GetCurrentMethod().Name + "_Test");
