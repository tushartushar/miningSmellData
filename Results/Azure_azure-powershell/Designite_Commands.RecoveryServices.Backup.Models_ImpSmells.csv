Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models,LongTermRetentionPolicy,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices.Backup\Commands.RecoveryServices.Backup.Models\CommonModels\PolicyRetentionObjects.cs,Validate,Cyclomatic complexity of the method is 10
Long Identifier,Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models,PolicyConstants,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices.Backup\Commands.RecoveryServices.Backup.Models\CommonModels\Utils.cs,,The length of the parameter MaxAllowedRetentionDurationCount is 32.
Long Identifier,Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models,PolicyConstants,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices.Backup\Commands.RecoveryServices.Backup.Models\CommonModels\Utils.cs,,The length of the parameter MaxAllowedRetentionDurationCountWeeklySql is 41.
Long Identifier,Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models,PolicyConstants,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices.Backup\Commands.RecoveryServices.Backup.Models\CommonModels\Utils.cs,,The length of the parameter MaxAllowedRetentionDurationCountMonthlySql is 42.
Long Identifier,Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models,PolicyConstants,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices.Backup\Commands.RecoveryServices.Backup.Models\CommonModels\Utils.cs,,The length of the parameter MaxAllowedRetentionDurationCountYearlySql is 41.
Complex Conditional,Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models,SimpleRetentionPolicy,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices.Backup\Commands.RecoveryServices.Backup.Models\CommonModels\PolicyRetentionObjects.cs,Validate,The conditional expression  "(RetentionDurationType == RetentionDurationType.Days) ||                  (RetentionDurationType == RetentionDurationType.Weeks &&                      (RetentionCount <= 0 || RetentionCount > weeklyLimit)) ||                  (RetentionDurationType == RetentionDurationType.Months &&                      (RetentionCount <= 0 || RetentionCount > monthlyLimit)) ||                  (RetentionDurationType == RetentionDurationType.Years &&                      (RetentionCount <= 0 || RetentionCount > yearlyLimit))"  is complex.
Complex Conditional,Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models,LongTermRetentionPolicy,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices.Backup\Commands.RecoveryServices.Backup.Models\CommonModels\PolicyRetentionObjects.cs,Validate,The conditional expression  "IsDailyScheduleEnabled == false && IsWeeklyScheduleEnabled == false &&                  IsMonthlyScheduleEnabled == false && IsYearlyScheduleEnabled == false"  is complex.
Complex Conditional,Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models,SimpleSchedulePolicy,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices.Backup\Commands.RecoveryServices.Backup.Models\CommonModels\PolicyScheduleObjects.cs,Validate,The conditional expression  "ScheduleRunTimes == null || ScheduleRunTimes.Count != 1 ||                  ScheduleRunTimes[0].Minute % 30 != 0 ||                  ScheduleRunTimes[0].Second != 0 ||                  ScheduleRunTimes[0].Millisecond != 0"  is complex.
Magic Number,Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models,IdUtils,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices.Backup\Commands.RecoveryServices.Backup.Models\CommonModels\Utils.cs,GetResourceGroupName,The following statement contains a magic number: if (match.Success)              {                  var vmUniqueName = match.Groups["containersName"];                  if (vmUniqueName != null && vmUniqueName.Success)                  {                      var vmNameInfo = vmUniqueName.Value.Split(NameDelimiter.ToCharArray());                      if (vmNameInfo.Length == 3)                      {                          return vmNameInfo[1];                      }                      else if (vmNameInfo.Length == 4)                      {                          return vmNameInfo[2];                      }                      else                      {                          throw new Exception("Container name not in the expected format");                      }                  }              }
Magic Number,Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models,IdUtils,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices.Backup\Commands.RecoveryServices.Backup.Models\CommonModels\Utils.cs,GetResourceGroupName,The following statement contains a magic number: if (match.Success)              {                  var vmUniqueName = match.Groups["containersName"];                  if (vmUniqueName != null && vmUniqueName.Success)                  {                      var vmNameInfo = vmUniqueName.Value.Split(NameDelimiter.ToCharArray());                      if (vmNameInfo.Length == 3)                      {                          return vmNameInfo[1];                      }                      else if (vmNameInfo.Length == 4)                      {                          return vmNameInfo[2];                      }                      else                      {                          throw new Exception("Container name not in the expected format");                      }                  }              }
Magic Number,Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models,IdUtils,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices.Backup\Commands.RecoveryServices.Backup.Models\CommonModels\Utils.cs,GetResourceGroupName,The following statement contains a magic number: if (match.Success)              {                  var vmUniqueName = match.Groups["containersName"];                  if (vmUniqueName != null && vmUniqueName.Success)                  {                      var vmNameInfo = vmUniqueName.Value.Split(NameDelimiter.ToCharArray());                      if (vmNameInfo.Length == 3)                      {                          return vmNameInfo[1];                      }                      else if (vmNameInfo.Length == 4)                      {                          return vmNameInfo[2];                      }                      else                      {                          throw new Exception("Container name not in the expected format");                      }                  }              }
Magic Number,Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models,IdUtils,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices.Backup\Commands.RecoveryServices.Backup.Models\CommonModels\Utils.cs,GetValueByName,The following statement contains a magic number: var parts = id.Split(IdDelimiter.ToArray()' StringSplitOptions.RemoveEmptyEntries)                  .Select((x' i) => new { Index = i' Value = x })                  .GroupBy(x => x.Index % 2)                  .ToList();
Magic Number,Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models,IdUtils,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices.Backup\Commands.RecoveryServices.Backup.Models\CommonModels\Utils.cs,GetVmNameFromContainerUri,The following statement contains a magic number: return uri.Split(NameDelimiter.ToCharArray())[4];
Magic Number,Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models,SimpleSchedulePolicy,C:\repos\Azure_azure-powershell\src\ResourceManager\RecoveryServices.Backup\Commands.RecoveryServices.Backup.Models\CommonModels\PolicyScheduleObjects.cs,Validate,The following statement contains a magic number: if (ScheduleRunTimes == null || ScheduleRunTimes.Count != 1 ||                  ScheduleRunTimes[0].Minute % 30 != 0 ||                  ScheduleRunTimes[0].Second != 0 ||                  ScheduleRunTimes[0].Millisecond != 0)              {                  throw new ArgumentException(Resources.InvalidScheduleTimeInScheduleException);              }
