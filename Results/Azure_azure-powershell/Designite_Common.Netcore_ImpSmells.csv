Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Microsoft.WindowsAzure.Commands.Common,AzureDataCmdlet,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\AzureDataCmdlet.cs,ConfirmAction,The method has 5 parameters. Parameters: force' continueMessage' processMessage' target' action
Long Parameter List,Microsoft.WindowsAzure.Commands.Utilities.Common,AzurePSCmdlet,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\AzurePSCmdlet.cs,ConfirmAction,The method has 5 parameters. Parameters: force' continueMessage' processMessage' target' action
Long Parameter List,Microsoft.WindowsAzure.Commands.Utilities.Common,AzurePSCmdlet,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\AzurePSCmdlet.cs,ConfirmAction,The method has 6 parameters. Parameters: force' continueMessage' processMessage' target' action' useShouldContinue
Long Identifier,Microsoft.WindowsAzure.Commands.Common,ApiConstants,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Constants.cs,,The length of the parameter VSDebuggerCausalityDataHeaderName is 33.
Long Identifier,Microsoft.Azure.Commands.Common,AzureLongRunningJob<T>,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\AzureLongRunningJob.cs,InvokeShouldMethodAndWaitForResults,The length of the parameter closureSafeExceptionThrownOnCmdletThread is 40.
Long Statement,Microsoft.WindowsAzure.Commands.Common,Validate,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Utilities\Validate.cs,ValidateDirectoryFull,The length of the statement  "            ValidateDirectoryExists(directoryNameOnDisk' string.Format(Resources.PathDoesNotExistForElement' directoryName' directoryNameOnDisk)); " is 134.
Long Statement,Microsoft.Azure.Commands.Common,AzureLongRunningJob<T>,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\AzureLongRunningJob.cs,CopyCmdlet,The length of the statement  "            foreach (var field in returnType.GetFields(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.DeclaredOnly)) " is 141.
Long Statement,Microsoft.Azure.Commands.Common,AzureLongRunningJob<T>,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\AzureLongRunningJob.cs,UnblockJob,The length of the statement  "                    WriteError(new ErrorRecord(new InvalidOperationException(GetShouldMethodFailureReaon(_cmdlet' stream)' exception)' "InvalidBackgroundOperation"' ErrorCategory.InvalidOperation' this)); " is 184.
Long Statement,Microsoft.Azure.Commands.Common,AzureLongRunningJob<T>,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\AzureLongRunningJob.cs,CanHandleShouldProcessLocally,The length of the statement  "            return !(_cmdlet.MyInvocation.BoundParameters.ContainsKey("Confirm") && (bool)_cmdlet.MyInvocation.BoundParameters["Confirm"]) && " is 129.
Long Statement,Microsoft.Azure.Commands.Common,AzureLongRunningJob<T>,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\AzureLongRunningJob.cs,CanHandleShouldProcessLocally,The length of the statement  "                !(_cmdlet.MyInvocation.BoundParameters.ContainsKey("WhatIf") && (bool)_cmdlet.MyInvocation.BoundParameters["WhatIf"]) && " is 120.
Long Statement,Microsoft.Azure.Commands.Common,AzureLongRunningJob<T>,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\AzureLongRunningJob.cs,ShouldProcess,The length of the statement  "            bool result = InvokeShouldMethodAndWaitForResults(cmdlet => cmdlet.ShouldProcess(verboseDescription' verboseWarning' caption' out closureShouldProcessReason)' " is 158.
Long Statement,Microsoft.Azure.Commands.Common,AzureLongRunningJob<T>,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\AzureLongRunningJob.cs,InvokeShouldMethodAndWaitForResults,The length of the statement  "                                if (closureSafeExceptionThrownOnCmdletThread == null) // stateChangedEventHandler didn't set the results?  = ok to clobber results? " is 131.
Long Statement,Microsoft.WindowsAzure.Commands.Utilities.Common,CmdletExtensions,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Extensions\CmdletExtensions.cs,ExecuteCmdletInPipeline,The length of the statement  "            using (System.Management.Automation.PowerShell powershell = System.Management.Automation.PowerShell.Create(RunspaceMode.NewRunspace)) " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.Utilities.Common,CmdletExtensions,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Extensions\CmdletExtensions.cs,ExecuteCmdletWithExceptionInPipeline,The length of the statement  "            using (System.Management.Automation.PowerShell powershell = System.Management.Automation.PowerShell.Create(RunspaceMode.NewRunspace)) " is 133.
Long Statement,Microsoft.WindowsAzure.Commands.Utilities.Common,CmdletExtensions,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Extensions\CmdletExtensions.cs,ExecuteScript,The length of the statement  "            using (System.Management.Automation.PowerShell powershell = System.Management.Automation.PowerShell.Create(RunspaceMode.CurrentRunspace)) " is 137.
Long Statement,Microsoft.WindowsAzure.Commands.Utilities.Common,CmdletExtensions,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Extensions\CmdletExtensions.cs,EnableDataCollection,The length of the statement  "            PropertyInfo dynField = (typeof(AzurePSCmdlet)).GetProperty("_dataCollectionProfile"' BindingFlags.NonPublic | BindingFlags.Instance); " is 134.
Long Statement,Microsoft.WindowsAzure.Commands.Utilities.Common,CmdletExtensions,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Extensions\CmdletExtensions.cs,DisableDataCollection,The length of the statement  "            PropertyInfo dynField = (typeof(AzurePSCmdlet)).GetProperty("_dataCollectionProfile"' BindingFlags.NonPublic | BindingFlags.Instance); " is 134.
Long Statement,Microsoft.WindowsAzure.Commands.Utilities.Common,GeneralUtilities,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Utilities\GeneralUtilities.cs,GetHttpResponseLog,The length of the statement  "            httpResponseLog.AppendLine(string.Format("============================ HTTP RESPONSE ============================{0}"' Environment.NewLine)); " is 141.
Long Statement,Microsoft.WindowsAzure.Commands.Utilities.Common,GeneralUtilities,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Utilities\GeneralUtilities.cs,GetHttpRequestLog,The length of the statement  "            httpRequestLog.AppendLine(string.Format("============================ HTTP REQUEST ============================{0}"' Environment.NewLine)); " is 139.
Long Statement,Microsoft.WindowsAzure.Commands.Utilities.Common,GeneralUtilities,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Utilities\GeneralUtilities.cs,ClearCurrentStorageAccount,The length of the statement  "                    RMProfile.DefaultContext.Subscription != null && RMProfile.DefaultContext.Subscription.IsPropertySet(AzureSubscription.Property.StorageAccount)) " is 144.
Long Statement,Microsoft.WindowsAzure.Commands.Utilities.Common,PowerShellUtilities,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Utilities\PowerShellUtilities.cs,RemoveModuleFromPSModulePath,The length of the statement  "            EditPSModulePath(list => list.Where(p => !p.Equals(modulePath' StringComparison.OrdinalIgnoreCase))' EnvironmentVariableTarget.Process); " is 136.
Complex Conditional,Microsoft.WindowsAzure.Commands.Common,JsonUtilities,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Utilities\JsonUtilities.cs,Patch,The conditional expression  "originalJson != null && originalJson.Type == JTokenType.Object &&                  patchJson != null && patchJson.Type == JTokenType.Object"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.Common,JsonUtilities,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Utilities\JsonUtilities.cs,Patch,The conditional expression  "originalJson != null && originalJson.Type == JTokenType.Array &&                  patchJson != null && patchJson.Type == JTokenType.Array"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.Common,JsonUtilities,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Utilities\JsonUtilities.cs,PatchJObject,The conditional expression  "originalJson != null && originalJson.Type == JTokenType.Object &&                          patchJson != null && patchJson.Type == JTokenType.Object"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.Common,JsonUtilities,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Utilities\JsonUtilities.cs,PatchJObject,The conditional expression  "originalJson != null && originalJson.Type == JTokenType.Array &&                          patchJson != null && patchJson.Type == JTokenType.Array"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.Utilities.Common,AzurePSCmdlet,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\AzurePSCmdlet.cs,CheckIfInteractive,The conditional expression  "this.Host == null ||                  this.Host.UI == null ||                  this.Host.UI.RawUI == null ||                  Environment.GetCommandLineArgs().Any(s =>                      s.Equals("-NonInteractive"' StringComparison.OrdinalIgnoreCase))"  is complex.
Complex Conditional,Microsoft.WindowsAzure.Commands.Utilities.Common,GeneralUtilities,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Utilities\GeneralUtilities.cs,ClearCurrentStorageAccount,The conditional expression  "RMProfile != null && RMProfile.DefaultContext != null &&                      RMProfile.DefaultContext.Subscription != null && RMProfile.DefaultContext.Subscription.IsPropertySet(AzureSubscription.Property.StorageAccount)"  is complex.
Virtual Method Call from Constructor,Microsoft.Azure.Commands.Common,AzureLongRunningJob<T>,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\AzureLongRunningJob.cs,AzureLongRunningJob,The constructor "AzureLongRunningJob" calls a virtual method "GetJobRuntime".
Empty Catch Block,Microsoft.WindowsAzure.Commands.Common,MetricHelper,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\MetricHelper.cs,FlushMetric,The method has an empty catch block.
Empty Catch Block,Microsoft.WindowsAzure.Commands.Common,MetricHelper,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\MetricHelper.cs,GenerateSha256HashString,The method has an empty catch block.
Empty Catch Block,Microsoft.WindowsAzure.Commands.Common,Validate,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Utilities\Validate.cs,ValidateDnsDoesNotExist,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.Commands.Common,AzureLongRunningJob<T>,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\AzureLongRunningJob.cs,RunJob,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.Commands.Common,AzureLongRunningJob<T>,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\AzureLongRunningJob.cs,RunJob,The method has an empty catch block.
Empty Catch Block,Microsoft.WindowsAzure.Commands.Utilities.Common,AzurePSCmdlet,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\AzurePSCmdlet.cs,RecordDebugMessages,The method has an empty catch block.
Empty Catch Block,Microsoft.WindowsAzure.Commands.Utilities.Common,AzurePSCmdlet,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\AzurePSCmdlet.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Microsoft.WindowsAzure.Commands.Utilities.Common,CmdletExtensions,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Extensions\CmdletExtensions.cs,SafeCopyValue,The method has an empty catch block.
Empty Catch Block,Microsoft.WindowsAzure.Commands.Utilities.Common,CmdletExtensions,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Extensions\CmdletExtensions.cs,SafeCopyValue,The method has an empty catch block.
Empty Catch Block,Microsoft.WindowsAzure.Commands.Utilities.Common,CmdletExtensions,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Extensions\CmdletExtensions.cs,SafeCopyParameterSet,The method has an empty catch block.
Empty Catch Block,Microsoft.WindowsAzure.Commands.Utilities.Common,CmdletExtensions,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Extensions\CmdletExtensions.cs,SafeAddToJobRepository,The method has an empty catch block.
Empty Catch Block,Microsoft.WindowsAzure.Commands.Utilities.Common,GeneralUtilities,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Utilities\GeneralUtilities.cs,DownloadFile,The method has an empty catch block.
Empty Catch Block,Microsoft.Azure.ServiceManagemenet.Common.Models,RecordingTracingInterceptor,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\RecordingTracingInterceptor.cs,RemoveFromContext,The method has an empty catch block.
Magic Number,Microsoft.WindowsAzure.Commands.Utilities.Common,PowerShellUtilities,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Utilities\PowerShellUtilities.cs,ConstructPSObject,The following statement contains a magic number: Debug.Assert(args.Length % 2 == 0' "The parameter args length must be even number");
Magic Number,Microsoft.WindowsAzure.Commands.Utilities.Common,PowerShellUtilities,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Utilities\PowerShellUtilities.cs,ConstructPSObject,The following statement contains a magic number: for (int i = 0' j = 0; i < args.Length / 2; i++' j += 2)              {                  outputObject.Properties.Add(new PSNoteProperty(args[j].ToString()' args[j + 1]));              }
Magic Number,Microsoft.WindowsAzure.Commands.Utilities.Common,PowerShellUtilities,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Utilities\PowerShellUtilities.cs,ConstructPSObject,The following statement contains a magic number: for (int i = 0' j = 0; i < args.Length / 2; i++' j += 2)              {                  outputObject.Properties.Add(new PSNoteProperty(args[j].ToString()' args[j + 1]));              }
Magic Number,Microsoft.Azure.Commands.Common.Serialization,ModelConversionExtensions,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Serialization\ModelConversionExtensions.cs,ConvertAccountType,The following statement contains a magic number: switch(legacyType)              {                  case 0:                      result = AzureAccount.AccountType.Certificate;                      break;                  case 1:                      result = AzureAccount.AccountType.User;                      break;                  case 2:                      result = AzureAccount.AccountType.ServicePrincipal;                      break;                  case 3:                      result = AzureAccount.AccountType.AccessToken;                      break;                  default:                      result = AzureAccount.AccountType.User;                      break;              }
Magic Number,Microsoft.Azure.Commands.Common.Serialization,ModelConversionExtensions,C:\repos\Azure_azure-powershell\src\Common\Commands.Common\Serialization\ModelConversionExtensions.cs,ConvertAccountType,The following statement contains a magic number: switch(legacyType)              {                  case 0:                      result = AzureAccount.AccountType.Certificate;                      break;                  case 1:                      result = AzureAccount.AccountType.User;                      break;                  case 2:                      result = AzureAccount.AccountType.ServicePrincipal;                      break;                  case 3:                      result = AzureAccount.AccountType.AccessToken;                      break;                  default:                      result = AzureAccount.AccountType.User;                      break;              }
