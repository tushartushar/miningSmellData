Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.Azure.Commands.PowerBI,ResumeAzurePowerBIEmbeddedCapacity,D:\research\architectureSmells\repos\Azure_azure-powershell\src\PowerBIEmbedded\PowerBI\Commands\ResumeAzureRmPowerBIEmbeddedCapacity.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Azure.Commands.PowerBI,UpdateAzurePowerBIEmbeddedCapacity,D:\research\architectureSmells\repos\Azure_azure-powershell\src\PowerBIEmbedded\PowerBI\Commands\UpdateAzureRmPowerBIEmbeddedCapacity.cs,ExecuteCmdlet,Cyclomatic complexity of the method is 9
Long Parameter List,Microsoft.Azure.Commands.PowerBI.Models,PowerBIClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\PowerBIEmbedded\PowerBI\Models\PowerBIClient.cs,CreateOrUpdateCapacity,The method has 7 parameters. Parameters: resourceGroupName' capacityName' location' skuName' customTags' administrator' existingCapacity
Long Identifier,Microsoft.Azure.Commands.PowerBI.Models,PowerBICmdletBase,D:\research\architectureSmells\repos\Azure_azure-powershell\src\PowerBIEmbedded\PowerBI\Models\PowerBICmdletBase.cs,,The length of the parameter filesystemRequestTimeoutInMinutes is 33.
Long Statement,Microsoft.Azure.Commands.PowerBI,NewPowerBIEmbeddedCapacity,D:\research\architectureSmells\repos\Azure_azure-powershell\src\PowerBIEmbedded\PowerBI\Commands\NewAzureRmPowerBIEmbeddedCapacity.cs,ExecuteCmdlet,The length of the statement  "                var createdCapacity = PowerBIClient.CreateOrUpdateCapacity(ResourceGroupName' Name' Location' Sku' Tag' Administrator' null); " is 125.
Long Statement,Microsoft.Azure.Commands.PowerBI,UpdateAzurePowerBIEmbeddedCapacity,D:\research\architectureSmells\repos\Azure_azure-powershell\src\PowerBIEmbedded\PowerBI\Commands\UpdateAzureRmPowerBIEmbeddedCapacity.cs,ExecuteCmdlet,The length of the statement  "                    throw new InvalidOperationException(string.Format(Resources.InvalidSku' Sku' String.Join("'"' availableSkus.Value.Select(v => v.Sku.Name)))); " is 141.
Long Statement,Microsoft.Azure.Commands.PowerBI,UpdateAzurePowerBIEmbeddedCapacity,D:\research\architectureSmells\repos\Azure_azure-powershell\src\PowerBIEmbedded\PowerBI\Commands\UpdateAzureRmPowerBIEmbeddedCapacity.cs,ExecuteCmdlet,The length of the statement  "                PSPowerBIEmbeddedCapacity updateCapacity = PowerBIClient.CreateOrUpdateCapacity(resourceGroupName' capacityName' location' Sku' Tag' Administrator' currentCapacity); " is 165.
Long Statement,Microsoft.Azure.Commands.PowerBI.Models,PowerBIClient,D:\research\architectureSmells\repos\Azure_azure-powershell\src\PowerBIEmbedded\PowerBI\Models\PowerBIClient.cs,TestCapacity,The length of the statement  "                if ((ex.Response != null && ex.Response.StatusCode == HttpStatusCode.NotFound) || ex.Message.Contains(string.Format(Properties.Resources.FailedToDiscoverResourceGroup' capacityName' " is 181.
Complex Conditional,Microsoft.Azure.Commands.PowerBI,NewPowerBIEmbeddedCapacity,D:\research\architectureSmells\repos\Azure_azure-powershell\src\PowerBIEmbedded\PowerBI\Commands\NewAzureRmPowerBIEmbeddedCapacity.cs,ExecuteCmdlet,The conditional expression  "ex.Body != null && !string.IsNullOrEmpty(ex.Body.Code) && ex.Body.Code == "ResourceNotFound" ||                          ex.Message.Contains("ResourceNotFound")"  is complex.
Complex Conditional,Microsoft.Azure.Commands.PowerBI,NewPowerBIEmbeddedCapacity,D:\research\architectureSmells\repos\Azure_azure-powershell\src\PowerBIEmbedded\PowerBI\Commands\NewAzureRmPowerBIEmbeddedCapacity.cs,ExecuteCmdlet,The conditional expression  "ex.Body != null && !string.IsNullOrEmpty(ex.Body.Code) &&                               ex.Body.Code == "ResourceGroupNotFound" || ex.Message.Contains("ResourceGroupNotFound")"  is complex.
Magic Number,Microsoft.Azure.Commands.PowerBI.Utilities,PowerBIUtils,D:\research\architectureSmells\repos\Azure_azure-powershell\src\PowerBIEmbedded\PowerBI\Utilities\PowerBIUtils.cs,GetResourceGroupNameAndCapacityName,The following statement contains a magic number: resourceGroupName = tokens[3];
Magic Number,Microsoft.Azure.Commands.PowerBI.Utilities,PowerBIUtils,D:\research\architectureSmells\repos\Azure_azure-powershell\src\PowerBIEmbedded\PowerBI\Utilities\PowerBIUtils.cs,GetResourceGroupNameAndCapacityName,The following statement contains a magic number: capacityName = tokens[7];
Magic Number,Microsoft.Azure.Commands.PowerBI.Utilities,PowerBIUtils,D:\research\architectureSmells\repos\Azure_azure-powershell\src\PowerBIEmbedded\PowerBI\Utilities\PowerBIUtils.cs,GetResourceGroupName,The following statement contains a magic number: resourceGroupName = tokens[3];
Magic Number,Microsoft.Azure.Commands.PowerBI.Utilities,PowerBIUtils,D:\research\architectureSmells\repos\Azure_azure-powershell\src\PowerBIEmbedded\PowerBI\Utilities\PowerBIUtils.cs,ParseResourceId,The following statement contains a magic number: tokens.Length != 8
