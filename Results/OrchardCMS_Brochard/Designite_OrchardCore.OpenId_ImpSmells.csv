Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OrchardCore.OpenId,OpenIdConfiguration,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdConfiguration.cs,Configure,Cyclomatic complexity of the method is 14
Complex Method,OrchardCore.OpenId.Controllers,AccessController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Controllers\AccessController.cs,Authorize,Cyclomatic complexity of the method is 11
Complex Method,OrchardCore.OpenId.Controllers,AccessController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Controllers\AccessController.cs,Token,Cyclomatic complexity of the method is 12
Complex Method,OrchardCore.OpenId.Controllers,AdminController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Controllers\AdminController.cs,Edit,Cyclomatic complexity of the method is 12
Complex Method,OrchardCore.OpenId.Services,OpenIdService,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdService.cs,IsValidOpenIdSettings,Cyclomatic complexity of the method is 20
Long Parameter List,OrchardCore.OpenId.Controllers,AccessController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Controllers\AccessController.cs,AccessController,The method has 7 parameters. Parameters: applicationManager' identityOptions' localizer' openIdService' roleManager' signInManager' userManager
Long Parameter List,OrchardCore.OpenId.Controllers,AdminController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Controllers\AdminController.cs,AdminController,The method has 13 parameters. Parameters: shapeFactory' siteService' stringLocalizer' authorizationService' roleProvider' applicationManager' applicationStore' passwordValidators' userManager' identityOptions' htmlLocalizer' notifier' openIdService
Long Parameter List,OrchardCore.OpenId.Drivers,OpenIdSiteSettingsDisplayDriver,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Drivers\OpenIdSettingsDisplayDriver.cs,OpenIdSiteSettingsDisplayDriver,The method has 5 parameters. Parameters: openIdServices' httpContextAccessor' notifier' stringLocalizer' memoryCache
Long Statement,OrchardCore.OpenId,OpenIdConfiguration,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdConfiguration.cs,Configure,The length of the statement  "            else if (settings.CertificateStoreLocation.HasValue && settings.CertificateStoreName.HasValue && !string.IsNullOrEmpty(settings.CertificateThumbPrint)) " is 151.
Long Statement,OrchardCore.OpenId,OpenIdConfiguration,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdConfiguration.cs,Configure,The length of the statement  "                    options.SigningCredentials.AddCertificate(settings.CertificateThumbPrint' settings.CertificateStoreName.Value' settings.CertificateStoreLocation.Value); " is 152.
Long Statement,OrchardCore.OpenId.Controllers,AdminController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Controllers\AdminController.cs,ValidateClientSecretAsync,The length of the statement  "                                reportError("ClientSecret"' T["Passwords must be at least {0} characters."' _identityOptions.Value.Password.RequiredLength]); " is 125.
Long Statement,OrchardCore.OpenId.Drivers,OpenIdSiteSettingsDisplayDriver,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Drivers\OpenIdSettingsDisplayDriver.cs,UpdateAsync,The length of the statement  "                if (_openIdServices.IsValidOpenIdSettings(settings' updater.ModelState) && _memoryCache.Get(RestartPendingCacheKey) == null) " is 124.
Long Statement,OrchardCore.OpenId.Services,OpenIdApplicationStore,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdApplicationStore.cs,FindByLogoutRedirectUriAsync,The length of the statement  "            return (await _session.Query<OpenIdApplication' OpenIdApplicationIndex>(o => o.LogoutRedirectUri == address).ListAsync()).ToArray(); " is 132.
Long Statement,OrchardCore.OpenId.Services,OpenIdApplicationStore,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdApplicationStore.cs,FindByRedirectUriAsync,The length of the statement  "            return (await _session.Query<OpenIdApplication' OpenIdApplicationIndex>(o => o.RedirectUri == address).ListAsync()).ToArray(); " is 126.
Long Statement,OrchardCore.OpenId.Services,OpenIdApplicationStore,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdApplicationStore.cs,GetAppsInRoleAsync,The length of the statement  "            var apps = await _session.Query<OpenIdApplication' OpenIdApplicationByRoleNameIndex>(x => x.RoleName == roleName).ListAsync(); " is 126.
Long Statement,OrchardCore.OpenId.Services,OpenIdService,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdService.cs,IsValidOpenIdSettings,The length of the statement  "                var certificate = GetCertificate(settings.CertificateStoreLocation.Value' settings.CertificateStoreName.Value' settings.CertificateThumbPrint); " is 143.
Long Statement,OrchardCore.OpenId.Services,OpenIdService,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdService.cs,IsValidOpenIdSettings,The length of the statement  "                modelState.AddModelError("AllowClientCredentialsFlow"' T["Client Credentials Flow cannot be enabled if Token Endpoint is disabled"]); " is 133.
Long Statement,OrchardCore.OpenId.Services,OpenIdService,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdService.cs,IsValidOpenIdSettings,The length of the statement  "                modelState.AddModelError("AllowAuthorizationCodeFlow"' T["Authorization Code Flow cannot be enabled if Authorization Endpoint and Token Endpoint are disabled"]); " is 161.
Long Statement,OrchardCore.OpenId.Services,OpenIdService,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdService.cs,IsValidOpenIdSettings,The length of the statement  "                modelState.AddModelError("AllowAuthorizationHybridFlow"' T["Authorization Hybrid cannot be enabled if Authorization Endpoint and Token Endpoint are disabled"]); " is 160.
Long Statement,OrchardCore.OpenId.Services,OpenIdService,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdService.cs,IsValidOpenIdSettings,The length of the statement  "                    modelState.AddModelError("AllowRefreshTokenFlow"' T["Refresh Token Flow cannot be enabled if Token Endpoint is disabled"]); " is 123.
Long Statement,OrchardCore.OpenId.Services,OpenIdService,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdService.cs,IsValidOpenIdSettings,The length of the statement  "                    modelState.AddModelError("AllowRefreshTokenFlow"' T["Refresh Token Flow only can be enabled if Password Flow' Authorization Code Flow or Hybrid Flow are enabled"]); " is 164.
Long Statement,OrchardCore.OpenId.Services,OpenIdService,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdService.cs,IsValidOpenIdSettings,The length of the statement  "                modelState.AddModelError("AllowImplicitFlow"' T["Allow Implicit Flow cannot be enabled if Authorization Endpoint is disabled"]); " is 128.
Long Statement,OrchardCore.OpenId.Services,OpenIdService,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdService.cs,ValidateUrisSchema,The length of the statement  "                if (!Uri.TryCreate(uriString' UriKind.Absolute' out uri) || ((onlyAllowHttps || uri.Scheme != "http") && uri.Scheme != "https")) " is 128.
Complex Conditional,OrchardCore.OpenId.Controllers,AccessController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Controllers\AccessController.cs,CreateTicketAsync,The conditional expression  "(claim.Type == OpenIdConnectConstants.Claims.Name && ticket.HasScope(OpenIdConnectConstants.Scopes.Profile)) ||                      (claim.Type == OpenIdConnectConstants.Claims.Email && ticket.HasScope(OpenIdConnectConstants.Scopes.Email)) ||                      (claim.Type == OpenIdConnectConstants.Claims.Role && ticket.HasScope(OpenIddictConstants.Claims.Roles))"  is complex.
Complex Conditional,OrchardCore.OpenId.Services,OpenIdService,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdService.cs,IsValidOpenIdSettings,The conditional expression  "!settings.AllowAuthorizationCodeFlow && !settings.AllowClientCredentialsFlow                   && !settings.AllowHybridFlow && !settings.AllowImplicitFlow && !settings.AllowPasswordFlow"  is complex.
Complex Conditional,OrchardCore.OpenId.Services,OpenIdService,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdService.cs,ValidateUrisSchema,The conditional expression  "!Uri.TryCreate(uriString' UriKind.Absolute' out uri) || ((onlyAllowHttps || uri.Scheme != "http") && uri.Scheme != "https")"  is complex.
Complex Conditional,OrchardCore.OpenId.Services,OpenIdService,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdService.cs,GetAvailableCertificates,The conditional expression  "!cert.Archived && (!onlyCertsWithPrivateKey || (onlyCertsWithPrivateKey && cert.HasPrivateKey))"  is complex.
Missing Default,OrchardCore.OpenId.Controllers,AdminController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Controllers\AdminController.cs,ValidateClientSecretAsync,The following switch statement is missing a default case: switch (error.Code)                          {                              case "PasswordRequiresDigit":                                  reportError("ClientSecret"' T["Passwords must have at least one digit ('0'-'9')."]);                                  break;                              case "PasswordRequiresLower":                                  reportError("ClientSecret"' T["Passwords must have at least one lowercase ('a'-'z')."]);                                  break;                              case "PasswordRequiresUpper":                                  reportError("ClientSecret"' T["Passwords must have at least one uppercase('A'-'Z')."]);                                  break;                              case "PasswordRequiresNonAlphanumeric":                                  reportError("ClientSecret"' T["Passwords must have at least one non letter or digit character."]);                                  break;                              case "PasswordTooShort":                                  reportError("ClientSecret"' T["Passwords must be at least {0} characters."' _identityOptions.Value.Password.RequiredLength]);                                  break;                          }
Missing Default,OrchardCore.OpenId.Services,OpenIdApplicationStore,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.OpenId\Services\OpenIdApplicationStore.cs,GetClientTypeAsync,The following switch statement is missing a default case: switch (application.Type)              {                  case ClientType.Confidential:                      return Task.FromResult(OpenIddictConstants.ClientTypes.Confidential);                    case ClientType.Public:                      return Task.FromResult(OpenIddictConstants.ClientTypes.Public);              }
