Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OrchardCore.Apis.GraphQL,GraphQLMiddleware,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Apis.GraphQL\GraphQLMiddleware.cs,ExecuteAsync,Cyclomatic complexity of the method is 10
Complex Method,OrchardCore.Apis.GraphQL.Services,SchemaService,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Apis.GraphQL\Services\SchemaService.cs,GetSchemaAsync,Cyclomatic complexity of the method is 10
Long Identifier,OrchardCore.Apis.GraphQL,Startup,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Apis.GraphQL\Startup.cs,ConfigureServices,The length of the parameter maxNumberOfResultsValidationMode is 32.
Long Identifier,OrchardCore.Apis.GraphQL.ValidationRules,MaxNumberOfResultsValidationRule,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Apis.GraphQL\ValidationRules\MaxNumberOfResultsValidationRule.cs,,The length of the parameter _maxNumberOfResultsValidationMode is 33.
Long Statement,OrchardCore.Apis.GraphQL,Startup,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Apis.GraphQL\Startup.cs,ConfigureServices,The length of the statement  "                var maxNumberOfResultsValidationMode = configuration.GetValue<MaxNumberOfResultsValidationMode?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.MaxNumberOfResultsValidationMode)}") " is 184.
Long Statement,OrchardCore.Apis.GraphQL,Startup,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Apis.GraphQL\Startup.cs,ConfigureServices,The length of the statement  "                    maxNumberOfResultsValidationMode = _hostingEnvironment.IsDevelopment() ? MaxNumberOfResultsValidationMode.Enabled : MaxNumberOfResultsValidationMode.Disabled; " is 158.
Long Statement,OrchardCore.Apis.GraphQL,Startup,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Apis.GraphQL\Startup.cs,ConfigureServices,The length of the statement  "                c.MaxNumberOfResults = configuration.GetValue<int?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.MaxNumberOfResults)}") ?? 1000; " is 134.
Long Statement,OrchardCore.Apis.GraphQL,Startup,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Apis.GraphQL\Startup.cs,ConfigureServices,The length of the statement  "                c.DefaultNumberOfResults = configuration.GetValue<int?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.DefaultNumberOfResults)}") ?? 100; " is 141.
Long Statement,OrchardCore.Apis.GraphQL.ValidationRules,MaxNumberOfResultsValidationRule,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Apis.GraphQL\ValidationRules\MaxNumberOfResultsValidationRule.cs,Validate,The length of the statement  "                            var errorMessage = localizer["'{0}' exceeds the maximum number of results for '{1}' ({2})"' value.Value' arg.Name' _maxNumberOfResults]; " is 136.
Long Statement,OrchardCore.Apis.GraphQL.ValidationRules,RequiresPermissionValidationRule,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Apis.GraphQL\ValidationRules\RequiresPermissionValidationRule.cs,Authorize,The length of the statement  "            return type.GetPermissions().All(x => authorizationManager.AuthorizeAsync(context.User' x.Permission' x.Resource).GetAwaiter().GetResult()); " is 140.
Magic Number,OrchardCore.Apis.GraphQL,Startup,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Apis.GraphQL\Startup.cs,ConfigureServices,The following statement contains a magic number: services.AddOptions<GraphQLSettings>().Configure<IShellConfiguration>((c' configuration) =>              {                  var exposeExceptions = configuration.GetValue(                      $"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.ExposeExceptions)}"'                      _hostingEnvironment.IsDevelopment());                    var maxNumberOfResultsValidationMode = configuration.GetValue<MaxNumberOfResultsValidationMode?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.MaxNumberOfResultsValidationMode)}")                                                          ?? MaxNumberOfResultsValidationMode.Default;                    if (maxNumberOfResultsValidationMode == MaxNumberOfResultsValidationMode.Default)                  {                      maxNumberOfResultsValidationMode = _hostingEnvironment.IsDevelopment() ? MaxNumberOfResultsValidationMode.Enabled : MaxNumberOfResultsValidationMode.Disabled;                  }                    c.BuildUserContext = ctx => new GraphQLContext                  {                      HttpContext = ctx'                      User = ctx.User'                      ServiceProvider = ctx.RequestServices                  };                  c.ExposeExceptions = exposeExceptions;                  c.MaxDepth = configuration.GetValue<int?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.MaxDepth)}") ?? 20;                  c.MaxComplexity = configuration.GetValue<int?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.MaxComplexity)}");                  c.FieldImpact = configuration.GetValue<int?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.FieldImpact)}");                  c.MaxNumberOfResults = configuration.GetValue<int?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.MaxNumberOfResults)}") ?? 1000;                  c.MaxNumberOfResultsValidationMode = maxNumberOfResultsValidationMode;                  c.DefaultNumberOfResults = configuration.GetValue<int?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.DefaultNumberOfResults)}") ?? 100;              });
Magic Number,OrchardCore.Apis.GraphQL,Startup,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Apis.GraphQL\Startup.cs,ConfigureServices,The following statement contains a magic number: services.AddOptions<GraphQLSettings>().Configure<IShellConfiguration>((c' configuration) =>              {                  var exposeExceptions = configuration.GetValue(                      $"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.ExposeExceptions)}"'                      _hostingEnvironment.IsDevelopment());                    var maxNumberOfResultsValidationMode = configuration.GetValue<MaxNumberOfResultsValidationMode?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.MaxNumberOfResultsValidationMode)}")                                                          ?? MaxNumberOfResultsValidationMode.Default;                    if (maxNumberOfResultsValidationMode == MaxNumberOfResultsValidationMode.Default)                  {                      maxNumberOfResultsValidationMode = _hostingEnvironment.IsDevelopment() ? MaxNumberOfResultsValidationMode.Enabled : MaxNumberOfResultsValidationMode.Disabled;                  }                    c.BuildUserContext = ctx => new GraphQLContext                  {                      HttpContext = ctx'                      User = ctx.User'                      ServiceProvider = ctx.RequestServices                  };                  c.ExposeExceptions = exposeExceptions;                  c.MaxDepth = configuration.GetValue<int?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.MaxDepth)}") ?? 20;                  c.MaxComplexity = configuration.GetValue<int?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.MaxComplexity)}");                  c.FieldImpact = configuration.GetValue<int?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.FieldImpact)}");                  c.MaxNumberOfResults = configuration.GetValue<int?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.MaxNumberOfResults)}") ?? 1000;                  c.MaxNumberOfResultsValidationMode = maxNumberOfResultsValidationMode;                  c.DefaultNumberOfResults = configuration.GetValue<int?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.DefaultNumberOfResults)}") ?? 100;              });
Magic Number,OrchardCore.Apis.GraphQL,Startup,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Apis.GraphQL\Startup.cs,ConfigureServices,The following statement contains a magic number: services.AddOptions<GraphQLSettings>().Configure<IShellConfiguration>((c' configuration) =>              {                  var exposeExceptions = configuration.GetValue(                      $"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.ExposeExceptions)}"'                      _hostingEnvironment.IsDevelopment());                    var maxNumberOfResultsValidationMode = configuration.GetValue<MaxNumberOfResultsValidationMode?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.MaxNumberOfResultsValidationMode)}")                                                          ?? MaxNumberOfResultsValidationMode.Default;                    if (maxNumberOfResultsValidationMode == MaxNumberOfResultsValidationMode.Default)                  {                      maxNumberOfResultsValidationMode = _hostingEnvironment.IsDevelopment() ? MaxNumberOfResultsValidationMode.Enabled : MaxNumberOfResultsValidationMode.Disabled;                  }                    c.BuildUserContext = ctx => new GraphQLContext                  {                      HttpContext = ctx'                      User = ctx.User'                      ServiceProvider = ctx.RequestServices                  };                  c.ExposeExceptions = exposeExceptions;                  c.MaxDepth = configuration.GetValue<int?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.MaxDepth)}") ?? 20;                  c.MaxComplexity = configuration.GetValue<int?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.MaxComplexity)}");                  c.FieldImpact = configuration.GetValue<int?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.FieldImpact)}");                  c.MaxNumberOfResults = configuration.GetValue<int?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.MaxNumberOfResults)}") ?? 1000;                  c.MaxNumberOfResultsValidationMode = maxNumberOfResultsValidationMode;                  c.DefaultNumberOfResults = configuration.GetValue<int?>($"OrchardCore.Apis.GraphQL:{nameof(GraphQLSettings.DefaultNumberOfResults)}") ?? 100;              });
