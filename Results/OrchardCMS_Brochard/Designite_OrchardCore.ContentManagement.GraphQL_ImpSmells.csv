Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OrchardCore.ContentManagement.GraphQL.Options,GraphQLContentOptions,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Options\GraphQLContentOptions.cs,IsCollapsedByDefault,Cyclomatic complexity of the method is 8
Complex Method,OrchardCore.ContentManagement.GraphQL.Queries,ContentItemsFieldType,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\ContentItemsFieldType.cs,FilterWhereArguments,Cyclomatic complexity of the method is 8
Complex Method,OrchardCore.ContentManagement.GraphQL.Queries,ContentItemsFieldType,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\ContentItemsFieldType.cs,BuildExpressionsInternal,Cyclomatic complexity of the method is 26
Complex Method,OrchardCore.ContentManagement.GraphQL.Queries,ContentItemsFieldType,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\ContentItemsFieldType.cs,OrderBy,Cyclomatic complexity of the method is 15
Complex Method,OrchardCore.ContentManagement.GraphQL.Queries.Types,DynamicContentTypeBuilder,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\Types\DynamicContentTypeBuilder.cs,Build,Cyclomatic complexity of the method is 10
Complex Method,OrchardCore.ContentManagement.GraphQL.Queries.Types,TypedContentTypeBuilder,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\Types\TypedContentTypeBuilder.cs,Build,Cyclomatic complexity of the method is 12
Long Parameter List,OrchardCore.ContentManagement.GraphQL.Queries,ContentItemsFieldType,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\ContentItemsFieldType.cs,FilterWhereArguments,The method has 5 parameters. Parameters: query' where' fieldContext' session' context
Long Parameter List,OrchardCore.ContentManagement.GraphQL.Queries,ContentItemsFieldType,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\ContentItemsFieldType.cs,BuildWhereExpressions,The method has 5 parameters. Parameters: where' expressions' tableAlias' fieldContext' indexAliases
Long Parameter List,OrchardCore.ContentManagement.GraphQL.Queries,ContentItemsFieldType,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\ContentItemsFieldType.cs,BuildExpressionsInternal,The method has 5 parameters. Parameters: where' expressions' tableAlias' fieldContext' indexAliases
Long Statement,OrchardCore.ContentManagement.GraphQL,DataLoaderExtensions,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Extensions\DataLoaderExtensions.cs,GetorAddPublishedContentItemByIdDataLoader,The length of the statement  "            return accessor.Context.GetOrAddBatchLoader<string' ContentItem>("GetPublishedContentItemsById"' ci => LoadPublishedContentItems(ci' session)); " is 143.
Long Statement,OrchardCore.ContentManagement.GraphQL,DataLoaderExtensions,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Extensions\DataLoaderExtensions.cs,LoadPublishedContentItems,The length of the statement  "            var contentItemsLoaded = await session.Query<ContentItem' ContentItemIndex>(y => y.ContentItemId.IsIn(contentItemIds) && y.Published).ListAsync(); " is 146.
Long Statement,OrchardCore.ContentManagement.GraphQL.Queries,ContentItemsFieldType,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\ContentItemsFieldType.cs,FilterWhereArguments,The length of the statement  "            IPredicateQuery predicateQuery = new PredicateQuery(SqlDialectFactory.For(transaction.Connection)' context.ServiceProvider.GetService<ShellSettings>()); " is 152.
Long Statement,OrchardCore.ContentManagement.GraphQL.Queries,ContentItemsFieldType,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\ContentItemsFieldType.cs,BuildExpressionsInternal,The length of the statement  "                            if ((tableAlias == null && field.GetMetadata<bool>("PartCollapsed") && field.Name.Equals(property' StringComparison.OrdinalIgnoreCase)) || " is 138.
Long Statement,OrchardCore.ContentManagement.GraphQL.Queries,ContentItemsFieldType,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\ContentItemsFieldType.cs,BuildExpressionsInternal,The length of the statement  "                        case "not_contains": expression = Expression.Not(Expression.Like(property' (string)value' MatchOptions.Contains)); break; " is 121.
Long Statement,OrchardCore.ContentManagement.GraphQL.Queries,ContentItemsFieldType,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\ContentItemsFieldType.cs,BuildExpressionsInternal,The length of the statement  "                        case "not_starts_with": expression = Expression.Not(Expression.Like(property' (string)value' MatchOptions.StartsWith)); break; " is 126.
Long Statement,OrchardCore.ContentManagement.GraphQL.Queries,ContentItemsFieldType,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\ContentItemsFieldType.cs,BuildExpressionsInternal,The length of the statement  "                        case "not_ends_with": expression = Expression.Not(Expression.Like(property' (string)value' MatchOptions.EndsWith)); break; " is 122.
Complex Conditional,OrchardCore.ContentManagement.GraphQL.Queries,ContentItemsFieldType,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\ContentItemsFieldType.cs,BuildExpressionsInternal,The conditional expression  "(tableAlias == null && field.GetMetadata<bool>("PartCollapsed") && field.Name.Equals(property' StringComparison.OrdinalIgnoreCase)) ||                                  (tableAlias != null && partName.ToFieldName().Equals(tableAlias' StringComparison.OrdinalIgnoreCase))"  is complex.
Virtual Method Call from Constructor,OrchardCore.ContentManagement.GraphQL.Queries.Predicates,LikeExpression,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\Predicates\LikeExpression.cs,LikeExpression,The constructor "LikeExpression" calls a virtual method "ToMatchString".
Magic Number,OrchardCore.ContentManagement.GraphQL.Queries,ContentItemsFieldType,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\ContentItemsFieldType.cs,BuildExpressionsInternal,The following statement contains a magic number: var values = entry.Name.Split('_'' 2);
Magic Number,OrchardCore.ContentManagement.GraphQL.Queries.Predicates,PredicateQuery,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\Predicates\PredicateQuery.cs,GetColumnName,The following statement contains a magic number: var values = propertyPath.Split('.'' 2);
Missing Default,OrchardCore.ContentManagement.GraphQL.Queries,ContentItemsFieldType,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.ContentManagement.GraphQL\Queries\ContentItemsFieldType.cs,OrderBy,The following switch statement is missing a default case: switch (property.Name)                          {                              case "contentItemId": selector = x => x.ContentItemId; break;                              case "contentItemVersionId": selector = x => x.ContentItemVersionId; break;                              case "displayText": selector = x => x.DisplayText; break;                              case "published": selector = x => x.Published; break;                              case "latest": selector = x => x.Latest; break;                              case "createdUtc": selector = x => x.CreatedUtc; break;                              case "modifiedUtc": selector = x => x.ModifiedUtc; break;                              case "publishedUtc": selector = x => x.PublishedUtc; break;                              case "owner": selector = x => x.Owner; break;                              case "author": selector = x => x.Author; break;                          }
