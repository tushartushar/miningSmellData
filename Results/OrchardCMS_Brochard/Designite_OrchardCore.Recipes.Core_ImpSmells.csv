Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OrchardCore.Recipes.Services,RecipeExecutor,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Recipes.Core\Services\RecipeExecutor.cs,ExecuteAsync,Cyclomatic complexity of the method is 10
Long Statement,OrchardCore.Recipes.Services,RecipeExecutor,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Recipes.Core\Services\RecipeExecutor.cs,ExecuteAsync,The length of the statement  "            await _recipeEventHandlers.InvokeAsync((handler' executionId' recipeDescriptor) => handler.RecipeExecutingAsync(executionId' recipeDescriptor)' executionId' recipeDescriptor' Logger); " is 183.
Long Statement,OrchardCore.Recipes.Services,RecipeExecutor,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Recipes.Core\Services\RecipeExecutor.cs,ExecuteAsync,The length of the statement  "                await _recipeEventHandlers.InvokeAsync((handler' executionId' recipeDescriptor) => handler.RecipeExecutedAsync(executionId' recipeDescriptor)' executionId' recipeDescriptor' Logger); " is 182.
Long Statement,OrchardCore.Recipes.Services,RecipeExecutor,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Recipes.Core\Services\RecipeExecutor.cs,ExecuteAsync,The length of the statement  "                await _recipeEventHandlers.InvokeAsync((handler' executionId' recipeDescriptor) => handler.ExecutionFailedAsync(executionId' recipeDescriptor)' executionId' recipeDescriptor' Logger); " is 183.
Long Statement,OrchardCore.Recipes.Services,RecipeExecutor,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Recipes.Core\Services\RecipeExecutor.cs,ExecuteStepAsync,The length of the statement  "                    await _recipeEventHandlers.InvokeAsync((handler' recipeStep) => handler.RecipeStepExecutingAsync(recipeStep)' recipeStep' Logger); " is 130.
Long Statement,OrchardCore.Recipes.Services,RecipeExecutor,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Recipes.Core\Services\RecipeExecutor.cs,ExecuteStepAsync,The length of the statement  "                    await _recipeEventHandlers.InvokeAsync((handler' recipeStep) => handler.RecipeStepExecutedAsync(recipeStep)' recipeStep' Logger); " is 129.
Long Statement,OrchardCore.Recipes.Services,RecipeExecutor,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Recipes.Core\Services\RecipeExecutor.cs,EvaluateJsonTree,The length of the statement  "                        value = (scriptingManager.Evaluate(value' context.RecipeDescriptor.FileProvider' context.RecipeDescriptor.BasePath' null) ?? "").ToString(); " is 140.
Long Statement,OrchardCore.Recipes.Services,RecipeHarvester,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Recipes.Core\Services\RecipeHarvester.cs,HarvestRecipesAsync,The length of the statement  "            recipeDescriptors.AddRange(recipeFiles.Select(recipeFile => _recipeReader.GetRecipeDescriptor(path' recipeFile' _hostingEnvironment.ContentRootFileProvider).Result)); " is 166.
Long Statement,OrchardCore.Recipes.Services,RecipeMigrator,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Recipes.Core\Services\RecipeMigrator.cs,ExecuteAsync,The length of the statement  "            var recipeDescriptor = await _recipeReader.GetRecipeDescriptor(recipeBasePath' recipeFileInfo' _hostingEnvironment.ContentRootFileProvider); " is 140.
Magic Number,OrchardCore.Recipes.Services,RecipeExecutor,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Recipes.Core\Services\RecipeExecutor.cs,ExecuteAsync,The following statement contains a magic number: reader.Depth == 2
Missing Default,OrchardCore.Recipes.Services,RecipeExecutor,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Recipes.Core\Services\RecipeExecutor.cs,EvaluateJsonTree,The following switch statement is missing a default case: switch (node.Type)              {                  case JTokenType.Array:                      var array = (JArray)node;                      for (var i = 0; i < array.Count; i++)                      {                          EvaluateJsonTree(scriptingManager' context' array[i]);                      }                      break;                  case JTokenType.Object:                      foreach (var property in (JObject)node)                      {                          EvaluateJsonTree(scriptingManager' context' property.Value);                      }                      break;                    case JTokenType.String:                        var value = node.Value<string>();                        // Evaluate the expression while the result is another expression                      while (value.StartsWith('[') && value.EndsWith(']'))                      {                          value = value.Trim('['' ']');                          value = (scriptingManager.Evaluate(value' context.RecipeDescriptor.FileProvider' context.RecipeDescriptor.BasePath' null) ?? "").ToString();                          ((JValue)node).Value = value;                      }                      break;              }
