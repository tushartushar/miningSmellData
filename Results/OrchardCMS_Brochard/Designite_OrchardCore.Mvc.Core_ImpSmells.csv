Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OrchardCore.Mvc,ModuleProjectRazorFileProvider,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Mvc.Core\ModuleProjectRazorFileProvider.cs,Watch,Cyclomatic complexity of the method is 11
Complex Method,OrchardCore.Mvc,ShellFileVersionProvider,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Mvc.Core\ShellFileVersionProvider.cs,AddFileVersionToPath,Cyclomatic complexity of the method is 13
Complex Method,OrchardCore.Mvc,ShellViewFeatureProvider,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Mvc.Core\ShellViewFeatureProvider.cs,PopulateFeature,Cyclomatic complexity of the method is 12
Complex Method,OrchardCore.Mvc.FileProviders,FileProviderExtensions,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Mvc.Core\FileProviders\FileProviderExtensions.cs,GetViewFilePaths,Cyclomatic complexity of the method is 10
Long Parameter List,OrchardCore.Mvc.FileProviders,FileProviderExtensions,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Mvc.Core\FileProviders\FileProviderExtensions.cs,GetViewFilePaths,The method has 6 parameters. Parameters: fileProvider' subPath' extensions' viewsFolder' inViewsFolder' inDepth
Long Identifier,OrchardCore.Mvc,ShellFileVersionProvider,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Mvc.Core\ShellFileVersionProvider.cs,AddFileVersionToPath,The length of the parameter queryStringOrFragmentStartIndex is 31.
Long Statement,OrchardCore.Mvc.FileProviders,FileProviderExtensions,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Mvc.Core\FileProviders\FileProviderExtensions.cs,GetViewFilePaths,The length of the statement  "                    foreach (var filePath in GetViewFilePaths(fileProvider' $"{subPath}/{viewsFolderInfo.Name}"' extensions' viewsFolder' inViewsFolder: true)) " is 139.
Long Statement,OrchardCore.Mvc.FileProviders,FileProviderExtensions,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Mvc.Core\FileProviders\FileProviderExtensions.cs,GetViewFilePaths,The length of the statement  "                    foreach (var filePath in GetViewFilePaths(fileProvider' $"{subPath}/{content.Name}"' extensions' viewsFolder' inViewsFolder)) " is 125.
Long Statement,OrchardCore.Mvc.Utilities,StringExtensions,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Mvc.Core\Utilities\StringExtensions.cs,IsValidUrlSegment,The length of the statement  "            // ucschar     = %xA0-D7FF / %xF900-FDCF / %xFDF0-FFEF / %x10000-1FFFD / %x20000-2FFFD / %x30000-3FFFD / %x40000-4FFFD / %x50000-5FFFD / %x60000-6FFFD / %x70000-7FFFD / %x80000-8FFFD / %x90000-9FFFD / %xA0000-AFFFD / %xB0000-BFFFD / %xC0000-CFFFD / %xD0000-DFFFD / %xE1000-EFFFD " is 278.
Complex Conditional,OrchardCore.Mvc,ShellFileVersionProvider,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Mvc.Core\ShellFileVersionProvider.cs,AddFileVersionToPath,The conditional expression  "!fileInfo.Exists &&                      fileProvider is IVirtualPathBaseProvider virtualPathBaseProvider &&                      virtualPathBaseProvider.VirtualPathBase.HasValue &&                      resolvedPath.StartsWith(virtualPathBaseProvider.VirtualPathBase.Value' StringComparison.OrdinalIgnoreCase)"  is complex.
Empty Catch Block,OrchardCore.Mvc,ShellViewFeatureProvider,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Mvc.Core\ShellViewFeatureProvider.cs,PopulateFeature,The method has an empty catch block.
Magic Number,OrchardCore.Mvc,Startup,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Mvc.Core\Startup.cs,ConfigureServices,The following statement contains a magic number: var builder = services.AddMvc(options =>              {                  // Forcing AntiForgery Token Validation on by default' it's only in Razor Pages by default                  // Load this filter after the MediaSizeFilterLimitAttribute' but before the                  // IgnoreAntiforgeryTokenAttribute. refer : https://github.com/aspnet/AspNetCore/issues/10384                  options.Filters.Add(typeof(AutoValidateAntiforgeryTokenAttribute)' 999);                    // Custom model binder to testing purpose                  options.ModelBinderProviders.Insert(0' new CheckMarkModelBinderProvider());              });
Magic Number,Microsoft.Extensions.DependencyInjection,OrchardCoreBuilderExtensions,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Mvc.Core\Extensions\OrchardCoreBuilderExtensions.cs,AddMvc,The following statement contains a magic number: builder.ConfigureServices(collection =>              {                  // 'PageLoaderMatcherPolicy' doesn't check if an endpoint is a valid candidate.                  // So' we replace it by a custom implementation that does it as other policies.                  var descriptor = collection.FirstOrDefault(d => d.ServiceType == typeof(MatcherPolicy) &&                      d.ImplementationType?.Name == nameof(PageLoaderMatcherPolicy));                    if (descriptor != null)                  {                      collection.Remove(descriptor);                      collection.TryAddEnumerable(ServiceDescriptor.Singleton<MatcherPolicy' PageLoaderMatcherPolicy>());                  }                    // Allows a tenant to add its own route endpoint schemes for link generation.                  collection.AddSingleton<IEndpointAddressScheme<RouteValuesAddress>' ShellRouteValuesAddressScheme>();              }'              // Need to be registered last.              order: int.MaxValue - 100);
Magic Number,OrchardCore.Mvc.Utilities,StringExtensions,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Mvc.Core\Utilities\StringExtensions.cs,ToSafeName,The following statement contains a magic number: name = name.Substring(0' 128);
Magic Number,OrchardCore.Mvc.Utilities,StringExtensions,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Mvc.Core\Utilities\StringExtensions.cs,ToSafeName,The following statement contains a magic number: name.Length > 128
Missing Default,OrchardCore.Mvc.Utilities,StringExtensions,C:\research\architectureSmells\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Mvc.Core\Utilities\StringExtensions.cs,RemoveTags,The following switch statement is missing a default case: switch (current)                  {                      case '<':                          inside = true;                          continue;                      case '>':                          inside = false;                          continue;                  }
