Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OrchardCore.Environment.Navigation,NavigationManager,C:\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Environment.Navigation\NavigationManager.cs,GetUrl,Cyclomatic complexity of the method is 8
Long Parameter List,OrchardCore.Environment.Navigation,NavigationHelper,C:\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Environment.Navigation\NavigationHelper.cs,PopulateMenuAsync,The method has 5 parameters. Parameters: shapeFactory' parentShape' menu' menuItems' viewContext
Long Parameter List,OrchardCore.Environment.Navigation,NavigationHelper,C:\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Environment.Navigation\NavigationHelper.cs,BuildMenuItemShapeAsync,The method has 5 parameters. Parameters: shapeFactory' parentShape' menu' menuItem' viewContext
Long Parameter List,OrchardCore.Environment.Navigation,NavigationManager,C:\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Environment.Navigation\NavigationManager.cs,NavigationManager,The method has 5 parameters. Parameters: navigationProviders' logger' shellSettings' urlHelperFactory' authorizationService
Long Statement,OrchardCore.Environment.Navigation,NavigationHelper,C:\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Environment.Navigation\NavigationHelper.cs,RouteMatches,The length of the statement  "            return itemValues.Keys.All(key => string.Equals(Convert.ToString(itemValues[key])' Convert.ToString(requestValues[key])' StringComparison.OrdinalIgnoreCase)); " is 158.
Complex Conditional,OrchardCore.Environment.Navigation,NavigationManager,C:\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Environment.Navigation\NavigationManager.cs,GetUrl,The conditional expression  "!string.IsNullOrEmpty(url) &&                  actionContext?.HttpContext != null &&                  !(url.StartsWith("/") ||                  Schemes.Any(scheme => url.StartsWith(scheme + ":")))"  is complex.
Magic Number,OrchardCore.Environment.Navigation,NavigationManager,C:\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Environment.Navigation\NavigationManager.cs,GetUrl,The following statement contains a magic number: if (!string.IsNullOrEmpty(url) &&                  actionContext?.HttpContext != null &&                  !(url.StartsWith("/") ||                  Schemes.Any(scheme => url.StartsWith(scheme + ":"))))              {                  if (url.StartsWith("~/"))                  {                      if (!String.IsNullOrEmpty(_shellSettings.RequestUrlPrefix))                      {                          url = _shellSettings.RequestUrlPrefix + "/" + url.Substring(2);                      }                      else                      {                          url = url.Substring(2);                      }                  }                    if (!url.StartsWith("#"))                  {                      var appPath = actionContext.HttpContext.Request.PathBase.ToString();                      if (appPath == "/")                          appPath = "";                      url = appPath + "/" + url;                  }              }
Magic Number,OrchardCore.Environment.Navigation,NavigationManager,C:\repos\OrchardCMS_Brochard\src\OrchardCore\OrchardCore.Environment.Navigation\NavigationManager.cs,GetUrl,The following statement contains a magic number: if (!string.IsNullOrEmpty(url) &&                  actionContext?.HttpContext != null &&                  !(url.StartsWith("/") ||                  Schemes.Any(scheme => url.StartsWith(scheme + ":"))))              {                  if (url.StartsWith("~/"))                  {                      if (!String.IsNullOrEmpty(_shellSettings.RequestUrlPrefix))                      {                          url = _shellSettings.RequestUrlPrefix + "/" + url.Substring(2);                      }                      else                      {                          url = url.Substring(2);                      }                  }                    if (!url.StartsWith("#"))                  {                      var appPath = actionContext.HttpContext.Request.PathBase.ToString();                      if (appPath == "/")                          appPath = "";                      url = appPath + "/" + url;                  }              }
