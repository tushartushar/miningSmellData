Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,OrchardCore.Users.Controllers,AdminController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Users\Controllers\AdminController.cs,AdminController,The method has 8 parameters. Parameters: userDisplayManager' authorizationService' session' userManager' notifier' siteService' shapeFactory' htmlLocalizer
Long Parameter List,OrchardCore.Users.Services,SetupEventHandler,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Users\Services\SetupEventHandler.cs,Setup,The method has 8 parameters. Parameters: siteName' userName' email' password' dbProvider' dbConnectionString' dbTablePrefix' reportError
Long Statement,OrchardCore.Users.Controllers,AccountController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Users\Controllers\AccountController.cs,Login,The length of the statement  "                var result = await _signInManager.PasswordSignInAsync(model.UserName' model.Password' model.RememberMe' lockoutOnFailure: false); " is 129.
Long Statement,OrchardCore.Users.Controllers,AccountController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Users\Controllers\AccountController.cs,Register,The length of the statement  "                var user = await _userService.CreateUserAsync(model.UserName' model.Email' new string[0]' model.Password' (key' message) => ModelState.AddModelError(key' message)); " is 164.
Long Statement,OrchardCore.Users.Controllers,AccountController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Users\Controllers\AccountController.cs,Register,The length of the statement  "                    // For more information on how to enable account confirmation and password reset please visit http://go.microsoft.com/fwlink/?LinkID=532713 " is 139.
Long Statement,OrchardCore.Users.Controllers,AccountController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Users\Controllers\AccountController.cs,Register,The length of the statement  "                    //var callbackUrl = Url.Action("ConfirmEmail"' "Account"' new { userId = user.Id' code = code }' protocol: HttpContext.Request.Scheme); " is 135.
Long Statement,OrchardCore.Users.Controllers,AccountController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Users\Controllers\AccountController.cs,ChangePassword,The length of the statement  "                if (await _userService.ChangePasswordAsync(user' model.CurrentPassword' model.Password' (key' message) => ModelState.AddModelError(key' message))) " is 146.
Long Statement,OrchardCore.Users.Drivers,UserDisplayDriver,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Users\Drivers\UserDisplayDriver.cs,Edit,The length of the statement  "                var roles = roleNames.Select(x => new RoleViewModel { Role = x' IsSelected = userRoleNames.Contains(x' StringComparer.OrdinalIgnoreCase) }).ToArray(); " is 150.
Long Statement,OrchardCore.Users.Drivers,UserDisplayDriver,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Users\Drivers\UserDisplayDriver.cs,UpdateAsync,The length of the statement  "                    context.Updater.ModelState.AddModelError(nameof(model.PasswordConfirmation)' T["Password and Password Confirmation do not match"]); " is 131.
Long Statement,OrchardCore.Users.Drivers,UserDisplayDriver,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Users\Drivers\UserDisplayDriver.cs,UpdateAsync,The length of the statement  "                await _userService.CreateUserAsync(model.UserName' model.Email' roleNames' model.Password' (key' message) => context.Updater.ModelState.AddModelError(key' message)); " is 165.
Magic Number,OrchardCore.Users,Startup,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Users\Startup.cs,ConfigureServices,The following statement contains a magic number: services.AddAuthentication(o =>              {                  o.DefaultAuthenticateScheme = IdentityConstants.ApplicationScheme;                  o.DefaultChallengeScheme = IdentityConstants.ApplicationScheme;                  o.DefaultSignInScheme = IdentityConstants.ExternalScheme;              })              .AddCookie(IdentityConstants.ApplicationScheme' o =>              {                  o.LoginPath = new PathString("/Account/Login");                  o.Events = new CookieAuthenticationEvents                  {                      OnValidatePrincipal = async context =>                      {                          await SecurityStampValidator.ValidatePrincipalAsync(context);                      }                  };              })              .AddCookie(IdentityConstants.ExternalScheme' o =>              {                  o.Cookie.Name = IdentityConstants.ExternalScheme;                  o.ExpireTimeSpan = TimeSpan.FromMinutes(5);              })              .AddCookie(IdentityConstants.TwoFactorRememberMeScheme' o =>                  o.Cookie.Name = IdentityConstants.TwoFactorRememberMeScheme)                .AddCookie(IdentityConstants.TwoFactorUserIdScheme' IdentityConstants.TwoFactorUserIdScheme' o =>              {                  o.Cookie.Name = IdentityConstants.TwoFactorUserIdScheme;                  o.ExpireTimeSpan = TimeSpan.FromMinutes(5);              });
Magic Number,OrchardCore.Users,Startup,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Users\Startup.cs,ConfigureServices,The following statement contains a magic number: services.AddAuthentication(o =>              {                  o.DefaultAuthenticateScheme = IdentityConstants.ApplicationScheme;                  o.DefaultChallengeScheme = IdentityConstants.ApplicationScheme;                  o.DefaultSignInScheme = IdentityConstants.ExternalScheme;              })              .AddCookie(IdentityConstants.ApplicationScheme' o =>              {                  o.LoginPath = new PathString("/Account/Login");                  o.Events = new CookieAuthenticationEvents                  {                      OnValidatePrincipal = async context =>                      {                          await SecurityStampValidator.ValidatePrincipalAsync(context);                      }                  };              })              .AddCookie(IdentityConstants.ExternalScheme' o =>              {                  o.Cookie.Name = IdentityConstants.ExternalScheme;                  o.ExpireTimeSpan = TimeSpan.FromMinutes(5);              })              .AddCookie(IdentityConstants.TwoFactorRememberMeScheme' o =>                  o.Cookie.Name = IdentityConstants.TwoFactorRememberMeScheme)                .AddCookie(IdentityConstants.TwoFactorUserIdScheme' IdentityConstants.TwoFactorUserIdScheme' o =>              {                  o.Cookie.Name = IdentityConstants.TwoFactorUserIdScheme;                  o.ExpireTimeSpan = TimeSpan.FromMinutes(5);              });
Magic Number,OrchardCore.Users.Controllers,AccountController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Users\Controllers\AccountController.cs,Register,The following statement contains a magic number: if (ModelState.IsValid)              {                  var user = await _userService.CreateUserAsync(model.UserName' model.Email' new string[0]' model.Password' (key' message) => ModelState.AddModelError(key' message));                    if (user != null)                  {                      // For more information on how to enable account confirmation and password reset please visit http://go.microsoft.com/fwlink/?LinkID=532713                      // Send an email with this link                      //var code = await _userManager.GenerateEmailConfirmationTokenAsync(user);                      //var callbackUrl = Url.Action("ConfirmEmail"' "Account"' new { userId = user.Id' code = code }' protocol: HttpContext.Request.Scheme);                      //await _emailSender.SendEmailAsync(model.Email' "Confirm your account"'                      //    $"Please confirm your account by clicking this link: <a href='{callbackUrl}'>link</a>");                      await _signInManager.SignInAsync(user' isPersistent: false);                      _logger.LogInformation(3' "User created a new account with password.");                      return RedirectToLocal(returnUrl);                  }              }
Magic Number,OrchardCore.Users.Controllers,AccountController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Users\Controllers\AccountController.cs,LogOff,The following statement contains a magic number: _logger.LogInformation(4' "User logged out.");
Missing Default,OrchardCore.Users.Controllers,AdminController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Users\Controllers\AdminController.cs,Index,The following switch statement is missing a default case: switch (options.Filter)              {                  case UsersFilter.Approved:                      //users = users.Where(u => u.RegistrationStatus == UserStatus.Approved);                      break;                  case UsersFilter.Pending:                      //users = users.Where(u => u.RegistrationStatus == UserStatus.Pending);                      break;                  case UsersFilter.EmailPending:                      //users = users.Where(u => u.EmailStatus == UserStatus.Pending);                      break;              }
Missing Default,OrchardCore.Users.Controllers,AdminController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Users\Controllers\AdminController.cs,Index,The following switch statement is missing a default case: switch (options.Order)              {                  case UsersOrder.Name:                      users = users.OrderBy(u => u.NormalizedUserName);                      break;                  case UsersOrder.Email:                      users = users.OrderBy(u => u.NormalizedEmail);                      break;                  case UsersOrder.CreatedUtc:                      //users = users.OrderBy(u => u.CreatedUtc);                      break;                  case UsersOrder.LastLoginUtc:                      //users = users.OrderBy(u => u.LastLoginUtc);                      break;              }
