Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,OrchardCore.Settings.Controllers,AdminController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Settings\Controllers\AdminController.cs,AdminController,The method has 5 parameters. Parameters: siteService' siteSettingsDisplayManager' authorizationService' notifier' h
Long Parameter List,OrchardCore.Settings.Services,SetupEventHandler,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Settings\Services\SetupEventHandler.cs,Setup,The method has 8 parameters. Parameters: siteName' userName' email' password' dbProvider' dbConnectionString' dbTablePrefix' reportError
Long Statement,OrchardCore.Settings.Controllers,AdminController,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Settings\Controllers\AdminController.cs,IndexPost,The length of the statement  "            var site = JsonConvert.DeserializeObject(JsonConvert.SerializeObject(cachedSite' new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All })' cachedSite.GetType()) as ISite; " is 185.
Magic Number,OrchardCore.Settings.Services,SiteService,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Settings\Services\SiteService.cs,GetSiteSettingsAsync,The following statement contains a magic number: if (!_memoryCache.TryGetValue(SiteCacheKey' out site))              {                  var session = GetSession();                    site = await session.Query<SiteSettings>().FirstOrDefaultAsync();                    if (site == null)                  {                      lock (_memoryCache)                      {                          if (!_memoryCache.TryGetValue(SiteCacheKey' out site))                          {                              site = new SiteSettings                              {                                   SiteSalt = Guid.NewGuid().ToString("N")'                                  SiteName = "My Orchard Project Application"'                                  TimeZone = TimeZoneInfo.Local.Id'                                  PageSize = 10'                                  MaxPageSize = 100'                                  MaxPagedCount = 0                              };                                session.Save(site);                              _memoryCache.Set(SiteCacheKey' site);                              _signal.SignalToken(SiteCacheKey);                          }                      }                  }                  else                  {                      _memoryCache.Set(SiteCacheKey' site);                      _signal.SignalToken(SiteCacheKey);                  }              }
Magic Number,OrchardCore.Settings.Services,SiteService,C:\repos\OrchardCMS_Brochard\src\OrchardCore.Modules\OrchardCore.Settings\Services\SiteService.cs,GetSiteSettingsAsync,The following statement contains a magic number: if (!_memoryCache.TryGetValue(SiteCacheKey' out site))              {                  var session = GetSession();                    site = await session.Query<SiteSettings>().FirstOrDefaultAsync();                    if (site == null)                  {                      lock (_memoryCache)                      {                          if (!_memoryCache.TryGetValue(SiteCacheKey' out site))                          {                              site = new SiteSettings                              {                                   SiteSalt = Guid.NewGuid().ToString("N")'                                  SiteName = "My Orchard Project Application"'                                  TimeZone = TimeZoneInfo.Local.Id'                                  PageSize = 10'                                  MaxPageSize = 100'                                  MaxPagedCount = 0                              };                                session.Save(site);                              _memoryCache.Set(SiteCacheKey' site);                              _signal.SignalToken(SiteCacheKey);                          }                      }                  }                  else                  {                      _memoryCache.Set(SiteCacheKey' site);                      _signal.SignalToken(SiteCacheKey);                  }              }
