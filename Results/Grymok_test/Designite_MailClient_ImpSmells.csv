Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MailClient.Forms.Openpop,OpenPopSide,C:\repos\Grymok_test\MailClient\MailClient\Forms\Openpop\OpenPopSide.xaml.cs,worker_RunWorkerCompleted,The length of the statement  "		SQLiteCommand commandInsert = new SQLiteCommand ("INSERT OR IGNORE INTO messages (msgID' msgSender' msgSubject' msgBody) VALUES ( @msgID' @msgSender' @msgSubject' @msgBody)"' sqliteCon); " is 186.
Long Statement,MailClient.Forms.Openpop,Msg,C:\repos\Grymok_test\MailClient\MailClient\Forms\Openpop\Msg.cs,ToString,The length of the statement  "	return string.Format ("MsgID: {0}' MsgSender: {1}' MsgSubject: {2}' MsgBody: {3}"' MsgID' MsgSender' MsgSubject' MsgBody); " is 122.
Long Statement,MailClient.Forms.Openpop,SqlDbHandler,C:\repos\Grymok_test\MailClient\MailClient\Forms\Openpop\SqlDbHandler.cs,CreateDB,The length of the statement  "		string crtMessagetblSQL = "CREATE TABLE IF NOT EXISTS [Messages] (" + "[msgID] TEXT NOT NULL PRIMARY KEY'" + "[msgSender] TEXT NULL'" + "[msgSubject] TEXT NULL'" + "[msgBody] TEXT NULL" + ")"; " is 192.
Empty Catch Block,MailClient.Forms.Openpop,SqlDbHandler,C:\repos\Grymok_test\MailClient\MailClient\Forms\Openpop\SqlDbHandler.cs,CreateDB,The method has an empty catch block.
Magic Number,MailClient.Forms.Openpop,OpenPopSide,C:\repos\Grymok_test\MailClient\MailClient\Forms\Openpop\OpenPopSide.xaml.cs,fetchAllMessages,The following statement contains a magic number: using (Pop3Client client = new Pop3Client ()) {  	client.Connect ("pop.gmail.com"' 995' true);  	client.Authenticate ("programmering3@gmail.com"' "programmering");  	int messageCount = client.GetMessageCount ();  	List<OpenPop.Mime.Message> allMessages = new List<OpenPop.Mime.Message> (messageCount);  	for (int i = messageCount; i > 0; i--) {  		allMessages.Add (client.GetMessage (i));  		percentComplete = Convert.ToInt16 ((Convert.ToDouble (allMessages.Count) / Convert.ToDouble (messageCount)) * 100);  		(sender as BackgroundWorker).ReportProgress (percentComplete);  	}  	e.Result = allMessages;  }  
Magic Number,MailClient.Forms.Openpop,OpenPopSide,C:\repos\Grymok_test\MailClient\MailClient\Forms\Openpop\OpenPopSide.xaml.cs,fetchAllMessages,The following statement contains a magic number: using (Pop3Client client = new Pop3Client ()) {  	client.Connect ("pop.gmail.com"' 995' true);  	client.Authenticate ("programmering3@gmail.com"' "programmering");  	int messageCount = client.GetMessageCount ();  	List<OpenPop.Mime.Message> allMessages = new List<OpenPop.Mime.Message> (messageCount);  	for (int i = messageCount; i > 0; i--) {  		allMessages.Add (client.GetMessage (i));  		percentComplete = Convert.ToInt16 ((Convert.ToDouble (allMessages.Count) / Convert.ToDouble (messageCount)) * 100);  		(sender as BackgroundWorker).ReportProgress (percentComplete);  	}  	e.Result = allMessages;  }  
Magic Number,MailClient.Forms.Openpop,OpenPopSide,C:\repos\Grymok_test\MailClient\MailClient\Forms\Openpop\OpenPopSide.xaml.cs,fetchAllMessages,The following statement contains a magic number: client.Connect ("pop.gmail.com"' 995' true);  
Magic Number,MailClient.Forms.Openpop,OpenPopSide,C:\repos\Grymok_test\MailClient\MailClient\Forms\Openpop\OpenPopSide.xaml.cs,fetchAllMessages,The following statement contains a magic number: for (int i = messageCount; i > 0; i--) {  	allMessages.Add (client.GetMessage (i));  	percentComplete = Convert.ToInt16 ((Convert.ToDouble (allMessages.Count) / Convert.ToDouble (messageCount)) * 100);  	(sender as BackgroundWorker).ReportProgress (percentComplete);  }  
Magic Number,MailClient.Forms.Openpop,OpenPopSide,C:\repos\Grymok_test\MailClient\MailClient\Forms\Openpop\OpenPopSide.xaml.cs,fetchAllMessages,The following statement contains a magic number: percentComplete = Convert.ToInt16 ((Convert.ToDouble (allMessages.Count) / Convert.ToDouble (messageCount)) * 100);  
Magic Number,MailClient.Forms.Openpop,OpenPopSide,C:\repos\Grymok_test\MailClient\MailClient\Forms\Openpop\OpenPopSide.xaml.cs,Subjectname_SelectionChanged,The following statement contains a magic number: while (reader.Read ()) {  	string msgID = reader.GetString (0);  	string msgSender = reader.GetString (1);  	string msgSubject = reader.GetString (2);  	string msgBody = reader.GetString (3);  	dbmsg.Add (new Msg () {  		MsgID = msgID'  		MsgSender = msgSender'  		MsgSubject = msgSubject'  		MsgBody = msgBody  	});  }  
Magic Number,MailClient.Forms.Openpop,OpenPopSide,C:\repos\Grymok_test\MailClient\MailClient\Forms\Openpop\OpenPopSide.xaml.cs,Subjectname_SelectionChanged,The following statement contains a magic number: while (reader.Read ()) {  	string msgID = reader.GetString (0);  	string msgSender = reader.GetString (1);  	string msgSubject = reader.GetString (2);  	string msgBody = reader.GetString (3);  	dbmsg.Add (new Msg () {  		MsgID = msgID'  		MsgSender = msgSender'  		MsgSubject = msgSubject'  		MsgBody = msgBody  	});  }  
Magic Number,MailClient.Forms.Openpop,OpenPopSide,C:\repos\Grymok_test\MailClient\MailClient\Forms\Openpop\OpenPopSide.xaml.cs,updatDB,The following statement contains a magic number: try {  	SQLiteConnection sqliteCon = new SQLiteConnection (@"Data Source = messages.db;");  	sqliteCon.Open ();  	List<Msg> dbmsg = new List<Msg> ();  	SQLiteCommand cmdRead = new SQLiteCommand ("SELECT * FROM Messages "' sqliteCon);  	SQLiteDataReader reader = cmdRead.ExecuteReader ();  	//try  	//{  	while (reader.Read ()) {  		string msgID = reader.GetString (0);  		string msgSender = reader.GetString (1);  		string msgSubject = reader.GetString (2);  		string msgBody = reader.GetString (3);  		dbmsg.Add (new Msg () {  			MsgID = msgID'  			MsgSender = msgSender'  			MsgSubject = msgSubject'  			MsgBody = msgBody  		});  	}  	foreach (Msg msg in dbmsg) {  		ADD_NEW_DATA data = new ADD_NEW_DATA (msg.MsgSubject' msg.MsgID' "Data3");  		Subjectname.Items.Add (data);  		//Subjectname.Items.Add(msg.MsgSubject);  		// sercetBox.Items.Add(msg.MsgID);  	}  	sqliteCon.Close ();  }  catch (Exception ex) {  	Debug.WriteLine ("Exception");  	Debug.WriteLine (ex.Message);  }  
Magic Number,MailClient.Forms.Openpop,OpenPopSide,C:\repos\Grymok_test\MailClient\MailClient\Forms\Openpop\OpenPopSide.xaml.cs,updatDB,The following statement contains a magic number: try {  	SQLiteConnection sqliteCon = new SQLiteConnection (@"Data Source = messages.db;");  	sqliteCon.Open ();  	List<Msg> dbmsg = new List<Msg> ();  	SQLiteCommand cmdRead = new SQLiteCommand ("SELECT * FROM Messages "' sqliteCon);  	SQLiteDataReader reader = cmdRead.ExecuteReader ();  	//try  	//{  	while (reader.Read ()) {  		string msgID = reader.GetString (0);  		string msgSender = reader.GetString (1);  		string msgSubject = reader.GetString (2);  		string msgBody = reader.GetString (3);  		dbmsg.Add (new Msg () {  			MsgID = msgID'  			MsgSender = msgSender'  			MsgSubject = msgSubject'  			MsgBody = msgBody  		});  	}  	foreach (Msg msg in dbmsg) {  		ADD_NEW_DATA data = new ADD_NEW_DATA (msg.MsgSubject' msg.MsgID' "Data3");  		Subjectname.Items.Add (data);  		//Subjectname.Items.Add(msg.MsgSubject);  		// sercetBox.Items.Add(msg.MsgID);  	}  	sqliteCon.Close ();  }  catch (Exception ex) {  	Debug.WriteLine ("Exception");  	Debug.WriteLine (ex.Message);  }  
Magic Number,MailClient.Forms.Openpop,OpenPopSide,C:\repos\Grymok_test\MailClient\MailClient\Forms\Openpop\OpenPopSide.xaml.cs,updatDB,The following statement contains a magic number: while (reader.Read ()) {  	string msgID = reader.GetString (0);  	string msgSender = reader.GetString (1);  	string msgSubject = reader.GetString (2);  	string msgBody = reader.GetString (3);  	dbmsg.Add (new Msg () {  		MsgID = msgID'  		MsgSender = msgSender'  		MsgSubject = msgSubject'  		MsgBody = msgBody  	});  }  
Magic Number,MailClient.Forms.Openpop,OpenPopSide,C:\repos\Grymok_test\MailClient\MailClient\Forms\Openpop\OpenPopSide.xaml.cs,updatDB,The following statement contains a magic number: while (reader.Read ()) {  	string msgID = reader.GetString (0);  	string msgSender = reader.GetString (1);  	string msgSubject = reader.GetString (2);  	string msgBody = reader.GetString (3);  	dbmsg.Add (new Msg () {  		MsgID = msgID'  		MsgSender = msgSender'  		MsgSubject = msgSubject'  		MsgBody = msgBody  	});  }  
