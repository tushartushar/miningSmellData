Implementation smell,Namespace,Class,File,Method,Description
Complex Method,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,Cyclomatic complexity of the method is 10
Long Parameter List,KiritoriMage,FoldDetectUtil,C:\repos\sunnyone_kiritorimage\KiritoriMage\FoldDetectUtil.cs,getCombinations,The method has 7 parameters.
Long Parameter List,KiritoriMage,FoldDetectUtil,C:\repos\sunnyone_kiritorimage\KiritoriMage\FoldDetectUtil.cs,DetectFolds,The method has 10 parameters.
Long Parameter List,KiritoriMage,Util,C:\repos\sunnyone_kiritorimage\KiritoriMage\Util.cs,SearchRangeFromArray,The method has 5 parameters.
Long Parameter List,KiritoriMage,Util,C:\repos\sunnyone_kiritorimage\KiritoriMage\Util.cs,SearchRegionFromArray,The method has 6 parameters.
Long Statement,KiritoriMage,FoldDetectUtil,C:\repos\sunnyone_kiritorimage\KiritoriMage\FoldDetectUtil.cs,DetectFolds,The length of the statement  "	var mat = matSrc.CvtColor (ColorConversion.BgrToGray).AdaptiveThreshold (255' AdaptiveThresholdType.MeanC' ThresholdType.Binary' blur' 1); " is 138.
Long Statement,KiritoriMage,FoldDetectUtil,C:\repos\sunnyone_kiritorimage\KiritoriMage\FoldDetectUtil.cs,DetectFolds,The length of the statement  "	var rects = mat.FindContoursAsArray (ContourRetrieval.External' ContourChain.ApproxSimple).Select (x => Cv2.BoundingRect (x)).OrderBy (x => x.X).ToArray (); " is 156.
Long Statement,KiritoriMage,FoldDetectUtil,C:\repos\sunnyone_kiritorimage\KiritoriMage\FoldDetectUtil.cs,DetectFolds,The length of the statement  "		throw new FoldDetectException (string.Format ("Matched rect is not found (score: {0})"' bestMatchRectSet.ThinFatDistance)); " is 123.
Long Statement,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,ImagePositionRectToViewPointRect,The length of the statement  "	return new Rect (new Point (this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (r.X)' this.VerticalPositionConverter.ConvertImagePositionToViewPosition (r.Y))' new Point (this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (r.X + r.Width)' this.VerticalPositionConverter.ConvertImagePositionToViewPosition (r.Y + r.Height))); " is 358.
Long Statement,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The length of the statement  "			FormattedText ft = new FormattedText (String.Format ("({0})"' i)' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface ("Verdana")' 16' // font size " is 186.
Long Statement,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The length of the statement  "			drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2)); " is 123.
Long Statement,KiritoriMage,MainWindow,C:\repos\sunnyone_kiritorimage\KiritoriMage\MainWindow.xaml.cs,HorizontalThumb_DragCompleted,The length of the statement  "	thumbDragCompleted (imageViewModel.HorizontalSplitPositionBarViewModel' (SplitPositionItem)((Thumb)sender).DataContext); " is 120.
Complex Conditional,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The conditional expression  "(curPosY < 0 || curPosX < 0) && !(curPosX < 0 && curPosY < 0)"  is complex.
Complex Conditional,KiritoriMage,Util,C:\repos\sunnyone_kiritorimage\KiritoriMage\Util.cs,SearchRegionFromArray,The conditional expression  "x1 >= 0 && x2 >= 0 && y1 >= 0 && y2 >= 0"  is complex.
Magic Number,KiritoriMage,FoldDetectUtil,C:\repos\sunnyone_kiritorimage\KiritoriMage\FoldDetectUtil.cs,DetectFolds,The following statement contains a magic number: if (blur % 2 == 0)  	blur++;  
Magic Number,KiritoriMage,FoldDetectUtil,C:\repos\sunnyone_kiritorimage\KiritoriMage\FoldDetectUtil.cs,DetectFolds,The following statement contains a magic number: mat = mat.MedianBlur (blur).Threshold (0' 255' OpenCvSharp.ThresholdType.Otsu);  
Magic Number,KiritoriMage,FoldDetectUtil,C:\repos\sunnyone_kiritorimage\KiritoriMage\FoldDetectUtil.cs,DetectFolds,The following statement contains a magic number: if (rects.Length < 4)  	throw new FoldDetectException (string.Format ("Too few folds: {0}"' rects.Length));  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: foreach (PointInt point in ImageViewModel.MarkedPointList) {  	int x = point.X;  	int y = point.Y;  	Int32Rect? markedRegion = Util.SearchRegionFromArray (x' y' xSplitPosArray' ySplitPosArray' maxX' maxY);  	if (markedRegion.HasValue) {  		double xView = this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (x);  		double yView = this.VerticalPositionConverter.ConvertImagePositionToViewPosition (y);  		// marked point cursor  		drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  		// number  		FormattedText ft = new FormattedText (String.Format ("({0})"' i)' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface ("Verdana")' 16' // font size  		Brushes.Red);  		Rect rect = ImagePositionRectToViewPointRect (markedRegion.Value);  		drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  		// region color  		drawingContext.PushOpacity (0.5);  		drawingContext.DrawRectangle (Brushes.LightSalmon' null' rect);  		drawingContext.Pop ();  		i++;  	}  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: foreach (PointInt point in ImageViewModel.MarkedPointList) {  	int x = point.X;  	int y = point.Y;  	Int32Rect? markedRegion = Util.SearchRegionFromArray (x' y' xSplitPosArray' ySplitPosArray' maxX' maxY);  	if (markedRegion.HasValue) {  		double xView = this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (x);  		double yView = this.VerticalPositionConverter.ConvertImagePositionToViewPosition (y);  		// marked point cursor  		drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  		// number  		FormattedText ft = new FormattedText (String.Format ("({0})"' i)' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface ("Verdana")' 16' // font size  		Brushes.Red);  		Rect rect = ImagePositionRectToViewPointRect (markedRegion.Value);  		drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  		// region color  		drawingContext.PushOpacity (0.5);  		drawingContext.DrawRectangle (Brushes.LightSalmon' null' rect);  		drawingContext.Pop ();  		i++;  	}  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: foreach (PointInt point in ImageViewModel.MarkedPointList) {  	int x = point.X;  	int y = point.Y;  	Int32Rect? markedRegion = Util.SearchRegionFromArray (x' y' xSplitPosArray' ySplitPosArray' maxX' maxY);  	if (markedRegion.HasValue) {  		double xView = this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (x);  		double yView = this.VerticalPositionConverter.ConvertImagePositionToViewPosition (y);  		// marked point cursor  		drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  		// number  		FormattedText ft = new FormattedText (String.Format ("({0})"' i)' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface ("Verdana")' 16' // font size  		Brushes.Red);  		Rect rect = ImagePositionRectToViewPointRect (markedRegion.Value);  		drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  		// region color  		drawingContext.PushOpacity (0.5);  		drawingContext.DrawRectangle (Brushes.LightSalmon' null' rect);  		drawingContext.Pop ();  		i++;  	}  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: foreach (PointInt point in ImageViewModel.MarkedPointList) {  	int x = point.X;  	int y = point.Y;  	Int32Rect? markedRegion = Util.SearchRegionFromArray (x' y' xSplitPosArray' ySplitPosArray' maxX' maxY);  	if (markedRegion.HasValue) {  		double xView = this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (x);  		double yView = this.VerticalPositionConverter.ConvertImagePositionToViewPosition (y);  		// marked point cursor  		drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  		// number  		FormattedText ft = new FormattedText (String.Format ("({0})"' i)' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface ("Verdana")' 16' // font size  		Brushes.Red);  		Rect rect = ImagePositionRectToViewPointRect (markedRegion.Value);  		drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  		// region color  		drawingContext.PushOpacity (0.5);  		drawingContext.DrawRectangle (Brushes.LightSalmon' null' rect);  		drawingContext.Pop ();  		i++;  	}  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: foreach (PointInt point in ImageViewModel.MarkedPointList) {  	int x = point.X;  	int y = point.Y;  	Int32Rect? markedRegion = Util.SearchRegionFromArray (x' y' xSplitPosArray' ySplitPosArray' maxX' maxY);  	if (markedRegion.HasValue) {  		double xView = this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (x);  		double yView = this.VerticalPositionConverter.ConvertImagePositionToViewPosition (y);  		// marked point cursor  		drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  		// number  		FormattedText ft = new FormattedText (String.Format ("({0})"' i)' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface ("Verdana")' 16' // font size  		Brushes.Red);  		Rect rect = ImagePositionRectToViewPointRect (markedRegion.Value);  		drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  		// region color  		drawingContext.PushOpacity (0.5);  		drawingContext.DrawRectangle (Brushes.LightSalmon' null' rect);  		drawingContext.Pop ();  		i++;  	}  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: foreach (PointInt point in ImageViewModel.MarkedPointList) {  	int x = point.X;  	int y = point.Y;  	Int32Rect? markedRegion = Util.SearchRegionFromArray (x' y' xSplitPosArray' ySplitPosArray' maxX' maxY);  	if (markedRegion.HasValue) {  		double xView = this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (x);  		double yView = this.VerticalPositionConverter.ConvertImagePositionToViewPosition (y);  		// marked point cursor  		drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  		// number  		FormattedText ft = new FormattedText (String.Format ("({0})"' i)' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface ("Verdana")' 16' // font size  		Brushes.Red);  		Rect rect = ImagePositionRectToViewPointRect (markedRegion.Value);  		drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  		// region color  		drawingContext.PushOpacity (0.5);  		drawingContext.DrawRectangle (Brushes.LightSalmon' null' rect);  		drawingContext.Pop ();  		i++;  	}  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: foreach (PointInt point in ImageViewModel.MarkedPointList) {  	int x = point.X;  	int y = point.Y;  	Int32Rect? markedRegion = Util.SearchRegionFromArray (x' y' xSplitPosArray' ySplitPosArray' maxX' maxY);  	if (markedRegion.HasValue) {  		double xView = this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (x);  		double yView = this.VerticalPositionConverter.ConvertImagePositionToViewPosition (y);  		// marked point cursor  		drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  		// number  		FormattedText ft = new FormattedText (String.Format ("({0})"' i)' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface ("Verdana")' 16' // font size  		Brushes.Red);  		Rect rect = ImagePositionRectToViewPointRect (markedRegion.Value);  		drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  		// region color  		drawingContext.PushOpacity (0.5);  		drawingContext.DrawRectangle (Brushes.LightSalmon' null' rect);  		drawingContext.Pop ();  		i++;  	}  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: foreach (PointInt point in ImageViewModel.MarkedPointList) {  	int x = point.X;  	int y = point.Y;  	Int32Rect? markedRegion = Util.SearchRegionFromArray (x' y' xSplitPosArray' ySplitPosArray' maxX' maxY);  	if (markedRegion.HasValue) {  		double xView = this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (x);  		double yView = this.VerticalPositionConverter.ConvertImagePositionToViewPosition (y);  		// marked point cursor  		drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  		// number  		FormattedText ft = new FormattedText (String.Format ("({0})"' i)' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface ("Verdana")' 16' // font size  		Brushes.Red);  		Rect rect = ImagePositionRectToViewPointRect (markedRegion.Value);  		drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  		// region color  		drawingContext.PushOpacity (0.5);  		drawingContext.DrawRectangle (Brushes.LightSalmon' null' rect);  		drawingContext.Pop ();  		i++;  	}  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: if (markedRegion.HasValue) {  	double xView = this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (x);  	double yView = this.VerticalPositionConverter.ConvertImagePositionToViewPosition (y);  	// marked point cursor  	drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  	// number  	FormattedText ft = new FormattedText (String.Format ("({0})"' i)' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface ("Verdana")' 16' // font size  	Brushes.Red);  	Rect rect = ImagePositionRectToViewPointRect (markedRegion.Value);  	drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  	// region color  	drawingContext.PushOpacity (0.5);  	drawingContext.DrawRectangle (Brushes.LightSalmon' null' rect);  	drawingContext.Pop ();  	i++;  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: if (markedRegion.HasValue) {  	double xView = this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (x);  	double yView = this.VerticalPositionConverter.ConvertImagePositionToViewPosition (y);  	// marked point cursor  	drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  	// number  	FormattedText ft = new FormattedText (String.Format ("({0})"' i)' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface ("Verdana")' 16' // font size  	Brushes.Red);  	Rect rect = ImagePositionRectToViewPointRect (markedRegion.Value);  	drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  	// region color  	drawingContext.PushOpacity (0.5);  	drawingContext.DrawRectangle (Brushes.LightSalmon' null' rect);  	drawingContext.Pop ();  	i++;  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: if (markedRegion.HasValue) {  	double xView = this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (x);  	double yView = this.VerticalPositionConverter.ConvertImagePositionToViewPosition (y);  	// marked point cursor  	drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  	// number  	FormattedText ft = new FormattedText (String.Format ("({0})"' i)' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface ("Verdana")' 16' // font size  	Brushes.Red);  	Rect rect = ImagePositionRectToViewPointRect (markedRegion.Value);  	drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  	// region color  	drawingContext.PushOpacity (0.5);  	drawingContext.DrawRectangle (Brushes.LightSalmon' null' rect);  	drawingContext.Pop ();  	i++;  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: if (markedRegion.HasValue) {  	double xView = this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (x);  	double yView = this.VerticalPositionConverter.ConvertImagePositionToViewPosition (y);  	// marked point cursor  	drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  	// number  	FormattedText ft = new FormattedText (String.Format ("({0})"' i)' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface ("Verdana")' 16' // font size  	Brushes.Red);  	Rect rect = ImagePositionRectToViewPointRect (markedRegion.Value);  	drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  	// region color  	drawingContext.PushOpacity (0.5);  	drawingContext.DrawRectangle (Brushes.LightSalmon' null' rect);  	drawingContext.Pop ();  	i++;  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: if (markedRegion.HasValue) {  	double xView = this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (x);  	double yView = this.VerticalPositionConverter.ConvertImagePositionToViewPosition (y);  	// marked point cursor  	drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  	// number  	FormattedText ft = new FormattedText (String.Format ("({0})"' i)' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface ("Verdana")' 16' // font size  	Brushes.Red);  	Rect rect = ImagePositionRectToViewPointRect (markedRegion.Value);  	drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  	// region color  	drawingContext.PushOpacity (0.5);  	drawingContext.DrawRectangle (Brushes.LightSalmon' null' rect);  	drawingContext.Pop ();  	i++;  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: if (markedRegion.HasValue) {  	double xView = this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (x);  	double yView = this.VerticalPositionConverter.ConvertImagePositionToViewPosition (y);  	// marked point cursor  	drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  	// number  	FormattedText ft = new FormattedText (String.Format ("({0})"' i)' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface ("Verdana")' 16' // font size  	Brushes.Red);  	Rect rect = ImagePositionRectToViewPointRect (markedRegion.Value);  	drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  	// region color  	drawingContext.PushOpacity (0.5);  	drawingContext.DrawRectangle (Brushes.LightSalmon' null' rect);  	drawingContext.Pop ();  	i++;  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: if (markedRegion.HasValue) {  	double xView = this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (x);  	double yView = this.VerticalPositionConverter.ConvertImagePositionToViewPosition (y);  	// marked point cursor  	drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  	// number  	FormattedText ft = new FormattedText (String.Format ("({0})"' i)' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface ("Verdana")' 16' // font size  	Brushes.Red);  	Rect rect = ImagePositionRectToViewPointRect (markedRegion.Value);  	drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  	// region color  	drawingContext.PushOpacity (0.5);  	drawingContext.DrawRectangle (Brushes.LightSalmon' null' rect);  	drawingContext.Pop ();  	i++;  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: if (markedRegion.HasValue) {  	double xView = this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (x);  	double yView = this.VerticalPositionConverter.ConvertImagePositionToViewPosition (y);  	// marked point cursor  	drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  	// number  	FormattedText ft = new FormattedText (String.Format ("({0})"' i)' System.Globalization.CultureInfo.CurrentUICulture' FlowDirection.LeftToRight' new Typeface ("Verdana")' 16' // font size  	Brushes.Red);  	Rect rect = ImagePositionRectToViewPointRect (markedRegion.Value);  	drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  	// region color  	drawingContext.PushOpacity (0.5);  	drawingContext.DrawRectangle (Brushes.LightSalmon' null' rect);  	drawingContext.Pop ();  	i++;  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: drawingContext.DrawEllipse (Brushes.Red' null' new Point (xView' yView)' 3.0' 3.0);  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: drawingContext.DrawText (ft' new Point (rect.X + rect.Width / 2 - ft.Width / 2' rect.Y + rect.Height / 2 - ft.Height / 2));  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: drawingContext.PushOpacity (0.5);  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: if ((curPosY < 0 || curPosX < 0) && !(curPosX < 0 && curPosY < 0)) {  	if (this.ImageViewModel.ShowCursorLine) {  		Pen cursorLinePen = new Pen ();  		cursorLinePen.Brush = Brushes.Green;  		cursorLinePen.Thickness = 1;  		if (curPosX < maxX && curPosY < 0) {  			double xView = this.HorizontalPositionConverter.ConvertImagePositionToViewPosition (curPosX);  			drawingContext.DrawLine (cursorLinePen' new Point (xView' 0)' new Point (xView' maxYView));  		}  		else if (curPosX < 0 && curPosY < maxY) {  			double yView = this.VerticalPositionConverter.ConvertImagePositionToViewPosition (curPosY);  			drawingContext.DrawLine (cursorLinePen' new Point (0' yView)' new Point (maxXView' yView));  		}  	}  }  else {  	Int32Rect? cursorRegion = Util.SearchRegionFromArray (curPosX' curPosY' xSplitPosArray' ySplitPosArray' maxX' maxY);  	if (cursorRegion.HasValue) {  		drawingContext.PushOpacity (0.5);  		drawingContext.DrawRectangle (Brushes.LightGreen' null' ImagePositionRectToViewPointRect (cursorRegion.Value));  		drawingContext.Pop ();  	}  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: if (cursorRegion.HasValue) {  	drawingContext.PushOpacity (0.5);  	drawingContext.DrawRectangle (Brushes.LightGreen' null' ImagePositionRectToViewPointRect (cursorRegion.Value));  	drawingContext.Pop ();  }  
Magic Number,KiritoriMage,ImageAdorner,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageAdorner.cs,OnRender,The following statement contains a magic number: drawingContext.PushOpacity (0.5);  
Magic Number,KiritoriMage,ImageViewModel,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageViewModel.cs,SetFoldRegions,The following statement contains a magic number: if (folds.Length != 3) {  	throw new ArgumentException ("Unsupported folds length.");  }  
Magic Number,KiritoriMage,ImageViewModel,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageViewModel.cs,SetFoldRegions,The following statement contains a magic number: for (var i = 0; i < xs.Length; i++) {  	var left = xs [i];  	var right = (i == xs.Length - 1) ? this.LoadedBitmapWidth : xs [i + 1];  	var centerX = (left + right) / 2;  	var centerY = (int)(this.LoadedBitmapHeight * 0.45);  	// 0.5 - (about text height)  	if (i != xs.Length - 1) {  		this.HorizontalSplitPositionBarViewModel.PositionList.Add (new SplitPositionItem {  			Position = right  		});  	}  	positionList.Add (new PointInt (centerX' centerY));  }  
Magic Number,KiritoriMage,ImageViewModel,C:\repos\sunnyone_kiritorimage\KiritoriMage\ImageViewModel.cs,SetFoldRegions,The following statement contains a magic number: for (var i = 0; i < xs.Length; i++) {  	var left = xs [i];  	var right = (i == xs.Length - 1) ? this.LoadedBitmapWidth : xs [i + 1];  	var centerX = (left + right) / 2;  	var centerY = (int)(this.LoadedBitmapHeight * 0.45);  	// 0.5 - (about text height)  	if (i != xs.Length - 1) {  		this.HorizontalSplitPositionBarViewModel.PositionList.Add (new SplitPositionItem {  			Position = right  		});  	}  	positionList.Add (new PointInt (centerX' centerY));  }  
Magic Number,KiritoriMage,MainWindow,C:\repos\sunnyone_kiritorimage\KiritoriMage\MainWindow.xaml.cs,buttonSave_Click,The following statement contains a magic number: foreach (Int32Rect? rect in imageViewModel.GetSelectedRegionList ()) {  	i++;  	if (!rect.HasValue)  		continue;  	#if true  	CroppedBitmap croppedBitmap = new CroppedBitmap (this.imageViewModel.LoadedBitmap' rect.Value);  	string filename = String.Format ("{0}_{1:000}.jpg"' imageBaseName' i);  	JpegBitmapEncoder enc = new JpegBitmapEncoder ();  	enc.QualityLevel = 90;  	enc.Frames.Add (BitmapFrame.Create (croppedBitmap));  	string path = System.IO.Path.Combine (imageDir' Properties.Settings.Default.SaveRelativeDir' filename);  	try {  		using (FileStream fs = new System.IO.FileStream (path' FileMode.Create)) {  			enc.Save (fs);  		}  	}  	catch (Exception ex) {  		this.statusText.Text = String.Format ("Failed to write {0}: {1}"' path' ex.Message);  		return;  	}  	savedFileList.Add (System.IO.Path.GetFileName (path));  	#else  	                // dirty / debugging purpose: save range to a file.                 string filename = String.Format("{0}.txt"' imageBaseName);                 string textPath = System.IO.Path.Combine(imageDir' filename);                 System.IO.File.AppendAllText(textPath' string.Format("{0}'{1} "' rect.Value.X' rect.Value.Width)' Encoding.UTF8); #endif  }  
Magic Number,KiritoriMage,MainWindow,C:\repos\sunnyone_kiritorimage\KiritoriMage\MainWindow.xaml.cs,buttonSave_Click,The following statement contains a magic number: enc.QualityLevel = 90;  
Magic Number,KiritoriMage,MainWindow,C:\repos\sunnyone_kiritorimage\KiritoriMage\MainWindow.xaml.cs,buttonRotate_Click,The following statement contains a magic number: tb.Transform = new RotateTransform (90);  
