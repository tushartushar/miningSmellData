Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,SharpDocPak,ConsoleHelper,C:\repos\xoofx_SharpDoc\src\SharpDocPak\ConsoleHelper.cs,DuplicateHandle,The method has 7 parameters. Parameters: hSourceProcessHandle' hSourceHandle' hTargetProcessHandle' lpTargetHandle' dwDesiredAccess' bInheritHandle' dwOptions
Long Statement,SharpDocPak,DocumentIndexer,C:\repos\xoofx_SharpDoc\src\SharpDocPak\DocumentIndexer.cs,Init,The length of the statement  "            writer = new IndexWriter(Index' new StandardAnalyzer(Version.LUCENE_29)' true' new IndexWriter.MaxFieldLength(0xf4240)); " is 120.
Long Statement,SharpDocPak,SharpDocPakApp,C:\repos\xoofx_SharpDoc\src\SharpDocPak\SharpDocPakApp.cs,Pack,The length of the statement  "                UsageError("Directory [{0}] must contain at least an {1} or {2} file"' rootDirectory' Archive.DefaultHtmlRoot' Archive.DefaultHtmlRootAlternate); " is 145.
Long Statement,SharpDocPak,SharpDocPakApp,C:\repos\xoofx_SharpDoc\src\SharpDocPak\SharpDocPakApp.cs,LoadCurrentArchive,The length of the statement  "                MessageBox.Show("This executable is not packed with any documentation. Use --help for more information"' "SharpDocPak"' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 170.
Long Statement,SharpDocPak,WebBrowserForm,C:\repos\xoofx_SharpDoc\src\SharpDocPak\WebBrowserForm.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(WebBrowserForm)); " is 134.
Long Statement,SharpDocPak,DocumentServer,C:\repos\xoofx_SharpDoc\src\SharpDocPak\DocumentServer.cs,ServerProcessRequest,The length of the statement  "                //response.AppendHeader("Expires"' string.Format(System.Globalization.CultureInfo.InvariantCulture' "{0:r}"'expireTime)); " is 121.
Long Statement,SharpDocPak,DocumentServer,C:\repos\xoofx_SharpDoc\src\SharpDocPak\DocumentServer.cs,ServerProcessRequest,The length of the statement  "                //response.AppendHeader("Last-Modified"' string.Format(System.Globalization.CultureInfo.InvariantCulture' "{0:r}"' lastTime)); " is 126.
Empty Catch Block,SharpDocPak,HttpServer,C:\repos\xoofx_SharpDoc\src\SharpDocPak\HttpServer.cs,FindAvailablePort,The method has an empty catch block.
Magic Number,SharpDocPak,Archive,C:\repos\xoofx_SharpDoc\src\SharpDocPak\Archive.cs,CheckArchive,The following statement contains a magic number: try              {                  var reader = new BinaryReader(stream);                  if (stream.Length < 4)                      return -1;                    stream.Seek(-4' SeekOrigin.End);                    var signature = reader.ReadInt32();                  if (signature != SignatureCheck)                      return -1;                    // Retrieve the size of the archive                  stream.Seek(-8' SeekOrigin.End);                  int sizeOfArchiveInBytes = reader.ReadInt32();                    // Jump to the beginning of the archive                  stream.Seek(-sizeOfArchiveInBytes-8' SeekOrigin.End);                    return stream.Position;              } finally              {                  stream.Position = savedPosition;              }
Magic Number,SharpDocPak,Archive,C:\repos\xoofx_SharpDoc\src\SharpDocPak\Archive.cs,CheckArchive,The following statement contains a magic number: try              {                  var reader = new BinaryReader(stream);                  if (stream.Length < 4)                      return -1;                    stream.Seek(-4' SeekOrigin.End);                    var signature = reader.ReadInt32();                  if (signature != SignatureCheck)                      return -1;                    // Retrieve the size of the archive                  stream.Seek(-8' SeekOrigin.End);                  int sizeOfArchiveInBytes = reader.ReadInt32();                    // Jump to the beginning of the archive                  stream.Seek(-sizeOfArchiveInBytes-8' SeekOrigin.End);                    return stream.Position;              } finally              {                  stream.Position = savedPosition;              }
Magic Number,SharpDocPak,Archive,C:\repos\xoofx_SharpDoc\src\SharpDocPak\Archive.cs,CheckArchive,The following statement contains a magic number: try              {                  var reader = new BinaryReader(stream);                  if (stream.Length < 4)                      return -1;                    stream.Seek(-4' SeekOrigin.End);                    var signature = reader.ReadInt32();                  if (signature != SignatureCheck)                      return -1;                    // Retrieve the size of the archive                  stream.Seek(-8' SeekOrigin.End);                  int sizeOfArchiveInBytes = reader.ReadInt32();                    // Jump to the beginning of the archive                  stream.Seek(-sizeOfArchiveInBytes-8' SeekOrigin.End);                    return stream.Position;              } finally              {                  stream.Position = savedPosition;              }
Magic Number,SharpDocPak,Archive,C:\repos\xoofx_SharpDoc\src\SharpDocPak\Archive.cs,CheckArchive,The following statement contains a magic number: try              {                  var reader = new BinaryReader(stream);                  if (stream.Length < 4)                      return -1;                    stream.Seek(-4' SeekOrigin.End);                    var signature = reader.ReadInt32();                  if (signature != SignatureCheck)                      return -1;                    // Retrieve the size of the archive                  stream.Seek(-8' SeekOrigin.End);                  int sizeOfArchiveInBytes = reader.ReadInt32();                    // Jump to the beginning of the archive                  stream.Seek(-sizeOfArchiveInBytes-8' SeekOrigin.End);                    return stream.Position;              } finally              {                  stream.Position = savedPosition;              }
Magic Number,SharpDocPak,Utility,C:\repos\xoofx_SharpDoc\src\SharpDocPak\Utility.cs,CopyStream,The following statement contains a magic number: var buffer = new byte[32768];
Magic Number,SharpDocPak,Utility,C:\repos\xoofx_SharpDoc\src\SharpDocPak\Utility.cs,CopyStream,The following statement contains a magic number: var buffer = new byte[32768];
Magic Number,SharpDocPak,WebBrowserForm,C:\repos\xoofx_SharpDoc\src\SharpDocPak\WebBrowserForm.cs,InitializeComponent,The following statement contains a magic number: this.webBrowser1.MinimumSize = new System.Drawing.Size(20' 20);
Magic Number,SharpDocPak,WebBrowserForm,C:\repos\xoofx_SharpDoc\src\SharpDocPak\WebBrowserForm.cs,InitializeComponent,The following statement contains a magic number: this.webBrowser1.MinimumSize = new System.Drawing.Size(20' 20);
Magic Number,SharpDocPak,WebBrowserForm,C:\repos\xoofx_SharpDoc\src\SharpDocPak\WebBrowserForm.cs,InitializeComponent,The following statement contains a magic number: this.webBrowser1.Size = new System.Drawing.Size(992' 578);
Magic Number,SharpDocPak,WebBrowserForm,C:\repos\xoofx_SharpDoc\src\SharpDocPak\WebBrowserForm.cs,InitializeComponent,The following statement contains a magic number: this.webBrowser1.Size = new System.Drawing.Size(992' 578);
Magic Number,SharpDocPak,WebBrowserForm,C:\repos\xoofx_SharpDoc\src\SharpDocPak\WebBrowserForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(992' 578);
Magic Number,SharpDocPak,WebBrowserForm,C:\repos\xoofx_SharpDoc\src\SharpDocPak\WebBrowserForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(992' 578);
Magic Number,SharpDocPak,HttpServer,C:\repos\xoofx_SharpDoc\src\SharpDocPak\HttpServer.cs,FindAvailablePort,The following statement contains a magic number: for (int i = startingPort; i < 65535; i++)              {                  try                  {                      var listener = new TcpListener(localhost' i);                      listener.Start();                      listener.Stop();                      return i;                  }                  catch (SocketException ex)                  {                  }              }
Magic Number,SharpDocPak,DocumentServer,C:\repos\xoofx_SharpDoc\src\SharpDocPak\DocumentServer.cs,RunSearchQuery,The following statement contains a magic number: try              {                  var fields = new List<string>();                  for (int i = 0; i < Content.Tags.Count; i++)                  {                      if (queryMap.Get(Content.Tags[i].Id) != null)                          fields.Add(Content.Tags[i].Id);                  }                    if (fields.Count > 0)                   {                      queryParser = new MultiFieldQueryParser(Version.LUCENE_29' fields.ToArray()' analyzer);                        var query = queryParser.Parse(queryText);                      var maxDocs = indexReader.MaxDoc();                      var docs = indexSearcher.Search(query' null' maxDocs);                        foreach (var hit in docs.scoreDocs)                      {                          resultsFound = true;                          var documentFromSearcher = indexSearcher.Doc(hit.doc);                            builder.AppendFormat("<dl>").AppendLine();                          var title = documentFromSearcher.Get("title");                          var urlFile = documentFromSearcher.Get("file");                          builder.AppendFormat("<dt><a href='{0}'>{1}</a><dt>"' urlFile' title);                          var content = documentFromSearcher.Get("content");                          content = content.Substring(0' Math.Min(500' content.Length));                          builder.AppendFormat("<dd>{0}</dd>"' content);                          builder.AppendFormat("</dl>").AppendLine();                          builder.AppendFormat("<hr>").AppendLine();                      }                  } else                  {                      builder.Append("<p>You must select at least one search option</p>");                  }              }              catch (Exception ex)              {                  builder.Append("<br/>").Append(ex);              }
