Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Jump.Location,SetJumpLocationCommand,C:\repos\tkellogg_Jump-Location\Jump.Location\SetJumpLocationCommand.cs,ProcessRecord,Cyclomatic complexity of the method is 11
Long Statement,Jump.Location,SetJumpLocationCommand,C:\repos\tkellogg_Jump-Location\Jump.Location\SetJumpLocationCommand.cs,ProcessRecord,The length of the statement  "                    WriteWarning(String.Format("Skipping {0}: directory not found. You can remove obsolete directories from database with command 'jumpstat -cleanup'."' match.Path)); " is 162.
Magic Number,Jump.Location,CommandController,C:\repos\tkellogg_Jump-Location\Jump.Location\CommandController.cs,CommandController,The following statement contains a magic number: saveTimer = new Timer(SaveCallback' null' 0' 2 * 1000);
Magic Number,Jump.Location,CommandController,C:\repos\tkellogg_Jump-Location\Jump.Location\CommandController.cs,CommandController,The following statement contains a magic number: saveTimer = new Timer(SaveCallback' null' 0' 2 * 1000);
Magic Number,Jump.Location,FileStoreProvider,C:\repos\tkellogg_Jump-Location\Jump.Location\FileStoreProvider.cs,Save,The following statement contains a magic number: using (var mutex = new Mutex(false' _mutexId' out createdNew' _securitySettings))              {                  var hasHandle = false;                  try                  {                      try                      {                          hasHandle = mutex.WaitOne(1000' false);                          if (hasHandle == false)                          {                              // ignore                              return;                          }                      }                      catch (AbandonedMutexException)                      {                          // Log the fact the mutex was abandoned in another process' it will still get aquired                          hasHandle = true;                      }                                            // We can lose all history' if powershell will be closed during operation.                      File.WriteAllLines(_pathTemp' lines.ToArray());                      // NTFS guarantees atomic move operation http://stackoverflow.com/questions/774098/atomicity-of-file-move                      // So File.Move gurantees atomic' but doesn't support overwrite                      File.Copy(_pathTemp' _path' true);                  }                  finally                  {                      // edited by acidzombie24' added if statemnet                      if(hasHandle)                          mutex.ReleaseMutex();                  }              }
Magic Number,Jump.Location,FileStoreProvider,C:\repos\tkellogg_Jump-Location\Jump.Location\FileStoreProvider.cs,Revive,The following statement contains a magic number: foreach (var columns in nonBlankLines.Select(line => line.Split('\t')))              {                  if (columns == null || columns.Length != 2)                      throw new InvalidOperationException("Row of file didn't have 2 columns separated by a tab");                    var weight = 0M;                  decimal.TryParse(columns[0]' NumberStyles.Any' CultureInfo.InvariantCulture' out weight);                  var record = new Record(columns[1]' weight);                  db.Add(record);              }
