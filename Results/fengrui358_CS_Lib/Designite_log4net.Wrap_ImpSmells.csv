Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Qinjin.Library.Log.log4net.Wrap,Log,C:\repos\fengrui358_CS_Lib\Src\Library\Log\log4net.Wrap\log4net.Wrap\Log.cs,Debug,Cyclomatic complexity of the method is 8
Complex Method,Qinjin.Library.Log.log4net.Wrap,Log,C:\repos\fengrui358_CS_Lib\Src\Library\Log\log4net.Wrap\log4net.Wrap\Log.cs,Info,Cyclomatic complexity of the method is 8
Complex Method,Qinjin.Library.Log.log4net.Wrap,Log,C:\repos\fengrui358_CS_Lib\Src\Library\Log\log4net.Wrap\log4net.Wrap\Log.cs,Warn,Cyclomatic complexity of the method is 8
Complex Method,Qinjin.Library.Log.log4net.Wrap,Log,C:\repos\fengrui358_CS_Lib\Src\Library\Log\log4net.Wrap\log4net.Wrap\Log.cs,Error,Cyclomatic complexity of the method is 8
Complex Method,Qinjin.Library.Log.log4net.Wrap,Log,C:\repos\fengrui358_CS_Lib\Src\Library\Log\log4net.Wrap\log4net.Wrap\Log.cs,Fatal,Cyclomatic complexity of the method is 8
Long Statement,Qinjin.Library.Log.log4net.Wrap,PerformanceHelper,C:\repos\fengrui358_CS_Lib\Src\Library\Log\log4net.Wrap\log4net.Wrap\PerformanceHelper.cs,StartPerformance,The length of the statement  "		_performanceCounterCache.Add (name' new PerformanceCounter (filePath' methodName' Thread.CurrentThread.ManagedThreadId)); " is 121.
Long Statement,Qinjin.Library.Log.log4net.Wrap,PerformanceHelper,C:\repos\fengrui358_CS_Lib\Src\Library\Log\log4net.Wrap\log4net.Wrap\PerformanceHelper.cs,StopPerformance,The length of the statement  "			_performanceHelperLog.Info (string.Format ("{0} 耗时：{1} 【总量统计】共调用次数：{2} 共消耗时间：{3}"' _performanceCounterCacheByCustomKey [key].ShortName' elapsedMilliseconds / FrequencyMilliseconds' historyInfo.NumberOfInvokeTimes' historyInfo.TotalElapsedTicks / FrequencyMilliseconds)); " is 270.
Long Statement,Qinjin.Library.Log.log4net.Wrap,PerformanceHelper,C:\repos\fengrui358_CS_Lib\Src\Library\Log\log4net.Wrap\log4net.Wrap\PerformanceHelper.cs,StopPerformance,The length of the statement  "			_performanceHelperLog.Info (string.Format ("{0} 耗时：{1} 【总量统计】共调用次数：{2} 共消耗时间：{3}"' string.Format ("{0} {1}"' _performanceCounterCache [name].FilePath' _performanceCounterCache [name].MethodName)' elapsedMilliseconds / FrequencyMilliseconds' historyInfo.NumberOfInvokeTimes' historyInfo.TotalElapsedTicks / FrequencyMilliseconds)); " is 330.
Long Statement,Qinjin.Library.Log.log4net.Wrap,PerformanceHelper,C:\repos\fengrui358_CS_Lib\Src\Library\Log\log4net.Wrap\log4net.Wrap\PerformanceHelper.cs,AddHistoryInfo,The length of the statement  "			_performanceCounterHistory.Add (performanceCounter.ShortName' new PerformanceCounterHistoryInfo (performanceCounter.ShortName' performanceCounter.LastElapsedTicks)); " is 165.
Magic Number,Qinjin.Library.Log.log4net.Wrap,Log,C:\repos\fengrui358_CS_Lib\Src\Library\Log\log4net.Wrap\log4net.Wrap\Log.cs,AutoDetectType,The following statement contains a magic number: thisLevel += level + 2;  
