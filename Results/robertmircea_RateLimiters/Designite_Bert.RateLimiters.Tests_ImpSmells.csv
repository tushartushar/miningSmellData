Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,SetUp,The following statement contains a magic number: bucket = new FixedTokenBucket(MAX_TOKENS' REFILL_INTERVAL' 1000);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithNTokensGreaterThanMax_ReturnsTrue,The following statement contains a magic number: Assert.That(waitTime' Is.EqualTo(TimeSpan.FromMilliseconds(REFILL_INTERVAL*1000)));
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithNLessThanMaxSleepNLessThanMax_ReturnsFalse,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithNLessThanMaxSleepNLessThanMax_ReturnsFalse,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithNLessThanMaxSleepNLessThanMax_ReturnsFalse,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithNGreaterThanMaxSleepNGreaterThanMax_ReturnsTrue,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithNGreaterThanMaxSleepNGreaterThanMax_ReturnsTrue,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithNGreaterThanMaxSleepNGreaterThanMax_ReturnsTrue,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenThrottle_WaitTimeIsDynamicallyCalculated,The following statement contains a magic number: var virtualTime = new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenThrottle_WaitTimeIsDynamicallyCalculated,The following statement contains a magic number: var virtualTime = new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenThrottle_WaitTimeIsDynamicallyCalculated,The following statement contains a magic number: var virtualTime = new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenThrottle_WaitTimeIsDynamicallyCalculated,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => virtualTime.AddSeconds(closureI*3);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenThrottle_WaitTimeIsDynamicallyCalculated,The following statement contains a magic number: Assert.That(waitTime' Is.EqualTo(TimeSpan.FromSeconds(10-i*3)));
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenThrottle_WaitTimeIsDynamicallyCalculated,The following statement contains a magic number: Assert.That(waitTime' Is.EqualTo(TimeSpan.FromSeconds(10-i*3)));
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenThrottle_WaitTimeIsDynamicallyCalculated,The following statement contains a magic number: i < 3
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithNLessThanMaxSleepCumulativeNLessThanMax,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithNLessThanMaxSleepCumulativeNLessThanMax,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithNLessThanMaxSleepCumulativeNLessThanMax,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithCumulativeNLessThanMaxSleepCumulativeNGreaterThanMax,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithCumulativeNLessThanMaxSleepCumulativeNGreaterThanMax,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithCumulativeNLessThanMaxSleepCumulativeNGreaterThanMax,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithCumulativeNLessThanMaxSleepCumulativeNGreaterThanMax,The following statement contains a magic number: i < 3*CUMULATIVE
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithCumulativeNGreaterThanMaxSleepCumulativeNLessThanMax,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithCumulativeNGreaterThanMaxSleepCumulativeNLessThanMax,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithCumulativeNGreaterThanMaxSleepCumulativeNLessThanMax,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithCumulativeNGreaterThanMaxSleepCumulativeNLessThanMax,The following statement contains a magic number: i < 3*CUMULATIVE
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithCumulativeNGreaterThanMaxSleepCumulativeNGreaterThanMax,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithCumulativeNGreaterThanMaxSleepCumulativeNGreaterThanMax,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithCumulativeNGreaterThanMaxSleepCumulativeNGreaterThanMax,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => new DateTime(2014' 2' 27' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithCumulativeNGreaterThanMaxSleepCumulativeNGreaterThanMax,The following statement contains a magic number: i < 3*CUMULATIVE
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenCalledWithCumulativeNGreaterThanMaxSleepCumulativeNGreaterThanMax,The following statement contains a magic number: i < 3*CUMULATIVE
Magic Number,Bert.RateLimiters.Tests,FixedTokenBucketTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\FixedTokenBucketTests.cs,ShouldThrottle_WhenThread1NLessThanMaxAndThread2NLessThanMax,The following statement contains a magic number: Assert.That(bucket.CurrentTokenCount' Is.EqualTo(MAX_TOKENS - 2 * N_LESS_THAN_MAX));
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,Throws_WhenNumberOfOccurencesIsLesserThanOne,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() =>new RollingWindowThrottler(-1' TimeSpan.FromSeconds(5)));
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledTwiceinSameSecondAndAllows1PerSecond_WillReturnTrue,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => virtualNow.AddSeconds(0.5);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledTwiceinSameSecondAndAllows1PerSecond_WillReturnTrue,The following statement contains a magic number: waitTimeMillis.ShouldBe(500);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledTwiceinSameSecondAndAllows1PerSecond_WillReturnTrue,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => virtualNow.AddSeconds(0.8);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledTwiceinSameSecondAndAllows1PerSecond_WillReturnTrue,The following statement contains a magic number: waitTimeMillis.ShouldBe(200);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledTwiceinSameSecondAndAllows2PerSecond_WillReturnFalse,The following statement contains a magic number: var throttler = new RollingWindowThrottler(2' TimeSpan.FromSeconds(1));
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledTwiceinSameSecondAndAllows2PerSecond_WillReturnFalse,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => virtualNow.AddSeconds(0.5);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledAfterSecondPassesAndAllows2PerSecond_WillReturnFalse,The following statement contains a magic number: var throttler = new RollingWindowThrottler(2' TimeSpan.FromSeconds(1));
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledThreeTimesinSameSecondAndAllows2PerSecond_WillReturnTrue,The following statement contains a magic number: var throttler = new RollingWindowThrottler(2' TimeSpan.FromSeconds(1));
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledThreeTimesinSameSecondAndAllows2PerSecond_WillReturnTrue,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => virtualNow.AddSeconds(0.5);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledThreeTimesinSameSecondAndAllows2PerSecond_WillReturnTrue,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => virtualNow.AddSeconds(0.7);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledThreeTimesinSameSecondAndAllows2PerSecond_WillReturnTrue,The following statement contains a magic number: waitTimeMillis.ShouldBe(300);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledAtEndOfRollingWindowAndAllows2PerSecond_WillReturnFalse,The following statement contains a magic number: var throttler = new RollingWindowThrottler(2' TimeSpan.FromSeconds(1));
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledAtEndOfRollingWindowAndAllows2PerSecond_WillReturnFalse,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => virtualNow.AddSeconds(1.2);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledAtEndOfRollingWindowAndAllows2PerSecond_WillReturnFalse,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => virtualNow.AddSeconds(1.3);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledAtEndOfRollingWindowAndAllows2PerSecond_WillReturnFalse,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => virtualNow.AddSeconds(2.2);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledAtEndOfRollingWindowAndAllows2PerSecond_WillReturnFalse,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => virtualNow.AddSeconds(2.3);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledWithMoreTokensThanOccurrences_WillReturnTrue,The following statement contains a magic number: var throttler = new RollingWindowThrottler(2' TimeSpan.FromSeconds(1));
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledWithMoreTokensThanOccurrences_WillReturnTrue,The following statement contains a magic number: var shouldThrottle = throttler.ShouldThrottle(3' out _);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledAndConsumingAllTokensAtOnce_WillReturnFalse,The following statement contains a magic number: var throttler = new RollingWindowThrottler(3' TimeSpan.FromSeconds(1));
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledAndConsumingAllTokensAtOnce_WillReturnFalse,The following statement contains a magic number: var shouldThrottle = throttler.ShouldThrottle(3' out _);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledAndConsumingAllTokensAtOnceAndThenCalledOnceMore_WillReturnTrue,The following statement contains a magic number: var throttler = new RollingWindowThrottler(3' TimeSpan.FromSeconds(1));
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledAndConsumingAllTokensAtOnceAndThenCalledOnceMore_WillReturnTrue,The following statement contains a magic number: var shouldThrottle = throttler.ShouldThrottle(3' out waitTimeMillis);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledAndConsumingAllTokensAtOnceAndThenCalledOnceMore_WillReturnTrue,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => virtualNow.AddSeconds(0.2);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledAndConsumingAllTokensAtOnceAndThenCalledOnceMore_WillReturnTrue,The following statement contains a magic number: shouldThrottle = throttler.ShouldThrottle(3' out waitTimeMillis);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledAndConsumingAllTokensAtOnceAndThenCalledOnceMore_WillReturnTrue,The following statement contains a magic number: waitTimeMillis.ShouldBe(800);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledAndConsumingAllTokensAtOnceAndThenCalledOnceMoreAfterRollingWindowEnd_WillReturnFalse,The following statement contains a magic number: var throttler = new RollingWindowThrottler(3' TimeSpan.FromSeconds(1));
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledAndConsumingAllTokensAtOnceAndThenCalledOnceMoreAfterRollingWindowEnd_WillReturnFalse,The following statement contains a magic number: var shouldThrottle = throttler.ShouldThrottle(3' out waitTimeMillis);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledAndConsumingAllTokensAtOnceAndThenCalledOnceMoreAfterRollingWindowEnd_WillReturnFalse,The following statement contains a magic number: SystemTime.SetCurrentTimeUtc = () => virtualNow.AddSeconds(1.1);
Magic Number,Bert.RateLimiters.Tests,RollingWindowThrottlerTests,C:\research\architectureSmells\repos\robertmircea_RateLimiters\src\Bert.RateLimiters.Tests\RollingWindowThrottlerTests.cs,ShouldThrottle_WhenCalledAndConsumingAllTokensAtOnceAndThenCalledOnceMoreAfterRollingWindowEnd_WillReturnFalse,The following statement contains a magic number: shouldThrottle = throttler.ShouldThrottle(3' out waitTimeMillis);
