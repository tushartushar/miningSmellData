Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,WriteMultiple,The method has 5 parameters. Parameters: smr' data' timeouts' delay' timeout
Long Parameter List,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadMultiple,The method has 5 parameters. Parameters: smr' writtenData' timeouts' delay' timeout
Long Parameter List,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadMultipleWithCheck,The method has 5 parameters. Parameters: smr' writtenData' timeouts' delay' timeout
Long Identifier,SharedMemoryTests,IncompatibleNestedStructure,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,,The length of the parameter IncompatibleNestedStructure_One is 31.
Long Identifier,SharedMemoryTests,IncompatibleNestedStructure,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,,The length of the parameter IncompatibleNestedStructure_Two is 31.
Long Identifier,SharedMemoryTests,IncompatibleNestedStructure2,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,,The length of the parameter IncompatibleNestedStructure_One is 31.
Long Identifier,SharedMemoryTests,IncompatibleNestedStructure2,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,,The length of the parameter IncompatibleNestedStructure_Two is 31.
Long Statement,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadMultipleWithCheck,The length of the statement  "                        Assert.AreEqual(writtenData[iteration][i]' readBuf[i]' String.Format("Data written does not match data read for iteration {0} at index {1}"' iteration' i)); " is 156.
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: var a = new[] {1.0' 2.71828' 3.14' 4' 4.99999' 42' 1024};
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: var a = new[] {1.0' 2.71828' 3.14' 4' 4.99999' 42' 1024};
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: var a = new[] {1.0' 2.71828' 3.14' 4' 4.99999' 42' 1024};
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: var a = new[] {1.0' 2.71828' 3.14' 4' 4.99999' 42' 1024};
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: var a = new[] {1.0' 2.71828' 3.14' 4' 4.99999' 42' 1024};
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: var a = new[] {1.0' 2.71828' 3.14' 4' 4.99999' 42' 1024};
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: var b = new[] { 1.0' 2' 3' 4' 5' 99' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: var b = new[] { 1.0' 2' 3' 4' 5' 99' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: var b = new[] { 1.0' 2' 3' 4' 5' 99' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: var b = new[] { 1.0' 2' 3' 4' 5' 99' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: var b = new[] { 1.0' 2' 3' 4' 5' 99' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: var b = new[] { 1.0' 2' 3' 4' 5' 99' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: Assert.AreEqual(7' slicea.Count);
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: Assert.IsTrue(ApproximatelyEqual(4' slicea[3]));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: Assert.IsTrue(ApproximatelyEqual(4' slicea[3]));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: Assert.AreEqual(6' slicea.IndexOf(1024));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: Assert.AreEqual(6' slicea.IndexOf(1024));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: Assert.AreEqual(-1' slicea.IndexOf(1025));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: Assert.IsTrue(slicea.Contains(1024));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: Assert.IsFalse(slicea.Contains(1025));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: Assert.IsTrue(ApproximatelyEqual(1081.85827' slicea.Sum()));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: Assert.IsTrue(ApproximatelyEqual(4' asList[3]));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: Assert.IsTrue(ApproximatelyEqual(4' asList[3]));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: Assert.AreEqual(6' asList.IndexOf(1024));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: Assert.AreEqual(6' asList.IndexOf(1024));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: Assert.AreEqual(-1' asList.IndexOf(1025));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: Assert.IsTrue(asList.Contains(1024));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: Assert.IsFalse(asList.Contains(1025));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_WorksLikeArray,The following statement contains a magic number: Assert.IsTrue(ApproximatelyEqual(1081.85827' asList.Sum()));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var a = new[] { 1.0' 2.71828' 3.14' 4' 4.99999' 42' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var a = new[] { 1.0' 2.71828' 3.14' 4' 4.99999' 42' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var a = new[] { 1.0' 2.71828' 3.14' 4' 4.99999' 42' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var a = new[] { 1.0' 2.71828' 3.14' 4' 4.99999' 42' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var a = new[] { 1.0' 2.71828' 3.14' 4' 4.99999' 42' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var a = new[] { 1.0' 2.71828' 3.14' 4' 4.99999' 42' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var slicea = new ArraySlice<double>(a' 2' 3);
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var slicea = new ArraySlice<double>(a' 2' 3);
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var sliceaSame = new ArraySlice<double>(a' 2' 3);
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var sliceaSame = new ArraySlice<double>(a' 2' 3);
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var b = new[] { 1.0' 2' 3' 4' 5' 99' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var b = new[] { 1.0' 2' 3' 4' 5' 99' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var b = new[] { 1.0' 2' 3' 4' 5' 99' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var b = new[] { 1.0' 2' 3' 4' 5' 99' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var b = new[] { 1.0' 2' 3' 4' 5' 99' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var b = new[] { 1.0' 2' 3' 4' 5' 99' 1024 };
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var sliceb = new ArraySlice<double>(b' 2' 3);
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: var sliceb = new ArraySlice<double>(b' 2' 3);
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: Assert.AreEqual(2' slicea.Offset);
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: Assert.AreEqual(3' slicea.Count);
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: Assert.IsTrue(ApproximatelyEqual(4.99999' slicea[2]));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: Assert.IsTrue(ApproximatelyEqual(4.99999' slicea[2]));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: Assert.AreEqual(1' slicea.IndexOf(4));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: Assert.AreEqual(-1' slicea.IndexOf(1025));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: Assert.IsTrue(slicea.Contains(4));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: Assert.IsFalse(slicea.Contains(1025));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: Assert.IsTrue(ApproximatelyEqual(12.13999' slicea.Sum()));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: Assert.IsTrue(ApproximatelyEqual(4.99999' asList[2]));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: Assert.IsTrue(ApproximatelyEqual(4.99999' asList[2]));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: Assert.AreEqual(1' asList.IndexOf(4));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: Assert.AreEqual(-1' asList.IndexOf(1025));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: Assert.IsTrue(asList.Contains(4));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: Assert.IsFalse(asList.Contains(1025));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ArraySlice_TestSlice,The following statement contains a magic number: Assert.IsTrue(ApproximatelyEqual(12.13999' asList.Sum()));
Magic Number,SharedMemoryTests,ArraySliceTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArraySliceTests.cs,ApproximatelyEqual,The following statement contains a magic number: var epsilon = Math.Max(Math.Abs(x)' Math.Abs(y)) * 1E-15;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: sma[0] = 3;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: sma[4] = 10;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: sma[4] = 10;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: Assert.AreEqual(3' smr[0]' "");
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: Assert.AreEqual(10' smr[4]' "");
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: Assert.AreEqual(10' smr[4]' "");
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: list[0] = 5;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: list[4] = 55;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: list[4] = 55;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: Assert.AreEqual(5' r[0]' "");
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: Assert.AreEqual(55' r[4]' "");
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: Assert.AreEqual(55' r[4]' "");
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: list[3] = 68;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: list[3] = 68;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: IList<int> arraySlice = new ArraySlice<int>(list' 1' 8);
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: arraySlice[0] = 67;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: IList<int> rarraySlice = new ArraySlice<int>(r' 1' 8);
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: Assert.AreEqual(67' rarraySlice[0]' "");
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: Assert.AreEqual(68' rarraySlice[2]' "");
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: Assert.AreEqual(68' rarraySlice[2]' "");
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: Assert.AreEqual(55' rarraySlice[3]' "");
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteInteger_DataMatches,The following statement contains a magic number: Assert.AreEqual(55' rarraySlice[3]' "");
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteComplexStruct_DataMatches,The following statement contains a magic number: sma[0] = new MyTestStruct { ValueA = 3' Name = "My Test Name" };
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteComplexStruct_DataMatches,The following statement contains a magic number: sma[4] = new MyTestStruct { ValueA = 10' Name = "My Test Name2" };
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteComplexStruct_DataMatches,The following statement contains a magic number: sma[4] = new MyTestStruct { ValueA = 10' Name = "My Test Name2" };
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteComplexStruct_DataMatches,The following statement contains a magic number: Assert.AreEqual(3' smr[0].ValueA' "");
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteComplexStruct_DataMatches,The following statement contains a magic number: Assert.AreEqual(10' smr[4].ValueA' "");
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteComplexStruct_DataMatches,The following statement contains a magic number: Assert.AreEqual(10' smr[4].ValueA' "");
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,Indexer_ReadWriteComplexStruct_DataMatches,The following statement contains a magic number: Assert.AreEqual("My Test Name2"' smr[4].Name' "");
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,GetEnumerator_IterateItems_DataMatches,The following statement contains a magic number: int bufSize = 1024;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,AcquireWriteLock_ReadWrite_LocksCorrectly,The following statement contains a magic number: int bufSize = 1024;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,AcquireWriteLock_ReadWrite_LocksCorrectly,The following statement contains a magic number: var t1 = Task.Factory.StartNew(() =>                          {                              if (System.Threading.Interlocked.Exchange(ref syncValue' 1) == 0)                                  readIsFirst = true;                              // Should block until write lock is released                              smr.AcquireReadLock();                              if (System.Threading.Interlocked.Exchange(ref syncValue' 3) == 4)                                  readBlocked = true;                              smr.CopyTo(readBuf);                              smr.ReleaseReadLock();                          });
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,AcquireWriteLock_ReadWrite_LocksCorrectly,The following statement contains a magic number: var t1 = Task.Factory.StartNew(() =>                          {                              if (System.Threading.Interlocked.Exchange(ref syncValue' 1) == 0)                                  readIsFirst = true;                              // Should block until write lock is released                              smr.AcquireReadLock();                              if (System.Threading.Interlocked.Exchange(ref syncValue' 3) == 4)                                  readBlocked = true;                              smr.CopyTo(readBuf);                              smr.ReleaseReadLock();                          });
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,AcquireWriteLock_ReadWrite_LocksCorrectly,The following statement contains a magic number: System.Threading.Thread.Sleep(10);
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,AcquireWriteLock_ReadWrite_LocksCorrectly,The following statement contains a magic number: var t2 = Task.Factory.StartNew(() =>                          {                              var val = System.Threading.Interlocked.Exchange(ref syncValue' 2);                              if (val == 0)                                  readIsFirst = false;                              else if (val == 3)                                  readBlocked = false;                              System.Threading.Thread.Sleep(10);                              sma.Write(data);                              System.Threading.Interlocked.Exchange(ref syncValue' 4);                              sma.ReleaseWriteLock();                          });
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,AcquireWriteLock_ReadWrite_LocksCorrectly,The following statement contains a magic number: var t2 = Task.Factory.StartNew(() =>                          {                              var val = System.Threading.Interlocked.Exchange(ref syncValue' 2);                              if (val == 0)                                  readIsFirst = false;                              else if (val == 3)                                  readBlocked = false;                              System.Threading.Thread.Sleep(10);                              sma.Write(data);                              System.Threading.Interlocked.Exchange(ref syncValue' 4);                              sma.ReleaseWriteLock();                          });
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,AcquireWriteLock_ReadWrite_LocksCorrectly,The following statement contains a magic number: var t2 = Task.Factory.StartNew(() =>                          {                              var val = System.Threading.Interlocked.Exchange(ref syncValue' 2);                              if (val == 0)                                  readIsFirst = false;                              else if (val == 3)                                  readBlocked = false;                              System.Threading.Thread.Sleep(10);                              sma.Write(data);                              System.Threading.Interlocked.Exchange(ref syncValue' 4);                              sma.ReleaseWriteLock();                          });
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,AcquireWriteLock_ReadWrite_LocksCorrectly,The following statement contains a magic number: var t2 = Task.Factory.StartNew(() =>                          {                              var val = System.Threading.Interlocked.Exchange(ref syncValue' 2);                              if (val == 0)                                  readIsFirst = false;                              else if (val == 3)                                  readBlocked = false;                              System.Threading.Thread.Sleep(10);                              sma.Write(data);                              System.Threading.Interlocked.Exchange(ref syncValue' 4);                              sma.ReleaseWriteLock();                          });
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,AcquireReadWriteLocks_ReadWrite_Blocks,The following statement contains a magic number: Assert.IsFalse(smr.AcquireReadLock(10));
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,AcquireReadWriteLocks_ReadWrite_Blocks,The following statement contains a magic number: Assert.IsFalse(sma.AcquireWriteLock(10));
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,IList_Contains,The following statement contains a magic number: sma[0] = 3;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,IList_Contains,The following statement contains a magic number: sma[4] = 10;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,IList_Contains,The following statement contains a magic number: sma[4] = 10;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,IList_Contains,The following statement contains a magic number: Assert.IsTrue(a.Contains(10));
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,IList_Contains,The following statement contains a magic number: Assert.IsFalse(a.Contains(11));
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,IList_IndexOf,The following statement contains a magic number: sma[0] = 3;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,IList_IndexOf,The following statement contains a magic number: sma[4] = 10;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,IList_IndexOf,The following statement contains a magic number: sma[4] = 10;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,IList_IndexOf,The following statement contains a magic number: Assert.AreEqual(4' a.IndexOf(10));
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,IList_IndexOf,The following statement contains a magic number: Assert.AreEqual(4' a.IndexOf(10));
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,IList_IndexOf,The following statement contains a magic number: Assert.AreEqual(-1' a.IndexOf(11));
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,IList_IsReadOnly,The following statement contains a magic number: sma[0] = 3;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,IList_IsReadOnly,The following statement contains a magic number: sma[4] = 10;
Magic Number,SharedMemoryTests,ArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ArrayTests.cs,IList_IsReadOnly,The following statement contains a magic number: sma[4] = 10;
Magic Number,SharedMemoryTests,BufferReadWriteTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\BufferReadWriteTests.cs,ReadWrite_Bytes_DataMatches,The following statement contains a magic number: byte[] data = new byte[1024];
Magic Number,SharedMemoryTests,BufferReadWriteTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\BufferReadWriteTests.cs,ReadWrite_Bytes_DataMatches,The following statement contains a magic number: byte[] readData = new byte[1024];
Magic Number,SharedMemoryTests,BufferReadWriteTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\BufferReadWriteTests.cs,ReadWrite_TimeoutException,The following statement contains a magic number: byte[] data = new byte[1024];
Magic Number,SharedMemoryTests,BufferReadWriteTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\BufferReadWriteTests.cs,ReadWrite_TimeoutException,The following statement contains a magic number: byte[] readData = new byte[1024];
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,StructSize_SharedMemoryHeader_Is16bytes,The following statement contains a magic number: Assert.AreEqual(16' Marshal.SizeOf(typeof(SharedHeader)));
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,StructSize_Node_Is32bytes,The following statement contains a magic number: Assert.AreEqual(32' Marshal.SizeOf(typeof(CircularBuffer.Node)));
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,StructSize_SharedMemoryNodeHeader_Is24bytes,The following statement contains a magic number: Assert.AreEqual(24' Marshal.SizeOf(typeof(CircularBuffer.NodeHeader)));
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_SingleNode_DataMatches,The following statement contains a magic number: int bufSize = 1024;
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_SingleNode_HeaderIndexesCorrect,The following statement contains a magic number: int bufSize = 1024;
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_MyTestStruct_DataMatches,The following statement contains a magic number: MyTestStruct obj = new MyTestStruct                  {                      Prop1 = 1'                      Prop2 = 2'                      Prop3 = 3'                      Prop4 = 4                  };
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_MyTestStruct_DataMatches,The following statement contains a magic number: MyTestStruct obj = new MyTestStruct                  {                      Prop1 = 1'                      Prop2 = 2'                      Prop3 = 3'                      Prop4 = 4                  };
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_MyTestStruct_DataMatches,The following statement contains a magic number: MyTestStruct obj = new MyTestStruct                  {                      Prop1 = 1'                      Prop2 = 2'                      Prop3 = 3'                      Prop4 = 4                  };
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_1000NodesIn2NodeRing_DataMatches,The following statement contains a magic number: int bufSize = 32;
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_1000NodesIn2NodeRing_DataMatches,The following statement contains a magic number: int iterations = 1000;
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWriteAsync_1000NodesIn2NodeRing_DataMatches,The following statement contains a magic number: int bufSize = 32;
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWriteAsync_1000NodesIn2NodeRing_DataMatches,The following statement contains a magic number: int iterations = 1000;
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWriteAsync_SlowReaderSmallWriterTimeout_DataMatches,The following statement contains a magic number: int bufSize = 32;
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWriteAsync_SlowReaderSmallWriterTimeout_DataMatches,The following statement contains a magic number: int iterations = 10;
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWriteAsync_SlowWriterSmallReaderTimeout_DataMatches,The following statement contains a magic number: int bufSize = 32;
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWriteAsync_SlowWriterSmallReaderTimeout_DataMatches,The following statement contains a magic number: int iterations = 10;
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_NonSequentialReadWrite_HeaderIndexesCorrect,The following statement contains a magic number: int bufSize = 1024;
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_NonSequentialReadWrite_HeaderIndexesCorrect,The following statement contains a magic number: Assert.AreEqual(bufSize' smr.Write((ptr) =>                  {                      header = smr.ReadNodeHeader();                      Assert.AreEqual(1' header.WriteStart' "During nested out of order write (1) WriteStart");                      Assert.AreEqual(0' header.WriteEnd' "During nested out of order write (1) WriteEnd");                        smr.Write((ptr2) =>                      {                          header = smr.ReadNodeHeader();                          Assert.AreEqual(2' header.WriteStart' "During nested out of order write (2) WriteStart");                          Assert.AreEqual(0' header.WriteEnd' "During nested out of order write (2) WriteEnd");                            smr.Write((ptr3) =>                          {                              header = smr.ReadNodeHeader();                              Assert.AreEqual(3' header.WriteStart' "During nested out of order write (3) WriteStart");                              Assert.AreEqual(0' header.WriteEnd' "During nested out of order write (3) WriteEnd");                                Marshal.Copy(data' 0' ptr3' bufSize);                              return bufSize;                          });                          header = smr.ReadNodeHeader();                          Assert.AreEqual(0' header.WriteEnd' "After nested out of order write (3) WriteEnd");                            Marshal.Copy(data' 0' ptr2' bufSize);                          return bufSize;                      });                      header = smr.ReadNodeHeader();                      Assert.AreEqual(0' header.WriteEnd' "After nested out of order write (2) WriteEnd");                        Marshal.Copy(data' 0' ptr' bufSize);                      return data.Length;                  })' String.Format("Failed to write {0} bytes"' bufSize));
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_NonSequentialReadWrite_HeaderIndexesCorrect,The following statement contains a magic number: Assert.AreEqual(bufSize' smr.Write((ptr) =>                  {                      header = smr.ReadNodeHeader();                      Assert.AreEqual(1' header.WriteStart' "During nested out of order write (1) WriteStart");                      Assert.AreEqual(0' header.WriteEnd' "During nested out of order write (1) WriteEnd");                        smr.Write((ptr2) =>                      {                          header = smr.ReadNodeHeader();                          Assert.AreEqual(2' header.WriteStart' "During nested out of order write (2) WriteStart");                          Assert.AreEqual(0' header.WriteEnd' "During nested out of order write (2) WriteEnd");                            smr.Write((ptr3) =>                          {                              header = smr.ReadNodeHeader();                              Assert.AreEqual(3' header.WriteStart' "During nested out of order write (3) WriteStart");                              Assert.AreEqual(0' header.WriteEnd' "During nested out of order write (3) WriteEnd");                                Marshal.Copy(data' 0' ptr3' bufSize);                              return bufSize;                          });                          header = smr.ReadNodeHeader();                          Assert.AreEqual(0' header.WriteEnd' "After nested out of order write (3) WriteEnd");                            Marshal.Copy(data' 0' ptr2' bufSize);                          return bufSize;                      });                      header = smr.ReadNodeHeader();                      Assert.AreEqual(0' header.WriteEnd' "After nested out of order write (2) WriteEnd");                        Marshal.Copy(data' 0' ptr' bufSize);                      return data.Length;                  })' String.Format("Failed to write {0} bytes"' bufSize));
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_NonSequentialReadWrite_HeaderIndexesCorrect,The following statement contains a magic number: Assert.AreEqual(3' header.WriteStart' "After nested out of order writes (1'2'3) WriteStart");
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_NonSequentialReadWrite_HeaderIndexesCorrect,The following statement contains a magic number: Assert.AreEqual(3' header.WriteEnd' "After nested out of order writes (1'2'3) WriteEnd");
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_NonSequentialReadWrite_HeaderIndexesCorrect,The following statement contains a magic number: Assert.AreEqual(bufSize' smr.Read((ptr) =>                  {                      header = smr.ReadNodeHeader();                      Assert.AreEqual(1' header.ReadStart' "During nested out of order read (1) ReadStart");                      Assert.AreEqual(0' header.ReadEnd' "During nested out of order read (1) ReadEnd");                        smr.Read((ptr2) =>                      {                          header = smr.ReadNodeHeader();                          Assert.AreEqual(2' header.ReadStart' "During nested out of order read (2) ReadStart");                          Assert.AreEqual(0' header.ReadEnd' "During nested out of order read (2) ReadEnd");                            smr.Read((ptr3) =>                          {                              header = smr.ReadNodeHeader();                              Assert.AreEqual(3' header.ReadStart' "During nested out of order read (3) ReadStart");                              Assert.AreEqual(0' header.ReadEnd' "During nested out of order read (3) ReadEnd");                                Marshal.Copy(ptr3' readBuf' 0' smr.NodeBufferSize);                              return smr.NodeBufferSize;                          });                          header = smr.ReadNodeHeader();                          Assert.AreEqual(0' header.ReadEnd' "After nested out of order read (3) ReadEnd");                            Marshal.Copy(ptr2' readBuf' 0' smr.NodeBufferSize);                          return smr.NodeBufferSize;                      });                      header = smr.ReadNodeHeader();                      Assert.AreEqual(0' header.ReadEnd' "After nested out of order read (2) ReadEnd");                        Marshal.Copy(ptr' readBuf' 0' smr.NodeBufferSize);                      return smr.NodeBufferSize;                  })' String.Format("Failed to read {0} bytes"' bufSize));
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_NonSequentialReadWrite_HeaderIndexesCorrect,The following statement contains a magic number: Assert.AreEqual(bufSize' smr.Read((ptr) =>                  {                      header = smr.ReadNodeHeader();                      Assert.AreEqual(1' header.ReadStart' "During nested out of order read (1) ReadStart");                      Assert.AreEqual(0' header.ReadEnd' "During nested out of order read (1) ReadEnd");                        smr.Read((ptr2) =>                      {                          header = smr.ReadNodeHeader();                          Assert.AreEqual(2' header.ReadStart' "During nested out of order read (2) ReadStart");                          Assert.AreEqual(0' header.ReadEnd' "During nested out of order read (2) ReadEnd");                            smr.Read((ptr3) =>                          {                              header = smr.ReadNodeHeader();                              Assert.AreEqual(3' header.ReadStart' "During nested out of order read (3) ReadStart");                              Assert.AreEqual(0' header.ReadEnd' "During nested out of order read (3) ReadEnd");                                Marshal.Copy(ptr3' readBuf' 0' smr.NodeBufferSize);                              return smr.NodeBufferSize;                          });                          header = smr.ReadNodeHeader();                          Assert.AreEqual(0' header.ReadEnd' "After nested out of order read (3) ReadEnd");                            Marshal.Copy(ptr2' readBuf' 0' smr.NodeBufferSize);                          return smr.NodeBufferSize;                      });                      header = smr.ReadNodeHeader();                      Assert.AreEqual(0' header.ReadEnd' "After nested out of order read (2) ReadEnd");                        Marshal.Copy(ptr' readBuf' 0' smr.NodeBufferSize);                      return smr.NodeBufferSize;                  })' String.Format("Failed to read {0} bytes"' bufSize));
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_NonSequentialReadWrite_HeaderIndexesCorrect,The following statement contains a magic number: Assert.AreEqual(3' header.ReadStart' "After nested out of order read (1'2'3) ReadStart");
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_NonSequentialReadWrite_HeaderIndexesCorrect,The following statement contains a magic number: Assert.AreEqual(3' header.ReadEnd' "After nested out of order read (1'2'3) ReadEnd");
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_StructuredData_DataMatches,The following statement contains a magic number: TestStruct[] data = new TestStruct[100];
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_StructuredData_DataMatches,The following statement contains a magic number: TestStruct[] readBuff = new TestStruct[100];
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_StructuredData_DataMatches,The following statement contains a magic number: int bufSize = Marshal.SizeOf(typeof(TestStruct)) * 100;
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_StructuredData_DataMatches,The following statement contains a magic number: Assert.AreEqual(100' writeCount);
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_StructuredData_DataMatches,The following statement contains a magic number: Assert.AreEqual(100' readCount);
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_StructuredData_ReadWriteStartIndex,The following statement contains a magic number: TestStruct[] data = new TestStruct[88];
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_StructuredData_ReadWriteStartIndex,The following statement contains a magic number: TestStruct[] readBuff = new TestStruct[88];
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_StructuredData_ReadWriteStartIndex,The following statement contains a magic number: int bufSize = Marshal.SizeOf(typeof(TestStruct)) * 3;
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_IntPtr_DataMatches,The following statement contains a magic number: int bufSize = 32;
Magic Number,SharedMemoryTests,CircularBufferTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\CircularBufferTests.cs,ReadWrite_DelegateIntPtr_DataMatches,The following statement contains a magic number: int bufSize = 32;
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,ExpandingArrayTests_GrownReport,The following statement contains a magic number: i < 32
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea.Add(11);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea.Add(22);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: Assert.AreEqual(2' ea.Count);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: Assert.IsTrue(ea.Contains(11));
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: Assert.IsFalse(ea.Contains(222));
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea.Add(33);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea.Add(44);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea.Add(55);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea.Add(66);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea.Add(77);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea.Add(88);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea.Add(99);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea.Add(1010);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea.Add(111);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea.Add(1212);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea.Add(1313);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea.Add(1414);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea.Add(1515);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea.Add(1616);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea.Add(1717);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: Assert.AreEqual(10403' ea.Sum());
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: Assert.AreEqual(6' ea.IndexOf(77));
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: Assert.AreEqual(6' ea.IndexOf(77));
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: Assert.AreEqual(77' ea[6]);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: Assert.AreEqual(77' ea[6]);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea[6] = 777;
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: ea[6] = 777;
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: Assert.AreEqual(777' ea[6]);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: Assert.AreEqual(777' ea[6]);
Magic Number,SharedMemoryTests,ExpandingArrayTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\ExpandingArrayTests.cs,TestEArray,The following statement contains a magic number: Assert.AreEqual(11103' ea.Sum());
Magic Number,SharedMemoryTests,FastStructureTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,FastStructure_CompatibleStructureSize,The following statement contains a magic number: Assert.AreEqual(IntPtr.Size * 4 + 8 + (sizeof(int) * 2)' FastStructure<CompatibleStructure>.Size);
Magic Number,SharedMemoryTests,FastStructureTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,FastStructure_CompatibleStructureSize,The following statement contains a magic number: Assert.AreEqual(IntPtr.Size * 4 + 8 + (sizeof(int) * 2)' FastStructure<CompatibleStructure>.Size);
Magic Number,SharedMemoryTests,FastStructureTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,FastStructure_CompatibleStructureSize,The following statement contains a magic number: Assert.AreEqual(IntPtr.Size * 4 + 8 + (sizeof(int) * 2)' FastStructure<CompatibleStructure>.Size);
Magic Number,SharedMemoryTests,FastStructureTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,FastStructure_ComplexStructureSize,The following statement contains a magic number: var sizeOfCompatibleStructure = IntPtr.Size * 4 + 8 + (sizeof(int) * 2);
Magic Number,SharedMemoryTests,FastStructureTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,FastStructure_ComplexStructureSize,The following statement contains a magic number: var sizeOfCompatibleStructure = IntPtr.Size * 4 + 8 + (sizeof(int) * 2);
Magic Number,SharedMemoryTests,FastStructureTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,FastStructure_ComplexStructureSize,The following statement contains a magic number: var sizeOfCompatibleStructure = IntPtr.Size * 4 + 8 + (sizeof(int) * 2);
Magic Number,SharedMemoryTests,FastStructureTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,FastStructure_ComplexStructureSize,The following statement contains a magic number: var sizeOfComplexStructure = (sizeof(int) * 2) + sizeOfCompatibleStructure;
Magic Number,SharedMemoryTests,FastStructureTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,FastStructure_AllocHGlobalReadWrite,The following statement contains a magic number: n.Compatible.Bookend = 2;
Magic Number,SharedMemoryTests,FastStructureTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,FastStructure_AllocHGlobalReadWrite,The following statement contains a magic number: n.FirstElement = 3;
Magic Number,SharedMemoryTests,FastStructureTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,FastStructure_AllocHGlobalReadWrite,The following statement contains a magic number: n.FinalElement = 9;
Magic Number,SharedMemoryTests,FastStructureTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,FastStructure_AllocHGlobalReadWrite,The following statement contains a magic number: n.Compatible.Contents[0] = 4;
Magic Number,SharedMemoryTests,FastStructureTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,FastStructure_AllocHGlobalReadWrite,The following statement contains a magic number: n.Compatible.Contents[7] = 5;
Magic Number,SharedMemoryTests,FastStructureTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,FastStructure_AllocHGlobalReadWrite,The following statement contains a magic number: n.Compatible.Contents[7] = 5;
Magic Number,SharedMemoryTests,FastStructureTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,FastStructure_AllocHGlobalReadWrite,The following statement contains a magic number: Assert.AreEqual(n.Compatible.Contents[7]' m.Compatible.Contents[7]);
Magic Number,SharedMemoryTests,FastStructureTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,FastStructure_AllocHGlobalReadWrite,The following statement contains a magic number: Assert.AreEqual(n.Compatible.Contents[7]' m.Compatible.Contents[7]);
Magic Number,SharedMemoryTests,FastStructureTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,FastStructure_AllocHGlobalReadWrite,The following statement contains a magic number: Assert.AreEqual(n.Compatible.Contents[7]' m.Compatible.Contents[7]);
Magic Number,SharedMemoryTests,FastStructureTests,D:\research\architectureSmells\repos1\spazzarama_SharedMemory\SharedMemory.Tests\FastStructureTests.cs,FastStructure_AllocHGlobalReadWrite,The following statement contains a magic number: Assert.AreEqual(n.Compatible.Contents[7]' m.Compatible.Contents[7]);
