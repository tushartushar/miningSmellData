Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Sharplike.Core.Input,InputSystem,C:\repos\eropple_sharplike\Sharplike.Core\Input\InputSystem.cs,LoadConfiguration,Cyclomatic complexity of the method is 12
Complex Method,Sharplike.Core.Rendering,AbstractRegion,C:\repos\eropple_sharplike\Sharplike.Core\Rendering\AbstractRegion.cs,ResizeRegion,Cyclomatic complexity of the method is 12
Long Parameter List,Sharplike.Core.Input,AbstractInputProvider,C:\repos\eropple_sharplike\Sharplike.Core\Input\AbstractInputProvider.cs,MouseDown,The method has 6 parameters.
Long Parameter List,Sharplike.Core.Input,AbstractInputProvider,C:\repos\eropple_sharplike\Sharplike.Core\Input\AbstractInputProvider.cs,MouseUp,The method has 6 parameters.
Long Parameter List,Sharplike.Core.Input,AbstractInputProvider,C:\repos\eropple_sharplike\Sharplike.Core\Input\AbstractInputProvider.cs,MouseWheel,The method has 6 parameters.
Long Statement,Sharplike.Core.ControlFlow,StateMachine,C:\repos\eropple_sharplike\Sharplike.Core\ControlFlow\StateMachine.cs,PopState,The length of the statement  "		throw new InvalidOperationException ("Non-main stacks may not pop their last method. Switch " + "to another stack and invoke DestroyStack() on the stack."); " is 156.
Long Statement,Sharplike.Core.Messaging,MessageHandler,C:\repos\eropple_sharplike\Sharplike.Core\Messaging\MessageHandler.cs,AssertArgumentTypes,The length of the statement  "				throw new ArgumentException (String.Format ("Argument {0}: Expected argument of type {1}."' attr.ArgumentIndex' attr.ArgumentType.FullName)); " is 141.
Long Statement,Sharplike.Core.Messaging,MessageHandler,C:\repos\eropple_sharplike\Sharplike.Core\Messaging\MessageHandler.cs,AssertArgumentTypes,The length of the statement  "				throw new ArgumentException (String.Format ("Argument {0}: Expected argument of type {1}."' attr.ArgumentIndex' attr.ArgumentType.FullName)); " is 141.
Long Statement,Sharplike.Core.Rendering,AbstractRegion,C:\repos\eropple_sharplike\Sharplike.Core\Rendering\AbstractRegion.cs,ResizeRegion,The length of the statement  "		parent.InvalidateTiles (new Rectangle (this.location' new Size (Math.Max (this.Size.Width' dimensions.Width)' Math.Max (this.Size.Height' dimensions.Height)))); " is 160.
Long Statement,Sharplike.Core.Rendering,AbstractRegion,C:\repos\eropple_sharplike\Sharplike.Core\Rendering\AbstractRegion.cs,PopulateRegionTiles,The length of the statement  "		if (r.Value.Location.X <= loc.X && r.Value.Location.Y <= loc.Y && r.Value.Location.X + r.Value.Size.Width > loc.X && r.Value.Location.Y + r.Value.Size.Height > loc.Y) { " is 168.
Long Statement,Sharplike.Core,Game,C:\repos\eropple_sharplike\Sharplike.Core\Game.cs,SetInputSystem,The length of the statement  "	TypeExtensionNode node = (TypeExtensionNode)AddinManager.GetExtensionNode (String.Format ("/Sharplike/Input/{0}"' sys)); " is 120.
Long Statement,Sharplike.Core,Game,C:\repos\eropple_sharplike\Sharplike.Core\Game.cs,SetRenderSystem,The length of the statement  "	TypeExtensionNode node = (TypeExtensionNode)AddinManager.GetExtensionNode (String.Format ("/Sharplike/Rendering/{0}"' sys)); " is 124.
Long Statement,Sharplike.Core,Game,C:\repos\eropple_sharplike\Sharplike.Core\Game.cs,SetAudioSystem,The length of the statement  "	TypeExtensionNode node = (TypeExtensionNode)AddinManager.GetExtensionNode (String.Format ("/Sharplike/Audio/{0}"' sys)); " is 120.
Long Statement,Sharplike.Core.Scheduling,PrioritizedThreadPoolScheduler,C:\repos\eropple_sharplike\Sharplike.Core\Scheduling\PrioritizedThreadPoolScheduler.cs,AddTask,The length of the statement  "		throw new InvalidOperationException ("Must set TaskPriorityAlgorithm before using " + "the default AddTask function. Use the 2-argument form instead."); " is 152.
Complex Conditional,Sharplike.Core.Rendering,AbstractRegion,C:\repos\eropple_sharplike\Sharplike.Core\Rendering\AbstractRegion.cs,PopulateRegionTiles,The conditional expression  "r.Value.Location.X <= loc.X && r.Value.Location.Y <= loc.Y && r.Value.Location.X + r.Value.Size.Width > loc.X && r.Value.Location.Y + r.Value.Size.Height > loc.Y"  is complex.
Magic Number,Sharplike.Core.Input,InputSystem,C:\repos\eropple_sharplike\Sharplike.Core\Input\InputSystem.cs,StartCommand,The following statement contains a magic number: if (!keytimers.ContainsKey (command.Command)) {  	if (this.CommandStarted != null)  		CommandStarted (this' new CommandEventArgs (command));  	TriggerCommand (command);  	Timer t = new Timer ();  	t.Interval = 250;  	t.Start ();  	t.Tick += delegate (object sender' EventArgs e) {  		TriggerCommand (command);  		t.Interval = 100;  		t.Stop ();  		t.Start ();  	};  	keytimers.Add (command.Command' t);  }  
Magic Number,Sharplike.Core.Input,InputSystem,C:\repos\eropple_sharplike\Sharplike.Core\Input\InputSystem.cs,StartCommand,The following statement contains a magic number: if (!keytimers.ContainsKey (command.Command)) {  	if (this.CommandStarted != null)  		CommandStarted (this' new CommandEventArgs (command));  	TriggerCommand (command);  	Timer t = new Timer ();  	t.Interval = 250;  	t.Start ();  	t.Tick += delegate (object sender' EventArgs e) {  		TriggerCommand (command);  		t.Interval = 100;  		t.Stop ();  		t.Start ();  	};  	keytimers.Add (command.Command' t);  }  
Magic Number,Sharplike.Core.Input,InputSystem,C:\repos\eropple_sharplike\Sharplike.Core\Input\InputSystem.cs,StartCommand,The following statement contains a magic number: t.Interval = 250;  
Magic Number,Sharplike.Core.Input,InputSystem,C:\repos\eropple_sharplike\Sharplike.Core\Input\InputSystem.cs,StartCommand,The following statement contains a magic number: t.Tick += delegate (object sender' EventArgs e) {  	TriggerCommand (command);  	t.Interval = 100;  	t.Stop ();  	t.Start ();  };  
Magic Number,Sharplike.Core.Input,InputSystem,C:\repos\eropple_sharplike\Sharplike.Core\Input\InputSystem.cs,StartCommand,The following statement contains a magic number: t.Interval = 100;  
Missing Default,Sharplike.Core.Scripting,ScriptingSystem,C:\repos\eropple_sharplike\Sharplike.Core\Scripting\ScriptingSystem.cs,ScriptsChanged,The following switch statement is missing a default case: switch (args.Change) {  case ExtensionChange.Add:  	engines.Add (args.ExtensionNode.Id' eng.Engine);  	break;  case ExtensionChange.Remove:  	engines.Remove (args.ExtensionNode.Id);  	break;  }  
