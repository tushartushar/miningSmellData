Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Sharplike.Noise,Perlin1DNoise,C:\repos\eropple_sharplike\Sharplike.Noise\Perlin1DNoise.cs,Generate,Cyclomatic complexity of the method is 8
Complex Method,Sharplike.Noise,PerlinNoise,C:\repos\eropple_sharplike\Sharplike.Noise\PerlinNoise.cs,Generate,Cyclomatic complexity of the method is 11
Long Parameter List,Sharplike.Noise,PerlinNoise,C:\repos\eropple_sharplike\Sharplike.Noise\PerlinNoise.cs,PerlinNoise,The method has 7 parameters.
Long Statement,Sharplike.Noise,Perlin1DNoise,C:\repos\eropple_sharplike\Sharplike.Noise\Perlin1DNoise.cs,GetNoiseValue,The length of the statement  "	Double d = noise.interp.Interpolate (noise.GetValue ((int)Math.Floor (x)' 0' 0' 0)' noise.GetValue ((int)Math.Ceiling (x)' 0' 0' 0)' x - Math.Floor (x)); " is 153.
Long Statement,Sharplike.Noise,PerlinNoise,C:\repos\eropple_sharplike\Sharplike.Noise\PerlinNoise.cs,Generate,The length of the statement  "							Double vx = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [(ptx + 1) * o' pty * o' ptz * o' ptw * o]' fx); " is 130.
Long Statement,Sharplike.Noise,PerlinNoise,C:\repos\eropple_sharplike\Sharplike.Noise\PerlinNoise.cs,Generate,The length of the statement  "							Double vy = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' (pty + 1) * o' ptz * o' ptw * o]' fy); " is 130.
Long Statement,Sharplike.Noise,PerlinNoise,C:\repos\eropple_sharplike\Sharplike.Noise\PerlinNoise.cs,Generate,The length of the statement  "							Double vz = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' pty * o' (ptz + 1) * o' ptw * o]' fz); " is 130.
Long Statement,Sharplike.Noise,PerlinNoise,C:\repos\eropple_sharplike\Sharplike.Noise\PerlinNoise.cs,Generate,The length of the statement  "							Double vw = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' pty * o' ptz * o' (ptw + 1) * o]' fw); " is 130.
Magic Number,Sharplike.Noise,PerlinNoise,C:\repos\eropple_sharplike\Sharplike.Noise\PerlinNoise.cs,Generate,The following statement contains a magic number: for (Int32 o = 1; o <= m_octaves; o++) {  	Double['''] odata = new Double[sx' sy' sz' sw];  	for (Int32 dx = 0; dx < sx; dx += o) {  		for (Int32 dy = 0; dy < sy; dy += o) {  			for (Int32 dz = 0; dz < sz; dz += o) {  				for (Int32 dw = 0; dw < sw; dw += o) {  					odata [dx' dy' dz' dw] = rnd.NextDouble ();  					//								System.Console.WriteLine("odata: "+odata[dx'dy'dz'dw]);  				}  			}  		}  	}  	for (Int32 dx = 0; dx < sx; dx++) {  		Int32 ptx = dx / o;  		for (Int32 dy = 0; dy < sy; dy++) {  			Int32 pty = dy / o;  			for (Int32 dz = 0; dz < sz; dz++) {  				Int32 ptz = dz / o;  				for (Int32 dw = 0; dw < sw; dw++) {  					Int32 ptw = dw / o;  					Double fx = (Double)(dx - (ptx * o)) / (Double)o;  					Double fy = (Double)(dy - (pty * o)) / (Double)o;  					Double fz = (Double)(dz - (ptz * o)) / (Double)o;  					Double fw = (Double)(dw - (ptw * o)) / (Double)o;  					try {  						Double vx = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [(ptx + 1) * o' pty * o' ptz * o' ptw * o]' fx);  						Double vy = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' (pty + 1) * o' ptz * o' ptw * o]' fy);  						Double vz = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' pty * o' (ptz + 1) * o' ptw * o]' fz);  						Double vw = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' pty * o' ptz * o' (ptw + 1) * o]' fw);  						Double finalval = (vx + vy + vz + vw) / 4;  						// Not the proper way' but' it's late  						data [dx' dy' dz' dw] += finalval * Math.Pow (m_persistence' m_octaves - o + 1);  					}  					catch (IndexOutOfRangeException) {  						data [dx' dy' dz' dw] += odata [ptx * o' pty * o' ptz * o' ptw * o] * Math.Pow (m_persistence' m_octaves - o + 1);  					}  				}  			}  		}  	}  }  
Magic Number,Sharplike.Noise,PerlinNoise,C:\repos\eropple_sharplike\Sharplike.Noise\PerlinNoise.cs,Generate,The following statement contains a magic number: for (Int32 dx = 0; dx < sx; dx++) {  	Int32 ptx = dx / o;  	for (Int32 dy = 0; dy < sy; dy++) {  		Int32 pty = dy / o;  		for (Int32 dz = 0; dz < sz; dz++) {  			Int32 ptz = dz / o;  			for (Int32 dw = 0; dw < sw; dw++) {  				Int32 ptw = dw / o;  				Double fx = (Double)(dx - (ptx * o)) / (Double)o;  				Double fy = (Double)(dy - (pty * o)) / (Double)o;  				Double fz = (Double)(dz - (ptz * o)) / (Double)o;  				Double fw = (Double)(dw - (ptw * o)) / (Double)o;  				try {  					Double vx = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [(ptx + 1) * o' pty * o' ptz * o' ptw * o]' fx);  					Double vy = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' (pty + 1) * o' ptz * o' ptw * o]' fy);  					Double vz = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' pty * o' (ptz + 1) * o' ptw * o]' fz);  					Double vw = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' pty * o' ptz * o' (ptw + 1) * o]' fw);  					Double finalval = (vx + vy + vz + vw) / 4;  					// Not the proper way' but' it's late  					data [dx' dy' dz' dw] += finalval * Math.Pow (m_persistence' m_octaves - o + 1);  				}  				catch (IndexOutOfRangeException) {  					data [dx' dy' dz' dw] += odata [ptx * o' pty * o' ptz * o' ptw * o] * Math.Pow (m_persistence' m_octaves - o + 1);  				}  			}  		}  	}  }  
Magic Number,Sharplike.Noise,PerlinNoise,C:\repos\eropple_sharplike\Sharplike.Noise\PerlinNoise.cs,Generate,The following statement contains a magic number: for (Int32 dy = 0; dy < sy; dy++) {  	Int32 pty = dy / o;  	for (Int32 dz = 0; dz < sz; dz++) {  		Int32 ptz = dz / o;  		for (Int32 dw = 0; dw < sw; dw++) {  			Int32 ptw = dw / o;  			Double fx = (Double)(dx - (ptx * o)) / (Double)o;  			Double fy = (Double)(dy - (pty * o)) / (Double)o;  			Double fz = (Double)(dz - (ptz * o)) / (Double)o;  			Double fw = (Double)(dw - (ptw * o)) / (Double)o;  			try {  				Double vx = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [(ptx + 1) * o' pty * o' ptz * o' ptw * o]' fx);  				Double vy = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' (pty + 1) * o' ptz * o' ptw * o]' fy);  				Double vz = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' pty * o' (ptz + 1) * o' ptw * o]' fz);  				Double vw = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' pty * o' ptz * o' (ptw + 1) * o]' fw);  				Double finalval = (vx + vy + vz + vw) / 4;  				// Not the proper way' but' it's late  				data [dx' dy' dz' dw] += finalval * Math.Pow (m_persistence' m_octaves - o + 1);  			}  			catch (IndexOutOfRangeException) {  				data [dx' dy' dz' dw] += odata [ptx * o' pty * o' ptz * o' ptw * o] * Math.Pow (m_persistence' m_octaves - o + 1);  			}  		}  	}  }  
Magic Number,Sharplike.Noise,PerlinNoise,C:\repos\eropple_sharplike\Sharplike.Noise\PerlinNoise.cs,Generate,The following statement contains a magic number: for (Int32 dz = 0; dz < sz; dz++) {  	Int32 ptz = dz / o;  	for (Int32 dw = 0; dw < sw; dw++) {  		Int32 ptw = dw / o;  		Double fx = (Double)(dx - (ptx * o)) / (Double)o;  		Double fy = (Double)(dy - (pty * o)) / (Double)o;  		Double fz = (Double)(dz - (ptz * o)) / (Double)o;  		Double fw = (Double)(dw - (ptw * o)) / (Double)o;  		try {  			Double vx = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [(ptx + 1) * o' pty * o' ptz * o' ptw * o]' fx);  			Double vy = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' (pty + 1) * o' ptz * o' ptw * o]' fy);  			Double vz = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' pty * o' (ptz + 1) * o' ptw * o]' fz);  			Double vw = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' pty * o' ptz * o' (ptw + 1) * o]' fw);  			Double finalval = (vx + vy + vz + vw) / 4;  			// Not the proper way' but' it's late  			data [dx' dy' dz' dw] += finalval * Math.Pow (m_persistence' m_octaves - o + 1);  		}  		catch (IndexOutOfRangeException) {  			data [dx' dy' dz' dw] += odata [ptx * o' pty * o' ptz * o' ptw * o] * Math.Pow (m_persistence' m_octaves - o + 1);  		}  	}  }  
Magic Number,Sharplike.Noise,PerlinNoise,C:\repos\eropple_sharplike\Sharplike.Noise\PerlinNoise.cs,Generate,The following statement contains a magic number: for (Int32 dw = 0; dw < sw; dw++) {  	Int32 ptw = dw / o;  	Double fx = (Double)(dx - (ptx * o)) / (Double)o;  	Double fy = (Double)(dy - (pty * o)) / (Double)o;  	Double fz = (Double)(dz - (ptz * o)) / (Double)o;  	Double fw = (Double)(dw - (ptw * o)) / (Double)o;  	try {  		Double vx = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [(ptx + 1) * o' pty * o' ptz * o' ptw * o]' fx);  		Double vy = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' (pty + 1) * o' ptz * o' ptw * o]' fy);  		Double vz = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' pty * o' (ptz + 1) * o' ptw * o]' fz);  		Double vw = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' pty * o' ptz * o' (ptw + 1) * o]' fw);  		Double finalval = (vx + vy + vz + vw) / 4;  		// Not the proper way' but' it's late  		data [dx' dy' dz' dw] += finalval * Math.Pow (m_persistence' m_octaves - o + 1);  	}  	catch (IndexOutOfRangeException) {  		data [dx' dy' dz' dw] += odata [ptx * o' pty * o' ptz * o' ptw * o] * Math.Pow (m_persistence' m_octaves - o + 1);  	}  }  
Magic Number,Sharplike.Noise,PerlinNoise,C:\repos\eropple_sharplike\Sharplike.Noise\PerlinNoise.cs,Generate,The following statement contains a magic number: try {  	Double vx = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [(ptx + 1) * o' pty * o' ptz * o' ptw * o]' fx);  	Double vy = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' (pty + 1) * o' ptz * o' ptw * o]' fy);  	Double vz = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' pty * o' (ptz + 1) * o' ptw * o]' fz);  	Double vw = interp.Interpolate (odata [ptx * o' pty * o' ptz * o' ptw * o]' odata [ptx * o' pty * o' ptz * o' (ptw + 1) * o]' fw);  	Double finalval = (vx + vy + vz + vw) / 4;  	// Not the proper way' but' it's late  	data [dx' dy' dz' dw] += finalval * Math.Pow (m_persistence' m_octaves - o + 1);  }  catch (IndexOutOfRangeException) {  	data [dx' dy' dz' dw] += odata [ptx * o' pty * o' ptz * o' ptw * o] * Math.Pow (m_persistence' m_octaves - o + 1);  }  
Missing Default,Sharplike.Noise,Perlin1DNoise,C:\repos\eropple_sharplike\Sharplike.Noise\Perlin1DNoise.cs,Generate,The following switch statement is missing a default case: switch (this.InterpolationMethod) {  case Noise.InterpolationMethod.None: {  	i = new ClosestInterpolator ();  	break;  }  case Noise.InterpolationMethod.Linear: {  	i = new LinearInterpolator ();  	break;  }  case Noise.InterpolationMethod.Cubic: {  	throw new NotImplementedException ();  }  case Noise.InterpolationMethod.Cosine: {  	throw new NotImplementedException ();  }  }  
