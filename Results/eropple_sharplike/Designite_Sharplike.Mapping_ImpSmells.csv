Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,Cyclomatic complexity of the method is 11
Complex Method,Sharplike.Mapping,DirectionUtils,C:\repos\eropple_sharplike\Sharplike.Mapping\Direction.cs,OppositeDirection,Cyclomatic complexity of the method is 10
Complex Method,Sharplike.Mapping,AbstractPage,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractPage.cs,LocateNeighbor,Cyclomatic complexity of the method is 31
Complex Method,Sharplike.Mapping.Entities,AbstractEntity,C:\repos\eropple_sharplike\Sharplike.Mapping\Entities\AbstractEntity.cs,Move,Cyclomatic complexity of the method is 32
Long Parameter List,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,BroadcastToNearest,The method has 6 parameters.
Long Parameter List,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,BroadcastToNearest,The method has 7 parameters.
Long Statement,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,GetSquare,The length of the statement  "	Vector3 npos = new Vector3 (p.address.x * pageSize.x + offset.x' p.address.y * pageSize.y + offset.y' p.address.z * pageSize.z + offset.z); " is 139.
Long Statement,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,GetVisibleSquareLocation,The length of the statement  "		foreach (AbstractPage page in this.GetPagesInRange (this.View' new Vector3 (this.Viewport.Width' this.Viewport.Height' 1))) { " is 125.
Long Statement,Sharplike.Mapping,AbstractPage,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractPage.cs,LocateNeighbor,The length of the statement  "	if (neighborPosition.x >= 0 && neighborPosition.x <= map.GetUpperBound (0) && neighborPosition.y >= 0 && neighborPosition.y <= map.GetUpperBound (1) && neighborPosition.z >= 0 && neighborPosition.z <= map.GetUpperBound (2)) { " is 225.
Long Statement,Sharplike.Mapping,Vector3,C:\repos\eropple_sharplike\Sharplike.Mapping\Vector3.cs,IntersectsWithEllipse,The length of the statement  "	return ((double)(test.x * test.x) / (range.x * range.x)) + ((double)(test.y * test.y) / (range.y * range.y)) + ((double)(test.z * test.z) / (range.z * range.z)) <= 1; " is 166.
Complex Conditional,Sharplike.Mapping,AbstractPage,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractPage.cs,LocateNeighbor,The conditional expression  "neighborPosition.x >= 0 && neighborPosition.x <= map.GetUpperBound (0) && neighborPosition.y >= 0 && neighborPosition.y <= map.GetUpperBound (1) && neighborPosition.z >= 0 && neighborPosition.z <= map.GetUpperBound (2)"  is complex.
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,Message_RepositionEntity,The following statement contains a magic number: RepositionEntity ((AbstractEntity)m.Args [0]' (Vector3)m.Args [1]' (Vector3)m.Args [2]);  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (nView.Equals (view) == false || forceRender == true) {  	this.Clear ();  	for (int x = 0; x < this.Size.Width; x++) {  		int gx = x + nView.x;  		for (int y = 0; y < this.Size.Height; y++) {  			int gy = y + nView.y;  			this.RegionTiles [x' y].Reset ();  			AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  			if (sq != null) {  				this.RegionTiles [x' y].AddGlyphProvider (sq);  			}  			else {  				//Draw a nice red error tile if we're looking out of bounds in debug mode'  				//but just black if we're in release mode.  				#if DEBUG  				int n = 249;  				// circle  				if (gx % 2 == 0 && gy % 2 == 0)  					n = 197;  				// +  				if (gx % 2 != 0 && gy % 2 == 0)  					n = 196;  				// -  				if (gx % 2 == 0 && gy % 2 != 0)  					n = 179;  				// |  				this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  				#else  				                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  			}  		}  	}  	view = nView;  	Vector3 addr;  	Vector3 newoff;  	Vector3.Divide (nView' this.pageSize' out addr' out newoff);  	foreach (AbstractPage p in GetPagesInRange (nView' new Vector3 (this.Size.Width' this.Size.Height' 1))) {  		foreach (AbstractEntity ent in p.Entities) {  			if (ent.Location.IntersectsWith (this.Viewport) && ent.Location.z == view.z) {  				this.RegionTiles [ent.Location.x - view.x' ent.Location.y - view.y].AddGlyphProvider (ent);  			}  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (nView.Equals (view) == false || forceRender == true) {  	this.Clear ();  	for (int x = 0; x < this.Size.Width; x++) {  		int gx = x + nView.x;  		for (int y = 0; y < this.Size.Height; y++) {  			int gy = y + nView.y;  			this.RegionTiles [x' y].Reset ();  			AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  			if (sq != null) {  				this.RegionTiles [x' y].AddGlyphProvider (sq);  			}  			else {  				//Draw a nice red error tile if we're looking out of bounds in debug mode'  				//but just black if we're in release mode.  				#if DEBUG  				int n = 249;  				// circle  				if (gx % 2 == 0 && gy % 2 == 0)  					n = 197;  				// +  				if (gx % 2 != 0 && gy % 2 == 0)  					n = 196;  				// -  				if (gx % 2 == 0 && gy % 2 != 0)  					n = 179;  				// |  				this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  				#else  				                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  			}  		}  	}  	view = nView;  	Vector3 addr;  	Vector3 newoff;  	Vector3.Divide (nView' this.pageSize' out addr' out newoff);  	foreach (AbstractPage p in GetPagesInRange (nView' new Vector3 (this.Size.Width' this.Size.Height' 1))) {  		foreach (AbstractEntity ent in p.Entities) {  			if (ent.Location.IntersectsWith (this.Viewport) && ent.Location.z == view.z) {  				this.RegionTiles [ent.Location.x - view.x' ent.Location.y - view.y].AddGlyphProvider (ent);  			}  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (nView.Equals (view) == false || forceRender == true) {  	this.Clear ();  	for (int x = 0; x < this.Size.Width; x++) {  		int gx = x + nView.x;  		for (int y = 0; y < this.Size.Height; y++) {  			int gy = y + nView.y;  			this.RegionTiles [x' y].Reset ();  			AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  			if (sq != null) {  				this.RegionTiles [x' y].AddGlyphProvider (sq);  			}  			else {  				//Draw a nice red error tile if we're looking out of bounds in debug mode'  				//but just black if we're in release mode.  				#if DEBUG  				int n = 249;  				// circle  				if (gx % 2 == 0 && gy % 2 == 0)  					n = 197;  				// +  				if (gx % 2 != 0 && gy % 2 == 0)  					n = 196;  				// -  				if (gx % 2 == 0 && gy % 2 != 0)  					n = 179;  				// |  				this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  				#else  				                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  			}  		}  	}  	view = nView;  	Vector3 addr;  	Vector3 newoff;  	Vector3.Divide (nView' this.pageSize' out addr' out newoff);  	foreach (AbstractPage p in GetPagesInRange (nView' new Vector3 (this.Size.Width' this.Size.Height' 1))) {  		foreach (AbstractEntity ent in p.Entities) {  			if (ent.Location.IntersectsWith (this.Viewport) && ent.Location.z == view.z) {  				this.RegionTiles [ent.Location.x - view.x' ent.Location.y - view.y].AddGlyphProvider (ent);  			}  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (nView.Equals (view) == false || forceRender == true) {  	this.Clear ();  	for (int x = 0; x < this.Size.Width; x++) {  		int gx = x + nView.x;  		for (int y = 0; y < this.Size.Height; y++) {  			int gy = y + nView.y;  			this.RegionTiles [x' y].Reset ();  			AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  			if (sq != null) {  				this.RegionTiles [x' y].AddGlyphProvider (sq);  			}  			else {  				//Draw a nice red error tile if we're looking out of bounds in debug mode'  				//but just black if we're in release mode.  				#if DEBUG  				int n = 249;  				// circle  				if (gx % 2 == 0 && gy % 2 == 0)  					n = 197;  				// +  				if (gx % 2 != 0 && gy % 2 == 0)  					n = 196;  				// -  				if (gx % 2 == 0 && gy % 2 != 0)  					n = 179;  				// |  				this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  				#else  				                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  			}  		}  	}  	view = nView;  	Vector3 addr;  	Vector3 newoff;  	Vector3.Divide (nView' this.pageSize' out addr' out newoff);  	foreach (AbstractPage p in GetPagesInRange (nView' new Vector3 (this.Size.Width' this.Size.Height' 1))) {  		foreach (AbstractEntity ent in p.Entities) {  			if (ent.Location.IntersectsWith (this.Viewport) && ent.Location.z == view.z) {  				this.RegionTiles [ent.Location.x - view.x' ent.Location.y - view.y].AddGlyphProvider (ent);  			}  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (nView.Equals (view) == false || forceRender == true) {  	this.Clear ();  	for (int x = 0; x < this.Size.Width; x++) {  		int gx = x + nView.x;  		for (int y = 0; y < this.Size.Height; y++) {  			int gy = y + nView.y;  			this.RegionTiles [x' y].Reset ();  			AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  			if (sq != null) {  				this.RegionTiles [x' y].AddGlyphProvider (sq);  			}  			else {  				//Draw a nice red error tile if we're looking out of bounds in debug mode'  				//but just black if we're in release mode.  				#if DEBUG  				int n = 249;  				// circle  				if (gx % 2 == 0 && gy % 2 == 0)  					n = 197;  				// +  				if (gx % 2 != 0 && gy % 2 == 0)  					n = 196;  				// -  				if (gx % 2 == 0 && gy % 2 != 0)  					n = 179;  				// |  				this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  				#else  				                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  			}  		}  	}  	view = nView;  	Vector3 addr;  	Vector3 newoff;  	Vector3.Divide (nView' this.pageSize' out addr' out newoff);  	foreach (AbstractPage p in GetPagesInRange (nView' new Vector3 (this.Size.Width' this.Size.Height' 1))) {  		foreach (AbstractEntity ent in p.Entities) {  			if (ent.Location.IntersectsWith (this.Viewport) && ent.Location.z == view.z) {  				this.RegionTiles [ent.Location.x - view.x' ent.Location.y - view.y].AddGlyphProvider (ent);  			}  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (nView.Equals (view) == false || forceRender == true) {  	this.Clear ();  	for (int x = 0; x < this.Size.Width; x++) {  		int gx = x + nView.x;  		for (int y = 0; y < this.Size.Height; y++) {  			int gy = y + nView.y;  			this.RegionTiles [x' y].Reset ();  			AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  			if (sq != null) {  				this.RegionTiles [x' y].AddGlyphProvider (sq);  			}  			else {  				//Draw a nice red error tile if we're looking out of bounds in debug mode'  				//but just black if we're in release mode.  				#if DEBUG  				int n = 249;  				// circle  				if (gx % 2 == 0 && gy % 2 == 0)  					n = 197;  				// +  				if (gx % 2 != 0 && gy % 2 == 0)  					n = 196;  				// -  				if (gx % 2 == 0 && gy % 2 != 0)  					n = 179;  				// |  				this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  				#else  				                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  			}  		}  	}  	view = nView;  	Vector3 addr;  	Vector3 newoff;  	Vector3.Divide (nView' this.pageSize' out addr' out newoff);  	foreach (AbstractPage p in GetPagesInRange (nView' new Vector3 (this.Size.Width' this.Size.Height' 1))) {  		foreach (AbstractEntity ent in p.Entities) {  			if (ent.Location.IntersectsWith (this.Viewport) && ent.Location.z == view.z) {  				this.RegionTiles [ent.Location.x - view.x' ent.Location.y - view.y].AddGlyphProvider (ent);  			}  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (nView.Equals (view) == false || forceRender == true) {  	this.Clear ();  	for (int x = 0; x < this.Size.Width; x++) {  		int gx = x + nView.x;  		for (int y = 0; y < this.Size.Height; y++) {  			int gy = y + nView.y;  			this.RegionTiles [x' y].Reset ();  			AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  			if (sq != null) {  				this.RegionTiles [x' y].AddGlyphProvider (sq);  			}  			else {  				//Draw a nice red error tile if we're looking out of bounds in debug mode'  				//but just black if we're in release mode.  				#if DEBUG  				int n = 249;  				// circle  				if (gx % 2 == 0 && gy % 2 == 0)  					n = 197;  				// +  				if (gx % 2 != 0 && gy % 2 == 0)  					n = 196;  				// -  				if (gx % 2 == 0 && gy % 2 != 0)  					n = 179;  				// |  				this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  				#else  				                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  			}  		}  	}  	view = nView;  	Vector3 addr;  	Vector3 newoff;  	Vector3.Divide (nView' this.pageSize' out addr' out newoff);  	foreach (AbstractPage p in GetPagesInRange (nView' new Vector3 (this.Size.Width' this.Size.Height' 1))) {  		foreach (AbstractEntity ent in p.Entities) {  			if (ent.Location.IntersectsWith (this.Viewport) && ent.Location.z == view.z) {  				this.RegionTiles [ent.Location.x - view.x' ent.Location.y - view.y].AddGlyphProvider (ent);  			}  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (nView.Equals (view) == false || forceRender == true) {  	this.Clear ();  	for (int x = 0; x < this.Size.Width; x++) {  		int gx = x + nView.x;  		for (int y = 0; y < this.Size.Height; y++) {  			int gy = y + nView.y;  			this.RegionTiles [x' y].Reset ();  			AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  			if (sq != null) {  				this.RegionTiles [x' y].AddGlyphProvider (sq);  			}  			else {  				//Draw a nice red error tile if we're looking out of bounds in debug mode'  				//but just black if we're in release mode.  				#if DEBUG  				int n = 249;  				// circle  				if (gx % 2 == 0 && gy % 2 == 0)  					n = 197;  				// +  				if (gx % 2 != 0 && gy % 2 == 0)  					n = 196;  				// -  				if (gx % 2 == 0 && gy % 2 != 0)  					n = 179;  				// |  				this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  				#else  				                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  			}  		}  	}  	view = nView;  	Vector3 addr;  	Vector3 newoff;  	Vector3.Divide (nView' this.pageSize' out addr' out newoff);  	foreach (AbstractPage p in GetPagesInRange (nView' new Vector3 (this.Size.Width' this.Size.Height' 1))) {  		foreach (AbstractEntity ent in p.Entities) {  			if (ent.Location.IntersectsWith (this.Viewport) && ent.Location.z == view.z) {  				this.RegionTiles [ent.Location.x - view.x' ent.Location.y - view.y].AddGlyphProvider (ent);  			}  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (nView.Equals (view) == false || forceRender == true) {  	this.Clear ();  	for (int x = 0; x < this.Size.Width; x++) {  		int gx = x + nView.x;  		for (int y = 0; y < this.Size.Height; y++) {  			int gy = y + nView.y;  			this.RegionTiles [x' y].Reset ();  			AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  			if (sq != null) {  				this.RegionTiles [x' y].AddGlyphProvider (sq);  			}  			else {  				//Draw a nice red error tile if we're looking out of bounds in debug mode'  				//but just black if we're in release mode.  				#if DEBUG  				int n = 249;  				// circle  				if (gx % 2 == 0 && gy % 2 == 0)  					n = 197;  				// +  				if (gx % 2 != 0 && gy % 2 == 0)  					n = 196;  				// -  				if (gx % 2 == 0 && gy % 2 != 0)  					n = 179;  				// |  				this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  				#else  				                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  			}  		}  	}  	view = nView;  	Vector3 addr;  	Vector3 newoff;  	Vector3.Divide (nView' this.pageSize' out addr' out newoff);  	foreach (AbstractPage p in GetPagesInRange (nView' new Vector3 (this.Size.Width' this.Size.Height' 1))) {  		foreach (AbstractEntity ent in p.Entities) {  			if (ent.Location.IntersectsWith (this.Viewport) && ent.Location.z == view.z) {  				this.RegionTiles [ent.Location.x - view.x' ent.Location.y - view.y].AddGlyphProvider (ent);  			}  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (nView.Equals (view) == false || forceRender == true) {  	this.Clear ();  	for (int x = 0; x < this.Size.Width; x++) {  		int gx = x + nView.x;  		for (int y = 0; y < this.Size.Height; y++) {  			int gy = y + nView.y;  			this.RegionTiles [x' y].Reset ();  			AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  			if (sq != null) {  				this.RegionTiles [x' y].AddGlyphProvider (sq);  			}  			else {  				//Draw a nice red error tile if we're looking out of bounds in debug mode'  				//but just black if we're in release mode.  				#if DEBUG  				int n = 249;  				// circle  				if (gx % 2 == 0 && gy % 2 == 0)  					n = 197;  				// +  				if (gx % 2 != 0 && gy % 2 == 0)  					n = 196;  				// -  				if (gx % 2 == 0 && gy % 2 != 0)  					n = 179;  				// |  				this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  				#else  				                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  			}  		}  	}  	view = nView;  	Vector3 addr;  	Vector3 newoff;  	Vector3.Divide (nView' this.pageSize' out addr' out newoff);  	foreach (AbstractPage p in GetPagesInRange (nView' new Vector3 (this.Size.Width' this.Size.Height' 1))) {  		foreach (AbstractEntity ent in p.Entities) {  			if (ent.Location.IntersectsWith (this.Viewport) && ent.Location.z == view.z) {  				this.RegionTiles [ent.Location.x - view.x' ent.Location.y - view.y].AddGlyphProvider (ent);  			}  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int x = 0; x < this.Size.Width; x++) {  	int gx = x + nView.x;  	for (int y = 0; y < this.Size.Height; y++) {  		int gy = y + nView.y;  		this.RegionTiles [x' y].Reset ();  		AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  		if (sq != null) {  			this.RegionTiles [x' y].AddGlyphProvider (sq);  		}  		else {  			//Draw a nice red error tile if we're looking out of bounds in debug mode'  			//but just black if we're in release mode.  			#if DEBUG  			int n = 249;  			// circle  			if (gx % 2 == 0 && gy % 2 == 0)  				n = 197;  			// +  			if (gx % 2 != 0 && gy % 2 == 0)  				n = 196;  			// -  			if (gx % 2 == 0 && gy % 2 != 0)  				n = 179;  			// |  			this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  			#else  			                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int x = 0; x < this.Size.Width; x++) {  	int gx = x + nView.x;  	for (int y = 0; y < this.Size.Height; y++) {  		int gy = y + nView.y;  		this.RegionTiles [x' y].Reset ();  		AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  		if (sq != null) {  			this.RegionTiles [x' y].AddGlyphProvider (sq);  		}  		else {  			//Draw a nice red error tile if we're looking out of bounds in debug mode'  			//but just black if we're in release mode.  			#if DEBUG  			int n = 249;  			// circle  			if (gx % 2 == 0 && gy % 2 == 0)  				n = 197;  			// +  			if (gx % 2 != 0 && gy % 2 == 0)  				n = 196;  			// -  			if (gx % 2 == 0 && gy % 2 != 0)  				n = 179;  			// |  			this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  			#else  			                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int x = 0; x < this.Size.Width; x++) {  	int gx = x + nView.x;  	for (int y = 0; y < this.Size.Height; y++) {  		int gy = y + nView.y;  		this.RegionTiles [x' y].Reset ();  		AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  		if (sq != null) {  			this.RegionTiles [x' y].AddGlyphProvider (sq);  		}  		else {  			//Draw a nice red error tile if we're looking out of bounds in debug mode'  			//but just black if we're in release mode.  			#if DEBUG  			int n = 249;  			// circle  			if (gx % 2 == 0 && gy % 2 == 0)  				n = 197;  			// +  			if (gx % 2 != 0 && gy % 2 == 0)  				n = 196;  			// -  			if (gx % 2 == 0 && gy % 2 != 0)  				n = 179;  			// |  			this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  			#else  			                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int x = 0; x < this.Size.Width; x++) {  	int gx = x + nView.x;  	for (int y = 0; y < this.Size.Height; y++) {  		int gy = y + nView.y;  		this.RegionTiles [x' y].Reset ();  		AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  		if (sq != null) {  			this.RegionTiles [x' y].AddGlyphProvider (sq);  		}  		else {  			//Draw a nice red error tile if we're looking out of bounds in debug mode'  			//but just black if we're in release mode.  			#if DEBUG  			int n = 249;  			// circle  			if (gx % 2 == 0 && gy % 2 == 0)  				n = 197;  			// +  			if (gx % 2 != 0 && gy % 2 == 0)  				n = 196;  			// -  			if (gx % 2 == 0 && gy % 2 != 0)  				n = 179;  			// |  			this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  			#else  			                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int x = 0; x < this.Size.Width; x++) {  	int gx = x + nView.x;  	for (int y = 0; y < this.Size.Height; y++) {  		int gy = y + nView.y;  		this.RegionTiles [x' y].Reset ();  		AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  		if (sq != null) {  			this.RegionTiles [x' y].AddGlyphProvider (sq);  		}  		else {  			//Draw a nice red error tile if we're looking out of bounds in debug mode'  			//but just black if we're in release mode.  			#if DEBUG  			int n = 249;  			// circle  			if (gx % 2 == 0 && gy % 2 == 0)  				n = 197;  			// +  			if (gx % 2 != 0 && gy % 2 == 0)  				n = 196;  			// -  			if (gx % 2 == 0 && gy % 2 != 0)  				n = 179;  			// |  			this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  			#else  			                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int x = 0; x < this.Size.Width; x++) {  	int gx = x + nView.x;  	for (int y = 0; y < this.Size.Height; y++) {  		int gy = y + nView.y;  		this.RegionTiles [x' y].Reset ();  		AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  		if (sq != null) {  			this.RegionTiles [x' y].AddGlyphProvider (sq);  		}  		else {  			//Draw a nice red error tile if we're looking out of bounds in debug mode'  			//but just black if we're in release mode.  			#if DEBUG  			int n = 249;  			// circle  			if (gx % 2 == 0 && gy % 2 == 0)  				n = 197;  			// +  			if (gx % 2 != 0 && gy % 2 == 0)  				n = 196;  			// -  			if (gx % 2 == 0 && gy % 2 != 0)  				n = 179;  			// |  			this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  			#else  			                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int x = 0; x < this.Size.Width; x++) {  	int gx = x + nView.x;  	for (int y = 0; y < this.Size.Height; y++) {  		int gy = y + nView.y;  		this.RegionTiles [x' y].Reset ();  		AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  		if (sq != null) {  			this.RegionTiles [x' y].AddGlyphProvider (sq);  		}  		else {  			//Draw a nice red error tile if we're looking out of bounds in debug mode'  			//but just black if we're in release mode.  			#if DEBUG  			int n = 249;  			// circle  			if (gx % 2 == 0 && gy % 2 == 0)  				n = 197;  			// +  			if (gx % 2 != 0 && gy % 2 == 0)  				n = 196;  			// -  			if (gx % 2 == 0 && gy % 2 != 0)  				n = 179;  			// |  			this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  			#else  			                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int x = 0; x < this.Size.Width; x++) {  	int gx = x + nView.x;  	for (int y = 0; y < this.Size.Height; y++) {  		int gy = y + nView.y;  		this.RegionTiles [x' y].Reset ();  		AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  		if (sq != null) {  			this.RegionTiles [x' y].AddGlyphProvider (sq);  		}  		else {  			//Draw a nice red error tile if we're looking out of bounds in debug mode'  			//but just black if we're in release mode.  			#if DEBUG  			int n = 249;  			// circle  			if (gx % 2 == 0 && gy % 2 == 0)  				n = 197;  			// +  			if (gx % 2 != 0 && gy % 2 == 0)  				n = 196;  			// -  			if (gx % 2 == 0 && gy % 2 != 0)  				n = 179;  			// |  			this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  			#else  			                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int x = 0; x < this.Size.Width; x++) {  	int gx = x + nView.x;  	for (int y = 0; y < this.Size.Height; y++) {  		int gy = y + nView.y;  		this.RegionTiles [x' y].Reset ();  		AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  		if (sq != null) {  			this.RegionTiles [x' y].AddGlyphProvider (sq);  		}  		else {  			//Draw a nice red error tile if we're looking out of bounds in debug mode'  			//but just black if we're in release mode.  			#if DEBUG  			int n = 249;  			// circle  			if (gx % 2 == 0 && gy % 2 == 0)  				n = 197;  			// +  			if (gx % 2 != 0 && gy % 2 == 0)  				n = 196;  			// -  			if (gx % 2 == 0 && gy % 2 != 0)  				n = 179;  			// |  			this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  			#else  			                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int x = 0; x < this.Size.Width; x++) {  	int gx = x + nView.x;  	for (int y = 0; y < this.Size.Height; y++) {  		int gy = y + nView.y;  		this.RegionTiles [x' y].Reset ();  		AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  		if (sq != null) {  			this.RegionTiles [x' y].AddGlyphProvider (sq);  		}  		else {  			//Draw a nice red error tile if we're looking out of bounds in debug mode'  			//but just black if we're in release mode.  			#if DEBUG  			int n = 249;  			// circle  			if (gx % 2 == 0 && gy % 2 == 0)  				n = 197;  			// +  			if (gx % 2 != 0 && gy % 2 == 0)  				n = 196;  			// -  			if (gx % 2 == 0 && gy % 2 != 0)  				n = 179;  			// |  			this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  			#else  			                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int y = 0; y < this.Size.Height; y++) {  	int gy = y + nView.y;  	this.RegionTiles [x' y].Reset ();  	AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  	if (sq != null) {  		this.RegionTiles [x' y].AddGlyphProvider (sq);  	}  	else {  		//Draw a nice red error tile if we're looking out of bounds in debug mode'  		//but just black if we're in release mode.  		#if DEBUG  		int n = 249;  		// circle  		if (gx % 2 == 0 && gy % 2 == 0)  			n = 197;  		// +  		if (gx % 2 != 0 && gy % 2 == 0)  			n = 196;  		// -  		if (gx % 2 == 0 && gy % 2 != 0)  			n = 179;  		// |  		this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  		#else  		                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int y = 0; y < this.Size.Height; y++) {  	int gy = y + nView.y;  	this.RegionTiles [x' y].Reset ();  	AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  	if (sq != null) {  		this.RegionTiles [x' y].AddGlyphProvider (sq);  	}  	else {  		//Draw a nice red error tile if we're looking out of bounds in debug mode'  		//but just black if we're in release mode.  		#if DEBUG  		int n = 249;  		// circle  		if (gx % 2 == 0 && gy % 2 == 0)  			n = 197;  		// +  		if (gx % 2 != 0 && gy % 2 == 0)  			n = 196;  		// -  		if (gx % 2 == 0 && gy % 2 != 0)  			n = 179;  		// |  		this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  		#else  		                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int y = 0; y < this.Size.Height; y++) {  	int gy = y + nView.y;  	this.RegionTiles [x' y].Reset ();  	AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  	if (sq != null) {  		this.RegionTiles [x' y].AddGlyphProvider (sq);  	}  	else {  		//Draw a nice red error tile if we're looking out of bounds in debug mode'  		//but just black if we're in release mode.  		#if DEBUG  		int n = 249;  		// circle  		if (gx % 2 == 0 && gy % 2 == 0)  			n = 197;  		// +  		if (gx % 2 != 0 && gy % 2 == 0)  			n = 196;  		// -  		if (gx % 2 == 0 && gy % 2 != 0)  			n = 179;  		// |  		this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  		#else  		                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int y = 0; y < this.Size.Height; y++) {  	int gy = y + nView.y;  	this.RegionTiles [x' y].Reset ();  	AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  	if (sq != null) {  		this.RegionTiles [x' y].AddGlyphProvider (sq);  	}  	else {  		//Draw a nice red error tile if we're looking out of bounds in debug mode'  		//but just black if we're in release mode.  		#if DEBUG  		int n = 249;  		// circle  		if (gx % 2 == 0 && gy % 2 == 0)  			n = 197;  		// +  		if (gx % 2 != 0 && gy % 2 == 0)  			n = 196;  		// -  		if (gx % 2 == 0 && gy % 2 != 0)  			n = 179;  		// |  		this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  		#else  		                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int y = 0; y < this.Size.Height; y++) {  	int gy = y + nView.y;  	this.RegionTiles [x' y].Reset ();  	AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  	if (sq != null) {  		this.RegionTiles [x' y].AddGlyphProvider (sq);  	}  	else {  		//Draw a nice red error tile if we're looking out of bounds in debug mode'  		//but just black if we're in release mode.  		#if DEBUG  		int n = 249;  		// circle  		if (gx % 2 == 0 && gy % 2 == 0)  			n = 197;  		// +  		if (gx % 2 != 0 && gy % 2 == 0)  			n = 196;  		// -  		if (gx % 2 == 0 && gy % 2 != 0)  			n = 179;  		// |  		this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  		#else  		                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int y = 0; y < this.Size.Height; y++) {  	int gy = y + nView.y;  	this.RegionTiles [x' y].Reset ();  	AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  	if (sq != null) {  		this.RegionTiles [x' y].AddGlyphProvider (sq);  	}  	else {  		//Draw a nice red error tile if we're looking out of bounds in debug mode'  		//but just black if we're in release mode.  		#if DEBUG  		int n = 249;  		// circle  		if (gx % 2 == 0 && gy % 2 == 0)  			n = 197;  		// +  		if (gx % 2 != 0 && gy % 2 == 0)  			n = 196;  		// -  		if (gx % 2 == 0 && gy % 2 != 0)  			n = 179;  		// |  		this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  		#else  		                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int y = 0; y < this.Size.Height; y++) {  	int gy = y + nView.y;  	this.RegionTiles [x' y].Reset ();  	AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  	if (sq != null) {  		this.RegionTiles [x' y].AddGlyphProvider (sq);  	}  	else {  		//Draw a nice red error tile if we're looking out of bounds in debug mode'  		//but just black if we're in release mode.  		#if DEBUG  		int n = 249;  		// circle  		if (gx % 2 == 0 && gy % 2 == 0)  			n = 197;  		// +  		if (gx % 2 != 0 && gy % 2 == 0)  			n = 196;  		// -  		if (gx % 2 == 0 && gy % 2 != 0)  			n = 179;  		// |  		this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  		#else  		                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int y = 0; y < this.Size.Height; y++) {  	int gy = y + nView.y;  	this.RegionTiles [x' y].Reset ();  	AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  	if (sq != null) {  		this.RegionTiles [x' y].AddGlyphProvider (sq);  	}  	else {  		//Draw a nice red error tile if we're looking out of bounds in debug mode'  		//but just black if we're in release mode.  		#if DEBUG  		int n = 249;  		// circle  		if (gx % 2 == 0 && gy % 2 == 0)  			n = 197;  		// +  		if (gx % 2 != 0 && gy % 2 == 0)  			n = 196;  		// -  		if (gx % 2 == 0 && gy % 2 != 0)  			n = 179;  		// |  		this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  		#else  		                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int y = 0; y < this.Size.Height; y++) {  	int gy = y + nView.y;  	this.RegionTiles [x' y].Reset ();  	AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  	if (sq != null) {  		this.RegionTiles [x' y].AddGlyphProvider (sq);  	}  	else {  		//Draw a nice red error tile if we're looking out of bounds in debug mode'  		//but just black if we're in release mode.  		#if DEBUG  		int n = 249;  		// circle  		if (gx % 2 == 0 && gy % 2 == 0)  			n = 197;  		// +  		if (gx % 2 != 0 && gy % 2 == 0)  			n = 196;  		// -  		if (gx % 2 == 0 && gy % 2 != 0)  			n = 179;  		// |  		this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  		#else  		                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: for (int y = 0; y < this.Size.Height; y++) {  	int gy = y + nView.y;  	this.RegionTiles [x' y].Reset ();  	AbstractSquare sq = this.GetSafeSquare (new Vector3 (gx' gy' nView.z));  	if (sq != null) {  		this.RegionTiles [x' y].AddGlyphProvider (sq);  	}  	else {  		//Draw a nice red error tile if we're looking out of bounds in debug mode'  		//but just black if we're in release mode.  		#if DEBUG  		int n = 249;  		// circle  		if (gx % 2 == 0 && gy % 2 == 0)  			n = 197;  		// +  		if (gx % 2 != 0 && gy % 2 == 0)  			n = 196;  		// -  		if (gx % 2 == 0 && gy % 2 != 0)  			n = 179;  		// |  		this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  		#else  		                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (sq != null) {  	this.RegionTiles [x' y].AddGlyphProvider (sq);  }  else {  	//Draw a nice red error tile if we're looking out of bounds in debug mode'  	//but just black if we're in release mode.  	#if DEBUG  	int n = 249;  	// circle  	if (gx % 2 == 0 && gy % 2 == 0)  		n = 197;  	// +  	if (gx % 2 != 0 && gy % 2 == 0)  		n = 196;  	// -  	if (gx % 2 == 0 && gy % 2 != 0)  		n = 179;  	// |  	this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  	#else  	                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (sq != null) {  	this.RegionTiles [x' y].AddGlyphProvider (sq);  }  else {  	//Draw a nice red error tile if we're looking out of bounds in debug mode'  	//but just black if we're in release mode.  	#if DEBUG  	int n = 249;  	// circle  	if (gx % 2 == 0 && gy % 2 == 0)  		n = 197;  	// +  	if (gx % 2 != 0 && gy % 2 == 0)  		n = 196;  	// -  	if (gx % 2 == 0 && gy % 2 != 0)  		n = 179;  	// |  	this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  	#else  	                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (sq != null) {  	this.RegionTiles [x' y].AddGlyphProvider (sq);  }  else {  	//Draw a nice red error tile if we're looking out of bounds in debug mode'  	//but just black if we're in release mode.  	#if DEBUG  	int n = 249;  	// circle  	if (gx % 2 == 0 && gy % 2 == 0)  		n = 197;  	// +  	if (gx % 2 != 0 && gy % 2 == 0)  		n = 196;  	// -  	if (gx % 2 == 0 && gy % 2 != 0)  		n = 179;  	// |  	this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  	#else  	                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (sq != null) {  	this.RegionTiles [x' y].AddGlyphProvider (sq);  }  else {  	//Draw a nice red error tile if we're looking out of bounds in debug mode'  	//but just black if we're in release mode.  	#if DEBUG  	int n = 249;  	// circle  	if (gx % 2 == 0 && gy % 2 == 0)  		n = 197;  	// +  	if (gx % 2 != 0 && gy % 2 == 0)  		n = 196;  	// -  	if (gx % 2 == 0 && gy % 2 != 0)  		n = 179;  	// |  	this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  	#else  	                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (sq != null) {  	this.RegionTiles [x' y].AddGlyphProvider (sq);  }  else {  	//Draw a nice red error tile if we're looking out of bounds in debug mode'  	//but just black if we're in release mode.  	#if DEBUG  	int n = 249;  	// circle  	if (gx % 2 == 0 && gy % 2 == 0)  		n = 197;  	// +  	if (gx % 2 != 0 && gy % 2 == 0)  		n = 196;  	// -  	if (gx % 2 == 0 && gy % 2 != 0)  		n = 179;  	// |  	this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  	#else  	                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (sq != null) {  	this.RegionTiles [x' y].AddGlyphProvider (sq);  }  else {  	//Draw a nice red error tile if we're looking out of bounds in debug mode'  	//but just black if we're in release mode.  	#if DEBUG  	int n = 249;  	// circle  	if (gx % 2 == 0 && gy % 2 == 0)  		n = 197;  	// +  	if (gx % 2 != 0 && gy % 2 == 0)  		n = 196;  	// -  	if (gx % 2 == 0 && gy % 2 != 0)  		n = 179;  	// |  	this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  	#else  	                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (sq != null) {  	this.RegionTiles [x' y].AddGlyphProvider (sq);  }  else {  	//Draw a nice red error tile if we're looking out of bounds in debug mode'  	//but just black if we're in release mode.  	#if DEBUG  	int n = 249;  	// circle  	if (gx % 2 == 0 && gy % 2 == 0)  		n = 197;  	// +  	if (gx % 2 != 0 && gy % 2 == 0)  		n = 196;  	// -  	if (gx % 2 == 0 && gy % 2 != 0)  		n = 179;  	// |  	this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  	#else  	                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (sq != null) {  	this.RegionTiles [x' y].AddGlyphProvider (sq);  }  else {  	//Draw a nice red error tile if we're looking out of bounds in debug mode'  	//but just black if we're in release mode.  	#if DEBUG  	int n = 249;  	// circle  	if (gx % 2 == 0 && gy % 2 == 0)  		n = 197;  	// +  	if (gx % 2 != 0 && gy % 2 == 0)  		n = 196;  	// -  	if (gx % 2 == 0 && gy % 2 != 0)  		n = 179;  	// |  	this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  	#else  	                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (sq != null) {  	this.RegionTiles [x' y].AddGlyphProvider (sq);  }  else {  	//Draw a nice red error tile if we're looking out of bounds in debug mode'  	//but just black if we're in release mode.  	#if DEBUG  	int n = 249;  	// circle  	if (gx % 2 == 0 && gy % 2 == 0)  		n = 197;  	// +  	if (gx % 2 != 0 && gy % 2 == 0)  		n = 196;  	// -  	if (gx % 2 == 0 && gy % 2 != 0)  		n = 179;  	// |  	this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  	#else  	                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (sq != null) {  	this.RegionTiles [x' y].AddGlyphProvider (sq);  }  else {  	//Draw a nice red error tile if we're looking out of bounds in debug mode'  	//but just black if we're in release mode.  	#if DEBUG  	int n = 249;  	// circle  	if (gx % 2 == 0 && gy % 2 == 0)  		n = 197;  	// +  	if (gx % 2 != 0 && gy % 2 == 0)  		n = 196;  	// -  	if (gx % 2 == 0 && gy % 2 != 0)  		n = 179;  	// |  	this.RegionTiles [x' y].AddGlyphProvider (new ErrorSquare (n));  	#else  	                            this.RegionTiles[x' y].AddGlyphProvider(new EmptySquare()); #endif  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (gx % 2 == 0 && gy % 2 == 0)  	n = 197;  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (gx % 2 == 0 && gy % 2 == 0)  	n = 197;  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (gx % 2 == 0 && gy % 2 == 0)  	n = 197;  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: n = 197;  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (gx % 2 != 0 && gy % 2 == 0)  	n = 196;  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (gx % 2 != 0 && gy % 2 == 0)  	n = 196;  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (gx % 2 != 0 && gy % 2 == 0)  	n = 196;  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: n = 196;  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (gx % 2 == 0 && gy % 2 != 0)  	n = 179;  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (gx % 2 == 0 && gy % 2 != 0)  	n = 179;  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: if (gx % 2 == 0 && gy % 2 != 0)  	n = 179;  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,ViewFrom,The following statement contains a magic number: n = 179;  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,EntitiesInElipticalRange,The following statement contains a magic number: lock (this) {  	Vector3 topleft = location - range;  	Vector3 extents = (range * 2);  	foreach (AbstractPage p in GetPagesInRange (topleft' extents)) {  		foreach (AbstractEntity ent in p.Entities) {  			if (ent.Location.IntersectsWithEllipse (location' range)) {  				ret.Add (ent);  			}  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractMap,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractMap.cs,EntitiesInRectangularRange,The following statement contains a magic number: lock (this) {  	Vector3 topleft = location - range;  	Vector3 extents = (range * 2);  	foreach (AbstractPage p in GetPagesInRange (topleft' extents)) {  		foreach (AbstractEntity ent in p.Entities) {  			if (ent.Location.IntersectsWithExtents (location' range)) {  				ret.Add (ent);  			}  		}  	}  }  
Magic Number,Sharplike.Mapping,AbstractPage,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractPage.cs,LocateNeighbor,The following statement contains a magic number: if (neighborPosition.x >= 0 && neighborPosition.x <= map.GetUpperBound (0) && neighborPosition.y >= 0 && neighborPosition.y <= map.GetUpperBound (1) && neighborPosition.z >= 0 && neighborPosition.z <= map.GetUpperBound (2)) {  	return map [p.x' p.y' p.z];  }  else {  	return parentMap.GetSquare (this' neighborPosition);  }  
Missing Default,Sharplike.Mapping,DirectionUtils,C:\repos\eropple_sharplike\Sharplike.Mapping\Direction.cs,OppositeDirection,The following switch statement is missing a default case: switch (from) {  case Direction.Northwest:  	return Direction.Southeast;  case Direction.North:  	return Direction.South;  case Direction.Northeast:  	return Direction.Southwest;  case Direction.East:  	return Direction.West;  case Direction.West:  	return Direction.East;  case Direction.Southeast:  	return Direction.Northwest;  case Direction.South:  	return Direction.North;  case Direction.Southwest:  	return Direction.Northeast;  case Direction.Up:  	return Direction.Down;  case Direction.Down:  	return Direction.Up;  }  
Missing Default,Sharplike.Mapping,AbstractPage,C:\repos\eropple_sharplike\Sharplike.Mapping\AbstractPage.cs,LocateNeighbor,The following switch statement is missing a default case: switch (d) {  case Direction.Up:  	offset = new Vector3 (0' 0' -1);  	break;  case Direction.Down:  	offset = new Vector3 (0' 0' 1);  	break;  case Direction.North:  	offset = new Vector3 (0' -1' 0);  	break;  case Direction.South:  	offset = new Vector3 (0' 1' 0);  	break;  case Direction.East:  	offset = new Vector3 (1' 0' 0);  	break;  case Direction.West:  	offset = new Vector3 (-1' 0' 0);  	break;  case Direction.Northeast:  	offset = new Vector3 (1' -1' 0);  	break;  case Direction.Northwest:  	offset = new Vector3 (-1' -1' 0);  	break;  case Direction.Southeast:  	offset = new Vector3 (1' 1' 0);  	break;  case Direction.Southwest:  	offset = new Vector3 (-1' 1' 0);  	break;  }  
