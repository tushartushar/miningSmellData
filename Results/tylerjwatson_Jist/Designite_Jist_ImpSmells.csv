Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Wolfje.Plugins.Jist,JistEngine,C:\repos\tylerjwatson_Jist\JistEngine.cs,CreateScriptFunctions,Cyclomatic complexity of the method is 8
Complex Method,Wolfje.Plugins.Jist,JistPlugin,C:\repos\tylerjwatson_Jist\JistPlugin.cs,TShockAPI_JistChatCommand,Cyclomatic complexity of the method is 8
Complex Method,Wolfje.Plugins.Jist.Extensions,TSPlayerExtensions,C:\repos\tylerjwatson_Jist\Extensions\TSPlayer.Extensions.cs,PermissionlessInvoke,Cyclomatic complexity of the method is 8
Complex Method,Wolfje.Plugins.Jist.stdlib,stdhook,C:\repos\tylerjwatson_Jist\StdLib\stdhook.cs,RegisterHook,Cyclomatic complexity of the method is 10
Long Parameter List,Wolfje.Plugins.Jist.Extensions,TShockCommandExtensions,C:\repos\tylerjwatson_Jist\Extensions\TShockCommand.Extensions.cs,RunWithoutPermissions,The method has 5 parameters.
Long Statement,Wolfje.Plugins.Jist,JistEngine,C:\repos\tylerjwatson_Jist\JistEngine.cs,ExecuteHardCodedScripts,The length of the statement  "    if (typeof o.valueOf == 'undefined') return ""'valueOf()' is missing on '"" + (typeof o) + ""' - if you are inheriting from V8ManagedObject' make sure you are not blocking the property.""; " is 188.
Long Statement,Wolfje.Plugins.Jist,JistEngine,C:\repos\tylerjwatson_Jist\JistEngine.cs,ExecuteHardCodedScripts,The length of the statement  "    if (typeof o.toString == 'undefined') return ""'toString()' is missing on '"" + o.valueOf() + ""' - if you are inheriting from V8ManagedObject' make sure you are not blocking the property.""; " is 191.
Long Statement,Wolfje.Plugins.Jist,JistEngine,C:\repos\tylerjwatson_Jist\JistEngine.cs,LoadScript,The length of the statement  "			 */if (scriptContainer.Scripts.Count (i => i.FilePathOrUri.Equals (ScriptPath' StringComparison.InvariantCultureIgnoreCase)) > 0) { " is 130.
Long Statement,Wolfje.Plugins.Jist,JistEngine,C:\repos\tylerjwatson_Jist\JistEngine.cs,LoadScript,The length of the statement  "		content = scriptContainer.Scripts.FirstOrDefault (i => i.FilePathOrUri.Equals (ScriptPath' StringComparison.InvariantCultureIgnoreCase)); " is 137.
Long Statement,Wolfje.Plugins.Jist,JistEngine,C:\repos\tylerjwatson_Jist\JistEngine.cs,CreateScriptFunctions,The length of the statement  "			 */foreach (JavascriptProvidesAttribute attrib in type.GetCustomAttributes (true).OfType<JavascriptProvidesAttribute> ()) { " is 122.
Long Statement,Wolfje.Plugins.Jist,JistEngine,C:\repos\tylerjwatson_Jist\JistEngine.cs,CreateScriptFunctions,The length of the statement  "			 */foreach (var jsFunction in type.GetMethods ().Where (i => i.GetCustomAttributes (true).OfType<JavascriptFunctionAttribute> ().Any ())) { " is 138.
Long Statement,Wolfje.Plugins.Jist,JistEngine,C:\repos\tylerjwatson_Jist\JistEngine.cs,CreateScriptFunctions,The length of the statement  "		if (instance == null && jsFunction.IsStatic == false || (jsAttribute = jsFunction.GetCustomAttributes (true).OfType<JavascriptFunctionAttribute> ().FirstOrDefault ()) == null) { " is 177.
Long Statement,Wolfje.Plugins.Jist,JistEngine,C:\repos\tylerjwatson_Jist\JistEngine.cs,CreateScriptFunctions,The length of the statement  "						 */delegateSignature = Expression.GetDelegateType (jsFunction.GetParameters ().Select (i => i.ParameterType).Concat (new[] { " is 123.
Long Statement,Wolfje.Plugins.Jist,JistEngine,C:\repos\tylerjwatson_Jist\JistEngine.cs,CreateScriptFunctions,The length of the statement  "				ScriptLog.ErrorFormat ("engine"' "Error whilst creating javascript function for {0}: {1}"' functionName' ex.ToString ()); " is 121.
Long Statement,Wolfje.Plugins.Jist,JistPlugin,C:\repos\tylerjwatson_Jist\JistPlugin.cs,TShockAPI_JistChatCommand,The length of the statement  "		foreach (Wolfje.Plugins.Jist.stdlib.RecurringFunction recur in Instance.stdTask.DumpTasks ().OrderBy (i => i.NextRunTime)) { " is 124.
Long Statement,Wolfje.Plugins.Jist,JistPlugin,C:\repos\tylerjwatson_Jist\JistPlugin.cs,TShockAPI_JistChatCommand,The length of the statement  "	else if (args.Parameters [0].Equals ("eval"' StringComparison.CurrentCultureIgnoreCase) || args.Parameters [0].Equals ("ev"' StringComparison.CurrentCultureIgnoreCase) && (args.Parameters.Count > 1)) { " is 201.
Long Statement,Wolfje.Plugins.Jist,JistPlugin,C:\repos\tylerjwatson_Jist\JistPlugin.cs,TShockAPI_JistChatCommand,The length of the statement  "	else if (args.Parameters [0].Equals ("reload"' StringComparison.CurrentCultureIgnoreCase) || args.Parameters [0].Equals ("rl"' StringComparison.CurrentCultureIgnoreCase)) { " is 172.
Long Statement,Wolfje.Plugins.Jist.Framework,ScriptContainer,C:\repos\tylerjwatson_Jist\Framework\ScriptContainer.cs,PreprocessRequires,The length of the statement  "	if (script == null || string.IsNullOrEmpty (script.Script) == true || PreprocessorDirectives.requiresRegex.IsMatch (script.Script) == false) { " is 142.
Long Statement,Wolfje.Plugins.Jist.Framework,ScriptContainer,C:\repos\tylerjwatson_Jist\Framework\ScriptContainer.cs,PreprocessRequires,The length of the statement  "			script.Script = script.Script.Replace (match.Value' string.Format ("/** #pragma require \"{0}\" - DO NOT CHANGE THIS LINE **/\r\n"' trimmedPackage)); " is 149.
Long Statement,Wolfje.Plugins.Jist.Framework,ScriptContainer,C:\repos\tylerjwatson_Jist\Framework\ScriptContainer.cs,PreprocessImports,The length of the statement  "				string importedValue = string.Format ("/** #pragma import \"{0}\" - Imported by engine - DO NOT CHANGE THIS LINE **/"' scriptLocation); " is 135.
Long Statement,Wolfje.Plugins.Jist.Framework,ScriptContainer,C:\repos\tylerjwatson_Jist\Framework\ScriptContainer.cs,PreprocessInlines,The length of the statement  "				script.Script = script.Script.Insert (match.Index' string.Format ("/** #pragma inline \"{0}\" **/\r\n{1}"' scriptLocation' inlineContent.Script)); " is 146.
Long Statement,Wolfje.Plugins.Jist.stdlib,stdhook,C:\repos\tylerjwatson_Jist\StdLib\stdhook.cs,RegisterHook,The length of the statement  "		hookId = AddHook (new JistHook<ServerChatEventArgs> (this.engine' TerrariaApi.Server.ServerApi.Hooks.ServerChat' func)); " is 120.
Long Statement,Wolfje.Plugins.Jist.stdlib,RecurringFunction,C:\repos\tylerjwatson_Jist\StdLib\stdtask.cs,ToString,The length of the statement  "	return string.Format ("Task {0}: {1} secs' next in {2}"' this.RecurrenceID' this.Seconds' nextRunTime.ToString (@"hh\:mm\:ss")); " is 128.
Long Statement,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,IsPlayerInRegion,The length of the statement  "	if (playerRef == null || regionRef == null || (player = GetPlayer (playerRef)) == null || (region = GetRegion (regionRef)) == null) { " is 133.
Long Statement,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,GetPlayer,The length of the statement  "		if ((player = TShockAPI.TShock.Players.FirstOrDefault (i => i != null && i.Name == playerString.ToString ())) != null) { " is 120.
Long Statement,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,TShockGroupExists,The length of the statement  "	return TShockAPI.TShock.Groups.Count (i => i.Name.Equals (GroupName.ToString ()' StringComparison.CurrentCultureIgnoreCase)) > 0; " is 129.
Long Statement,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,TShockGroup,The length of the statement  "	g = TShockAPI.TShock.Groups.FirstOrDefault (i => i.Name.Equals (Group.ToString ()' StringComparison.CurrentCultureIgnoreCase)); " is 127.
Complex Conditional,Wolfje.Plugins.Jist.stdlib,stdtask,C:\repos\tylerjwatson_Jist\StdLib\stdtask.cs,oneSecondTimer_Elapsed,The conditional expression  "at == null || engine == null || Terraria.Main.time <= at.AtTime || at.ExecutedInIteration == true"  is complex.
Complex Conditional,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,IsPlayerInRegion,The conditional expression  "playerRef == null || regionRef == null || (player = GetPlayer (playerRef)) == null || (region = GetRegion (regionRef)) == null"  is complex.
Empty Catch Block,Wolfje.Plugins.Jist.stdlib,stdtask,C:\repos\tylerjwatson_Jist\StdLib\stdtask.cs,RunAfterAsync,The method has an empty catch block.
Magic Number,Wolfje.Plugins.Jist,ConsoleEx,C:\repos\tylerjwatson_Jist\ConsoleEx.cs,WriteBar,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	char c = i < args.Label.Length ? args.Label [i] : ' ';  	output.Append (c);  }  
Magic Number,Wolfje.Plugins.Jist,ConsoleEx,C:\repos\tylerjwatson_Jist\ConsoleEx.cs,WriteBar,The following statement contains a magic number: fillLen = Convert.ToInt32 (((decimal)args.Percent / 100) * 60);  
Magic Number,Wolfje.Plugins.Jist,ConsoleEx,C:\repos\tylerjwatson_Jist\ConsoleEx.cs,WriteBar,The following statement contains a magic number: fillLen = Convert.ToInt32 (((decimal)args.Percent / 100) * 60);  
Magic Number,Wolfje.Plugins.Jist,ConsoleEx,C:\repos\tylerjwatson_Jist\ConsoleEx.cs,WriteBar,The following statement contains a magic number: for (int i = 0; i < 60; i++) {  	output.Append (i <= fillLen ? filler : spacer);  }  
Magic Number,Wolfje.Plugins.Jist,JistEngine,C:\repos\tylerjwatson_Jist\JistEngine.cs,LoadEngineAsync,The following statement contains a magic number: totalLoadingItems = ScriptsCount () * 2 + 5;  
Magic Number,Wolfje.Plugins.Jist,JistEngine,C:\repos\tylerjwatson_Jist\JistEngine.cs,LoadEngineAsync,The following statement contains a magic number: totalLoadingItems = ScriptsCount () * 2 + 5;  
Magic Number,Wolfje.Plugins.Jist,ScriptLog,C:\repos\tylerjwatson_Jist\ScriptLog.cs,PrintSuccess,The following statement contains a magic number: lock (__lockSyncLock) {  	int defaultWindowWidth = default(int);  	string s = string.Format (MessageFormat' args);  	ConsoleColor origColour = Console.ForegroundColor;  	Console.ForegroundColor = ConsoleColor.Green;  	try {  		defaultWindowWidth = Console.WindowWidth;  		Console.SetCursorPosition (defaultWindowWidth - s.Length - 3' Console.CursorTop);  	}  	catch {  		Console.Write ('\t');  		defaultWindowWidth = 80;  	}  	Console.WriteLine (s);  	Console.ForegroundColor = origColour;  }  
Magic Number,Wolfje.Plugins.Jist,ScriptLog,C:\repos\tylerjwatson_Jist\ScriptLog.cs,PrintSuccess,The following statement contains a magic number: lock (__lockSyncLock) {  	int defaultWindowWidth = default(int);  	string s = string.Format (MessageFormat' args);  	ConsoleColor origColour = Console.ForegroundColor;  	Console.ForegroundColor = ConsoleColor.Green;  	try {  		defaultWindowWidth = Console.WindowWidth;  		Console.SetCursorPosition (defaultWindowWidth - s.Length - 3' Console.CursorTop);  	}  	catch {  		Console.Write ('\t');  		defaultWindowWidth = 80;  	}  	Console.WriteLine (s);  	Console.ForegroundColor = origColour;  }  
Magic Number,Wolfje.Plugins.Jist,ScriptLog,C:\repos\tylerjwatson_Jist\ScriptLog.cs,PrintSuccess,The following statement contains a magic number: try {  	defaultWindowWidth = Console.WindowWidth;  	Console.SetCursorPosition (defaultWindowWidth - s.Length - 3' Console.CursorTop);  }  catch {  	Console.Write ('\t');  	defaultWindowWidth = 80;  }  
Magic Number,Wolfje.Plugins.Jist,ScriptLog,C:\repos\tylerjwatson_Jist\ScriptLog.cs,PrintSuccess,The following statement contains a magic number: try {  	defaultWindowWidth = Console.WindowWidth;  	Console.SetCursorPosition (defaultWindowWidth - s.Length - 3' Console.CursorTop);  }  catch {  	Console.Write ('\t');  	defaultWindowWidth = 80;  }  
Magic Number,Wolfje.Plugins.Jist,ScriptLog,C:\repos\tylerjwatson_Jist\ScriptLog.cs,PrintSuccess,The following statement contains a magic number: Console.SetCursorPosition (defaultWindowWidth - s.Length - 3' Console.CursorTop);  
Magic Number,Wolfje.Plugins.Jist,ScriptLog,C:\repos\tylerjwatson_Jist\ScriptLog.cs,PrintSuccess,The following statement contains a magic number: defaultWindowWidth = 80;  
Magic Number,Wolfje.Plugins.Jist,ScriptLog,C:\repos\tylerjwatson_Jist\ScriptLog.cs,PrintError,The following statement contains a magic number: lock (__lockSyncLock) {  	int defaultWindowWidth = default(int);  	string s = string.Format (MessageFormat' args);  	ConsoleColor origColour = Console.ForegroundColor;  	Console.ForegroundColor = ConsoleColor.Red;  	try {  		defaultWindowWidth = Console.WindowWidth;  		Console.SetCursorPosition (defaultWindowWidth - s.Length - 3' Console.CursorTop);  	}  	catch {  		Console.Write ('\t');  		defaultWindowWidth = 80;  	}  	Console.WriteLine (s);  	Console.ForegroundColor = origColour;  }  
Magic Number,Wolfje.Plugins.Jist,ScriptLog,C:\repos\tylerjwatson_Jist\ScriptLog.cs,PrintError,The following statement contains a magic number: lock (__lockSyncLock) {  	int defaultWindowWidth = default(int);  	string s = string.Format (MessageFormat' args);  	ConsoleColor origColour = Console.ForegroundColor;  	Console.ForegroundColor = ConsoleColor.Red;  	try {  		defaultWindowWidth = Console.WindowWidth;  		Console.SetCursorPosition (defaultWindowWidth - s.Length - 3' Console.CursorTop);  	}  	catch {  		Console.Write ('\t');  		defaultWindowWidth = 80;  	}  	Console.WriteLine (s);  	Console.ForegroundColor = origColour;  }  
Magic Number,Wolfje.Plugins.Jist,ScriptLog,C:\repos\tylerjwatson_Jist\ScriptLog.cs,PrintError,The following statement contains a magic number: try {  	defaultWindowWidth = Console.WindowWidth;  	Console.SetCursorPosition (defaultWindowWidth - s.Length - 3' Console.CursorTop);  }  catch {  	Console.Write ('\t');  	defaultWindowWidth = 80;  }  
Magic Number,Wolfje.Plugins.Jist,ScriptLog,C:\repos\tylerjwatson_Jist\ScriptLog.cs,PrintError,The following statement contains a magic number: try {  	defaultWindowWidth = Console.WindowWidth;  	Console.SetCursorPosition (defaultWindowWidth - s.Length - 3' Console.CursorTop);  }  catch {  	Console.Write ('\t');  	defaultWindowWidth = 80;  }  
Magic Number,Wolfje.Plugins.Jist,ScriptLog,C:\repos\tylerjwatson_Jist\ScriptLog.cs,PrintError,The following statement contains a magic number: Console.SetCursorPosition (defaultWindowWidth - s.Length - 3' Console.CursorTop);  
Magic Number,Wolfje.Plugins.Jist,ScriptLog,C:\repos\tylerjwatson_Jist\ScriptLog.cs,PrintError,The following statement contains a magic number: defaultWindowWidth = 80;  
Magic Number,Wolfje.Plugins.Jist.Framework,ScriptContainer,C:\repos\tylerjwatson_Jist\Framework\ScriptContainer.cs,PreprocessRequires,The following statement contains a magic number: foreach (Match match in PreprocessorDirectives.requiresRegex.Matches (script.Script)) {  	string[] packages = match.Groups [2].Value.Split (''');  	foreach (string package in packages) {  		string trimmedPackage = package.Trim ().Replace ("\""' "");  		if (string.IsNullOrEmpty (trimmedPackage) == true) {  			return;  		}  		script.PackageRequirements.Add (trimmedPackage);  		script.Script = script.Script.Replace (match.Value' string.Format ("/** #pragma require \"{0}\" - DO NOT CHANGE THIS LINE **/\r\n"' trimmedPackage));  	}  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,std,C:\repos\tylerjwatson_Jist\StdLib\std.cs,ForEachItem,The following statement contains a magic number: for (var i = -48; i < Main.maxItemTypes; i++) {  	var item = TShock.Utils.GetItemById (i);  	if (item == null) {  		continue;  	}  	engine.CallFunction (func' null' i' item);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,stdtask,C:\repos\tylerjwatson_Jist\StdLib\stdtask.cs,stdtask,The following statement contains a magic number: this.highPrecisionTimer = new Timer (100);  
Magic Number,Wolfje.Plugins.Jist.stdlib,stdtask,C:\repos\tylerjwatson_Jist\StdLib\stdtask.cs,stdtask,The following statement contains a magic number: this.oneSecondTimer = new Timer (1000);  
Magic Number,Wolfje.Plugins.Jist.stdlib,stdtask,C:\repos\tylerjwatson_Jist\StdLib\stdtask.cs,highPrecisionTimer_Elapsed,The following statement contains a magic number: if (time > 0 && time < 200) {  	for (int i = 0; i < runAtList.Count; i++) {  		RunAt at;  		lock (syncRoot) {  			at = runAtList.ElementAtOrDefault (i);  			if (at == null) {  				continue;  			}  			at.ExecutedInIteration = false;  		}  	}  	//    TShockAPI.Log.ConsoleInfo("* Execution iterators reset.");  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,RecurringFunction,C:\repos\tylerjwatson_Jist\StdLib\stdtask.cs,RecurringFunction,The following statement contains a magic number: this.Seconds += Hours * 3600;  
Magic Number,Wolfje.Plugins.Jist.stdlib,RecurringFunction,C:\repos\tylerjwatson_Jist\StdLib\stdtask.cs,RecurringFunction,The following statement contains a magic number: this.Seconds += Minutes * 60;  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,WarpPlayer,The following statement contains a magic number: p.Teleport (warp.Position.X * 16' warp.Position.Y * 16);  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,WarpPlayer,The following statement contains a magic number: p.Teleport (warp.Position.X * 16' warp.Position.Y * 16);  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour != null) {  	if (colour is Color) {  		returnColor = (Color)colour;  	}  	else if (colour is string) {  		int r = 0' g = 0' b = 0;  		string colourString = colour as string;  		if (rgbColourRegex.IsMatch (colourString)) {  			Match rgbMatch = rgbColourRegex.Match (colourString);  			Int32.TryParse (rgbMatch.Groups [2].Value' out r);  			Int32.TryParse (rgbMatch.Groups [3].Value' out g);  			Int32.TryParse (rgbMatch.Groups [4].Value' out b);  		}  		else if (htmlColourRegex.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegex.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  		}  		else if (htmlColourRegexShort.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegexShort.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  		}  		returnColor = new Color (r' g' b);  	}  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour != null) {  	if (colour is Color) {  		returnColor = (Color)colour;  	}  	else if (colour is string) {  		int r = 0' g = 0' b = 0;  		string colourString = colour as string;  		if (rgbColourRegex.IsMatch (colourString)) {  			Match rgbMatch = rgbColourRegex.Match (colourString);  			Int32.TryParse (rgbMatch.Groups [2].Value' out r);  			Int32.TryParse (rgbMatch.Groups [3].Value' out g);  			Int32.TryParse (rgbMatch.Groups [4].Value' out b);  		}  		else if (htmlColourRegex.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegex.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  		}  		else if (htmlColourRegexShort.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegexShort.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  		}  		returnColor = new Color (r' g' b);  	}  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour != null) {  	if (colour is Color) {  		returnColor = (Color)colour;  	}  	else if (colour is string) {  		int r = 0' g = 0' b = 0;  		string colourString = colour as string;  		if (rgbColourRegex.IsMatch (colourString)) {  			Match rgbMatch = rgbColourRegex.Match (colourString);  			Int32.TryParse (rgbMatch.Groups [2].Value' out r);  			Int32.TryParse (rgbMatch.Groups [3].Value' out g);  			Int32.TryParse (rgbMatch.Groups [4].Value' out b);  		}  		else if (htmlColourRegex.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegex.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  		}  		else if (htmlColourRegexShort.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegexShort.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  		}  		returnColor = new Color (r' g' b);  	}  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour != null) {  	if (colour is Color) {  		returnColor = (Color)colour;  	}  	else if (colour is string) {  		int r = 0' g = 0' b = 0;  		string colourString = colour as string;  		if (rgbColourRegex.IsMatch (colourString)) {  			Match rgbMatch = rgbColourRegex.Match (colourString);  			Int32.TryParse (rgbMatch.Groups [2].Value' out r);  			Int32.TryParse (rgbMatch.Groups [3].Value' out g);  			Int32.TryParse (rgbMatch.Groups [4].Value' out b);  		}  		else if (htmlColourRegex.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegex.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  		}  		else if (htmlColourRegexShort.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegexShort.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  		}  		returnColor = new Color (r' g' b);  	}  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour != null) {  	if (colour is Color) {  		returnColor = (Color)colour;  	}  	else if (colour is string) {  		int r = 0' g = 0' b = 0;  		string colourString = colour as string;  		if (rgbColourRegex.IsMatch (colourString)) {  			Match rgbMatch = rgbColourRegex.Match (colourString);  			Int32.TryParse (rgbMatch.Groups [2].Value' out r);  			Int32.TryParse (rgbMatch.Groups [3].Value' out g);  			Int32.TryParse (rgbMatch.Groups [4].Value' out b);  		}  		else if (htmlColourRegex.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegex.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  		}  		else if (htmlColourRegexShort.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegexShort.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  		}  		returnColor = new Color (r' g' b);  	}  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour != null) {  	if (colour is Color) {  		returnColor = (Color)colour;  	}  	else if (colour is string) {  		int r = 0' g = 0' b = 0;  		string colourString = colour as string;  		if (rgbColourRegex.IsMatch (colourString)) {  			Match rgbMatch = rgbColourRegex.Match (colourString);  			Int32.TryParse (rgbMatch.Groups [2].Value' out r);  			Int32.TryParse (rgbMatch.Groups [3].Value' out g);  			Int32.TryParse (rgbMatch.Groups [4].Value' out b);  		}  		else if (htmlColourRegex.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegex.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  		}  		else if (htmlColourRegexShort.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegexShort.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  		}  		returnColor = new Color (r' g' b);  	}  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour != null) {  	if (colour is Color) {  		returnColor = (Color)colour;  	}  	else if (colour is string) {  		int r = 0' g = 0' b = 0;  		string colourString = colour as string;  		if (rgbColourRegex.IsMatch (colourString)) {  			Match rgbMatch = rgbColourRegex.Match (colourString);  			Int32.TryParse (rgbMatch.Groups [2].Value' out r);  			Int32.TryParse (rgbMatch.Groups [3].Value' out g);  			Int32.TryParse (rgbMatch.Groups [4].Value' out b);  		}  		else if (htmlColourRegex.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegex.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  		}  		else if (htmlColourRegexShort.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegexShort.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  		}  		returnColor = new Color (r' g' b);  	}  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour != null) {  	if (colour is Color) {  		returnColor = (Color)colour;  	}  	else if (colour is string) {  		int r = 0' g = 0' b = 0;  		string colourString = colour as string;  		if (rgbColourRegex.IsMatch (colourString)) {  			Match rgbMatch = rgbColourRegex.Match (colourString);  			Int32.TryParse (rgbMatch.Groups [2].Value' out r);  			Int32.TryParse (rgbMatch.Groups [3].Value' out g);  			Int32.TryParse (rgbMatch.Groups [4].Value' out b);  		}  		else if (htmlColourRegex.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegex.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  		}  		else if (htmlColourRegexShort.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegexShort.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  		}  		returnColor = new Color (r' g' b);  	}  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour != null) {  	if (colour is Color) {  		returnColor = (Color)colour;  	}  	else if (colour is string) {  		int r = 0' g = 0' b = 0;  		string colourString = colour as string;  		if (rgbColourRegex.IsMatch (colourString)) {  			Match rgbMatch = rgbColourRegex.Match (colourString);  			Int32.TryParse (rgbMatch.Groups [2].Value' out r);  			Int32.TryParse (rgbMatch.Groups [3].Value' out g);  			Int32.TryParse (rgbMatch.Groups [4].Value' out b);  		}  		else if (htmlColourRegex.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegex.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  		}  		else if (htmlColourRegexShort.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegexShort.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  		}  		returnColor = new Color (r' g' b);  	}  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour != null) {  	if (colour is Color) {  		returnColor = (Color)colour;  	}  	else if (colour is string) {  		int r = 0' g = 0' b = 0;  		string colourString = colour as string;  		if (rgbColourRegex.IsMatch (colourString)) {  			Match rgbMatch = rgbColourRegex.Match (colourString);  			Int32.TryParse (rgbMatch.Groups [2].Value' out r);  			Int32.TryParse (rgbMatch.Groups [3].Value' out g);  			Int32.TryParse (rgbMatch.Groups [4].Value' out b);  		}  		else if (htmlColourRegex.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegex.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  		}  		else if (htmlColourRegexShort.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegexShort.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  		}  		returnColor = new Color (r' g' b);  	}  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour != null) {  	if (colour is Color) {  		returnColor = (Color)colour;  	}  	else if (colour is string) {  		int r = 0' g = 0' b = 0;  		string colourString = colour as string;  		if (rgbColourRegex.IsMatch (colourString)) {  			Match rgbMatch = rgbColourRegex.Match (colourString);  			Int32.TryParse (rgbMatch.Groups [2].Value' out r);  			Int32.TryParse (rgbMatch.Groups [3].Value' out g);  			Int32.TryParse (rgbMatch.Groups [4].Value' out b);  		}  		else if (htmlColourRegex.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegex.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  		}  		else if (htmlColourRegexShort.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegexShort.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  		}  		returnColor = new Color (r' g' b);  	}  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour != null) {  	if (colour is Color) {  		returnColor = (Color)colour;  	}  	else if (colour is string) {  		int r = 0' g = 0' b = 0;  		string colourString = colour as string;  		if (rgbColourRegex.IsMatch (colourString)) {  			Match rgbMatch = rgbColourRegex.Match (colourString);  			Int32.TryParse (rgbMatch.Groups [2].Value' out r);  			Int32.TryParse (rgbMatch.Groups [3].Value' out g);  			Int32.TryParse (rgbMatch.Groups [4].Value' out b);  		}  		else if (htmlColourRegex.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegex.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  		}  		else if (htmlColourRegexShort.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegexShort.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  		}  		returnColor = new Color (r' g' b);  	}  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour != null) {  	if (colour is Color) {  		returnColor = (Color)colour;  	}  	else if (colour is string) {  		int r = 0' g = 0' b = 0;  		string colourString = colour as string;  		if (rgbColourRegex.IsMatch (colourString)) {  			Match rgbMatch = rgbColourRegex.Match (colourString);  			Int32.TryParse (rgbMatch.Groups [2].Value' out r);  			Int32.TryParse (rgbMatch.Groups [3].Value' out g);  			Int32.TryParse (rgbMatch.Groups [4].Value' out b);  		}  		else if (htmlColourRegex.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegex.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  		}  		else if (htmlColourRegexShort.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegexShort.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  		}  		returnColor = new Color (r' g' b);  	}  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour != null) {  	if (colour is Color) {  		returnColor = (Color)colour;  	}  	else if (colour is string) {  		int r = 0' g = 0' b = 0;  		string colourString = colour as string;  		if (rgbColourRegex.IsMatch (colourString)) {  			Match rgbMatch = rgbColourRegex.Match (colourString);  			Int32.TryParse (rgbMatch.Groups [2].Value' out r);  			Int32.TryParse (rgbMatch.Groups [3].Value' out g);  			Int32.TryParse (rgbMatch.Groups [4].Value' out b);  		}  		else if (htmlColourRegex.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegex.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  		}  		else if (htmlColourRegexShort.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegexShort.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  		}  		returnColor = new Color (r' g' b);  	}  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour != null) {  	if (colour is Color) {  		returnColor = (Color)colour;  	}  	else if (colour is string) {  		int r = 0' g = 0' b = 0;  		string colourString = colour as string;  		if (rgbColourRegex.IsMatch (colourString)) {  			Match rgbMatch = rgbColourRegex.Match (colourString);  			Int32.TryParse (rgbMatch.Groups [2].Value' out r);  			Int32.TryParse (rgbMatch.Groups [3].Value' out g);  			Int32.TryParse (rgbMatch.Groups [4].Value' out b);  		}  		else if (htmlColourRegex.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegex.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  		}  		else if (htmlColourRegexShort.IsMatch (colourString)) {  			Match htmlMatch = htmlColourRegexShort.Match (colourString);  			r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  			g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  			b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  		}  		returnColor = new Color (r' g' b);  	}  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is Color) {  	returnColor = (Color)colour;  }  else if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is Color) {  	returnColor = (Color)colour;  }  else if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is Color) {  	returnColor = (Color)colour;  }  else if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is Color) {  	returnColor = (Color)colour;  }  else if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is Color) {  	returnColor = (Color)colour;  }  else if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is Color) {  	returnColor = (Color)colour;  }  else if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is Color) {  	returnColor = (Color)colour;  }  else if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is Color) {  	returnColor = (Color)colour;  }  else if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is Color) {  	returnColor = (Color)colour;  }  else if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is Color) {  	returnColor = (Color)colour;  }  else if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is Color) {  	returnColor = (Color)colour;  }  else if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is Color) {  	returnColor = (Color)colour;  }  else if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is Color) {  	returnColor = (Color)colour;  }  else if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is Color) {  	returnColor = (Color)colour;  }  else if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is Color) {  	returnColor = (Color)colour;  }  else if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (colour is string) {  	int r = 0' g = 0' b = 0;  	string colourString = colour as string;  	if (rgbColourRegex.IsMatch (colourString)) {  		Match rgbMatch = rgbColourRegex.Match (colourString);  		Int32.TryParse (rgbMatch.Groups [2].Value' out r);  		Int32.TryParse (rgbMatch.Groups [3].Value' out g);  		Int32.TryParse (rgbMatch.Groups [4].Value' out b);  	}  	else if (htmlColourRegex.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegex.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  	}  	else if (htmlColourRegexShort.IsMatch (colourString)) {  		Match htmlMatch = htmlColourRegexShort.Match (colourString);  		r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  		g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  		b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  	}  	returnColor = new Color (r' g' b);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (rgbColourRegex.IsMatch (colourString)) {  	Match rgbMatch = rgbColourRegex.Match (colourString);  	Int32.TryParse (rgbMatch.Groups [2].Value' out r);  	Int32.TryParse (rgbMatch.Groups [3].Value' out g);  	Int32.TryParse (rgbMatch.Groups [4].Value' out b);  }  else if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (rgbColourRegex.IsMatch (colourString)) {  	Match rgbMatch = rgbColourRegex.Match (colourString);  	Int32.TryParse (rgbMatch.Groups [2].Value' out r);  	Int32.TryParse (rgbMatch.Groups [3].Value' out g);  	Int32.TryParse (rgbMatch.Groups [4].Value' out b);  }  else if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (rgbColourRegex.IsMatch (colourString)) {  	Match rgbMatch = rgbColourRegex.Match (colourString);  	Int32.TryParse (rgbMatch.Groups [2].Value' out r);  	Int32.TryParse (rgbMatch.Groups [3].Value' out g);  	Int32.TryParse (rgbMatch.Groups [4].Value' out b);  }  else if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (rgbColourRegex.IsMatch (colourString)) {  	Match rgbMatch = rgbColourRegex.Match (colourString);  	Int32.TryParse (rgbMatch.Groups [2].Value' out r);  	Int32.TryParse (rgbMatch.Groups [3].Value' out g);  	Int32.TryParse (rgbMatch.Groups [4].Value' out b);  }  else if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (rgbColourRegex.IsMatch (colourString)) {  	Match rgbMatch = rgbColourRegex.Match (colourString);  	Int32.TryParse (rgbMatch.Groups [2].Value' out r);  	Int32.TryParse (rgbMatch.Groups [3].Value' out g);  	Int32.TryParse (rgbMatch.Groups [4].Value' out b);  }  else if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (rgbColourRegex.IsMatch (colourString)) {  	Match rgbMatch = rgbColourRegex.Match (colourString);  	Int32.TryParse (rgbMatch.Groups [2].Value' out r);  	Int32.TryParse (rgbMatch.Groups [3].Value' out g);  	Int32.TryParse (rgbMatch.Groups [4].Value' out b);  }  else if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (rgbColourRegex.IsMatch (colourString)) {  	Match rgbMatch = rgbColourRegex.Match (colourString);  	Int32.TryParse (rgbMatch.Groups [2].Value' out r);  	Int32.TryParse (rgbMatch.Groups [3].Value' out g);  	Int32.TryParse (rgbMatch.Groups [4].Value' out b);  }  else if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (rgbColourRegex.IsMatch (colourString)) {  	Match rgbMatch = rgbColourRegex.Match (colourString);  	Int32.TryParse (rgbMatch.Groups [2].Value' out r);  	Int32.TryParse (rgbMatch.Groups [3].Value' out g);  	Int32.TryParse (rgbMatch.Groups [4].Value' out b);  }  else if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (rgbColourRegex.IsMatch (colourString)) {  	Match rgbMatch = rgbColourRegex.Match (colourString);  	Int32.TryParse (rgbMatch.Groups [2].Value' out r);  	Int32.TryParse (rgbMatch.Groups [3].Value' out g);  	Int32.TryParse (rgbMatch.Groups [4].Value' out b);  }  else if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (rgbColourRegex.IsMatch (colourString)) {  	Match rgbMatch = rgbColourRegex.Match (colourString);  	Int32.TryParse (rgbMatch.Groups [2].Value' out r);  	Int32.TryParse (rgbMatch.Groups [3].Value' out g);  	Int32.TryParse (rgbMatch.Groups [4].Value' out b);  }  else if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (rgbColourRegex.IsMatch (colourString)) {  	Match rgbMatch = rgbColourRegex.Match (colourString);  	Int32.TryParse (rgbMatch.Groups [2].Value' out r);  	Int32.TryParse (rgbMatch.Groups [3].Value' out g);  	Int32.TryParse (rgbMatch.Groups [4].Value' out b);  }  else if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (rgbColourRegex.IsMatch (colourString)) {  	Match rgbMatch = rgbColourRegex.Match (colourString);  	Int32.TryParse (rgbMatch.Groups [2].Value' out r);  	Int32.TryParse (rgbMatch.Groups [3].Value' out g);  	Int32.TryParse (rgbMatch.Groups [4].Value' out b);  }  else if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (rgbColourRegex.IsMatch (colourString)) {  	Match rgbMatch = rgbColourRegex.Match (colourString);  	Int32.TryParse (rgbMatch.Groups [2].Value' out r);  	Int32.TryParse (rgbMatch.Groups [3].Value' out g);  	Int32.TryParse (rgbMatch.Groups [4].Value' out b);  }  else if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (rgbColourRegex.IsMatch (colourString)) {  	Match rgbMatch = rgbColourRegex.Match (colourString);  	Int32.TryParse (rgbMatch.Groups [2].Value' out r);  	Int32.TryParse (rgbMatch.Groups [3].Value' out g);  	Int32.TryParse (rgbMatch.Groups [4].Value' out b);  }  else if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (rgbColourRegex.IsMatch (colourString)) {  	Match rgbMatch = rgbColourRegex.Match (colourString);  	Int32.TryParse (rgbMatch.Groups [2].Value' out r);  	Int32.TryParse (rgbMatch.Groups [3].Value' out g);  	Int32.TryParse (rgbMatch.Groups [4].Value' out b);  }  else if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: Int32.TryParse (rgbMatch.Groups [2].Value' out r);  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: Int32.TryParse (rgbMatch.Groups [3].Value' out g);  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: Int32.TryParse (rgbMatch.Groups [4].Value' out b);  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegex.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegex.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  }  else if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: r = Convert.ToInt32 (htmlMatch.Groups [1].Value' 16);  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: g = Convert.ToInt32 (htmlMatch.Groups [2].Value' 16);  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: b = Convert.ToInt32 (htmlMatch.Groups [3].Value' 16);  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: if (htmlColourRegexShort.IsMatch (colourString)) {  	Match htmlMatch = htmlColourRegexShort.Match (colourString);  	r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  	g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  	b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  }  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: r = Convert.ToInt32 (htmlMatch.Groups [1].Value + htmlMatch.Groups [1].Value' 16);  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: g = Convert.ToInt32 (htmlMatch.Groups [2].Value + htmlMatch.Groups [2].Value' 16);  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  
Magic Number,Wolfje.Plugins.Jist.stdlib,tshock,C:\repos\tylerjwatson_Jist\StdLib\tshock.cs,ParseColour,The following statement contains a magic number: b = Convert.ToInt32 (htmlMatch.Groups [3].Value + htmlMatch.Groups [3].Value' 16);  
Missing Default,Wolfje.Plugins.Jist.stdlib,stdhook,C:\repos\tylerjwatson_Jist\StdLib\stdhook.cs,RegisterHook,The following switch statement is missing a default case: switch (hookName.ToLower ()) {  case "on_chat":  case "chat":  	hookId = AddHook (new JistHook<ServerChatEventArgs> (this.engine' TerrariaApi.Server.ServerApi.Hooks.ServerChat' func));  	break;  case "on_join":  	hookId = AddHook (new JistHook<JoinEventArgs> (this.engine' TerrariaApi.Server.ServerApi.Hooks.ServerJoin' func));  	break;  case "on_leave":  	hookId = AddHook (new JistHook<LeaveEventArgs> (this.engine' TerrariaApi.Server.ServerApi.Hooks.ServerLeave' func));  	break;  }  
