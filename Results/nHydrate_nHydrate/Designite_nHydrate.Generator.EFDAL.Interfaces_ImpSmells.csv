Implementation smell,Namespace,Class,File,Method,Description
Long Method,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The method has 160 lines of code.
Complex Method,nHydrate.Generator.EFDAL.Interfaces.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Contexts\ContextGeneratedTemplate.cs,AppendTypeTableEnums,Cyclomatic complexity of the method is 8
Complex Method,nHydrate.Generator.EFDAL.Interfaces,ColumnExtension,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\HelperExtension.cs,EFCodeType,Cyclomatic complexity of the method is 29
Complex Method,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendProperties,Cyclomatic complexity of the method is 19
Complex Method,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,Cyclomatic complexity of the method is 20
Complex Method,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendedFieldEnum,Cyclomatic complexity of the method is 8
Complex Method,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendMetaDataProperties,Cyclomatic complexity of the method is 21
Long Statement,nHydrate.Generator.EFDAL.Generators.ActionTypes,ActionTypesGeneratedGenerator,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ActionTypes\ActionTypesGeneratedGenerator.cs,Generate,The length of the statement  "				var eventArgs = new ProjectItemGeneratedEventArgs(template.FileName' template.FileContent' ProjectName' fullParentName' this' true); " is 132.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators,AuditEntityGeneratedGenerator,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\AuditEntity\AuditEntityGeneratedGenerator.cs,Generate,The length of the statement  "				var eventArgs = new ProjectItemGeneratedEventArgs(template.FileName' template.FileContent' ProjectName' fullParentName' this' true); " is 132.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators,AuditEntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\AuditEntity\AuditEntityGeneratedTemplate.cs,AppendEntityClass,The length of the statement  "			sb.AppendLine("	[System.CodeDom.Compiler.GeneratedCode(\"nHydrateModelGenerator\"' \"" + _model.ModelToolVersion + "\")]"); " is 123.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators,AuditEntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\AuditEntity\AuditEntityGeneratedTemplate.cs,AppendEntityClass,The length of the statement  "			sb.AppendLine("	public partial interface I" + _currentTable.PascalName + "Audit : System.IComparable' System.IComparable<" + this.GetLocalNamespace() + ".Audit.I" + _currentTable.PascalName + "Audit>"); " is 202.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators,AuditEntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\AuditEntity\AuditEntityGeneratedTemplate.cs,AppendProperties,The length of the statement  "			//List<Table> tableList = new List<Table>(_currentTable.GetTableHierarchy().Where(x => x.AllowAuditTracking).Reverse()); " is 120.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators,AuditEntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\AuditEntity\AuditEntityGeneratedTemplate.cs,AppendProperties,The length of the statement  "					if (!(column.DataType == System.Data.SqlDbType.Text || column.DataType == System.Data.SqlDbType.NText || column.DataType == System.Data.SqlDbType.Image)) " is 153.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators,AuditEntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\AuditEntity\AuditEntityGeneratedTemplate.cs,AppendProperties,The length of the statement  "					sb.AppendLine("		/// The property that maps back to the database '" + (column.ParentTableRef.Object as Table).DatabaseName + "." + column.DatabaseName + "' field"); " is 164.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.ComplexTypes,ComplexTypesFuncGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ComplexTypes\ComplexTypesFuncGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "                    sb.AppendLine("		/// Field mapping for the image parameter '" + column.PascalName + "' property" + (column.PascalName != column.DatabaseName ? " (Database column: " + column.DatabaseName + ")" : string.Empty)); " is 210.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.ComplexTypes,ComplexTypesFuncGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ComplexTypes\ComplexTypesFuncGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "                    sb.AppendLine("		[System.ComponentModel.Description(\"Field mapping for the image parameter '" + column.PascalName + "' property\")]"); " is 135.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.ComplexTypes,ComplexTypesFuncGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ComplexTypes\ComplexTypesFuncGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "            sb.AppendLine("	/// Enumeration to define each property that maps to a database field for the '" + _item.PascalName + "' table."); " is 130.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.ComplexTypes,ComplexTypesFuncGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ComplexTypes\ComplexTypesFuncGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "                sb.AppendLine("		/// Field mapping for the '" + column.PascalName + "' property" + (column.PascalName != column.DatabaseName ? " (Database column: " + column.DatabaseName + ")" : string.Empty)); " is 194.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.ComplexTypes,ComplexTypesGeneratedGenerator,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ComplexTypes\ComplexTypesGeneratedGenerator.cs,Generate,The length of the statement  "				var eventArgs = new ProjectItemGeneratedEventArgs(template.FileName' template.FileContent' ProjectName' fullParentName' this' true); " is 132.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.ComplexTypes,ComplexTypesGeneratedGenerator,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ComplexTypes\ComplexTypesGeneratedGenerator.cs,Generate,The length of the statement  "				var eventArgs = new ProjectItemGeneratedEventArgs(template.FileName' template.FileContent' ProjectName' fullParentName' this' true); " is 132.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.ComplexTypes,ComplexTypesSPGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ComplexTypes\ComplexTypesSPGeneratedTemplate.cs,AppendEntityClass,The length of the statement  "            sb.AppendLine("	[System.CodeDom.Compiler.GeneratedCode(\"nHydrateModelGenerator\"' \"" + _model.ModelToolVersion + "\")]"); " is 123.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.ComplexTypes,ComplexTypesSPGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ComplexTypes\ComplexTypesSPGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "                    sb.AppendLine("		/// Field mapping for the image parameter '" + column.PascalName + "' property" + (column.PascalName != column.DatabaseName ? " (Database column: " + column.DatabaseName + ")" : string.Empty)); " is 210.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.ComplexTypes,ComplexTypesSPGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ComplexTypes\ComplexTypesSPGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "                    sb.AppendLine("		[System.ComponentModel.Description(\"Field mapping for the image parameter '" + column.PascalName + "' property\")]"); " is 135.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.ComplexTypes,ComplexTypesSPGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ComplexTypes\ComplexTypesSPGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "            sb.AppendLine("	/// Enumeration to define each property that maps to a database field for the '" + _item.PascalName + "' table."); " is 130.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.ComplexTypes,ComplexTypesSPGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ComplexTypes\ComplexTypesSPGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "                sb.AppendLine("		/// Field mapping for the '" + column.PascalName + "' property" + (column.PascalName != column.DatabaseName ? " (Database column: " + column.DatabaseName + ")" : string.Empty)); " is 194.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Contexts,ContextGeneratedGenerator,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Contexts\ContextGeneratedGenerator.cs,Generate,The length of the statement  "			var eventArgs = new ProjectItemGeneratedEventArgs(template.FileName' template.FileContent' ProjectName' fullParentName' this' true); " is 132.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Contexts\ContextGeneratedTemplate.cs,AppendContextClass,The length of the statement  "            sb.AppendLine("	[System.CodeDom.Compiler.GeneratedCode(\"nHydrateModelGenerator\"' \"" + _model.ModelToolVersion + "\")]"); " is 123.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Contexts\ContextGeneratedTemplate.cs,AppendContextClass,The length of the statement  "            foreach (var table in _model.Database.Tables.Where(x => x.Generated && !x.AssociativeTable && !x.Security.IsValid() && (x.TypedTable != Models.TypedTableConstants.EnumOnly)).OrderBy(x => x.PascalName)) " is 201.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Contexts\ContextGeneratedTemplate.cs,AppendContextClass,The length of the statement  "                    sb.AppendLine("		IQueryable<" + this.GetLocalNamespace() + ".Entity.I" + table.PascalName + "> " + table.PascalName + " { get ; }"); " is 132.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Contexts\ContextGeneratedTemplate.cs,AppendContextClass,The length of the statement  "                    sb.AppendLine("		IQueryable<" + this.GetLocalNamespace() + ".Entity.I" + table.PascalName + "> " + table.PascalName + " { get ; }"); " is 132.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Contexts\ContextGeneratedTemplate.cs,AppendContextClass,The length of the statement  "            foreach (var table in _model.Database.Tables.Where(x => x.Generated && !x.AssociativeTable && !x.Immutable && (x.TypedTable != Models.TypedTableConstants.EnumOnly)).OrderBy(x => x.PascalName)) // && !x.IsTypeTable " is 213.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Contexts\ContextGeneratedTemplate.cs,AppendContextClass,The length of the statement  "            foreach (var table in _model.Database.Tables.Where(x => x.Generated && !x.AssociativeTable && !x.Immutable && (x.TypedTable != Models.TypedTableConstants.EnumOnly)).OrderBy(x => x.PascalName)) // && !x.IsTypeTable " is 213.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Contexts\ContextGeneratedTemplate.cs,AppendTypeTableEnums,The length of the statement  "                foreach (var table in _model.Database.Tables.Where(x => x.Generated && x.TypedTable != TypedTableConstants.None).OrderBy(x => x.Name)) " is 134.
Long Statement,nHydrate.Generator.EFDAL.Interfaces,EFDALInterfaceProjectGenerator,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\EFDALInterfaceProjectGenerator.cs,OnAfterGenerate,The length of the statement  "                preBuildProperty.Value = "if not exist \"$(SolutionDir)bin\" mkdir \"$(SolutionDir)bin\"\r\nattrib -r \"$(SolutionDir)Bin\\*.*\""; " is 130.
Long Statement,nHydrate.Generator.EFDAL.Interfaces,RelationExtension,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\HelperExtension.cs,GetDatabaseFkName,The length of the statement  "			//string fkName = string.Format("FK_{0}{1}{2}"' relation.DatabaseRoleName' parentEntity.DatabaseName' childEntity.DatabaseName); " is 128.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedGenerator,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedGenerator.cs,Generate,The length of the statement  "                var eventArgs = new ProjectItemGeneratedEventArgs(template.FileName' template.FileContent' ProjectName' fullParentName' this' true); " is 132.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendEntityClass,The length of the statement  "            //var boInterface = "nHydrate.EFCore.DataAccess.IBusinessObject' nHydrate.EFCore.DataAccess.INHEntityObject' System.ComponentModel.IDataErrorInfo"; " is 147.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendEntityClass,The length of the statement  "            //if (_currentTable.Immutable) boInterface = "nHydrate.EFCore.DataAccess.IReadOnlyBusinessObject' nHydrate.EFCore.DataAccess.INHEntityObject' System.ComponentModel.IDataErrorInfo"; " is 180.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendEntityClass,The length of the statement  "            sb.AppendLine("	[System.CodeDom.Compiler.GeneratedCode(\"nHydrateModelGenerator\"' \"" + _model.ModelToolVersion + "\")]"); " is 123.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendEntityClass,The length of the statement  "            //  sb.Append("	public partial interface I" + _currentTable.PascalName + " : " + this.GetLocalNamespace() + ".Entity.I" + _currentTable.ParentTable.PascalName + "' " + boInterface); " is 181.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendProperties,The length of the statement  "                //    sb.AppendLine("		/// The property that maps back to the database '" + (column.ParentTableRef.Object as Table).DatabaseName + "." + column.DatabaseName + "' field"); " is 170.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendProperties,The length of the statement  "                            sb.AppendLine("		" + GetLocalNamespace() + "." + typeTable.PascalName + "Constants" + nullSuffix + " " + pascalRoleName + typeTable.PascalName + "Value { get; set; }"); " is 168.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendProperties,The length of the statement  "                        sb.AppendLine("		/// The property that maps back to the database '" + (column.ParentTableRef.Object as Table).DatabaseName + "." + column.DatabaseName + "' field"); " is 164.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendProperties,The length of the statement  "                        sb.AppendLine("		[System.ComponentModel.Description(\"" + StringHelper.ConvertTextToSingleLineCodeString(column.Description) + "\")]"); " is 135.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendProperties,The length of the statement  "                        sb.AppendLine("		[System.ComponentModel.DataAnnotations.DataType(System.ComponentModel.DataAnnotations.DataType." + column.UIDataType.ToString() + ")]"); " is 153.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendProperties,The length of the statement  "                        sb.AppendLine("		[System.ComponentModel.DataAnnotations.DisplayFormat(DataFormatString = @\"" + column.Mask.Replace(@"\\"' @"\\\\") + "\")]"); " is 142.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendProperties,The length of the statement  "                if (_currentTable.AllowCreateAudit) GenerateAuditField(_model.Database.CreatedByPascalName' "string"' "The audit field for the 'Created By' column."' false); " is 157.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendProperties,The length of the statement  "                if (_currentTable.AllowCreateAudit) GenerateAuditField(_model.Database.CreatedDatePascalName' "DateTime?"' "The audit field for the 'Created Date' column."' false); " is 164.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendProperties,The length of the statement  "                if (_currentTable.AllowModifiedAudit) GenerateAuditField(_model.Database.ModifiedByPascalName' "string"' "The audit field for the 'Modified By' column."' false); " is 161.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendProperties,The length of the statement  "                if (_currentTable.AllowModifiedAudit) GenerateAuditField(_model.Database.ModifiedDatePascalName' "DateTime?"' "The audit field for the 'Modified Date' column."' false); " is 168.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The length of the statement  "                    sb.AppendLine("		/// The navigation definition for walking " + parentTable.PascalName + "->" + childTable.PascalName + (string.IsNullOrEmpty(relation.PascalRoleName) ? string.Empty : " (for role '" + relation.PascalRoleName + "')")); " is 233.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The length of the statement  "                    sb.AppendLine("		" + GetLocalNamespace() + ".Entity." + "I" + childTable.PascalName + " " + relation.PascalRoleName + childTable.PascalName + " { get; " + (relation.AreAllFieldsPK ? "set;" : "") + " }"); " is 203.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The length of the statement  "                            sb.AppendLine("		/// The back navigation definition for walking " + _currentTable.PascalName + "->" + otherRelation.PascalRoleName + targetTable.PascalName); " is 157.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The length of the statement  "                            sb.AppendLine("		/// <remarks>Associative relation: " + _currentTable.PascalName + "=>" + childTable.PascalName + "=>" + targetTable.PascalName + "</remarks>"); " is 160.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The length of the statement  "                            sb.AppendLine("		ICollection<" + this.GetLocalNamespace() + ".Entity.I" + targetTable.PascalName + "> " + otherRelation.PascalRoleName + targetTable.PascalName + "List { get; }"); " is 179.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The length of the statement  "                        sb.AppendLine("		/// The back navigation definition for walking " + parentTable.PascalName + "->" + childTable.PascalName); " is 123.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The length of the statement  "                        //sb.AppendLine("		[EdmRelationshipNavigationProperty(\"" + this.GetLocalNamespace() + ".Entity" + "\"' \"FK_" + relation.PascalRoleName + "_" + childTable.PascalName + "_" + _currentTable.PascalName + "\"' \"" + relation.PascalRoleName + childTable.PascalName + "\")]"); " is 271.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The length of the statement  "                        sb.AppendLine("		" + this.GetLocalNamespace() + ".Entity.I" + childTable.PascalName + " " + relation.PascalRoleName + childTable.PascalName + " { get; set; }"); " is 160.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The length of the statement  "                        sb.AppendLine("		/// The back navigation definition for walking " + parentTable.PascalName + "->" + childTable.PascalName); " is 123.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The length of the statement  "                        //sb.AppendLine("		[EdmRelationshipNavigationProperty(\"" + this.GetLocalNamespace() + ".Entity" + "\"' \"FK_" + relation.PascalRoleName + "_" + childTable.PascalName + "_" + _currentTable.PascalName + "\"' \"" + relation.PascalRoleName + childTable.PascalName + "List\")]"); " is 275.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The length of the statement  "                        sb.AppendLine("		ICollection<" + this.GetLocalNamespace() + ".Entity.I" + childTable.PascalName + "> " + relation.PascalRoleName + childTable.PascalName + "List { get; }"); " is 172.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The length of the statement  "                else if (childTable == _currentTable && parentTable.Generated && childTable.Generated && !parentTable.IsInheritedFrom(_currentTable)) " is 133.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The length of the statement  "                    sb.AppendLine("		/// The navigation definition for walking " + childTable.PascalName + "->" + parentTable.PascalName + (string.IsNullOrEmpty(relation.PascalRoleName) ? "" : " (for role '" + relation.PascalRoleName + "')")); " is 223.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The length of the statement  "                    sb.AppendLine("		" + this.GetLocalNamespace() + ".Entity.I" + parentTable.PascalName + " " + relation.PascalRoleName + parentTable.PascalName + " { get; set; }"); " is 162.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The length of the statement  "                    sb.AppendLine("		/// The back navigation definition for walking " + parentTable.PascalName + "->" + childTable.PascalName); " is 123.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The length of the statement  "                    //sb.AppendLine("		[EdmRelationshipNavigationProperty(\"" + this.GetLocalNamespace() + ".Entity" + "\"' \"FK_" + relation.PascalRoleName + "_" + childTable.PascalName + "_" + _currentTable.PascalName + "\"' \"" + relation.PascalRoleName + childTable.PascalName + "List\")]"); " is 275.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The length of the statement  "                    sb.AppendLine("		ICollection<" + this.GetLocalNamespace() + ".Entity.I" + childTable.PascalName + "> " + relation.PascalRoleName + childTable.PascalName + "List { get; }"); " is 172.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "                    sb.AppendLine("		/// Field mapping for the image parameter '" + column.PascalName + "' property" + (column.PascalName != column.DatabaseName ? " (Database column: " + column.DatabaseName + ")" : string.Empty)); " is 210.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "                    sb.AppendLine("		[System.ComponentModel.Description(\"Field mapping for the image parameter '" + column.PascalName + "' property\")]"); " is 135.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "            sb.AppendLine("	/// Enumeration to define each property that maps to a database field for the '" + _currentTable.PascalName + "' table."); " is 138.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "                sb.AppendLine("		/// Field mapping for the '" + column.PascalName + "' property" + (column.PascalName != column.DatabaseName ? " (Database column: " + column.DatabaseName + ")" : string.Empty)); " is 194.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "                sb.AppendLine("		[System.ComponentModel.Description(\"Field mapping for the '" + _model.Database.CreatedByPascalName + "' property\")]"); " is 137.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "                sb.AppendLine("		[System.ComponentModel.Description(\"Field mapping for the '" + _model.Database.CreatedDatePascalName + "' property\")]"); " is 139.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "                sb.AppendLine("		[System.ComponentModel.Description(\"Field mapping for the '" + _model.Database.ModifiedByPascalName + "' property\")]"); " is 138.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "                sb.AppendLine("		[System.ComponentModel.Description(\"Field mapping for the '" + _model.Database.ModifiedDatePascalName + "' property\")]"); " is 140.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendMetaData,The length of the statement  "            sb.AppendLine("	[System.CodeDom.Compiler.GeneratedCode(\"nHydrateModelGenerator\"' \"" + _model.ModelToolVersion + "\")]"); " is 123.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendMetaDataProperties,The length of the statement  "                    sb.AppendLine("		[System.ComponentModel.DataAnnotations.Required(ErrorMessage = \"'" + column.GetFriendlyName() + "' is required.\"' AllowEmptyStrings = true)]"); " is 162.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendMetaDataProperties,The length of the statement  "                    sb.AppendLine("		[System.ComponentModel.DataAnnotations.RegularExpression(@\"" + column.ValidationExpression.Replace("\""' "\"\"") + "\")]"); " is 141.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendMetaDataProperties,The length of the statement  "                        sb.AppendLine("		[System.ComponentModel.DataAnnotations.StringLength(" + l + "' ErrorMessage = \"The property '" + column.GetFriendlyName() + "' has a maximum length of " + l + "\")]"); " is 185.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendMetaDataProperties,The length of the statement  "                    sb.AppendLine("		[System.ComponentModel.DataAnnotations.DisplayFormat(DataFormatString = @\"" + column.Mask.Replace(@"\\"' @"\\\\") + "\")]"); " is 142.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendMetaDataProperties,The length of the statement  "                sb.Append("		[System.ComponentModel.DataAnnotations.Display(Description = \"" + StringHelper.ConvertTextToSingleLineCodeString(column.Description) + "\"' Name = \"" + column.GetFriendlyName() + "\"' AutoGenerateField = true"); " is 226.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendMetaDataAuditFieldString,The length of the statement  "            sb.AppendLine("		[System.ComponentModel.DataAnnotations.StringLength(100' ErrorMessage = \"The property '" + fieldName + "' has a maximum length of 100\")]"); " is 158.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.ViewEntity,ViewEntityGeneratedGenerator,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ViewEntity\ViewEntityGeneratedGenerator.cs,Generate,The length of the statement  "				var eventArgs = new ProjectItemGeneratedEventArgs(template.FileName' template.FileContent' ProjectName' fullParentName' this' true); " is 132.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.ViewEntity,ViewEntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ViewEntity\ViewEntityGeneratedTemplate.cs,AppendEntityClass,The length of the statement  "            sb.AppendLine("	[System.CodeDom.Compiler.GeneratedCode(\"nHydrateModelGenerator\"' \"" + _model.ModelToolVersion + "\")]"); " is 123.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.ViewEntity,ViewEntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ViewEntity\ViewEntityGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "                    sb.AppendLine("		/// Field mapping for the image parameter '" + column.PascalName + "' property" + (column.PascalName != column.DatabaseName ? " (Database column: " + column.DatabaseName + ")" : string.Empty)); " is 210.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.ViewEntity,ViewEntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ViewEntity\ViewEntityGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "                    sb.AppendLine("		[System.ComponentModel.Description(\"Field mapping for the image parameter '" + column.PascalName + "' property\")]"); " is 135.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.ViewEntity,ViewEntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ViewEntity\ViewEntityGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "            sb.AppendLine("	/// Enumeration to define each property that maps to a database field for the '" + _item.PascalName + "' table."); " is 130.
Long Statement,nHydrate.Generator.EFDAL.Interfaces.Generators.ViewEntity,ViewEntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\ViewEntity\ViewEntityGeneratedTemplate.cs,AppendedFieldEnum,The length of the statement  "                sb.AppendLine("		/// Field mapping for the '" + column.PascalName + "' property" + (column.PascalName != column.DatabaseName ? " (Database column: " + column.DatabaseName + ")" : string.Empty)); " is 194.
Complex Conditional,nHydrate.Generator.EFDAL.Interfaces,ColumnExtension,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\HelperExtension.cs,EFGetDatabaseMaxLengthString,The conditional expression  "column.DataType == System.Data.SqlDbType.Binary ||  				column.DataType == System.Data.SqlDbType.Char ||  				column.DataType == System.Data.SqlDbType.NChar ||  				column.DataType == System.Data.SqlDbType.NVarChar ||  				column.DataType == System.Data.SqlDbType.VarBinary ||  				column.DataType == System.Data.SqlDbType.VarChar"  is complex.
Complex Conditional,nHydrate.Generator.EFDAL.Interfaces,ColumnExtension,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\HelperExtension.cs,EFGetCodeMaxLengthString,The conditional expression  "column.DataType == System.Data.SqlDbType.Binary ||  				column.DataType == System.Data.SqlDbType.Char ||  				column.DataType == System.Data.SqlDbType.NChar ||  				column.DataType == System.Data.SqlDbType.NVarChar ||  				column.DataType == System.Data.SqlDbType.Timestamp ||  				column.DataType == System.Data.SqlDbType.VarBinary ||  				column.DataType == System.Data.SqlDbType.VarChar ||  				column.DataType == System.Data.SqlDbType.Xml"  is complex.
Complex Conditional,nHydrate.Generator.EFDAL.Interfaces,ColumnExtension,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\HelperExtension.cs,EFUnicode,The conditional expression  "column.DataType == System.Data.SqlDbType.NChar ||  				column.DataType == System.Data.SqlDbType.NText ||  				column.DataType == System.Data.SqlDbType.NVarChar ||  				column.DataType == System.Data.SqlDbType.Xml"  is complex.
Complex Conditional,nHydrate.Generator.EFDAL.Interfaces,ColumnExtension,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\HelperExtension.cs,EFIsFixedLength,The conditional expression  "column.DataType == System.Data.SqlDbType.Binary ||  				column.DataType == System.Data.SqlDbType.Char ||  				column.DataType == System.Data.SqlDbType.NChar ||  				column.DataType == System.Data.SqlDbType.Timestamp"  is complex.
Complex Conditional,nHydrate.Generator.EFDAL.Interfaces,ColumnExtension,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\HelperExtension.cs,EFIsFixedLength,The conditional expression  "column.DataType == System.Data.SqlDbType.Image ||  				column.DataType == System.Data.SqlDbType.NText ||  				column.DataType == System.Data.SqlDbType.NVarChar ||  				column.DataType == System.Data.SqlDbType.Text ||  				column.DataType == System.Data.SqlDbType.VarBinary ||  				column.DataType == System.Data.SqlDbType.VarChar ||  				column.DataType == System.Data.SqlDbType.Xml"  is complex.
Complex Conditional,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendProperties,The conditional expression  "column.PrimaryKey || _currentTable.Immutable || column.ComputedColumn || column.IsReadOnly"  is complex.
Complex Conditional,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The conditional expression  "parentTable == _currentTable && parentTable.Generated && childTable.Generated && !childTable.AssociativeTable"  is complex.
Complex Conditional,nHydrate.Generator.EFDAL.Interfaces.Generators.Entity,EntityGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Interfaces\Generators\Entity\EntityGeneratedTemplate.cs,AppendNavigationProperties,The conditional expression  "childTable == _currentTable && parentTable.Generated && childTable.Generated && !parentTable.IsInheritedFrom(_currentTable)"  is complex.
