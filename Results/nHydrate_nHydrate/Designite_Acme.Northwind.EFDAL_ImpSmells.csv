Implementation smell,Namespace,Class,File,Method,Description
Long Method,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,RemapParentChild,The method has 168 lines of code.
Long Method,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The method has 168 lines of code.
Long Method,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The method has 107 lines of code.
Long Method,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,SetValue,The method has 116 lines of code.
Complex Method,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,RemapParentChild,Cyclomatic complexity of the method is 39
Complex Method,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,Cyclomatic complexity of the method is 23
Complex Method,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetEntityFromField,Cyclomatic complexity of the method is 14
Complex Method,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetFieldType,Cyclomatic complexity of the method is 14
Complex Method,Acme.Northwind.EFDAL.Entity,Alphabeticallistofproducts,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Alphabeticallistofproducts.cs,GetValue,Cyclomatic complexity of the method is 12
Complex Method,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetValue,Cyclomatic complexity of the method is 9
Complex Method,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetValue,Cyclomatic complexity of the method is 16
Complex Method,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetValue,Cyclomatic complexity of the method is 23
Complex Method,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetValue,Cyclomatic complexity of the method is 27
Complex Method,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetValue,Cyclomatic complexity of the method is 19
Complex Method,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetValue,Cyclomatic complexity of the method is 10
Complex Method,Acme.Northwind.EFDAL.Entity,OrderDetailsExtended,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetailsExtended.cs,GetValue,Cyclomatic complexity of the method is 8
Complex Method,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetValue,Cyclomatic complexity of the method is 21
Complex Method,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetValue,Cyclomatic complexity of the method is 15
Complex Method,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetValue,Cyclomatic complexity of the method is 8
Complex Method,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetValue,Cyclomatic complexity of the method is 17
Complex Method,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetValue,Cyclomatic complexity of the method is 8
Long Parameter List,Acme.Northwind.EFDAL,BusinessObjectQuery<T;K;P>,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetSum,The method has 6 parameters. Parameters: select' where' optimizer' leafTable' getField' objectType
Long Parameter List,Acme.Northwind.EFDAL,BusinessObjectQuery<T;K;P>,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetDistinct,The method has 6 parameters. Parameters: select' where' optimizer' leafTable' getField' objectType
Long Parameter List,Acme.Northwind.EFDAL,BusinessObjectQuery<T;K;P>,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetMin,The method has 6 parameters. Parameters: select' where' optimizer' leafTable' getField' objectType
Long Parameter List,Acme.Northwind.EFDAL,BusinessObjectQuery<T;K;P>,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetMax,The method has 6 parameters. Parameters: select' where' optimizer' leafTable' getField' objectType
Long Parameter List,Acme.Northwind.EFDAL,BusinessObjectQuery<T;K;P>,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetAverage,The method has 6 parameters. Parameters: select' where' optimizer' leafTable' getField' objectType
Long Parameter List,Acme.Northwind.EFDAL,BusinessObjectQuery<T;K;P>,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,UpdateData,The method has 6 parameters. Parameters: select' where' newValue' leafTable' getField' hasModifyAudit
Long Parameter List,Acme.Northwind.EFDAL,BusinessObjectQuery<T;K;P>,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,UpdateData,The method has 7 parameters. Parameters: select' where' newValue' leafTable' getField' hasModifyAudit' connectionString
Long Parameter List,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SelectExtendedProperty,The method has 5 parameters. Parameters: connectionString' property' user' table' parameter
Long Parameter List,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The method has 5 parameters. Parameters: item' where' orderBy' orderAscending' paging
Long Parameter List,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The method has 5 parameters. Parameters: item' where' orderBy' orderAscending' paging
Long Parameter List,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The method has 5 parameters. Parameters: item' where' orderBy' orderAscending' paging
Long Parameter List,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The method has 5 parameters. Parameters: item' where' orderBy' orderAscending' paging
Long Parameter List,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The method has 5 parameters. Parameters: item' where' orderBy' orderAscending' paging
Long Parameter List,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The method has 5 parameters. Parameters: item' where' orderBy' orderAscending' paging
Long Parameter List,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The method has 5 parameters. Parameters: item' where' orderBy' orderAscending' paging
Long Parameter List,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The method has 5 parameters. Parameters: item' where' orderBy' orderAscending' paging
Long Parameter List,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The method has 5 parameters. Parameters: item' where' orderBy' orderAscending' paging
Long Parameter List,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The method has 5 parameters. Parameters: item' where' orderBy' orderAscending' paging
Long Parameter List,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The method has 5 parameters. Parameters: item' where' orderBy' orderAscending' paging
Long Parameter List,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The method has 5 parameters. Parameters: item' where' orderBy' orderAscending' paging
Long Parameter List,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The method has 5 parameters. Parameters: item' where' orderBy' orderAscending' paging
Long Identifier,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,,The length of the parameter _lockeralphabeticallistofproducts is 33.
Long Identifier,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,,The length of the parameter _lockercustomerandsuppliersbycity is 33.
Long Identifier,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,,The length of the parameter _lockerproductsaboveaverageprice is 32.
Long Identifier,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,,The length of the parameter _lockersummaryofsalesbyquarter is 30.
Long Statement,Acme.Northwind.EFDAL,Util,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Globals.Generated.cs,ConvertNormalCS2EF,The length of the statement  "				return @"metadata=res://*/Acme.Northwind.EFDAL.Northwind.MySql.csdl|res://*/Acme.Northwind.EFDAL.Northwind.MySql.ssdl|res://*/Acme.Northwind.EFDAL.Northwind.msl;provider=MySql.Data.MySqlClient;provider connection string='" + connectionString + "'"; " is 248.
Long Statement,Acme.Northwind.EFDAL,Util,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Globals.Generated.cs,ConvertNormalCS2EF,The length of the statement  "				return @"metadata=res://*/Acme.Northwind.EFDAL.Northwind.csdl|res://*/Acme.Northwind.EFDAL.Northwind.ssdl|res://*/Acme.Northwind.EFDAL.Northwind.msl;provider=System.Data.SqlClient;provider connection string='" + connectionString + "'"; " is 235.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,RemapParentChild,The length of the statement  "					if (clause.TableName == "Categories") realTable = Acme.Northwind.EFDAL.Entity.Category.GetTableFromFieldAliasSqlMapping(field.Alias); " is 133.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,RemapParentChild,The length of the statement  "					else if (clause.TableName == "CustomerCustomerDemo") realTable = Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.GetTableFromFieldAliasSqlMapping(field.Alias); " is 160.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,RemapParentChild,The length of the statement  "					else if (clause.TableName == "CustomerDemographics") realTable = Acme.Northwind.EFDAL.Entity.CustomerDemographic.GetTableFromFieldAliasSqlMapping(field.Alias); " is 159.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,RemapParentChild,The length of the statement  "					else if (clause.TableName == "Customers") realTable = Acme.Northwind.EFDAL.Entity.Customer.GetTableFromFieldAliasSqlMapping(field.Alias); " is 137.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,RemapParentChild,The length of the statement  "					else if (clause.TableName == "Employees") realTable = Acme.Northwind.EFDAL.Entity.Employee.GetTableFromFieldAliasSqlMapping(field.Alias); " is 137.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,RemapParentChild,The length of the statement  "					else if (clause.TableName == "EmployeeTerritories") realTable = Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.GetTableFromFieldAliasSqlMapping(field.Alias); " is 157.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,RemapParentChild,The length of the statement  "					else if (clause.TableName == "Order Details") realTable = Acme.Northwind.EFDAL.Entity.OrderDetail.GetTableFromFieldAliasSqlMapping(field.Alias); " is 144.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,RemapParentChild,The length of the statement  "					else if (clause.TableName == "Orders") realTable = Acme.Northwind.EFDAL.Entity.Order.GetTableFromFieldAliasSqlMapping(field.Alias); " is 131.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,RemapParentChild,The length of the statement  "					else if (clause.TableName == "Products") realTable = Acme.Northwind.EFDAL.Entity.Product.GetTableFromFieldAliasSqlMapping(field.Alias); " is 135.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,RemapParentChild,The length of the statement  "					else if (clause.TableName == "Region") realTable = Acme.Northwind.EFDAL.Entity.Region.GetTableFromFieldAliasSqlMapping(field.Alias); " is 132.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,RemapParentChild,The length of the statement  "					else if (clause.TableName == "Shippers") realTable = Acme.Northwind.EFDAL.Entity.Shipper.GetTableFromFieldAliasSqlMapping(field.Alias); " is 135.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,RemapParentChild,The length of the statement  "					else if (clause.TableName == "Suppliers") realTable = Acme.Northwind.EFDAL.Entity.Supplier.GetTableFromFieldAliasSqlMapping(field.Alias); " is 137.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,RemapParentChild,The length of the statement  "					else if (clause.TableName == "Territories") realTable = Acme.Northwind.EFDAL.Entity.Territory.GetTableFromFieldAliasSqlMapping(field.Alias); " is 140.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,GetRemappedLinqSql,The length of the statement  "					case "Categories": return Acme.Northwind.EFDAL.Entity.Category.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList); " is 126.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,GetRemappedLinqSql,The length of the statement  "					case "CustomerCustomerDemo": return Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList); " is 148.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,GetRemappedLinqSql,The length of the statement  "					case "CustomerDemographics": return Acme.Northwind.EFDAL.Entity.CustomerDemographic.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList); " is 147.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,GetRemappedLinqSql,The length of the statement  "					case "Customers": return Acme.Northwind.EFDAL.Entity.Customer.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList); " is 125.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,GetRemappedLinqSql,The length of the statement  "					case "Employees": return Acme.Northwind.EFDAL.Entity.Employee.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList); " is 125.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,GetRemappedLinqSql,The length of the statement  "					case "EmployeeTerritories": return Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList); " is 145.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,GetRemappedLinqSql,The length of the statement  "					case "Order Details": return Acme.Northwind.EFDAL.Entity.OrderDetail.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList); " is 132.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,GetRemappedLinqSql,The length of the statement  "					case "Products": return Acme.Northwind.EFDAL.Entity.Product.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList); " is 123.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,GetRemappedLinqSql,The length of the statement  "					case "Region": return Acme.Northwind.EFDAL.Entity.Region.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList); " is 120.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,GetRemappedLinqSql,The length of the statement  "					case "Shippers": return Acme.Northwind.EFDAL.Entity.Shipper.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList); " is 123.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,GetRemappedLinqSql,The length of the statement  "					case "Suppliers": return Acme.Northwind.EFDAL.Entity.Supplier.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList); " is 125.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,GetRemappedLinqSql,The length of the statement  "					case "Territories": return Acme.Northwind.EFDAL.Entity.Territory.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList); " is 128.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,ParseSelect,The length of the statement  "					LinqSQLFromClause clause = _fromLinkList.FirstOrDefault(x => x.Alias == table.Replace("["' string.Empty).Replace("]"' string.Empty)); " is 133.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,ParseSelect,The length of the statement  "						case "CustomerCustomerDemo": alias = Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.GetFieldAliasFromFieldNameSqlMapping(field); break; " is 137.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,ParseSelect,The length of the statement  "						case "CustomerDemographics": alias = Acme.Northwind.EFDAL.Entity.CustomerDemographic.GetFieldAliasFromFieldNameSqlMapping(field); break; " is 136.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,ParseSelect,The length of the statement  "						case "EmployeeTerritories": alias = Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.GetFieldAliasFromFieldNameSqlMapping(field); break; " is 134.
Long Statement,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,ParseSelect,The length of the statement  "						case "Order Details": alias = Acme.Northwind.EFDAL.Entity.OrderDetail.GetFieldAliasFromFieldNameSqlMapping(field); break; " is 121.
Long Statement,Acme.Northwind.EFDAL,LinqSQLFromClauseCollection,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,RemapFromClause,The length of the statement  "						fromClause.LinkClause = fromClause.LinkClause.Replace("[" + parentAlias + "]." + field2' "[" + chlidAlias + "]." + field2); " is 123.
Long Statement,Acme.Northwind.EFDAL,LinqSQLFromClauseCollection,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,RemapFromClause,The length of the statement  "						fromClause.LinkClause = fromClause.LinkClause.Replace("[" + parentAlias + "]." + field2' "[" + chlidAlias + "]." + field2); " is 123.
Long Statement,Acme.Northwind.EFDAL,LinqSQLFromClauseCollection,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetRealTableName,The length of the statement  "			if (parentTable == "Categories") realTable = Acme.Northwind.EFDAL.Entity.Category.GetTableFromFieldNameSqlMapping(field); " is 121.
Long Statement,Acme.Northwind.EFDAL,LinqSQLFromClauseCollection,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetRealTableName,The length of the statement  "			else if (parentTable == "CustomerCustomerDemo") realTable = Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.GetTableFromFieldNameSqlMapping(field); " is 148.
Long Statement,Acme.Northwind.EFDAL,LinqSQLFromClauseCollection,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetRealTableName,The length of the statement  "			else if (parentTable == "CustomerDemographics") realTable = Acme.Northwind.EFDAL.Entity.CustomerDemographic.GetTableFromFieldNameSqlMapping(field); " is 147.
Long Statement,Acme.Northwind.EFDAL,LinqSQLFromClauseCollection,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetRealTableName,The length of the statement  "			else if (parentTable == "Customers") realTable = Acme.Northwind.EFDAL.Entity.Customer.GetTableFromFieldNameSqlMapping(field); " is 125.
Long Statement,Acme.Northwind.EFDAL,LinqSQLFromClauseCollection,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetRealTableName,The length of the statement  "			else if (parentTable == "Employees") realTable = Acme.Northwind.EFDAL.Entity.Employee.GetTableFromFieldNameSqlMapping(field); " is 125.
Long Statement,Acme.Northwind.EFDAL,LinqSQLFromClauseCollection,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetRealTableName,The length of the statement  "			else if (parentTable == "EmployeeTerritories") realTable = Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.GetTableFromFieldNameSqlMapping(field); " is 145.
Long Statement,Acme.Northwind.EFDAL,LinqSQLFromClauseCollection,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetRealTableName,The length of the statement  "			else if (parentTable == "Order Details") realTable = Acme.Northwind.EFDAL.Entity.OrderDetail.GetTableFromFieldNameSqlMapping(field); " is 132.
Long Statement,Acme.Northwind.EFDAL,LinqSQLFromClauseCollection,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetRealTableName,The length of the statement  "			else if (parentTable == "Products") realTable = Acme.Northwind.EFDAL.Entity.Product.GetTableFromFieldNameSqlMapping(field); " is 123.
Long Statement,Acme.Northwind.EFDAL,LinqSQLFromClauseCollection,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetRealTableName,The length of the statement  "			else if (parentTable == "Region") realTable = Acme.Northwind.EFDAL.Entity.Region.GetTableFromFieldNameSqlMapping(field); " is 120.
Long Statement,Acme.Northwind.EFDAL,LinqSQLFromClauseCollection,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetRealTableName,The length of the statement  "			else if (parentTable == "Shippers") realTable = Acme.Northwind.EFDAL.Entity.Shipper.GetTableFromFieldNameSqlMapping(field); " is 123.
Long Statement,Acme.Northwind.EFDAL,LinqSQLFromClauseCollection,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetRealTableName,The length of the statement  "			else if (parentTable == "Suppliers") realTable = Acme.Northwind.EFDAL.Entity.Supplier.GetTableFromFieldNameSqlMapping(field); " is 125.
Long Statement,Acme.Northwind.EFDAL,LinqSQLFromClauseCollection,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetRealTableName,The length of the statement  "			else if (parentTable == "Territories") realTable = Acme.Northwind.EFDAL.Entity.Territory.GetTableFromFieldNameSqlMapping(field); " is 128.
Long Statement,Acme.Northwind.EFDAL,BusinessObjectQuery<T;K;P>,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,GetDistinct,The length of the statement  "			cmd.CommandText = "SELECT DISTINCT([" + parser.GetTableAlias(fieldName' leafTable) + "]." + fieldName + ") " + parser.GetFromClause(optimizer) + " " + parser.GetWhereClause() + string.Empty; " is 190.
Long Statement,Acme.Northwind.EFDAL,BusinessObjectQuery<T;K;P>,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,UpdateData,The length of the statement  "			if (hasModifyAudit && (fieldName != "ModifiedBy")) sql += "' [" + parser.GetTableAlias(fieldName' leafTable) + "].[ModifiedBy] = NULL\r\n"; " is 139.
Long Statement,Acme.Northwind.EFDAL,BusinessObjectQuery<T;K;P>,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,UpdateData,The length of the statement  "			if (hasModifyAudit && (fieldName != "ModifiedDate")) sql += "' [" + parser.GetTableAlias(fieldName' leafTable) + "].[ModifiedDate] = getdate()\r\n"; " is 148.
Long Statement,Acme.Northwind.EFDAL,BusinessObjectQuery<T;K;P>,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,UpdateData,The length of the statement  "			var dc = new DataContext(Acme.Northwind.EFDAL.DBHelper.GetConnection(Acme.Northwind.EFDAL.Util.StripEFCS2Normal(connectionString))); " is 132.
Long Statement,Acme.Northwind.EFDAL,BusinessObjectQuery<T;K;P>,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,UpdateData,The length of the statement  "			if (hasModifyAudit && (fieldName != "ModifiedBy")) sql += "' [" + parser.GetTableAlias(fieldName' leafTable) + "].[ModifiedBy] = NULL\r\n"; " is 139.
Long Statement,Acme.Northwind.EFDAL,BusinessObjectQuery<T;K;P>,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,UpdateData,The length of the statement  "			if (hasModifyAudit && (fieldName != "ModifiedDate")) sql += "' [" + parser.GetTableAlias(fieldName' leafTable) + "].[ModifiedDate] = getdate()\r\n"; " is 148.
Long Statement,Acme.Northwind.EFDAL,GlobalValues,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,PropertyGetterLambdaErrorHandler,The length of the statement  "			catch (System.Data.DBConcurrencyException dbcex) { throw new ConcurrencyException(GlobalValues.ERROR_CONCURRENCY_FAILURE' dbcex); } " is 131.
Long Statement,Acme.Northwind.EFDAL,GlobalValues,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,PropertyGetterLambdaErrorHandler,The length of the statement  "			catch (System.Data.SqlClient.SqlException sqlexp) { if (sqlexp.Number == 547 || sqlexp.Number == 2627) throw new UniqueConstraintViolatedException(GlobalValues.ERROR_CONSTRAINT_FAILURE' sqlexp); else throw; } " is 208.
Long Statement,Acme.Northwind.EFDAL,GlobalValues,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,PropertySetterLambdaErrorHandler,The length of the statement  "			catch (System.Data.DBConcurrencyException dbcex) { throw new ConcurrencyException(GlobalValues.ERROR_CONCURRENCY_FAILURE' dbcex); } " is 131.
Long Statement,Acme.Northwind.EFDAL,GlobalValues,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,PropertySetterLambdaErrorHandler,The length of the statement  "			catch (System.Data.SqlClient.SqlException sqlexp) { if (sqlexp.Number == 547 || sqlexp.Number == 2627) throw new UniqueConstraintViolatedException(GlobalValues.ERROR_CONSTRAINT_FAILURE' sqlexp); else throw; } " is 208.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,CategorizedSales,The length of the statement  "			var retval = base.ExecuteFunction<CategorizedSales>("SalesByCategory"' categorynameParameter' ordyearParameter).ToList(); " is 121.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,EmployeeSalesbyCountry,The length of the statement  "			var retval = base.ExecuteFunction<EmployeeSalesbyCountry>("Employee Sales by Country"' beginningDateParameter' endingDateParameter).ToList(); " is 141.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SelectExtendedProperty,The length of the statement  "				cmdGetExtProp.CommandText = String.Format("SELECT value FROM ::fn_listextendedproperty({0}' {1}' {2}' {3}' {4}' {5}' {6})"' new object[] { property' userName' userValue' tableName' tableValue' columnName' columnValue }); " is 220.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer); " is 143.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer); " is 148.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer); " is 172.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer); " is 170.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer); " is 148.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer); " is 168.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer); " is 142.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer); " is 154.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer); " is 146.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer); " is 144.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer); " is 146.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer); " is 148.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer); " is 150.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime; " is 124.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime; " is 129.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime; " is 153.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime; " is 151.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime; " is 129.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime; " is 149.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime; " is 123.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime; " is 135.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime; " is 127.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime; " is 125.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime; " is 127.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime; " is 129.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime; " is 131.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime; " is 125.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime; " is 130.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime; " is 154.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime; " is 152.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime; " is 130.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime; " is 150.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime; " is 124.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime; " is 136.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime; " is 128.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime; " is 126.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime; " is 128.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime; " is 130.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime; " is 132.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 325.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 330.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 354.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 352.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 330.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 350.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 324.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 336.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 328.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 326.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 328.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 330.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 332.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer; " is 140.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer; " is 145.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer; " is 169.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer; " is 167.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer; " is 145.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer; " is 165.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer; " is 139.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer; " is 151.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer; " is 143.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer; " is 141.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer; " is 143.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer; " is 145.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer; " is 147.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 325.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 330.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 354.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 352.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 330.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 350.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 324.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 336.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 328.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 326.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 328.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 330.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) }; " is 332.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime; " is 125.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime; " is 130.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime; " is 154.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime; " is 152.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime; " is 130.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime; " is 150.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime; " is 124.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime; " is 136.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime; " is 128.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime; " is 126.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime; " is 128.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime; " is 130.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The length of the statement  "					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime; " is 132.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetEntityFromField,The length of the statement  "			if (field is Acme.Northwind.EFDAL.Entity.Category.FieldNameConstants) return Acme.Northwind.EFDAL.EntityMappingConstants.Category; " is 130.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetEntityFromField,The length of the statement  "			if (field is Acme.Northwind.EFDAL.Entity.Customer.FieldNameConstants) return Acme.Northwind.EFDAL.EntityMappingConstants.Customer; " is 130.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetEntityFromField,The length of the statement  "			if (field is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.FieldNameConstants) return Acme.Northwind.EFDAL.EntityMappingConstants.CustomerCustomerDemo; " is 154.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetEntityFromField,The length of the statement  "			if (field is Acme.Northwind.EFDAL.Entity.CustomerDemographic.FieldNameConstants) return Acme.Northwind.EFDAL.EntityMappingConstants.CustomerDemographic; " is 152.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetEntityFromField,The length of the statement  "			if (field is Acme.Northwind.EFDAL.Entity.Employee.FieldNameConstants) return Acme.Northwind.EFDAL.EntityMappingConstants.Employee; " is 130.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetEntityFromField,The length of the statement  "			if (field is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.FieldNameConstants) return Acme.Northwind.EFDAL.EntityMappingConstants.EmployeeTerritorie; " is 150.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetEntityFromField,The length of the statement  "			if (field is Acme.Northwind.EFDAL.Entity.Order.FieldNameConstants) return Acme.Northwind.EFDAL.EntityMappingConstants.Order; " is 124.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetEntityFromField,The length of the statement  "			if (field is Acme.Northwind.EFDAL.Entity.OrderDetail.FieldNameConstants) return Acme.Northwind.EFDAL.EntityMappingConstants.OrderDetail; " is 136.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetEntityFromField,The length of the statement  "			if (field is Acme.Northwind.EFDAL.Entity.Product.FieldNameConstants) return Acme.Northwind.EFDAL.EntityMappingConstants.Product; " is 128.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetEntityFromField,The length of the statement  "			if (field is Acme.Northwind.EFDAL.Entity.Region.FieldNameConstants) return Acme.Northwind.EFDAL.EntityMappingConstants.Region; " is 126.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetEntityFromField,The length of the statement  "			if (field is Acme.Northwind.EFDAL.Entity.Shipper.FieldNameConstants) return Acme.Northwind.EFDAL.EntityMappingConstants.Shipper; " is 128.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetEntityFromField,The length of the statement  "			if (field is Acme.Northwind.EFDAL.Entity.Supplier.FieldNameConstants) return Acme.Northwind.EFDAL.EntityMappingConstants.Supplier; " is 130.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetEntityFromField,The length of the statement  "			if (field is Acme.Northwind.EFDAL.Entity.Territory.FieldNameConstants) return Acme.Northwind.EFDAL.EntityMappingConstants.Territory; " is 132.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetMetaData,The length of the statement  "				case Acme.Northwind.EFDAL.EntityMappingConstants.Category: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.CategoryMetadata(); " is 137.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetMetaData,The length of the statement  "				case Acme.Northwind.EFDAL.EntityMappingConstants.Customer: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.CustomerMetadata(); " is 137.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetMetaData,The length of the statement  "				case Acme.Northwind.EFDAL.EntityMappingConstants.CustomerCustomerDemo: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.CustomerCustomerDemoMetadata(); " is 161.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetMetaData,The length of the statement  "				case Acme.Northwind.EFDAL.EntityMappingConstants.CustomerDemographic: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.CustomerDemographicMetadata(); " is 159.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetMetaData,The length of the statement  "				case Acme.Northwind.EFDAL.EntityMappingConstants.Employee: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.EmployeeMetadata(); " is 137.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetMetaData,The length of the statement  "				case Acme.Northwind.EFDAL.EntityMappingConstants.EmployeeTerritorie: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.EmployeeTerritorieMetadata(); " is 157.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetMetaData,The length of the statement  "				case Acme.Northwind.EFDAL.EntityMappingConstants.Order: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.OrderMetadata(); " is 131.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetMetaData,The length of the statement  "				case Acme.Northwind.EFDAL.EntityMappingConstants.OrderDetail: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.OrderDetailMetadata(); " is 143.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetMetaData,The length of the statement  "				case Acme.Northwind.EFDAL.EntityMappingConstants.Product: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.ProductMetadata(); " is 135.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetMetaData,The length of the statement  "				case Acme.Northwind.EFDAL.EntityMappingConstants.Region: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.RegionMetadata(); " is 133.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetMetaData,The length of the statement  "				case Acme.Northwind.EFDAL.EntityMappingConstants.Shipper: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.ShipperMetadata(); " is 135.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetMetaData,The length of the statement  "				case Acme.Northwind.EFDAL.EntityMappingConstants.Supplier: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.SupplierMetadata(); " is 137.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetMetaData,The length of the statement  "				case Acme.Northwind.EFDAL.EntityMappingConstants.Territory: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.TerritoryMetadata(); " is 139.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetFieldType,The length of the statement  "				return Acme.Northwind.EFDAL.Entity.Category.GetFieldType((Acme.Northwind.EFDAL.Entity.Category.FieldNameConstants)field); " is 121.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetFieldType,The length of the statement  "				return Acme.Northwind.EFDAL.Entity.Customer.GetFieldType((Acme.Northwind.EFDAL.Entity.Customer.FieldNameConstants)field); " is 121.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetFieldType,The length of the statement  "				return Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.GetFieldType((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.FieldNameConstants)field); " is 145.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetFieldType,The length of the statement  "				return Acme.Northwind.EFDAL.Entity.CustomerDemographic.GetFieldType((Acme.Northwind.EFDAL.Entity.CustomerDemographic.FieldNameConstants)field); " is 143.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetFieldType,The length of the statement  "				return Acme.Northwind.EFDAL.Entity.Employee.GetFieldType((Acme.Northwind.EFDAL.Entity.Employee.FieldNameConstants)field); " is 121.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetFieldType,The length of the statement  "				return Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.GetFieldType((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.FieldNameConstants)field); " is 141.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetFieldType,The length of the statement  "				return Acme.Northwind.EFDAL.Entity.OrderDetail.GetFieldType((Acme.Northwind.EFDAL.Entity.OrderDetail.FieldNameConstants)field); " is 127.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetFieldType,The length of the statement  "				return Acme.Northwind.EFDAL.Entity.Supplier.GetFieldType((Acme.Northwind.EFDAL.Entity.Supplier.FieldNameConstants)field); " is 121.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetFieldType,The length of the statement  "				return Acme.Northwind.EFDAL.Entity.Territory.GetFieldType((Acme.Northwind.EFDAL.Entity.Territory.FieldNameConstants)field); " is 123.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetMetaData,The length of the statement  "			var a = entity.GetType().GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.MetadataTypeAttribute)' true).FirstOrDefault(); " is 137.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Category.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Category.FieldNameConstants)' tn' true); " is 152.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Category.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Category.FieldNameConstants)' tn' true); " is 152.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Customer.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Customer.FieldNameConstants)' tn' true); " is 152.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Customer.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Customer.FieldNameConstants)' tn' true); " is 152.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.FieldNameConstants)' tn' true); " is 176.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.FieldNameConstants)' tn' true); " is 176.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.CustomerDemographic.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.CustomerDemographic.FieldNameConstants)' tn' true); " is 174.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.CustomerDemographic.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.CustomerDemographic.FieldNameConstants)' tn' true); " is 174.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Employee.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Employee.FieldNameConstants)' tn' true); " is 152.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Employee.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Employee.FieldNameConstants)' tn' true); " is 152.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.FieldNameConstants)' tn' true); " is 172.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.FieldNameConstants)' tn' true); " is 172.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Order.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Order.FieldNameConstants)' tn' true); " is 146.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Order.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Order.FieldNameConstants)' tn' true); " is 146.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.OrderDetail.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.OrderDetail.FieldNameConstants)' tn' true); " is 158.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.OrderDetail.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.OrderDetail.FieldNameConstants)' tn' true); " is 158.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Product.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Product.FieldNameConstants)' tn' true); " is 150.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Product.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Product.FieldNameConstants)' tn' true); " is 150.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Region.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Region.FieldNameConstants)' tn' true); " is 148.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Region.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Region.FieldNameConstants)' tn' true); " is 148.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Shipper.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Shipper.FieldNameConstants)' tn' true); " is 150.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Shipper.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Shipper.FieldNameConstants)' tn' true); " is 150.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Supplier.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Supplier.FieldNameConstants)' tn' true); " is 152.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Supplier.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Supplier.FieldNameConstants)' tn' true); " is 152.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Territory.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Territory.FieldNameConstants)' tn' true); " is 154.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Territory.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Territory.FieldNameConstants)' tn' true); " is 154.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Category.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Category.FieldNameConstants)' tn' true); " is 152.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.FieldNameConstants)' tn' true); " is 176.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.CustomerDemographic.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.CustomerDemographic.FieldNameConstants)' tn' true); " is 174.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Customer.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Customer.FieldNameConstants)' tn' true); " is 152.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Employee.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Employee.FieldNameConstants)' tn' true); " is 152.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.FieldNameConstants)' tn' true); " is 172.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.OrderDetail.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.OrderDetail.FieldNameConstants)' tn' true); " is 158.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Order.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Order.FieldNameConstants)' tn' true); " is 146.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Product.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Product.FieldNameConstants)' tn' true); " is 150.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Region.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Region.FieldNameConstants)' tn' true); " is 148.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Shipper.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Shipper.FieldNameConstants)' tn' true); " is 150.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Supplier.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Supplier.FieldNameConstants)' tn' true); " is 152.
Long Statement,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The length of the statement  "			var te = (Acme.Northwind.EFDAL.Entity.Territory.FieldNameConstants)Enum.Parse(typeof(Acme.Northwind.EFDAL.Entity.Territory.FieldNameConstants)' tn' true); " is 154.
Long Statement,Acme.Northwind.EFDAL.Entity,Alphabeticallistofproducts,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Alphabeticallistofproducts.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Alphabeticallistofproducts,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Alphabeticallistofproducts.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Alphabeticallistofproducts,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Alphabeticallistofproducts.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.IAlphabeticallistofproducts>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.IAlphabeticallistofproducts); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,CategorizedSales,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CategorizedSales.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.CategorizedSales.FieldNameConstants'."); " is 220.
Long Statement,Acme.Northwind.EFDAL.Entity,CategorizedSales,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CategorizedSales.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.CategorizedSales.FieldNameConstants'."); " is 220.
Long Statement,Acme.Northwind.EFDAL.Entity,CategorizedSales,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CategorizedSales.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,CategorizedSales,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CategorizedSales.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ICategorizedSales>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ICategorizedSales); " is 164.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Category.FieldNameConstants'."); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Category.FieldNameConstants'."); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,SetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ICategory>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ICategory); " is 148.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[categoryid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Categories") + "].[categoryid]"' RegexOptions.IgnoreCase); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[categoryname\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Categories") + "].[categoryname]"' RegexOptions.IgnoreCase); " is 216.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[description\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Categories") + "].[description]"' RegexOptions.IgnoreCase); " is 214.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[picture\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Categories") + "].[picture]"' RegexOptions.IgnoreCase); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createdby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Categories") + "].[createdby]"' RegexOptions.IgnoreCase); " is 210.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Categories") + "].[createddate]"' RegexOptions.IgnoreCase); " is 214.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifiedby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Categories") + "].[modifiedby]"' RegexOptions.IgnoreCase); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifieddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Categories") + "].[modifieddate]"' RegexOptions.IgnoreCase); " is 216.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[timestamp\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Categories") + "].[timestamp]"' RegexOptions.IgnoreCase); " is 210.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,DeleteData,The length of the statement  "			return DeleteData(where' new nHydrate.EFCore.DataAccess.QueryOptimizer()' Acme.Northwind.EFDAL.NorthwindEntities.GetConnectionString()); " is 136.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,DeleteData,The length of the statement  "			var dc = new DataContext(Acme.Northwind.EFDAL.DBHelper.GetConnection(Acme.Northwind.EFDAL.Util.StripEFCS2Normal(connectionString))); " is 132.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,DeleteData,The length of the statement  "			var cmd = nHydrate.EFCore.DataAccess.BusinessEntityQuery.GetCommand<Acme.Northwind.EFDAL.CategoryQuery>(dc' template' where); " is 125.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,DeleteData,The length of the statement  "			sql += "DELETE [Categories] FROM [dbo].[Categories] " + noLock + "INNER JOIN #t ON [dbo].[Categories].[CategoryID] = #t.[CategoryID]\r\n"; " is 138.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' int>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' int?>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true); " is 185.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' int>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true' connectionString); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' int?>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true' connectionString); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' Single>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true); " is 187.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' Single?>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true); " is 188.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' Single>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true' connectionString); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' Single?>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true' connectionString); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' decimal>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true); " is 188.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' decimal?>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true); " is 189.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' decimal>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true' connectionString); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' decimal?>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true' connectionString); " is 207.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' double>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true); " is 187.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' double?>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true); " is 188.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' double>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true' connectionString); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' double?>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true' connectionString); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' short>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true); " is 186.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' short?>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true); " is 187.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' short>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true' connectionString); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' short?>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true' connectionString); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' string>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true); " is 187.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' string>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true' connectionString); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' DateTime>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true); " is 189.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' DateTime?>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true); " is 190.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' DateTime>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true' connectionString); " is 207.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' DateTime?>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true' connectionString); " is 208.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' bool>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true); " is 185.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' bool?>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true); " is 186.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' bool>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true' connectionString); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' bool?>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true' connectionString); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' Guid>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true); " is 185.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' Guid?>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true); " is 186.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' Guid>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true' connectionString); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Category' Acme.Northwind.EFDAL.CategoryQuery' Guid?>.UpdateData(select' where' newValue' "Categories"' GetDatabaseFieldName' true' connectionString); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetMetadata,The length of the statement  "			var a = typeof(Category).GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.MetadataTypeAttribute)' true).FirstOrDefault(); " is 137.
Long Statement,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetMetadata,The length of the statement  "			return Activator.CreateInstance(t) as Acme.Northwind.EFDAL.Interfaces.IMetadata as Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.CategoryMetadata; " is 148.
Long Statement,Acme.Northwind.EFDAL.Entity,CategorySalesfor1997,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CategorySalesfor1997.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,CategorySalesfor1997,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CategorySalesfor1997.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,CategorySalesfor1997,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CategorySalesfor1997.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ICategorySalesfor1997>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ICategorySalesfor1997); " is 172.
Long Statement,Acme.Northwind.EFDAL.Entity,CurrentProductList,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CurrentProductList.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,CurrentProductList,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CurrentProductList.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,CurrentProductList,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CurrentProductList.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ICurrentProductList>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ICurrentProductList); " is 168.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Customer.FieldNameConstants'."); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Customer.FieldNameConstants'."); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,SetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ICustomer>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ICustomer); " is 148.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[address\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Customers") + "].[address]"' RegexOptions.IgnoreCase); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[city\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Customers") + "].[city]"' RegexOptions.IgnoreCase); " is 199.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[companyname\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Customers") + "].[companyname]"' RegexOptions.IgnoreCase); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[contactname\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Customers") + "].[contactname]"' RegexOptions.IgnoreCase); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[contacttitle\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Customers") + "].[contacttitle]"' RegexOptions.IgnoreCase); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[country\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Customers") + "].[country]"' RegexOptions.IgnoreCase); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[customerid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Customers") + "].[customerid]"' RegexOptions.IgnoreCase); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[fax\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Customers") + "].[fax]"' RegexOptions.IgnoreCase); " is 197.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[phone\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Customers") + "].[phone]"' RegexOptions.IgnoreCase); " is 201.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[postalcode\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Customers") + "].[postalcode]"' RegexOptions.IgnoreCase); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[region\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Customers") + "].[region]"' RegexOptions.IgnoreCase); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createdby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Customers") + "].[createdby]"' RegexOptions.IgnoreCase); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Customers") + "].[createddate]"' RegexOptions.IgnoreCase); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifiedby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Customers") + "].[modifiedby]"' RegexOptions.IgnoreCase); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifieddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Customers") + "].[modifieddate]"' RegexOptions.IgnoreCase); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[timestamp\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Customers") + "].[timestamp]"' RegexOptions.IgnoreCase); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,DeleteData,The length of the statement  "			return DeleteData(where' new nHydrate.EFCore.DataAccess.QueryOptimizer()' Acme.Northwind.EFDAL.NorthwindEntities.GetConnectionString()); " is 136.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,DeleteData,The length of the statement  "			var dc = new DataContext(Acme.Northwind.EFDAL.DBHelper.GetConnection(Acme.Northwind.EFDAL.Util.StripEFCS2Normal(connectionString))); " is 132.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,DeleteData,The length of the statement  "			var cmd = nHydrate.EFCore.DataAccess.BusinessEntityQuery.GetCommand<Acme.Northwind.EFDAL.CustomerQuery>(dc' template' where); " is 125.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,DeleteData,The length of the statement  "			sql += "DELETE [Customers] FROM [dbo].[Customers] " + noLock + "INNER JOIN #t ON [dbo].[Customers].[CustomerID] = #t.[CustomerID]\r\n"; " is 135.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' int>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true); " is 183.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' int?>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' int>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true' connectionString); " is 201.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' int?>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true' connectionString); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' Single>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true); " is 186.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' Single?>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true); " is 187.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' Single>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true' connectionString); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' Single?>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true' connectionString); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' decimal>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true); " is 187.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' decimal?>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true); " is 188.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' decimal>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true' connectionString); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' decimal?>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true' connectionString); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' double>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true); " is 186.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' double?>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true); " is 187.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' double>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true' connectionString); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' double?>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true' connectionString); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' short>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true); " is 185.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' short?>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true); " is 186.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' short>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true' connectionString); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' short?>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true' connectionString); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' string>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true); " is 186.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' string>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true' connectionString); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' DateTime>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true); " is 188.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' DateTime?>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true); " is 189.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' DateTime>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true' connectionString); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' DateTime?>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true' connectionString); " is 207.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' bool>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' bool?>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true); " is 185.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' bool>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true' connectionString); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' bool?>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true' connectionString); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' Guid>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' Guid?>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true); " is 185.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' Guid>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true' connectionString); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Customer' Acme.Northwind.EFDAL.CustomerQuery' Guid?>.UpdateData(select' where' newValue' "Customers"' GetDatabaseFieldName' true' connectionString); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetMetadata,The length of the statement  "			var a = typeof(Customer).GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.MetadataTypeAttribute)' true).FirstOrDefault(); " is 137.
Long Statement,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetMetadata,The length of the statement  "			return Activator.CreateInstance(t) as Acme.Northwind.EFDAL.Interfaces.IMetadata as Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.CustomerMetadata; " is 148.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerandSuppliersbyCity,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerandSuppliersbyCity.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerandSuppliersbyCity,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerandSuppliersbyCity.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerandSuppliersbyCity,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerandSuppliersbyCity.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ICustomerandSuppliersbyCity>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ICustomerandSuppliersbyCity); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.FieldNameConstants'."); " is 224.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.FieldNameConstants'."); " is 224.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,SetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ICustomerCustomerDemo>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ICustomerCustomerDemo); " is 172.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[customerid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "CustomerCustomerDemo") + "].[customerid]"' RegexOptions.IgnoreCase); " is 222.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[customertypeid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "CustomerCustomerDemo") + "].[customertypeid]"' RegexOptions.IgnoreCase); " is 230.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createdby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "CustomerCustomerDemo") + "].[createdby]"' RegexOptions.IgnoreCase); " is 220.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "CustomerCustomerDemo") + "].[createddate]"' RegexOptions.IgnoreCase); " is 224.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifiedby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "CustomerCustomerDemo") + "].[modifiedby]"' RegexOptions.IgnoreCase); " is 222.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifieddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "CustomerCustomerDemo") + "].[modifieddate]"' RegexOptions.IgnoreCase); " is 226.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[timestamp\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "CustomerCustomerDemo") + "].[timestamp]"' RegexOptions.IgnoreCase); " is 220.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,DeleteData,The length of the statement  "			return DeleteData(where' new nHydrate.EFCore.DataAccess.QueryOptimizer()' Acme.Northwind.EFDAL.NorthwindEntities.GetConnectionString()); " is 136.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,DeleteData,The length of the statement  "			var dc = new DataContext(Acme.Northwind.EFDAL.DBHelper.GetConnection(Acme.Northwind.EFDAL.Util.StripEFCS2Normal(connectionString))); " is 132.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,DeleteData,The length of the statement  "			var cmd = nHydrate.EFCore.DataAccess.BusinessEntityQuery.GetCommand<Acme.Northwind.EFDAL.CustomerCustomerDemoQuery>(dc' template' where); " is 137.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,DeleteData,The length of the statement  "			sql += "DELETE [CustomerCustomerDemo] FROM [dbo].[CustomerCustomerDemo] " + noLock + "INNER JOIN #t ON [dbo].[CustomerCustomerDemo].[CustomerID] = #t.[CustomerID] AND [dbo].[CustomerCustomerDemo].[CustomerTypeID] = #t.[CustomerTypeID]\r\n"; " is 240.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' int>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true); " is 218.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' int?>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true); " is 219.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' int>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true' connectionString); " is 236.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' int?>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true' connectionString); " is 237.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' Single>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true); " is 221.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' Single?>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true); " is 222.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' Single>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true' connectionString); " is 239.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' Single?>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true' connectionString); " is 240.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' decimal>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true); " is 222.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' decimal?>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true); " is 223.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' decimal>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true' connectionString); " is 240.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' decimal?>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true' connectionString); " is 241.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' double>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true); " is 221.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' double?>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true); " is 222.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' double>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true' connectionString); " is 239.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' double?>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true' connectionString); " is 240.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' short>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true); " is 220.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' short?>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true); " is 221.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' short>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true' connectionString); " is 238.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' short?>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true' connectionString); " is 239.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' string>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true); " is 221.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' string>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true' connectionString); " is 239.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' DateTime>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true); " is 223.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' DateTime?>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true); " is 224.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' DateTime>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true' connectionString); " is 241.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' DateTime?>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true' connectionString); " is 242.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' bool>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true); " is 219.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' bool?>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true); " is 220.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' bool>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true' connectionString); " is 237.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' bool?>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true' connectionString); " is 238.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' Guid>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true); " is 219.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' Guid?>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true); " is 220.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' Guid>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true' connectionString); " is 237.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo' Acme.Northwind.EFDAL.CustomerCustomerDemoQuery' Guid?>.UpdateData(select' where' newValue' "CustomerCustomerDemo"' GetDatabaseFieldName' true' connectionString); " is 238.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,GetMetadata,The length of the statement  "			var a = typeof(CustomerCustomerDemo).GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.MetadataTypeAttribute)' true).FirstOrDefault(); " is 149.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,GetMetadata,The length of the statement  "			return Activator.CreateInstance(t) as Acme.Northwind.EFDAL.Interfaces.IMetadata as Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.CustomerCustomerDemoMetadata; " is 160.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.CustomerDemographic.FieldNameConstants'."); " is 223.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.CustomerDemographic.FieldNameConstants'."); " is 223.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,SetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ICustomerDemographic>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ICustomerDemographic); " is 170.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[customerdesc\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "CustomerDemographics") + "].[customerdesc]"' RegexOptions.IgnoreCase); " is 226.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[customertypeid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "CustomerDemographics") + "].[customertypeid]"' RegexOptions.IgnoreCase); " is 230.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createdby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "CustomerDemographics") + "].[createdby]"' RegexOptions.IgnoreCase); " is 220.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "CustomerDemographics") + "].[createddate]"' RegexOptions.IgnoreCase); " is 224.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifiedby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "CustomerDemographics") + "].[modifiedby]"' RegexOptions.IgnoreCase); " is 222.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifieddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "CustomerDemographics") + "].[modifieddate]"' RegexOptions.IgnoreCase); " is 226.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[timestamp\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "CustomerDemographics") + "].[timestamp]"' RegexOptions.IgnoreCase); " is 220.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,DeleteData,The length of the statement  "			return DeleteData(where' new nHydrate.EFCore.DataAccess.QueryOptimizer()' Acme.Northwind.EFDAL.NorthwindEntities.GetConnectionString()); " is 136.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,DeleteData,The length of the statement  "			var dc = new DataContext(Acme.Northwind.EFDAL.DBHelper.GetConnection(Acme.Northwind.EFDAL.Util.StripEFCS2Normal(connectionString))); " is 132.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,DeleteData,The length of the statement  "			var cmd = nHydrate.EFCore.DataAccess.BusinessEntityQuery.GetCommand<Acme.Northwind.EFDAL.CustomerDemographicQuery>(dc' template' where); " is 136.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,DeleteData,The length of the statement  "			sql += "DELETE [CustomerDemographics] FROM [dbo].[CustomerDemographics] " + noLock + "INNER JOIN #t ON [dbo].[CustomerDemographics].[CustomerTypeID] = #t.[CustomerTypeID]\r\n"; " is 176.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' int>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true); " is 216.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' int?>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true); " is 217.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' int>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true' connectionString); " is 234.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' int?>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true' connectionString); " is 235.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' Single>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true); " is 219.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' Single?>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true); " is 220.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' Single>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true' connectionString); " is 237.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' Single?>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true' connectionString); " is 238.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' decimal>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true); " is 220.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' decimal?>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true); " is 221.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' decimal>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true' connectionString); " is 238.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' decimal?>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true' connectionString); " is 239.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' double>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true); " is 219.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' double?>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true); " is 220.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' double>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true' connectionString); " is 237.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' double?>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true' connectionString); " is 238.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' short>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true); " is 218.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' short?>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true); " is 219.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' short>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true' connectionString); " is 236.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' short?>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true' connectionString); " is 237.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' string>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true); " is 219.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' string>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true' connectionString); " is 237.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' DateTime>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true); " is 221.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' DateTime?>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true); " is 222.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' DateTime>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true' connectionString); " is 239.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' DateTime?>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true' connectionString); " is 240.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' bool>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true); " is 217.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' bool?>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true); " is 218.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' bool>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true' connectionString); " is 235.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' bool?>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true' connectionString); " is 236.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' Guid>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true); " is 217.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' Guid?>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true); " is 218.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' Guid>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true' connectionString); " is 235.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.CustomerDemographic' Acme.Northwind.EFDAL.CustomerDemographicQuery' Guid?>.UpdateData(select' where' newValue' "CustomerDemographics"' GetDatabaseFieldName' true' connectionString); " is 236.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,GetMetadata,The length of the statement  "			var a = typeof(CustomerDemographic).GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.MetadataTypeAttribute)' true).FirstOrDefault(); " is 148.
Long Statement,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,GetMetadata,The length of the statement  "			return Activator.CreateInstance(t) as Acme.Northwind.EFDAL.Interfaces.IMetadata as Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.CustomerDemographicMetadata; " is 159.
Long Statement,Acme.Northwind.EFDAL.Entity,CustOrderHist,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrderHist.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.CustOrderHist.FieldNameConstants'."); " is 217.
Long Statement,Acme.Northwind.EFDAL.Entity,CustOrderHist,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrderHist.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.CustOrderHist.FieldNameConstants'."); " is 217.
Long Statement,Acme.Northwind.EFDAL.Entity,CustOrderHist,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrderHist.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,CustOrderHist,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrderHist.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ICustOrderHist>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ICustOrderHist); " is 158.
Long Statement,Acme.Northwind.EFDAL.Entity,CustOrdersDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrdersDetail.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.CustOrdersDetail.FieldNameConstants'."); " is 220.
Long Statement,Acme.Northwind.EFDAL.Entity,CustOrdersDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrdersDetail.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.CustOrdersDetail.FieldNameConstants'."); " is 220.
Long Statement,Acme.Northwind.EFDAL.Entity,CustOrdersDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrdersDetail.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,CustOrdersDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrdersDetail.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ICustOrdersDetail>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ICustOrdersDetail); " is 164.
Long Statement,Acme.Northwind.EFDAL.Entity,CustOrdersOrders,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrdersOrders.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.CustOrdersOrders.FieldNameConstants'."); " is 220.
Long Statement,Acme.Northwind.EFDAL.Entity,CustOrdersOrders,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrdersOrders.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.CustOrdersOrders.FieldNameConstants'."); " is 220.
Long Statement,Acme.Northwind.EFDAL.Entity,CustOrdersOrders,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrdersOrders.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,CustOrdersOrders,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrdersOrders.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ICustOrdersOrders>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ICustOrdersOrders); " is 164.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Employee.FieldNameConstants'."); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Employee.FieldNameConstants'."); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,SetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.IEmployee>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.IEmployee); " is 148.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[address\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[address]"' RegexOptions.IgnoreCase); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[birthdate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[birthdate]"' RegexOptions.IgnoreCase); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[city\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[city]"' RegexOptions.IgnoreCase); " is 199.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[country\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[country]"' RegexOptions.IgnoreCase); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[employeeid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[employeeid]"' RegexOptions.IgnoreCase); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[extension\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[extension]"' RegexOptions.IgnoreCase); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[firstname\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[firstname]"' RegexOptions.IgnoreCase); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[hiredate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[hiredate]"' RegexOptions.IgnoreCase); " is 207.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[homephone\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[homephone]"' RegexOptions.IgnoreCase); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[lastname\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[lastname]"' RegexOptions.IgnoreCase); " is 207.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[notes\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[notes]"' RegexOptions.IgnoreCase); " is 201.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[photo\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[photo]"' RegexOptions.IgnoreCase); " is 201.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[photopath\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[photopath]"' RegexOptions.IgnoreCase); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[postalcode\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[postalcode]"' RegexOptions.IgnoreCase); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[region\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[region]"' RegexOptions.IgnoreCase); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[reportsto\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[reportsto]"' RegexOptions.IgnoreCase); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[title\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[title]"' RegexOptions.IgnoreCase); " is 201.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[titleofcourtesy\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[titleofcourtesy]"' RegexOptions.IgnoreCase); " is 221.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createdby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[createdby]"' RegexOptions.IgnoreCase); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[createddate]"' RegexOptions.IgnoreCase); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifiedby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[modifiedby]"' RegexOptions.IgnoreCase); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifieddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[modifieddate]"' RegexOptions.IgnoreCase); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[timestamp\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Employees") + "].[timestamp]"' RegexOptions.IgnoreCase); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,DeleteData,The length of the statement  "			return DeleteData(where' new nHydrate.EFCore.DataAccess.QueryOptimizer()' Acme.Northwind.EFDAL.NorthwindEntities.GetConnectionString()); " is 136.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,DeleteData,The length of the statement  "			var dc = new DataContext(Acme.Northwind.EFDAL.DBHelper.GetConnection(Acme.Northwind.EFDAL.Util.StripEFCS2Normal(connectionString))); " is 132.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,DeleteData,The length of the statement  "			var cmd = nHydrate.EFCore.DataAccess.BusinessEntityQuery.GetCommand<Acme.Northwind.EFDAL.EmployeeQuery>(dc' template' where); " is 125.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,DeleteData,The length of the statement  "			sql += "DELETE [Employees] FROM [dbo].[Employees] " + noLock + "INNER JOIN #t ON [dbo].[Employees].[EmployeeID] = #t.[EmployeeID]\r\n"; " is 135.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' int>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true); " is 183.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' int?>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' int>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true' connectionString); " is 201.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' int?>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true' connectionString); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' Single>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true); " is 186.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' Single?>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true); " is 187.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' Single>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true' connectionString); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' Single?>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true' connectionString); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' decimal>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true); " is 187.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' decimal?>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true); " is 188.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' decimal>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true' connectionString); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' decimal?>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true' connectionString); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' double>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true); " is 186.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' double?>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true); " is 187.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' double>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true' connectionString); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' double?>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true' connectionString); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' short>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true); " is 185.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' short?>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true); " is 186.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' short>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true' connectionString); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' short?>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true' connectionString); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' string>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true); " is 186.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' string>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true' connectionString); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' DateTime>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true); " is 188.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' DateTime?>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true); " is 189.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' DateTime>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true' connectionString); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' DateTime?>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true' connectionString); " is 207.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' bool>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' bool?>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true); " is 185.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' bool>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true' connectionString); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' bool?>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true' connectionString); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' Guid>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' Guid?>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true); " is 185.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' Guid>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true' connectionString); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Employee' Acme.Northwind.EFDAL.EmployeeQuery' Guid?>.UpdateData(select' where' newValue' "Employees"' GetDatabaseFieldName' true' connectionString); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetMetadata,The length of the statement  "			var a = typeof(Employee).GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.MetadataTypeAttribute)' true).FirstOrDefault(); " is 137.
Long Statement,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetMetadata,The length of the statement  "			return Activator.CreateInstance(t) as Acme.Northwind.EFDAL.Interfaces.IMetadata as Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.EmployeeMetadata; " is 148.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeSalesbyCountry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeSalesbyCountry.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.EmployeeSalesbyCountry.FieldNameConstants'."); " is 226.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeSalesbyCountry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeSalesbyCountry.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.EmployeeSalesbyCountry.FieldNameConstants'."); " is 226.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeSalesbyCountry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeSalesbyCountry.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeSalesbyCountry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeSalesbyCountry.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.IEmployeeSalesbyCountry>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.IEmployeeSalesbyCountry); " is 176.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.FieldNameConstants'."); " is 222.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.FieldNameConstants'."); " is 222.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,SetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.IEmployeeTerritorie>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.IEmployeeTerritorie); " is 168.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[employeeid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "EmployeeTerritories") + "].[employeeid]"' RegexOptions.IgnoreCase); " is 221.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[territoryid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "EmployeeTerritories") + "].[territoryid]"' RegexOptions.IgnoreCase); " is 223.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createdby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "EmployeeTerritories") + "].[createdby]"' RegexOptions.IgnoreCase); " is 219.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "EmployeeTerritories") + "].[createddate]"' RegexOptions.IgnoreCase); " is 223.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifiedby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "EmployeeTerritories") + "].[modifiedby]"' RegexOptions.IgnoreCase); " is 221.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifieddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "EmployeeTerritories") + "].[modifieddate]"' RegexOptions.IgnoreCase); " is 225.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[timestamp\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "EmployeeTerritories") + "].[timestamp]"' RegexOptions.IgnoreCase); " is 219.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,DeleteData,The length of the statement  "			return DeleteData(where' new nHydrate.EFCore.DataAccess.QueryOptimizer()' Acme.Northwind.EFDAL.NorthwindEntities.GetConnectionString()); " is 136.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,DeleteData,The length of the statement  "			var dc = new DataContext(Acme.Northwind.EFDAL.DBHelper.GetConnection(Acme.Northwind.EFDAL.Util.StripEFCS2Normal(connectionString))); " is 132.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,DeleteData,The length of the statement  "			var cmd = nHydrate.EFCore.DataAccess.BusinessEntityQuery.GetCommand<Acme.Northwind.EFDAL.EmployeeTerritorieQuery>(dc' template' where); " is 135.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,DeleteData,The length of the statement  "			sql += "DELETE [EmployeeTerritories] FROM [dbo].[EmployeeTerritories] " + noLock + "INNER JOIN #t ON [dbo].[EmployeeTerritories].[EmployeeID] = #t.[EmployeeID] AND [dbo].[EmployeeTerritories].[TerritoryID] = #t.[TerritoryID]\r\n"; " is 230.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' int>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' int?>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true); " is 214.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' int>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true' connectionString); " is 231.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' int?>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true' connectionString); " is 232.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' Single>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true); " is 216.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' Single?>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true); " is 217.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' Single>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true' connectionString); " is 234.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' Single?>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true' connectionString); " is 235.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' decimal>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true); " is 217.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' decimal?>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true); " is 218.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' decimal>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true' connectionString); " is 235.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' decimal?>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true' connectionString); " is 236.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' double>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true); " is 216.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' double?>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true); " is 217.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' double>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true' connectionString); " is 234.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' double?>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true' connectionString); " is 235.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' short>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' short?>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true); " is 216.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' short>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true' connectionString); " is 233.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' short?>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true' connectionString); " is 234.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' string>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true); " is 216.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' string>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true' connectionString); " is 234.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' DateTime>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true); " is 218.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' DateTime?>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true); " is 219.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' DateTime>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true' connectionString); " is 236.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' DateTime?>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true' connectionString); " is 237.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' bool>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true); " is 214.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' bool?>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' bool>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true' connectionString); " is 232.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' bool?>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true' connectionString); " is 233.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' Guid>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true); " is 214.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' Guid?>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' Guid>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true' connectionString); " is 232.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.EmployeeTerritorie' Acme.Northwind.EFDAL.EmployeeTerritorieQuery' Guid?>.UpdateData(select' where' newValue' "EmployeeTerritories"' GetDatabaseFieldName' true' connectionString); " is 233.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,GetMetadata,The length of the statement  "			var a = typeof(EmployeeTerritorie).GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.MetadataTypeAttribute)' true).FirstOrDefault(); " is 147.
Long Statement,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,GetMetadata,The length of the statement  "			return Activator.CreateInstance(t) as Acme.Northwind.EFDAL.Interfaces.IMetadata as Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.EmployeeTerritorieMetadata; " is 158.
Long Statement,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.IInvoices>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.IInvoices); " is 148.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Order.FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Order.FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,SetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.IOrder>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.IOrder); " is 142.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,SetValue,The length of the statement  "						throw new Exception("An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly."); " is 133.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[customerid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[customerid]"' RegexOptions.IgnoreCase); " is 208.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[employeeid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[employeeid]"' RegexOptions.IgnoreCase); " is 208.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[freight\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[freight]"' RegexOptions.IgnoreCase); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[orderdate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[orderdate]"' RegexOptions.IgnoreCase); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[orderid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[orderid]"' RegexOptions.IgnoreCase); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[requireddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[requireddate]"' RegexOptions.IgnoreCase); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[shipaddress\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[shipaddress]"' RegexOptions.IgnoreCase); " is 210.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[shipcity\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[shipcity]"' RegexOptions.IgnoreCase); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[shipcountry\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[shipcountry]"' RegexOptions.IgnoreCase); " is 210.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[shipname\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[shipname]"' RegexOptions.IgnoreCase); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[shippeddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[shippeddate]"' RegexOptions.IgnoreCase); " is 210.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[shippostalcode\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[shippostalcode]"' RegexOptions.IgnoreCase); " is 216.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[shipregion\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[shipregion]"' RegexOptions.IgnoreCase); " is 208.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[shipvia\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[shipvia]"' RegexOptions.IgnoreCase); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createdby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[createdby]"' RegexOptions.IgnoreCase); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[createddate]"' RegexOptions.IgnoreCase); " is 210.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifiedby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[modifiedby]"' RegexOptions.IgnoreCase); " is 208.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifieddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[modifieddate]"' RegexOptions.IgnoreCase); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[timestamp\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Orders") + "].[timestamp]"' RegexOptions.IgnoreCase); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,DeleteData,The length of the statement  "			return DeleteData(where' new nHydrate.EFCore.DataAccess.QueryOptimizer()' Acme.Northwind.EFDAL.NorthwindEntities.GetConnectionString()); " is 136.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,DeleteData,The length of the statement  "			var dc = new DataContext(Acme.Northwind.EFDAL.DBHelper.GetConnection(Acme.Northwind.EFDAL.Util.StripEFCS2Normal(connectionString))); " is 132.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,DeleteData,The length of the statement  "			var cmd = nHydrate.EFCore.DataAccess.BusinessEntityQuery.GetCommand<Acme.Northwind.EFDAL.OrderQuery>(dc' template' where); " is 122.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,DeleteData,The length of the statement  "			sql += "DELETE [Orders] FROM [dbo].[Orders] " + noLock + "INNER JOIN #t ON [dbo].[Orders].[OrderID] = #t.[OrderID]\r\n"; " is 120.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' int>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true); " is 174.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' int?>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true); " is 175.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' int>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true' connectionString); " is 192.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' int?>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true' connectionString); " is 193.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' Single>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true); " is 177.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' Single?>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true); " is 178.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' Single>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true' connectionString); " is 195.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' Single?>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true' connectionString); " is 196.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' decimal>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true); " is 178.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' decimal?>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true); " is 179.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' decimal>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true' connectionString); " is 196.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' decimal?>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true' connectionString); " is 197.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' double>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true); " is 177.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' double?>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true); " is 178.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' double>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true' connectionString); " is 195.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' double?>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true' connectionString); " is 196.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' short>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true); " is 176.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' short?>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true); " is 177.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' short>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true' connectionString); " is 194.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' short?>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true' connectionString); " is 195.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' string>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true); " is 177.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' string>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true' connectionString); " is 195.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' DateTime>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true); " is 179.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' DateTime?>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true); " is 180.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' DateTime>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true' connectionString); " is 197.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' DateTime?>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true' connectionString); " is 198.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' bool>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true); " is 175.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' bool?>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true); " is 176.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' bool>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true' connectionString); " is 193.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' bool?>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true' connectionString); " is 194.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' Guid>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true); " is 175.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' Guid?>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true); " is 176.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' Guid>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true' connectionString); " is 193.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Order' Acme.Northwind.EFDAL.OrderQuery' Guid?>.UpdateData(select' where' newValue' "Orders"' GetDatabaseFieldName' true' connectionString); " is 194.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetMetadata,The length of the statement  "			var a = typeof(Order).GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.MetadataTypeAttribute)' true).FirstOrDefault(); " is 134.
Long Statement,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetMetadata,The length of the statement  "			return Activator.CreateInstance(t) as Acme.Northwind.EFDAL.Interfaces.IMetadata as Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.OrderMetadata; " is 145.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.OrderDetail.FieldNameConstants'."); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.OrderDetail.FieldNameConstants'."); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,SetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.IOrderDetail>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.IOrderDetail); " is 154.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,SetValue,The length of the statement  "						throw new Exception("An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly."); " is 133.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,SetValue,The length of the statement  "						throw new Exception("An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly."); " is 133.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,SetValue,The length of the statement  "						throw new Exception("An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly."); " is 133.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[discount\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Order Details") + "].[discount]"' RegexOptions.IgnoreCase); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[orderid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Order Details") + "].[orderid]"' RegexOptions.IgnoreCase); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[productid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Order Details") + "].[productid]"' RegexOptions.IgnoreCase); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[quantity\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Order Details") + "].[quantity]"' RegexOptions.IgnoreCase); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[unitprice\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Order Details") + "].[unitprice]"' RegexOptions.IgnoreCase); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createdby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Order Details") + "].[createdby]"' RegexOptions.IgnoreCase); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Order Details") + "].[createddate]"' RegexOptions.IgnoreCase); " is 217.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifiedby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Order Details") + "].[modifiedby]"' RegexOptions.IgnoreCase); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifieddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Order Details") + "].[modifieddate]"' RegexOptions.IgnoreCase); " is 219.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[timestamp\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Order Details") + "].[timestamp]"' RegexOptions.IgnoreCase); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,DeleteData,The length of the statement  "			return DeleteData(where' new nHydrate.EFCore.DataAccess.QueryOptimizer()' Acme.Northwind.EFDAL.NorthwindEntities.GetConnectionString()); " is 136.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,DeleteData,The length of the statement  "			var dc = new DataContext(Acme.Northwind.EFDAL.DBHelper.GetConnection(Acme.Northwind.EFDAL.Util.StripEFCS2Normal(connectionString))); " is 132.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,DeleteData,The length of the statement  "			var cmd = nHydrate.EFCore.DataAccess.BusinessEntityQuery.GetCommand<Acme.Northwind.EFDAL.OrderDetailQuery>(dc' template' where); " is 128.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,DeleteData,The length of the statement  "			sql += "DELETE [Order Details] FROM [dbo].[Order Details] " + noLock + "INNER JOIN #t ON [dbo].[Order Details].[OrderID] = #t.[OrderID] AND [dbo].[Order Details].[ProductID] = #t.[ProductID]\r\n"; " is 196.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' int>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true); " is 193.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' int?>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true); " is 194.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' int>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true' connectionString); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' int?>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true' connectionString); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' Single>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true); " is 196.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' Single?>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true); " is 197.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' Single>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true' connectionString); " is 214.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' Single?>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true' connectionString); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' decimal>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true); " is 197.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' decimal?>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true); " is 198.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' decimal>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true' connectionString); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' decimal?>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true' connectionString); " is 216.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' double>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true); " is 196.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' double?>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true); " is 197.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' double>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true' connectionString); " is 214.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' double?>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true' connectionString); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' short>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true); " is 195.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' short?>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true); " is 196.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' short>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true' connectionString); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' short?>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true' connectionString); " is 214.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' string>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true); " is 196.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' string>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true' connectionString); " is 214.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' DateTime>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true); " is 198.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' DateTime?>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true); " is 199.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' DateTime>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true' connectionString); " is 216.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' DateTime?>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true' connectionString); " is 217.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' bool>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true); " is 194.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' bool?>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true); " is 195.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' bool>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true' connectionString); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' bool?>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true' connectionString); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' Guid>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true); " is 194.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' Guid?>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true); " is 195.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' Guid>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true' connectionString); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.OrderDetail' Acme.Northwind.EFDAL.OrderDetailQuery' Guid?>.UpdateData(select' where' newValue' "Order Details"' GetDatabaseFieldName' true' connectionString); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetMetadata,The length of the statement  "			var a = typeof(OrderDetail).GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.MetadataTypeAttribute)' true).FirstOrDefault(); " is 140.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetMetadata,The length of the statement  "			return Activator.CreateInstance(t) as Acme.Northwind.EFDAL.Interfaces.IMetadata as Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.OrderDetailMetadata; " is 151.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetailsExtended,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetailsExtended.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetailsExtended,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetailsExtended.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderDetailsExtended,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetailsExtended.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.IOrderDetailsExtended>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.IOrderDetailsExtended); " is 172.
Long Statement,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.IOrdersQry>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.IOrdersQry); " is 150.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderSubtotals,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderSubtotals.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderSubtotals,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderSubtotals.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,OrderSubtotals,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderSubtotals.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.IOrderSubtotals>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.IOrderSubtotals); " is 160.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Product.FieldNameConstants'."); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Product.FieldNameConstants'."); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,SetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.IProduct>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.IProduct); " is 146.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,SetValue,The length of the statement  "				this.Discontinued = GlobalValues.SetValueHelperBoolNotNullableInternal(newValue' "Field 'Discontinued' does not allow null values!"); " is 133.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,SetValue,The length of the statement  "						throw new Exception("An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly."); " is 133.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,SetValue,The length of the statement  "						throw new Exception("An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly."); " is 133.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,SetValue,The length of the statement  "						throw new Exception("An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly."); " is 133.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,SetValue,The length of the statement  "						throw new Exception("An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly."); " is 133.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[categoryid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Products") + "].[categoryid]"' RegexOptions.IgnoreCase); " is 210.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[discontinued\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Products") + "].[discontinued]"' RegexOptions.IgnoreCase); " is 214.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[productid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Products") + "].[productid]"' RegexOptions.IgnoreCase); " is 208.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[productname\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Products") + "].[productname]"' RegexOptions.IgnoreCase); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[quantityperunit\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Products") + "].[quantityperunit]"' RegexOptions.IgnoreCase); " is 220.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[reorderlevel\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Products") + "].[reorderlevel]"' RegexOptions.IgnoreCase); " is 214.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[supplierid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Products") + "].[supplierid]"' RegexOptions.IgnoreCase); " is 210.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[unitprice\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Products") + "].[unitprice]"' RegexOptions.IgnoreCase); " is 208.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[unitsinstock\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Products") + "].[unitsinstock]"' RegexOptions.IgnoreCase); " is 214.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[unitsonorder\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Products") + "].[unitsonorder]"' RegexOptions.IgnoreCase); " is 214.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createdby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Products") + "].[createdby]"' RegexOptions.IgnoreCase); " is 208.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Products") + "].[createddate]"' RegexOptions.IgnoreCase); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifiedby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Products") + "].[modifiedby]"' RegexOptions.IgnoreCase); " is 210.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifieddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Products") + "].[modifieddate]"' RegexOptions.IgnoreCase); " is 214.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[timestamp\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Products") + "].[timestamp]"' RegexOptions.IgnoreCase); " is 208.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,DeleteData,The length of the statement  "			return DeleteData(where' new nHydrate.EFCore.DataAccess.QueryOptimizer()' Acme.Northwind.EFDAL.NorthwindEntities.GetConnectionString()); " is 136.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,DeleteData,The length of the statement  "			var dc = new DataContext(Acme.Northwind.EFDAL.DBHelper.GetConnection(Acme.Northwind.EFDAL.Util.StripEFCS2Normal(connectionString))); " is 132.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,DeleteData,The length of the statement  "			var cmd = nHydrate.EFCore.DataAccess.BusinessEntityQuery.GetCommand<Acme.Northwind.EFDAL.ProductQuery>(dc' template' where); " is 124.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,DeleteData,The length of the statement  "			sql += "DELETE [Products] FROM [dbo].[Products] " + noLock + "INNER JOIN #t ON [dbo].[Products].[ProductID] = #t.[ProductID]\r\n"; " is 130.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' int>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true); " is 180.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' int?>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true); " is 181.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' int>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true' connectionString); " is 198.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' int?>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true' connectionString); " is 199.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' Single>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true); " is 183.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' Single?>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' Single>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true' connectionString); " is 201.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' Single?>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true' connectionString); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' decimal>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' decimal?>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true); " is 185.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' decimal>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true' connectionString); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' decimal?>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true' connectionString); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' double>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true); " is 183.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' double?>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' double>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true' connectionString); " is 201.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' double?>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true' connectionString); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' short>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true); " is 182.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' short?>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true); " is 183.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' short>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true' connectionString); " is 200.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' short?>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true' connectionString); " is 201.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' string>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true); " is 183.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' string>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true' connectionString); " is 201.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' DateTime>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true); " is 185.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' DateTime?>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true); " is 186.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' DateTime>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true' connectionString); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' DateTime?>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true' connectionString); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' bool>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true); " is 181.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' bool?>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true); " is 182.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' bool>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true' connectionString); " is 199.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' bool?>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true' connectionString); " is 200.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' Guid>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true); " is 181.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' Guid?>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true); " is 182.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' Guid>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true' connectionString); " is 199.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Product' Acme.Northwind.EFDAL.ProductQuery' Guid?>.UpdateData(select' where' newValue' "Products"' GetDatabaseFieldName' true' connectionString); " is 200.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetMetadata,The length of the statement  "			var a = typeof(Product).GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.MetadataTypeAttribute)' true).FirstOrDefault(); " is 136.
Long Statement,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetMetadata,The length of the statement  "			return Activator.CreateInstance(t) as Acme.Northwind.EFDAL.Interfaces.IMetadata as Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.ProductMetadata; " is 147.
Long Statement,Acme.Northwind.EFDAL.Entity,ProductsAboveAveragePrice,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductsAboveAveragePrice.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,ProductsAboveAveragePrice,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductsAboveAveragePrice.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,ProductsAboveAveragePrice,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductsAboveAveragePrice.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.IProductsAboveAveragePrice>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.IProductsAboveAveragePrice); " is 182.
Long Statement,Acme.Northwind.EFDAL.Entity,ProductSalesfor1997,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductSalesfor1997.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,ProductSalesfor1997,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductSalesfor1997.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,ProductSalesfor1997,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductSalesfor1997.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.IProductSalesfor1997>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.IProductSalesfor1997); " is 170.
Long Statement,Acme.Northwind.EFDAL.Entity,ProductsbyCategory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductsbyCategory.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,ProductsbyCategory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductsbyCategory.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,ProductsbyCategory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductsbyCategory.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.IProductsbyCategory>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.IProductsbyCategory); " is 168.
Long Statement,Acme.Northwind.EFDAL.Entity,QuarterlyOrders,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\QuarterlyOrders.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,QuarterlyOrders,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\QuarterlyOrders.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,QuarterlyOrders,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\QuarterlyOrders.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.IQuarterlyOrders>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.IQuarterlyOrders); " is 162.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Region.FieldNameConstants'."); " is 210.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Region.FieldNameConstants'."); " is 210.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,SetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.IRegion>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.IRegion); " is 144.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[regiondescription\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Region") + "].[regiondescription]"' RegexOptions.IgnoreCase); " is 222.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[regionid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Region") + "].[regionid]"' RegexOptions.IgnoreCase); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createdby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Region") + "].[createdby]"' RegexOptions.IgnoreCase); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Region") + "].[createddate]"' RegexOptions.IgnoreCase); " is 210.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifiedby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Region") + "].[modifiedby]"' RegexOptions.IgnoreCase); " is 208.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifieddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Region") + "].[modifieddate]"' RegexOptions.IgnoreCase); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[timestamp\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Region") + "].[timestamp]"' RegexOptions.IgnoreCase); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,DeleteData,The length of the statement  "			return DeleteData(where' new nHydrate.EFCore.DataAccess.QueryOptimizer()' Acme.Northwind.EFDAL.NorthwindEntities.GetConnectionString()); " is 136.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,DeleteData,The length of the statement  "			var dc = new DataContext(Acme.Northwind.EFDAL.DBHelper.GetConnection(Acme.Northwind.EFDAL.Util.StripEFCS2Normal(connectionString))); " is 132.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,DeleteData,The length of the statement  "			var cmd = nHydrate.EFCore.DataAccess.BusinessEntityQuery.GetCommand<Acme.Northwind.EFDAL.RegionQuery>(dc' template' where); " is 123.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,DeleteData,The length of the statement  "			sql += "DELETE [Region] FROM [dbo].[Region] " + noLock + "INNER JOIN #t ON [dbo].[Region].[RegionID] = #t.[RegionID]\r\n"; " is 122.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' int>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true); " is 176.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' int?>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true); " is 177.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' int>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true' connectionString); " is 194.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' int?>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true' connectionString); " is 195.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' Single>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true); " is 179.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' Single?>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true); " is 180.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' Single>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true' connectionString); " is 197.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' Single?>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true' connectionString); " is 198.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' decimal>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true); " is 180.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' decimal?>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true); " is 181.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' decimal>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true' connectionString); " is 198.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' decimal?>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true' connectionString); " is 199.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' double>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true); " is 179.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' double?>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true); " is 180.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' double>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true' connectionString); " is 197.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' double?>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true' connectionString); " is 198.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' short>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true); " is 178.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' short?>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true); " is 179.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' short>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true' connectionString); " is 196.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' short?>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true' connectionString); " is 197.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' string>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true); " is 179.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' string>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true' connectionString); " is 197.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' DateTime>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true); " is 181.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' DateTime?>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true); " is 182.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' DateTime>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true' connectionString); " is 199.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' DateTime?>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true' connectionString); " is 200.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' bool>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true); " is 177.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' bool?>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true); " is 178.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' bool>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true' connectionString); " is 195.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' bool?>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true' connectionString); " is 196.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' Guid>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true); " is 177.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' Guid?>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true); " is 178.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' Guid>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true' connectionString); " is 195.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Region' Acme.Northwind.EFDAL.RegionQuery' Guid?>.UpdateData(select' where' newValue' "Region"' GetDatabaseFieldName' true' connectionString); " is 196.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,GetMetadata,The length of the statement  "			var a = typeof(Region).GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.MetadataTypeAttribute)' true).FirstOrDefault(); " is 135.
Long Statement,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,GetMetadata,The length of the statement  "			return Activator.CreateInstance(t) as Acme.Northwind.EFDAL.Interfaces.IMetadata as Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.RegionMetadata; " is 146.
Long Statement,Acme.Northwind.EFDAL.Entity,SalesbyCategory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesbyCategory.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,SalesbyCategory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesbyCategory.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,SalesbyCategory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesbyCategory.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ISalesbyCategory>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ISalesbyCategory); " is 162.
Long Statement,Acme.Northwind.EFDAL.Entity,SalesbyYear,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesbyYear.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.SalesbyYear.FieldNameConstants'."); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,SalesbyYear,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesbyYear.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.SalesbyYear.FieldNameConstants'."); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,SalesbyYear,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesbyYear.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,SalesbyYear,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesbyYear.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ISalesbyYear>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ISalesbyYear); " is 154.
Long Statement,Acme.Northwind.EFDAL.Entity,SalesTotalsbyAmount,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesTotalsbyAmount.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,SalesTotalsbyAmount,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesTotalsbyAmount.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,SalesTotalsbyAmount,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesTotalsbyAmount.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ISalesTotalsbyAmount>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ISalesTotalsbyAmount); " is 170.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Shipper.FieldNameConstants'."); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Shipper.FieldNameConstants'."); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,SetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.IShipper>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.IShipper); " is 146.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[companyname\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Shippers") + "].[companyname]"' RegexOptions.IgnoreCase); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[phone\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Shippers") + "].[phone]"' RegexOptions.IgnoreCase); " is 200.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[shipperid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Shippers") + "].[shipperid]"' RegexOptions.IgnoreCase); " is 208.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createdby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Shippers") + "].[createdby]"' RegexOptions.IgnoreCase); " is 208.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Shippers") + "].[createddate]"' RegexOptions.IgnoreCase); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifiedby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Shippers") + "].[modifiedby]"' RegexOptions.IgnoreCase); " is 210.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifieddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Shippers") + "].[modifieddate]"' RegexOptions.IgnoreCase); " is 214.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[timestamp\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Shippers") + "].[timestamp]"' RegexOptions.IgnoreCase); " is 208.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,DeleteData,The length of the statement  "			return DeleteData(where' new nHydrate.EFCore.DataAccess.QueryOptimizer()' Acme.Northwind.EFDAL.NorthwindEntities.GetConnectionString()); " is 136.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,DeleteData,The length of the statement  "			var dc = new DataContext(Acme.Northwind.EFDAL.DBHelper.GetConnection(Acme.Northwind.EFDAL.Util.StripEFCS2Normal(connectionString))); " is 132.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,DeleteData,The length of the statement  "			var cmd = nHydrate.EFCore.DataAccess.BusinessEntityQuery.GetCommand<Acme.Northwind.EFDAL.ShipperQuery>(dc' template' where); " is 124.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,DeleteData,The length of the statement  "			sql += "DELETE [Shippers] FROM [dbo].[Shippers] " + noLock + "INNER JOIN #t ON [dbo].[Shippers].[ShipperID] = #t.[ShipperID]\r\n"; " is 130.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' int>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true); " is 180.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' int?>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true); " is 181.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' int>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true' connectionString); " is 198.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' int?>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true' connectionString); " is 199.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' Single>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true); " is 183.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' Single?>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' Single>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true' connectionString); " is 201.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' Single?>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true' connectionString); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' decimal>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' decimal?>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true); " is 185.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' decimal>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true' connectionString); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' decimal?>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true' connectionString); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' double>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true); " is 183.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' double?>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' double>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true' connectionString); " is 201.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' double?>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true' connectionString); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' short>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true); " is 182.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' short?>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true); " is 183.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' short>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true' connectionString); " is 200.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' short?>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true' connectionString); " is 201.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' string>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true); " is 183.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' string>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true' connectionString); " is 201.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' DateTime>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true); " is 185.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' DateTime?>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true); " is 186.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' DateTime>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true' connectionString); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' DateTime?>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true' connectionString); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' bool>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true); " is 181.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' bool?>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true); " is 182.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' bool>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true' connectionString); " is 199.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' bool?>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true' connectionString); " is 200.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' Guid>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true); " is 181.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' Guid?>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true); " is 182.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' Guid>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true' connectionString); " is 199.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Shipper' Acme.Northwind.EFDAL.ShipperQuery' Guid?>.UpdateData(select' where' newValue' "Shippers"' GetDatabaseFieldName' true' connectionString); " is 200.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetMetadata,The length of the statement  "			var a = typeof(Shipper).GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.MetadataTypeAttribute)' true).FirstOrDefault(); " is 136.
Long Statement,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetMetadata,The length of the statement  "			return Activator.CreateInstance(t) as Acme.Northwind.EFDAL.Interfaces.IMetadata as Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.ShipperMetadata; " is 147.
Long Statement,Acme.Northwind.EFDAL.Entity,SummaryofSalesbyQuarter,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SummaryofSalesbyQuarter.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,SummaryofSalesbyQuarter,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SummaryofSalesbyQuarter.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,SummaryofSalesbyQuarter,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SummaryofSalesbyQuarter.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ISummaryofSalesbyQuarter>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ISummaryofSalesbyQuarter); " is 178.
Long Statement,Acme.Northwind.EFDAL.Entity,SummaryofSalesbyYear,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SummaryofSalesbyYear.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,SummaryofSalesbyYear,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SummaryofSalesbyYear.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,SummaryofSalesbyYear,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SummaryofSalesbyYear.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ISummaryofSalesbyYear>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ISummaryofSalesbyYear); " is 172.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Supplier.FieldNameConstants'."); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Supplier.FieldNameConstants'."); " is 212.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,SetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ISupplier>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ISupplier); " is 148.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[address\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Suppliers") + "].[address]"' RegexOptions.IgnoreCase); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[city\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Suppliers") + "].[city]"' RegexOptions.IgnoreCase); " is 199.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[companyname\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Suppliers") + "].[companyname]"' RegexOptions.IgnoreCase); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[contactname\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Suppliers") + "].[contactname]"' RegexOptions.IgnoreCase); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[contacttitle\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Suppliers") + "].[contacttitle]"' RegexOptions.IgnoreCase); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[country\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Suppliers") + "].[country]"' RegexOptions.IgnoreCase); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[fax\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Suppliers") + "].[fax]"' RegexOptions.IgnoreCase); " is 197.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[homepage\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Suppliers") + "].[homepage]"' RegexOptions.IgnoreCase); " is 207.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[phone\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Suppliers") + "].[phone]"' RegexOptions.IgnoreCase); " is 201.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[postalcode\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Suppliers") + "].[postalcode]"' RegexOptions.IgnoreCase); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[region\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Suppliers") + "].[region]"' RegexOptions.IgnoreCase); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[supplierid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Suppliers") + "].[supplierid]"' RegexOptions.IgnoreCase); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createdby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Suppliers") + "].[createdby]"' RegexOptions.IgnoreCase); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Suppliers") + "].[createddate]"' RegexOptions.IgnoreCase); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifiedby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Suppliers") + "].[modifiedby]"' RegexOptions.IgnoreCase); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifieddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Suppliers") + "].[modifieddate]"' RegexOptions.IgnoreCase); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[timestamp\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Suppliers") + "].[timestamp]"' RegexOptions.IgnoreCase); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,DeleteData,The length of the statement  "			return DeleteData(where' new nHydrate.EFCore.DataAccess.QueryOptimizer()' Acme.Northwind.EFDAL.NorthwindEntities.GetConnectionString()); " is 136.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,DeleteData,The length of the statement  "			var dc = new DataContext(Acme.Northwind.EFDAL.DBHelper.GetConnection(Acme.Northwind.EFDAL.Util.StripEFCS2Normal(connectionString))); " is 132.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,DeleteData,The length of the statement  "			var cmd = nHydrate.EFCore.DataAccess.BusinessEntityQuery.GetCommand<Acme.Northwind.EFDAL.SupplierQuery>(dc' template' where); " is 125.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,DeleteData,The length of the statement  "			sql += "DELETE [Suppliers] FROM [dbo].[Suppliers] " + noLock + "INNER JOIN #t ON [dbo].[Suppliers].[SupplierID] = #t.[SupplierID]\r\n"; " is 135.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' int>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true); " is 183.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' int?>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' int>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true' connectionString); " is 201.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' int?>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true' connectionString); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' Single>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true); " is 186.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' Single?>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true); " is 187.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' Single>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true' connectionString); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' Single?>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true' connectionString); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' decimal>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true); " is 187.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' decimal?>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true); " is 188.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' decimal>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true' connectionString); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' decimal?>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true' connectionString); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' double>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true); " is 186.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' double?>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true); " is 187.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' double>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true' connectionString); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' double?>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true' connectionString); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' short>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true); " is 185.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' short?>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true); " is 186.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' short>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true' connectionString); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' short?>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true' connectionString); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' string>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true); " is 186.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' string>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true' connectionString); " is 204.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' DateTime>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true); " is 188.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' DateTime?>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true); " is 189.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' DateTime>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true' connectionString); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' DateTime?>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true' connectionString); " is 207.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' bool>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' bool?>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true); " is 185.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' bool>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true' connectionString); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' bool?>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true' connectionString); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' Guid>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true); " is 184.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' Guid?>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true); " is 185.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' Guid>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true' connectionString); " is 202.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Supplier' Acme.Northwind.EFDAL.SupplierQuery' Guid?>.UpdateData(select' where' newValue' "Suppliers"' GetDatabaseFieldName' true' connectionString); " is 203.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetMetadata,The length of the statement  "			var a = typeof(Supplier).GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.MetadataTypeAttribute)' true).FirstOrDefault(); " is 137.
Long Statement,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetMetadata,The length of the statement  "			return Activator.CreateInstance(t) as Acme.Northwind.EFDAL.Interfaces.IMetadata as Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.SupplierMetadata; " is 148.
Long Statement,Acme.Northwind.EFDAL.Entity,TenMostExpensiveProducts,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\TenMostExpensiveProducts.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.TenMostExpensiveProducts.FieldNameConstants'."); " is 228.
Long Statement,Acme.Northwind.EFDAL.Entity,TenMostExpensiveProducts,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\TenMostExpensiveProducts.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.TenMostExpensiveProducts.FieldNameConstants'."); " is 228.
Long Statement,Acme.Northwind.EFDAL.Entity,TenMostExpensiveProducts,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\TenMostExpensiveProducts.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,TenMostExpensiveProducts,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\TenMostExpensiveProducts.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ITenMostExpensiveProducts>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ITenMostExpensiveProducts); " is 180.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Territory.FieldNameConstants'."); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetFieldType,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'Acme.Northwind.EFDAL.Entity.Territory.FieldNameConstants'."); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,SetValue,The length of the statement  "				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type '" + this.GetType().ToString() + ".FieldNameConstants'."); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,IsEquivalent,The length of the statement  "			return ((System.IEquatable<Acme.Northwind.EFDAL.Interfaces.Entity.ITerritory>)this).Equals(item as Acme.Northwind.EFDAL.Interfaces.Entity.ITerritory); " is 150.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,SetValue,The length of the statement  "				this.RegionID = GlobalValues.SetValueHelperIntNotNullableInternal(newValue' "Field 'RegionID' does not allow null values!"); " is 124.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[regionid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Territories") + "].[regionid]"' RegexOptions.IgnoreCase); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[territorydescription\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Territories") + "].[territorydescription]"' RegexOptions.IgnoreCase); " is 233.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[territoryid\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Territories") + "].[territoryid]"' RegexOptions.IgnoreCase); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createdby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Territories") + "].[createdby]"' RegexOptions.IgnoreCase); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[createddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Territories") + "].[createddate]"' RegexOptions.IgnoreCase); " is 215.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifiedby\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Territories") + "].[modifiedby]"' RegexOptions.IgnoreCase); " is 213.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[modifieddate\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Territories") + "].[modifieddate]"' RegexOptions.IgnoreCase); " is 217.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetRemappedLinqSql,The length of the statement  "			sql = System.Text.RegularExpressions.Regex.Replace(sql' "\\[" + parentAlias + "\\]\\.\\[timestamp\\]"' "[" + childTables.GetBaseAliasTable(parentAlias' "Territories") + "].[timestamp]"' RegexOptions.IgnoreCase); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,DeleteData,The length of the statement  "			return DeleteData(where' new nHydrate.EFCore.DataAccess.QueryOptimizer()' Acme.Northwind.EFDAL.NorthwindEntities.GetConnectionString()); " is 136.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,DeleteData,The length of the statement  "			var dc = new DataContext(Acme.Northwind.EFDAL.DBHelper.GetConnection(Acme.Northwind.EFDAL.Util.StripEFCS2Normal(connectionString))); " is 132.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,DeleteData,The length of the statement  "			var cmd = nHydrate.EFCore.DataAccess.BusinessEntityQuery.GetCommand<Acme.Northwind.EFDAL.TerritoryQuery>(dc' template' where); " is 126.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,DeleteData,The length of the statement  "			sql += "DELETE [Territories] FROM [dbo].[Territories] " + noLock + "INNER JOIN #t ON [dbo].[Territories].[TerritoryID] = #t.[TerritoryID]\r\n"; " is 143.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' int>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true); " is 187.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' int?>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true); " is 188.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' int>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true' connectionString); " is 205.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' int?>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true' connectionString); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' Single>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true); " is 190.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' Single?>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true); " is 191.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' Single>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true' connectionString); " is 208.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' Single?>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true' connectionString); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' decimal>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true); " is 191.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' decimal?>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true); " is 192.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' decimal>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true' connectionString); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' decimal?>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true' connectionString); " is 210.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' double>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true); " is 190.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' double?>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true); " is 191.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' double>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true' connectionString); " is 208.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' double?>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true' connectionString); " is 209.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' short>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true); " is 189.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' short?>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true); " is 190.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' short>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true' connectionString); " is 207.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' short?>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true' connectionString); " is 208.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' string>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true); " is 190.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' string>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true' connectionString); " is 208.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' DateTime>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true); " is 192.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' DateTime?>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true); " is 193.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' DateTime>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true' connectionString); " is 210.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' DateTime?>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true' connectionString); " is 211.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' bool>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true); " is 188.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' bool?>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true); " is 189.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' bool>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true' connectionString); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' bool?>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true' connectionString); " is 207.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' Guid>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true); " is 188.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' Guid?>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true); " is 189.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' Guid>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true' connectionString); " is 206.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,UpdateData,The length of the statement  "			return BusinessObjectQuery<Acme.Northwind.EFDAL.Entity.Territory' Acme.Northwind.EFDAL.TerritoryQuery' Guid?>.UpdateData(select' where' newValue' "Territories"' GetDatabaseFieldName' true' connectionString); " is 207.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetMetadata,The length of the statement  "			var a = typeof(Territory).GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.MetadataTypeAttribute)' true).FirstOrDefault(); " is 138.
Long Statement,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetMetadata,The length of the statement  "			return Activator.CreateInstance(t) as Acme.Northwind.EFDAL.Interfaces.IMetadata as Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.TerritoryMetadata; " is 149.
Empty Catch Block,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,GetTextFromResource,The method has an empty catch block.
Magic Number,Acme.Northwind.EFDAL,Util,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Globals.Generated.cs,ConvertNormalCS2EFFromConfig,The following statement contains a magic number: if (arr.Length != 2) return configSettings;
Magic Number,Acme.Northwind.EFDAL,Util,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Globals.Generated.cs,StripEFCS2Normal,The following statement contains a magic number: if (connectionString.StartsWith("metadata="))  			{  				var retval = string.Empty;  				var index = connectionString.IndexOf(PROVIDER);    				var index1 = -1;  				var index2 = -1;  				if (index == -1) return connectionString;    				var foundEQ = false;  				for (var ii = index + PROVIDER.Length; ii < connectionString.Length; ii++)  				{  					if (connectionString[ii] == '=')  					{  						foundEQ = true;  					}  					else if (foundEQ)  					{  						if (connectionString.Substring(ii' 1) == "\"")  						{  							index1 = ii + 1;  							index2 = connectionString.IndexOf("\""' ii + 1);  						}  						else if (connectionString.Substring(ii' 1) == "'")  						{  							index1 = ii + 1;  							index2 = connectionString.IndexOf("'"' ii + 1);  						}  						else if (connectionString.Substring(ii' 6) == "&quot;")  						{  							index1 = ii + 6;  							index2 = connectionString.IndexOf("&quot;"' ii + 1);  						}  					}    					if (index1 != -1 && index2 != -1)  					{  						return connectionString.Substring(index1' index2 - index1);  					}    				}    			}
Magic Number,Acme.Northwind.EFDAL,Util,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Globals.Generated.cs,StripEFCS2Normal,The following statement contains a magic number: if (connectionString.StartsWith("metadata="))  			{  				var retval = string.Empty;  				var index = connectionString.IndexOf(PROVIDER);    				var index1 = -1;  				var index2 = -1;  				if (index == -1) return connectionString;    				var foundEQ = false;  				for (var ii = index + PROVIDER.Length; ii < connectionString.Length; ii++)  				{  					if (connectionString[ii] == '=')  					{  						foundEQ = true;  					}  					else if (foundEQ)  					{  						if (connectionString.Substring(ii' 1) == "\"")  						{  							index1 = ii + 1;  							index2 = connectionString.IndexOf("\""' ii + 1);  						}  						else if (connectionString.Substring(ii' 1) == "'")  						{  							index1 = ii + 1;  							index2 = connectionString.IndexOf("'"' ii + 1);  						}  						else if (connectionString.Substring(ii' 6) == "&quot;")  						{  							index1 = ii + 6;  							index2 = connectionString.IndexOf("&quot;"' ii + 1);  						}  					}    					if (index1 != -1 && index2 != -1)  					{  						return connectionString.Substring(index1' index2 - index1);  					}    				}    			}
Magic Number,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,LinqSQLParser,The following statement contains a magic number: int index = sql.IndexOf("\r\nFROM") + 2;
Magic Number,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,LinqSQLParser,The following statement contains a magic number: fromClause = fromClause.Substring(5' fromClause.Length - 5).Trim();
Magic Number,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,LinqSQLParser,The following statement contains a magic number: fromClause = fromClause.Substring(5' fromClause.Length - 5).Trim();
Magic Number,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,LinqSQLParser,The following statement contains a magic number: if (index != -1)  			{  				_whereClause = sql.Substring(index + 2' sql.Length - index - 2).Replace("\r\n"' " ");  				_whereClause = _whereClause.Substring(6' _whereClause.Length - 6);  			}
Magic Number,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,LinqSQLParser,The following statement contains a magic number: if (index != -1)  			{  				_whereClause = sql.Substring(index + 2' sql.Length - index - 2).Replace("\r\n"' " ");  				_whereClause = _whereClause.Substring(6' _whereClause.Length - 6);  			}
Magic Number,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,LinqSQLParser,The following statement contains a magic number: if (index != -1)  			{  				_whereClause = sql.Substring(index + 2' sql.Length - index - 2).Replace("\r\n"' " ");  				_whereClause = _whereClause.Substring(6' _whereClause.Length - 6);  			}
Magic Number,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,LinqSQLParser,The following statement contains a magic number: if (index != -1)  			{  				_whereClause = sql.Substring(index + 2' sql.Length - index - 2).Replace("\r\n"' " ");  				_whereClause = _whereClause.Substring(6' _whereClause.Length - 6);  			}
Magic Number,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,ParseFrom,The following statement contains a magic number: for (int ii = 1; ii < fromArray.Length; ii++)  			{  				var rawText = fromArray[ii];    				//Get Table  				index = rawText.IndexOf("]");  				var table = rawText.Substring(0' index + 1);  				rawText = rawText.Substring(table.Length + 4' rawText.Length - table.Length - 4);    				//Get Alias  				index = rawText.IndexOf("]");  				var alias = rawText.Substring(0' index + 1);    				//Get Link  				var linkClause = rawText.Substring(alias.Length + 1' rawText.Length - alias.Length - 1);    				_fromLinkList.Add(new LinqSQLFromClause(table' GetSchema(table)' alias' linkClause));  			}
Magic Number,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,ParseFrom,The following statement contains a magic number: for (int ii = 1; ii < fromArray.Length; ii++)  			{  				var rawText = fromArray[ii];    				//Get Table  				index = rawText.IndexOf("]");  				var table = rawText.Substring(0' index + 1);  				rawText = rawText.Substring(table.Length + 4' rawText.Length - table.Length - 4);    				//Get Alias  				index = rawText.IndexOf("]");  				var alias = rawText.Substring(0' index + 1);    				//Get Link  				var linkClause = rawText.Substring(alias.Length + 1' rawText.Length - alias.Length - 1);    				_fromLinkList.Add(new LinqSQLFromClause(table' GetSchema(table)' alias' linkClause));  			}
Magic Number,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,ParseSelect,The following statement contains a magic number: var selectList = selectClause.Substring(7' selectClause.Length - 7).Split(''');
Magic Number,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,ParseSelect,The following statement contains a magic number: var selectList = selectClause.Substring(7' selectClause.Length - 7).Split(''');
Magic Number,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,ParseSelect,The following statement contains a magic number: foreach (string rawField in selectList)  			{  				var s = rawField.Trim();    				//Get Table  				var index = s.IndexOf("]");  				var table = s.Substring(0' index + 1);  				s = s.Substring(table.Length + 1' s.Length - table.Length - 1);    				//Get Name  				index = s.IndexOf("]");  				var field = s.Substring(0' index + 1);    				//Get Alias  				var alias = field;  				bool hasAlias = false;  				if (s.Length > field.Length)  				{  					alias = s.Substring(field.Length + 4' s.Length - field.Length - 4);  					hasAlias = true;  				}    				if (!hasAlias)  				{  					LinqSQLFromClause clause = _fromLinkList.FirstOrDefault(x => x.Alias == table.Replace("["' string.Empty).Replace("]"' string.Empty));  					switch (clause.TableName)  					{  						case "Categories": alias = Acme.Northwind.EFDAL.Entity.Category.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "CustomerCustomerDemo": alias = Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "CustomerDemographics": alias = Acme.Northwind.EFDAL.Entity.CustomerDemographic.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Customers": alias = Acme.Northwind.EFDAL.Entity.Customer.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Employees": alias = Acme.Northwind.EFDAL.Entity.Employee.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "EmployeeTerritories": alias = Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Order Details": alias = Acme.Northwind.EFDAL.Entity.OrderDetail.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Orders": alias = Acme.Northwind.EFDAL.Entity.Order.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Products": alias = Acme.Northwind.EFDAL.Entity.Product.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Region": alias = Acme.Northwind.EFDAL.Entity.Region.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Shippers": alias = Acme.Northwind.EFDAL.Entity.Shipper.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Suppliers": alias = Acme.Northwind.EFDAL.Entity.Supplier.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Territories": alias = Acme.Northwind.EFDAL.Entity.Territory.GetFieldAliasFromFieldNameSqlMapping(field); break;  					}  				}    				_fieldList.Add(new LinqSQLField(field' alias' table));  			}
Magic Number,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,ParseSelect,The following statement contains a magic number: foreach (string rawField in selectList)  			{  				var s = rawField.Trim();    				//Get Table  				var index = s.IndexOf("]");  				var table = s.Substring(0' index + 1);  				s = s.Substring(table.Length + 1' s.Length - table.Length - 1);    				//Get Name  				index = s.IndexOf("]");  				var field = s.Substring(0' index + 1);    				//Get Alias  				var alias = field;  				bool hasAlias = false;  				if (s.Length > field.Length)  				{  					alias = s.Substring(field.Length + 4' s.Length - field.Length - 4);  					hasAlias = true;  				}    				if (!hasAlias)  				{  					LinqSQLFromClause clause = _fromLinkList.FirstOrDefault(x => x.Alias == table.Replace("["' string.Empty).Replace("]"' string.Empty));  					switch (clause.TableName)  					{  						case "Categories": alias = Acme.Northwind.EFDAL.Entity.Category.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "CustomerCustomerDemo": alias = Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "CustomerDemographics": alias = Acme.Northwind.EFDAL.Entity.CustomerDemographic.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Customers": alias = Acme.Northwind.EFDAL.Entity.Customer.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Employees": alias = Acme.Northwind.EFDAL.Entity.Employee.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "EmployeeTerritories": alias = Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Order Details": alias = Acme.Northwind.EFDAL.Entity.OrderDetail.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Orders": alias = Acme.Northwind.EFDAL.Entity.Order.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Products": alias = Acme.Northwind.EFDAL.Entity.Product.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Region": alias = Acme.Northwind.EFDAL.Entity.Region.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Shippers": alias = Acme.Northwind.EFDAL.Entity.Shipper.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Suppliers": alias = Acme.Northwind.EFDAL.Entity.Supplier.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Territories": alias = Acme.Northwind.EFDAL.Entity.Territory.GetFieldAliasFromFieldNameSqlMapping(field); break;  					}  				}    				_fieldList.Add(new LinqSQLField(field' alias' table));  			}
Magic Number,Acme.Northwind.EFDAL,LinqSQLFromClauseCollection,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,RemapFromClause,The following statement contains a magic number: foreach (var fromClause in this)  			{  				//Loop through all child tables and remap the "parent" fields to the real child fields  				if ((fromClause.AnchorAlias == string.Empty) && (!string.IsNullOrEmpty(fromClause.LinkClause)))  				{  					string s = fromClause.LinkClause.Substring(3' fromClause.LinkClause.Length - 3);  					string[] arr1 = s.Split('=');    					string[] tfield1 = arr1[0].Trim().Split('.');  					string[] tfield2 = arr1[1].Trim().Split('.');    					string tableAlias1 = tfield1[0];  					string table1 = this.GetByAlias(tableAlias1).TableName;  					string field1 = tfield1[1];    					string tableAlias2 = tfield2[0];  					string table2 = this.GetByAlias(tableAlias2).TableName;  					string field2 = tfield2[1];    					string realTable = string.Empty;    					realTable = GetRealTableName(table1' field1);  					if (realTable != table1)  					{  						string parentAlias = GetByTable(table2).Alias;  						string chlidAlias = GetByTable(realTable).Alias;  						fromClause.LinkClause = fromClause.LinkClause.Replace("[" + parentAlias + "]." + field2' "[" + chlidAlias + "]." + field2);  					}    					realTable = GetRealTableName(table2' field2);  					if (realTable != table2)  					{  						string parentAlias = GetByTable(table2).Alias;  						string chlidAlias = GetByTable(realTable).Alias;  						fromClause.LinkClause = fromClause.LinkClause.Replace("[" + parentAlias + "]." + field2' "[" + chlidAlias + "]." + field2);  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,LinqSQLFromClauseCollection,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,RemapFromClause,The following statement contains a magic number: foreach (var fromClause in this)  			{  				//Loop through all child tables and remap the "parent" fields to the real child fields  				if ((fromClause.AnchorAlias == string.Empty) && (!string.IsNullOrEmpty(fromClause.LinkClause)))  				{  					string s = fromClause.LinkClause.Substring(3' fromClause.LinkClause.Length - 3);  					string[] arr1 = s.Split('=');    					string[] tfield1 = arr1[0].Trim().Split('.');  					string[] tfield2 = arr1[1].Trim().Split('.');    					string tableAlias1 = tfield1[0];  					string table1 = this.GetByAlias(tableAlias1).TableName;  					string field1 = tfield1[1];    					string tableAlias2 = tfield2[0];  					string table2 = this.GetByAlias(tableAlias2).TableName;  					string field2 = tfield2[1];    					string realTable = string.Empty;    					realTable = GetRealTableName(table1' field1);  					if (realTable != table1)  					{  						string parentAlias = GetByTable(table2).Alias;  						string chlidAlias = GetByTable(realTable).Alias;  						fromClause.LinkClause = fromClause.LinkClause.Replace("[" + parentAlias + "]." + field2' "[" + chlidAlias + "]." + field2);  					}    					realTable = GetRealTableName(table2' field2);  					if (realTable != table2)  					{  						string parentAlias = GetByTable(table2).Alias;  						string chlidAlias = GetByTable(realTable).Alias;  						fromClause.LinkClause = fromClause.LinkClause.Replace("[" + parentAlias + "]." + field2' "[" + chlidAlias + "]." + field2);  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,GlobalValues,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,PropertyGetterLambdaErrorHandler,The following statement contains a magic number: try  			{  				return func();  			}  			catch (System.Data.DBConcurrencyException dbcex) { throw new ConcurrencyException(GlobalValues.ERROR_CONCURRENCY_FAILURE' dbcex); }  			catch (System.Data.SqlClient.SqlException sqlexp) { if (sqlexp.Number == 547 || sqlexp.Number == 2627) throw new UniqueConstraintViolatedException(GlobalValues.ERROR_CONSTRAINT_FAILURE' sqlexp); else throw; }  			catch (Exception ex) { System.Diagnostics.Debug.WriteLine(ex.ToString()); throw; }
Magic Number,Acme.Northwind.EFDAL,GlobalValues,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,PropertyGetterLambdaErrorHandler,The following statement contains a magic number: try  			{  				return func();  			}  			catch (System.Data.DBConcurrencyException dbcex) { throw new ConcurrencyException(GlobalValues.ERROR_CONCURRENCY_FAILURE' dbcex); }  			catch (System.Data.SqlClient.SqlException sqlexp) { if (sqlexp.Number == 547 || sqlexp.Number == 2627) throw new UniqueConstraintViolatedException(GlobalValues.ERROR_CONSTRAINT_FAILURE' sqlexp); else throw; }  			catch (Exception ex) { System.Diagnostics.Debug.WriteLine(ex.ToString()); throw; }
Magic Number,Acme.Northwind.EFDAL,GlobalValues,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,PropertySetterLambdaErrorHandler,The following statement contains a magic number: try  			{  				action();  			}  			catch (System.Data.DBConcurrencyException dbcex) { throw new ConcurrencyException(GlobalValues.ERROR_CONCURRENCY_FAILURE' dbcex); }  			catch (System.Data.SqlClient.SqlException sqlexp) { if (sqlexp.Number == 547 || sqlexp.Number == 2627) throw new UniqueConstraintViolatedException(GlobalValues.ERROR_CONSTRAINT_FAILURE' sqlexp); else throw; }  			catch (Exception ex) { System.Diagnostics.Debug.WriteLine(ex.ToString()); throw; }
Magic Number,Acme.Northwind.EFDAL,GlobalValues,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,PropertySetterLambdaErrorHandler,The following statement contains a magic number: try  			{  				action();  			}  			catch (System.Data.DBConcurrencyException dbcex) { throw new ConcurrencyException(GlobalValues.ERROR_CONCURRENCY_FAILURE' dbcex); }  			catch (System.Data.SqlClient.SqlException sqlexp) { if (sqlexp.Number == 547 || sqlexp.Number == 2627) throw new UniqueConstraintViolatedException(GlobalValues.ERROR_CONSTRAINT_FAILURE' sqlexp); else throw; }  			catch (Exception ex) { System.Diagnostics.Debug.WriteLine(ex.ToString()); throw; }
Magic Number,Acme.Northwind.EFDAL,Extensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.Generated.cs,Contains,The following statement contains a magic number: foreach (DataRelation r in relationList)  			{  				int matches = 0;  				foreach (DataColumn c in r.ChildColumns)  				{  					if (relation.ChildColumns.Contains(c))  						matches++;  				}    				foreach (DataColumn c in r.ParentColumns)  				{  					if (relation.ParentColumns.Contains(c))  						matches++;  				}    				if (r.ChildColumns.Length == (matches * 2))  					return true;    			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in addedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ResetCreatedBy(this.ContextStartup.Modifer);  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ResetCreatedBy(this.ContextStartup.Modifer);  					}  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).CreatedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).CreatedDate = markedTime;  					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The following statement contains a magic number: foreach (var item in modifiedList)  			{  				var entity = item.Entity as nHydrate.EFCore.DataAccess.IAuditable;  				if (entity != null)  				{  					if (entity.IsModifyAuditImplemented && entity.ModifiedBy != this.ContextStartup.Modifer)  					{  						if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedBy = this.ContextStartup.Modifer;  						else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedBy = this.ContextStartup.Modifer;  					}    					if (this.CurrentPlatform == DatabasePlatformConstants.MySql)  					{  						if (entity.IsTimestampAuditImplemented)  						{  							if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  							else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).Timestamp = new byte[] { (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256)' (byte)_rnd.Next(0' 256) };  						}  					}    					if (entity is Acme.Northwind.EFDAL.Entity.Category) ((Acme.Northwind.EFDAL.Entity.Category)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Customer) ((Acme.Northwind.EFDAL.Entity.Customer)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo) ((Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.CustomerDemographic) ((Acme.Northwind.EFDAL.Entity.CustomerDemographic)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Employee) ((Acme.Northwind.EFDAL.Entity.Employee)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.EmployeeTerritorie) ((Acme.Northwind.EFDAL.Entity.EmployeeTerritorie)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Order) ((Acme.Northwind.EFDAL.Entity.Order)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.OrderDetail) ((Acme.Northwind.EFDAL.Entity.OrderDetail)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Product) ((Acme.Northwind.EFDAL.Entity.Product)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Region) ((Acme.Northwind.EFDAL.Entity.Region)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Shipper) ((Acme.Northwind.EFDAL.Entity.Shipper)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Supplier) ((Acme.Northwind.EFDAL.Entity.Supplier)entity).ModifiedDate = markedTime;  					else if (entity is Acme.Northwind.EFDAL.Entity.Territory) ((Acme.Northwind.EFDAL.Entity.Territory)entity).ModifiedDate = markedTime;  				}  			}
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,SetValue,The following statement contains a magic number: if (arr.Length != 2) throw new System.Exception("Invalid selector");
Magic Number,Acme.Northwind.EFDAL.Entity,Alphabeticallistofproducts,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Alphabeticallistofproducts.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CategoryID:  					return 0;  				case FieldNameConstants.CategoryName:  					return 30;  				case FieldNameConstants.Discontinued:  					return 0;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.QuantityPerUnit:  					return 40;  				case FieldNameConstants.ReorderLevel:  					return 0;  				case FieldNameConstants.SupplierID:  					return 0;  				case FieldNameConstants.UnitPrice:  					return 0;  				case FieldNameConstants.UnitsInStock:  					return 0;  				case FieldNameConstants.UnitsOnOrder:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Alphabeticallistofproducts,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Alphabeticallistofproducts.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CategoryID:  					return 0;  				case FieldNameConstants.CategoryName:  					return 30;  				case FieldNameConstants.Discontinued:  					return 0;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.QuantityPerUnit:  					return 40;  				case FieldNameConstants.ReorderLevel:  					return 0;  				case FieldNameConstants.SupplierID:  					return 0;  				case FieldNameConstants.UnitPrice:  					return 0;  				case FieldNameConstants.UnitsInStock:  					return 0;  				case FieldNameConstants.UnitsOnOrder:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Alphabeticallistofproducts,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Alphabeticallistofproducts.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CategoryID:  					return 0;  				case FieldNameConstants.CategoryName:  					return 30;  				case FieldNameConstants.Discontinued:  					return 0;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.QuantityPerUnit:  					return 40;  				case FieldNameConstants.ReorderLevel:  					return 0;  				case FieldNameConstants.SupplierID:  					return 0;  				case FieldNameConstants.UnitPrice:  					return 0;  				case FieldNameConstants.UnitsInStock:  					return 0;  				case FieldNameConstants.UnitsOnOrder:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,CategorizedSales,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CategorizedSales.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.ProductName:  					return 50;  				case FieldNameConstants.TotalPurchase:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CategoryID:  					return 0;  				case FieldNameConstants.CategoryName:  					return 15;  				case FieldNameConstants.Description:  					return int.MaxValue;  				case FieldNameConstants.Picture:  					return int.MaxValue;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,DeleteData,The following statement contains a magic number: cmd.CommandTimeout = 30;
Magic Number,Acme.Northwind.EFDAL.Entity,CategorySalesfor1997,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CategorySalesfor1997.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CategoryName:  					return 30;  				case FieldNameConstants.CategorySales:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,CurrentProductList,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CurrentProductList.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,DeleteData,The following statement contains a magic number: cmd.CommandTimeout = 30;
Magic Number,Acme.Northwind.EFDAL.Entity,CustomerandSuppliersbyCity,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerandSuppliersbyCity.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.ContactName:  					return 60;  				case FieldNameConstants.Relationship:  					return 9;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,CustomerandSuppliersbyCity,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerandSuppliersbyCity.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.ContactName:  					return 60;  				case FieldNameConstants.Relationship:  					return 9;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,CustomerandSuppliersbyCity,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerandSuppliersbyCity.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.ContactName:  					return 60;  				case FieldNameConstants.Relationship:  					return 9;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,CustomerandSuppliersbyCity,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerandSuppliersbyCity.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.ContactName:  					return 60;  				case FieldNameConstants.Relationship:  					return 9;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.CustomerTypeID:  					return 10;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.CustomerTypeID:  					return 10;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,DeleteData,The following statement contains a magic number: cmd.CommandTimeout = 30;
Magic Number,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CustomerDesc:  					return int.MaxValue;  				case FieldNameConstants.CustomerTypeID:  					return 10;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,DeleteData,The following statement contains a magic number: cmd.CommandTimeout = 30;
Magic Number,Acme.Northwind.EFDAL.Entity,CustOrderHist,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrderHist.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.ProductName:  					return 50;  				case FieldNameConstants.Total:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,CustOrdersDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrdersDetail.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.ProductName:  					return 50;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.BirthDate:  					return 0;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Extension:  					return 4;  				case FieldNameConstants.FirstName:  					return 10;  				case FieldNameConstants.HireDate:  					return 0;  				case FieldNameConstants.HomePhone:  					return 24;  				case FieldNameConstants.LastName:  					return 20;  				case FieldNameConstants.Notes:  					return int.MaxValue;  				case FieldNameConstants.Photo:  					return int.MaxValue;  				case FieldNameConstants.PhotoPath:  					return 255;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.ReportsTo:  					return 0;  				case FieldNameConstants.Title:  					return 30;  				case FieldNameConstants.TitleOfCourtesy:  					return 25;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.BirthDate:  					return 0;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Extension:  					return 4;  				case FieldNameConstants.FirstName:  					return 10;  				case FieldNameConstants.HireDate:  					return 0;  				case FieldNameConstants.HomePhone:  					return 24;  				case FieldNameConstants.LastName:  					return 20;  				case FieldNameConstants.Notes:  					return int.MaxValue;  				case FieldNameConstants.Photo:  					return int.MaxValue;  				case FieldNameConstants.PhotoPath:  					return 255;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.ReportsTo:  					return 0;  				case FieldNameConstants.Title:  					return 30;  				case FieldNameConstants.TitleOfCourtesy:  					return 25;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.BirthDate:  					return 0;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Extension:  					return 4;  				case FieldNameConstants.FirstName:  					return 10;  				case FieldNameConstants.HireDate:  					return 0;  				case FieldNameConstants.HomePhone:  					return 24;  				case FieldNameConstants.LastName:  					return 20;  				case FieldNameConstants.Notes:  					return int.MaxValue;  				case FieldNameConstants.Photo:  					return int.MaxValue;  				case FieldNameConstants.PhotoPath:  					return 255;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.ReportsTo:  					return 0;  				case FieldNameConstants.Title:  					return 30;  				case FieldNameConstants.TitleOfCourtesy:  					return 25;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.BirthDate:  					return 0;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Extension:  					return 4;  				case FieldNameConstants.FirstName:  					return 10;  				case FieldNameConstants.HireDate:  					return 0;  				case FieldNameConstants.HomePhone:  					return 24;  				case FieldNameConstants.LastName:  					return 20;  				case FieldNameConstants.Notes:  					return int.MaxValue;  				case FieldNameConstants.Photo:  					return int.MaxValue;  				case FieldNameConstants.PhotoPath:  					return 255;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.ReportsTo:  					return 0;  				case FieldNameConstants.Title:  					return 30;  				case FieldNameConstants.TitleOfCourtesy:  					return 25;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.BirthDate:  					return 0;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Extension:  					return 4;  				case FieldNameConstants.FirstName:  					return 10;  				case FieldNameConstants.HireDate:  					return 0;  				case FieldNameConstants.HomePhone:  					return 24;  				case FieldNameConstants.LastName:  					return 20;  				case FieldNameConstants.Notes:  					return int.MaxValue;  				case FieldNameConstants.Photo:  					return int.MaxValue;  				case FieldNameConstants.PhotoPath:  					return 255;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.ReportsTo:  					return 0;  				case FieldNameConstants.Title:  					return 30;  				case FieldNameConstants.TitleOfCourtesy:  					return 25;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.BirthDate:  					return 0;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Extension:  					return 4;  				case FieldNameConstants.FirstName:  					return 10;  				case FieldNameConstants.HireDate:  					return 0;  				case FieldNameConstants.HomePhone:  					return 24;  				case FieldNameConstants.LastName:  					return 20;  				case FieldNameConstants.Notes:  					return int.MaxValue;  				case FieldNameConstants.Photo:  					return int.MaxValue;  				case FieldNameConstants.PhotoPath:  					return 255;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.ReportsTo:  					return 0;  				case FieldNameConstants.Title:  					return 30;  				case FieldNameConstants.TitleOfCourtesy:  					return 25;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.BirthDate:  					return 0;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Extension:  					return 4;  				case FieldNameConstants.FirstName:  					return 10;  				case FieldNameConstants.HireDate:  					return 0;  				case FieldNameConstants.HomePhone:  					return 24;  				case FieldNameConstants.LastName:  					return 20;  				case FieldNameConstants.Notes:  					return int.MaxValue;  				case FieldNameConstants.Photo:  					return int.MaxValue;  				case FieldNameConstants.PhotoPath:  					return 255;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.ReportsTo:  					return 0;  				case FieldNameConstants.Title:  					return 30;  				case FieldNameConstants.TitleOfCourtesy:  					return 25;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.BirthDate:  					return 0;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Extension:  					return 4;  				case FieldNameConstants.FirstName:  					return 10;  				case FieldNameConstants.HireDate:  					return 0;  				case FieldNameConstants.HomePhone:  					return 24;  				case FieldNameConstants.LastName:  					return 20;  				case FieldNameConstants.Notes:  					return int.MaxValue;  				case FieldNameConstants.Photo:  					return int.MaxValue;  				case FieldNameConstants.PhotoPath:  					return 255;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.ReportsTo:  					return 0;  				case FieldNameConstants.Title:  					return 30;  				case FieldNameConstants.TitleOfCourtesy:  					return 25;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.BirthDate:  					return 0;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Extension:  					return 4;  				case FieldNameConstants.FirstName:  					return 10;  				case FieldNameConstants.HireDate:  					return 0;  				case FieldNameConstants.HomePhone:  					return 24;  				case FieldNameConstants.LastName:  					return 20;  				case FieldNameConstants.Notes:  					return int.MaxValue;  				case FieldNameConstants.Photo:  					return int.MaxValue;  				case FieldNameConstants.PhotoPath:  					return 255;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.ReportsTo:  					return 0;  				case FieldNameConstants.Title:  					return 30;  				case FieldNameConstants.TitleOfCourtesy:  					return 25;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.BirthDate:  					return 0;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Extension:  					return 4;  				case FieldNameConstants.FirstName:  					return 10;  				case FieldNameConstants.HireDate:  					return 0;  				case FieldNameConstants.HomePhone:  					return 24;  				case FieldNameConstants.LastName:  					return 20;  				case FieldNameConstants.Notes:  					return int.MaxValue;  				case FieldNameConstants.Photo:  					return int.MaxValue;  				case FieldNameConstants.PhotoPath:  					return 255;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.ReportsTo:  					return 0;  				case FieldNameConstants.Title:  					return 30;  				case FieldNameConstants.TitleOfCourtesy:  					return 25;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.BirthDate:  					return 0;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Extension:  					return 4;  				case FieldNameConstants.FirstName:  					return 10;  				case FieldNameConstants.HireDate:  					return 0;  				case FieldNameConstants.HomePhone:  					return 24;  				case FieldNameConstants.LastName:  					return 20;  				case FieldNameConstants.Notes:  					return int.MaxValue;  				case FieldNameConstants.Photo:  					return int.MaxValue;  				case FieldNameConstants.PhotoPath:  					return 255;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.ReportsTo:  					return 0;  				case FieldNameConstants.Title:  					return 30;  				case FieldNameConstants.TitleOfCourtesy:  					return 25;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.BirthDate:  					return 0;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Extension:  					return 4;  				case FieldNameConstants.FirstName:  					return 10;  				case FieldNameConstants.HireDate:  					return 0;  				case FieldNameConstants.HomePhone:  					return 24;  				case FieldNameConstants.LastName:  					return 20;  				case FieldNameConstants.Notes:  					return int.MaxValue;  				case FieldNameConstants.Photo:  					return int.MaxValue;  				case FieldNameConstants.PhotoPath:  					return 255;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.ReportsTo:  					return 0;  				case FieldNameConstants.Title:  					return 30;  				case FieldNameConstants.TitleOfCourtesy:  					return 25;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,DeleteData,The following statement contains a magic number: cmd.CommandTimeout = 30;
Magic Number,Acme.Northwind.EFDAL.Entity,EmployeeSalesbyCountry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeSalesbyCountry.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Country:  					return 50;  				case FieldNameConstants.FirstName:  					return 50;  				case FieldNameConstants.LastName:  					return 50;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.SaleAmount:  					return 0;  				case FieldNameConstants.ShippedDate:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,EmployeeSalesbyCountry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeSalesbyCountry.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Country:  					return 50;  				case FieldNameConstants.FirstName:  					return 50;  				case FieldNameConstants.LastName:  					return 50;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.SaleAmount:  					return 0;  				case FieldNameConstants.ShippedDate:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,EmployeeSalesbyCountry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeSalesbyCountry.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Country:  					return 50;  				case FieldNameConstants.FirstName:  					return 50;  				case FieldNameConstants.LastName:  					return 50;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.SaleAmount:  					return 0;  				case FieldNameConstants.ShippedDate:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.TerritoryID:  					return 20;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,DeleteData,The following statement contains a magic number: cmd.CommandTimeout = 30;
Magic Number,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.CustomerName:  					return 80;  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.Salesperson:  					return 62;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipperName:  					return 80;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.CustomerName:  					return 80;  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.Salesperson:  					return 62;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipperName:  					return 80;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.CustomerName:  					return 80;  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.Salesperson:  					return 62;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipperName:  					return 80;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.CustomerName:  					return 80;  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.Salesperson:  					return 62;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipperName:  					return 80;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.CustomerName:  					return 80;  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.Salesperson:  					return 62;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipperName:  					return 80;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.CustomerName:  					return 80;  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.Salesperson:  					return 62;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipperName:  					return 80;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.CustomerName:  					return 80;  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.Salesperson:  					return 62;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipperName:  					return 80;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.CustomerName:  					return 80;  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.Salesperson:  					return 62;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipperName:  					return 80;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.CustomerName:  					return 80;  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.Salesperson:  					return 62;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipperName:  					return 80;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.CustomerName:  					return 80;  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.Salesperson:  					return 62;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipperName:  					return 80;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.CustomerName:  					return 80;  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.Salesperson:  					return 62;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipperName:  					return 80;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.CustomerName:  					return 80;  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.Salesperson:  					return 62;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipperName:  					return 80;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.CustomerName:  					return 80;  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.Salesperson:  					return 62;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipperName:  					return 80;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.CustomerName:  					return 80;  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.Salesperson:  					return 62;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipperName:  					return 80;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.CustomerName:  					return 80;  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.Salesperson:  					return 62;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipperName:  					return 80;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.CustomerName:  					return 80;  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.Salesperson:  					return 62;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipperName:  					return 80;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 60;  				case FieldNameConstants.ShipCity:  					return 15;  				case FieldNameConstants.ShipCountry:  					return 15;  				case FieldNameConstants.ShipName:  					return 40;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 10;  				case FieldNameConstants.ShipRegion:  					return 15;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 60;  				case FieldNameConstants.ShipCity:  					return 15;  				case FieldNameConstants.ShipCountry:  					return 15;  				case FieldNameConstants.ShipName:  					return 40;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 10;  				case FieldNameConstants.ShipRegion:  					return 15;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 60;  				case FieldNameConstants.ShipCity:  					return 15;  				case FieldNameConstants.ShipCountry:  					return 15;  				case FieldNameConstants.ShipName:  					return 40;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 10;  				case FieldNameConstants.ShipRegion:  					return 15;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 60;  				case FieldNameConstants.ShipCity:  					return 15;  				case FieldNameConstants.ShipCountry:  					return 15;  				case FieldNameConstants.ShipName:  					return 40;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 10;  				case FieldNameConstants.ShipRegion:  					return 15;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 60;  				case FieldNameConstants.ShipCity:  					return 15;  				case FieldNameConstants.ShipCountry:  					return 15;  				case FieldNameConstants.ShipName:  					return 40;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 10;  				case FieldNameConstants.ShipRegion:  					return 15;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 60;  				case FieldNameConstants.ShipCity:  					return 15;  				case FieldNameConstants.ShipCountry:  					return 15;  				case FieldNameConstants.ShipName:  					return 40;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 10;  				case FieldNameConstants.ShipRegion:  					return 15;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 60;  				case FieldNameConstants.ShipCity:  					return 15;  				case FieldNameConstants.ShipCountry:  					return 15;  				case FieldNameConstants.ShipName:  					return 40;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 10;  				case FieldNameConstants.ShipRegion:  					return 15;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,DeleteData,The following statement contains a magic number: cmd.CommandTimeout = 30;
Magic Number,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,DeleteData,The following statement contains a magic number: cmd.CommandTimeout = 30;
Magic Number,Acme.Northwind.EFDAL.Entity,OrderDetailsExtended,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetailsExtended.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CategoryID:  					return 0;  				case FieldNameConstants.Discontinued:  					return 0;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 40;  				case FieldNameConstants.QuantityPerUnit:  					return 20;  				case FieldNameConstants.ReorderLevel:  					return 0;  				case FieldNameConstants.SupplierID:  					return 0;  				case FieldNameConstants.UnitPrice:  					return 0;  				case FieldNameConstants.UnitsInStock:  					return 0;  				case FieldNameConstants.UnitsOnOrder:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CategoryID:  					return 0;  				case FieldNameConstants.Discontinued:  					return 0;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 40;  				case FieldNameConstants.QuantityPerUnit:  					return 20;  				case FieldNameConstants.ReorderLevel:  					return 0;  				case FieldNameConstants.SupplierID:  					return 0;  				case FieldNameConstants.UnitPrice:  					return 0;  				case FieldNameConstants.UnitsInStock:  					return 0;  				case FieldNameConstants.UnitsOnOrder:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,DeleteData,The following statement contains a magic number: cmd.CommandTimeout = 30;
Magic Number,Acme.Northwind.EFDAL.Entity,ProductsAboveAveragePrice,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductsAboveAveragePrice.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,ProductSalesfor1997,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductSalesfor1997.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CategoryName:  					return 30;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.ProductSales:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,ProductSalesfor1997,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductSalesfor1997.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CategoryName:  					return 30;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.ProductSales:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,ProductsbyCategory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductsbyCategory.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CategoryName:  					return 30;  				case FieldNameConstants.Discontinued:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.QuantityPerUnit:  					return 40;  				case FieldNameConstants.UnitsInStock:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,ProductsbyCategory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductsbyCategory.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CategoryName:  					return 30;  				case FieldNameConstants.Discontinued:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.QuantityPerUnit:  					return 40;  				case FieldNameConstants.UnitsInStock:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,ProductsbyCategory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductsbyCategory.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CategoryName:  					return 30;  				case FieldNameConstants.Discontinued:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.QuantityPerUnit:  					return 40;  				case FieldNameConstants.UnitsInStock:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,QuarterlyOrders,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\QuarterlyOrders.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,QuarterlyOrders,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\QuarterlyOrders.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,QuarterlyOrders,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\QuarterlyOrders.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,QuarterlyOrders,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\QuarterlyOrders.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.RegionDescription:  					return 50;  				case FieldNameConstants.RegionID:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,DeleteData,The following statement contains a magic number: cmd.CommandTimeout = 30;
Magic Number,Acme.Northwind.EFDAL.Entity,SalesbyCategory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesbyCategory.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CategoryID:  					return 0;  				case FieldNameConstants.CategoryName:  					return 30;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.ProductSales:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,SalesbyCategory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesbyCategory.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CategoryID:  					return 0;  				case FieldNameConstants.CategoryName:  					return 30;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.ProductSales:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,SalesbyYear,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesbyYear.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.Subtotal:  					return 0;  				case FieldNameConstants.Year:  					return 50;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,SalesTotalsbyAmount,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesTotalsbyAmount.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.SaleAmount:  					return 0;  				case FieldNameConstants.ShippedDate:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.ShipperID:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.ShipperID:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,DeleteData,The following statement contains a magic number: cmd.CommandTimeout = 30;
Magic Number,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.HomePage:  					return int.MaxValue;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.SupplierID:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.HomePage:  					return int.MaxValue;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.SupplierID:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.HomePage:  					return int.MaxValue;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.SupplierID:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.HomePage:  					return int.MaxValue;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.SupplierID:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.HomePage:  					return int.MaxValue;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.SupplierID:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.HomePage:  					return int.MaxValue;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.SupplierID:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.HomePage:  					return int.MaxValue;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.SupplierID:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.HomePage:  					return int.MaxValue;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.SupplierID:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.HomePage:  					return int.MaxValue;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.SupplierID:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.HomePage:  					return int.MaxValue;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.SupplierID:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,DeleteData,The following statement contains a magic number: cmd.CommandTimeout = 30;
Magic Number,Acme.Northwind.EFDAL.Entity,TenMostExpensiveProducts,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\TenMostExpensiveProducts.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.Products:  					return 50;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.RegionID:  					return 0;  				case FieldNameConstants.TerritoryDescription:  					return 50;  				case FieldNameConstants.TerritoryID:  					return 20;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetMaxLength,The following statement contains a magic number: switch (field)  			{  				case FieldNameConstants.RegionID:  					return 0;  				case FieldNameConstants.TerritoryDescription:  					return 50;  				case FieldNameConstants.TerritoryID:  					return 20;  			}
Magic Number,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,DeleteData,The following statement contains a magic number: cmd.CommandTimeout = 30;
Duplicate Code,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,SaveChanges,The method contains a code clone-set at the following line numbers (starting from the method definition): ((90' 110)' (137' 157))
Missing Default,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,GetRemappedLinqSql,The following switch statement is missing a default case: switch (tableInfo.TableName)  				{  					case "Categories": return Acme.Northwind.EFDAL.Entity.Category.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList);  					case "CustomerCustomerDemo": return Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList);  					case "CustomerDemographics": return Acme.Northwind.EFDAL.Entity.CustomerDemographic.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList);  					case "Customers": return Acme.Northwind.EFDAL.Entity.Customer.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList);  					case "Employees": return Acme.Northwind.EFDAL.Entity.Employee.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList);  					case "EmployeeTerritories": return Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList);  					case "Order Details": return Acme.Northwind.EFDAL.Entity.OrderDetail.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList);  					case "Orders": return Acme.Northwind.EFDAL.Entity.Order.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList);  					case "Products": return Acme.Northwind.EFDAL.Entity.Product.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList);  					case "Region": return Acme.Northwind.EFDAL.Entity.Region.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList);  					case "Shippers": return Acme.Northwind.EFDAL.Entity.Shipper.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList);  					case "Suppliers": return Acme.Northwind.EFDAL.Entity.Supplier.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList);  					case "Territories": return Acme.Northwind.EFDAL.Entity.Territory.GetRemappedLinqSql(whereClause' tableInfo.Alias' fromLinkList);  				}
Missing Default,Acme.Northwind.EFDAL,LinqSQLParser,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\LinqSQLParser.cs,ParseSelect,The following switch statement is missing a default case: switch (clause.TableName)  					{  						case "Categories": alias = Acme.Northwind.EFDAL.Entity.Category.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "CustomerCustomerDemo": alias = Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "CustomerDemographics": alias = Acme.Northwind.EFDAL.Entity.CustomerDemographic.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Customers": alias = Acme.Northwind.EFDAL.Entity.Customer.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Employees": alias = Acme.Northwind.EFDAL.Entity.Employee.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "EmployeeTerritories": alias = Acme.Northwind.EFDAL.Entity.EmployeeTerritorie.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Order Details": alias = Acme.Northwind.EFDAL.Entity.OrderDetail.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Orders": alias = Acme.Northwind.EFDAL.Entity.Order.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Products": alias = Acme.Northwind.EFDAL.Entity.Product.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Region": alias = Acme.Northwind.EFDAL.Entity.Region.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Shippers": alias = Acme.Northwind.EFDAL.Entity.Shipper.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Suppliers": alias = Acme.Northwind.EFDAL.Entity.Supplier.GetFieldAliasFromFieldNameSqlMapping(field); break;  						case "Territories": alias = Acme.Northwind.EFDAL.Entity.Territory.GetFieldAliasFromFieldNameSqlMapping(field); break;  					}
Missing Default,Acme.Northwind.EFDAL,NorthwindEntities,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntities.cs,GetMetaData,The following switch statement is missing a default case: switch (table)  			{  				case Acme.Northwind.EFDAL.EntityMappingConstants.Category: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.CategoryMetadata();  				case Acme.Northwind.EFDAL.EntityMappingConstants.Customer: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.CustomerMetadata();  				case Acme.Northwind.EFDAL.EntityMappingConstants.CustomerCustomerDemo: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.CustomerCustomerDemoMetadata();  				case Acme.Northwind.EFDAL.EntityMappingConstants.CustomerDemographic: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.CustomerDemographicMetadata();  				case Acme.Northwind.EFDAL.EntityMappingConstants.Employee: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.EmployeeMetadata();  				case Acme.Northwind.EFDAL.EntityMappingConstants.EmployeeTerritorie: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.EmployeeTerritorieMetadata();  				case Acme.Northwind.EFDAL.EntityMappingConstants.Order: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.OrderMetadata();  				case Acme.Northwind.EFDAL.EntityMappingConstants.OrderDetail: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.OrderDetailMetadata();  				case Acme.Northwind.EFDAL.EntityMappingConstants.Product: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.ProductMetadata();  				case Acme.Northwind.EFDAL.EntityMappingConstants.Region: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.RegionMetadata();  				case Acme.Northwind.EFDAL.EntityMappingConstants.Shipper: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.ShipperMetadata();  				case Acme.Northwind.EFDAL.EntityMappingConstants.Supplier: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.SupplierMetadata();  				case Acme.Northwind.EFDAL.EntityMappingConstants.Territory: return new Acme.Northwind.EFDAL.Interfaces.Entity.Metadata.TerritoryMetadata();  			}
Missing Default,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetEntityType,The following switch statement is missing a default case: switch (entityType)  			{  				case EntityMappingConstants.Category: return typeof(Acme.Northwind.EFDAL.Entity.Category);  				case EntityMappingConstants.Customer: return typeof(Acme.Northwind.EFDAL.Entity.Customer);  				case EntityMappingConstants.CustomerCustomerDemo: return typeof(Acme.Northwind.EFDAL.Entity.CustomerCustomerDemo);  				case EntityMappingConstants.CustomerDemographic: return typeof(Acme.Northwind.EFDAL.Entity.CustomerDemographic);  				case EntityMappingConstants.Employee: return typeof(Acme.Northwind.EFDAL.Entity.Employee);  				case EntityMappingConstants.EmployeeTerritorie: return typeof(Acme.Northwind.EFDAL.Entity.EmployeeTerritorie);  				case EntityMappingConstants.Order: return typeof(Acme.Northwind.EFDAL.Entity.Order);  				case EntityMappingConstants.OrderDetail: return typeof(Acme.Northwind.EFDAL.Entity.OrderDetail);  				case EntityMappingConstants.Product: return typeof(Acme.Northwind.EFDAL.Entity.Product);  				case EntityMappingConstants.Region: return typeof(Acme.Northwind.EFDAL.Entity.Region);  				case EntityMappingConstants.Shipper: return typeof(Acme.Northwind.EFDAL.Entity.Shipper);  				case EntityMappingConstants.Supplier: return typeof(Acme.Northwind.EFDAL.Entity.Supplier);  				case EntityMappingConstants.Territory: return typeof(Acme.Northwind.EFDAL.Entity.Territory);  			}
Missing Default,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The following switch statement is missing a default case: switch (ob.Field)  				{  					case Entity.Category.FieldNameConstants.CategoryID:  						if (ob.Ascending) q = q.OrderBy(x => x.CategoryID);  						else q = q.OrderByDescending(x => x.CategoryID);  						break;  					case Entity.Category.FieldNameConstants.CategoryName:  						if (ob.Ascending) q = q.OrderBy(x => x.CategoryName);  						else q = q.OrderByDescending(x => x.CategoryName);  						break;  					case Entity.Category.FieldNameConstants.Description:  						if (ob.Ascending) q = q.OrderBy(x => x.Description);  						else q = q.OrderByDescending(x => x.Description);  						break;  					case Entity.Category.FieldNameConstants.Picture:  						if (ob.Ascending) q = q.OrderBy(x => x.Picture);  						else q = q.OrderByDescending(x => x.Picture);  						break;  					case Entity.Category.FieldNameConstants.CreatedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedDate);  						else q = q.OrderByDescending(x => x.CreatedDate);  						break;  					case Entity.Category.FieldNameConstants.CreatedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedBy);  						else q = q.OrderByDescending(x => x.CreatedBy);  						break;  					case Entity.Category.FieldNameConstants.ModifiedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedDate);  						else q = q.OrderByDescending(x => x.ModifiedDate);  						break;  					case Entity.Category.FieldNameConstants.ModifiedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedBy);  						else q = q.OrderByDescending(x => x.ModifiedBy);  						break;  				}
Missing Default,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The following switch statement is missing a default case: switch (ob.Field)  				{  					case Entity.CustomerCustomerDemo.FieldNameConstants.CustomerID:  						if (ob.Ascending) q = q.OrderBy(x => x.CustomerID);  						else q = q.OrderByDescending(x => x.CustomerID);  						break;  					case Entity.CustomerCustomerDemo.FieldNameConstants.CustomerTypeID:  						if (ob.Ascending) q = q.OrderBy(x => x.CustomerTypeID);  						else q = q.OrderByDescending(x => x.CustomerTypeID);  						break;  					case Entity.CustomerCustomerDemo.FieldNameConstants.CreatedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedDate);  						else q = q.OrderByDescending(x => x.CreatedDate);  						break;  					case Entity.CustomerCustomerDemo.FieldNameConstants.CreatedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedBy);  						else q = q.OrderByDescending(x => x.CreatedBy);  						break;  					case Entity.CustomerCustomerDemo.FieldNameConstants.ModifiedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedDate);  						else q = q.OrderByDescending(x => x.ModifiedDate);  						break;  					case Entity.CustomerCustomerDemo.FieldNameConstants.ModifiedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedBy);  						else q = q.OrderByDescending(x => x.ModifiedBy);  						break;  				}
Missing Default,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The following switch statement is missing a default case: switch (ob.Field)  				{  					case Entity.CustomerDemographic.FieldNameConstants.CustomerDesc:  						if (ob.Ascending) q = q.OrderBy(x => x.CustomerDesc);  						else q = q.OrderByDescending(x => x.CustomerDesc);  						break;  					case Entity.CustomerDemographic.FieldNameConstants.CustomerTypeID:  						if (ob.Ascending) q = q.OrderBy(x => x.CustomerTypeID);  						else q = q.OrderByDescending(x => x.CustomerTypeID);  						break;  					case Entity.CustomerDemographic.FieldNameConstants.CreatedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedDate);  						else q = q.OrderByDescending(x => x.CreatedDate);  						break;  					case Entity.CustomerDemographic.FieldNameConstants.CreatedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedBy);  						else q = q.OrderByDescending(x => x.CreatedBy);  						break;  					case Entity.CustomerDemographic.FieldNameConstants.ModifiedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedDate);  						else q = q.OrderByDescending(x => x.ModifiedDate);  						break;  					case Entity.CustomerDemographic.FieldNameConstants.ModifiedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedBy);  						else q = q.OrderByDescending(x => x.ModifiedBy);  						break;  				}
Missing Default,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The following switch statement is missing a default case: switch (ob.Field)  				{  					case Entity.Customer.FieldNameConstants.Address:  						if (ob.Ascending) q = q.OrderBy(x => x.Address);  						else q = q.OrderByDescending(x => x.Address);  						break;  					case Entity.Customer.FieldNameConstants.City:  						if (ob.Ascending) q = q.OrderBy(x => x.City);  						else q = q.OrderByDescending(x => x.City);  						break;  					case Entity.Customer.FieldNameConstants.CompanyName:  						if (ob.Ascending) q = q.OrderBy(x => x.CompanyName);  						else q = q.OrderByDescending(x => x.CompanyName);  						break;  					case Entity.Customer.FieldNameConstants.ContactName:  						if (ob.Ascending) q = q.OrderBy(x => x.ContactName);  						else q = q.OrderByDescending(x => x.ContactName);  						break;  					case Entity.Customer.FieldNameConstants.ContactTitle:  						if (ob.Ascending) q = q.OrderBy(x => x.ContactTitle);  						else q = q.OrderByDescending(x => x.ContactTitle);  						break;  					case Entity.Customer.FieldNameConstants.Country:  						if (ob.Ascending) q = q.OrderBy(x => x.Country);  						else q = q.OrderByDescending(x => x.Country);  						break;  					case Entity.Customer.FieldNameConstants.CustomerID:  						if (ob.Ascending) q = q.OrderBy(x => x.CustomerID);  						else q = q.OrderByDescending(x => x.CustomerID);  						break;  					case Entity.Customer.FieldNameConstants.Fax:  						if (ob.Ascending) q = q.OrderBy(x => x.Fax);  						else q = q.OrderByDescending(x => x.Fax);  						break;  					case Entity.Customer.FieldNameConstants.Phone:  						if (ob.Ascending) q = q.OrderBy(x => x.Phone);  						else q = q.OrderByDescending(x => x.Phone);  						break;  					case Entity.Customer.FieldNameConstants.PostalCode:  						if (ob.Ascending) q = q.OrderBy(x => x.PostalCode);  						else q = q.OrderByDescending(x => x.PostalCode);  						break;  					case Entity.Customer.FieldNameConstants.Region:  						if (ob.Ascending) q = q.OrderBy(x => x.Region);  						else q = q.OrderByDescending(x => x.Region);  						break;  					case Entity.Customer.FieldNameConstants.CreatedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedDate);  						else q = q.OrderByDescending(x => x.CreatedDate);  						break;  					case Entity.Customer.FieldNameConstants.CreatedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedBy);  						else q = q.OrderByDescending(x => x.CreatedBy);  						break;  					case Entity.Customer.FieldNameConstants.ModifiedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedDate);  						else q = q.OrderByDescending(x => x.ModifiedDate);  						break;  					case Entity.Customer.FieldNameConstants.ModifiedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedBy);  						else q = q.OrderByDescending(x => x.ModifiedBy);  						break;  				}
Missing Default,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The following switch statement is missing a default case: switch (ob.Field)  				{  					case Entity.Employee.FieldNameConstants.Address:  						if (ob.Ascending) q = q.OrderBy(x => x.Address);  						else q = q.OrderByDescending(x => x.Address);  						break;  					case Entity.Employee.FieldNameConstants.BirthDate:  						if (ob.Ascending) q = q.OrderBy(x => x.BirthDate);  						else q = q.OrderByDescending(x => x.BirthDate);  						break;  					case Entity.Employee.FieldNameConstants.City:  						if (ob.Ascending) q = q.OrderBy(x => x.City);  						else q = q.OrderByDescending(x => x.City);  						break;  					case Entity.Employee.FieldNameConstants.Country:  						if (ob.Ascending) q = q.OrderBy(x => x.Country);  						else q = q.OrderByDescending(x => x.Country);  						break;  					case Entity.Employee.FieldNameConstants.EmployeeID:  						if (ob.Ascending) q = q.OrderBy(x => x.EmployeeID);  						else q = q.OrderByDescending(x => x.EmployeeID);  						break;  					case Entity.Employee.FieldNameConstants.Extension:  						if (ob.Ascending) q = q.OrderBy(x => x.Extension);  						else q = q.OrderByDescending(x => x.Extension);  						break;  					case Entity.Employee.FieldNameConstants.FirstName:  						if (ob.Ascending) q = q.OrderBy(x => x.FirstName);  						else q = q.OrderByDescending(x => x.FirstName);  						break;  					case Entity.Employee.FieldNameConstants.HireDate:  						if (ob.Ascending) q = q.OrderBy(x => x.HireDate);  						else q = q.OrderByDescending(x => x.HireDate);  						break;  					case Entity.Employee.FieldNameConstants.HomePhone:  						if (ob.Ascending) q = q.OrderBy(x => x.HomePhone);  						else q = q.OrderByDescending(x => x.HomePhone);  						break;  					case Entity.Employee.FieldNameConstants.LastName:  						if (ob.Ascending) q = q.OrderBy(x => x.LastName);  						else q = q.OrderByDescending(x => x.LastName);  						break;  					case Entity.Employee.FieldNameConstants.Notes:  						if (ob.Ascending) q = q.OrderBy(x => x.Notes);  						else q = q.OrderByDescending(x => x.Notes);  						break;  					case Entity.Employee.FieldNameConstants.Photo:  						if (ob.Ascending) q = q.OrderBy(x => x.Photo);  						else q = q.OrderByDescending(x => x.Photo);  						break;  					case Entity.Employee.FieldNameConstants.PhotoPath:  						if (ob.Ascending) q = q.OrderBy(x => x.PhotoPath);  						else q = q.OrderByDescending(x => x.PhotoPath);  						break;  					case Entity.Employee.FieldNameConstants.PostalCode:  						if (ob.Ascending) q = q.OrderBy(x => x.PostalCode);  						else q = q.OrderByDescending(x => x.PostalCode);  						break;  					case Entity.Employee.FieldNameConstants.Region:  						if (ob.Ascending) q = q.OrderBy(x => x.Region);  						else q = q.OrderByDescending(x => x.Region);  						break;  					case Entity.Employee.FieldNameConstants.ReportsTo:  						if (ob.Ascending) q = q.OrderBy(x => x.ReportsTo);  						else q = q.OrderByDescending(x => x.ReportsTo);  						break;  					case Entity.Employee.FieldNameConstants.Title:  						if (ob.Ascending) q = q.OrderBy(x => x.Title);  						else q = q.OrderByDescending(x => x.Title);  						break;  					case Entity.Employee.FieldNameConstants.TitleOfCourtesy:  						if (ob.Ascending) q = q.OrderBy(x => x.TitleOfCourtesy);  						else q = q.OrderByDescending(x => x.TitleOfCourtesy);  						break;  					case Entity.Employee.FieldNameConstants.CreatedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedDate);  						else q = q.OrderByDescending(x => x.CreatedDate);  						break;  					case Entity.Employee.FieldNameConstants.CreatedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedBy);  						else q = q.OrderByDescending(x => x.CreatedBy);  						break;  					case Entity.Employee.FieldNameConstants.ModifiedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedDate);  						else q = q.OrderByDescending(x => x.ModifiedDate);  						break;  					case Entity.Employee.FieldNameConstants.ModifiedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedBy);  						else q = q.OrderByDescending(x => x.ModifiedBy);  						break;  				}
Missing Default,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The following switch statement is missing a default case: switch (ob.Field)  				{  					case Entity.EmployeeTerritorie.FieldNameConstants.EmployeeID:  						if (ob.Ascending) q = q.OrderBy(x => x.EmployeeID);  						else q = q.OrderByDescending(x => x.EmployeeID);  						break;  					case Entity.EmployeeTerritorie.FieldNameConstants.TerritoryID:  						if (ob.Ascending) q = q.OrderBy(x => x.TerritoryID);  						else q = q.OrderByDescending(x => x.TerritoryID);  						break;  					case Entity.EmployeeTerritorie.FieldNameConstants.CreatedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedDate);  						else q = q.OrderByDescending(x => x.CreatedDate);  						break;  					case Entity.EmployeeTerritorie.FieldNameConstants.CreatedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedBy);  						else q = q.OrderByDescending(x => x.CreatedBy);  						break;  					case Entity.EmployeeTerritorie.FieldNameConstants.ModifiedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedDate);  						else q = q.OrderByDescending(x => x.ModifiedDate);  						break;  					case Entity.EmployeeTerritorie.FieldNameConstants.ModifiedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedBy);  						else q = q.OrderByDescending(x => x.ModifiedBy);  						break;  				}
Missing Default,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The following switch statement is missing a default case: switch (ob.Field)  				{  					case Entity.OrderDetail.FieldNameConstants.Discount:  						if (ob.Ascending) q = q.OrderBy(x => x.Discount);  						else q = q.OrderByDescending(x => x.Discount);  						break;  					case Entity.OrderDetail.FieldNameConstants.OrderID:  						if (ob.Ascending) q = q.OrderBy(x => x.OrderID);  						else q = q.OrderByDescending(x => x.OrderID);  						break;  					case Entity.OrderDetail.FieldNameConstants.ProductID:  						if (ob.Ascending) q = q.OrderBy(x => x.ProductID);  						else q = q.OrderByDescending(x => x.ProductID);  						break;  					case Entity.OrderDetail.FieldNameConstants.Quantity:  						if (ob.Ascending) q = q.OrderBy(x => x.Quantity);  						else q = q.OrderByDescending(x => x.Quantity);  						break;  					case Entity.OrderDetail.FieldNameConstants.UnitPrice:  						if (ob.Ascending) q = q.OrderBy(x => x.UnitPrice);  						else q = q.OrderByDescending(x => x.UnitPrice);  						break;  					case Entity.OrderDetail.FieldNameConstants.CreatedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedDate);  						else q = q.OrderByDescending(x => x.CreatedDate);  						break;  					case Entity.OrderDetail.FieldNameConstants.CreatedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedBy);  						else q = q.OrderByDescending(x => x.CreatedBy);  						break;  					case Entity.OrderDetail.FieldNameConstants.ModifiedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedDate);  						else q = q.OrderByDescending(x => x.ModifiedDate);  						break;  					case Entity.OrderDetail.FieldNameConstants.ModifiedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedBy);  						else q = q.OrderByDescending(x => x.ModifiedBy);  						break;  				}
Missing Default,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The following switch statement is missing a default case: switch (ob.Field)  				{  					case Entity.Order.FieldNameConstants.CustomerID:  						if (ob.Ascending) q = q.OrderBy(x => x.CustomerID);  						else q = q.OrderByDescending(x => x.CustomerID);  						break;  					case Entity.Order.FieldNameConstants.EmployeeID:  						if (ob.Ascending) q = q.OrderBy(x => x.EmployeeID);  						else q = q.OrderByDescending(x => x.EmployeeID);  						break;  					case Entity.Order.FieldNameConstants.Freight:  						if (ob.Ascending) q = q.OrderBy(x => x.Freight);  						else q = q.OrderByDescending(x => x.Freight);  						break;  					case Entity.Order.FieldNameConstants.OrderDate:  						if (ob.Ascending) q = q.OrderBy(x => x.OrderDate);  						else q = q.OrderByDescending(x => x.OrderDate);  						break;  					case Entity.Order.FieldNameConstants.OrderID:  						if (ob.Ascending) q = q.OrderBy(x => x.OrderID);  						else q = q.OrderByDescending(x => x.OrderID);  						break;  					case Entity.Order.FieldNameConstants.RequiredDate:  						if (ob.Ascending) q = q.OrderBy(x => x.RequiredDate);  						else q = q.OrderByDescending(x => x.RequiredDate);  						break;  					case Entity.Order.FieldNameConstants.ShipAddress:  						if (ob.Ascending) q = q.OrderBy(x => x.ShipAddress);  						else q = q.OrderByDescending(x => x.ShipAddress);  						break;  					case Entity.Order.FieldNameConstants.ShipCity:  						if (ob.Ascending) q = q.OrderBy(x => x.ShipCity);  						else q = q.OrderByDescending(x => x.ShipCity);  						break;  					case Entity.Order.FieldNameConstants.ShipCountry:  						if (ob.Ascending) q = q.OrderBy(x => x.ShipCountry);  						else q = q.OrderByDescending(x => x.ShipCountry);  						break;  					case Entity.Order.FieldNameConstants.ShipName:  						if (ob.Ascending) q = q.OrderBy(x => x.ShipName);  						else q = q.OrderByDescending(x => x.ShipName);  						break;  					case Entity.Order.FieldNameConstants.ShippedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.ShippedDate);  						else q = q.OrderByDescending(x => x.ShippedDate);  						break;  					case Entity.Order.FieldNameConstants.ShipPostalCode:  						if (ob.Ascending) q = q.OrderBy(x => x.ShipPostalCode);  						else q = q.OrderByDescending(x => x.ShipPostalCode);  						break;  					case Entity.Order.FieldNameConstants.ShipRegion:  						if (ob.Ascending) q = q.OrderBy(x => x.ShipRegion);  						else q = q.OrderByDescending(x => x.ShipRegion);  						break;  					case Entity.Order.FieldNameConstants.ShipVia:  						if (ob.Ascending) q = q.OrderBy(x => x.ShipVia);  						else q = q.OrderByDescending(x => x.ShipVia);  						break;  					case Entity.Order.FieldNameConstants.CreatedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedDate);  						else q = q.OrderByDescending(x => x.CreatedDate);  						break;  					case Entity.Order.FieldNameConstants.CreatedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedBy);  						else q = q.OrderByDescending(x => x.CreatedBy);  						break;  					case Entity.Order.FieldNameConstants.ModifiedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedDate);  						else q = q.OrderByDescending(x => x.ModifiedDate);  						break;  					case Entity.Order.FieldNameConstants.ModifiedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedBy);  						else q = q.OrderByDescending(x => x.ModifiedBy);  						break;  				}
Missing Default,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The following switch statement is missing a default case: switch (ob.Field)  				{  					case Entity.Product.FieldNameConstants.CategoryID:  						if (ob.Ascending) q = q.OrderBy(x => x.CategoryID);  						else q = q.OrderByDescending(x => x.CategoryID);  						break;  					case Entity.Product.FieldNameConstants.Discontinued:  						if (ob.Ascending) q = q.OrderBy(x => x.Discontinued);  						else q = q.OrderByDescending(x => x.Discontinued);  						break;  					case Entity.Product.FieldNameConstants.ProductID:  						if (ob.Ascending) q = q.OrderBy(x => x.ProductID);  						else q = q.OrderByDescending(x => x.ProductID);  						break;  					case Entity.Product.FieldNameConstants.ProductName:  						if (ob.Ascending) q = q.OrderBy(x => x.ProductName);  						else q = q.OrderByDescending(x => x.ProductName);  						break;  					case Entity.Product.FieldNameConstants.QuantityPerUnit:  						if (ob.Ascending) q = q.OrderBy(x => x.QuantityPerUnit);  						else q = q.OrderByDescending(x => x.QuantityPerUnit);  						break;  					case Entity.Product.FieldNameConstants.ReorderLevel:  						if (ob.Ascending) q = q.OrderBy(x => x.ReorderLevel);  						else q = q.OrderByDescending(x => x.ReorderLevel);  						break;  					case Entity.Product.FieldNameConstants.SupplierID:  						if (ob.Ascending) q = q.OrderBy(x => x.SupplierID);  						else q = q.OrderByDescending(x => x.SupplierID);  						break;  					case Entity.Product.FieldNameConstants.UnitPrice:  						if (ob.Ascending) q = q.OrderBy(x => x.UnitPrice);  						else q = q.OrderByDescending(x => x.UnitPrice);  						break;  					case Entity.Product.FieldNameConstants.UnitsInStock:  						if (ob.Ascending) q = q.OrderBy(x => x.UnitsInStock);  						else q = q.OrderByDescending(x => x.UnitsInStock);  						break;  					case Entity.Product.FieldNameConstants.UnitsOnOrder:  						if (ob.Ascending) q = q.OrderBy(x => x.UnitsOnOrder);  						else q = q.OrderByDescending(x => x.UnitsOnOrder);  						break;  					case Entity.Product.FieldNameConstants.CreatedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedDate);  						else q = q.OrderByDescending(x => x.CreatedDate);  						break;  					case Entity.Product.FieldNameConstants.CreatedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedBy);  						else q = q.OrderByDescending(x => x.CreatedBy);  						break;  					case Entity.Product.FieldNameConstants.ModifiedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedDate);  						else q = q.OrderByDescending(x => x.ModifiedDate);  						break;  					case Entity.Product.FieldNameConstants.ModifiedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedBy);  						else q = q.OrderByDescending(x => x.ModifiedBy);  						break;  				}
Missing Default,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The following switch statement is missing a default case: switch (ob.Field)  				{  					case Entity.Region.FieldNameConstants.RegionDescription:  						if (ob.Ascending) q = q.OrderBy(x => x.RegionDescription);  						else q = q.OrderByDescending(x => x.RegionDescription);  						break;  					case Entity.Region.FieldNameConstants.RegionID:  						if (ob.Ascending) q = q.OrderBy(x => x.RegionID);  						else q = q.OrderByDescending(x => x.RegionID);  						break;  					case Entity.Region.FieldNameConstants.CreatedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedDate);  						else q = q.OrderByDescending(x => x.CreatedDate);  						break;  					case Entity.Region.FieldNameConstants.CreatedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedBy);  						else q = q.OrderByDescending(x => x.CreatedBy);  						break;  					case Entity.Region.FieldNameConstants.ModifiedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedDate);  						else q = q.OrderByDescending(x => x.ModifiedDate);  						break;  					case Entity.Region.FieldNameConstants.ModifiedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedBy);  						else q = q.OrderByDescending(x => x.ModifiedBy);  						break;  				}
Missing Default,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The following switch statement is missing a default case: switch (ob.Field)  				{  					case Entity.Shipper.FieldNameConstants.CompanyName:  						if (ob.Ascending) q = q.OrderBy(x => x.CompanyName);  						else q = q.OrderByDescending(x => x.CompanyName);  						break;  					case Entity.Shipper.FieldNameConstants.Phone:  						if (ob.Ascending) q = q.OrderBy(x => x.Phone);  						else q = q.OrderByDescending(x => x.Phone);  						break;  					case Entity.Shipper.FieldNameConstants.ShipperID:  						if (ob.Ascending) q = q.OrderBy(x => x.ShipperID);  						else q = q.OrderByDescending(x => x.ShipperID);  						break;  					case Entity.Shipper.FieldNameConstants.CreatedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedDate);  						else q = q.OrderByDescending(x => x.CreatedDate);  						break;  					case Entity.Shipper.FieldNameConstants.CreatedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedBy);  						else q = q.OrderByDescending(x => x.CreatedBy);  						break;  					case Entity.Shipper.FieldNameConstants.ModifiedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedDate);  						else q = q.OrderByDescending(x => x.ModifiedDate);  						break;  					case Entity.Shipper.FieldNameConstants.ModifiedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedBy);  						else q = q.OrderByDescending(x => x.ModifiedBy);  						break;  				}
Missing Default,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The following switch statement is missing a default case: switch (ob.Field)  				{  					case Entity.Supplier.FieldNameConstants.Address:  						if (ob.Ascending) q = q.OrderBy(x => x.Address);  						else q = q.OrderByDescending(x => x.Address);  						break;  					case Entity.Supplier.FieldNameConstants.City:  						if (ob.Ascending) q = q.OrderBy(x => x.City);  						else q = q.OrderByDescending(x => x.City);  						break;  					case Entity.Supplier.FieldNameConstants.CompanyName:  						if (ob.Ascending) q = q.OrderBy(x => x.CompanyName);  						else q = q.OrderByDescending(x => x.CompanyName);  						break;  					case Entity.Supplier.FieldNameConstants.ContactName:  						if (ob.Ascending) q = q.OrderBy(x => x.ContactName);  						else q = q.OrderByDescending(x => x.ContactName);  						break;  					case Entity.Supplier.FieldNameConstants.ContactTitle:  						if (ob.Ascending) q = q.OrderBy(x => x.ContactTitle);  						else q = q.OrderByDescending(x => x.ContactTitle);  						break;  					case Entity.Supplier.FieldNameConstants.Country:  						if (ob.Ascending) q = q.OrderBy(x => x.Country);  						else q = q.OrderByDescending(x => x.Country);  						break;  					case Entity.Supplier.FieldNameConstants.Fax:  						if (ob.Ascending) q = q.OrderBy(x => x.Fax);  						else q = q.OrderByDescending(x => x.Fax);  						break;  					case Entity.Supplier.FieldNameConstants.HomePage:  						if (ob.Ascending) q = q.OrderBy(x => x.HomePage);  						else q = q.OrderByDescending(x => x.HomePage);  						break;  					case Entity.Supplier.FieldNameConstants.Phone:  						if (ob.Ascending) q = q.OrderBy(x => x.Phone);  						else q = q.OrderByDescending(x => x.Phone);  						break;  					case Entity.Supplier.FieldNameConstants.PostalCode:  						if (ob.Ascending) q = q.OrderBy(x => x.PostalCode);  						else q = q.OrderByDescending(x => x.PostalCode);  						break;  					case Entity.Supplier.FieldNameConstants.Region:  						if (ob.Ascending) q = q.OrderBy(x => x.Region);  						else q = q.OrderByDescending(x => x.Region);  						break;  					case Entity.Supplier.FieldNameConstants.SupplierID:  						if (ob.Ascending) q = q.OrderBy(x => x.SupplierID);  						else q = q.OrderByDescending(x => x.SupplierID);  						break;  					case Entity.Supplier.FieldNameConstants.CreatedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedDate);  						else q = q.OrderByDescending(x => x.CreatedDate);  						break;  					case Entity.Supplier.FieldNameConstants.CreatedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedBy);  						else q = q.OrderByDescending(x => x.CreatedBy);  						break;  					case Entity.Supplier.FieldNameConstants.ModifiedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedDate);  						else q = q.OrderByDescending(x => x.ModifiedDate);  						break;  					case Entity.Supplier.FieldNameConstants.ModifiedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedBy);  						else q = q.OrderByDescending(x => x.ModifiedBy);  						break;  				}
Missing Default,Acme.Northwind.EFDAL,NorthwindEntitiesExtensions,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\NorthwindEntitiesExtensions.cs,GetPagedResults,The following switch statement is missing a default case: switch (ob.Field)  				{  					case Entity.Territory.FieldNameConstants.RegionID:  						if (ob.Ascending) q = q.OrderBy(x => x.RegionID);  						else q = q.OrderByDescending(x => x.RegionID);  						break;  					case Entity.Territory.FieldNameConstants.TerritoryDescription:  						if (ob.Ascending) q = q.OrderBy(x => x.TerritoryDescription);  						else q = q.OrderByDescending(x => x.TerritoryDescription);  						break;  					case Entity.Territory.FieldNameConstants.TerritoryID:  						if (ob.Ascending) q = q.OrderBy(x => x.TerritoryID);  						else q = q.OrderByDescending(x => x.TerritoryID);  						break;  					case Entity.Territory.FieldNameConstants.CreatedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedDate);  						else q = q.OrderByDescending(x => x.CreatedDate);  						break;  					case Entity.Territory.FieldNameConstants.CreatedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.CreatedBy);  						else q = q.OrderByDescending(x => x.CreatedBy);  						break;  					case Entity.Territory.FieldNameConstants.ModifiedDate:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedDate);  						else q = q.OrderByDescending(x => x.ModifiedDate);  						break;  					case Entity.Territory.FieldNameConstants.ModifiedBy:  						if (ob.Ascending) q = q.OrderBy(x => x.ModifiedBy);  						else q = q.OrderByDescending(x => x.ModifiedBy);  						break;  				}
Missing Default,Acme.Northwind.EFDAL.Entity,Alphabeticallistofproducts,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Alphabeticallistofproducts.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.CategoryID:  					return 0;  				case FieldNameConstants.CategoryName:  					return 30;  				case FieldNameConstants.Discontinued:  					return 0;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.QuantityPerUnit:  					return 40;  				case FieldNameConstants.ReorderLevel:  					return 0;  				case FieldNameConstants.SupplierID:  					return 0;  				case FieldNameConstants.UnitPrice:  					return 0;  				case FieldNameConstants.UnitsInStock:  					return 0;  				case FieldNameConstants.UnitsOnOrder:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Alphabeticallistofproducts,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Alphabeticallistofproducts.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.CategoryID: return typeof(int?);  				case FieldNameConstants.CategoryName: return typeof(string);  				case FieldNameConstants.Discontinued: return typeof(bool);  				case FieldNameConstants.ProductID: return typeof(int);  				case FieldNameConstants.ProductName: return typeof(string);  				case FieldNameConstants.QuantityPerUnit: return typeof(string);  				case FieldNameConstants.ReorderLevel: return typeof(short?);  				case FieldNameConstants.SupplierID: return typeof(int?);  				case FieldNameConstants.UnitPrice: return typeof(decimal?);  				case FieldNameConstants.UnitsInStock: return typeof(short?);  				case FieldNameConstants.UnitsOnOrder: return typeof(short?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Alphabeticallistofproducts,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Alphabeticallistofproducts.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "CategoryID": return "CategoryID";  				case "CategoryName": return "CategoryName";  				case "Discontinued": return "Discontinued";  				case "ProductID": return "ProductID";  				case "ProductName": return "ProductName";  				case "QuantityPerUnit": return "QuantityPerUnit";  				case "ReorderLevel": return "ReorderLevel";  				case "SupplierID": return "SupplierID";  				case "UnitPrice": return "UnitPrice";  				case "UnitsInStock": return "UnitsInStock";  				case "UnitsOnOrder": return "UnitsOnOrder";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CategorizedSales,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CategorizedSales.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.ProductName:  					return 50;  				case FieldNameConstants.TotalPurchase:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CategorizedSales,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CategorizedSales.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.ProductName: return typeof(string);  				case FieldNameConstants.TotalPurchase: return typeof(decimal?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.CategoryID:  					return 0;  				case FieldNameConstants.CategoryName:  					return 15;  				case FieldNameConstants.Description:  					return int.MaxValue;  				case FieldNameConstants.Picture:  					return int.MaxValue;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.CategoryID: return typeof(int);  				case FieldNameConstants.CategoryName: return typeof(string);  				case FieldNameConstants.Description: return typeof(string);  				case FieldNameConstants.Picture: return typeof(System.Byte[]);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Category,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Category.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "CategoryID": return "CategoryID";  				case "CategoryName": return "CategoryName";  				case "Description": return "Description";  				case "Picture": return "Picture";  				case "CreatedBy": return "CreatedBy";  				case "CreatedDate": return "CreatedDate";  				case "ModifiedBy": return "ModifiedBy";  				case "ModifiedDate": return "ModifiedDate";  				case "Timestamp": return "Timestamp";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CategorySalesfor1997,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CategorySalesfor1997.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.CategoryName:  					return 30;  				case FieldNameConstants.CategorySales:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CategorySalesfor1997,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CategorySalesfor1997.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.CategoryName: return typeof(string);  				case FieldNameConstants.CategorySales: return typeof(decimal?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CategorySalesfor1997,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CategorySalesfor1997.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "CategoryName": return "CategoryName";  				case "CategorySales": return "CategorySales";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CurrentProductList,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CurrentProductList.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CurrentProductList,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CurrentProductList.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.ProductID: return typeof(int);  				case FieldNameConstants.ProductName: return typeof(string);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CurrentProductList,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CurrentProductList.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "ProductID": return "ProductID";  				case "ProductName": return "ProductName";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.Address: return typeof(string);  				case FieldNameConstants.City: return typeof(string);  				case FieldNameConstants.CompanyName: return typeof(string);  				case FieldNameConstants.ContactName: return typeof(string);  				case FieldNameConstants.ContactTitle: return typeof(string);  				case FieldNameConstants.Country: return typeof(string);  				case FieldNameConstants.CustomerID: return typeof(string);  				case FieldNameConstants.Fax: return typeof(string);  				case FieldNameConstants.Phone: return typeof(string);  				case FieldNameConstants.PostalCode: return typeof(string);  				case FieldNameConstants.Region: return typeof(string);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Customer,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Customer.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "Address": return "Address";  				case "City": return "City";  				case "CompanyName": return "CompanyName";  				case "ContactName": return "ContactName";  				case "ContactTitle": return "ContactTitle";  				case "Country": return "Country";  				case "CustomerID": return "CustomerID";  				case "Fax": return "Fax";  				case "Phone": return "Phone";  				case "PostalCode": return "PostalCode";  				case "Region": return "Region";  				case "CreatedBy": return "CreatedBy";  				case "CreatedDate": return "CreatedDate";  				case "ModifiedBy": return "ModifiedBy";  				case "ModifiedDate": return "ModifiedDate";  				case "Timestamp": return "Timestamp";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CustomerandSuppliersbyCity,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerandSuppliersbyCity.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.ContactName:  					return 60;  				case FieldNameConstants.Relationship:  					return 9;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CustomerandSuppliersbyCity,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerandSuppliersbyCity.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.City: return typeof(string);  				case FieldNameConstants.CompanyName: return typeof(string);  				case FieldNameConstants.ContactName: return typeof(string);  				case FieldNameConstants.Relationship: return typeof(string);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CustomerandSuppliersbyCity,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerandSuppliersbyCity.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "City": return "City";  				case "CompanyName": return "CompanyName";  				case "ContactName": return "ContactName";  				case "Relationship": return "Relationship";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.CustomerTypeID:  					return 10;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.CustomerID: return typeof(string);  				case FieldNameConstants.CustomerTypeID: return typeof(string);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CustomerCustomerDemo,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerCustomerDemo.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "CustomerID": return "CustomerID";  				case "CustomerTypeID": return "CustomerTypeID";  				case "CreatedBy": return "CreatedBy";  				case "CreatedDate": return "CreatedDate";  				case "ModifiedBy": return "ModifiedBy";  				case "ModifiedDate": return "ModifiedDate";  				case "Timestamp": return "Timestamp";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.CustomerDesc:  					return int.MaxValue;  				case FieldNameConstants.CustomerTypeID:  					return 10;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.CustomerDesc: return typeof(string);  				case FieldNameConstants.CustomerTypeID: return typeof(string);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CustomerDemographic,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustomerDemographic.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "CustomerDesc": return "CustomerDesc";  				case "CustomerTypeID": return "CustomerTypeID";  				case "CreatedBy": return "CreatedBy";  				case "CreatedDate": return "CreatedDate";  				case "ModifiedBy": return "ModifiedBy";  				case "ModifiedDate": return "ModifiedDate";  				case "Timestamp": return "Timestamp";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CustOrderHist,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrderHist.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.ProductName:  					return 50;  				case FieldNameConstants.Total:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CustOrderHist,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrderHist.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.ProductName: return typeof(string);  				case FieldNameConstants.Total: return typeof(int?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CustOrdersDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrdersDetail.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.ProductName:  					return 50;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CustOrdersDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrdersDetail.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.Discount: return typeof(int?);  				case FieldNameConstants.ExtendedPrice: return typeof(decimal?);  				case FieldNameConstants.ProductName: return typeof(string);  				case FieldNameConstants.Quantity: return typeof(short?);  				case FieldNameConstants.UnitPrice: return typeof(decimal?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CustOrdersOrders,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrdersOrders.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShippedDate:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,CustOrdersOrders,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\CustOrdersOrders.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.OrderDate: return typeof(DateTime?);  				case FieldNameConstants.OrderID: return typeof(int?);  				case FieldNameConstants.RequiredDate: return typeof(DateTime?);  				case FieldNameConstants.ShippedDate: return typeof(DateTime?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.BirthDate:  					return 0;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Extension:  					return 4;  				case FieldNameConstants.FirstName:  					return 10;  				case FieldNameConstants.HireDate:  					return 0;  				case FieldNameConstants.HomePhone:  					return 24;  				case FieldNameConstants.LastName:  					return 20;  				case FieldNameConstants.Notes:  					return int.MaxValue;  				case FieldNameConstants.Photo:  					return int.MaxValue;  				case FieldNameConstants.PhotoPath:  					return 255;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.ReportsTo:  					return 0;  				case FieldNameConstants.Title:  					return 30;  				case FieldNameConstants.TitleOfCourtesy:  					return 25;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.Address: return typeof(string);  				case FieldNameConstants.BirthDate: return typeof(DateTime?);  				case FieldNameConstants.City: return typeof(string);  				case FieldNameConstants.Country: return typeof(string);  				case FieldNameConstants.EmployeeID: return typeof(int);  				case FieldNameConstants.Extension: return typeof(string);  				case FieldNameConstants.FirstName: return typeof(string);  				case FieldNameConstants.HireDate: return typeof(DateTime?);  				case FieldNameConstants.HomePhone: return typeof(string);  				case FieldNameConstants.LastName: return typeof(string);  				case FieldNameConstants.Notes: return typeof(string);  				case FieldNameConstants.Photo: return typeof(System.Byte[]);  				case FieldNameConstants.PhotoPath: return typeof(string);  				case FieldNameConstants.PostalCode: return typeof(string);  				case FieldNameConstants.Region: return typeof(string);  				case FieldNameConstants.ReportsTo: return typeof(int?);  				case FieldNameConstants.Title: return typeof(string);  				case FieldNameConstants.TitleOfCourtesy: return typeof(string);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Employee,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Employee.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "Address": return "Address";  				case "BirthDate": return "BirthDate";  				case "City": return "City";  				case "Country": return "Country";  				case "EmployeeID": return "EmployeeID";  				case "Extension": return "Extension";  				case "FirstName": return "FirstName";  				case "HireDate": return "HireDate";  				case "HomePhone": return "HomePhone";  				case "LastName": return "LastName";  				case "Notes": return "Notes";  				case "Photo": return "Photo";  				case "PhotoPath": return "PhotoPath";  				case "PostalCode": return "PostalCode";  				case "Region": return "Region";  				case "ReportsTo": return "ReportsTo";  				case "Title": return "Title";  				case "TitleOfCourtesy": return "TitleOfCourtesy";  				case "CreatedBy": return "CreatedBy";  				case "CreatedDate": return "CreatedDate";  				case "ModifiedBy": return "ModifiedBy";  				case "ModifiedDate": return "ModifiedDate";  				case "Timestamp": return "Timestamp";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,EmployeeSalesbyCountry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeSalesbyCountry.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.Country:  					return 50;  				case FieldNameConstants.FirstName:  					return 50;  				case FieldNameConstants.LastName:  					return 50;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.SaleAmount:  					return 0;  				case FieldNameConstants.ShippedDate:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,EmployeeSalesbyCountry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeSalesbyCountry.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.Country: return typeof(string);  				case FieldNameConstants.FirstName: return typeof(string);  				case FieldNameConstants.LastName: return typeof(string);  				case FieldNameConstants.OrderID: return typeof(int?);  				case FieldNameConstants.SaleAmount: return typeof(decimal?);  				case FieldNameConstants.ShippedDate: return typeof(DateTime?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.TerritoryID:  					return 20;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.EmployeeID: return typeof(int);  				case FieldNameConstants.TerritoryID: return typeof(string);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,EmployeeTerritorie,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\EmployeeTerritorie.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "EmployeeID": return "EmployeeID";  				case "TerritoryID": return "TerritoryID";  				case "CreatedBy": return "CreatedBy";  				case "CreatedDate": return "CreatedDate";  				case "ModifiedBy": return "ModifiedBy";  				case "ModifiedDate": return "ModifiedDate";  				case "Timestamp": return "Timestamp";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.CustomerName:  					return 80;  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.Salesperson:  					return 62;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipperName:  					return 80;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.Address: return typeof(string);  				case FieldNameConstants.City: return typeof(string);  				case FieldNameConstants.Country: return typeof(string);  				case FieldNameConstants.CustomerID: return typeof(string);  				case FieldNameConstants.CustomerName: return typeof(string);  				case FieldNameConstants.Discount: return typeof(System.Single);  				case FieldNameConstants.ExtendedPrice: return typeof(decimal?);  				case FieldNameConstants.Freight: return typeof(decimal?);  				case FieldNameConstants.OrderDate: return typeof(DateTime?);  				case FieldNameConstants.OrderID: return typeof(int);  				case FieldNameConstants.PostalCode: return typeof(string);  				case FieldNameConstants.ProductID: return typeof(int);  				case FieldNameConstants.ProductName: return typeof(string);  				case FieldNameConstants.Quantity: return typeof(short);  				case FieldNameConstants.Region: return typeof(string);  				case FieldNameConstants.RequiredDate: return typeof(DateTime?);  				case FieldNameConstants.Salesperson: return typeof(string);  				case FieldNameConstants.ShipAddress: return typeof(string);  				case FieldNameConstants.ShipCity: return typeof(string);  				case FieldNameConstants.ShipCountry: return typeof(string);  				case FieldNameConstants.ShipName: return typeof(string);  				case FieldNameConstants.ShippedDate: return typeof(DateTime?);  				case FieldNameConstants.ShipperName: return typeof(string);  				case FieldNameConstants.ShipPostalCode: return typeof(string);  				case FieldNameConstants.ShipRegion: return typeof(string);  				case FieldNameConstants.UnitPrice: return typeof(decimal);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Invoices,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Invoices.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "Address": return "Address";  				case "City": return "City";  				case "Country": return "Country";  				case "CustomerID": return "CustomerID";  				case "CustomerName": return "CustomerName";  				case "Discount": return "Discount";  				case "ExtendedPrice": return "ExtendedPrice";  				case "Freight": return "Freight";  				case "OrderDate": return "OrderDate";  				case "OrderID": return "OrderID";  				case "PostalCode": return "PostalCode";  				case "ProductID": return "ProductID";  				case "ProductName": return "ProductName";  				case "Quantity": return "Quantity";  				case "Region": return "Region";  				case "RequiredDate": return "RequiredDate";  				case "Salesperson": return "Salesperson";  				case "ShipAddress": return "ShipAddress";  				case "ShipCity": return "ShipCity";  				case "ShipCountry": return "ShipCountry";  				case "ShipName": return "ShipName";  				case "ShippedDate": return "ShippedDate";  				case "ShipperName": return "ShipperName";  				case "ShipPostalCode": return "ShipPostalCode";  				case "ShipRegion": return "ShipRegion";  				case "UnitPrice": return "UnitPrice";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.CustomerID:  					return 5;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 60;  				case FieldNameConstants.ShipCity:  					return 15;  				case FieldNameConstants.ShipCountry:  					return 15;  				case FieldNameConstants.ShipName:  					return 40;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 10;  				case FieldNameConstants.ShipRegion:  					return 15;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.CustomerID: return typeof(string);  				case FieldNameConstants.EmployeeID: return typeof(int?);  				case FieldNameConstants.Freight: return typeof(decimal?);  				case FieldNameConstants.OrderDate: return typeof(DateTime?);  				case FieldNameConstants.OrderID: return typeof(int);  				case FieldNameConstants.RequiredDate: return typeof(DateTime?);  				case FieldNameConstants.ShipAddress: return typeof(string);  				case FieldNameConstants.ShipCity: return typeof(string);  				case FieldNameConstants.ShipCountry: return typeof(string);  				case FieldNameConstants.ShipName: return typeof(string);  				case FieldNameConstants.ShippedDate: return typeof(DateTime?);  				case FieldNameConstants.ShipPostalCode: return typeof(string);  				case FieldNameConstants.ShipRegion: return typeof(string);  				case FieldNameConstants.ShipVia: return typeof(int?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Order,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Order.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "CustomerID": return "CustomerID";  				case "EmployeeID": return "EmployeeID";  				case "Freight": return "Freight";  				case "OrderDate": return "OrderDate";  				case "OrderID": return "OrderID";  				case "RequiredDate": return "RequiredDate";  				case "ShipAddress": return "ShipAddress";  				case "ShipCity": return "ShipCity";  				case "ShipCountry": return "ShipCountry";  				case "ShipName": return "ShipName";  				case "ShippedDate": return "ShippedDate";  				case "ShipPostalCode": return "ShipPostalCode";  				case "ShipRegion": return "ShipRegion";  				case "ShipVia": return "ShipVia";  				case "CreatedBy": return "CreatedBy";  				case "CreatedDate": return "CreatedDate";  				case "ModifiedBy": return "ModifiedBy";  				case "ModifiedDate": return "ModifiedDate";  				case "Timestamp": return "Timestamp";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.Discount: return typeof(System.Single);  				case FieldNameConstants.OrderID: return typeof(int);  				case FieldNameConstants.ProductID: return typeof(int);  				case FieldNameConstants.Quantity: return typeof(short);  				case FieldNameConstants.UnitPrice: return typeof(decimal);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,OrderDetail,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetail.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "Discount": return "Discount";  				case "OrderID": return "OrderID";  				case "ProductID": return "ProductID";  				case "Quantity": return "Quantity";  				case "UnitPrice": return "UnitPrice";  				case "CreatedBy": return "CreatedBy";  				case "CreatedDate": return "CreatedDate";  				case "ModifiedBy": return "ModifiedBy";  				case "ModifiedDate": return "ModifiedDate";  				case "Timestamp": return "Timestamp";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,OrderDetailsExtended,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetailsExtended.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.Discount:  					return 0;  				case FieldNameConstants.ExtendedPrice:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.Quantity:  					return 0;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,OrderDetailsExtended,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetailsExtended.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.Discount: return typeof(System.Single);  				case FieldNameConstants.ExtendedPrice: return typeof(decimal?);  				case FieldNameConstants.OrderID: return typeof(int);  				case FieldNameConstants.ProductID: return typeof(int);  				case FieldNameConstants.ProductName: return typeof(string);  				case FieldNameConstants.Quantity: return typeof(short);  				case FieldNameConstants.UnitPrice: return typeof(decimal);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,OrderDetailsExtended,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderDetailsExtended.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "Discount": return "Discount";  				case "ExtendedPrice": return "ExtendedPrice";  				case "OrderID": return "OrderID";  				case "ProductID": return "ProductID";  				case "ProductName": return "ProductName";  				case "Quantity": return "Quantity";  				case "UnitPrice": return "UnitPrice";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.Address:  					return 120;  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  				case FieldNameConstants.EmployeeID:  					return 0;  				case FieldNameConstants.Freight:  					return 0;  				case FieldNameConstants.OrderDate:  					return 0;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.PostalCode:  					return 20;  				case FieldNameConstants.Region:  					return 30;  				case FieldNameConstants.RequiredDate:  					return 0;  				case FieldNameConstants.ShipAddress:  					return 120;  				case FieldNameConstants.ShipCity:  					return 30;  				case FieldNameConstants.ShipCountry:  					return 30;  				case FieldNameConstants.ShipName:  					return 80;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.ShipPostalCode:  					return 20;  				case FieldNameConstants.ShipRegion:  					return 30;  				case FieldNameConstants.ShipVia:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.Address: return typeof(string);  				case FieldNameConstants.City: return typeof(string);  				case FieldNameConstants.CompanyName: return typeof(string);  				case FieldNameConstants.Country: return typeof(string);  				case FieldNameConstants.CustomerID: return typeof(string);  				case FieldNameConstants.EmployeeID: return typeof(int?);  				case FieldNameConstants.Freight: return typeof(decimal?);  				case FieldNameConstants.OrderDate: return typeof(DateTime?);  				case FieldNameConstants.OrderID: return typeof(int);  				case FieldNameConstants.PostalCode: return typeof(string);  				case FieldNameConstants.Region: return typeof(string);  				case FieldNameConstants.RequiredDate: return typeof(DateTime?);  				case FieldNameConstants.ShipAddress: return typeof(string);  				case FieldNameConstants.ShipCity: return typeof(string);  				case FieldNameConstants.ShipCountry: return typeof(string);  				case FieldNameConstants.ShipName: return typeof(string);  				case FieldNameConstants.ShippedDate: return typeof(DateTime?);  				case FieldNameConstants.ShipPostalCode: return typeof(string);  				case FieldNameConstants.ShipRegion: return typeof(string);  				case FieldNameConstants.ShipVia: return typeof(int?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,OrdersQry,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrdersQry.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "Address": return "Address";  				case "City": return "City";  				case "CompanyName": return "CompanyName";  				case "Country": return "Country";  				case "CustomerID": return "CustomerID";  				case "EmployeeID": return "EmployeeID";  				case "Freight": return "Freight";  				case "OrderDate": return "OrderDate";  				case "OrderID": return "OrderID";  				case "PostalCode": return "PostalCode";  				case "Region": return "Region";  				case "RequiredDate": return "RequiredDate";  				case "ShipAddress": return "ShipAddress";  				case "ShipCity": return "ShipCity";  				case "ShipCountry": return "ShipCountry";  				case "ShipName": return "ShipName";  				case "ShippedDate": return "ShippedDate";  				case "ShipPostalCode": return "ShipPostalCode";  				case "ShipRegion": return "ShipRegion";  				case "ShipVia": return "ShipVia";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,OrderSubtotals,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderSubtotals.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.Subtotal:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,OrderSubtotals,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderSubtotals.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.OrderID: return typeof(int);  				case FieldNameConstants.Subtotal: return typeof(decimal?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,OrderSubtotals,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\OrderSubtotals.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "OrderID": return "OrderID";  				case "Subtotal": return "Subtotal";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.CategoryID:  					return 0;  				case FieldNameConstants.Discontinued:  					return 0;  				case FieldNameConstants.ProductID:  					return 0;  				case FieldNameConstants.ProductName:  					return 40;  				case FieldNameConstants.QuantityPerUnit:  					return 20;  				case FieldNameConstants.ReorderLevel:  					return 0;  				case FieldNameConstants.SupplierID:  					return 0;  				case FieldNameConstants.UnitPrice:  					return 0;  				case FieldNameConstants.UnitsInStock:  					return 0;  				case FieldNameConstants.UnitsOnOrder:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.CategoryID: return typeof(int?);  				case FieldNameConstants.Discontinued: return typeof(bool);  				case FieldNameConstants.ProductID: return typeof(int);  				case FieldNameConstants.ProductName: return typeof(string);  				case FieldNameConstants.QuantityPerUnit: return typeof(string);  				case FieldNameConstants.ReorderLevel: return typeof(short?);  				case FieldNameConstants.SupplierID: return typeof(int?);  				case FieldNameConstants.UnitPrice: return typeof(decimal?);  				case FieldNameConstants.UnitsInStock: return typeof(short?);  				case FieldNameConstants.UnitsOnOrder: return typeof(short?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Product,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Product.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "CategoryID": return "CategoryID";  				case "Discontinued": return "Discontinued";  				case "ProductID": return "ProductID";  				case "ProductName": return "ProductName";  				case "QuantityPerUnit": return "QuantityPerUnit";  				case "ReorderLevel": return "ReorderLevel";  				case "SupplierID": return "SupplierID";  				case "UnitPrice": return "UnitPrice";  				case "UnitsInStock": return "UnitsInStock";  				case "UnitsOnOrder": return "UnitsOnOrder";  				case "CreatedBy": return "CreatedBy";  				case "CreatedDate": return "CreatedDate";  				case "ModifiedBy": return "ModifiedBy";  				case "ModifiedDate": return "ModifiedDate";  				case "Timestamp": return "Timestamp";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,ProductsAboveAveragePrice,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductsAboveAveragePrice.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,ProductsAboveAveragePrice,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductsAboveAveragePrice.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.ProductName: return typeof(string);  				case FieldNameConstants.UnitPrice: return typeof(decimal?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,ProductsAboveAveragePrice,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductsAboveAveragePrice.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "ProductName": return "ProductName";  				case "UnitPrice": return "UnitPrice";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,ProductSalesfor1997,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductSalesfor1997.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.CategoryName:  					return 30;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.ProductSales:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,ProductSalesfor1997,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductSalesfor1997.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.CategoryName: return typeof(string);  				case FieldNameConstants.ProductName: return typeof(string);  				case FieldNameConstants.ProductSales: return typeof(decimal?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,ProductSalesfor1997,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductSalesfor1997.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "CategoryName": return "CategoryName";  				case "ProductName": return "ProductName";  				case "ProductSales": return "ProductSales";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,ProductsbyCategory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductsbyCategory.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.CategoryName:  					return 30;  				case FieldNameConstants.Discontinued:  					return 0;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.QuantityPerUnit:  					return 40;  				case FieldNameConstants.UnitsInStock:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,ProductsbyCategory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductsbyCategory.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.CategoryName: return typeof(string);  				case FieldNameConstants.Discontinued: return typeof(bool);  				case FieldNameConstants.ProductName: return typeof(string);  				case FieldNameConstants.QuantityPerUnit: return typeof(string);  				case FieldNameConstants.UnitsInStock: return typeof(short?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,ProductsbyCategory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\ProductsbyCategory.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "CategoryName": return "CategoryName";  				case "Discontinued": return "Discontinued";  				case "ProductName": return "ProductName";  				case "QuantityPerUnit": return "QuantityPerUnit";  				case "UnitsInStock": return "UnitsInStock";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,QuarterlyOrders,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\QuarterlyOrders.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.City:  					return 30;  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.Country:  					return 30;  				case FieldNameConstants.CustomerID:  					return 10;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,QuarterlyOrders,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\QuarterlyOrders.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.City: return typeof(string);  				case FieldNameConstants.CompanyName: return typeof(string);  				case FieldNameConstants.Country: return typeof(string);  				case FieldNameConstants.CustomerID: return typeof(string);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,QuarterlyOrders,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\QuarterlyOrders.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "City": return "City";  				case "CompanyName": return "CompanyName";  				case "Country": return "Country";  				case "CustomerID": return "CustomerID";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.RegionDescription:  					return 50;  				case FieldNameConstants.RegionID:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.RegionDescription: return typeof(string);  				case FieldNameConstants.RegionID: return typeof(int);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Region,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Region.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "RegionDescription": return "RegionDescription";  				case "RegionID": return "RegionID";  				case "CreatedBy": return "CreatedBy";  				case "CreatedDate": return "CreatedDate";  				case "ModifiedBy": return "ModifiedBy";  				case "ModifiedDate": return "ModifiedDate";  				case "Timestamp": return "Timestamp";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,SalesbyCategory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesbyCategory.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.CategoryID:  					return 0;  				case FieldNameConstants.CategoryName:  					return 30;  				case FieldNameConstants.ProductName:  					return 80;  				case FieldNameConstants.ProductSales:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,SalesbyCategory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesbyCategory.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.CategoryID: return typeof(int);  				case FieldNameConstants.CategoryName: return typeof(string);  				case FieldNameConstants.ProductName: return typeof(string);  				case FieldNameConstants.ProductSales: return typeof(decimal?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,SalesbyCategory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesbyCategory.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "CategoryID": return "CategoryID";  				case "CategoryName": return "CategoryName";  				case "ProductName": return "ProductName";  				case "ProductSales": return "ProductSales";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,SalesbyYear,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesbyYear.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.Subtotal:  					return 0;  				case FieldNameConstants.Year:  					return 50;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,SalesbyYear,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesbyYear.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.OrderID: return typeof(int?);  				case FieldNameConstants.ShippedDate: return typeof(DateTime?);  				case FieldNameConstants.Subtotal: return typeof(decimal?);  				case FieldNameConstants.Year: return typeof(string);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,SalesTotalsbyAmount,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesTotalsbyAmount.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.CompanyName:  					return 80;  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.SaleAmount:  					return 0;  				case FieldNameConstants.ShippedDate:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,SalesTotalsbyAmount,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesTotalsbyAmount.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.CompanyName: return typeof(string);  				case FieldNameConstants.OrderID: return typeof(int);  				case FieldNameConstants.SaleAmount: return typeof(decimal?);  				case FieldNameConstants.ShippedDate: return typeof(DateTime?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,SalesTotalsbyAmount,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SalesTotalsbyAmount.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "CompanyName": return "CompanyName";  				case "OrderID": return "OrderID";  				case "SaleAmount": return "SaleAmount";  				case "ShippedDate": return "ShippedDate";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.ShipperID:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.CompanyName: return typeof(string);  				case FieldNameConstants.Phone: return typeof(string);  				case FieldNameConstants.ShipperID: return typeof(int);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Shipper,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Shipper.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "CompanyName": return "CompanyName";  				case "Phone": return "Phone";  				case "ShipperID": return "ShipperID";  				case "CreatedBy": return "CreatedBy";  				case "CreatedDate": return "CreatedDate";  				case "ModifiedBy": return "ModifiedBy";  				case "ModifiedDate": return "ModifiedDate";  				case "Timestamp": return "Timestamp";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,SummaryofSalesbyQuarter,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SummaryofSalesbyQuarter.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.Subtotal:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,SummaryofSalesbyQuarter,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SummaryofSalesbyQuarter.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.OrderID: return typeof(int);  				case FieldNameConstants.ShippedDate: return typeof(DateTime?);  				case FieldNameConstants.Subtotal: return typeof(decimal?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,SummaryofSalesbyQuarter,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SummaryofSalesbyQuarter.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "OrderID": return "OrderID";  				case "ShippedDate": return "ShippedDate";  				case "Subtotal": return "Subtotal";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,SummaryofSalesbyYear,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SummaryofSalesbyYear.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.OrderID:  					return 0;  				case FieldNameConstants.ShippedDate:  					return 0;  				case FieldNameConstants.Subtotal:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,SummaryofSalesbyYear,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SummaryofSalesbyYear.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.OrderID: return typeof(int);  				case FieldNameConstants.ShippedDate: return typeof(DateTime?);  				case FieldNameConstants.Subtotal: return typeof(decimal?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,SummaryofSalesbyYear,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\SummaryofSalesbyYear.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "OrderID": return "OrderID";  				case "ShippedDate": return "ShippedDate";  				case "Subtotal": return "Subtotal";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.Address:  					return 60;  				case FieldNameConstants.City:  					return 15;  				case FieldNameConstants.CompanyName:  					return 40;  				case FieldNameConstants.ContactName:  					return 30;  				case FieldNameConstants.ContactTitle:  					return 30;  				case FieldNameConstants.Country:  					return 15;  				case FieldNameConstants.Fax:  					return 24;  				case FieldNameConstants.HomePage:  					return int.MaxValue;  				case FieldNameConstants.Phone:  					return 24;  				case FieldNameConstants.PostalCode:  					return 10;  				case FieldNameConstants.Region:  					return 15;  				case FieldNameConstants.SupplierID:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.Address: return typeof(string);  				case FieldNameConstants.City: return typeof(string);  				case FieldNameConstants.CompanyName: return typeof(string);  				case FieldNameConstants.ContactName: return typeof(string);  				case FieldNameConstants.ContactTitle: return typeof(string);  				case FieldNameConstants.Country: return typeof(string);  				case FieldNameConstants.Fax: return typeof(string);  				case FieldNameConstants.HomePage: return typeof(string);  				case FieldNameConstants.Phone: return typeof(string);  				case FieldNameConstants.PostalCode: return typeof(string);  				case FieldNameConstants.Region: return typeof(string);  				case FieldNameConstants.SupplierID: return typeof(int);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Supplier,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Supplier.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "Address": return "Address";  				case "City": return "City";  				case "CompanyName": return "CompanyName";  				case "ContactName": return "ContactName";  				case "ContactTitle": return "ContactTitle";  				case "Country": return "Country";  				case "Fax": return "Fax";  				case "HomePage": return "HomePage";  				case "Phone": return "Phone";  				case "PostalCode": return "PostalCode";  				case "Region": return "Region";  				case "SupplierID": return "SupplierID";  				case "CreatedBy": return "CreatedBy";  				case "CreatedDate": return "CreatedDate";  				case "ModifiedBy": return "ModifiedBy";  				case "ModifiedDate": return "ModifiedDate";  				case "Timestamp": return "Timestamp";  			}
Missing Default,Acme.Northwind.EFDAL.Entity,TenMostExpensiveProducts,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\TenMostExpensiveProducts.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.Products:  					return 50;  				case FieldNameConstants.UnitPrice:  					return 0;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,TenMostExpensiveProducts,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\TenMostExpensiveProducts.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.Products: return typeof(string);  				case FieldNameConstants.UnitPrice: return typeof(decimal?);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetMaxLength,The following switch statement is missing a default case: switch (field)  			{  				case FieldNameConstants.RegionID:  					return 0;  				case FieldNameConstants.TerritoryDescription:  					return 50;  				case FieldNameConstants.TerritoryID:  					return 20;  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetFieldType,The following switch statement is missing a default case: switch ((FieldNameConstants)field)  			{  				case FieldNameConstants.RegionID: return typeof(int);  				case FieldNameConstants.TerritoryDescription: return typeof(string);  				case FieldNameConstants.TerritoryID: return typeof(string);  			}
Missing Default,Acme.Northwind.EFDAL.Entity,Territory,C:\repos\nHydrate_nHydrate\Samples\Northwind\Acme.Northwind.EFDAL\Entity\Territory.cs,GetDatabaseFieldName,The following switch statement is missing a default case: switch (field)  			{  				case "RegionID": return "RegionID";  				case "TerritoryDescription": return "TerritoryDescription";  				case "TerritoryID": return "TerritoryID";  				case "CreatedBy": return "CreatedBy";  				case "CreatedDate": return "CreatedDate";  				case "ModifiedBy": return "ModifiedBy";  				case "ModifiedDate": return "ModifiedDate";  				case "Timestamp": return "Timestamp";  			}
