Implementation smell,Namespace,Class,File,Method,Description
Long Method,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendSeqId,The method has 142 lines of code.
Long Method,nHydrate.Generator.EFDAL.Mocks.Generators.MockObjectSets,MockObjectSetGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\MockObjectSet\MockObjectSetGeneratedTemplate.cs,GenerateContent,The method has 132 lines of code.
Long Method,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The method has 360 lines of code.
Complex Method,nHydrate.Generator.EFDAL.Mocks,ColumnExtension,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\HelperExtension.cs,EFCodeType,Cyclomatic complexity of the method is 29
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedGenerator,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedGenerator.cs,Generate,The length of the statement  "            var eventArgs = new ProjectItemGeneratedEventArgs(template.FileName' template.FileContent' ProjectName' fullParentName' this' true); " is 132.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,GenerateContent,The length of the statement  "                sb.AppendLine("	[System.CodeDom.Compiler.GeneratedCode(\"nHydrateModelGenerator\"' \"" + _model.ModelToolVersion + "\")]"); " is 123.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,GenerateContent,The length of the statement  "                sb.AppendLine("	public partial class " + _model.ProjectName + "Entities : " + this.DefaultNamespace + ".EFDAL.Interfaces" + ".I" + _model.ProjectName + "Entities' System.IDisposable' nHydrate.EFCore.DataAccess.IContext"); " is 221.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,GenerateContent,The length of the statement  "                sb.AppendLine("		private static Dictionary<string' SequentialIdGenerator> _sequentialIdGeneratorCache = new Dictionary<string' SequentialIdGenerator>();"); " is 155.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendSeqId,The length of the statement  "            sb.AppendLine("	/// Generates Sequential Guid values that can be used for Sql Server UniqueIdentifiers to improve performance."); " is 129.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendSeqId,The length of the statement  "            sb.AppendLine("		private static readonly int[] SqlOrderMap = new int[] { 3' 2' 1' 0' 5' 4' 7' 6' 9' 8' 15' 14' 13' 12' 11' 10 };"); " is 131.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendAddDelete,The length of the statement  "            foreach (var table in _model.Database.Tables.Where(x => x.Generated && !x.AssociativeTable && !x.Immutable && x.TypedTable != TypedTableConstants.EnumOnly).OrderBy(x => x.PascalName)) " is 183.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendAddDelete,The length of the statement  "                sb.AppendLine("		public virtual void AddItem(" + this.DefaultNamespace + ".EFDAL.Interfaces.Entity.I" + table.PascalName + " entity)"); " is 135.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendAddDelete,The length of the statement  "                sb.AppendLine("			this." + table.PascalName + ".AddObject((" + this.DefaultNamespace + ".EFDAL.Interfaces.Entity.I" + table.PascalName + ")entity);"); " is 150.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendAddDelete,The length of the statement  "                sb.AppendLine("		void " + this.DefaultNamespace + ".EFDAL.Interfaces.I" + _model.ProjectName + "Entities.AddItem(" + this.DefaultNamespace + ".EFDAL.Interfaces.Entity.I" + table.PascalName + " entity)"); " is 203.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendAddDelete,The length of the statement  "            foreach (var table in _model.Database.Tables.Where(x => x.Generated && !x.AssociativeTable && !x.Immutable && x.TypedTable != TypedTableConstants.EnumOnly).OrderBy(x => x.PascalName)) " is 183.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendAddDelete,The length of the statement  "                sb.AppendLine("		public virtual void DeleteItem(" + this.DefaultNamespace + ".EFDAL.Interfaces.Entity.I" + table.PascalName + " entity)"); " is 138.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendAddDelete,The length of the statement  "                sb.AppendLine("			this." + table.PascalName + ".DeleteObject((" + this.DefaultNamespace + ".EFDAL.Interfaces.Entity.I" + table.PascalName + ")entity);"); " is 153.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendAddDelete,The length of the statement  "                sb.AppendLine("		void " + this.DefaultNamespace + ".EFDAL.Interfaces.I" + _model.ProjectName + "Entities.DeleteItem(" + this.DefaultNamespace + ".EFDAL.Interfaces.Entity.I" + table.PascalName + " entity)"); " is 206.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendProperties,The length of the statement  "            foreach (var table in _model.Database.Tables.Where(x => x.Generated && !x.AssociativeTable && (x.TypedTable != TypedTableConstants.EnumOnly)).OrderBy(x => x.PascalName)) " is 169.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendProperties,The length of the statement  "                sb.AppendLine("		public IObjectSet<" + this.InterfaceProjectNamespace + ".Entity.I" + table.PascalName + "> " + table.PascalName + ""); " is 135.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendProperties,The length of the statement  "                sb.AppendLine("			get { return _" + table.PascalName + " ?? (_" + table.PascalName + " = new MockObjectSet<" + this.InterfaceProjectNamespace + ".Entity.I" + table.PascalName + ">()); }"); " is 188.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendProperties,The length of the statement  "                sb.AppendLine("			set { _" + table.PascalName + " = value as MockObjectSet<" + this.InterfaceProjectNamespace + ".Entity.I" + table.PascalName + ">; }"); " is 153.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendProperties,The length of the statement  "                sb.AppendLine("		private MockObjectSet<" + this.InterfaceProjectNamespace + ".Entity.I" + table.PascalName + "> _" + table.PascalName + ";"); " is 141.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendProperties,The length of the statement  "                sb.AppendLine("		IQueryable<" + this.InterfaceProjectNamespace + ".Entity.I" + table.PascalName + "> " + this.InterfaceProjectNamespace + ".I" + _model.ProjectName + "Entities." + table.PascalName + ""); " is 203.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendVersioning,The length of the statement  "            sb.AppendLine("		/// <param name=\"checkVersion\">Determines if the check also includes the exact version of the model</param>"); " is 129.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendTableMapping,The length of the statement  "            foreach (var table in _model.Database.Tables.Where(x => x.Generated && !x.AssociativeTable && (x.TypedTable != TypedTableConstants.EnumOnly)).OrderBy(x => x.PascalName)) " is 169.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendGetEntityField,The length of the statement  "            foreach (var table in _model.Database.Tables.Where(x => x.Generated && !x.AssociativeTable && (x.TypedTable != TypedTableConstants.EnumOnly)).OrderBy(x => x.PascalName)) " is 169.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendGetEntityField,The length of the statement  "                sb.AppendLine("			if (field is " + this.DefaultNamespace + ".EFDAL.Interfaces.Entity." + table.PascalName + "FieldNameConstants)"); " is 131.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendGetEntityField,The length of the statement  "                sb.AppendLine("				switch ((" + this.DefaultNamespace + ".EFDAL.Interfaces.Entity." + table.PascalName + "FieldNameConstants)field)"); " is 134.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendGetEntityField,The length of the statement  "                    sb.AppendLine("					case " + this.DefaultNamespace + ".EFDAL.Interfaces.Entity." + table.PascalName + "FieldNameConstants." + column.PascalName + ": return typeof(" + column.GetCodeType() + ");"); " is 196.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendGetEntityField,The length of the statement  "            foreach (var table in _model.Database.Tables.Where(x => x.Generated && !x.AssociativeTable && (x.TypedTable != TypedTableConstants.EnumOnly)).OrderBy(x => x.PascalName)) " is 169.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendGetEntityField,The length of the statement  "                sb.AppendLine("			if (field is " + this.DefaultNamespace + ".EFDAL.Interfaces.Entity." + table.PascalName + "FieldNameConstants) return " + this.GetLocalNamespace() + ".EntityMappingConstants." + table.PascalName + ";"); " is 220.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendGetEntityField,The length of the statement  "            sb.AppendLine("		public static " + this.DefaultNamespace + ".EFDAL.Interfaces.IMetadata GetMetaData(" + this.GetLocalNamespace() + ".EntityMappingConstants table)"); " is 165.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendGetEntityField,The length of the statement  "            foreach (var table in _model.Database.Tables.Where(x => x.Generated && !x.AssociativeTable && (x.TypedTable != TypedTableConstants.EnumOnly)).OrderBy(x => x.PascalName)) " is 169.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendGetEntityField,The length of the statement  "                //sb.AppendLine("return Activator.CreateInstance(((System.ComponentModel.DataAnnotations.MetadataTypeAttribute)typeof(" + this.DefaultNamespace + ".EFDAL.Interfaces.Entity.I" + table.PascalName + ").GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.MetadataTypeAttribute)' true).FirstOrDefault()).MetadataClassType) as " + this.GetLocalNamespace() + ".Interfaces.Entity.Metadata." + table.PascalName + "Metadata;"); " is 430.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.Contexts,ContextGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\Contexts\ContextGeneratedTemplate.cs,AppendGetEntityField,The length of the statement  "                sb.AppendLine("return new " + this.DefaultNamespace + ".EFDAL.Interfaces.Entity.Metadata." + table.PascalName + "Metadata();"); " is 127.
Long Statement,nHydrate.Generator.EFDAL.Mocks,EFDALMockProjectGenerator,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\EFDALMockProjectGenerator.cs,OnAfterGenerate,The length of the statement  "				preBuildProperty.Value = "if not exist \"$(SolutionDir)bin\" mkdir \"$(SolutionDir)bin\"\r\nattrib -r \"$(SolutionDir)Bin\\*.*\""; " is 130.
Long Statement,nHydrate.Generator.EFDAL.Mocks,RelationExtension,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\HelperExtension.cs,GetDatabaseFkName,The length of the statement  "			//string fkName = string.Format("FK_{0}{1}{2}"' relation.DatabaseRoleName' parentEntity.DatabaseName' childEntity.DatabaseName); " is 128.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.MockObjectSets,MockObjectSetGeneratedGenerator,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\MockObjectSet\MockObjectSetGeneratedGenerator.cs,Generate,The length of the statement  "            var eventArgs = new ProjectItemGeneratedEventArgs(template.FileName' template.FileContent' ProjectName' fullParentName' this' true); " is 132.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedGenerator,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedGenerator.cs,Generate,The length of the statement  "            var eventArgs = new ProjectItemGeneratedEventArgs(template.FileName' template.FileContent' ProjectName' fullParentName' this' true); " is 132.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The length of the statement  "            sb.AppendLine("		public const string ERROR_DATA_TOO_BIG = \"The data '{0}' is too large for the {1} field which has a length of {2}.\";"); " is 138.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The length of the statement  "            sb.AppendLine("		public const string ERROR_INVALID_ENUM = \"The value '{0}' set to the '{1}' field is not valid based on the backing enumeration.\";"); " is 151.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The length of the statement  "            sb.AppendLine("					throw new Exception(\"An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly.\");"); " is 158.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The length of the statement  "            sb.AppendLine("					throw new Exception(\"An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly.\");"); " is 158.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The length of the statement  "            sb.AppendLine("					throw new Exception(\"An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly.\");"); " is 158.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The length of the statement  "            sb.AppendLine("		internal static DateTime SetValueHelperDateTimeNotNullableInternal(object newValue' string nullMessage)"); " is 123.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The length of the statement  "            sb.AppendLine("					throw new Exception(\"An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly.\");"); " is 158.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The length of the statement  "            sb.AppendLine("					throw new Exception(\"An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly.\");"); " is 158.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The length of the statement  "            sb.AppendLine("					throw new Exception(\"An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly.\");"); " is 158.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The length of the statement  "            sb.AppendLine("					throw new Exception(\"An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly.\");"); " is 158.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The length of the statement  "            sb.AppendLine("					throw new Exception(\"An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly.\");"); " is 158.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The length of the statement  "            sb.AppendLine("					throw new Exception(\"An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly.\");"); " is 158.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The length of the statement  "            sb.AppendLine("					throw new Exception(\"An invalid object of type 'IBusinessObject' was passed in. Perhaps a relationship was not enforced correctly.\");"); " is 158.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The length of the statement  "            sb.AppendLine("			catch (System.Data.DBConcurrencyException dbcex) { throw new ConcurrencyException(GlobalValues.ERROR_CONCURRENCY_FAILURE' dbcex); }"); " is 152.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The length of the statement  "            sb.AppendLine("			catch (System.Data.SqlClient.SqlException sqlexp) { if (sqlexp.Number == 547 || sqlexp.Number == 2627) throw new UniqueConstraintViolatedException(GlobalValues.ERROR_CONSTRAINT_FAILURE' sqlexp); else throw; }"); " is 229.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The length of the statement  "            sb.AppendLine("			catch (System.Data.DBConcurrencyException dbcex) { throw new ConcurrencyException(GlobalValues.ERROR_CONCURRENCY_FAILURE' dbcex); }"); " is 152.
Long Statement,nHydrate.Generator.EFDAL.Mocks.Generators.SQLHelper,SQLHelperGeneratedTemplate,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\Generators\SQLHelper\SQLHelperGeneratedTemplate.cs,AppendClass,The length of the statement  "            sb.AppendLine("			catch (System.Data.SqlClient.SqlException sqlexp) { if (sqlexp.Number == 547 || sqlexp.Number == 2627) throw new UniqueConstraintViolatedException(GlobalValues.ERROR_CONSTRAINT_FAILURE' sqlexp); else throw; }"); " is 229.
Complex Conditional,nHydrate.Generator.EFDAL.Mocks,ColumnExtension,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\HelperExtension.cs,EFGetDatabaseMaxLengthString,The conditional expression  "column.DataType == System.Data.SqlDbType.Binary ||  				column.DataType == System.Data.SqlDbType.Char ||  				column.DataType == System.Data.SqlDbType.NChar ||  				column.DataType == System.Data.SqlDbType.NVarChar ||  				column.DataType == System.Data.SqlDbType.VarBinary ||  				column.DataType == System.Data.SqlDbType.VarChar"  is complex.
Complex Conditional,nHydrate.Generator.EFDAL.Mocks,ColumnExtension,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\HelperExtension.cs,EFGetCodeMaxLengthString,The conditional expression  "column.DataType == System.Data.SqlDbType.Binary ||  				column.DataType == System.Data.SqlDbType.Char ||  				column.DataType == System.Data.SqlDbType.NChar ||  				column.DataType == System.Data.SqlDbType.NVarChar ||  				column.DataType == System.Data.SqlDbType.Timestamp ||  				column.DataType == System.Data.SqlDbType.VarBinary ||  				column.DataType == System.Data.SqlDbType.VarChar ||  				column.DataType == System.Data.SqlDbType.Xml"  is complex.
Complex Conditional,nHydrate.Generator.EFDAL.Mocks,ColumnExtension,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\HelperExtension.cs,EFUnicode,The conditional expression  "column.DataType == System.Data.SqlDbType.NChar ||  				column.DataType == System.Data.SqlDbType.NText ||  				column.DataType == System.Data.SqlDbType.NVarChar ||  				column.DataType == System.Data.SqlDbType.Xml"  is complex.
Complex Conditional,nHydrate.Generator.EFDAL.Mocks,ColumnExtension,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\HelperExtension.cs,EFIsFixedLength,The conditional expression  "column.DataType == System.Data.SqlDbType.Binary ||  				column.DataType == System.Data.SqlDbType.Char ||  				column.DataType == System.Data.SqlDbType.NChar ||  				column.DataType == System.Data.SqlDbType.Timestamp"  is complex.
Complex Conditional,nHydrate.Generator.EFDAL.Mocks,ColumnExtension,C:\research\architectureSmells\repos\nHydrate_nHydrate\Source\nHydrate.Generator.EFDAL.Mocks\HelperExtension.cs,EFIsFixedLength,The conditional expression  "column.DataType == System.Data.SqlDbType.Image ||  				column.DataType == System.Data.SqlDbType.NText ||  				column.DataType == System.Data.SqlDbType.NVarChar ||  				column.DataType == System.Data.SqlDbType.Text ||  				column.DataType == System.Data.SqlDbType.VarBinary ||  				column.DataType == System.Data.SqlDbType.VarChar ||  				column.DataType == System.Data.SqlDbType.Xml"  is complex.
