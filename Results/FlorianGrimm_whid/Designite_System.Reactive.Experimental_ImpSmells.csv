Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,System.Reactive.Linq,QueryLanguageEx,C:\repos\FlorianGrimm_whid\other\rx\Rx\NET\Source\System.Reactive.Experimental\Reactive\Linq\QueryLanguageEx.cs,Expand,The method has 7 parameters.
Long Parameter List,System.Reactive.Linq,QueryLanguageEx,C:\repos\FlorianGrimm_whid\other\rx\Rx\NET\Source\System.Reactive.Experimental\Reactive\Linq\QueryLanguageEx.cs,ForkJoin,The method has 8 parameters.
Long Parameter List,System.Reactive.Linq,QueryLanguageEx,C:\repos\FlorianGrimm_whid\other\rx\Rx\NET\Source\System.Reactive.Experimental\Reactive\Linq\QueryLanguageEx.cs,ManySelect,The method has 6 parameters.
Long Parameter List,System.Reactive.Linq,QueryLanguageEx,C:\repos\FlorianGrimm_whid\other\rx\Rx\NET\Source\System.Reactive.Experimental\Reactive\Linq\QueryLanguageEx.cs,Combine,The method has 6 parameters.
Long Statement,System.Reactive.Linq,QueryLanguageEx,C:\repos\FlorianGrimm_whid\other\rx\Rx\NET\Source\System.Reactive.Experimental\Reactive\Linq\QueryLanguageEx.cs,Combine,The length of the statement  "		leftSubscription.Disposable = leftSource.Materialize ().Select (x => Either<Notification<TLeft>' Notification<TRight>>.CreateLeft (x)).Synchronize (gate).Subscribe (combiner); " is 175.
Long Statement,System.Reactive.Linq,QueryLanguageEx,C:\repos\FlorianGrimm_whid\other\rx\Rx\NET\Source\System.Reactive.Experimental\Reactive\Linq\QueryLanguageEx.cs,Combine,The length of the statement  "		rightSubscription.Disposable = rightSource.Materialize ().Select (x => Either<Notification<TLeft>' Notification<TRight>>.CreateRight (x)).Synchronize (gate).Subscribe (combiner); " is 178.
Missing Default,System.Reactive.Linq,QueryLanguageEx,C:\repos\FlorianGrimm_whid\other\rx\Rx\NET\Source\System.Reactive.Experimental\Reactive\Linq\QueryLanguageEx.cs,ForkJoin,The following switch statement is missing a default case: switch (left.Kind) {  case NotificationKind.OnNext:  	hasLeft = true;  	lastLeft = left.Value;  	break;  case NotificationKind.OnError:  	rightSubscription.Dispose ();  	observer.OnError (left.Exception);  	break;  case NotificationKind.OnCompleted:  	leftStopped = true;  	if (rightStopped) {  		if (!hasLeft)  			observer.OnCompleted ();  		else if (!hasRight)  			observer.OnCompleted ();  		else {  			TResult result;  			try {  				result = resultSelector (lastLeft' lastRight);  			}  			catch (Exception exception) {  				observer.OnError (exception);  				return;  			}  			observer.OnNext (result);  			observer.OnCompleted ();  		}  	}  	break;  }  
Missing Default,System.Reactive.Linq,QueryLanguageEx,C:\repos\FlorianGrimm_whid\other\rx\Rx\NET\Source\System.Reactive.Experimental\Reactive\Linq\QueryLanguageEx.cs,ForkJoin,The following switch statement is missing a default case: switch (right.Kind) {  case NotificationKind.OnNext:  	hasRight = true;  	lastRight = right.Value;  	break;  case NotificationKind.OnError:  	leftSubscription.Dispose ();  	observer.OnError (right.Exception);  	break;  case NotificationKind.OnCompleted:  	rightStopped = true;  	if (leftStopped) {  		if (!hasLeft)  			observer.OnCompleted ();  		else if (!hasRight)  			observer.OnCompleted ();  		else {  			TResult result;  			try {  				result = resultSelector (lastLeft' lastRight);  			}  			catch (Exception exception) {  				observer.OnError (exception);  				return;  			}  			observer.OnNext (result);  			observer.OnCompleted ();  		}  	}  	break;  }  
