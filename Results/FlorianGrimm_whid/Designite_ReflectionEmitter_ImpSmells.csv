Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetAssembly,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetMethodFrom,Cyclomatic complexity of the method is 19
Complex Method,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,CallingConventionsMatch,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetGenericMethodFrom,Cyclomatic complexity of the method is 19
Long Identifier,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetMethod,The length of the parameter genericMethodInstanceReference is 30.
Long Identifier,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,TypesMatch,The length of the parameter genericMethodParameterReference is 31.
Long Identifier,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetGenericMethodInstance,The length of the parameter genericMethodInstanceReference is 30.
Long Identifier,Microsoft.Cci.ReflectionEmitter,MappingVisitorForTypes,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,Visit,The length of the parameter genericMethodParameterReference is 31.
Long Statement,Microsoft.Cci.ReflectionEmitter,DynamicLoader,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Emitter.cs,Load,The length of the statement  "	//next create (but do not initialize) builder for all other kinds of typeBuilder members' since there may be forward references during initialization " is 149.
Long Statement,Microsoft.Cci.ReflectionEmitter,DynamicLoader,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Emitter.cs,Load,The length of the statement  "	//next create (but do not initialize) builder for all other kinds of typeBuilder members' since there may be forward references during initialization " is 149.
Long Statement,Microsoft.Cci.ReflectionEmitter,DynamicLoader,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Emitter.cs,Load,The length of the statement  "	DynamicMethod dm = new DynamicMethod (method.Name.Value' attributes' callingConvention' returnType' parameterTypes' this.ModuleBuilder' skipVisibility); " is 152.
Long Statement,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetField,The length of the statement  "		foreach (var member in containingType.GetMember (fieldReference.Name.Value' BindingFlags.NonPublic | BindingFlags.DeclaredOnly)) { " is 130.
Long Statement,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetField,The length of the statement  "				if (!this.ModifiersMatch (field.GetOptionalCustomModifiers ()' field.GetRequiredCustomModifiers ()' fieldReference.CustomModifiers)) " is 132.
Long Statement,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetMethod,The length of the statement  "	MemberInfo[] members = this.membersMap.Find (methodReference.ContainingType.InternedKey' (uint)methodReference.Name.UniqueKey); " is 127.
Long Statement,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetMethod,The length of the statement  "		var bindingFlags = BindingFlags.NonPublic | BindingFlags.DeclaredOnly | BindingFlags.Static | BindingFlags.Public | BindingFlags.Instance; " is 138.
Long Statement,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetMethodFrom,The length of the statement  "				if (!this.ModifiersMatch (method.ReturnParameter.GetOptionalCustomModifiers ()' method.ReturnParameter.GetRequiredCustomModifiers ()' methodReference.ReturnValueCustomModifiers)) " is 178.
Long Statement,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetMethodFrom,The length of the statement  "				if (!this.ModifiersMatch (mparInfo.GetOptionalCustomModifiers ()' mparInfo.GetRequiredCustomModifiers ()' ipar.CustomModifiers)) " is 128.
Long Statement,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,CallingConventionsMatch,The length of the statement  "		if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.Default && (methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.ExtraArguments) " is 190.
Long Statement,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,CallingConventionsMatch,The length of the statement  "	if ((methodBase.CallingConvention & CallingConventions.HasThis) != 0 && (methodReference.CallingConvention & CallingConvention.HasThis) == 0) " is 141.
Long Statement,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,CallingConventionsMatch,The length of the statement  "	if ((methodBase.CallingConvention & CallingConventions.ExplicitThis) != 0 && (methodReference.CallingConvention & CallingConvention.ExplicitThis) == 0) " is 151.
Long Statement,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetGenericMethodFrom,The length of the statement  "			if (!this.ModifiersMatch (method.ReturnParameter.GetOptionalCustomModifiers ()' method.ReturnParameter.GetRequiredCustomModifiers ()' methodReference.ReturnValueCustomModifiers)) " is 178.
Long Statement,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetGenericMethodFrom,The length of the statement  "				if (!this.ModifiersMatch (mparInfo.GetOptionalCustomModifiers ()' mparInfo.GetRequiredCustomModifiers ()' ipar.CustomModifiers)) " is 128.
Long Statement,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetArrayAddrMethod,The length of the statement  "	return moduleBuilder.GetArrayMethod (type' "Address"' CallingConventions.HasThis' type.GetElementType ().MakeByRefType ()' parameterTypes); " is 139.
Long Statement,Microsoft.Cci.ReflectionEmitter,MappingVisitorForTypes,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,Visit,The length of the statement  "	//This index does not account for any inherited generic parameters. See if any containing types contain typeBuilder parameters and adjust the index. " is 148.
Long Statement,Microsoft.Cci.ReflectionEmitter,MappingVisitorForTypes,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,Visit,The length of the statement  "	//The defining typeBuilder may actually be a containing typeBuilder of the typeBuilder that contains the reference we are mapping here. " is 135.
Long Statement,Microsoft.Cci.ReflectionEmitter,MappingVisitorForTypes,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,Visit,The length of the statement  "	//be obtained by looking at the (consolidated) typeBuilder parameter list of the System.Type object that contains the reference. " is 128.
Long Statement,Microsoft.Cci.ReflectionEmitter,MappingVisitorForTypes,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,Visit,The length of the statement  "	//We assume that this does not matter' however' since a Reflection typeBuilder parameter does not keep (visible) track of the typeBuilder which " is 143.
Long Statement,Microsoft.Cci.ReflectionEmitter,MappingVisitorForTypes,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,Visit,The length of the statement  "		this.result = assembly.GetType (TypeHelper.GetTypeName (namespaceTypeReference' NameFormattingOptions.UseGenericTypeNameSuffix)); " is 129.
Long Statement,Microsoft.Cci.ReflectionEmitter,MappingVisitorForTypes,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,Visit,The length of the statement  "		this.result = module.GetType (TypeHelper.GetTypeName (namespaceTypeReference' NameFormattingOptions.UseGenericTypeNameSuffix)); " is 127.
Empty Catch Block,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetAssembly,The method has an empty catch block.
Empty Catch Block,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetAssembly,The method has an empty catch block.
Empty Catch Block,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetAssembly,The method has an empty catch block.
Empty Catch Block,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetAssembly,The method has an empty catch block.
Magic Number,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,CallingConventionsMatch,The following statement contains a magic number: switch (methodBase.CallingConvention & (CallingConventions)3) {  case CallingConventions.Any:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.Default && (methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.ExtraArguments)  		return false;  	break;  case CallingConventions.Standard:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.Default)  		return false;  	break;  case CallingConventions.VarArgs:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.ExtraArguments)  		return false;  	break;  }  
Magic Number,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,CallingConventionsMatch,The following statement contains a magic number: switch (methodBase.CallingConvention & (CallingConventions)3) {  case CallingConventions.Any:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.Default && (methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.ExtraArguments)  		return false;  	break;  case CallingConventions.Standard:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.Default)  		return false;  	break;  case CallingConventions.VarArgs:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.ExtraArguments)  		return false;  	break;  }  
Magic Number,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,CallingConventionsMatch,The following statement contains a magic number: switch (methodBase.CallingConvention & (CallingConventions)3) {  case CallingConventions.Any:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.Default && (methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.ExtraArguments)  		return false;  	break;  case CallingConventions.Standard:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.Default)  		return false;  	break;  case CallingConventions.VarArgs:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.ExtraArguments)  		return false;  	break;  }  
Magic Number,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,CallingConventionsMatch,The following statement contains a magic number: switch (methodBase.CallingConvention & (CallingConventions)3) {  case CallingConventions.Any:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.Default && (methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.ExtraArguments)  		return false;  	break;  case CallingConventions.Standard:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.Default)  		return false;  	break;  case CallingConventions.VarArgs:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.ExtraArguments)  		return false;  	break;  }  
Magic Number,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,CallingConventionsMatch,The following statement contains a magic number: switch (methodBase.CallingConvention & (CallingConventions)3) {  case CallingConventions.Any:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.Default && (methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.ExtraArguments)  		return false;  	break;  case CallingConventions.Standard:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.Default)  		return false;  	break;  case CallingConventions.VarArgs:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.ExtraArguments)  		return false;  	break;  }  
Magic Number,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,CallingConventionsMatch,The following statement contains a magic number: if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.Default && (methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.ExtraArguments)  	return false;  
Magic Number,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,CallingConventionsMatch,The following statement contains a magic number: if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.Default && (methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.ExtraArguments)  	return false;  
Magic Number,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,CallingConventionsMatch,The following statement contains a magic number: if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.Default)  	return false;  
Magic Number,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,CallingConventionsMatch,The following statement contains a magic number: if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.ExtraArguments)  	return false;  
Magic Number,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,GetArrayCreateWithLowerBoundsMethod,The following statement contains a magic number: for (int i = 0; i < arrayTypeReference.Rank * 2; i++)  	parameterTypes [i] = typeof(int);  
Missing Default,Microsoft.Cci.ReflectionEmitter,ReflectionMapper,C:\repos\FlorianGrimm_whid\other\ccimetadata\Sources\ReflectionEmitter\Mapper.cs,CallingConventionsMatch,The following switch statement is missing a default case: switch (methodBase.CallingConvention & (CallingConventions)3) {  case CallingConventions.Any:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.Default && (methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.ExtraArguments)  		return false;  	break;  case CallingConventions.Standard:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.Default)  		return false;  	break;  case CallingConventions.VarArgs:  	if ((methodReference.CallingConvention & (CallingConvention)7) != CallingConvention.ExtraArguments)  		return false;  	break;  }  
