Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CSharpSourceEmitter,SourceEmitter,C:\repos\FlorianGrimm_whid\other\cciast\Tests\CSharpSourceEmitter\AttributeSourceEmitter.cs,PrintAttribute,Cyclomatic complexity of the method is 8
Complex Method,CSharpSourceEmitter,Utils,C:\repos\FlorianGrimm_whid\other\cciast\Tests\CSharpSourceEmitter\Utils.cs,GetAttributeType,Cyclomatic complexity of the method is 8
Long Parameter List,CSharpSourceEmitter,SourceEmitter,C:\repos\FlorianGrimm_whid\other\cciast\Tests\CSharpSourceEmitter\AttributeSourceEmitter.cs,PrintPseudoCustomAttribute,The method has 5 parameters.
Long Statement,CSharpSourceEmitter,SourceEmitter,C:\repos\FlorianGrimm_whid\other\cciast\Tests\CSharpSourceEmitter\AttributeSourceEmitter.cs,SortAttributes,The length of the statement  "	//This is not stable when multiple attributes of the same type are present' but it should be good enough for repeatable tests. " is 126.
Long Statement,CSharpSourceEmitter,Utils,C:\repos\FlorianGrimm_whid\other\cciast\Tests\CSharpSourceEmitter\Utils.cs,IsMscorlibTypeNamed,The length of the statement  "	return (TypeHelper.GetTypeName (type) == name && UnitHelper.UnitsAreEquivalent (TypeHelper.GetDefiningUnitReference (type)' TypeHelper.GetDefiningUnitReference (type.PlatformType.SystemObject))); " is 195.
Long Statement,CSharpSourceEmitter,Utils,C:\repos\FlorianGrimm_whid\other\cciast\Tests\CSharpSourceEmitter\Utils.cs,GetHiddenBaseClassMethod,The length of the statement  "		if ((baseMethod.Visibility == TypeMemberVisibility.Assembly || baseMethod.Visibility == TypeMemberVisibility.FamilyAndAssembly) && !UnitHelper.UnitsAreEquivalent (TypeHelper.GetDefiningUnit (derivedClassMethod.ContainingTypeDefinition)' TypeHelper.GetDefiningUnit (baseClass))) " is 277.
Long Statement,CSharpSourceEmitter,Utils,C:\repos\FlorianGrimm_whid\other\cciast\Tests\CSharpSourceEmitter\Utils.cs,GetHiddenBaseClassMethod,The length of the statement  "			if (derivedClassMethod.GenericParameterCount == baseMethod.GenericParameterCount && IteratorHelper.EnumerablesAreEqual (((ISignature)derivedClassMethod).Parameters' ((ISignature)baseMethod).Parameters' MemberHelper.GenericMethodParameterEqualityComparer)) " is 255.
Long Statement,CSharpSourceEmitter,Utils,C:\repos\FlorianGrimm_whid\other\cciast\Tests\CSharpSourceEmitter\Utils.cs,GetHiddenBaseClassMethod,The length of the statement  "		else if (IteratorHelper.EnumerablesAreEqual (((ISignature)derivedClassMethod).Parameters' ((ISignature)baseMethod).Parameters' MemberHelper.ParameterInformationComparer)) " is 170.
Long Statement,CSharpSourceEmitter,Utils,C:\repos\FlorianGrimm_whid\other\cciast\Tests\CSharpSourceEmitter\Utils.cs,GetAttributeType,The length of the statement  "	if (UnitHelper.UnitsAreEquivalent (attrUnit' mscorlibUnit) || (attrUnit != null && mscorlibUnit != null && attrUnit.ResolvedUnit == mscorlibUnit.ResolvedUnit)) { " is 161.
Complex Conditional,CSharpSourceEmitter,Utils,C:\repos\FlorianGrimm_whid\other\cciast\Tests\CSharpSourceEmitter\Utils.cs,GetAttributeType,The conditional expression  "UnitHelper.UnitsAreEquivalent (attrUnit' mscorlibUnit) || (attrUnit != null && mscorlibUnit != null && attrUnit.ResolvedUnit == mscorlibUnit.ResolvedUnit)"  is complex.
Missing Default,CSharpSourceEmitter,Utils,C:\repos\FlorianGrimm_whid\other\cciast\Tests\CSharpSourceEmitter\Utils.cs,GetAttributeType,The following switch statement is missing a default case: switch (typeName) {  case "System.FlagsAttribute":  	return SpecialAttribute.Flags;  case "System.Runtime.CompilerServices.FixedBufferAttribute":  	return SpecialAttribute.FixedBuffer;  case "System.ParamArrayAttribute":  	return SpecialAttribute.ParamArray;  case "System.Reflection.DefaultMemberAttribute":  	return SpecialAttribute.DefaultMemberAttribute;  case "System.Reflection.AssemblyKeyFileAttribute":  	return SpecialAttribute.AssemblyKeyFile;  case "System.Reflection.AssemblyDelaySignAttribute":  	return SpecialAttribute.AssemblyDelaySign;  }  
Missing Default,CSharpSourceEmitter,Utils,C:\repos\FlorianGrimm_whid\other\cciast\Tests\CSharpSourceEmitter\Utils.cs,GetAttributeType,The following switch statement is missing a default case: switch (typeName) {  case "System.Runtime.CompilerServices.ExtensionAttribute":  	return SpecialAttribute.Extension;  }  
