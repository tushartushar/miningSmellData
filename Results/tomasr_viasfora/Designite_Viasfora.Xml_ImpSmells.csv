Implementation smell,Namespace,Class,File,Method,Description
Long Method,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,Read,The method has 116 lines of code.
Long Method,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,ParseCData,The method has 123 lines of code.
Complex Method,Winterdom.Viasfora.Xml,XmlTagger,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\XmlTagger.cs,DoXAMLorHTML,Cyclomatic complexity of the method is 9
Complex Method,Winterdom.Viasfora.Xml,XmlTagMatchingTagger,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\XmlTagMatchingTagger.cs,GetTags,Cyclomatic complexity of the method is 9
Complex Method,Winterdom.Viasfora.Xml,XmlTagMatchingTagger,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\XmlTagMatchingTagger.cs,FindOpeningTag,Cyclomatic complexity of the method is 8
Complex Method,Sgml,Entity,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,Open,Cyclomatic complexity of the method is 14
Complex Method,Sgml,Entity,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,ScanToEnd,Cyclomatic complexity of the method is 17
Complex Method,Sgml,Entity,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,ExpandCharEntity,Cyclomatic complexity of the method is 11
Complex Method,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AutoDetectEncoding,Cyclomatic complexity of the method is 9
Complex Method,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,SniffMeta,Cyclomatic complexity of the method is 12
Complex Method,Sgml,Group,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,CanContain,Cyclomatic complexity of the method is 10
Complex Method,Sgml,AttDef,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,SetType,Cyclomatic complexity of the method is 15
Complex Method,Sgml,SgmlDtd,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,ParseMarkup,Cyclomatic complexity of the method is 8
Complex Method,Sgml,SgmlDtd,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,ParseEntity,Cyclomatic complexity of the method is 12
Complex Method,Sgml,SgmlDtd,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,ParseElementDecl,Cyclomatic complexity of the method is 12
Complex Method,Sgml,SgmlDtd,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,ParseModel,Cyclomatic complexity of the method is 11
Complex Method,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,LazyLoadDtd,Cyclomatic complexity of the method is 10
Complex Method,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,Read,Cyclomatic complexity of the method is 26
Complex Method,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,ParseTag,Cyclomatic complexity of the method is 11
Complex Method,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,ParseStartTag,Cyclomatic complexity of the method is 18
Complex Method,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,ParseDocType,Cyclomatic complexity of the method is 10
Complex Method,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,ParseCData,Cyclomatic complexity of the method is 17
Complex Method,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,ExpandEntity,Cyclomatic complexity of the method is 8
Complex Method,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,ValidateContent,Cyclomatic complexity of the method is 14
Long Parameter List,Sgml,Ucs4Decoder,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetFullChars,The method has 5 parameters. Parameters: bytes' byteIndex' byteCount' chars' charIndex
Long Parameter List,Sgml,Ucs4Decoder,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetChars,The method has 5 parameters. Parameters: bytes' byteIndex' byteCount' chars' charIndex
Long Parameter List,Sgml,Ucs4DecoderBigEngian,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetFullChars,The method has 5 parameters. Parameters: bytes' byteIndex' byteCount' chars' charIndex
Long Parameter List,Sgml,Ucs4DecoderLittleEndian,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetFullChars,The method has 5 parameters. Parameters: bytes' byteIndex' byteCount' chars' charIndex
Long Parameter List,Sgml,ElementDecl,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,ElementDecl,The method has 6 parameters. Parameters: name' sto' eto' cm' inclusions' exclusions
Long Parameter List,Sgml,SgmlDtd,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,Parse,The method has 7 parameters. Parameters: baseUri' name' pubid' url' subset' proxy' nt
Long Parameter List,Sgml,SgmlDtd,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,Parse,The method has 7 parameters. Parameters: baseUri' name' pubid' input' subset' proxy' nt
Long Identifier,Winterdom.Viasfora.Xml,XmlTagger,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\XmlTagger.cs,,The length of the parameter xmlClosingPrefixClassification is 30.
Long Statement,Sgml,Entity,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,Context,The length of the statement  "                    msg = String.Format("\nReferenced on line {0}' position {1} of '{2}' entity at [{3}]"' p.Line' p.LinePosition' p.Name' p.ResolvedUri.AbsolutePath); " is 147.
Long Statement,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AutoDetectEncoding,The length of the statement  "                uint w = (uint)buffer[index + 0] << 24 | (uint)buffer[index + 1] << 16 | (uint)buffer[index + 2] << 8 | (uint)buffer[index + 3]; " is 128.
Long Statement,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,LazyLoadDtd,The length of the statement  "                    this.dtd = SgmlDtd.Parse(baseUri' this.docType' this.pubid' baseUri.AbsoluteUri' this.subset' this.proxy' this.nametable); " is 122.
Complex Conditional,Winterdom.Viasfora.Xml,XmlTagger,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\XmlTagger.cs,DoXAMLorHTML,The conditional expression  "text.IndexOf('>') >= 0 && lastSpan.HasValue && foundClosingTag && this.settings.XmlCloseTagEnabled"  is complex.
Complex Conditional,Sgml,Entity,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,SkipWhitespace,The conditional expression  "ch != Entity.EOF && (ch == ' ' || ch == '\r' || ch == '\n' || ch == '\t')"  is complex.
Complex Conditional,Sgml,Entity,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,ScanToken,The conditional expression  "!nmtoken || ch == '_' || ch == '.' || ch == '-' || ch == ':' || Char.IsLetterOrDigit(ch)"  is complex.
Complex Conditional,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,SniffWhitespace,The conditional expression  "ch == ' ' || ch == '\t' || ch == '\r' || ch == '\n'"  is complex.
Complex Conditional,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,SniffWhitespace,The conditional expression  "ch != ' ' && ch != '\t' && ch != '\r' && ch != '\n'"  is complex.
Complex Conditional,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,SniffName,The conditional expression  "pos < used - 1 && ( Char.IsLetterOrDigit(ch) || ch == '-' || ch == '_' || ch == ':')"  is complex.
Complex Conditional,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,SkipWhitespace,The conditional expression  "pos < used - 1 && (ch == ' ' || ch == '\r' || ch == '\n')"  is complex.
Complex Conditional,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,Read,The conditional expression  "!foundRoot && (this.NodeType == XmlNodeType.Element ||                      this.NodeType == XmlNodeType.Text ||                      this.NodeType == XmlNodeType.CDATA)"  is complex.
Complex Conditional,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,ParseStartTag,The conditional expression  "aname == "'" || aname == "=" || aname == ":" || aname == ";""  is complex.
Complex Conditional,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,ParseText,The conditional expression  "ch == '/' || ch == '!' || ch == '?' || Char.IsLetter(ch)"  is complex.
Complex Conditional,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,ExpandEntity,The conditional expression  "ch != Entity.EOF &&                       (Char.IsLetter(ch) || ch == '_' || ch == '-')"  is complex.
Empty Catch Block,Winterdom.Viasfora.Xml,XmlQuickInfoSource,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\XmlQuickInfoSource.cs,ReadXmlUntilEnd,The method has an empty catch block.
Empty Catch Block,Sgml,Entity,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,Open,The method has an empty catch block.
Empty Catch Block,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,SniffEncoding,The method has an empty catch block.
Empty Catch Block,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,SniffMeta,The method has an empty catch block.
Magic Number,Winterdom.Viasfora.Xml,XmlTagMatchingTagger,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\XmlTagMatchingTagger.cs,FindClosingTag,The following statement contains a magic number: newStart = line.Start.Position + startOffset + reader.LinePosition - 2;
Magic Number,Winterdom.Viasfora.Xml,XmlTagMatchingTagger,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\XmlTagMatchingTagger.cs,FindClosingTag,The following statement contains a magic number: newStart -= reader.Name.Length + 3;
Magic Number,Winterdom.Viasfora.Xml,XmlTagMatchingTagger,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\XmlTagMatchingTagger.cs,FindOpeningTag,The following statement contains a magic number: String textFound = snapshot.GetText(position' 10);
Magic Number,Winterdom.Viasfora.Xml,XmlTagMatchingTagger,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\XmlTagMatchingTagger.cs,FindOpeningTag,The following statement contains a magic number: return new SnapshotSpan(snapshot' position' searchFor.Length + 2);
Magic Number,Sgml,Entity,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: v = (v*16)+p;
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,HtmlStream,The following statement contains a magic number: rawUsed = stm.Read(rawBuffer' 0' 4);
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,HtmlStream,The following statement contains a magic number: rawUsed += stm.Read(rawBuffer' 4' BUFSIZE-4);
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,HtmlStream,The following statement contains a magic number: rawUsed += stm.Read(rawBuffer' 4' BUFSIZE-4);
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,CopyToMemoryStream,The following statement contains a magic number: int size = 100000;
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: uint w = (uint)buffer[index + 0] << 24 | (uint)buffer[index + 1] << 16 | (uint)buffer[index + 2] << 8 | (uint)buffer[index + 3];
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: uint w = (uint)buffer[index + 0] << 24 | (uint)buffer[index + 1] << 16 | (uint)buffer[index + 2] << 8 | (uint)buffer[index + 3];
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: uint w = (uint)buffer[index + 0] << 24 | (uint)buffer[index + 1] << 16 | (uint)buffer[index + 2] << 8 | (uint)buffer[index + 3];
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: uint w = (uint)buffer[index + 0] << 24 | (uint)buffer[index + 1] << 16 | (uint)buffer[index + 2] << 8 | (uint)buffer[index + 3];
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: uint w = (uint)buffer[index + 0] << 24 | (uint)buffer[index + 1] << 16 | (uint)buffer[index + 2] << 8 | (uint)buffer[index + 3];
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: switch (w) {                      case 0xfefffeff:                           index += 4;                           return new Ucs4DecoderBigEngian();                        case 0xfffefffe:                           index += 4;                           return new Ucs4DecoderLittleEndian();                        case 0x3c000000:                           goto case 0xfefffeff;                        case 0x0000003c:                           goto case 0xfffefffe;                  }
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: switch (w) {                      case 0xfefffeff:                           index += 4;                           return new Ucs4DecoderBigEngian();                        case 0xfffefffe:                           index += 4;                           return new Ucs4DecoderLittleEndian();                        case 0x3c000000:                           goto case 0xfefffeff;                        case 0x0000003c:                           goto case 0xfffefffe;                  }
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: w >>= 8;
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: index += 3;
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: w >>= 8;
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: switch (w) {                      case 0xfeff:                           index += 2;                           return UnicodeEncoding.BigEndianUnicode.GetDecoder();                        case 0xfffe:                           index += 2;                           return new UnicodeEncoding(false' false).GetDecoder();                        case 0x3c00:                           goto case 0xfeff;                        case 0x003c:                           goto case 0xfffe;                  }
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: switch (w) {                      case 0xfeff:                           index += 2;                           return UnicodeEncoding.BigEndianUnicode.GetDecoder();                        case 0xfffe:                           index += 2;                           return new UnicodeEncoding(false' false).GetDecoder();                        case 0x3c00:                           goto case 0xfeff;                        case 0x003c:                           goto case 0xfffe;                  }
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: 4 <= (length - index)
Magic Number,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,ReadToEnd,The following statement contains a magic number: char[] buffer = new char[100000];
Magic Number,Sgml,Ucs4Decoder,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetCharCount,The following statement contains a magic number: return (count + tempBytes) / 4;
Magic Number,Sgml,Ucs4Decoder,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetChars,The following statement contains a magic number: i < 4
Magic Number,Sgml,Ucs4Decoder,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetChars,The following statement contains a magic number: GetFullChars(temp' 0' 4' chars' charIndex);
Magic Number,Sgml,Ucs4Decoder,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetChars,The following statement contains a magic number: int j = (tempBytes + byteCount) % 4;
Magic Number,Sgml,Ucs4Decoder,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,UnicodeToUTF16,The following statement contains a magic number: lowerByte = (byte)(0xD7C0 + (code >> 10));
Magic Number,Sgml,Ucs4Decoder,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,UnicodeToUTF16,The following statement contains a magic number: return ((char)((higherByte << 8) | lowerByte));
Magic Number,Sgml,Ucs4DecoderBigEngian,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes[i + 3]) << 24) | (bytes[i + 2] << 16) | (bytes[i + 1] << 8) | (bytes[i]));
Magic Number,Sgml,Ucs4DecoderBigEngian,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes[i + 3]) << 24) | (bytes[i + 2] << 16) | (bytes[i + 1] << 8) | (bytes[i]));
Magic Number,Sgml,Ucs4DecoderBigEngian,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes[i + 3]) << 24) | (bytes[i + 2] << 16) | (bytes[i + 1] << 8) | (bytes[i]));
Magic Number,Sgml,Ucs4DecoderBigEngian,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes[i + 3]) << 24) | (bytes[i + 2] << 16) | (bytes[i + 1] << 8) | (bytes[i]));
Magic Number,Sgml,Ucs4DecoderBigEngian,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes[i + 3]) << 24) | (bytes[i + 2] << 16) | (bytes[i + 1] << 8) | (bytes[i]));
Magic Number,Sgml,Ucs4DecoderBigEngian,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetFullChars,The following statement contains a magic number: i += 4;
Magic Number,Sgml,Ucs4DecoderBigEngian,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetFullChars,The following statement contains a magic number: i + 3 < byteCount
Magic Number,Sgml,Ucs4DecoderLittleEndian,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes[i]) << 24) | (bytes[i + 1] << 16) | (bytes[i + 2] << 8) | (bytes[i + 3]));
Magic Number,Sgml,Ucs4DecoderLittleEndian,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes[i]) << 24) | (bytes[i + 1] << 16) | (bytes[i + 2] << 8) | (bytes[i + 3]));
Magic Number,Sgml,Ucs4DecoderLittleEndian,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes[i]) << 24) | (bytes[i + 1] << 16) | (bytes[i + 2] << 8) | (bytes[i + 3]));
Magic Number,Sgml,Ucs4DecoderLittleEndian,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes[i]) << 24) | (bytes[i + 1] << 16) | (bytes[i + 2] << 8) | (bytes[i + 3]));
Magic Number,Sgml,Ucs4DecoderLittleEndian,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes[i]) << 24) | (bytes[i + 1] << 16) | (bytes[i + 2] << 8) | (bytes[i + 3]));
Magic Number,Sgml,Ucs4DecoderLittleEndian,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetFullChars,The following statement contains a magic number: i += 4;
Magic Number,Sgml,Ucs4DecoderLittleEndian,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,GetFullChars,The following statement contains a magic number: i + 3 < byteCount
Magic Number,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,Init,The following statement contains a magic number: this.stack = new HWStack(10);
Magic Number,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,ParseComment,The following statement contains a magic number: int j = i+2;
Magic Number,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,ValidateContent,The following statement contains a magic number: int top = this.stack.Count-2;
Missing Default,Sgml,Entity,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,SetLiteralType,The following switch statement is missing a default case: switch (token) {                  case "CDATA":                      LiteralType = LiteralType.CDATA;                      break;                  case "SDATA":                      LiteralType = LiteralType.SDATA;                      break;                  case "PI":                      LiteralType = LiteralType.PI;                      break;              }
Missing Default,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AutoDetectEncoding,The following switch statement is missing a default case: switch (w) {                      case 0xfefffeff:                           index += 4;                           return new Ucs4DecoderBigEngian();                        case 0xfffefffe:                           index += 4;                           return new Ucs4DecoderLittleEndian();                        case 0x3c000000:                           goto case 0xfefffeff;                        case 0x0000003c:                           goto case 0xfffefffe;                  }
Missing Default,Sgml,HtmlStream,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AutoDetectEncoding,The following switch statement is missing a default case: switch (w) {                      case 0xfeff:                           index += 2;                           return UnicodeEncoding.BigEndianUnicode.GetDecoder();                        case 0xfffe:                           index += 2;                           return new UnicodeEncoding(false' false).GetDecoder();                        case 0x3c00:                           goto case 0xfeff;                        case 0x003c:                           goto case 0xfffe;                  }
Missing Default,Sgml,Group,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AddConnector,The following switch statement is missing a default case: switch (c)               {                  case ''':                       gt = GroupType.Sequence;                      break;                  case '|':                      gt = GroupType.Or;                      break;                  case '&':                      gt = GroupType.And;                      break;              }
Missing Default,Sgml,Group,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlParser.cs,AddOccurrence,The following switch statement is missing a default case: switch (c)               {                  case '?':                       o = Occurrence.Optional;                      break;                  case '+':                      o = Occurrence.OneOrMore;                      break;                  case '*':                      o = Occurrence.ZeroOrMore;                      break;              }
Missing Default,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,Read,The following switch statement is missing a default case: switch (this.state) {                      case State.Initial:                          this.state = State.Markup;                          this.current.ReadChar();                          goto case State.Markup;                      case State.Eof:                          if (this.current.Parent != null) {                              this.current.Close();                              this.current = this.current.Parent;                          } else {                                                         return false;                          }                          break;                      case State.EndTag:                          if (this.endTag == (object)this.node.Name) {                              Pop(); // we're done!                              this.state = State.Markup;                              goto case State.Markup;                          }                                               Pop(); // close one element                          foundnode = true;// return another end element.                          break;                      case State.Markup:                          if (this.node.IsEmpty) {                              Pop();                          }                          Node n = this.node;                          foundnode = ParseMarkup();                          break;                      case State.PartialTag:                          Pop(); // remove text node.                          this.state = State.Markup;                          foundnode = ParseTag(this.partial);                          break;                      case State.PseudoStartTag:                          foundnode = ParseStartTag('<');                                                  break;                      case State.AutoClose:                          Pop(); // close next node.                          if (this.stack.Count <= this.poptodepth) {                              this.state = State.Markup;                              if (this.newnode != null) {                                  Push(this.newnode); // now we're ready to start the new node.                                  this.newnode = null;                                  this.state = State.Markup;                              } else if (this.node.NodeType == XmlNodeType.Document) {                                  this.state = State.Eof;                                  goto case State.Eof;                              }                          }                           foundnode = true;                          break;                      case State.CData:                          foundnode = ParseCData();                          break;                      case State.Attr:                          goto case State.AttrValue;                      case State.AttrValue:                          this.state = State.Markup;                          goto case State.Markup;                      case State.Text:                          Pop();                          goto case State.Markup;                      case State.PartialText:                          if (ParseText(this.current.Lastchar' false)) {                              this.node.NodeType = XmlNodeType.Whitespace;                          }                          foundnode = true;                          break;                  }
Missing Default,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,ScanName,The following switch statement is missing a default case: switch (this.folding){                  case CaseFolding.ToUpper:                      name = name.ToUpper();                      break;                  case CaseFolding.ToLower:                      name = name.ToLower();                      break;              }
Missing Default,Sgml,SgmlReader,D:\research\architectureSmells\repos1\tomasr_viasfora\src\Viasfora.Xml\Sgml\SgmlReader.cs,ParseCData,The following switch statement is missing a default case: switch (this.partial) {                      case '!':                          this.partial = ' '; // and pop the comment next time around                          return ParseComment();                      case '?':                          this.partial = ' '; // and pop the PI next time around                          return ParsePI();                      case '/':                          this.state = State.EndTag;                          return true;    // we are done!                      case ' ':                          break; // means we just needed to pop the Comment' PI or CDATA.                  }
