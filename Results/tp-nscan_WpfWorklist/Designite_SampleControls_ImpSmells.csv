Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SampleControls.DesignData,DesignPlate96Vm,C:\repos\tp-nscan_WpfWorklist\SampleControls\DesignData\DesignPlate96Vm.cs,DesignPlate96Vm,Cyclomatic complexity of the method is 10
Complex Method,SampleControls.View,SamplePlate,C:\repos\tp-nscan_WpfWorklist\SampleControls\View\SamplePlate.xaml.cs,LayoutWells,Cyclomatic complexity of the method is 10
Magic Number,SampleControls.DesignData,DesignPlate96Vm,C:\repos\tp-nscan_WpfWorklist\SampleControls\DesignData\DesignPlate96Vm.cs,DesignPlate96Vm,The following statement contains a magic number: foreach (var wellVm in WellVms) {  	switch (wellVm.SamplePlatePart) {  	case View.SamplePlatePart.ColumnHeader:  		wellVm.WellText = (wellVm.Column + 1).ToString (CultureInfo.InvariantCulture);  		break;  	case View.SamplePlatePart.RowHeader:  		wellVm.WellText = wellVm.Row.RowLabel ();  		break;  	case View.SamplePlatePart.Well:  		wellVm.WellText = string.Format ("r{0}c{1}"' wellVm.Row' wellVm.Column);  		break;  	}  	wellVm.HasSample = (wellVm.Row % 2) == 0;  	wellVm.IsScheduled = wellVm.Column != 2;  	//wellVm.HasSample = wellVm.Column == 2;  	//wellVm.RingBrush = new SolidColorBrush(Colors.DarkOrchid);  	//wellVm.WellBrush = new SolidColorBrush(Colors.DarkSeaGreen);  }  
Magic Number,SampleControls.DesignData,DesignPlate96Vm,C:\repos\tp-nscan_WpfWorklist\SampleControls\DesignData\DesignPlate96Vm.cs,DesignPlate96Vm,The following statement contains a magic number: foreach (var wellVm in WellVms) {  	switch (wellVm.SamplePlatePart) {  	case View.SamplePlatePart.ColumnHeader:  		wellVm.WellText = (wellVm.Column + 1).ToString (CultureInfo.InvariantCulture);  		break;  	case View.SamplePlatePart.RowHeader:  		wellVm.WellText = wellVm.Row.RowLabel ();  		break;  	case View.SamplePlatePart.Well:  		wellVm.WellText = string.Format ("r{0}c{1}"' wellVm.Row' wellVm.Column);  		break;  	}  	wellVm.HasSample = (wellVm.Row % 2) == 0;  	wellVm.IsScheduled = wellVm.Column != 2;  	//wellVm.HasSample = wellVm.Column == 2;  	//wellVm.RingBrush = new SolidColorBrush(Colors.DarkOrchid);  	//wellVm.WellBrush = new SolidColorBrush(Colors.DarkSeaGreen);  }  
Magic Number,SampleControls.DesignData,DesignPlate96Vm,C:\repos\tp-nscan_WpfWorklist\SampleControls\DesignData\DesignPlate96Vm.cs,DesignPlate96Vm,The following statement contains a magic number: wellVm.HasSample = (wellVm.Row % 2) == 0;  
Magic Number,SampleControls.DesignData,DesignPlate96Vm,C:\repos\tp-nscan_WpfWorklist\SampleControls\DesignData\DesignPlate96Vm.cs,DesignPlate96Vm,The following statement contains a magic number: wellVm.IsScheduled = wellVm.Column != 2;  
Magic Number,SampleControls.Model,BrushesForRealInterval,C:\repos\tp-nscan_WpfWorklist\SampleControls\Model\BrushesForRealInterval.cs,BrushesForRealInterval,The following statement contains a magic number: _colorSequence = new ColorSequence (lowColor' hiColor' OrderedRangeMap.PartitionCount + 3);  
Magic Number,SampleControls.View,SamplePlate,C:\repos\tp-nscan_WpfWorklist\SampleControls\View\SamplePlate.xaml.cs,SamplePlateSizeChanged,The following statement contains a magic number: border.CornerRadius = new CornerRadius (e.NewSize.Width / 20);  
Magic Number,SampleControls.View,SamplePlate,C:\repos\tp-nscan_WpfWorklist\SampleControls\View\SamplePlate.xaml.cs,LayoutWells,The following statement contains a magic number: foreach (var wellVm in SamplePlateVm.WellVms) {  	switch (wellVm.SamplePlatePart) {  	case SamplePlatePart.ColumnHeader:  		wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' 0);  		break;  	case SamplePlatePart.RowHeader:  		wellVm.Location = new Point (0' wellSide / 2 + wellVm.Row * wellSide);  		break;  	case SamplePlatePart.Well:  		wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' wellSide / 2 + wellVm.Row * wellSide);  		break;  	}  	wellVm.SideLength = wellSide;  	//var lbi = new ListBoxItem();  	//lbi.s = false;  }  
Magic Number,SampleControls.View,SamplePlate,C:\repos\tp-nscan_WpfWorklist\SampleControls\View\SamplePlate.xaml.cs,LayoutWells,The following statement contains a magic number: foreach (var wellVm in SamplePlateVm.WellVms) {  	switch (wellVm.SamplePlatePart) {  	case SamplePlatePart.ColumnHeader:  		wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' 0);  		break;  	case SamplePlatePart.RowHeader:  		wellVm.Location = new Point (0' wellSide / 2 + wellVm.Row * wellSide);  		break;  	case SamplePlatePart.Well:  		wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' wellSide / 2 + wellVm.Row * wellSide);  		break;  	}  	wellVm.SideLength = wellSide;  	//var lbi = new ListBoxItem();  	//lbi.s = false;  }  
Magic Number,SampleControls.View,SamplePlate,C:\repos\tp-nscan_WpfWorklist\SampleControls\View\SamplePlate.xaml.cs,LayoutWells,The following statement contains a magic number: foreach (var wellVm in SamplePlateVm.WellVms) {  	switch (wellVm.SamplePlatePart) {  	case SamplePlatePart.ColumnHeader:  		wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' 0);  		break;  	case SamplePlatePart.RowHeader:  		wellVm.Location = new Point (0' wellSide / 2 + wellVm.Row * wellSide);  		break;  	case SamplePlatePart.Well:  		wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' wellSide / 2 + wellVm.Row * wellSide);  		break;  	}  	wellVm.SideLength = wellSide;  	//var lbi = new ListBoxItem();  	//lbi.s = false;  }  
Magic Number,SampleControls.View,SamplePlate,C:\repos\tp-nscan_WpfWorklist\SampleControls\View\SamplePlate.xaml.cs,LayoutWells,The following statement contains a magic number: foreach (var wellVm in SamplePlateVm.WellVms) {  	switch (wellVm.SamplePlatePart) {  	case SamplePlatePart.ColumnHeader:  		wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' 0);  		break;  	case SamplePlatePart.RowHeader:  		wellVm.Location = new Point (0' wellSide / 2 + wellVm.Row * wellSide);  		break;  	case SamplePlatePart.Well:  		wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' wellSide / 2 + wellVm.Row * wellSide);  		break;  	}  	wellVm.SideLength = wellSide;  	//var lbi = new ListBoxItem();  	//lbi.s = false;  }  
Magic Number,SampleControls.View,SamplePlate,C:\repos\tp-nscan_WpfWorklist\SampleControls\View\SamplePlate.xaml.cs,LayoutWells,The following statement contains a magic number: switch (wellVm.SamplePlatePart) {  case SamplePlatePart.ColumnHeader:  	wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' 0);  	break;  case SamplePlatePart.RowHeader:  	wellVm.Location = new Point (0' wellSide / 2 + wellVm.Row * wellSide);  	break;  case SamplePlatePart.Well:  	wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' wellSide / 2 + wellVm.Row * wellSide);  	break;  }  
Magic Number,SampleControls.View,SamplePlate,C:\repos\tp-nscan_WpfWorklist\SampleControls\View\SamplePlate.xaml.cs,LayoutWells,The following statement contains a magic number: switch (wellVm.SamplePlatePart) {  case SamplePlatePart.ColumnHeader:  	wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' 0);  	break;  case SamplePlatePart.RowHeader:  	wellVm.Location = new Point (0' wellSide / 2 + wellVm.Row * wellSide);  	break;  case SamplePlatePart.Well:  	wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' wellSide / 2 + wellVm.Row * wellSide);  	break;  }  
Magic Number,SampleControls.View,SamplePlate,C:\repos\tp-nscan_WpfWorklist\SampleControls\View\SamplePlate.xaml.cs,LayoutWells,The following statement contains a magic number: switch (wellVm.SamplePlatePart) {  case SamplePlatePart.ColumnHeader:  	wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' 0);  	break;  case SamplePlatePart.RowHeader:  	wellVm.Location = new Point (0' wellSide / 2 + wellVm.Row * wellSide);  	break;  case SamplePlatePart.Well:  	wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' wellSide / 2 + wellVm.Row * wellSide);  	break;  }  
Magic Number,SampleControls.View,SamplePlate,C:\repos\tp-nscan_WpfWorklist\SampleControls\View\SamplePlate.xaml.cs,LayoutWells,The following statement contains a magic number: switch (wellVm.SamplePlatePart) {  case SamplePlatePart.ColumnHeader:  	wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' 0);  	break;  case SamplePlatePart.RowHeader:  	wellVm.Location = new Point (0' wellSide / 2 + wellVm.Row * wellSide);  	break;  case SamplePlatePart.Well:  	wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' wellSide / 2 + wellVm.Row * wellSide);  	break;  }  
Magic Number,SampleControls.View,SamplePlate,C:\repos\tp-nscan_WpfWorklist\SampleControls\View\SamplePlate.xaml.cs,LayoutWells,The following statement contains a magic number: wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' 0);  
Magic Number,SampleControls.View,SamplePlate,C:\repos\tp-nscan_WpfWorklist\SampleControls\View\SamplePlate.xaml.cs,LayoutWells,The following statement contains a magic number: wellVm.Location = new Point (0' wellSide / 2 + wellVm.Row * wellSide);  
Magic Number,SampleControls.View,SamplePlate,C:\repos\tp-nscan_WpfWorklist\SampleControls\View\SamplePlate.xaml.cs,LayoutWells,The following statement contains a magic number: wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' wellSide / 2 + wellVm.Row * wellSide);  
Magic Number,SampleControls.View,SamplePlate,C:\repos\tp-nscan_WpfWorklist\SampleControls\View\SamplePlate.xaml.cs,LayoutWells,The following statement contains a magic number: wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' wellSide / 2 + wellVm.Row * wellSide);  
Missing Default,SampleControls.DesignData,DesignPlate96Vm,C:\repos\tp-nscan_WpfWorklist\SampleControls\DesignData\DesignPlate96Vm.cs,DesignPlate96Vm,The following switch statement is missing a default case: switch (wellVm.SamplePlatePart) {  case View.SamplePlatePart.ColumnHeader:  	wellVm.WellText = (wellVm.Column + 1).ToString (CultureInfo.InvariantCulture);  	break;  case View.SamplePlatePart.RowHeader:  	wellVm.WellText = wellVm.Row.RowLabel ();  	break;  case View.SamplePlatePart.Well:  	wellVm.WellText = string.Format ("r{0}c{1}"' wellVm.Row' wellVm.Column);  	break;  }  
Missing Default,SampleControls.View,SamplePlate,C:\repos\tp-nscan_WpfWorklist\SampleControls\View\SamplePlate.xaml.cs,LayoutWells,The following switch statement is missing a default case: switch (wellVm.SamplePlatePart) {  case SamplePlatePart.ColumnHeader:  	wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' 0);  	break;  case SamplePlatePart.RowHeader:  	wellVm.Location = new Point (0' wellSide / 2 + wellVm.Row * wellSide);  	break;  case SamplePlatePart.Well:  	wellVm.Location = new Point (wellSide / 2 + wellVm.Column * wellSide' wellSide / 2 + wellVm.Row * wellSide);  	break;  }  
