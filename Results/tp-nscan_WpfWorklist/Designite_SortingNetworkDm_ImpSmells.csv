Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SortingNetworkDm.Json.Entities,JsonConverterForEntities,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Json\Entities\JsonConverterForEntities.cs,ReadJson,Cyclomatic complexity of the method is 12
Complex Method,SortingNetworkDm.Json.Steps,JsonConverterForSteps,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Json\Steps\JsonConverterForSteps.cs,ReadJson,Cyclomatic complexity of the method is 12
Complex Method,SortingNetworkDm.Steps,SwitchablePoolStepImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SwitchablePoolStep.cs,Execute,Cyclomatic complexity of the method is 9
Long Parameter List,SortingNetworkDm.Json.Steps,CompetePoolStepToJson,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Json\Steps\CompetePoolStepToJson.cs,ToCompetePoolStep,The method has 6 parameters.
Long Parameter List,SortingNetworkDm.Steps,CompetePoolRunMessage,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolRunMessage.cs,Make,The method has 5 parameters.
Long Parameter List,SortingNetworkDm.Steps,CompetePoolRunMessageImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolRunMessage.cs,CompetePoolRunMessageImpl,The method has 5 parameters.
Long Parameter List,SortingNetworkDm.Steps,CompetePoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolStep.cs,Load,The method has 15 parameters.
Long Parameter List,SortingNetworkDm.Steps,CompetePoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolStep.cs,Create,The method has 13 parameters.
Long Parameter List,SortingNetworkDm.Steps,CompetePoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolStep.cs,CreateAndRun,The method has 15 parameters.
Long Parameter List,SortingNetworkDm.Steps,CompetePoolImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolStep.cs,CompetePoolImpl,The method has 16 parameters.
Long Parameter List,SortingNetworkDm.Steps,CompetePoolImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolStep.cs,ProcAGeneration,The method has 10 parameters.
Long Parameter List,SortingNetworkDm.Steps,SorterPoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SorterPoolStep.cs,Load,The method has 9 parameters.
Long Parameter List,SortingNetworkDm.Steps,SorterPoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SorterPoolStep.cs,Create,The method has 8 parameters.
Long Parameter List,SortingNetworkDm.Steps,SorterPoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SorterPoolStep.cs,CreateAndRun,The method has 8 parameters.
Long Parameter List,SortingNetworkDm.Steps,SorterPoolStepImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SorterPoolStep.cs,SorterPoolStepImpl,The method has 9 parameters.
Long Parameter List,SortingNetworkDm.Steps,SwitchablePoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SwitchablePoolStep.cs,Load,The method has 9 parameters.
Long Parameter List,SortingNetworkDm.Steps,SwitchablePoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SwitchablePoolStep.cs,Create,The method has 8 parameters.
Long Parameter List,SortingNetworkDm.Steps,SwitchablePoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SwitchablePoolStep.cs,CreateAndRun,The method has 8 parameters.
Long Parameter List,SortingNetworkDm.Steps,SwitchablePoolStepImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SwitchablePoolStep.cs,SwitchablePoolStepImpl,The method has 9 parameters.
Long Parameter List,SortingNetworkDm.Workflows,SorterWorkflow,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Workflows\SorterWorkflow.cs,Load,The method has 5 parameters.
Long Parameter List,SortingNetworkDm.Workflows,SorterWorkflowImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Workflows\SorterWorkflow.cs,SorterWorkflowImpl,The method has 6 parameters.
Long Statement,SortingNetworkDm.Entities,SorterResultPoolEntity,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Entities\SorterResultPoolEntity.cs,ToSorterPoolEntity,The length of the statement  "	return SorterPoolEntity.Make (guid: sorterResultPoolEntity.Guid' name: sorterResultPoolEntity.Name' description: sorterResultPoolEntity.Description' sorterRepo: sorterResultPoolEntity.SorterResultRepo.Select (T => T.Sorter).ToSorterRepo ()); " is 241.
Long Statement,SortingNetworkDm.Json.Entities,SorterResultPoolEntityToJson,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Json\Entities\SorterResultPoolEntityToJson.cs,ToSorterResultPoolEntity,The length of the statement  "	return SorterResultPoolEntity.Make (guid: sorterResultPoolEntityToJson.Guid' name: sorterResultPoolEntityToJson.Name' description: sorterResultPoolEntityToJson.Description' sorterResultRepo: SorterResultRepoToJson.ToSorterResultRepo (sorterResultPoolEntityToJson.SorterResultRepoToJson)); " is 288.
Long Statement,SortingNetworkDm.Json.Entities,SorterPoolEntityToJson,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Json\Entities\SorterPoolEntityToJson.cs,ToSorterPoolEntity,The length of the statement  "	return SorterPoolEntity.Make (guid: sorterPoolEntityToJson.Guid' name: sorterPoolEntityToJson.Name' description: sorterPoolEntityToJson.Description' sorterRepo: SorterRepoToJson.ToSorterRepo (sorterPoolEntityToJson.SorterRepoToJson)); " is 234.
Long Statement,SortingNetworkDm.Json.Entities,SwitchablePoolEntityToJson,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Json\Entities\SwitchablePoolEntityToJson.cs,ToSwitchablePoolEntity,The length of the statement  "	return SwitchablePoolEntity.Make (guid: switchablePoolEntityToJson.Guid' name: switchablePoolEntityToJson.Name' description: switchablePoolEntityToJson.Description' switchableRepo: SwitchableRepoToJson.ToSwitchableRepo (switchablePoolEntityToJson.SwitchableRepoToJson)); " is 270.
Long Statement,SortingNetworkDm.Json.Steps,CompetePoolStepToJson,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Json\Steps\CompetePoolStepToJson.cs,ToJson,The length of the statement  "		OutputSwitchablePoolEntityGuid = (competePoolStep.OutputSwitchablePoolEntity != null) ? competePoolStep.OutputSwitchablePoolEntity.Guid : Guid.Empty' " is 149.
Long Statement,SortingNetworkDm.Json.Steps,CompetePoolStepToJson,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Json\Steps\CompetePoolStepToJson.cs,ToJson,The length of the statement  "		OutputSorterPoolEntityGuid = (competePoolStep.OutputSorterResultPoolEntity != null) ? competePoolStep.OutputSorterResultPoolEntity.Guid : Guid.Empty " is 148.
Long Statement,SortingNetworkDm.Json.Steps,CompetePoolStepToJson,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Json\Steps\CompetePoolStepToJson.cs,ToCompetePoolStep,The length of the statement  "	return CompetePoolStep.Load (guid: competePoolStepToJson.Guid' name: competePoolStepToJson.Name' description: competePoolStepToJson.Description' index: competePoolStepToJson.Index' inputSorterPoolEntity: (ISorterPoolEntity)entityProvider.Entities.SingleOrDefault (T => T.Guid == competePoolStepToJson.InputSorterPoolEntityGuid)' inputSwitchablePoolEntity: (ISwitchablePoolEntity)entityProvider.Entities.SingleOrDefault (T => T.Guid == competePoolStepToJson.InputSwitchablePoolEntityGuid)' outputSorterResultPoolEntity: (ISorterResultPoolEntity)entityProvider.Entities.SingleOrDefault (T => T.Guid == competePoolStepToJson.OutputSorterPoolEntityGuid)' outputSwitchablePoolEntity: (ISwitchablePoolEntity)entityProvider.Entities.SingleOrDefault (T => T.Guid == competePoolStepToJson.OutputSwitchablePoolEntityGuid)' seedIn: competePoolStepToJson.SeedIn' generationCount: competePoolStepToJson.GenerationCount' sorterPoolSize: competePoolStepToJson.SorterPoolSize' sorterChampCount: competePoolStepToJson.SorterChampCount' switchablePoolSize: competePoolStepToJson.SwitchablePoolSize' switchableChampCount: competePoolStepToJson.SwitchableChampCount' mutationRate: competePoolStepToJson.MutationRate); " is 1197.
Long Statement,SortingNetworkDm.Json.Steps,SorterPoolStepToJson,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Json\Steps\SorterPoolStepToJson.cs,ToSorterPoolStep,The length of the statement  "	return SorterPoolStep.Load (guid: sorterPoolStepToJson.Guid' name: sorterPoolStepToJson.Name' description: sorterPoolStepToJson.Description' index: sorterPoolStepToJson.Index' outputSorters: (ISorterPoolEntity)entityProvider.Entities.SingleOrDefault (T => T.Guid == sorterPoolStepToJson.OutputSorterPoolEntityGuid)' keyCount: sorterPoolStepToJson.KeyCount' seedIn: sorterPoolStepToJson.SeedIn' sorterCount: sorterPoolStepToJson.SorterCount' switchesPerSorter: sorterPoolStepToJson.SwitchesPerSorter); " is 500.
Long Statement,SortingNetworkDm.Json.Steps,SwitchablePoolStepToJson,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Json\Steps\SwitchablePoolStepToJson.cs,ToSwitchablePoolStep,The length of the statement  "	return SwitchablePoolStep.Load (guid: sorterPoolStepToJson.Guid' name: sorterPoolStepToJson.Name' description: sorterPoolStepToJson.Description' index: sorterPoolStepToJson.Index' outputSwitchables: (ISwitchablePoolEntity)entityProvider.Entities.SingleOrDefault (T => T.Guid == sorterPoolStepToJson.OutputSwitchablePoolEntityGuid)' switchableType: sorterPoolStepToJson.SwitchableType' keyCount: sorterPoolStepToJson.KeyCount' seedIn: sorterPoolStepToJson.SeedIn' switchableCount: sorterPoolStepToJson.SwitchableCount); " is 518.
Long Statement,SortingNetworkDm.Steps,CompetePoolRunMessage,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolRunMessage.cs,Make,The length of the statement  "	return new CompetePoolRunMessageImpl (generation: generation' seedOut: seedOut' sorterResultRepo: sorterResultRepo' switchableRepo: switchableRepo' message: message); " is 166.
Long Statement,SortingNetworkDm.Steps,CompetePoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolStep.cs,Load,The length of the statement  "	return new CompetePoolImpl (guid: guid' name: name' description: description' index: index' inputSorterPoolEntity: inputSorterPoolEntity' inputSwitchablePoolEntity: inputSwitchablePoolEntity' outputSorterResultPoolEntity: outputSorterResultPoolEntity' outputSwitchablePoolEntity: outputSwitchablePoolEntity' seedIn: seedIn' generationCount: generationCount' sorterPoolSize: sorterPoolSize' sorterChampCount: sorterChampCount' switchablePoolSize: switchablePoolSize' switchableChampCount: switchableChampCount' mutationRate: mutationRate); " is 538.
Long Statement,SortingNetworkDm.Steps,CompetePoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolStep.cs,Create,The length of the statement  "	return new CompetePoolImpl (guid: guid' name: name' description: description' index: index' inputSorterPoolEntity: inputSorterPoolEntity' inputSwitchablePoolEntity: inputSwitchablePoolEntity' outputSorterResultPoolEntity: null' outputSwitchablePoolEntity: null' seedIn: seedIn' generationCount: generationCount' sorterPoolSize: sorterPoolSize' sorterChampCount: sorterChampCount' switchablePoolSize: switchablePoolSize' switchableChampCount: switchableChampCount' mutationRate: mutationRate); " is 492.
Long Statement,SortingNetworkDm.Steps,CompetePoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolStep.cs,CreateAndRun,The length of the statement  "	var competePool = Create (guid: guid' name: name' description: description' index: index' inputSorterPoolEntity: inputSorterPoolEntity' inputSwitchablePoolEntity: inputSwitchablePoolEntity' seedIn: seedIn' generationCount: generationCount' sorterPoolSize: sorterPoolSize' sorterChampCount: sorterChampCount' switchablePoolSize: switchablePoolSize' switchableChampCount: switchableChampCount' mutationRate: mutationRate); " is 420.
Long Statement,SortingNetworkDm.Steps,CompetePoolImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolStep.cs,Execute,The length of the statement  "	var currentSorterChamps = InputSorterPoolEntity.SorterRepo.Take (SorterChampCount).Select (T => SorterResult.Make (T' Enumerable.Empty<ISwitchResult> ()' 0' 0' 0)); " is 164.
Long Statement,SortingNetworkDm.Steps,CompetePoolImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolStep.cs,Execute,The length of the statement  "		ProcAGeneration (randomGenerator: randomGenerator' switchMutationRate: MutationRate' sorterPopSize: SorterPoolSize' switchablePopSize: SwitchablePoolSize' currentSorterChamps: currentSorterChamps.Select (T => T.Sorter)' currentSwitchableChamps: currentSwitchableChamps' newSorterChamps: out newSorterChamps' newSwitchableChamps: out newSwitchableChamps); " is 354.
Long Statement,SortingNetworkDm.Steps,CompetePoolImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolStep.cs,Execute,The length of the statement  "		runAgent.Update (CompetePoolRunMessage.Make (generation: curGeneration' seedOut: seedOut' sorterResultRepo: newSorterChamps' switchableRepo: currentSwitchableChamps)); " is 167.
Long Statement,SortingNetworkDm.Steps,CompetePoolImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolStep.cs,Execute,The length of the statement  "	AddOutputEnity (SorterResultPoolEntity.Make (guid: Guid.NewGuid ()' name: Name + "_" + InputSorterPoolEntity.Name' description: Description' sorterResultRepo: currentSorterChamps.ToSorterResultRepo ())); " is 203.
Long Statement,SortingNetworkDm.Steps,CompetePoolImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolStep.cs,Execute,The length of the statement  "	AddOutputEnity (SwitchablePoolEntity.Make (guid: Guid.NewGuid ()' name: Name + "_" + InputSwitchablePoolEntity.Name' description: Description' switchableRepo: currentSwitchableChamps)); " is 185.
Long Statement,SortingNetworkDm.Steps,CompetePoolImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolStep.cs,ProcAGeneration,The length of the statement  "	var competePoolGen = new CompetePoolGen (randomGenerator: randomGenerator' switchMutationRate: switchMutationRate' sorterPopulationSize: sorterPopSize' switchablePopulationSize: switchablePopSize' parentSorters: currentSorterChamps' parentSwitchables: currentSwitchableChamps); " is 277.
Long Statement,SortingNetworkDm.Steps,CompetePoolImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolStep.cs,ProcAGeneration,The length of the statement  "	newSorterChamps = sorterTesters.OrderBy (T => T.Score).Take (competePoolGen.SorterParentPopulationSize).Select (T => T.SorterResult).ToSorterResultRepo (); " is 155.
Long Statement,SortingNetworkDm.Steps,CompetePoolImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\CompetePoolStep.cs,ProcAGeneration,The length of the statement  "	newSwitchableChamps = competePoolGen.SwitchablePop.RandomDrawWithoutReplacement (randomGenerator.ToInt ()).Take (competePoolGen.SwitchableParentPopulationSize).ToSwitchableRepo (); " is 180.
Long Statement,SortingNetworkDm.Steps,SorterPoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SorterPoolStep.cs,Load,The length of the statement  "	return new SorterPoolStepImpl (guid: guid' name: name' description: description' index: index' outputSorterPoolEntity: outputSorters' keyCount: keyCount' seedIn: seedIn' sorterCount: sorterCount' switchesPerSorter: switchesPerSorter); " is 234.
Long Statement,SortingNetworkDm.Steps,SorterPoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SorterPoolStep.cs,Create,The length of the statement  "	var sorterPoolGenStep = Load (guid: guid' name: name' description: description' index: index' outputSorters: null' keyCount: keyCount' seedIn: seedIn' sorterCount: sorterCount' switchesPerSorter: switchesPerSorter); " is 215.
Long Statement,SortingNetworkDm.Steps,SorterPoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SorterPoolStep.cs,CreateAndRun,The length of the statement  "	var sorterPoolGenStep = Create (guid: guid' name: name' description: description' index: index' keyCount: keyCount' seedIn: seedIn' sorterCount: sorterCount' switchesPerSorter: switchesPerSorter); " is 196.
Long Statement,SortingNetworkDm.Steps,SorterPoolStepImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SorterPoolStep.cs,Execute,The length of the statement  "	AddOutputEnity (SorterPoolEntity.Make (guid: Guid' name: Name' description: Description' sorterRepo: KeySet.Instance.AllKeyPairsForKeyCount (KeyCount).RandomDraw (rando.ToInt ()' SwitchesPerSorter * SorterCount).ToKeyPairRepo ().ToSorters (SwitchesPerSorter' SorterCount' rando.ToGuid ()).ToSorterRepo ())); " is 307.
Long Statement,SortingNetworkDm.Steps,SwitchablePoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SwitchablePoolStep.cs,Load,The length of the statement  "	return new SwitchablePoolStepImpl (guid: guid' name: name' description: description' index: index' outputEntities: outputSwitchables' switchableType: switchableType' keyCount: keyCount' seedIn: seedIn' switchableCount: switchableCount); " is 236.
Long Statement,SortingNetworkDm.Steps,SwitchablePoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SwitchablePoolStep.cs,Create,The length of the statement  "	var switchablePoolRandGen = new SwitchablePoolStepImpl (guid: guid' name: name' description: description' index: index' outputEntities: null' switchableType: switchableType' keyCount: keyCount' seedIn: seedIn' switchableCount: switchableCount); " is 244.
Long Statement,SortingNetworkDm.Steps,SwitchablePoolStep,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SwitchablePoolStep.cs,CreateAndRun,The length of the statement  "	var switchablePoolRandGen = Create (guid: guid' name: name' description: description' index: index' switchableType: switchableType' keyCount: keyCount' seedIn: seedIn' switchableCount: switchableCount); " is 202.
Long Statement,SortingNetworkDm.Steps,SwitchablePoolStepImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SwitchablePoolStep.cs,Execute,The length of the statement  "	AddOutputEnity (SwitchablePoolEntity.Make (guid: Guid' name: Name' description: Description' switchableRepo: switchableRepo)); " is 126.
Long Statement,SortingNetworkDm.TestData,TestEntities,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\TestData\TestEntities.cs,TestSorterPoolEntity,The length of the statement  "	return SorterPoolEntity.Make (guid: Guid.NewGuid ()' name: TestConstantsDm.SorterPoolEntityName' description: TestConstantsDm.SorterPoolEntityDescription' sorterRepo: TestSorters.SorterRepo (repoSeed)); " is 202.
Long Statement,SortingNetworkDm.TestData,TestEntities,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\TestData\TestEntities.cs,TestSorterResultPoolEntity,The length of the statement  "	return SorterResultPoolEntity.Make (guid: Guid.NewGuid ()' name: TestConstantsDm.SorterResultPoolEntityName' description: TestConstantsDm.SorterResultPoolEntityDescription' sorterResultRepo: TestSorterResults.SorterResultRepo (repoSeed)); " is 238.
Long Statement,SortingNetworkDm.TestData,TestEntities,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\TestData\TestEntities.cs,TestSwitchablePoolEntity,The length of the statement  "	return SwitchablePoolEntity.Make (guid: Guid.NewGuid ()' name: TestConstantsDm.SwitchablePoolEntityName' description: TestConstantsDm.SwitchablePoolEntityDescription' switchableRepo: TestSwitchable.SwitchableRepo (repoSeed)); " is 225.
Long Statement,SortingNetworkDm.Workflows,SorterWorkflow,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Workflows\SorterWorkflow.cs,Create,The length of the statement  "	return new SorterWorkflowImpl (fileName: name' filePath: string.Empty' guid: Guid.NewGuid ()' type: typeof(SorterWorkflow).Name' entities: Enumerable.Empty<IEntity> ()' steps: Enumerable.Empty<IStep> ()); " is 204.
Long Statement,SortingNetworkDm.Workflows,SorterWorkflow,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Workflows\SorterWorkflow.cs,Load,The length of the statement  "	return new SorterWorkflowImpl (fileName: name' filePath: path' guid: guid' type: typeof(SorterWorkflow).Name' entities: entities' steps: steps); " is 144.
Long Statement,SortingNetworkDm.Json.Workflows,SorterWorkflowToJson,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Json\Workflows\SorterWorkflowToJson.cs,ToSorterWorkflow,The length of the statement  "	return SorterWorkflow.Load (name: sorterWorkflowToJson.FileName' path: sorterWorkflowToJson.FilePath' guid: sorterWorkflowToJson.Guid' entities: entityProviderFromWorkflow.Entities' steps: sorterWorkflowToJson.Steps.Select (T => ConvertToStep (T' entityProviderFromWorkflow))); " is 277.
Missing Default,SortingNetworkDm.Steps,SwitchablePoolStepImpl,C:\repos\tp-nscan_WpfWorklist\SortingNetworkDm\Steps\SwitchablePoolStep.cs,Execute,The following switch statement is missing a default case: switch (SwitchableType) {  case SwitchableType.BitArray:  	switchableRepo = SwitchableBitArray.MakeRandoms (KeyCount' rando' SwitchableCount).ToSwitchableRepo ();  	break;  case SwitchableType.IntArray:  	switchableRepo = SwitchableIntArray.MakeRandoms (KeyCount' rando' SwitchableCount).ToSwitchableRepo ();  	break;  case SwitchableType.Short:  	switchableRepo = SwitchableShort.MakeRandoms (rando' SwitchableCount).ToSwitchableRepo ();  	break;  }  
