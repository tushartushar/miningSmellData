Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WorkflowWorklist.ViewModels,WorkItemVmImpl,C:\repos\tp-nscan_WpfWorklist\WorkflowWorklist\ViewModels\WorkItemVm.cs,WorkItem_WorkItemEvemt,Cyclomatic complexity of the method is 12
Complex Method,WorkflowWorklist.ViewModels,WorklistVm,C:\repos\tp-nscan_WpfWorklist\WorkflowWorklist\ViewModels\WorklistVm.cs,Worklist_WorkListChanged,Cyclomatic complexity of the method is 13
Long Statement,WorkflowWorklist.Models,IterativeWorkItem,C:\repos\tp-nscan_WpfWorklist\WorkflowWorklist\Models\IterativeWorkItem.cs,Make,The length of the statement  "	return new IterativeWorkItemImpl<T> (name: name' initialConditon: initialConditon' updateOperation: updateOperation' totalIterations: totalIterations); " is 151.
Long Statement,WorkflowWorklist.Models,IterativeWorkItem,C:\repos\tp-nscan_WpfWorklist\WorkflowWorklist\Models\IterativeWorkItem.cs,Test,The length of the statement  "	return new IterativeWorkItemImpl<string> (name: "name_" + index' initialConditon: "initialConditon"' updateOperation: s => s + "_step"' totalIterations: 5); " is 156.
Long Statement,WorkflowWorklist.Models,IterativeWorkItemImpl,C:\repos\tp-nscan_WpfWorklist\WorkflowWorklist\Models\IterativeWorkItem.cs,RunAsync,The length of the statement  "		_progressChanged.OnNext (ProgressEventArgs.Create (taskId: Guid' message: string.Format ("Step {0} of {1} completed"' _currentIteration + 1' TotalIterations)' data: CurrentConditon)); " is 183.
Magic Number,WorkflowWorklist.Models,IterativeWorkItem,C:\repos\tp-nscan_WpfWorklist\WorkflowWorklist\Models\IterativeWorkItem.cs,Test,The following statement contains a magic number: return new IterativeWorkItemImpl<string> (name: "name_" + index' initialConditon: "initialConditon"' updateOperation: s => s + "_step"' totalIterations: 5);  
Magic Number,WorkflowWorklist.ViewModels.Design,DesignWorklistVm,C:\repos\tp-nscan_WpfWorklist\WorkflowWorklist\ViewModels\Design\DesignWorklistVm.cs,DesignWorklistVm,The following statement contains a magic number: foreach (var workItem in WorkItems) {  	var workItemVm = WorkItemVm.Make (workItem);  	workItemVm.Message = "Message of " + workItem.Name;  	workItemVm.WorkItemVmState = (WorkItemVmState)((i++) % 5);  	WorkItemVMs.Add (workItemVm);  	i++;  }  
Magic Number,WorkflowWorklist.ViewModels.Design,DesignWorklistVm,C:\repos\tp-nscan_WpfWorklist\WorkflowWorklist\ViewModels\Design\DesignWorklistVm.cs,DesignWorklistVm,The following statement contains a magic number: workItemVm.WorkItemVmState = (WorkItemVmState)((i++) % 5);  
Missing Default,WorkflowWorklist.ViewModels,WorkItemVmImpl,C:\repos\tp-nscan_WpfWorklist\WorkflowWorklist\ViewModels\WorkItemVm.cs,WorkItem_WorkItemEvemt,The following switch statement is missing a default case: switch (e.WorkItemEventType) {  case WorkItemEventType.Cancelled:  	WorkItemVmState = WorkItemVmState.Cancelled;  	break;  case WorkItemEventType.Error:  	WorkItemVmState = WorkItemVmState.Error;  	break;  case WorkItemEventType.Completed:  	WorkItemVmState = WorkItemVmState.Completed;  	break;  case WorkItemEventType.Started:  	WorkItemVmState = WorkItemVmState.Running;  	break;  }  
Missing Default,WorkflowWorklist.ViewModels,WorklistVm,C:\repos\tp-nscan_WpfWorklist\WorkflowWorklist\ViewModels\WorklistVm.cs,Worklist_WorkListChanged,The following switch statement is missing a default case: switch (worklistEventArgs.WorklistEventType) {  case WorklistEventType.Started:  	Message = "Running";  	break;  case WorklistEventType.Stopped:  	Message = "Stopped";  	break;  case WorklistEventType.ItemCancelled:  	break;  case WorklistEventType.ItemCompleted:  	break;  case WorklistEventType.ItemScheduled:  	WorkItemVMs.Add (WorkItemVm.Make (worklistEventArgs.WorkItem));  	break;  }  
