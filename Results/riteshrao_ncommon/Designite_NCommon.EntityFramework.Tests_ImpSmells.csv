Implementation smell,Namespace,Class,File,Method,Description
Magic Number,NCommon.Data.EntityFramework.Tests,EFRepositoryTransactionTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon.EntityFramework\tests\NCommon.EntityFramework.Tests\EFRepositoryTransactionTests.cs,can_commit_multiple_db_operations,The following statement contains a magic number: var salesPerson = new SalesPerson { FirstName = "Jane"' LastName = "Doe"' SalesQuota = 2000 };
Magic Number,NCommon.Data.EntityFramework.Tests,EFRepositoryTransactionTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon.EntityFramework\tests\NCommon.EntityFramework.Tests\EFRepositoryTransactionTests.cs,can_rollback_multipe_db_operations,The following statement contains a magic number: var salesPerson = new SalesPerson { FirstName = "Jane"' LastName = "Doe"' SalesQuota = 2000 };
Magic Number,NCommon.Data.EntityFramework.Tests,EFTestDataActions,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon.EntityFramework\tests\NCommon.EntityFramework.Tests\EFTestDataActions.cs,CreateOrderForCustomer,The following statement contains a magic number: var order = new Order              {                  Customer = customer'                  OrderDate = DateTime.Now.AddDays(-5)'                  ShipDate = DateTime.Now.AddDays(5)              };
Magic Number,NCommon.Data.EntityFramework.Tests,EFTestDataActions,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon.EntityFramework\tests\NCommon.EntityFramework.Tests\EFTestDataActions.cs,CreateOrderForCustomer,The following statement contains a magic number: var order = new Order              {                  Customer = customer'                  OrderDate = DateTime.Now.AddDays(-5)'                  ShipDate = DateTime.Now.AddDays(5)              };
Magic Number,NCommon.Data.EntityFramework.Tests,EFTestDataActions,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon.EntityFramework\tests\NCommon.EntityFramework.Tests\EFTestDataActions.cs,CreateItem,The following statement contains a magic number: var orderItem = new OrderItem              {                  Order = order'                  Price = 1'                  Product = product'                  Quantity = 3              };
Magic Number,NCommon.Data.EntityFramework.Tests,EFTestDataActions,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon.EntityFramework\tests\NCommon.EntityFramework.Tests\EFTestDataActions.cs,CreateSalesPerson,The following statement contains a magic number: var salesPerson = new SalesPerson              {                  FirstName = "Jone" + RandomString()'                  LastName = "Do" + RandomString()'                  SalesQuota = 1000              };
Magic Number,NCommon.Data.EntityFramework.Tests,EFRepositoryQueryTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon.EntityFramework\tests\NCommon.EntityFramework.Tests\EFRepositoryQueryTests.cs,Can_query_using_specification,The following statement contains a magic number: testData.Batch(actions =>                  {                      actions.CreateOrdersForCustomers(actions.CreateCustomersInState("PA"' 2));                      actions.CreateOrdersForCustomers(actions.CreateCustomersInState("DE"' 5));                      actions.CreateOrdersForCustomers(actions.CreateCustomersInState("LA"' 3));                  });
Magic Number,NCommon.Data.EntityFramework.Tests,EFRepositoryQueryTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon.EntityFramework\tests\NCommon.EntityFramework.Tests\EFRepositoryQueryTests.cs,Can_query_using_specification,The following statement contains a magic number: testData.Batch(actions =>                  {                      actions.CreateOrdersForCustomers(actions.CreateCustomersInState("PA"' 2));                      actions.CreateOrdersForCustomers(actions.CreateCustomersInState("DE"' 5));                      actions.CreateOrdersForCustomers(actions.CreateCustomersInState("LA"' 3));                  });
Magic Number,NCommon.Data.EntityFramework.Tests,EFRepositoryQueryTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon.EntityFramework\tests\NCommon.EntityFramework.Tests\EFRepositoryQueryTests.cs,Can_query_using_specification,The following statement contains a magic number: testData.Batch(actions =>                  {                      actions.CreateOrdersForCustomers(actions.CreateCustomersInState("PA"' 2));                      actions.CreateOrdersForCustomers(actions.CreateCustomersInState("DE"' 5));                      actions.CreateOrdersForCustomers(actions.CreateCustomersInState("LA"' 3));                  });
Magic Number,NCommon.Data.EntityFramework.Tests,EFRepositoryQueryTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon.EntityFramework\tests\NCommon.EntityFramework.Tests\EFRepositoryQueryTests.cs,Can_query_using_specification,The following statement contains a magic number: Assert.That(results.Count()' Is.EqualTo(5));
