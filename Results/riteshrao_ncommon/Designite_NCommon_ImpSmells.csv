Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NCommon.Data.Impl,UnitOfWorkTransaction,C:\repos\riteshrao_ncommon\NCommon\src\Data\Impl\UnitOfWorkTransaction.cs,OnScopeCommitting,The length of the statement  "                _logger.Info(x => x("All scopes have signalled a commit on transaction {0}. Flushing unit of work and comitting attached TransactionScope."' _transactionId)); " is 158.
Long Statement,NCommon.Data.Impl,UnitOfWorkTransaction,C:\repos\riteshrao_ncommon\NCommon\src\Data\Impl\UnitOfWorkTransaction.cs,OnScopeRollingBack,The length of the statement  "            _logger.Info(x => x("Detaching all scopes and disposing of attached TransactionScope on transaction {0}"' _transactionId)); " is 123.
Long Statement,NCommon.Data.Impl,TransactionManager,C:\repos\riteshrao_ncommon\NCommon\src\Data\Impl\TransactionManager.cs,EnlistScope,The length of the statement  "                _logger.Debug(x => x("Enlisting scope {0} with mode {1} requires a new TransactionScope to be created."' scope.ScopeId' mode)); " is 127.
Long Statement,NCommon.Data.Impl,TransactionManager,C:\repos\riteshrao_ncommon\NCommon\src\Data\Impl\TransactionManager.cs,OnTransactionDisposing,The length of the statement  "            _logger.Info(x => x("UnitOfWorkTransaction {0} signalled a disposed. Unregistering transaction from TransactionManager {1}"' " is 124.
Long Statement,NCommon.Data.Impl,TransactionScopeHelper,C:\repos\riteshrao_ncommon\NCommon\src\Data\Impl\TransactionScopeHelper.cs,CreateScope,The length of the statement  "                return new TransactionScope(TransactionScopeOption.RequiresNew' new TransactionOptions { IsolationLevel = isolationLevel }); " is 124.
Long Statement,NCommon.Data.Impl,TransactionScopeHelper,C:\repos\riteshrao_ncommon\NCommon\src\Data\Impl\TransactionScopeHelper.cs,CreateScope,The length of the statement  "            return new TransactionScope(TransactionScopeOption.Required' new TransactionOptions { IsolationLevel = isolationLevel }); " is 121.
Empty Catch Block,NCommon.Extensions,CollectionExtensions,C:\repos\riteshrao_ncommon\NCommon\src\Extensions\CollectionExtensions.cs,TryForEach,The method has an empty catch block.
Empty Catch Block,NCommon.Extensions,CollectionExtensions,C:\repos\riteshrao_ncommon\NCommon\src\Extensions\CollectionExtensions.cs,TryForEach,The method has an empty catch block.
Magic Number,NCommon.Rules,ValidationError,C:\repos\riteshrao_ncommon\NCommon\src\Rules\ValidationError.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  return (Message.GetHashCode() * 397) ^ Property.GetHashCode();              }
Magic Number,NCommon.Util,GuidCombGenerator,C:\repos\riteshrao_ncommon\NCommon\src\Util\GuidCombGenerator.cs,Generate,The following statement contains a magic number: var array = BitConverter.GetBytes((long) (timeOfDay.TotalMilliseconds/3.333333));
Magic Number,NCommon.Util,GuidCombGenerator,C:\repos\riteshrao_ncommon\NCommon\src\Util\GuidCombGenerator.cs,Generate,The following statement contains a magic number: Array.Copy(bytes' bytes.Length - 2' destinationArray' destinationArray.Length - 6' 2);
Magic Number,NCommon.Util,GuidCombGenerator,C:\repos\riteshrao_ncommon\NCommon\src\Util\GuidCombGenerator.cs,Generate,The following statement contains a magic number: Array.Copy(bytes' bytes.Length - 2' destinationArray' destinationArray.Length - 6' 2);
Magic Number,NCommon.Util,GuidCombGenerator,C:\repos\riteshrao_ncommon\NCommon\src\Util\GuidCombGenerator.cs,Generate,The following statement contains a magic number: Array.Copy(bytes' bytes.Length - 2' destinationArray' destinationArray.Length - 6' 2);
Magic Number,NCommon.Util,GuidCombGenerator,C:\repos\riteshrao_ncommon\NCommon\src\Util\GuidCombGenerator.cs,Generate,The following statement contains a magic number: Array.Copy(array' array.Length - 4' destinationArray' destinationArray.Length - 4' 4);
Magic Number,NCommon.Util,GuidCombGenerator,C:\repos\riteshrao_ncommon\NCommon\src\Util\GuidCombGenerator.cs,Generate,The following statement contains a magic number: Array.Copy(array' array.Length - 4' destinationArray' destinationArray.Length - 4' 4);
Magic Number,NCommon.Util,GuidCombGenerator,C:\repos\riteshrao_ncommon\NCommon\src\Util\GuidCombGenerator.cs,Generate,The following statement contains a magic number: Array.Copy(array' array.Length - 4' destinationArray' destinationArray.Length - 4' 4);
Magic Number,NCommon.Util,Inflector,C:\repos\riteshrao_ncommon\NCommon\src\Util\Inflector.cs,Ordinalize,The following statement contains a magic number: int nMod100 = n % 100;
Magic Number,NCommon.Util,Inflector,C:\repos\riteshrao_ncommon\NCommon\src\Util\Inflector.cs,Ordinalize,The following statement contains a magic number: if (nMod100 >= 11 && nMod100 <= 13)              {                  return number + "th";              }
Magic Number,NCommon.Util,Inflector,C:\repos\riteshrao_ncommon\NCommon\src\Util\Inflector.cs,Ordinalize,The following statement contains a magic number: if (nMod100 >= 11 && nMod100 <= 13)              {                  return number + "th";              }
Magic Number,NCommon.Util,Inflector,C:\repos\riteshrao_ncommon\NCommon\src\Util\Inflector.cs,Ordinalize,The following statement contains a magic number: switch (n % 10)              {                  case 1:                      return number + "st";                  case 2:                      return number + "nd";                  case 3:                      return number + "rd";                  default:                      return number + "th";              }
Magic Number,NCommon.Util,Inflector,C:\repos\riteshrao_ncommon\NCommon\src\Util\Inflector.cs,Ordinalize,The following statement contains a magic number: switch (n % 10)              {                  case 1:                      return number + "st";                  case 2:                      return number + "nd";                  case 3:                      return number + "rd";                  default:                      return number + "th";              }
Magic Number,NCommon.Util,Inflector,C:\repos\riteshrao_ncommon\NCommon\src\Util\Inflector.cs,Ordinalize,The following statement contains a magic number: switch (n % 10)              {                  case 1:                      return number + "st";                  case 2:                      return number + "nd";                  case 3:                      return number + "rd";                  default:                      return number + "th";              }
