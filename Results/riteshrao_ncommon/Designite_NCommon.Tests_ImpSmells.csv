Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NCommon.Tests.Data,Given_auto_commit_is_enabed,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\Data\UnitOfWorkScopeTests.cs,Should_signal_rollback_if_auto_commit_failed,The length of the statement  "            Assert.That(_transactionManager.RollbackCount(scopeId)' Is.EqualTo(0)); //Rollback should not be signalled because auto commit fails. " is 133.
Long Statement,NCommon.Rules.Tests,EntityValidatorBaseTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\Rules\EntityValidatorBaseTests.cs,Validate_returns_two_validation_errors,The length of the statement  "            validator.AddValidation("Passed Rule"' new ValidationRule<object>(passedSpec' "Successfull Validation"' "ShouldNotAppear")); " is 124.
Magic Number,NCommon.Tests.Events,DomainEventTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\Events\DomainEventTests.cs,registered_callbacks_are_called_when_event_is_raised,The following statement contains a magic number: Assert.That(callbacksListFromStorage.Count' Is.EqualTo(2));
Magic Number,NCommon.Tests.Events,DomainEventTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\Events\DomainEventTests.cs,callbacks_are_cleared_when_clear_is_called,The following statement contains a magic number: Assert.That(callbacksListFromStorage.Count' Is.EqualTo(2));
Magic Number,NCommon.Rules.Tests,EntityValidatorBaseTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\Rules\EntityValidatorBaseTests.cs,Validate_returns_two_validation_errors,The following statement contains a magic number: Assert.That(result.Errors.Count()' Is.EqualTo(2));
Magic Number,NCommon.Specifications.Tests,SpecificationTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\Specifications\SpecificationTests.cs,Simple_Specification_Should_Eval_ToFalse,The following statement contains a magic number: var testObject = new TestObject {FirstName = "John"' LastName = "Doe"' Age = 20};
Magic Number,NCommon.Specifications.Tests,SpecificationTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\Specifications\SpecificationTests.cs,Simple_Specification_Should_Eval_ToFalse,The following statement contains a magic number: var testSpec = new Specification<TestObject>(x => x.Age > 30);
Magic Number,NCommon.Specifications.Tests,SpecificationTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\Specifications\SpecificationTests.cs,Simple_Specification_Should_Eval_ToTrue,The following statement contains a magic number: var testObject = new TestObject { FirstName = "John"' LastName = "Doe"' Age = 20 };
Magic Number,NCommon.Specifications.Tests,SpecificationTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\Specifications\SpecificationTests.cs,Simple_Specification_Should_Eval_ToTrue,The following statement contains a magic number: var testSpec = new Specification<TestObject>(x => x.Age < 30);
Magic Number,NCommon.Specifications.Tests,SpecificationTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\Specifications\SpecificationTests.cs,Complex_Specification_Should_Eval_ToFalse,The following statement contains a magic number: var testObject = new TestObject { FirstName = "John"' LastName = "Doe"' Age = 20 };
Magic Number,NCommon.Specifications.Tests,SpecificationTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\Specifications\SpecificationTests.cs,Complex_Specification_Should_Eval_ToFalse,The following statement contains a magic number: var testSpec = new Specification<TestObject>(x => x.Age > 30) &                             new Specification<TestObject>(x => x.FirstName.StartsWith("J"));
Magic Number,NCommon.Specifications.Tests,SpecificationTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\Specifications\SpecificationTests.cs,Complex_Specification_Should_Eval_ToTrue,The following statement contains a magic number: var testObject = new TestObject { FirstName = "John"' LastName = "Doe"' Age = 20 };
Magic Number,NCommon.Specifications.Tests,SpecificationTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\Specifications\SpecificationTests.cs,Complex_Specification_Should_Eval_ToTrue,The following statement contains a magic number: var testSpec = new Specification<TestObject>(x => x.Age < 30) &                             new Specification<TestObject>(x => x.FirstName.StartsWith("J"));
Magic Number,NCommon.Tests.State,HtpRuntimeCacheTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\State\HtpRuntimeCacheTests.cs,Put_with_absolute_expiration_removes_key_after_expiration_period,The following statement contains a magic number: httpCache.Put("test_key"' state' DateTime.Now.AddMilliseconds(500));
Magic Number,NCommon.Tests.State,HtpRuntimeCacheTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\State\HtpRuntimeCacheTests.cs,Put_with_absolute_expiration_removes_key_after_expiration_period,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMilliseconds(800));
Magic Number,NCommon.Tests.State,HtpRuntimeCacheTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\State\HtpRuntimeCacheTests.cs,Put_with_sliding_expiration_removes_key_after_expiration_period,The following statement contains a magic number: httpCache.Put("test_key"' state' TimeSpan.FromMilliseconds(500));
Magic Number,NCommon.Tests.State,HtpRuntimeCacheTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\State\HtpRuntimeCacheTests.cs,Put_with_sliding_expiration_removes_key_after_expiration_period,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMilliseconds(200));
Magic Number,NCommon.Tests.State,HtpRuntimeCacheTests,C:\research\architectureSmells\repos\riteshrao_ncommon\NCommon\tests\State\HtpRuntimeCacheTests.cs,Put_with_sliding_expiration_removes_key_after_expiration_period,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMilliseconds(800));
