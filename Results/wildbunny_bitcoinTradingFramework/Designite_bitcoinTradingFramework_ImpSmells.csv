Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,AddDataPoint,The method has 5 parameters. Parameters: smaF' smaS' price' now' reformatGraph
Long Statement,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,WindowsThread,The length of the statement  "            //m_depthChart = new Chart { Size = new Size(m_width - kBorder' m_height / kNumCharts - kBorder * 4)' Top = m_chart.Bottom }; " is 125.
Long Statement,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,WindowsThread,The length of the statement  "            //m_profitChart = new Chart { Size = new Size(m_width - kBorder' m_height / kNumCharts - kBorder * 4)' Top = m_depthChart.Bottom }; " is 131.
Empty Catch Block,bitcoinTradingFramework,Program,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Program.cs,Main,The method has an empty catch block.
Magic Number,bitcoinTradingFramework.Algorithms,AlgoBase,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Algorithms\AlgoBase.cs,CalculateProfit,The following statement contains a magic number: decimal profitPercent = totalBtcValueStart > 0  		        ? 100*(totalBtcValueNow - totalBtcValueStart)/totalBtcValueStart  		        : 0;
Magic Number,bitcoinTradingFramework.Algorithms,NaiveMarketMaker,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Algorithms\NaiveMarketMaker.cs,Update,The following statement contains a magic number: decimal midPrice = (summary.GetAskPrice(0) + summary.GetBidPrice(0))*0.5M;
Magic Number,bitcoinTradingFramework,Program,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Program.cs,Main,The following statement contains a magic number: Rendering renderer = new Rendering(800' 400);
Magic Number,bitcoinTradingFramework,Program,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Program.cs,Main,The following statement contains a magic number: Rendering renderer = new Rendering(800' 400);
Magic Number,bitcoinTradingFramework,Program,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Program.cs,Main,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,AddDataPoint,The following statement contains a magic number: m_debugRenderForm.BeginInvoke((Action) (() =>              {                  int i = m_bidData.Count - 1;                  var halfHour = new TimeSpan(0' 30' 0);                  while (i >= 0 && now - m_times[i] < halfHour)                  {                      i--;                  }                    if (i > 0)                  {                      m_askData.RemoveRange(0' i);                      m_bidData.RemoveRange(0' i);                      m_lastPrice.RemoveRange(0' i);                        lock (m_times)                      {                          m_times.RemoveRange(0' i);                      }                        foreach (var kvp in m_markers.ToList())                      {                          if (now - kvp.Key > halfHour)                          {                              m_markers.Remove(kvp.Key);                          }                      }                  }                    m_bidData.Add(smaF);                  m_askData.Add(smaS);                  m_lastPrice.Add(price);                  lock (m_times)                  {                      m_times.Add(now);                  }                    if (reformatGraph)                  {                      ReformatGraphInternal();                  }              }));
Magic Number,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,AddProfitDataPoints,The following statement contains a magic number: m_debugRenderForm.BeginInvoke((Action) (() =>              {                  /*if (m_profitPercentage.Count > kBufferedPoints)  				{  					m_profitPercentage.RemoveRange(0' 1);  					m_profitTimeSeconds.RemoveRange(0' 1);  				}*/                    m_profitPercentage.Add(profitPercentage);                  m_profitTimeSeconds.Add(timeSeconds);                    m_profitChart.Series[kProfitSeriesName].Points.DataBindXY(m_profitTimeSeconds' m_profitPercentage);                    decimal ymin = m_profitPercentage.Min();                  decimal ymax = m_profitPercentage.Max();                  decimal range = ymax - ymin;                    if (range > 0)                  {                      m_profitArea.AxisY.Minimum = (double) (ymin - range/2);                      m_profitArea.AxisY.Maximum = (double) (ymax + range/2);                  }                    m_profitChart.Invalidate();              }));
Magic Number,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,AddProfitDataPoints,The following statement contains a magic number: m_debugRenderForm.BeginInvoke((Action) (() =>              {                  /*if (m_profitPercentage.Count > kBufferedPoints)  				{  					m_profitPercentage.RemoveRange(0' 1);  					m_profitTimeSeconds.RemoveRange(0' 1);  				}*/                    m_profitPercentage.Add(profitPercentage);                  m_profitTimeSeconds.Add(timeSeconds);                    m_profitChart.Series[kProfitSeriesName].Points.DataBindXY(m_profitTimeSeconds' m_profitPercentage);                    decimal ymin = m_profitPercentage.Min();                  decimal ymax = m_profitPercentage.Max();                  decimal range = ymax - ymin;                    if (range > 0)                  {                      m_profitArea.AxisY.Minimum = (double) (ymin - range/2);                      m_profitArea.AxisY.Maximum = (double) (ymax + range/2);                  }                    m_profitChart.Invalidate();              }));
Magic Number,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,ReformatGraphInternal,The following statement contains a magic number: var annotation = new ArrowAnnotation {ArrowSize = 3' ArrowStyle = ArrowStyle.Simple};
Magic Number,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,ReformatGraphInternal,The following statement contains a magic number: annotation.Height = c.m_up ? 5 : -5;
Magic Number,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,ReformatGraphInternal,The following statement contains a magic number: annotation.Height = c.m_up ? 5 : -5;
Magic Number,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,ReformatGraphInternal,The following statement contains a magic number: bool allow = (!c.m_actioned && (DateTime.UtcNow - kvp.Key) < new TimeSpan(0' 10' 0)) ||                                               c.m_actioned;
Magic Number,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,ReformatGraphInternal,The following statement contains a magic number: m_area.AxisY.Minimum = (double) (ymin - range/2);
Magic Number,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,ReformatGraphInternal,The following statement contains a magic number: m_area.AxisY.Maximum = (double) (ymax + range/2);
Magic Number,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,WindowsThread,The following statement contains a magic number: m_chart = new Chart {Size = new Size(m_width - kBorder' m_height/kNumCharts - kBorder*4)};
Magic Number,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,WindowsThread,The following statement contains a magic number: m_profitChart = new Chart              {                  Size = new Size(m_width - kBorder' m_height/kNumCharts - kBorder*4)'                  Top = m_chart.Bottom              };
Magic Number,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,WindowsThread,The following statement contains a magic number: var f = new Font("Consolas"' 8);
Magic Number,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,WindowsThread,The following statement contains a magic number: series.BorderWidth = 2;
Magic Number,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,WindowsThread,The following statement contains a magic number: series.BorderWidth = 2;
Magic Number,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,WindowsThread,The following statement contains a magic number: series.BorderWidth = 2;
Magic Number,bitcoinTradingFramework,Rendering,D:\research\architectureSmells\repos\wildbunny_bitcoinTradingFramework\bitcoinTradingFramework\Rendering.cs,OnWindowResized,The following statement contains a magic number: m_chart.Height = m_profitChart.Height = m_debugRenderForm.Height/kNumCharts - kBorder*4;
