Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,ParseFieldList,Cyclomatic complexity of the method is 18
Complex Method,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,ParseGroupByFieldList,Cyclomatic complexity of the method is 17
Complex Method,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,InsertGroupByInto,Cyclomatic complexity of the method is 31
Complex Method,Vancl.WMS.Basic.Data.Ext,DbDataReaderExt,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\Ext\DbDataReaderExt.cs,ToEntity,Cyclomatic complexity of the method is 8
Complex Method,Vancl.WMS.Basic.Data.MSSql,MSSqlDbHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\MSSql\MSSqlDbHelper.cs,PrepareCommand,Cyclomatic complexity of the method is 8
Complex Method,Vancl.WMS.Basic.Exceptions,DataReaderExtension,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Exceptions\DataReaderExtension.cs,ToEntityList,Cyclomatic complexity of the method is 8
Complex Method,Vancl.WMS.Basic.Exceptions,DataTableExtension,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Exceptions\DataTableExtension.cs,ForEachEntityList,Cyclomatic complexity of the method is 9
Complex Method,Vancl.WMS.Basic.Exceptions,DataTableExtension,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Exceptions\DataTableExtension.cs,ToEntityListByInvoke,Cyclomatic complexity of the method is 11
Long Parameter List,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,InsertInto,The method has 5 parameters.
Long Parameter List,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,InsertGroupByInto,The method has 5 parameters.
Long Parameter List,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,InsertJoinInto,The method has 5 parameters.
Long Parameter List,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,SelectInto,The method has 5 parameters.
Long Parameter List,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,SelectGroupByInto,The method has 5 parameters.
Long Parameter List,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,SelectJoinInto,The method has 5 parameters.
Long Parameter List,Vancl.WMS.Basic.Data.MSSql,MSSqlDbHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\MSSql\MSSqlDbHelper.cs,ExecuteReader,The method has 5 parameters.
Long Parameter List,Vancl.WMS.Basic.Data.MSSql,MSSqlDbHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\MSSql\MSSqlDbHelper.cs,ExecuteReader,The method has 6 parameters.
Long Parameter List,Vancl.WMS.Basic.Data.MSSql,MSSqlDbHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\MSSql\MSSqlDbHelper.cs,PrepareCommand,The method has 7 parameters.
Long Parameter List,Vancl.WMS.Basic.Exceptions,WebOrderPickException,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Exceptions\WebOrderPickException.cs,WebOrderPickException,The method has 5 parameters.
Long Parameter List,Vancl.WMS.Basic.Utils,MailUtil,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Util\MailUtil.cs,SendMail,The method has 8 parameters.
Long Parameter List,Vancl.WMS.Basic.Utils,MailUtil,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Util\MailUtil.cs,SendMail,The method has 10 parameters.
Long Parameter List,Vancl.WMS.Basic.Utils,MailUtil,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Util\MailUtil.cs,SendMail,The method has 7 parameters.
Long Parameter List,Vancl.WMS.Basic.Utils,MailUtil,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Util\MailUtil.cs,SendHtmlMail,The method has 7 parameters.
Long Parameter List,Vancl.WMS.Basic.Utils,MailUtil,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Util\MailUtil.cs,SendMail,The method has 9 parameters.
Long Parameter List,Vancl.WMS.Basic.Utils,MailUtil,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Util\MailUtil.cs,SendMail,The method has 9 parameters.
Long Parameter List,Vancl.WMS.Basic.Utils,MailUtil,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Util\MailUtil.cs,SendMailByAttachments,The method has 8 parameters.
Long Statement,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,CreateTable,The length of the statement  "				dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true)' Expression); " is 122.
Long Statement,Vancl.WMS.Basic.Data.MSSql,MSSqlDbHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\MSSql\MSSqlDbHelper.cs,ExecuteNonQuery,The length of the statement  "		PrepareCommand (cmd' connection' (SqlTransaction)null' commandType' commandText' commandParameters' out mustCloseConnection); " is 125.
Long Statement,Vancl.WMS.Basic.Data.MSSql,MSSqlDbHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\MSSql\MSSqlDbHelper.cs,ExecuteScalar,The length of the statement  "		PrepareCommand (cmd' connection' (SqlTransaction)null' commandType' commandText' commandParameters' out mustCloseConnection); " is 125.
Long Statement,Vancl.WMS.Basic.Data.MSSql,MSSqlDbHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\MSSql\MSSqlDbHelper.cs,ExecuteReader,The length of the statement  "	return ExecuteReader (connection' (SqlTransaction)null' commandType' commandText' commandParameters' SqlConnectionOwnership.External); " is 134.
Long Statement,Vancl.WMS.Basic.Data.MSSql,MSSqlDbHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\MSSql\MSSqlDbHelper.cs,ExecuteDataset,The length of the statement  "		PrepareCommand (cmd' connection' (SqlTransaction)null' commandType' commandText' commandParameters' out mustCloseConnection); " is 125.
Long Statement,Vancl.WMS.Basic.Data.MSSql,MSSqlDbHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\MSSql\MSSqlDbHelper.cs,ExecuteDataset,The length of the statement  "		PrepareCommand (cmd' connection' (SqlTransaction)null' CommandType.Text' commandText' commandParameters' out mustCloseConnection); " is 130.
Long Statement,Vancl.WMS.Basic.Data.MSSql,MSSqlDbHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\MSSql\MSSqlDbHelper.cs,PrepareCommand,The length of the statement  "				throw new ArgumentException ("The transaction was rollbacked or commited' please provide an open transaction."' "transaction"); " is 127.
Long Statement,Vancl.WMS.Basic.Exceptions,DataReaderExtension,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Exceptions\DataReaderExtension.cs,ToEntity,The length of the statement  "					var pi = Array.Find (propertyInfoList' p => p.Name.Equals (sqlDataReader.GetName (i)' StringComparison.CurrentCultureIgnoreCase)); " is 130.
Long Statement,Vancl.WMS.Basic.Exceptions,DataReaderExtension,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Exceptions\DataReaderExtension.cs,ToEntity,The length of the statement  "						pi.SetValue (model' pi.PropertyType.IsEnum ? Enum.Parse (pi.PropertyType' sqlDataReader [i].ToString ()) : sqlDataReader [i]' null); " is 132.
Long Statement,Vancl.WMS.Basic.Exceptions,DataReaderExtension,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Exceptions\DataReaderExtension.cs,ToEntityList,The length of the statement  "				keyvalue.Value.Set (model' keyvalue.Value.Property.PropertyType.IsEnum ? Enum.Parse (keyvalue.Value.Property.PropertyType' obj.ToString ()' true) : obj); " is 153.
Long Statement,Vancl.WMS.Basic.Utils,JsonUtilV,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Util\JsonUtilV.cs,JsonToObject,The length of the statement  "	System.Runtime.Serialization.Json.DataContractJsonSerializer serializer = new System.Runtime.Serialization.Json.DataContractJsonSerializer (t); " is 143.
Long Statement,Vancl.WMS.Basic.Utils,MailUtil,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Util\MailUtil.cs,SendSystemMail,The length of the statement  "		SendMail (SecurityUtil.Decrypt3DES (BasicConstants.VANCL_SMTP)' SecurityUtil.Decrypt3DES ("E680qtLPAemgny/s2IcuT4K6HGOA0n8/")' SecurityUtil.Decrypt3DES ("S5MDVu4L5GAPmM7flPQX7Q==")' mailAddress' SecurityUtil.Decrypt3DES ("oMRYNmDonyKHBrYvyDv0Rw==")' mailSubject' mailContent); " is 276.
Long Statement,Vancl.WMS.Basic.Utils,MailUtil,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Util\MailUtil.cs,SendSystemHtmlMail,The length of the statement  "		SendHtmlMail (SecurityUtil.Decrypt3DES (BasicConstants.VANCL_SMTP)' SecurityUtil.Decrypt3DES ("E680qtLPAemgny/s2IcuT4K6HGOA0n8/")' SecurityUtil.Decrypt3DES ("S5MDVu4L5GAPmM7flPQX7Q==")' mailAddress' SecurityUtil.Decrypt3DES ("oMRYNmDonyKHBrYvyDv0Rw==")' mailSubject' mailContent); " is 280.
Long Statement,Vancl.WMS.Basic.Utils,MailUtil,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Util\MailUtil.cs,SendSystemErrorMail,The length of the statement  "		SendMail (SecurityUtil.Decrypt3DES ("Rm0wv/1rPG6hWUIDwSiq/g==")' SecurityUtil.Decrypt3DES ("pgoZ7sspsMQFx2ynDioMtHvfVkJPQeshzmzBzU6bGHg=")' SecurityUtil.Decrypt3DES ("cTbgz2Uq8vWlWVViNbtsUA==")' mailAddress' SecurityUtil.Decrypt3DES ("pgoZ7sspsMQFx2ynDioMtHvfVkJPQeshzmzBzU6bGHg=")' mailSubject' mailContent); " is 309.
Long Statement,Vancl.WMS.Basic.Utils,MailUtil,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Util\MailUtil.cs,SendMailToUser,The length of the statement  "		SendMail (SecurityUtil.Decrypt3DES (BasicConstants.VANCL_SMTP)' SecurityUtil.Decrypt3DES (BasicConstants.WEBMASTER_USER_ID)' SecurityUtil.Decrypt3DES (BasicConstants.WEBMASTER_PWD)' mailAddress' SecurityUtil.Decrypt3DES (BasicConstants.WEBMASTER_USER_MAIL)' mailSubject' mailContent' true); " is 290.
Long Statement,Vancl.WMS.Basic.Utils,StringUtilv,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Util\StringUtil.cs,FilterSpecialChar,The length of the statement  "	return srcString.Trim ().Replace ("\""' string.Empty).Replace ("'"' string.Empty).Replace ("\r"' string.Empty).Replace ("\n"' string.Empty).Replace (":"' string.Empty).Replace ("ï¼š"' string.Empty); " is 196.
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,ParseFieldList,The following statement contains a magic number: for (int i = 0; i <= arrField.Length - 1; i++) {  	fldInfo = new FieldInfo ();  	FieldParts = arrField [i].Trim ().Split (' ');  	switch (FieldParts.Length) {  	case 1:  		//to be set at the end of the loop   		break;  	case 2:  		fldInfo.FieldAlias = FieldParts [1];  		break;  	default:  		return;  	}  	FieldParts = FieldParts [0].Split ('.');  	switch (FieldParts.Length) {  	case 1:  		fldInfo.FieldName = FieldParts [0];  		break;  	case 2:  		if (allowRelation == false) {  			return;  		}  		fldInfo.RelationName = FieldParts [0].Trim ();  		fldInfo.FieldName = FieldParts [1].Trim ();  		break;  	default:  		return;  	}  	if (fldInfo.FieldAlias == null) {  		fldInfo.FieldAlias = fldInfo.FieldName;  	}  	lstFieldInfo.Add (fldInfo);  }  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,ParseFieldList,The following statement contains a magic number: for (int i = 0; i <= arrField.Length - 1; i++) {  	fldInfo = new FieldInfo ();  	FieldParts = arrField [i].Trim ().Split (' ');  	switch (FieldParts.Length) {  	case 1:  		//to be set at the end of the loop   		break;  	case 2:  		fldInfo.FieldAlias = FieldParts [1];  		break;  	default:  		return;  	}  	FieldParts = FieldParts [0].Split ('.');  	switch (FieldParts.Length) {  	case 1:  		fldInfo.FieldName = FieldParts [0];  		break;  	case 2:  		if (allowRelation == false) {  			return;  		}  		fldInfo.RelationName = FieldParts [0].Trim ();  		fldInfo.FieldName = FieldParts [1].Trim ();  		break;  	default:  		return;  	}  	if (fldInfo.FieldAlias == null) {  		fldInfo.FieldAlias = fldInfo.FieldName;  	}  	lstFieldInfo.Add (fldInfo);  }  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,ParseFieldList,The following statement contains a magic number: switch (FieldParts.Length) {  case 1:  	//to be set at the end of the loop   	break;  case 2:  	fldInfo.FieldAlias = FieldParts [1];  	break;  default:  	return;  }  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,ParseFieldList,The following statement contains a magic number: switch (FieldParts.Length) {  case 1:  	fldInfo.FieldName = FieldParts [0];  	break;  case 2:  	if (allowRelation == false) {  		return;  	}  	fldInfo.RelationName = FieldParts [0].Trim ();  	fldInfo.FieldName = FieldParts [1].Trim ();  	break;  default:  	return;  }  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,ParseGroupByFieldList,The following statement contains a magic number: for (int i = 0; i <= Fields.Length - 1; i++) {  	Field = new FieldInfo ();  	FieldParts = Fields [i].Trim ().Split (' ');  	switch (FieldParts.Length) {  	case 1:  		//to be set at the end of the loop   		break;  	case 2:  		Field.FieldAlias = FieldParts [1];  		break;  	default:  		return;  	}  	FieldParts = FieldParts [0].Split ('(');  	switch (FieldParts.Length) {  	case 1:  		Field.FieldName = FieldParts [0];  		break;  	case 2:  		Field.Aggregate = FieldParts [0].Trim ().ToLower ();  		Field.FieldName = FieldParts [1].Trim (' '' ')');  		break;  	default:  		return;  	}  	if (Field.FieldAlias == null) {  		if (Field.Aggregate == null) {  			Field.FieldAlias = Field.FieldName;  		}  		else {  			Field.FieldAlias = Field.Aggregate + "of" + Field.FieldName;  		}  	}  	lstGroupByFieldInfo.Add (Field);  }  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,ParseGroupByFieldList,The following statement contains a magic number: for (int i = 0; i <= Fields.Length - 1; i++) {  	Field = new FieldInfo ();  	FieldParts = Fields [i].Trim ().Split (' ');  	switch (FieldParts.Length) {  	case 1:  		//to be set at the end of the loop   		break;  	case 2:  		Field.FieldAlias = FieldParts [1];  		break;  	default:  		return;  	}  	FieldParts = FieldParts [0].Split ('(');  	switch (FieldParts.Length) {  	case 1:  		Field.FieldName = FieldParts [0];  		break;  	case 2:  		Field.Aggregate = FieldParts [0].Trim ().ToLower ();  		Field.FieldName = FieldParts [1].Trim (' '' ')');  		break;  	default:  		return;  	}  	if (Field.FieldAlias == null) {  		if (Field.Aggregate == null) {  			Field.FieldAlias = Field.FieldName;  		}  		else {  			Field.FieldAlias = Field.Aggregate + "of" + Field.FieldName;  		}  	}  	lstGroupByFieldInfo.Add (Field);  }  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,ParseGroupByFieldList,The following statement contains a magic number: switch (FieldParts.Length) {  case 1:  	//to be set at the end of the loop   	break;  case 2:  	Field.FieldAlias = FieldParts [1];  	break;  default:  	return;  }  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,ParseGroupByFieldList,The following statement contains a magic number: switch (FieldParts.Length) {  case 1:  	Field.FieldName = FieldParts [0];  	break;  case 2:  	Field.Aggregate = FieldParts [0].Trim ().ToLower ();  	Field.FieldName = FieldParts [1].Trim (' '' ')');  	break;  default:  	return;  }  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,CreateTable,The following statement contains a magic number: foreach (string Field in Fields) {  	FieldsParts = Field.Trim ().Split (" ".ToCharArray ()' 3);  	// allow for spaces in the expression   	// add fieldname and datatype   	if (FieldsParts.Length == 2) {  		dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true));  		dc.AllowDBNull = true;  	}  	else if (FieldsParts.Length == 3)// add fieldname' datatype' and expression   	 {  		Expression = FieldsParts [2].Trim ();  		if (Expression.ToUpper () == "REQUIRED") {  			dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true));  			dc.AllowDBNull = false;  		}  		else {  			dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true)' Expression);  		}  	}  	else {  		return null;  	}  }  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,CreateTable,The following statement contains a magic number: foreach (string Field in Fields) {  	FieldsParts = Field.Trim ().Split (" ".ToCharArray ()' 3);  	// allow for spaces in the expression   	// add fieldname and datatype   	if (FieldsParts.Length == 2) {  		dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true));  		dc.AllowDBNull = true;  	}  	else if (FieldsParts.Length == 3)// add fieldname' datatype' and expression   	 {  		Expression = FieldsParts [2].Trim ();  		if (Expression.ToUpper () == "REQUIRED") {  			dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true));  			dc.AllowDBNull = false;  		}  		else {  			dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true)' Expression);  		}  	}  	else {  		return null;  	}  }  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,CreateTable,The following statement contains a magic number: foreach (string Field in Fields) {  	FieldsParts = Field.Trim ().Split (" ".ToCharArray ()' 3);  	// allow for spaces in the expression   	// add fieldname and datatype   	if (FieldsParts.Length == 2) {  		dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true));  		dc.AllowDBNull = true;  	}  	else if (FieldsParts.Length == 3)// add fieldname' datatype' and expression   	 {  		Expression = FieldsParts [2].Trim ();  		if (Expression.ToUpper () == "REQUIRED") {  			dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true));  			dc.AllowDBNull = false;  		}  		else {  			dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true)' Expression);  		}  	}  	else {  		return null;  	}  }  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,CreateTable,The following statement contains a magic number: foreach (string Field in Fields) {  	FieldsParts = Field.Trim ().Split (" ".ToCharArray ()' 3);  	// allow for spaces in the expression   	// add fieldname and datatype   	if (FieldsParts.Length == 2) {  		dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true));  		dc.AllowDBNull = true;  	}  	else if (FieldsParts.Length == 3)// add fieldname' datatype' and expression   	 {  		Expression = FieldsParts [2].Trim ();  		if (Expression.ToUpper () == "REQUIRED") {  			dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true));  			dc.AllowDBNull = false;  		}  		else {  			dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true)' Expression);  		}  	}  	else {  		return null;  	}  }  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,CreateTable,The following statement contains a magic number: FieldsParts = Field.Trim ().Split (" ".ToCharArray ()' 3);  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,CreateTable,The following statement contains a magic number: if (FieldsParts.Length == 2) {  	dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true));  	dc.AllowDBNull = true;  }  else if (FieldsParts.Length == 3)// add fieldname' datatype' and expression    {  	Expression = FieldsParts [2].Trim ();  	if (Expression.ToUpper () == "REQUIRED") {  		dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true));  		dc.AllowDBNull = false;  	}  	else {  		dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true)' Expression);  	}  }  else {  	return null;  }  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,CreateTable,The following statement contains a magic number: if (FieldsParts.Length == 2) {  	dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true));  	dc.AllowDBNull = true;  }  else if (FieldsParts.Length == 3)// add fieldname' datatype' and expression    {  	Expression = FieldsParts [2].Trim ();  	if (Expression.ToUpper () == "REQUIRED") {  		dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true));  		dc.AllowDBNull = false;  	}  	else {  		dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true)' Expression);  	}  }  else {  	return null;  }  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,CreateTable,The following statement contains a magic number: if (FieldsParts.Length == 2) {  	dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true));  	dc.AllowDBNull = true;  }  else if (FieldsParts.Length == 3)// add fieldname' datatype' and expression    {  	Expression = FieldsParts [2].Trim ();  	if (Expression.ToUpper () == "REQUIRED") {  		dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true));  		dc.AllowDBNull = false;  	}  	else {  		dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true)' Expression);  	}  }  else {  	return null;  }  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,CreateTable,The following statement contains a magic number: if (FieldsParts.Length == 3)// add fieldname' datatype' and expression    {  	Expression = FieldsParts [2].Trim ();  	if (Expression.ToUpper () == "REQUIRED") {  		dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true));  		dc.AllowDBNull = false;  	}  	else {  		dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true)' Expression);  	}  }  else {  	return null;  }  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,CreateTable,The following statement contains a magic number: if (FieldsParts.Length == 3)// add fieldname' datatype' and expression    {  	Expression = FieldsParts [2].Trim ();  	if (Expression.ToUpper () == "REQUIRED") {  		dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true));  		dc.AllowDBNull = false;  	}  	else {  		dc = dt.Columns.Add (FieldsParts [0].Trim ()' Type.GetType ("System." + FieldsParts [1].Trim ()' true' true)' Expression);  	}  }  else {  	return null;  }  
Magic Number,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,CreateTable,The following statement contains a magic number: Expression = FieldsParts [2].Trim ();  
Magic Number,Vancl.WMS.Basic.Net,NetworkHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Net\NetworkHelper.cs,GetAllLanIp,The following statement contains a magic number: for (int i = 0; i < 255; i++) {  	var ret = p.Send (prefixIp + "." + i.ToString ()' 300);  	if (ret.Status == IPStatus.TimedOut) {  		continue;  	}  	if (ret.Status == IPStatus.Success) {  		lst.Add (ret.Address);  	}  }  
Magic Number,Vancl.WMS.Basic.Net,NetworkHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Net\NetworkHelper.cs,GetAllLanIp,The following statement contains a magic number: for (int i = 0; i < 255; i++) {  	var ret = p.Send (prefixIp + "." + i.ToString ()' 300);  	if (ret.Status == IPStatus.TimedOut) {  		continue;  	}  	if (ret.Status == IPStatus.Success) {  		lst.Add (ret.Address);  	}  }  
Missing Default,Vancl.WMS.Basic.Data,DataSetHelper,C:\repos\neo2018_ZYFC\Vancl.WMS.Basic\Data\DataSetHelper.cs,InsertGroupByInto,The following switch statement is missing a default case: switch (field.Aggregate) {  case null:  case "":  case "last":  	destRow [field.FieldAlias] = sourceRow [field.FieldName];  	break;  case "first":  	if (rowCount == 1) {  		destRow [field.FieldAlias] = sourceRow [field.FieldName];  	}  	break;  case "count":  	destRow [field.FieldAlias] = rowCount;  	break;  case "sum":  	destRow [field.FieldAlias] = Add (destRow [field.FieldAlias]' sourceRow [field.FieldName]);  	break;  case "max":  	destRow [field.FieldAlias] = Max (destRow [field.FieldAlias]' sourceRow [field.FieldName]);  	break;  case "min":  	if (rowCount == 1) {  		destRow [field.FieldAlias] = sourceRow [field.FieldName];  	}  	else {  		destRow [field.FieldAlias] = Min (destRow [field.FieldAlias]' sourceRow [field.FieldName]);  	}  	break;  }  
