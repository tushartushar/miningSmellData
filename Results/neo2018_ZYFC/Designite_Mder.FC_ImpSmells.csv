Implementation smell,Namespace,Class,File,Method,Description
Long Method,Mder.FC.Classes,EntityUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\EntityUtil.cs,GetMediaTypeIDByName,The method has 100 lines of code.
Long Method,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The method has 156 lines of code.
Long Method,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The method has 127 lines of code.
Long Method,Mder.FC.Text,StrToBoolExpression,C:\repos\neo2018_ZYFC\MderFc\Text\StrToBoolExpression.cs,ConvertExpression,The method has 363 lines of code.
Long Method,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The method has 108 lines of code.
Long Method,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The method has 112 lines of code.
Complex Method,Mder.FC.Classes,EntityUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\EntityUtil.cs,GetMediaTypeIDByName,Cyclomatic complexity of the method is 71
Complex Method,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,CompressFileZip,Cyclomatic complexity of the method is 9
Complex Method,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,DecompressFileZip,Cyclomatic complexity of the method is 10
Complex Method,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,DecompressFileRarForLongPath,Cyclomatic complexity of the method is 9
Complex Method,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,AddPathPower,Cyclomatic complexity of the method is 14
Complex Method,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,EnsurePath,Cyclomatic complexity of the method is 11
Complex Method,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,GetSubPath,Cyclomatic complexity of the method is 9
Complex Method,Mder.FC.Classes,IISManagement,C:\repos\neo2018_ZYFC\MderFc\Classes\IISService.cs,start,Cyclomatic complexity of the method is 10
Complex Method,Mder.FC.Classes,IISManagement,C:\repos\neo2018_ZYFC\MderFc\Classes\IISService.cs,EditIISWebServer,Cyclomatic complexity of the method is 8
Complex Method,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,GetOSRegValue,Cyclomatic complexity of the method is 8
Complex Method,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,Cyclomatic complexity of the method is 8
Complex Method,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,Cyclomatic complexity of the method is 8
Complex Method,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,Cyclomatic complexity of the method is 9
Complex Method,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,Cyclomatic complexity of the method is 8
Complex Method,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,Cyclomatic complexity of the method is 9
Complex Method,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,Cyclomatic complexity of the method is 8
Complex Method,Mder.FC.DB,SQL,C:\repos\neo2018_ZYFC\MderFc\DB\SQL.cs,LoadSql,Cyclomatic complexity of the method is 19
Complex Method,Mder.FC.DB,SQL,C:\repos\neo2018_ZYFC\MderFc\DB\SQL.cs,GetSql,Cyclomatic complexity of the method is 10
Complex Method,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,AccessHelper3,Cyclomatic complexity of the method is 9
Complex Method,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,AccessHelper3,Cyclomatic complexity of the method is 10
Complex Method,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteNonQuery,Cyclomatic complexity of the method is 8
Complex Method,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteDataSet,Cyclomatic complexity of the method is 12
Complex Method,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteDataSet,Cyclomatic complexity of the method is 14
Complex Method,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteDataReader,Cyclomatic complexity of the method is 8
Complex Method,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteDataReader,Cyclomatic complexity of the method is 10
Complex Method,Mder.FC.DB.DBUtil,AccessHelper2,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,FillDataSet,Cyclomatic complexity of the method is 10
Complex Method,Mder.FC.DS,StringDS,C:\repos\neo2018_ZYFC\MderFc\DS\StringDS.cs,Compare,Cyclomatic complexity of the method is 8
Complex Method,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Dispose,Cyclomatic complexity of the method is 9
Complex Method,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,Cyclomatic complexity of the method is 122
Complex Method,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Get,Cyclomatic complexity of the method is 10
Complex Method,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,CreateDataSocket,Cyclomatic complexity of the method is 8
Complex Method,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,Cyclomatic complexity of the method is 8
Complex Method,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,ResponseAsBytes,Cyclomatic complexity of the method is 10
Complex Method,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,GetPrinterStatus,Cyclomatic complexity of the method is 75
Complex Method,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,Cyclomatic complexity of the method is 11
Complex Method,Mder.FC.Print,PrintText,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintPageEvent,Cyclomatic complexity of the method is 8
Complex Method,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,Cyclomatic complexity of the method is 23
Complex Method,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,GetSubString,Cyclomatic complexity of the method is 9
Complex Method,Mder.FC.Text,StrToBoolExpression,C:\repos\neo2018_ZYFC\MderFc\Text\StrToBoolExpression.cs,ConvertExpression,Cyclomatic complexity of the method is 76
Complex Method,Mder.FC.Text,StrToBoolExpression,C:\repos\neo2018_ZYFC\MderFc\Text\StrToBoolExpression.cs,ConvertToPostfix,Cyclomatic complexity of the method is 13
Complex Method,Mder.FC.Text,StrToBoolExpression,C:\repos\neo2018_ZYFC\MderFc\Text\StrToBoolExpression.cs,ComputeTwoNumber,Cyclomatic complexity of the method is 30
Complex Method,Mder.FC.Text,StrToBoolExpression,C:\repos\neo2018_ZYFC\MderFc\Text\StrToBoolExpression.cs,ComputeTwoBoolean,Cyclomatic complexity of the method is 11
Complex Method,Mder.FC.Text,StrToBoolExpression,C:\repos\neo2018_ZYFC\MderFc\Text\StrToBoolExpression.cs,ComputeTwoString,Cyclomatic complexity of the method is 10
Complex Method,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,Cyclomatic complexity of the method is 13
Complex Method,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,Cyclomatic complexity of the method is 8
Complex Method,Mder.FC.Win,Crypt,C:\repos\neo2018_ZYFC\MderFc\Win\Crypt.cs,Encrypt,Cyclomatic complexity of the method is 9
Complex Method,Mder.FC.Win,Crypt,C:\repos\neo2018_ZYFC\MderFc\Win\Crypt.cs,Decrypt,Cyclomatic complexity of the method is 11
Complex Method,Mder.FC.Win,Net,C:\repos\neo2018_ZYFC\MderFc\Win\Net.cs,CheckSiteStatus,Cyclomatic complexity of the method is 14
Long Parameter List,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,CompressFileRar,The method has 8 parameters.
Long Parameter List,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,DecompressFileRar,The method has 5 parameters.
Long Parameter List,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,DecompressFileRar,The method has 6 parameters.
Long Parameter List,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,RestoreSqlDbWithSql,The method has 5 parameters.
Long Parameter List,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,RestoreSqlDbWithSql,The method has 7 parameters.
Long Parameter List,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,RestoreSqlDb,The method has 5 parameters.
Long Parameter List,Mder.FC.Classes,SqlDbUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\SqlDbUtil.cs,ExecSqlFileByDMO,The method has 6 parameters.
Long Parameter List,Mder.FC.Classes,SqlDbUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\SqlDbUtil.cs,ExecSqlFile,The method has 5 parameters.
Long Parameter List,Mder.FC.Classes,SqlDbUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\SqlDbUtil.cs,TestConnection,The method has 5 parameters.
Long Parameter List,Mder.FC.DB.DBUtil,OLEDBHelper,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,PrepareCommand,The method has 6 parameters.
Long Parameter List,Mder.FC.DB.DBUtil,OLEDBHelper,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,MakeParam,The method has 5 parameters.
Long Parameter List,Mder.FC.DB.DBUtil,OLEDBHelper,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteDataTable,The method has 5 parameters.
Long Parameter List,Mder.FC.DB.DBUtil,OLEDBHelper,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteReader,The method has 6 parameters.
Long Parameter List,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,PrepareCommand,The method has 6 parameters.
Long Parameter List,Mder.FC.DB.DBUtil,AccessHelper2,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,PrepareCommand,The method has 5 parameters.
Long Parameter List,Mder.FC.DB.DBUtil,OracleHelper,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\OracleHelper.cs,PrepareCommand,The method has 6 parameters.
Long Parameter List,Mder.FC.DB.DBUtil,SqlHelper2,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\SQLHelper.cs,PrepareCommand,The method has 6 parameters.
Long Parameter List,Mder.FC.DB.DBUtil,SqlHelper,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\SQLHelper.cs,PrepareCommand,The method has 6 parameters.
Long Parameter List,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,HSLToRGB,The method has 6 parameters.
Long Parameter List,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,RGBToHSL,The method has 6 parameters.
Long Parameter List,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DRect,The method has 7 parameters.
Long Parameter List,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,DrawArrowGlyph,The method has 6 parameters.
Long Parameter List,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,FTPClient,The method has 5 parameters.
Long Parameter List,Mder.FC.Net.Http,DownLoadState,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownLoadState,The method has 7 parameters.
Long Parameter List,Mder.FC.Net.Http,DownLoadState,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownLoadState,The method has 7 parameters.
Long Parameter List,Mder.FC.Net.Http,DownLoadState,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownLoadState,The method has 6 parameters.
Long Parameter List,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,DocumentProperties,The method has 6 parameters.
Long Parameter List,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,GetPrinter,The method has 5 parameters.
Long Parameter List,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,SendMessageTimeout,The method has 7 parameters.
Long Parameter List,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrinters,The method has 7 parameters.
Long Parameter List,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumFormsA,The method has 6 parameters.
Long Parameter List,Mder.FC.Win,Crypt,C:\repos\neo2018_ZYFC\MderFc\Win\Crypt.cs,CryptProtectData,The method has 7 parameters.
Long Parameter List,Mder.FC.Win,Crypt,C:\repos\neo2018_ZYFC\MderFc\Win\Crypt.cs,CryptUnprotectData,The method has 7 parameters.
Long Parameter List,Mder.FC.Win,Crypt,C:\repos\neo2018_ZYFC\MderFc\Win\Crypt.cs,FormatMessage,The method has 7 parameters.
Long Parameter List,Mder.FC.Win,GDI,C:\repos\neo2018_ZYFC\MderFc\Win\GDI.cs,StretchBlt,The method has 11 parameters.
Long Parameter List,Mder.FC.Win,GDI,C:\repos\neo2018_ZYFC\MderFc\Win\GDI.cs,BitBlt,The method has 9 parameters.
Long Parameter List,Mder.FC.Win,GDI,C:\repos\neo2018_ZYFC\MderFc\Win\GDI.cs,PatBlt,The method has 6 parameters.
Long Parameter List,Mder.FC.Win,GDI,C:\repos\neo2018_ZYFC\MderFc\Win\GDI.cs,CreateDIBSection,The method has 6 parameters.
Long Parameter List,Mder.FC.Win,GDI,C:\repos\neo2018_ZYFC\MderFc\Win\GDI.cs,GetDIBits,The method has 7 parameters.
Long Parameter List,Mder.FC.Win,GDI,C:\repos\neo2018_ZYFC\MderFc\Win\GDI.cs,GetDIBits,The method has 7 parameters.
Long Parameter List,Mder.FC.Win,Kernel,C:\repos\neo2018_ZYFC\MderFc\Win\Kernel.cs,CreateFile,The method has 7 parameters.
Long Parameter List,Mder.FC.Win,Kernel,C:\repos\neo2018_ZYFC\MderFc\Win\Kernel.cs,AdjustTokenPrivileges,The method has 6 parameters.
Long Parameter List,Mder.FC.Win,Shell,C:\repos\neo2018_ZYFC\MderFc\Win\Shell.cs,ShellExecute,The method has 6 parameters.
Long Parameter List,Mder.FC.Win,Shell,C:\repos\neo2018_ZYFC\MderFc\Win\Shell.cs,SHGetFileInfo,The method has 5 parameters.
Long Identifier,Mder.FC.Win,Crypt,C:\repos\neo2018_ZYFC\MderFc\Win\Crypt.cs,GetErrorMessage,The length of the parameter FORMAT_MESSAGE_ALLOCATE_BUFFER is 30.
Long Statement,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,AddPathPower,The length of the statement  "		dirsecurity.AddAccessRule (new FileSystemAccessRule (username' FileSystemRights.FullControl' InheritanceFlags.ContainerInherit' PropagationFlags.InheritOnly' AccessControlType.Allow)); " is 184.
Long Statement,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,GetDiskInfo,The length of the statement  "	System.Management.ObjectQuery Query = new System.Management.ObjectQuery ("select FreeSpace 'Size 'Name from Win32_LogicalDisk where DriveType=3"); " is 146.
Long Statement,Mder.FC.Classes,IISManagement,C:\repos\neo2018_ZYFC\MderFc\Classes\IISService.cs,start,The length of the statement  "			item.Port = Convert.ToInt32 (((string)Server.Properties ["Serverbindings"] [0]).Substring (1' ((string)Server.Properties ["Serverbindings"] [0]).Length - 2)); " is 158.
Long Statement,Mder.FC.Classes,IISManagement,C:\repos\neo2018_ZYFC\MderFc\Classes\IISService.cs,IsPortUsed,The length of the statement  "		if (Server.Properties ["Serverbindings"].Value != null && Server.Properties ["Serverbindings"].Value.ToString ().Replace (":"' "").Equals (port)) { " is 147.
Long Statement,Mder.FC.Classes,IISManagement,C:\repos\neo2018_ZYFC\MderFc\Classes\IISService.cs,CreateIISWebServer,The length of the statement  "		//    throw new Exception("端口号：" + iisServer.Port.ToString() + " 已经被网站 " + Server.Properties["ServerComment"].Value.ToString() + " 占用，请使用其它端口号。"); " is 146.
Long Statement,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The length of the statement  "			if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256) " is 151.
Long Statement,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,GetDbNamseOfServer,The length of the statement  "		System.Data.SqlClient.SqlDataAdapter adapter = new System.Data.SqlClient.SqlDataAdapter ("select   name   from   sysdatabases"' conn); " is 134.
Long Statement,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,GetDbNamseOfServer,The length of the statement  "		System.Data.SqlClient.SqlDataAdapter adapter = new System.Data.SqlClient.SqlDataAdapter ("select   name   from   sysdatabases"' conn); " is 134.
Long Statement,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,GetDbFilePath,The length of the statement  "	string sqlGetfileName = "use " + dbName + Environment.NewLine + @"select  REVERSE (SUBSTRING(reverse(filename)'charindex('\''reverse(filename))'8000))'name   from   sysfiles"; " is 175.
Long Statement,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,RestoreSqlDbWithSql,The length of the statement  "	" restore database [" + dbName + "] from disk=N'" + dbBakFileName + "' WITH  FILE = 1'  move N'" + "MDER" + "' to N'" + dbFileName + "'' move N'" + "MDER_" + "log' to N'" + dbLogFileName + "''NOUNLOAD'  REPLACE'  STATS = 10 "; " is 226.
Long Statement,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsLocalSqlServer,The length of the statement  "	if (sqlServerName.Equals (".") || sqlServerName.ToLower ().Equals ("(local)") || sqlServerName.ToLower ().Equals ("localhost")) { " is 129.
Long Statement,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,RestoreSqlDbWithSql,The length of the statement  "	string cmdOpenShell = "exec sp_configure 'show advanced options''1 " + Environment.NewLine + "reconfigure" + Environment.NewLine + "" + Environment.NewLine + "exec sp_configure 'xp_cmdshell''1 " + Environment.NewLine + "reconfigure " + Environment.NewLine + ""; " is 261.
Long Statement,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,RestoreSqlDbWithSql,The length of the statement  "	string cmdShareRelation = @" master..xp_cmdshell 'net use \\" + localIP + "\\" + shareName + " " + localPwd + " /user:" + localUserName + "'"; " is 142.
Long Statement,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,RestoreSqlDbWithSql,The length of the statement  "	" restore database [" + dbName + "] from disk=N'" + dbBakFileName + "' WITH  FILE = 1'  move N'" + "MDER" + "' to N'" + dbFileName + "'' move N'" + "MDER_" + "log' to N'" + dbLogFileName + "''NOUNLOAD'  REPLACE'  STATS = 10 "; " is 226.
Long Statement,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,setShareRelation,The length of the statement  "	string cmd = @"master..xp_cmdshell 'net use　\\" + rmtIP + "\\" + shareFolderName + " " + rmtPwd + " /user:" + rmtUserName + "'"; " is 128.
Long Statement,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,UpdateLargeField,The length of the statement  "	System.Data.OracleClient.OracleParameter param = command.Parameters.Add (strParam' System.Data.OracleClient.OracleType.Blob); " is 125.
Long Statement,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,UpdateLargeText,The length of the statement  "	System.Data.OracleClient.OracleParameter param = command.Parameters.Add (strParam' System.Data.OracleClient.OracleType.LongVarChar); " is 132.
Long Statement,Mder.FC.DB.DBUtil,OLEDBHelper,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteReader,The length of the statement  "	return ExecuteReader (connection' (OleDbTransaction)null' commandType' commandText' commandParameters' OleDbConnectionOwnership.External); " is 138.
Long Statement,Mder.FC.DB.DBUtil,OLEDBHelper,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteReader,The length of the statement  "	return ExecuteReader (transaction.Connection' transaction' commandType' commandText' commandParameters' OleDbConnectionOwnership.External); " is 139.
Long Statement,Mder.FC.DB.DBUtil,AccessHelper2,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,FillDataSet,The length of the statement  "							throw new ArgumentException ("The tableNames parameter must contain a list of tables' a value was provided as null or empty string."' "tableNames"); " is 148.
Long Statement,Mder.FC.DB.DBUtil,OracleHelper,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\OracleHelper.cs,ExecuteScalar,The length of the statement  "		throw new ArgumentException ("The transaction was rollbacked	or commited' please	provide	an open	transaction."' "transaction"); " is 127.
Long Statement,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,IsKnownColor,The length of the statement  "		if (color.A == currentColor.A && color.R == currentColor.R && color.G == currentColor.G && color.B == currentColor.B && !currentColor.IsSystemColor && !badColor) { " is 163.
Long Statement,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,IsSystemColor,The length of the statement  "		if (color.R == currentColor.R && color.G == currentColor.G && color.B == currentColor.B && currentColor.IsSystemColor) { " is 120.
Long Statement,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,StrechBitmap,The length of the statement  "	Mder.FC.Win.GDI.StretchBlt (hDCTo' rcDest.Left' rcDest.Top' rcDest.Width' rcDest.Height' hDCFrom' 0' 0' bitmap.Width' bitmap.Height' (int)PatBltTypes.SRCCOPY); " is 159.
Long Statement,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,StrechBitmap,The length of the statement  "	Mder.FC.Win.GDI.StretchBlt (hDCTo' rcDest.Left' rcDest.Top' rcDest.Width' rcDest.Height' hDCFrom' rcSource.Left' rcSource.Top' rcSource.Width' rcSource.Height' (int)PatBltTypes.SRCCOPY); " is 186.
Long Statement,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,GetStrechedBitmap,The length of the statement  "	Mder.FC.Win.GDI.StretchBlt (hDCTo' rcDest.Left' rcDest.Top' rcDest.Width' rcDest.Height' hDCFrom' 0' 0' bitmap.Width' bitmap.Height' (int)PatBltTypes.SRCCOPY); " is 159.
Long Statement,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The length of the statement  "					DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s' new ThreadCallbackHandler (this.DownloadFileChunk)); " is 148.
Long Statement,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The length of the statement  "				iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER); " is 137.
Long Statement,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The length of the statement  "				SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy); " is 157.
Long Statement,Mder.FC.Print,PrintText,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintPageEvent,The length of the statement  "		ev.Graphics.DrawString (line' theFont' Brushes.Black' ev.MarginBounds.Left' ev.MarginBounds.Top + (count * theFont.GetHeight (ev.Graphics))' new StringFormat ()); " is 162.
Long Statement,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The length of the statement  "					tmpWidth = (int)(Math.Floor ((double)((double)GridCol.Width / (double)TotalWidth * (double)TotalWidth * ((double)e.MarginBounds.Width / (double)TotalWidth)))); " is 159.
Long Statement,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The length of the statement  "					e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13); " is 239.
Long Statement,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The length of the statement  "					e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13); " is 378.
Long Statement,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The length of the statement  "						e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)); " is 143.
Long Statement,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The length of the statement  "						e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)); " is 121.
Long Statement,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The length of the statement  "						e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat); " is 218.
Long Statement,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The length of the statement  "					if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") { " is 126.
Long Statement,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The length of the statement  "						e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat); " is 225.
Long Statement,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The length of the statement  "						CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height)); " is 181.
Long Statement,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The length of the statement  "						e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox); " is 228.
Long Statement,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The length of the statement  "						e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height)); " is 262.
Long Statement,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,DrawFooter,The length of the statement  "	e.Graphics.DrawString (PageNum' dgv.Font' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (PageNum' dgv.Font' e.MarginBounds.Width).Width) / 2' e.MarginBounds.Top + e.MarginBounds.Height + 31); " is 231.
Long Statement,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,GetSubString,The length of the statement  "			//if (System.Text.RegularExpressions.Regex.IsMatch(p_SrcString' "[\u0800-\u4e00]+") || System.Text.RegularExpressions.Regex.IsMatch(p_SrcString' "[\xAC00-\xD7A3]+")) " is 165.
Long Statement,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,GetSubString,The length of the statement  "				return p_SrcString.Substring (p_StartIndex' ((p_Length + p_StartIndex) > p_SrcString.Length) ? (p_SrcString.Length - p_StartIndex) : p_Length); " is 143.
Long Statement,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESEncrypt,The length of the statement  "	des.Key = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "MD5").Substring (0' 8)); " is 147.
Long Statement,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESEncrypt,The length of the statement  "	des.IV = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "MD5").Substring (0' 8)); " is 146.
Long Statement,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESDecrypt,The length of the statement  "		des.Key = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "md5").Substring (0' 8)); " is 147.
Long Statement,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESDecrypt,The length of the statement  "		des.IV = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "md5").Substring (0' 8)); " is 146.
Long Statement,Mder.FC.Security,MD5,C:\repos\neo2018_ZYFC\MderFc\Security\MD5.cs,md5_hash,The length of the statement  "			using (System.Security.Cryptography.MD5CryptoServiceProvider get_md5 = new System.Security.Cryptography.MD5CryptoServiceProvider ()) { " is 134.
Long Statement,Mder.FC.Text,StrToBoolExpression,C:\repos\neo2018_ZYFC\MderFc\Text\StrToBoolExpression.cs,ComputeExpression,The length of the statement  "	//return Expression.ComputePostfix(Expression.ConvertToPostfix(Expression.ConvertExpression(Expression.ConvertExpression(sExpression)'mapVar'mapValue))); " is 153.
Long Statement,Mder.FC.Text,StrToBoolExpression,C:\repos\neo2018_ZYFC\MderFc\Text\StrToBoolExpression.cs,ComputeExpression,The length of the statement  "	///return Expression.ComputePostfix(Expression.ConvertToPostfix(Expression.ConvertExpression(Expression.ConvertExpression(sExpression)'mapVar'mapValue))); " is 154.
Long Statement,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The length of the statement  "	System.Collections.ArrayList byteMessage = new System.Collections.ArrayList (System.Text.Encoding.Default.GetBytes (Message)); " is 126.
Long Statement,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The length of the statement  "	if (!System.Text.RegularExpressions.Regex.IsMatch (Message' "^[A-Z0-9/+=]*$"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) { " is 136.
Long Statement,Mder.FC.Win,Crypt,C:\repos\neo2018_ZYFC\MderFc\Win\Crypt.cs,Encrypt,The length of the statement  "		retVal = CryptProtectData (ref plainTextBlob' ""' ref entropyBlob' IntPtr.Zero' ref prompt' dwFlags' ref cipherTextBlob); " is 121.
Long Statement,Mder.FC.Win,Crypt,C:\repos\neo2018_ZYFC\MderFc\Win\Crypt.cs,Decrypt,The length of the statement  "		retVal = CryptUnprotectData (ref cipherBlob' null' ref entropyBlob' IntPtr.Zero' ref prompt' dwFlags' ref plainTextBlob); " is 121.
Long Statement,Mder.FC.Win,Kernel,C:\repos\neo2018_ZYFC\MderFc\Win\Kernel.cs,initAPIData,The length of the statement  "	//lstAPI.Items.Add((StInfo.wHour + 8).ToString() + "点" + StInfo.wMinute.ToString() + "分" + StInfo.wSecond.ToString() + "秒"); " is 124.
Long Statement,Mder.FC.Win,Net,C:\repos\neo2018_ZYFC\MderFc\Win\Net.cs,CheckSiteStatus,The length of the statement  "						returnMessage = string.Format ("Reply from {0}: bytes={1} time={2}ms TTL={3}"' reply.Address' reply.Buffer.Length' reply.RoundtripTime' reply.Options.Ttl); " is 155.
Complex Conditional,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,IsKnownColor,The conditional expression  "color.A == currentColor.A && color.R == currentColor.R && color.G == currentColor.G && color.B == currentColor.B && !currentColor.IsSystemColor && !badColor"  is complex.
Complex Conditional,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,IsSystemColor,The conditional expression  "color.R == currentColor.R && color.G == currentColor.G && color.B == currentColor.B && currentColor.IsSystemColor"  is complex.
Complex Conditional,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,ColorFromRGBString,The conditional expression  "(R < 0 || R > 255) || (G < 0 || G > 255) || (B < 0 || B > 255)"  is complex.
Complex Conditional,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Get,The conditional expression  "!(iReplyCode == 150 || iReplyCode == 125 || iReplyCode == 226 || iReplyCode == 250)"  is complex.
Complex Conditional,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,GetSubString,The conditional expression  "(c > '\u0800' && c < '\u4e00') || (c > '\xAC00' && c < '\xD7A3')"  is complex.
Complex Conditional,Mder.FC.Text,StrToBoolExpression,C:\repos\neo2018_ZYFC\MderFc\Text\StrToBoolExpression.cs,CheckString,The conditional expression  "(c >= 'a') && (c <= 'z') || (c >= 'A') && (c <= 'Z')"  is complex.
Complex Conditional,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,GetSpellCode,The conditional expression  "(vchar >= 'a' && vchar <= 'z') || (vchar >= 'A' && vchar <= 'Z')"  is complex.
Complex Conditional,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The conditional expression  "i != (j - 3) && i != (j - 7) && i != (j - 11) && i != (j - 15)"  is complex.
Empty Catch Block,Mder.FC.Classes,SqlDbUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\SqlDbUtil.cs,RollBack,The method has an empty catch block.
Empty Catch Block,Mder.FC.Classes,SqlDbUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\SqlDbUtil.cs,Commit,The method has an empty catch block.
Empty Catch Block,Mder.FC,Logger,C:\repos\neo2018_ZYFC\MderFc\Logger.cs,WriteLog,The method has an empty catch block.
Empty Catch Block,Mder.FC,Logger,C:\repos\neo2018_ZYFC\MderFc\Logger.cs,WriteLogSimple,The method has an empty catch block.
Empty Catch Block,Mder.FC,Logger,C:\repos\neo2018_ZYFC\MderFc\Logger.cs,WriteLog,The method has an empty catch block.
Empty Catch Block,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,QueryReturnOne,The method has an empty catch block.
Empty Catch Block,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,QueryReturnOne,The method has an empty catch block.
Empty Catch Block,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,QueryReturnOne,The method has an empty catch block.
Empty Catch Block,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,QueryReturnOne,The method has an empty catch block.
Empty Catch Block,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,QueryReturnOne,The method has an empty catch block.
Empty Catch Block,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,QueryReturnOne,The method has an empty catch block.
Empty Catch Block,Mder.FC.DB,DBTrans,C:\repos\neo2018_ZYFC\MderFc\DB\DBTrans.cs,RollBack,The method has an empty catch block.
Empty Catch Block,Mder.FC.DB,DBTrans,C:\repos\neo2018_ZYFC\MderFc\DB\DBTrans.cs,Commit,The method has an empty catch block.
Empty Catch Block,Mder.FC.DB,SQL,C:\repos\neo2018_ZYFC\MderFc\DB\SQL.cs,LoadSql,The method has an empty catch block.
Empty Catch Block,Mder.FC.DB,SQL,C:\repos\neo2018_ZYFC\MderFc\DB\SQL.cs,LoadSql,The method has an empty catch block.
Empty Catch Block,Mder.FC.DB,SQL,C:\repos\neo2018_ZYFC\MderFc\DB\SQL.cs,GetSql,The method has an empty catch block.
Empty Catch Block,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,UploadFile,The method has an empty catch block.
Empty Catch Block,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,DeleteCustomPaperSize,The method has an empty catch block.
Empty Catch Block,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ValidStr,The method has an empty catch block.
Empty Catch Block,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ValidStr,The method has an empty catch block.
Magic Number,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,DecompressFileZip,The following statement contains a magic number: using (FileStream sourceStream = new FileStream (sourceFile' FileMode.Open)) {  	byte[] quartetBuffer = new byte[4];  	int position = (int)sourceStream.Length - 4;  	sourceStream.Position = position;  	sourceStream.Read (quartetBuffer' 0' 4);  	sourceStream.Position = 0;  	int checkLength = BitConverter.ToInt32 (quartetBuffer' 0);  	byte[] buffer = new byte[checkLength + 100];  	using (GZipStream decompressedStream = new GZipStream (sourceStream' CompressionMode.Decompress' true)) {  		int total = 0;  		for (int offset = 0; ;) {  			int bytesRead = decompressedStream.Read (buffer' offset' 100);  			if (bytesRead == 0)  				break;  			offset += bytesRead;  			total += bytesRead;  		}  		using (FileStream destinationStream = new FileStream (destinationFile' FileMode.Create)) {  			destinationStream.Write (buffer' 0' total);  			destinationStream.Flush ();  		}  	}  }  
Magic Number,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,DecompressFileZip,The following statement contains a magic number: using (FileStream sourceStream = new FileStream (sourceFile' FileMode.Open)) {  	byte[] quartetBuffer = new byte[4];  	int position = (int)sourceStream.Length - 4;  	sourceStream.Position = position;  	sourceStream.Read (quartetBuffer' 0' 4);  	sourceStream.Position = 0;  	int checkLength = BitConverter.ToInt32 (quartetBuffer' 0);  	byte[] buffer = new byte[checkLength + 100];  	using (GZipStream decompressedStream = new GZipStream (sourceStream' CompressionMode.Decompress' true)) {  		int total = 0;  		for (int offset = 0; ;) {  			int bytesRead = decompressedStream.Read (buffer' offset' 100);  			if (bytesRead == 0)  				break;  			offset += bytesRead;  			total += bytesRead;  		}  		using (FileStream destinationStream = new FileStream (destinationFile' FileMode.Create)) {  			destinationStream.Write (buffer' 0' total);  			destinationStream.Flush ();  		}  	}  }  
Magic Number,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,DecompressFileZip,The following statement contains a magic number: using (FileStream sourceStream = new FileStream (sourceFile' FileMode.Open)) {  	byte[] quartetBuffer = new byte[4];  	int position = (int)sourceStream.Length - 4;  	sourceStream.Position = position;  	sourceStream.Read (quartetBuffer' 0' 4);  	sourceStream.Position = 0;  	int checkLength = BitConverter.ToInt32 (quartetBuffer' 0);  	byte[] buffer = new byte[checkLength + 100];  	using (GZipStream decompressedStream = new GZipStream (sourceStream' CompressionMode.Decompress' true)) {  		int total = 0;  		for (int offset = 0; ;) {  			int bytesRead = decompressedStream.Read (buffer' offset' 100);  			if (bytesRead == 0)  				break;  			offset += bytesRead;  			total += bytesRead;  		}  		using (FileStream destinationStream = new FileStream (destinationFile' FileMode.Create)) {  			destinationStream.Write (buffer' 0' total);  			destinationStream.Flush ();  		}  	}  }  
Magic Number,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,DecompressFileZip,The following statement contains a magic number: using (FileStream sourceStream = new FileStream (sourceFile' FileMode.Open)) {  	byte[] quartetBuffer = new byte[4];  	int position = (int)sourceStream.Length - 4;  	sourceStream.Position = position;  	sourceStream.Read (quartetBuffer' 0' 4);  	sourceStream.Position = 0;  	int checkLength = BitConverter.ToInt32 (quartetBuffer' 0);  	byte[] buffer = new byte[checkLength + 100];  	using (GZipStream decompressedStream = new GZipStream (sourceStream' CompressionMode.Decompress' true)) {  		int total = 0;  		for (int offset = 0; ;) {  			int bytesRead = decompressedStream.Read (buffer' offset' 100);  			if (bytesRead == 0)  				break;  			offset += bytesRead;  			total += bytesRead;  		}  		using (FileStream destinationStream = new FileStream (destinationFile' FileMode.Create)) {  			destinationStream.Write (buffer' 0' total);  			destinationStream.Flush ();  		}  	}  }  
Magic Number,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,DecompressFileZip,The following statement contains a magic number: using (FileStream sourceStream = new FileStream (sourceFile' FileMode.Open)) {  	byte[] quartetBuffer = new byte[4];  	int position = (int)sourceStream.Length - 4;  	sourceStream.Position = position;  	sourceStream.Read (quartetBuffer' 0' 4);  	sourceStream.Position = 0;  	int checkLength = BitConverter.ToInt32 (quartetBuffer' 0);  	byte[] buffer = new byte[checkLength + 100];  	using (GZipStream decompressedStream = new GZipStream (sourceStream' CompressionMode.Decompress' true)) {  		int total = 0;  		for (int offset = 0; ;) {  			int bytesRead = decompressedStream.Read (buffer' offset' 100);  			if (bytesRead == 0)  				break;  			offset += bytesRead;  			total += bytesRead;  		}  		using (FileStream destinationStream = new FileStream (destinationFile' FileMode.Create)) {  			destinationStream.Write (buffer' 0' total);  			destinationStream.Flush ();  		}  	}  }  
Magic Number,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,DecompressFileZip,The following statement contains a magic number: sourceStream.Read (quartetBuffer' 0' 4);  
Magic Number,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,DecompressFileZip,The following statement contains a magic number: using (GZipStream decompressedStream = new GZipStream (sourceStream' CompressionMode.Decompress' true)) {  	int total = 0;  	for (int offset = 0; ;) {  		int bytesRead = decompressedStream.Read (buffer' offset' 100);  		if (bytesRead == 0)  			break;  		offset += bytesRead;  		total += bytesRead;  	}  	using (FileStream destinationStream = new FileStream (destinationFile' FileMode.Create)) {  		destinationStream.Write (buffer' 0' total);  		destinationStream.Flush ();  	}  }  
Magic Number,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,DecompressFileZip,The following statement contains a magic number: for (int offset = 0; ;) {  	int bytesRead = decompressedStream.Read (buffer' offset' 100);  	if (bytesRead == 0)  		break;  	offset += bytesRead;  	total += bytesRead;  }  
Magic Number,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,getRarPath,The following statement contains a magic number: return regKeyValue.Substring (1' regKeyValue.Length - 7);  
Magic Number,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,DelDirOrFile,The following statement contains a magic number: if (dirOrFilePath.Length <= 3) {  	return;  }  
Magic Number,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,GetFormatFileLengthString,The following statement contains a magic number: if (size >= 1073741824) {  	return string.Concat (GetFormatFileSizeGB (size)' " G");  }  
Magic Number,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,GetFormatFileSizeKB,The following statement contains a magic number: return string.Concat (Math.Round ((size / 1024f)' 2));  
Magic Number,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,GetFormatFileSizeMB,The following statement contains a magic number: return string.Concat (Math.Round ((size / 1048576f)' 2));  
Magic Number,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,GetFormatFileSizeGB,The following statement contains a magic number: return string.Concat (Math.Round ((size / 1073741824)' 2));  
Magic Number,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,GetFormatFileSizeGB,The following statement contains a magic number: return string.Concat (Math.Round ((size / 1073741824)' 2));  
Magic Number,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,GetDiskInfo,The following statement contains a magic number: foreach (ManagementObject Return in ReturnCollection) {  	DiskInfo diskObj = new DiskInfo ();  	diskObj.IP = ip;  	diskObj.DiskName = Return ["Name"].ToString ();  	//磁盘名称  	diskObj.ActualSpace = Convert.ToInt32 (Convert.ToInt64 (Return ["Size"].ToString ()) / Constants.SIZE_MB);  	//实际空间  	diskObj.RemainSpace = Convert.ToInt32 (Convert.ToInt64 (Return ["FreeSpace"].ToString ()) / Constants.SIZE_MB);  	//剩余空间  	diskObj.UsedSpace = diskObj.ActualSpace - diskObj.RemainSpace;  	//已使用空间  	diskObj.AllowSpace = diskObj.ActualSpace - 2048;  	//允许存储空间  	lstDisk.Add (diskObj);  }  
Magic Number,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,GetDiskInfo,The following statement contains a magic number: diskObj.AllowSpace = diskObj.ActualSpace - 2048;  
Magic Number,Mder.FC.Classes,IISManagement,C:\repos\neo2018_ZYFC\MderFc\Classes\IISService.cs,start,The following statement contains a magic number: while (ie.MoveNext ()) {  	Server = (DirectoryEntry)ie.Current;  	if (Server.SchemaClassName == "IIsWebServer") {  		item = new IISWebServer ();  		item.index = Convert.ToInt32 (Server.Name);  		item.ServerComment = (string)Server.Properties ["ServerComment"] [0];  		item.AccessRead = (bool)Server.Properties ["AccessRead"] [0];  		item.AccessScript = (bool)Server.Properties ["AccessScript"] [0];  		item.DefaultDoc = (string)Server.Properties ["DefaultDoc"] [0];  		item.EnableDefaultDoc = (bool)Server.Properties ["EnableDefaultDoc"] [0];  		item.EnableDirBrowsing = (bool)Server.Properties ["EnableDirBrowsing"] [0];  		ieRoot = Server.Children.GetEnumerator ();  		while (ieRoot.MoveNext ()) {  			Root = (DirectoryEntry)ieRoot.Current;  			if (Root.SchemaClassName == "IIsWebVirtualDir") {  				finded = true;  				break;  			}  		}  		if (finded) {  			item.Path = Root.Properties ["path"] [0].ToString ();  		}  		item.Port = Convert.ToInt32 (((string)Server.Properties ["Serverbindings"] [0]).Substring (1' ((string)Server.Properties ["Serverbindings"] [0]).Length - 2));  		this.WebServers.Add_ (item);  		ieRoot = Root.Children.GetEnumerator ();  		while (ieRoot.MoveNext ()) {  			VirDir = (DirectoryEntry)ieRoot.Current;  			if (VirDir.SchemaClassName != "IIsWebVirtualDir" && VirDir.SchemaClassName != "IIsWebDirectory")  				continue;  			item_virdir = new IISWebVirtualDir (item.ServerComment);  			item_virdir.Name = VirDir.Name;  			item_virdir.AccessRead = (bool)VirDir.Properties ["AccessRead"] [0];  			item_virdir.AccessScript = (bool)VirDir.Properties ["AccessScript"] [0];  			item_virdir.DefaultDoc = (string)VirDir.Properties ["DefaultDoc"] [0];  			item_virdir.EnableDefaultDoc = (bool)VirDir.Properties ["EnableDefaultDoc"] [0];  			if (VirDir.SchemaClassName == "IIsWebVirtualDir") {  				item_virdir.Path = (string)VirDir.Properties ["Path"] [0];  			}  			else if (VirDir.SchemaClassName == "IIsWebDirectory") {  				item_virdir.Path = Root.Properties ["Path"] [0] + @"\" + VirDir.Name;  			}  			item.WebVirtualDirs.Add_ (item_virdir);  		}  	}  }  
Magic Number,Mder.FC.Classes,IISManagement,C:\repos\neo2018_ZYFC\MderFc\Classes\IISService.cs,start,The following statement contains a magic number: if (Server.SchemaClassName == "IIsWebServer") {  	item = new IISWebServer ();  	item.index = Convert.ToInt32 (Server.Name);  	item.ServerComment = (string)Server.Properties ["ServerComment"] [0];  	item.AccessRead = (bool)Server.Properties ["AccessRead"] [0];  	item.AccessScript = (bool)Server.Properties ["AccessScript"] [0];  	item.DefaultDoc = (string)Server.Properties ["DefaultDoc"] [0];  	item.EnableDefaultDoc = (bool)Server.Properties ["EnableDefaultDoc"] [0];  	item.EnableDirBrowsing = (bool)Server.Properties ["EnableDirBrowsing"] [0];  	ieRoot = Server.Children.GetEnumerator ();  	while (ieRoot.MoveNext ()) {  		Root = (DirectoryEntry)ieRoot.Current;  		if (Root.SchemaClassName == "IIsWebVirtualDir") {  			finded = true;  			break;  		}  	}  	if (finded) {  		item.Path = Root.Properties ["path"] [0].ToString ();  	}  	item.Port = Convert.ToInt32 (((string)Server.Properties ["Serverbindings"] [0]).Substring (1' ((string)Server.Properties ["Serverbindings"] [0]).Length - 2));  	this.WebServers.Add_ (item);  	ieRoot = Root.Children.GetEnumerator ();  	while (ieRoot.MoveNext ()) {  		VirDir = (DirectoryEntry)ieRoot.Current;  		if (VirDir.SchemaClassName != "IIsWebVirtualDir" && VirDir.SchemaClassName != "IIsWebDirectory")  			continue;  		item_virdir = new IISWebVirtualDir (item.ServerComment);  		item_virdir.Name = VirDir.Name;  		item_virdir.AccessRead = (bool)VirDir.Properties ["AccessRead"] [0];  		item_virdir.AccessScript = (bool)VirDir.Properties ["AccessScript"] [0];  		item_virdir.DefaultDoc = (string)VirDir.Properties ["DefaultDoc"] [0];  		item_virdir.EnableDefaultDoc = (bool)VirDir.Properties ["EnableDefaultDoc"] [0];  		if (VirDir.SchemaClassName == "IIsWebVirtualDir") {  			item_virdir.Path = (string)VirDir.Properties ["Path"] [0];  		}  		else if (VirDir.SchemaClassName == "IIsWebDirectory") {  			item_virdir.Path = Root.Properties ["Path"] [0] + @"\" + VirDir.Name;  		}  		item.WebVirtualDirs.Add_ (item_virdir);  	}  }  
Magic Number,Mder.FC.Classes,IISManagement,C:\repos\neo2018_ZYFC\MderFc\Classes\IISService.cs,start,The following statement contains a magic number: item.Port = Convert.ToInt32 (((string)Server.Properties ["Serverbindings"] [0]).Substring (1' ((string)Server.Properties ["Serverbindings"] [0]).Length - 2));  
Magic Number,Mder.FC.Classes,IISManagement,C:\repos\neo2018_ZYFC\MderFc\Classes\IISService.cs,CreateIISWebServer,The following statement contains a magic number: try {  	iisServer.index = i;  	Server = Service.Children.Add (i.ToString ()' "IIsWebServer");  	Server.Properties ["ServerComment"] [0] = iisServer.ServerComment;  	Server.Properties ["Serverbindings"].Add (":" + iisServer.Port + ":");  	Server.Properties ["AccessScript"] [0] = iisServer.AccessScript;  	Server.Properties ["AccessRead"] [0] = iisServer.AccessRead;  	Server.Properties ["EnableDirBrowsing"] [0] = iisServer.EnableDirBrowsing;  	Server.Properties ["DefaultDoc"] [0] = iisServer.DefaultDoc;  	Server.Properties ["EnableDefaultDoc"] [0] = iisServer.EnableDefaultDoc;  	DirectoryEntry root = Server.Children.Add ("Root"' "IIsWebVirtualDir");  	root.Properties ["path"] [0] = iisServer.Path;  	Service.CommitChanges ();  	Server.CommitChanges ();  	root.CommitChanges ();  	root.Invoke ("AppCreate2"' new object[1] {  		2  	});  	//Server.Invoke("start"'new object[0]);  }  catch (Exception es) {  	throw (es);  }  
Magic Number,Mder.FC.Classes,IISManagement,C:\repos\neo2018_ZYFC\MderFc\Classes\IISService.cs,CreateIISWebServer,The following statement contains a magic number: root.Invoke ("AppCreate2"' new object[1] {  	2  });  
Magic Number,Mder.FC.Classes,IISManagement,C:\repos\neo2018_ZYFC\MderFc\Classes\IISService.cs,CreateIISWebVirtualDir,The following statement contains a magic number: try {  	DirectoryEntry vir;  	vir = Server.Children.Add (iisVir.Name' "IIsWebVirtualDir");  	vir.Properties ["Path"] [0] = iisVir.Path;  	vir.Properties ["DefaultDoc"] [0] = iisVir.DefaultDoc;  	vir.Properties ["EnableDefaultDoc"] [0] = iisVir.EnableDefaultDoc;  	vir.Properties ["AccessScript"] [0] = iisVir.AccessScript;  	vir.Properties ["AccessRead"] [0] = iisVir.AccessRead;  	vir.Invoke ("AppCreate2"' new object[1] {  		2  	});  	Server.CommitChanges ();  	vir.CommitChanges ();  }  catch (Exception es) {  	throw (es);  }  
Magic Number,Mder.FC.Classes,IISManagement,C:\repos\neo2018_ZYFC\MderFc\Classes\IISService.cs,CreateIISWebVirtualDir,The following statement contains a magic number: vir.Invoke ("AppCreate2"' new object[1] {  	2  });  
Magic Number,Mder.FC.Classes,MathUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\MathUtil.cs,DecToBin,The following statement contains a magic number: return Convert.ToString (dec' 2);  
Magic Number,Mder.FC.Classes,MathUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\MathUtil.cs,BinToDec,The following statement contains a magic number: return Convert.ToInt32 (bin' 2);  
Magic Number,Mder.FC.Classes,MathUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\MathUtil.cs,DecToOct,The following statement contains a magic number: return Convert.ToString (dec' 8);  
Magic Number,Mder.FC.Classes,MathUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\MathUtil.cs,OctToDec,The following statement contains a magic number: return Convert.ToInt32 (oct' 8);  
Magic Number,Mder.FC.Classes,MathUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\MathUtil.cs,DecToHex,The following statement contains a magic number: return Convert.ToString (dec' 16);  
Magic Number,Mder.FC.Classes,MathUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\MathUtil.cs,HexToDec,The following statement contains a magic number: return Convert.ToInt32 (hex' 16);  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (System.Text.RegularExpressions.Regex.IsMatch (ip' "[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}")) {  	string[] ips = ip.Split ('.');  	if (ips.Length == 4 || ips.Length == 6) {  		if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  			return true;  		else  			return false;  	}  	else  		return false;  }  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (System.Text.RegularExpressions.Regex.IsMatch (ip' "[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}")) {  	string[] ips = ip.Split ('.');  	if (ips.Length == 4 || ips.Length == 6) {  		if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  			return true;  		else  			return false;  	}  	else  		return false;  }  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (System.Text.RegularExpressions.Regex.IsMatch (ip' "[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}")) {  	string[] ips = ip.Split ('.');  	if (ips.Length == 4 || ips.Length == 6) {  		if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  			return true;  		else  			return false;  	}  	else  		return false;  }  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (System.Text.RegularExpressions.Regex.IsMatch (ip' "[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}")) {  	string[] ips = ip.Split ('.');  	if (ips.Length == 4 || ips.Length == 6) {  		if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  			return true;  		else  			return false;  	}  	else  		return false;  }  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (System.Text.RegularExpressions.Regex.IsMatch (ip' "[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}")) {  	string[] ips = ip.Split ('.');  	if (ips.Length == 4 || ips.Length == 6) {  		if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  			return true;  		else  			return false;  	}  	else  		return false;  }  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (System.Text.RegularExpressions.Regex.IsMatch (ip' "[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}")) {  	string[] ips = ip.Split ('.');  	if (ips.Length == 4 || ips.Length == 6) {  		if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  			return true;  		else  			return false;  	}  	else  		return false;  }  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (System.Text.RegularExpressions.Regex.IsMatch (ip' "[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}")) {  	string[] ips = ip.Split ('.');  	if (ips.Length == 4 || ips.Length == 6) {  		if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  			return true;  		else  			return false;  	}  	else  		return false;  }  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (System.Text.RegularExpressions.Regex.IsMatch (ip' "[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}\\.[0-9]{1'3}")) {  	string[] ips = ip.Split ('.');  	if (ips.Length == 4 || ips.Length == 6) {  		if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  			return true;  		else  			return false;  	}  	else  		return false;  }  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (ips.Length == 4 || ips.Length == 6) {  	if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  		return true;  	else  		return false;  }  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (ips.Length == 4 || ips.Length == 6) {  	if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  		return true;  	else  		return false;  }  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (ips.Length == 4 || ips.Length == 6) {  	if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  		return true;  	else  		return false;  }  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (ips.Length == 4 || ips.Length == 6) {  	if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  		return true;  	else  		return false;  }  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (ips.Length == 4 || ips.Length == 6) {  	if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  		return true;  	else  		return false;  }  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (ips.Length == 4 || ips.Length == 6) {  	if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  		return true;  	else  		return false;  }  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (ips.Length == 4 || ips.Length == 6) {  	if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  		return true;  	else  		return false;  }  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (ips.Length == 4 || ips.Length == 6) {  	if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  		return true;  	else  		return false;  }  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  	return true;  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  	return true;  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  	return true;  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  	return true;  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  	return true;  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,IsValidIP,The following statement contains a magic number: if (System.Int32.Parse (ips [0]) < 256 && System.Int32.Parse (ips [1]) < 256 & System.Int32.Parse (ips [2]) < 256 & System.Int32.Parse (ips [3]) < 256)  	return true;  else  	return false;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,RestoreSqlDb,The following statement contains a magic number: try {  	dbObj.Name = dbName;  	dbFileObj.Name = dbBakFileName;  	dbFileObj.PhysicalName = dbFileDir + dbName + ".mdf";  	dbFileObj.PrimaryFile = true;  	dbFileObj.Size = 3;  	dbFileObj.FileGrowthType = SQLDMO.SQLDMO_GROWTH_TYPE.SQLDMOGrowth_MB;  	dbFileObj.FileGrowth = 1;  	dbObj.FileGroups.Item ("PRIMARY").DBFiles.Add (dbFileObj);  	logFileObj.Name = dbName + "Log";  	logFileObj.PhysicalName = dbFileDir + dbName + "_log.ldf";  	logFileObj.Size = 3;  	dbObj.TransactionLog.LogFiles.Add (logFileObj);  	sqlServerObj.Databases.Add (dbObj);  }  catch (Exception exp) {  	throw new Exception ("数据库属性设置失败，" + exp.Message' exp);  }  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,RestoreSqlDb,The following statement contains a magic number: try {  	dbObj.Name = dbName;  	dbFileObj.Name = dbBakFileName;  	dbFileObj.PhysicalName = dbFileDir + dbName + ".mdf";  	dbFileObj.PrimaryFile = true;  	dbFileObj.Size = 3;  	dbFileObj.FileGrowthType = SQLDMO.SQLDMO_GROWTH_TYPE.SQLDMOGrowth_MB;  	dbFileObj.FileGrowth = 1;  	dbObj.FileGroups.Item ("PRIMARY").DBFiles.Add (dbFileObj);  	logFileObj.Name = dbName + "Log";  	logFileObj.PhysicalName = dbFileDir + dbName + "_log.ldf";  	logFileObj.Size = 3;  	dbObj.TransactionLog.LogFiles.Add (logFileObj);  	sqlServerObj.Databases.Add (dbObj);  }  catch (Exception exp) {  	throw new Exception ("数据库属性设置失败，" + exp.Message' exp);  }  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,RestoreSqlDb,The following statement contains a magic number: dbFileObj.Size = 3;  
Magic Number,Mder.FC.Classes,NetUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\NetUtil.cs,RestoreSqlDb,The following statement contains a magic number: logFileObj.Size = 3;  
Magic Number,Mder.FC.Classes,SqlDbUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\SqlDbUtil.cs,Insert,The following statement contains a magic number: try {  	this.cmd.CommandType = System.Data.CommandType.Text;  	this.cmd.CommandText = insertSql;  	if (this.cmd.ExecuteNonQuery () < 0) {  		this.errMsg = "插入数据时出现错误，ExecuteNonQuery返回了小于0的值。";  		this.WriteErr ();  		return -1;  	}  }  catch (SqlException sqlExp) {  	this.errMsg = "执行SQL语句失败，" + sqlExp.Message + insertSql;  	this.WriteErr ();  	if (sqlExp.Number == 2627) {  		return -2;  	}  	return -1;  }  catch (Exception exp) {  	this.errMsg = "执行SQL语句失败，" + exp.Message + insertSql;  	this.WriteErr ();  	return -1;  }  
Magic Number,Mder.FC.Classes,SqlDbUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\SqlDbUtil.cs,Insert,The following statement contains a magic number: try {  	this.cmd.CommandType = System.Data.CommandType.Text;  	this.cmd.CommandText = insertSql;  	if (this.cmd.ExecuteNonQuery () < 0) {  		this.errMsg = "插入数据时出现错误，ExecuteNonQuery返回了小于0的值。";  		this.WriteErr ();  		return -1;  	}  }  catch (SqlException sqlExp) {  	this.errMsg = "执行SQL语句失败，" + sqlExp.Message + insertSql;  	this.WriteErr ();  	if (sqlExp.Number == 2627) {  		return -2;  	}  	return -1;  }  catch (Exception exp) {  	this.errMsg = "执行SQL语句失败，" + exp.Message + insertSql;  	this.WriteErr ();  	return -1;  }  
Magic Number,Mder.FC.Classes,SqlDbUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\SqlDbUtil.cs,Insert,The following statement contains a magic number: if (sqlExp.Number == 2627) {  	return -2;  }  
Magic Number,Mder.FC.Classes,SqlDbUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\SqlDbUtil.cs,Insert,The following statement contains a magic number: if (sqlExp.Number == 2627) {  	return -2;  }  
Magic Number,Mder.FC.Classes,SqlDbUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\SqlDbUtil.cs,Insert,The following statement contains a magic number: return -2;  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 365) {  	//大于等于365天'返回年  	i = (int)(s.TotalDays / 365);  	return i.ToString () + "岁";  }  else if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 365) {  	//大于等于365天'返回年  	i = (int)(s.TotalDays / 365);  	return i.ToString () + "岁";  }  else if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 365) {  	//大于等于365天'返回年  	i = (int)(s.TotalDays / 365);  	return i.ToString () + "岁";  }  else if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 365) {  	//大于等于365天'返回年  	i = (int)(s.TotalDays / 365);  	return i.ToString () + "岁";  }  else if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: i = (int)(s.TotalDays / 365);  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DB,C:\repos\neo2018_ZYFC\MderFc\DB\DB.cs,GetAge,The following statement contains a magic number: i = (int)(s.TotalDays / 30);  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 365) {  	//大于等于365天'返回年  	i = (int)(s.TotalDays / 365);  	return i.ToString () + "岁";  }  else if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 365) {  	//大于等于365天'返回年  	i = (int)(s.TotalDays / 365);  	return i.ToString () + "岁";  }  else if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 365) {  	//大于等于365天'返回年  	i = (int)(s.TotalDays / 365);  	return i.ToString () + "岁";  }  else if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 365) {  	//大于等于365天'返回年  	i = (int)(s.TotalDays / 365);  	return i.ToString () + "岁";  }  else if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: i = (int)(s.TotalDays / 365);  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,GetAge,The following statement contains a magic number: i = (int)(s.TotalDays / 30);  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,Connect,The following statement contains a magic number: try {  	//显示进度  	this.ProgressBarValue = 50;  	this.ProgressBarText = "正在连接数据库...";  	this.Conn = new System.Data.OleDb.OleDbConnection (strConnectString);  	this.Conn.Open ();  	Mder.FC.DB.Conn.Instance = Conn as System.Data.OleDb.OleDbConnection;  	WriteDebug ("连接数据库！" + strConnectString);  	this.ProgressBarValue = 0;  	return 0;  }  catch (Exception ex) {  	this.ProgressBarValue = 0;  	this.Err = "连接数据库产生错误！" + ex.Message;  	this.ErrCode = "-1";  	this.WriteErr ();  	return -1;  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,Connect,The following statement contains a magic number: this.ProgressBarValue = 50;  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: try {  	prcName = prcParams [0];  	this.command.CommandText = prcName;  	//22 varchar 30 double 33 int 6 DATETIME   	for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  		System.Data.OleDb.OleDbParameter param = new System.Data.OleDb.OleDbParameter ();  		param.ParameterName = prcParams [i].Trim ();  		param.OleDbType = (System.Data.OleDb.OleDbType)int.Parse (prcParams [i + 1]);  		param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  		if (param.Direction == System.Data.ParameterDirection.Input) {  			param.Value = prcParams [i + 3].Trim ();  			param.Size = 50;  		}  		else if (param.OleDbType == System.Data.OleDb.OleDbType.VarChar) {  			param.Size = 50;  		}  		this.command.Parameters.Add (param);  	}  	this.command.ExecuteNonQuery ();  }  catch (System.Data.OleDb.OleDbException ex) {  	this.Err = "执行产生错误!" + ex.Message;  	this.ErrCode = strSql;  	this.DBErrCode = ex.ErrorCode;  	this.WriteErr ();  	return -1;  }  catch (Exception ex) {  	this.Err = "执行存储过程出错！" + strSql + ex.Message;  	this.WriteErr ();  	return -1;  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: try {  	prcName = prcParams [0];  	this.command.CommandText = prcName;  	//22 varchar 30 double 33 int 6 DATETIME   	for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  		System.Data.OleDb.OleDbParameter param = new System.Data.OleDb.OleDbParameter ();  		param.ParameterName = prcParams [i].Trim ();  		param.OleDbType = (System.Data.OleDb.OleDbType)int.Parse (prcParams [i + 1]);  		param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  		if (param.Direction == System.Data.ParameterDirection.Input) {  			param.Value = prcParams [i + 3].Trim ();  			param.Size = 50;  		}  		else if (param.OleDbType == System.Data.OleDb.OleDbType.VarChar) {  			param.Size = 50;  		}  		this.command.Parameters.Add (param);  	}  	this.command.ExecuteNonQuery ();  }  catch (System.Data.OleDb.OleDbException ex) {  	this.Err = "执行产生错误!" + ex.Message;  	this.ErrCode = strSql;  	this.DBErrCode = ex.ErrorCode;  	this.WriteErr ();  	return -1;  }  catch (Exception ex) {  	this.Err = "执行存储过程出错！" + strSql + ex.Message;  	this.WriteErr ();  	return -1;  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: try {  	prcName = prcParams [0];  	this.command.CommandText = prcName;  	//22 varchar 30 double 33 int 6 DATETIME   	for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  		System.Data.OleDb.OleDbParameter param = new System.Data.OleDb.OleDbParameter ();  		param.ParameterName = prcParams [i].Trim ();  		param.OleDbType = (System.Data.OleDb.OleDbType)int.Parse (prcParams [i + 1]);  		param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  		if (param.Direction == System.Data.ParameterDirection.Input) {  			param.Value = prcParams [i + 3].Trim ();  			param.Size = 50;  		}  		else if (param.OleDbType == System.Data.OleDb.OleDbType.VarChar) {  			param.Size = 50;  		}  		this.command.Parameters.Add (param);  	}  	this.command.ExecuteNonQuery ();  }  catch (System.Data.OleDb.OleDbException ex) {  	this.Err = "执行产生错误!" + ex.Message;  	this.ErrCode = strSql;  	this.DBErrCode = ex.ErrorCode;  	this.WriteErr ();  	return -1;  }  catch (Exception ex) {  	this.Err = "执行存储过程出错！" + strSql + ex.Message;  	this.WriteErr ();  	return -1;  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: try {  	prcName = prcParams [0];  	this.command.CommandText = prcName;  	//22 varchar 30 double 33 int 6 DATETIME   	for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  		System.Data.OleDb.OleDbParameter param = new System.Data.OleDb.OleDbParameter ();  		param.ParameterName = prcParams [i].Trim ();  		param.OleDbType = (System.Data.OleDb.OleDbType)int.Parse (prcParams [i + 1]);  		param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  		if (param.Direction == System.Data.ParameterDirection.Input) {  			param.Value = prcParams [i + 3].Trim ();  			param.Size = 50;  		}  		else if (param.OleDbType == System.Data.OleDb.OleDbType.VarChar) {  			param.Size = 50;  		}  		this.command.Parameters.Add (param);  	}  	this.command.ExecuteNonQuery ();  }  catch (System.Data.OleDb.OleDbException ex) {  	this.Err = "执行产生错误!" + ex.Message;  	this.ErrCode = strSql;  	this.DBErrCode = ex.ErrorCode;  	this.WriteErr ();  	return -1;  }  catch (Exception ex) {  	this.Err = "执行存储过程出错！" + strSql + ex.Message;  	this.WriteErr ();  	return -1;  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: try {  	prcName = prcParams [0];  	this.command.CommandText = prcName;  	//22 varchar 30 double 33 int 6 DATETIME   	for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  		System.Data.OleDb.OleDbParameter param = new System.Data.OleDb.OleDbParameter ();  		param.ParameterName = prcParams [i].Trim ();  		param.OleDbType = (System.Data.OleDb.OleDbType)int.Parse (prcParams [i + 1]);  		param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  		if (param.Direction == System.Data.ParameterDirection.Input) {  			param.Value = prcParams [i + 3].Trim ();  			param.Size = 50;  		}  		else if (param.OleDbType == System.Data.OleDb.OleDbType.VarChar) {  			param.Size = 50;  		}  		this.command.Parameters.Add (param);  	}  	this.command.ExecuteNonQuery ();  }  catch (System.Data.OleDb.OleDbException ex) {  	this.Err = "执行产生错误!" + ex.Message;  	this.ErrCode = strSql;  	this.DBErrCode = ex.ErrorCode;  	this.WriteErr ();  	return -1;  }  catch (Exception ex) {  	this.Err = "执行存储过程出错！" + strSql + ex.Message;  	this.WriteErr ();  	return -1;  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  	System.Data.OleDb.OleDbParameter param = new System.Data.OleDb.OleDbParameter ();  	param.ParameterName = prcParams [i].Trim ();  	param.OleDbType = (System.Data.OleDb.OleDbType)int.Parse (prcParams [i + 1]);  	param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  	if (param.Direction == System.Data.ParameterDirection.Input) {  		param.Value = prcParams [i + 3].Trim ();  		param.Size = 50;  	}  	else if (param.OleDbType == System.Data.OleDb.OleDbType.VarChar) {  		param.Size = 50;  	}  	this.command.Parameters.Add (param);  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  	System.Data.OleDb.OleDbParameter param = new System.Data.OleDb.OleDbParameter ();  	param.ParameterName = prcParams [i].Trim ();  	param.OleDbType = (System.Data.OleDb.OleDbType)int.Parse (prcParams [i + 1]);  	param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  	if (param.Direction == System.Data.ParameterDirection.Input) {  		param.Value = prcParams [i + 3].Trim ();  		param.Size = 50;  	}  	else if (param.OleDbType == System.Data.OleDb.OleDbType.VarChar) {  		param.Size = 50;  	}  	this.command.Parameters.Add (param);  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  	System.Data.OleDb.OleDbParameter param = new System.Data.OleDb.OleDbParameter ();  	param.ParameterName = prcParams [i].Trim ();  	param.OleDbType = (System.Data.OleDb.OleDbType)int.Parse (prcParams [i + 1]);  	param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  	if (param.Direction == System.Data.ParameterDirection.Input) {  		param.Value = prcParams [i + 3].Trim ();  		param.Size = 50;  	}  	else if (param.OleDbType == System.Data.OleDb.OleDbType.VarChar) {  		param.Size = 50;  	}  	this.command.Parameters.Add (param);  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  	System.Data.OleDb.OleDbParameter param = new System.Data.OleDb.OleDbParameter ();  	param.ParameterName = prcParams [i].Trim ();  	param.OleDbType = (System.Data.OleDb.OleDbType)int.Parse (prcParams [i + 1]);  	param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  	if (param.Direction == System.Data.ParameterDirection.Input) {  		param.Value = prcParams [i + 3].Trim ();  		param.Size = 50;  	}  	else if (param.OleDbType == System.Data.OleDb.OleDbType.VarChar) {  		param.Size = 50;  	}  	this.command.Parameters.Add (param);  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  	System.Data.OleDb.OleDbParameter param = new System.Data.OleDb.OleDbParameter ();  	param.ParameterName = prcParams [i].Trim ();  	param.OleDbType = (System.Data.OleDb.OleDbType)int.Parse (prcParams [i + 1]);  	param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  	if (param.Direction == System.Data.ParameterDirection.Input) {  		param.Value = prcParams [i + 3].Trim ();  		param.Size = 50;  	}  	else if (param.OleDbType == System.Data.OleDb.OleDbType.VarChar) {  		param.Size = 50;  	}  	this.command.Parameters.Add (param);  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: i = i + 4
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: if (param.Direction == System.Data.ParameterDirection.Input) {  	param.Value = prcParams [i + 3].Trim ();  	param.Size = 50;  }  else if (param.OleDbType == System.Data.OleDb.OleDbType.VarChar) {  	param.Size = 50;  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: if (param.Direction == System.Data.ParameterDirection.Input) {  	param.Value = prcParams [i + 3].Trim ();  	param.Size = 50;  }  else if (param.OleDbType == System.Data.OleDb.OleDbType.VarChar) {  	param.Size = 50;  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: if (param.Direction == System.Data.ParameterDirection.Input) {  	param.Value = prcParams [i + 3].Trim ();  	param.Size = 50;  }  else if (param.OleDbType == System.Data.OleDb.OleDbType.VarChar) {  	param.Size = 50;  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: param.Value = prcParams [i + 3].Trim ();  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: param.Size = 50;  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: if (param.OleDbType == System.Data.OleDb.OleDbType.VarChar) {  	param.Size = 50;  }  
Magic Number,Mder.FC.DB,DBOle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOle.cs,ExecProc,The following statement contains a magic number: param.Size = 50;  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 365) {  	//大于等于365天'返回年  	i = (int)(s.TotalDays / 365);  	return i.ToString () + "岁";  }  else if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 365) {  	//大于等于365天'返回年  	i = (int)(s.TotalDays / 365);  	return i.ToString () + "岁";  }  else if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 365) {  	//大于等于365天'返回年  	i = (int)(s.TotalDays / 365);  	return i.ToString () + "岁";  }  else if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 365) {  	//大于等于365天'返回年  	i = (int)(s.TotalDays / 365);  	return i.ToString () + "岁";  }  else if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: i = (int)(s.TotalDays / 365);  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,GetAge,The following statement contains a magic number: i = (int)(s.TotalDays / 30);  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,Connect,The following statement contains a magic number: try {  	//显示进度  	this.ProgressBarValue = 50;  	this.ProgressBarText = "正在连接数据库...";  	this.Conn = new System.Data.OracleClient.OracleConnection (strConnectString);  	this.Conn.Open ();  	Mder.FC.DB.Conn.Instance = Conn as System.Data.OracleClient.OracleConnection;  	WriteDebug ("连接数据库！" + strConnectString);  	this.ProgressBarValue = 0;  	return 0;  }  catch (Exception ex) {  	this.ProgressBarValue = 0;  	this.Err = "连接数据库产生错误！" + ex.Message;  	this.ErrCode = "-1";  	this.WriteErr ();  	return -1;  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,Connect,The following statement contains a magic number: this.ProgressBarValue = 50;  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,NoQuery,The following statement contains a magic number: try {  	i = this.command.ExecuteNonQuery ();  }  catch (System.Data.OracleClient.OracleException ex) {  	this.Err = "执行产生错误!" + ex.Message;  	this.ErrCode = strSql;  	this.DBErrCode = ex.Code;  	this.WriteErr ();  	if (ex.Code == 12571) {  		while (this.Connect (this.Conn.ConnectionString) == -1) {  		}  		goto label;  	}  	return -1;  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,NoQuery,The following statement contains a magic number: if (ex.Code == 12571) {  	while (this.Connect (this.Conn.ConnectionString) == -1) {  	}  	goto label;  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,Query,The following statement contains a magic number: try {  	oraReader = this.command.ExecuteReader ();  }  catch (System.Data.OracleClient.OracleException ex) {  	this.Err = "执行产生错误!" + ex.Message;  	this.ErrCode = strSql;  	this.DBErrCode = ex.Code;  	this.WriteErr ();  	//ora-12571解决办法： 修改D:\oracle\ora92\network\admin\sqlnet.ora中  	//的SQLNET.AUTHENTICATION_SERVICES= (NTS)，将NTS改成NONE。重启机器就ok了。  	//这个问题导致原因很多.估计是由于域 (NAMES.DEFAULT_DOMAIN)或者 网络防火墙等原因导致。  	if (ex.Code == 12571) {  		while (this.Connect (this.Conn.ConnectionString) == -1) {  		}  		goto label;  	}  	return -1;  }  catch (Exception ex) {  	this.Err = "执行产生错误!" + ex.Message;  	this.ErrCode = strSql;  	this.WriteErr ();  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,Query,The following statement contains a magic number: if (ex.Code == 12571) {  	while (this.Connect (this.Conn.ConnectionString) == -1) {  	}  	goto label;  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,Query,The following statement contains a magic number: try {  	System.Data.OracleClient.OracleDataAdapter adapter = new System.Data.OracleClient.OracleDataAdapter (this.command);  	adapter.Fill (DataSet);  }  catch (System.Data.OracleClient.OracleException ex) {  	this.Err = "执行产生错误!" + ex.Message;  	this.ErrCode = strSql;  	this.DBErrCode = ex.Code;  	this.WriteErr ();  	if (ex.Code == 12571) {  		while (this.Connect (this.Conn.ConnectionString) == -1) {  		}  		goto a;  	}  	return -1;  }  catch (Exception ex) {  	this.Err = "执行语句产生错误!" + ex.Message;  	this.ErrCode = strSql;  	this.WriteErr ();  	return -1;  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,Query,The following statement contains a magic number: if (ex.Code == 12571) {  	while (this.Connect (this.Conn.ConnectionString) == -1) {  	}  	goto a;  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: try {  	prcName = prcParams [0];  	this.command.CommandText = prcName;  	//22 varchar 30 double 33 int 6 DATETIME   	for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  		System.Data.OracleClient.OracleParameter param = new System.Data.OracleClient.OracleParameter ();  		param.ParameterName = prcParams [i].Trim ();  		param.OracleType = (System.Data.OracleClient.OracleType)int.Parse (prcParams [i + 1]);  		param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  		if (param.Direction == System.Data.ParameterDirection.Input) {  			param.Value = prcParams [i + 3].Trim ();  			param.Size = 50;  		}  		else if (param.OracleType == System.Data.OracleClient.OracleType.VarChar) {  			param.Size = 50;  		}  		this.command.Parameters.Add (param);  	}  	this.command.ExecuteNonQuery ();  }  catch (System.Data.OracleClient.OracleException ex) {  	this.Err = "执行产生错误!" + ex.Message;  	this.ErrCode = strSql;  	this.DBErrCode = ex.Code;  	this.WriteErr ();  	return -1;  }  catch (Exception ex) {  	this.Err = "执行存储过程出错！" + strSql + ex.Message;  	this.WriteErr ();  	return -1;  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: try {  	prcName = prcParams [0];  	this.command.CommandText = prcName;  	//22 varchar 30 double 33 int 6 DATETIME   	for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  		System.Data.OracleClient.OracleParameter param = new System.Data.OracleClient.OracleParameter ();  		param.ParameterName = prcParams [i].Trim ();  		param.OracleType = (System.Data.OracleClient.OracleType)int.Parse (prcParams [i + 1]);  		param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  		if (param.Direction == System.Data.ParameterDirection.Input) {  			param.Value = prcParams [i + 3].Trim ();  			param.Size = 50;  		}  		else if (param.OracleType == System.Data.OracleClient.OracleType.VarChar) {  			param.Size = 50;  		}  		this.command.Parameters.Add (param);  	}  	this.command.ExecuteNonQuery ();  }  catch (System.Data.OracleClient.OracleException ex) {  	this.Err = "执行产生错误!" + ex.Message;  	this.ErrCode = strSql;  	this.DBErrCode = ex.Code;  	this.WriteErr ();  	return -1;  }  catch (Exception ex) {  	this.Err = "执行存储过程出错！" + strSql + ex.Message;  	this.WriteErr ();  	return -1;  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: try {  	prcName = prcParams [0];  	this.command.CommandText = prcName;  	//22 varchar 30 double 33 int 6 DATETIME   	for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  		System.Data.OracleClient.OracleParameter param = new System.Data.OracleClient.OracleParameter ();  		param.ParameterName = prcParams [i].Trim ();  		param.OracleType = (System.Data.OracleClient.OracleType)int.Parse (prcParams [i + 1]);  		param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  		if (param.Direction == System.Data.ParameterDirection.Input) {  			param.Value = prcParams [i + 3].Trim ();  			param.Size = 50;  		}  		else if (param.OracleType == System.Data.OracleClient.OracleType.VarChar) {  			param.Size = 50;  		}  		this.command.Parameters.Add (param);  	}  	this.command.ExecuteNonQuery ();  }  catch (System.Data.OracleClient.OracleException ex) {  	this.Err = "执行产生错误!" + ex.Message;  	this.ErrCode = strSql;  	this.DBErrCode = ex.Code;  	this.WriteErr ();  	return -1;  }  catch (Exception ex) {  	this.Err = "执行存储过程出错！" + strSql + ex.Message;  	this.WriteErr ();  	return -1;  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: try {  	prcName = prcParams [0];  	this.command.CommandText = prcName;  	//22 varchar 30 double 33 int 6 DATETIME   	for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  		System.Data.OracleClient.OracleParameter param = new System.Data.OracleClient.OracleParameter ();  		param.ParameterName = prcParams [i].Trim ();  		param.OracleType = (System.Data.OracleClient.OracleType)int.Parse (prcParams [i + 1]);  		param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  		if (param.Direction == System.Data.ParameterDirection.Input) {  			param.Value = prcParams [i + 3].Trim ();  			param.Size = 50;  		}  		else if (param.OracleType == System.Data.OracleClient.OracleType.VarChar) {  			param.Size = 50;  		}  		this.command.Parameters.Add (param);  	}  	this.command.ExecuteNonQuery ();  }  catch (System.Data.OracleClient.OracleException ex) {  	this.Err = "执行产生错误!" + ex.Message;  	this.ErrCode = strSql;  	this.DBErrCode = ex.Code;  	this.WriteErr ();  	return -1;  }  catch (Exception ex) {  	this.Err = "执行存储过程出错！" + strSql + ex.Message;  	this.WriteErr ();  	return -1;  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: try {  	prcName = prcParams [0];  	this.command.CommandText = prcName;  	//22 varchar 30 double 33 int 6 DATETIME   	for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  		System.Data.OracleClient.OracleParameter param = new System.Data.OracleClient.OracleParameter ();  		param.ParameterName = prcParams [i].Trim ();  		param.OracleType = (System.Data.OracleClient.OracleType)int.Parse (prcParams [i + 1]);  		param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  		if (param.Direction == System.Data.ParameterDirection.Input) {  			param.Value = prcParams [i + 3].Trim ();  			param.Size = 50;  		}  		else if (param.OracleType == System.Data.OracleClient.OracleType.VarChar) {  			param.Size = 50;  		}  		this.command.Parameters.Add (param);  	}  	this.command.ExecuteNonQuery ();  }  catch (System.Data.OracleClient.OracleException ex) {  	this.Err = "执行产生错误!" + ex.Message;  	this.ErrCode = strSql;  	this.DBErrCode = ex.Code;  	this.WriteErr ();  	return -1;  }  catch (Exception ex) {  	this.Err = "执行存储过程出错！" + strSql + ex.Message;  	this.WriteErr ();  	return -1;  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  	System.Data.OracleClient.OracleParameter param = new System.Data.OracleClient.OracleParameter ();  	param.ParameterName = prcParams [i].Trim ();  	param.OracleType = (System.Data.OracleClient.OracleType)int.Parse (prcParams [i + 1]);  	param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  	if (param.Direction == System.Data.ParameterDirection.Input) {  		param.Value = prcParams [i + 3].Trim ();  		param.Size = 50;  	}  	else if (param.OracleType == System.Data.OracleClient.OracleType.VarChar) {  		param.Size = 50;  	}  	this.command.Parameters.Add (param);  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  	System.Data.OracleClient.OracleParameter param = new System.Data.OracleClient.OracleParameter ();  	param.ParameterName = prcParams [i].Trim ();  	param.OracleType = (System.Data.OracleClient.OracleType)int.Parse (prcParams [i + 1]);  	param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  	if (param.Direction == System.Data.ParameterDirection.Input) {  		param.Value = prcParams [i + 3].Trim ();  		param.Size = 50;  	}  	else if (param.OracleType == System.Data.OracleClient.OracleType.VarChar) {  		param.Size = 50;  	}  	this.command.Parameters.Add (param);  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  	System.Data.OracleClient.OracleParameter param = new System.Data.OracleClient.OracleParameter ();  	param.ParameterName = prcParams [i].Trim ();  	param.OracleType = (System.Data.OracleClient.OracleType)int.Parse (prcParams [i + 1]);  	param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  	if (param.Direction == System.Data.ParameterDirection.Input) {  		param.Value = prcParams [i + 3].Trim ();  		param.Size = 50;  	}  	else if (param.OracleType == System.Data.OracleClient.OracleType.VarChar) {  		param.Size = 50;  	}  	this.command.Parameters.Add (param);  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  	System.Data.OracleClient.OracleParameter param = new System.Data.OracleClient.OracleParameter ();  	param.ParameterName = prcParams [i].Trim ();  	param.OracleType = (System.Data.OracleClient.OracleType)int.Parse (prcParams [i + 1]);  	param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  	if (param.Direction == System.Data.ParameterDirection.Input) {  		param.Value = prcParams [i + 3].Trim ();  		param.Size = 50;  	}  	else if (param.OracleType == System.Data.OracleClient.OracleType.VarChar) {  		param.Size = 50;  	}  	this.command.Parameters.Add (param);  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: for (int i = 1; i < prcParams.GetUpperBound (0); i = i + 4) {  	System.Data.OracleClient.OracleParameter param = new System.Data.OracleClient.OracleParameter ();  	param.ParameterName = prcParams [i].Trim ();  	param.OracleType = (System.Data.OracleClient.OracleType)int.Parse (prcParams [i + 1]);  	param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  	if (param.Direction == System.Data.ParameterDirection.Input) {  		param.Value = prcParams [i + 3].Trim ();  		param.Size = 50;  	}  	else if (param.OracleType == System.Data.OracleClient.OracleType.VarChar) {  		param.Size = 50;  	}  	this.command.Parameters.Add (param);  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: i = i + 4
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: param.Direction = (System.Data.ParameterDirection)int.Parse (prcParams [i + 2]);  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: if (param.Direction == System.Data.ParameterDirection.Input) {  	param.Value = prcParams [i + 3].Trim ();  	param.Size = 50;  }  else if (param.OracleType == System.Data.OracleClient.OracleType.VarChar) {  	param.Size = 50;  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: if (param.Direction == System.Data.ParameterDirection.Input) {  	param.Value = prcParams [i + 3].Trim ();  	param.Size = 50;  }  else if (param.OracleType == System.Data.OracleClient.OracleType.VarChar) {  	param.Size = 50;  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: if (param.Direction == System.Data.ParameterDirection.Input) {  	param.Value = prcParams [i + 3].Trim ();  	param.Size = 50;  }  else if (param.OracleType == System.Data.OracleClient.OracleType.VarChar) {  	param.Size = 50;  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: param.Value = prcParams [i + 3].Trim ();  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: param.Size = 50;  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: if (param.OracleType == System.Data.OracleClient.OracleType.VarChar) {  	param.Size = 50;  }  
Magic Number,Mder.FC.DB,DBOracle,C:\repos\neo2018_ZYFC\MderFc\DB\DBOracle.cs,ExecProc,The following statement contains a magic number: param.Size = 50;  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: try {  	//取时间间隔  	TimeSpan s = new TimeSpan (sysDate.Ticks - birthday.Ticks);  	int i = 0;  	if (s.Days > 365) {  		if (birthday.Month > sysDate.Month) {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  		else if (birthday.Month < sysDate.Month) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			if (birthday.Day <= sysDate.Day) {  				i = sysDate.Year - birthday.Year;  				return i.ToString () + "岁";  			}  			else {  				i = sysDate.Year - birthday.Year - 1;  				return i.ToString () + "岁";  			}  		}  	}  	else {  		if (s.TotalDays >= 365) {  			//大于等于365天'返回年  			i = (int)(s.TotalDays / 365);  			return i.ToString () + "岁";  		}  		else if (s.TotalDays >= 30) {  			//小于365天且大于等于30天'返回月  			i = (int)(s.TotalDays / 30);  			return i.ToString () + "月";  		}  		else {  			//小于30天'返回天  			i = (int)s.TotalDays + 1;  			return i.ToString () + "天";  		}  	}  }  catch {  	return "";  }  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: if (s.Days > 365) {  	if (birthday.Month > sysDate.Month) {  		i = sysDate.Year - birthday.Year - 1;  		return i.ToString () + "岁";  	}  	else if (birthday.Month < sysDate.Month) {  		i = sysDate.Year - birthday.Year;  		return i.ToString () + "岁";  	}  	else {  		if (birthday.Day <= sysDate.Day) {  			i = sysDate.Year - birthday.Year;  			return i.ToString () + "岁";  		}  		else {  			i = sysDate.Year - birthday.Year - 1;  			return i.ToString () + "岁";  		}  	}  }  else {  	if (s.TotalDays >= 365) {  		//大于等于365天'返回年  		i = (int)(s.TotalDays / 365);  		return i.ToString () + "岁";  	}  	else if (s.TotalDays >= 30) {  		//小于365天且大于等于30天'返回月  		i = (int)(s.TotalDays / 30);  		return i.ToString () + "月";  	}  	else {  		//小于30天'返回天  		i = (int)s.TotalDays + 1;  		return i.ToString () + "天";  	}  }  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 365) {  	//大于等于365天'返回年  	i = (int)(s.TotalDays / 365);  	return i.ToString () + "岁";  }  else if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 365) {  	//大于等于365天'返回年  	i = (int)(s.TotalDays / 365);  	return i.ToString () + "岁";  }  else if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 365) {  	//大于等于365天'返回年  	i = (int)(s.TotalDays / 365);  	return i.ToString () + "岁";  }  else if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 365) {  	//大于等于365天'返回年  	i = (int)(s.TotalDays / 365);  	return i.ToString () + "岁";  }  else if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: i = (int)(s.TotalDays / 365);  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: if (s.TotalDays >= 30) {  	//小于365天且大于等于30天'返回月  	i = (int)(s.TotalDays / 30);  	return i.ToString () + "月";  }  else {  	//小于30天'返回天  	i = (int)s.TotalDays + 1;  	return i.ToString () + "天";  }  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,GetAge,The following statement contains a magic number: i = (int)(s.TotalDays / 30);  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,Connect,The following statement contains a magic number: try {  	//显示进度  	this.ProgressBarValue = 50;  	this.ProgressBarText = "正在连接数据库...";  	this.Conn = new System.Data.SqlClient.SqlConnection (strConnectString);  	this.Conn.Open ();  	Mder.FC.DB.Conn.Instance = Conn as System.Data.SqlClient.SqlConnection;  	WriteDebug ("连接数据库！" + strConnectString);  	this.ProgressBarValue = 0;  	return 0;  }  catch (Exception ex) {  	this.ProgressBarValue = 0;  	this.Err = "连接数据库产生错误！" + ex.Message;  	this.ErrCode = "-1";  	this.WriteErr ();  	return -1;  }  
Magic Number,Mder.FC.DB,DBSqlServer,C:\repos\neo2018_ZYFC\MderFc\DB\DBSqlServer.cs,Connect,The following statement contains a magic number: this.ProgressBarValue = 50;  
Magic Number,Mder.FC.DB,SQL,C:\repos\neo2018_ZYFC\MderFc\DB\SQL.cs,LoadSql,The following statement contains a magic number: switch (mode) {  case 0:  	//表示sql语句存放在xml文件中。  	#region XML配置文件读取  	System.Xml.Linq.XElement xeSqls = null;  	try {  		xeSqls = XElement.Load (sqlXmlFileName);  	}  	catch (Exception ex) {  		this.Err = ex.Message;  		this.ErrCode = "-1";  		this.WriteErr ();  		return -1;  	}  	IEnumerable<XElement> sqlCollect = xeSqls.Elements ("sql");  	try {  		foreach (XElement xeSql in sqlCollect) {  			Mder.FC.Entities.BaseObject objValue = new Mder.FC.Entities.BaseObject ();  			objValue.ID = xeSql.Element ("id").Value;  			objValue.Name = xeSql.Element ("content").Value;  			objValue.Type = xeSql.Element ("type").Value;  			objValue.Remark = xeSql.Element ("comments").Value;  			//objValue.Name=objValue.Name.Replace("\n"'" ");  			objValue.Name = objValue.Name.Replace ("\t"' " ");  			this.alSql.Add (objValue);  		}  	}  	catch (Exception ex) {  		this.Err = ex.Message;  		this.ErrCode = "-1";  		this.WriteErr ();  		return -1;  	}  	#endregion  	break;  default:  	for (int i = 0; i < table_name.Count; i++) {  		Mder.FC.Entities.BaseObject obj = table_name [i] as Mder.FC.Entities.BaseObject;  		if (obj.ID == "1")//开始时候加载  		 {  			//因为要增加对不同数据库的支持'不同数据库里的SQL语句存储的字段不同' 所以才这样  			//{476364C9-195A-4ca8-A2D7-6782088016FA}  			string mySQL = string.Empty;  			if (Mder.FC.DB.Conn.Instance.GetType () == typeof(System.Data.OracleClient.OracleConnection)) {  				mySQL = string.Format ("select id'name'memo from {0}"' table_name [i].ToString ());  			}  			else//以后再用  			 {  				mySQL = string.Format ("select id'name'memo from {0}"' table_name [i].ToString ());  			}  			if (this.Query (mySQL) == -1) {  				return -1;  				//表有问题  			}  			try {  				while (this.Reader.Read ()) {  					Mder.FC.Entities.BaseObject objValue = new Mder.FC.Entities.BaseObject ();  					objValue.ID = this.Reader [0].ToString ();  					objValue.Name = this.Reader [1].ToString ();  					objValue.Name = objValue.Name.Replace ("\r"' " ");  					objValue.Name = objValue.Name.Replace ("\t"' " ");  					try {  						objValue.Remark = this.Reader [2].ToString ();  					}  					catch {  					}  					//this.alSql.Add(objValue);  					this.hsSqlValue.Add (objValue.ID' objValue.Name);  				}  			}  			catch {  			}  			finally {  				this.Reader.Close ();  			}  		}  	}  	break;  }  
Magic Number,Mder.FC.DB,SQL,C:\repos\neo2018_ZYFC\MderFc\DB\SQL.cs,LoadSql,The following statement contains a magic number: for (int i = 0; i < table_name.Count; i++) {  	Mder.FC.Entities.BaseObject obj = table_name [i] as Mder.FC.Entities.BaseObject;  	if (obj.ID == "1")//开始时候加载  	 {  		//因为要增加对不同数据库的支持'不同数据库里的SQL语句存储的字段不同' 所以才这样  		//{476364C9-195A-4ca8-A2D7-6782088016FA}  		string mySQL = string.Empty;  		if (Mder.FC.DB.Conn.Instance.GetType () == typeof(System.Data.OracleClient.OracleConnection)) {  			mySQL = string.Format ("select id'name'memo from {0}"' table_name [i].ToString ());  		}  		else//以后再用  		 {  			mySQL = string.Format ("select id'name'memo from {0}"' table_name [i].ToString ());  		}  		if (this.Query (mySQL) == -1) {  			return -1;  			//表有问题  		}  		try {  			while (this.Reader.Read ()) {  				Mder.FC.Entities.BaseObject objValue = new Mder.FC.Entities.BaseObject ();  				objValue.ID = this.Reader [0].ToString ();  				objValue.Name = this.Reader [1].ToString ();  				objValue.Name = objValue.Name.Replace ("\r"' " ");  				objValue.Name = objValue.Name.Replace ("\t"' " ");  				try {  					objValue.Remark = this.Reader [2].ToString ();  				}  				catch {  				}  				//this.alSql.Add(objValue);  				this.hsSqlValue.Add (objValue.ID' objValue.Name);  			}  		}  		catch {  		}  		finally {  			this.Reader.Close ();  		}  	}  }  
Magic Number,Mder.FC.DB,SQL,C:\repos\neo2018_ZYFC\MderFc\DB\SQL.cs,LoadSql,The following statement contains a magic number: if (obj.ID == "1")//开始时候加载   {  	//因为要增加对不同数据库的支持'不同数据库里的SQL语句存储的字段不同' 所以才这样  	//{476364C9-195A-4ca8-A2D7-6782088016FA}  	string mySQL = string.Empty;  	if (Mder.FC.DB.Conn.Instance.GetType () == typeof(System.Data.OracleClient.OracleConnection)) {  		mySQL = string.Format ("select id'name'memo from {0}"' table_name [i].ToString ());  	}  	else//以后再用  	 {  		mySQL = string.Format ("select id'name'memo from {0}"' table_name [i].ToString ());  	}  	if (this.Query (mySQL) == -1) {  		return -1;  		//表有问题  	}  	try {  		while (this.Reader.Read ()) {  			Mder.FC.Entities.BaseObject objValue = new Mder.FC.Entities.BaseObject ();  			objValue.ID = this.Reader [0].ToString ();  			objValue.Name = this.Reader [1].ToString ();  			objValue.Name = objValue.Name.Replace ("\r"' " ");  			objValue.Name = objValue.Name.Replace ("\t"' " ");  			try {  				objValue.Remark = this.Reader [2].ToString ();  			}  			catch {  			}  			//this.alSql.Add(objValue);  			this.hsSqlValue.Add (objValue.ID' objValue.Name);  		}  	}  	catch {  	}  	finally {  		this.Reader.Close ();  	}  }  
Magic Number,Mder.FC.DB,SQL,C:\repos\neo2018_ZYFC\MderFc\DB\SQL.cs,LoadSql,The following statement contains a magic number: try {  	while (this.Reader.Read ()) {  		Mder.FC.Entities.BaseObject objValue = new Mder.FC.Entities.BaseObject ();  		objValue.ID = this.Reader [0].ToString ();  		objValue.Name = this.Reader [1].ToString ();  		objValue.Name = objValue.Name.Replace ("\r"' " ");  		objValue.Name = objValue.Name.Replace ("\t"' " ");  		try {  			objValue.Remark = this.Reader [2].ToString ();  		}  		catch {  		}  		//this.alSql.Add(objValue);  		this.hsSqlValue.Add (objValue.ID' objValue.Name);  	}  }  catch {  }  finally {  	this.Reader.Close ();  }  
Magic Number,Mder.FC.DB,SQL,C:\repos\neo2018_ZYFC\MderFc\DB\SQL.cs,LoadSql,The following statement contains a magic number: while (this.Reader.Read ()) {  	Mder.FC.Entities.BaseObject objValue = new Mder.FC.Entities.BaseObject ();  	objValue.ID = this.Reader [0].ToString ();  	objValue.Name = this.Reader [1].ToString ();  	objValue.Name = objValue.Name.Replace ("\r"' " ");  	objValue.Name = objValue.Name.Replace ("\t"' " ");  	try {  		objValue.Remark = this.Reader [2].ToString ();  	}  	catch {  	}  	//this.alSql.Add(objValue);  	this.hsSqlValue.Add (objValue.ID' objValue.Name);  }  
Magic Number,Mder.FC.DB,SQL,C:\repos\neo2018_ZYFC\MderFc\DB\SQL.cs,LoadSql,The following statement contains a magic number: try {  	objValue.Remark = this.Reader [2].ToString ();  }  catch {  }  
Magic Number,Mder.FC.DB,SQL,C:\repos\neo2018_ZYFC\MderFc\DB\SQL.cs,LoadSql,The following statement contains a magic number: objValue.Remark = this.Reader [2].ToString ();  
Magic Number,Mder.FC.DB,SQL,C:\repos\neo2018_ZYFC\MderFc\DB\SQL.cs,GetSql,The following statement contains a magic number: for (int i = 0; i < table_name.Count; i++) {  	Mder.FC.Entities.BaseObject obj = table_name [i] as Mder.FC.Entities.BaseObject;  	if (obj.ID == "0")//开始时候加载  	 {  		//因为要增加对不同数据库的支持'不同数据库里的SQL语句存储的字段不同' 所以才这样  		//{844EC201-D874-4d1e-B2B3-DBC61DA21599}  		//string mySQL = string.Format("select id'name'memo from {0} where id='{1}'"' table_name[i].ToString()' index);//原来的程序  		string mySQL = string.Empty;  		if (Mder.FC.DB.Conn.Instance.GetType () == typeof(System.Data.OracleClient.OracleConnection)) {  			mySQL = string.Format ("select id'name'memo from {0} where id='{1}'"' table_name [i].ToString ()' index);  		}  		else//以后再用  		 {  			mySQL = string.Format ("select id'name'memo from {0} where id='{1}'"' table_name [i].ToString ()' index);  		}  		//end ;  		if (this.Query (mySQL) == -1) {  			return -1;  			//表有问题  		}  		if (this.Reader.Read ()) {  			Mder.FC.Entities.BaseObject objValue = new Mder.FC.Entities.BaseObject ();  			objValue.ID = this.Reader [0].ToString ();  			objValue.Name = this.Reader [1].ToString ();  			objValue.Name = objValue.Name.Replace ("\r"' " ");  			objValue.Name = objValue.Name.Replace ("\t"' " ");  			try {  				objValue.Remark = this.Reader [2].ToString ();  			}  			catch {  			}  			//this.alSql.Add(objValue);  			this.hsSqlValue.Add (objValue.ID' objValue.Name);  			Sql = objValue.Name;  			this.Err = "获得Sql语句，索引为：" + index + "\n Sql为：" + Sql;  			this.WriteDebug (this.Err);  			this.Reader.Close ();  			return 0;  		}  		else {  			this.Reader.Close ();  		}  	}  }  
Magic Number,Mder.FC.DB,SQL,C:\repos\neo2018_ZYFC\MderFc\DB\SQL.cs,GetSql,The following statement contains a magic number: if (obj.ID == "0")//开始时候加载   {  	//因为要增加对不同数据库的支持'不同数据库里的SQL语句存储的字段不同' 所以才这样  	//{844EC201-D874-4d1e-B2B3-DBC61DA21599}  	//string mySQL = string.Format("select id'name'memo from {0} where id='{1}'"' table_name[i].ToString()' index);//原来的程序  	string mySQL = string.Empty;  	if (Mder.FC.DB.Conn.Instance.GetType () == typeof(System.Data.OracleClient.OracleConnection)) {  		mySQL = string.Format ("select id'name'memo from {0} where id='{1}'"' table_name [i].ToString ()' index);  	}  	else//以后再用  	 {  		mySQL = string.Format ("select id'name'memo from {0} where id='{1}'"' table_name [i].ToString ()' index);  	}  	//end ;  	if (this.Query (mySQL) == -1) {  		return -1;  		//表有问题  	}  	if (this.Reader.Read ()) {  		Mder.FC.Entities.BaseObject objValue = new Mder.FC.Entities.BaseObject ();  		objValue.ID = this.Reader [0].ToString ();  		objValue.Name = this.Reader [1].ToString ();  		objValue.Name = objValue.Name.Replace ("\r"' " ");  		objValue.Name = objValue.Name.Replace ("\t"' " ");  		try {  			objValue.Remark = this.Reader [2].ToString ();  		}  		catch {  		}  		//this.alSql.Add(objValue);  		this.hsSqlValue.Add (objValue.ID' objValue.Name);  		Sql = objValue.Name;  		this.Err = "获得Sql语句，索引为：" + index + "\n Sql为：" + Sql;  		this.WriteDebug (this.Err);  		this.Reader.Close ();  		return 0;  	}  	else {  		this.Reader.Close ();  	}  }  
Magic Number,Mder.FC.DB,SQL,C:\repos\neo2018_ZYFC\MderFc\DB\SQL.cs,GetSql,The following statement contains a magic number: if (this.Reader.Read ()) {  	Mder.FC.Entities.BaseObject objValue = new Mder.FC.Entities.BaseObject ();  	objValue.ID = this.Reader [0].ToString ();  	objValue.Name = this.Reader [1].ToString ();  	objValue.Name = objValue.Name.Replace ("\r"' " ");  	objValue.Name = objValue.Name.Replace ("\t"' " ");  	try {  		objValue.Remark = this.Reader [2].ToString ();  	}  	catch {  	}  	//this.alSql.Add(objValue);  	this.hsSqlValue.Add (objValue.ID' objValue.Name);  	Sql = objValue.Name;  	this.Err = "获得Sql语句，索引为：" + index + "\n Sql为：" + Sql;  	this.WriteDebug (this.Err);  	this.Reader.Close ();  	return 0;  }  else {  	this.Reader.Close ();  }  
Magic Number,Mder.FC.DB,SQL,C:\repos\neo2018_ZYFC\MderFc\DB\SQL.cs,GetSql,The following statement contains a magic number: try {  	objValue.Remark = this.Reader [2].ToString ();  }  catch {  }  
Magic Number,Mder.FC.DB,SQL,C:\repos\neo2018_ZYFC\MderFc\DB\SQL.cs,GetSql,The following statement contains a magic number: objValue.Remark = this.Reader [2].ToString ();  
Magic Number,Mder.FC.DB.DBUtil,OLEDBHelper,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteDataTable,The following statement contains a magic number: cmd.CommandTimeout = 30000;  
Magic Number,Mder.FC.DB.DBUtil,OLEDBHelper,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteDataTable,The following statement contains a magic number: cmd.CommandTimeout = 30000;  
Magic Number,Mder.FC.DB.DBUtil,OLEDBHelper,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteDataTable,The following statement contains a magic number: using (OleDbConnection cn = new OleDbConnection (ConnString)) {  	cn.Open ();  	//create a command and prepare it for execution  	OleDbCommand cmd = new OleDbCommand ();  	cmd.CommandTimeout = 30000;  	PrepareCommand (cmd' cn' (OleDbTransaction)null' commandType' commandText' commandParameters);  	//create the DataAdapter & DataTable  	OleDbDataAdapter da = new OleDbDataAdapter (cmd);  	DataTable dt = new DataTable ();  	DataSet dst = new DataSet ();  	//fill the DataTable using default values for DataTable names' etc.  	if (pageSize == -1 || pageCurrent == -1) {  		da.Fill (dt);  	}  	else {  		da.Fill (dst' pageSize * (pageCurrent - 1)' pageSize' "table");  		dt = dst.Tables ["table"];  	}  	// detach the SqlParameters from the command object' so they can be used again.			  	cmd.Parameters.Clear ();  	//return the DataTable  	return dt;  }  
Magic Number,Mder.FC.DB.DBUtil,OLEDBHelper,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteDataTable,The following statement contains a magic number: cmd.CommandTimeout = 30000;  
Magic Number,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteNonQuery,The following statement contains a magic number: Comm.CommandTimeout = 60;  
Magic Number,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteNonQuery,The following statement contains a magic number: Comm.CommandTimeout = 60;  
Magic Number,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteNonQuery,The following statement contains a magic number: try {  	if (_writeLog) {  		using (SWApp = File.AppendText (_path)) {  			SWApp.WriteLine ("[" + DateTime.Now.ToString () + "]  CommandString = " + strSQL);  			SWApp.Close ();  		}  	}  	if (param != null) {  		foreach (ParamInfo p in param) {  			IDbDataParameter pa = Comm.CreateParameter ();  			pa.ParameterName = p.Name;  			pa.Value = p.Value;  			//处理大文本  			if (pa is System.Data.OleDb.OleDbParameter && pa.Value != null && pa.Value.ToString ().Length >= 4000) {  				System.Data.OleDb.OleDbParameter p1 = pa as System.Data.OleDb.OleDbParameter;  				p1.OleDbType = System.Data.OleDb.OleDbType.VarWChar;  				Comm.Parameters.Add (p1);  			}  			else {  				Comm.Parameters.Add (pa);  			}  		}  	}  	Comm.ExecuteNonQuery ();  	FillParameterValue (Comm.Parameters' param);  	Trans.Commit ();  	this.Conn.Close ();  }  catch (Exception e) {  	Trans.Rollback ();  	this.Conn.Close ();  	if (_writeLog) {  		using (SWApp = File.AppendText (_path)) {  			SWApp.WriteLine ("[" + DateTime.Now.ToString () + "]  Error Message ： " + e.ToString ());  		}  	}  	this.ErrorMessage = e.ToString ();  	throw new Exception (e.ToString ());  }  
Magic Number,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteNonQuery,The following statement contains a magic number: if (param != null) {  	foreach (ParamInfo p in param) {  		IDbDataParameter pa = Comm.CreateParameter ();  		pa.ParameterName = p.Name;  		pa.Value = p.Value;  		//处理大文本  		if (pa is System.Data.OleDb.OleDbParameter && pa.Value != null && pa.Value.ToString ().Length >= 4000) {  			System.Data.OleDb.OleDbParameter p1 = pa as System.Data.OleDb.OleDbParameter;  			p1.OleDbType = System.Data.OleDb.OleDbType.VarWChar;  			Comm.Parameters.Add (p1);  		}  		else {  			Comm.Parameters.Add (pa);  		}  	}  }  
Magic Number,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteNonQuery,The following statement contains a magic number: foreach (ParamInfo p in param) {  	IDbDataParameter pa = Comm.CreateParameter ();  	pa.ParameterName = p.Name;  	pa.Value = p.Value;  	//处理大文本  	if (pa is System.Data.OleDb.OleDbParameter && pa.Value != null && pa.Value.ToString ().Length >= 4000) {  		System.Data.OleDb.OleDbParameter p1 = pa as System.Data.OleDb.OleDbParameter;  		p1.OleDbType = System.Data.OleDb.OleDbType.VarWChar;  		Comm.Parameters.Add (p1);  	}  	else {  		Comm.Parameters.Add (pa);  	}  }  
Magic Number,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteNonQuery,The following statement contains a magic number: if (pa is System.Data.OleDb.OleDbParameter && pa.Value != null && pa.Value.ToString ().Length >= 4000) {  	System.Data.OleDb.OleDbParameter p1 = pa as System.Data.OleDb.OleDbParameter;  	p1.OleDbType = System.Data.OleDb.OleDbType.VarWChar;  	Comm.Parameters.Add (p1);  }  else {  	Comm.Parameters.Add (pa);  }  
Magic Number,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteScalar,The following statement contains a magic number: Comm.CommandTimeout = 60;  
Magic Number,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteScalar,The following statement contains a magic number: Comm.CommandTimeout = 60;  
Magic Number,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteDataSet,The following statement contains a magic number: Comm.CommandTimeout = 60;  
Magic Number,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteDataSet,The following statement contains a magic number: Comm.CommandTimeout = 60;  
Magic Number,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteDataReader,The following statement contains a magic number: Comm.CommandTimeout = 60;  
Magic Number,Mder.FC.DB.DBUtil,AccessHelper3,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ExecuteDataReader,The following statement contains a magic number: Comm.CommandTimeout = 60;  
Magic Number,Mder.FC.DB.DBUtil,ParamInfo,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ParamInfo,The following statement contains a magic number: Size = Value == null ? 50 : Value.ToString ().Length;  
Magic Number,Mder.FC.DB.DBUtil,ParamInfo,C:\repos\neo2018_ZYFC\MderFc\DB\DBUtil\AccessHelper.cs,ParamInfo,The following statement contains a magic number: Size = Value == null ? 50 : Value.ToString ().Length;  
Magic Number,Mder.FC.DS,SeqList,C:\repos\neo2018_ZYFC\MderFc\DS\ListDS.cs,Insert,The following statement contains a magic number: if (i < 1 || i > last + 2) {  	throw new IndexOutOfRangeException (i.ToString ());  	//Console.WriteLine("Position is error!");  	//return;  }  
Magic Number,Mder.FC.DS,SeqList,C:\repos\neo2018_ZYFC\MderFc\DS\ListDS.cs,Insert,The following statement contains a magic number: if (i == last + 2) {  	data [last + 1] = item;  }  else {  	for (int j = last; j >= i - 1; --j) {  		data [j + 1] = data [j];  	}  	data [i - 1] = item;  }  
Magic Number,Mder.FC.DS,ListDS,C:\repos\neo2018_ZYFC\MderFc\DS\ListDS.cs,BinarySearch,The following statement contains a magic number: while (low <= high) {  	middle = low + (high - low) / 2;  	if (value == arr [middle]) {  		if (middle < returnMiddle) {  			returnMiddle = middle;  		}  		high = middle - 1;  	}  	if (value > arr [middle]) {  		low = middle + 1;  	}  	if (value < arr [middle]) {  		high = middle - 1;  	}  }  
Magic Number,Mder.FC.DS,ListDS,C:\repos\neo2018_ZYFC\MderFc\DS\ListDS.cs,BinarySearch,The following statement contains a magic number: middle = low + (high - low) / 2;  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,HSLToRGB,The following statement contains a magic number: h = (h / 240) * 360;  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,HSLToRGB,The following statement contains a magic number: h = (h / 240) * 360;  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,HSLToRGB,The following statement contains a magic number: s /= 240;  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,HSLToRGB,The following statement contains a magic number: l /= 240;  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,HSLToRGB,The following statement contains a magic number: r /= 255;  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,HSLToRGB,The following statement contains a magic number: g /= 255;  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,HSLToRGB,The following statement contains a magic number: b /= 255;  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,HSLToRGB,The following statement contains a magic number: r *= 255;  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,HSLToRGB,The following statement contains a magic number: g *= 255;  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,HSLToRGB,The following statement contains a magic number: b *= 255;  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,getRGBValue,The following statement contains a magic number: if (hue < 60.0) {  	return n1 + (n2 - n1) * hue / 60.0f;  }  else if (hue < 180.0f) {  	return n2;  }  else if (hue < 240.0f) {  	return n1 + (n2 - n1) * (240.0f - hue) / 60.0f;  }  else {  	return n1;  }  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,RGBToHSL,The following statement contains a magic number: l = (max + min) / 2;  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,RGBToHSL,The following statement contains a magic number: if (max == min) {  	//should be undefined but this works for what we need  	s = 0;  	h = 240.0f;  }  else {  	delta = max - min;  	//calc the Saturation  	if (l < 0.5) {  		s = delta / (max + min);  	}  	else {  		s = delta / (2.0f - (max + min));  	}  	//calc the hue  	if (fr == max) {  		h = (fg - fb) / delta;  	}  	else if (fg == max) {  		h = 2.0f + (fb - fr) / delta;  	}  	else if (fb == max) {  		h = 4.0f + (fr - fg) / delta;  	}  	//convert hue to degrees  	h *= 60.0f;  	if (h < 0.0f) {  		h += 360.0f;  	}  }  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,RGBToHSL,The following statement contains a magic number: if (l < 0.5) {  	s = delta / (max + min);  }  else {  	s = delta / (2.0f - (max + min));  }  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,RGBToHSL,The following statement contains a magic number: l *= 240;  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,RGBToHSL,The following statement contains a magic number: s *= 240;  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,RGBToHSL,The following statement contains a magic number: h = (h / 360) * 240;  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,RGBToHSL,The following statement contains a magic number: h = (h / 360) * 240;  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,CalculateColor,The following statement contains a magic number: return Color.FromArgb (255' newRed' newGreen' newBlue);  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,ColorFromRGBString,The following statement contains a magic number: if (RGBs.Length != 3) {  	// If we don't have three pieces of information' then the  	// string is not properly formatted' inform the use  	throw new Exception ("RGB color string is not well formed");  }  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,ColorFromRGBString,The following statement contains a magic number: try {  	R = Convert.ToInt32 (stringR);  	G = Convert.ToInt32 (stringG);  	B = Convert.ToInt32 (stringB);  	if ((R < 0 || R > 255) || (G < 0 || G > 255) || (B < 0 || B > 255)) {  		throw new Exception ("Out of bounds RGB value");  	}  	else {  		// Convert to color  		rgbColor = Color.FromArgb (R' G' B);  		// See if we have either a web color or a systgem color  		Color knownColor = Color.Empty;  		bool isKnown = ColorUtil.IsKnownColor (rgbColor' ref knownColor' true);  		if (!isKnown)  			isKnown = ColorUtil.IsSystemColor (rgbColor' ref knownColor);  		if (isKnown)  			rgbColor = knownColor;  	}  }  catch (InvalidCastException) {  	throw new Exception ("Invalid RGB value");  }  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,ColorFromRGBString,The following statement contains a magic number: try {  	R = Convert.ToInt32 (stringR);  	G = Convert.ToInt32 (stringG);  	B = Convert.ToInt32 (stringB);  	if ((R < 0 || R > 255) || (G < 0 || G > 255) || (B < 0 || B > 255)) {  		throw new Exception ("Out of bounds RGB value");  	}  	else {  		// Convert to color  		rgbColor = Color.FromArgb (R' G' B);  		// See if we have either a web color or a systgem color  		Color knownColor = Color.Empty;  		bool isKnown = ColorUtil.IsKnownColor (rgbColor' ref knownColor' true);  		if (!isKnown)  			isKnown = ColorUtil.IsSystemColor (rgbColor' ref knownColor);  		if (isKnown)  			rgbColor = knownColor;  	}  }  catch (InvalidCastException) {  	throw new Exception ("Invalid RGB value");  }  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,ColorFromRGBString,The following statement contains a magic number: try {  	R = Convert.ToInt32 (stringR);  	G = Convert.ToInt32 (stringG);  	B = Convert.ToInt32 (stringB);  	if ((R < 0 || R > 255) || (G < 0 || G > 255) || (B < 0 || B > 255)) {  		throw new Exception ("Out of bounds RGB value");  	}  	else {  		// Convert to color  		rgbColor = Color.FromArgb (R' G' B);  		// See if we have either a web color or a systgem color  		Color knownColor = Color.Empty;  		bool isKnown = ColorUtil.IsKnownColor (rgbColor' ref knownColor' true);  		if (!isKnown)  			isKnown = ColorUtil.IsSystemColor (rgbColor' ref knownColor);  		if (isKnown)  			rgbColor = knownColor;  	}  }  catch (InvalidCastException) {  	throw new Exception ("Invalid RGB value");  }  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,ColorFromRGBString,The following statement contains a magic number: if ((R < 0 || R > 255) || (G < 0 || G > 255) || (B < 0 || B > 255)) {  	throw new Exception ("Out of bounds RGB value");  }  else {  	// Convert to color  	rgbColor = Color.FromArgb (R' G' B);  	// See if we have either a web color or a systgem color  	Color knownColor = Color.Empty;  	bool isKnown = ColorUtil.IsKnownColor (rgbColor' ref knownColor' true);  	if (!isKnown)  		isKnown = ColorUtil.IsSystemColor (rgbColor' ref knownColor);  	if (isKnown)  		rgbColor = knownColor;  }  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,ColorFromRGBString,The following statement contains a magic number: if ((R < 0 || R > 255) || (G < 0 || G > 255) || (B < 0 || B > 255)) {  	throw new Exception ("Out of bounds RGB value");  }  else {  	// Convert to color  	rgbColor = Color.FromArgb (R' G' B);  	// See if we have either a web color or a systgem color  	Color knownColor = Color.Empty;  	bool isKnown = ColorUtil.IsKnownColor (rgbColor' ref knownColor' true);  	if (!isKnown)  		isKnown = ColorUtil.IsSystemColor (rgbColor' ref knownColor);  	if (isKnown)  		rgbColor = knownColor;  }  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,ColorFromRGBString,The following statement contains a magic number: if ((R < 0 || R > 255) || (G < 0 || G > 255) || (B < 0 || B > 255)) {  	throw new Exception ("Out of bounds RGB value");  }  else {  	// Convert to color  	rgbColor = Color.FromArgb (R' G' B);  	// See if we have either a web color or a systgem color  	Color knownColor = Color.Empty;  	bool isKnown = ColorUtil.IsKnownColor (rgbColor' ref knownColor' true);  	if (!isKnown)  		isKnown = ColorUtil.IsSystemColor (rgbColor' ref knownColor);  	if (isKnown)  		rgbColor = knownColor;  }  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,GetGValue,The following statement contains a magic number: return ((byte)(((short)(color)) >> 8));  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,GetBValue,The following statement contains a magic number: return ((byte)((color) >> 16));  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,RGB,The following statement contains a magic number: return ((uint)(((byte)(r) | ((short)((byte)(g)) << 8)) | (((short)(byte)(b)) << 16)));  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,RGB,The following statement contains a magic number: return ((uint)(((byte)(r) | ((short)((byte)(g)) << 8)) | (((short)(byte)(b)) << 16)));  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,RGB,The following statement contains a magic number: return ((uint)(((byte)(clr.R) | ((short)((byte)(clr.G)) << 8)) | (((short)(byte)(clr.B)) << 16)));  
Magic Number,Mder.FC.GDI,ColorUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ColorUtil.cs,RGB,The following statement contains a magic number: return ((uint)(((byte)(clr.R) | ((short)((byte)(clr.G)) << 8)) | (((short)(byte)(clr.B)) << 16)));  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [0] = arrPoints [2] = pnt1;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [3] = pnt4;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [0] = arrPoints [2] = pnt1;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [3] = pnt4;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: pnt2.X -= 2;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: pnt4.Y -= 2;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [0] = arrPoints [2] = pnt1;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [3] = pnt4;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [0] = arrPoints [2] = pnt1;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [3] = pnt4;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [0] = arrPoints [2] = pnt1;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [3] = pnt4;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [0] = arrPoints [2] = pnt1;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [3] = pnt4;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: pnt2.X -= 2;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: pnt4.Y -= 2;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [0] = arrPoints [2] = pnt1;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [3] = pnt4;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [0] = arrPoints [2] = pnt1;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [3] = pnt4;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [0] = arrPoints [2] = pnt1;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [3] = pnt4;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [0] = arrPoints [2] = pnt1;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [3] = pnt4;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [0] = arrPoints [2] = pnt1;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following statement contains a magic number: arrPoints [3] = pnt4;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,CalculateCenter,The following statement contains a magic number: pnt1.X = rect.X + (rect.Width - sz.Width) / 2;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,CalculateCenter,The following statement contains a magic number: pnt1.Y = rect.Y + (rect.Height - sz.Height) / 2;  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,DrawArrowGlyph,The following statement contains a magic number: DrawArrowGlyph (g' rc' 5' 3' up' brush);  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,DrawArrowGlyph,The following statement contains a magic number: DrawArrowGlyph (g' rc' 5' 3' up' brush);  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,DrawArrowGlyph,The following statement contains a magic number: if (up) {  	pts [0] = new Point (xMiddle' yMiddle - 2);  	pts [1] = new Point (xArrowWidthL - 1' yArrowHeight - 1);  	pts [2] = new Point (xArrowWidthR + 1' yArrowHeight - 1);  }  else {  	pts [0] = new Point (xArrowWidthL' yMiddle);  	pts [1] = new Point (xArrowWidthR + 1' yMiddle);  	pts [2] = new Point (xMiddle' yArrowHeight);  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,DrawArrowGlyph,The following statement contains a magic number: if (up) {  	pts [0] = new Point (xMiddle' yMiddle - 2);  	pts [1] = new Point (xArrowWidthL - 1' yArrowHeight - 1);  	pts [2] = new Point (xArrowWidthR + 1' yArrowHeight - 1);  }  else {  	pts [0] = new Point (xArrowWidthL' yMiddle);  	pts [1] = new Point (xArrowWidthR + 1' yMiddle);  	pts [2] = new Point (xMiddle' yArrowHeight);  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,DrawArrowGlyph,The following statement contains a magic number: if (up) {  	pts [0] = new Point (xMiddle' yMiddle - 2);  	pts [1] = new Point (xArrowWidthL - 1' yArrowHeight - 1);  	pts [2] = new Point (xArrowWidthR + 1' yArrowHeight - 1);  }  else {  	pts [0] = new Point (xArrowWidthL' yMiddle);  	pts [1] = new Point (xArrowWidthR + 1' yMiddle);  	pts [2] = new Point (xMiddle' yArrowHeight);  }  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,DrawArrowGlyph,The following statement contains a magic number: pts [0] = new Point (xMiddle' yMiddle - 2);  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,DrawArrowGlyph,The following statement contains a magic number: pts [2] = new Point (xArrowWidthR + 1' yArrowHeight - 1);  
Magic Number,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,DrawArrowGlyph,The following statement contains a magic number: pts [2] = new Point (xMiddle' yArrowHeight);  
Magic Number,Mder.FC.GDI,ImageUtil,C:\repos\neo2018_ZYFC\MderFc\GDI\ImageUtil.cs,SaveImage,The following statement contains a magic number: parameters.Param [0] = new EncoderParameter (System.Drawing.Imaging.Encoder.Quality' ((long)90));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,FTPClient,The following statement contains a magic number: strRemotePort = 21;  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Connect,The following statement contains a magic number: if (iReplyCode != 220) {  	DisConnect ();  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Connect,The following statement contains a magic number: if (iReplyCode != 220) {  	DisConnect ();  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Connect,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Connect,The following statement contains a magic number: if (!(iReplyCode == 331 || iReplyCode == 230)) {  	CloseSocketConnect ();  	//关闭连接  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Connect,The following statement contains a magic number: if (!(iReplyCode == 331 || iReplyCode == 230)) {  	CloseSocketConnect ();  	//关闭连接  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Connect,The following statement contains a magic number: if (!(iReplyCode == 331 || iReplyCode == 230)) {  	CloseSocketConnect ();  	//关闭连接  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Connect,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Connect,The following statement contains a magic number: if (iReplyCode != 230) {  	SendCommand ("PASS " + strRemotePass);  	if (!(iReplyCode == 230 || iReplyCode == 202)) {  		CloseSocketConnect ();  		//关闭连接  		throw new IOException (strReply.Substring (4));  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Connect,The following statement contains a magic number: if (iReplyCode != 230) {  	SendCommand ("PASS " + strRemotePass);  	if (!(iReplyCode == 230 || iReplyCode == 202)) {  		CloseSocketConnect ();  		//关闭连接  		throw new IOException (strReply.Substring (4));  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Connect,The following statement contains a magic number: if (iReplyCode != 230) {  	SendCommand ("PASS " + strRemotePass);  	if (!(iReplyCode == 230 || iReplyCode == 202)) {  		CloseSocketConnect ();  		//关闭连接  		throw new IOException (strReply.Substring (4));  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Connect,The following statement contains a magic number: if (iReplyCode != 230) {  	SendCommand ("PASS " + strRemotePass);  	if (!(iReplyCode == 230 || iReplyCode == 202)) {  		CloseSocketConnect ();  		//关闭连接  		throw new IOException (strReply.Substring (4));  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Connect,The following statement contains a magic number: if (!(iReplyCode == 230 || iReplyCode == 202)) {  	CloseSocketConnect ();  	//关闭连接  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Connect,The following statement contains a magic number: if (!(iReplyCode == 230 || iReplyCode == 202)) {  	CloseSocketConnect ();  	//关闭连接  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Connect,The following statement contains a magic number: if (!(iReplyCode == 230 || iReplyCode == 202)) {  	CloseSocketConnect ();  	//关闭连接  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Connect,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,SetTransferType,The following statement contains a magic number: if (iReplyCode != 200) {  	throw new IOException (strReply.Substring (4));  }  else {  	trType = ttType;  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,SetTransferType,The following statement contains a magic number: if (iReplyCode != 200) {  	throw new IOException (strReply.Substring (4));  }  else {  	trType = ttType;  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,SetTransferType,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Dir,The following statement contains a magic number: if (!(iReplyCode == 150 || iReplyCode == 125 || iReplyCode == 226)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Dir,The following statement contains a magic number: if (!(iReplyCode == 150 || iReplyCode == 125 || iReplyCode == 226)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Dir,The following statement contains a magic number: if (!(iReplyCode == 150 || iReplyCode == 125 || iReplyCode == 226)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Dir,The following statement contains a magic number: if (!(iReplyCode == 150 || iReplyCode == 125 || iReplyCode == 226)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Dir,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Dir,The following statement contains a magic number: if (iReplyCode != 226) {  	ReadReply ();  	if (iReplyCode != 226) {  		throw new IOException (strReply.Substring (4));  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Dir,The following statement contains a magic number: if (iReplyCode != 226) {  	ReadReply ();  	if (iReplyCode != 226) {  		throw new IOException (strReply.Substring (4));  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Dir,The following statement contains a magic number: if (iReplyCode != 226) {  	ReadReply ();  	if (iReplyCode != 226) {  		throw new IOException (strReply.Substring (4));  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Dir,The following statement contains a magic number: if (iReplyCode != 226) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Dir,The following statement contains a magic number: if (iReplyCode != 226) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Dir,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,GetFileSize,The following statement contains a magic number: if (iReplyCode == 213) {  	lSize = Int64.Parse (strReply.Substring (4));  }  else {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,GetFileSize,The following statement contains a magic number: if (iReplyCode == 213) {  	lSize = Int64.Parse (strReply.Substring (4));  }  else {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,GetFileSize,The following statement contains a magic number: if (iReplyCode == 213) {  	lSize = Int64.Parse (strReply.Substring (4));  }  else {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,GetFileSize,The following statement contains a magic number: lSize = Int64.Parse (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,GetFileSize,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Delete,The following statement contains a magic number: if (iReplyCode != 250) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Delete,The following statement contains a magic number: if (iReplyCode != 250) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Delete,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Rename,The following statement contains a magic number: if (iReplyCode != 350) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Rename,The following statement contains a magic number: if (iReplyCode != 350) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Rename,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Rename,The following statement contains a magic number: if (iReplyCode != 250) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Rename,The following statement contains a magic number: if (iReplyCode != 250) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Rename,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Get,The following statement contains a magic number: if (!(iReplyCode == 150 || iReplyCode == 125 || iReplyCode == 226 || iReplyCode == 250)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Get,The following statement contains a magic number: if (!(iReplyCode == 150 || iReplyCode == 125 || iReplyCode == 226 || iReplyCode == 250)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Get,The following statement contains a magic number: if (!(iReplyCode == 150 || iReplyCode == 125 || iReplyCode == 226 || iReplyCode == 250)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Get,The following statement contains a magic number: if (!(iReplyCode == 150 || iReplyCode == 125 || iReplyCode == 226 || iReplyCode == 250)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Get,The following statement contains a magic number: if (!(iReplyCode == 150 || iReplyCode == 125 || iReplyCode == 226 || iReplyCode == 250)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Get,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Get,The following statement contains a magic number: if (!(iReplyCode == 226 || iReplyCode == 250)) {  	ReadReply ();  	if (!(iReplyCode == 226 || iReplyCode == 250)) {  		throw new IOException (strReply.Substring (4));  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Get,The following statement contains a magic number: if (!(iReplyCode == 226 || iReplyCode == 250)) {  	ReadReply ();  	if (!(iReplyCode == 226 || iReplyCode == 250)) {  		throw new IOException (strReply.Substring (4));  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Get,The following statement contains a magic number: if (!(iReplyCode == 226 || iReplyCode == 250)) {  	ReadReply ();  	if (!(iReplyCode == 226 || iReplyCode == 250)) {  		throw new IOException (strReply.Substring (4));  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Get,The following statement contains a magic number: if (!(iReplyCode == 226 || iReplyCode == 250)) {  	ReadReply ();  	if (!(iReplyCode == 226 || iReplyCode == 250)) {  		throw new IOException (strReply.Substring (4));  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Get,The following statement contains a magic number: if (!(iReplyCode == 226 || iReplyCode == 250)) {  	ReadReply ();  	if (!(iReplyCode == 226 || iReplyCode == 250)) {  		throw new IOException (strReply.Substring (4));  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Get,The following statement contains a magic number: if (!(iReplyCode == 226 || iReplyCode == 250)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Get,The following statement contains a magic number: if (!(iReplyCode == 226 || iReplyCode == 250)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Get,The following statement contains a magic number: if (!(iReplyCode == 226 || iReplyCode == 250)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Get,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Put,The following statement contains a magic number: if (!(iReplyCode == 125 || iReplyCode == 150)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Put,The following statement contains a magic number: if (!(iReplyCode == 125 || iReplyCode == 150)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Put,The following statement contains a magic number: if (!(iReplyCode == 125 || iReplyCode == 150)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Put,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Put,The following statement contains a magic number: if (!(iReplyCode == 226 || iReplyCode == 250)) {  	ReadReply ();  	if (!(iReplyCode == 226 || iReplyCode == 250)) {  		throw new IOException (strReply.Substring (4));  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Put,The following statement contains a magic number: if (!(iReplyCode == 226 || iReplyCode == 250)) {  	ReadReply ();  	if (!(iReplyCode == 226 || iReplyCode == 250)) {  		throw new IOException (strReply.Substring (4));  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Put,The following statement contains a magic number: if (!(iReplyCode == 226 || iReplyCode == 250)) {  	ReadReply ();  	if (!(iReplyCode == 226 || iReplyCode == 250)) {  		throw new IOException (strReply.Substring (4));  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Put,The following statement contains a magic number: if (!(iReplyCode == 226 || iReplyCode == 250)) {  	ReadReply ();  	if (!(iReplyCode == 226 || iReplyCode == 250)) {  		throw new IOException (strReply.Substring (4));  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Put,The following statement contains a magic number: if (!(iReplyCode == 226 || iReplyCode == 250)) {  	ReadReply ();  	if (!(iReplyCode == 226 || iReplyCode == 250)) {  		throw new IOException (strReply.Substring (4));  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Put,The following statement contains a magic number: if (!(iReplyCode == 226 || iReplyCode == 250)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Put,The following statement contains a magic number: if (!(iReplyCode == 226 || iReplyCode == 250)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Put,The following statement contains a magic number: if (!(iReplyCode == 226 || iReplyCode == 250)) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,Put,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,MkDir,The following statement contains a magic number: if (iReplyCode != 257) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,MkDir,The following statement contains a magic number: if (iReplyCode != 257) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,MkDir,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,RmDir,The following statement contains a magic number: if (iReplyCode != 250) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,RmDir,The following statement contains a magic number: if (iReplyCode != 250) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,RmDir,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,ChDir,The following statement contains a magic number: if (iReplyCode != 250) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,ChDir,The following statement contains a magic number: if (iReplyCode != 250) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,ChDir,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,ReadReply,The following statement contains a magic number: iReplyCode = Int32.Parse (strReply.Substring (0' 3));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,CreateDataSocket,The following statement contains a magic number: if (iReplyCode != 227) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,CreateDataSocket,The following statement contains a magic number: if (iReplyCode != 227) {  	throw new IOException (strReply.Substring (4));  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,CreateDataSocket,The following statement contains a magic number: throw new IOException (strReply.Substring (4));  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,CreateDataSocket,The following statement contains a magic number: for (int i = 0; i < len && partCount <= 6; i++) {  	char ch = Char.Parse (ipData.Substring (i' 1));  	if (Char.IsDigit (ch))  		buf += ch;  	else if (ch != ''') {  		throw new IOException ("Malformed PASV strReply: " + strReply);  	}  	if (ch == ''' || i + 1 == len) {  		try {  			parts [partCount++] = Int32.Parse (buf);  			buf = "";  		}  		catch (Exception) {  			throw new IOException ("Malformed PASV strReply: " + strReply);  		}  	}  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,ReadLine,The following statement contains a magic number: if (strMsg.Length > 2) {  	strMsg = mess [mess.Length - 2];  	//seperator[0]是10'换行符是由13和0组成的'分隔后10后面虽没有字符串'  	//但也会分配为空字符串给后面(也是最后一个)字符串数组'  	//所以最后一个mess是没用的空字符串  	//但为什么不直接取mess[0]'因为只有最后一行字符串应答码与信息之间有空格  }  else {  	strMsg = mess [0];  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,ReadLine,The following statement contains a magic number: if (strMsg.Length > 2) {  	strMsg = mess [mess.Length - 2];  	//seperator[0]是10'换行符是由13和0组成的'分隔后10后面虽没有字符串'  	//但也会分配为空字符串给后面(也是最后一个)字符串数组'  	//所以最后一个mess是没用的空字符串  	//但为什么不直接取mess[0]'因为只有最后一行字符串应答码与信息之间有空格  }  else {  	strMsg = mess [0];  }  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,ReadLine,The following statement contains a magic number: strMsg = mess [mess.Length - 2];  
Magic Number,Mder.FC.Net.Ftp,FTPClient,C:\repos\neo2018_ZYFC\MderFc\Net\Ftp\FTPClient.cs,ReadLine,The following statement contains a magic number: if (!strMsg.Substring (3' 1).Equals (" "))//返回字符串正确的是以应答码(如220开头'后面接一空格'再接问候字符串)   {  	return ReadLine ();  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: try {  	hwrq = (HttpWebRequest)WebRequest.Create (this.GetUri (Address));  	hwrp = (HttpWebResponse)hwrq.GetResponse ();  	long L = hwrp.ContentLength;  	hwrq.Credentials = this.m_credentials;  	L = ((L == -1) || (L > 0x7fffffff)) ? ((long)0x7fffffff) : L;  	//Int32.MaxValue 该常数的值为 2'147'483'647; 即十六进制的 0x7FFFFFFF  	int l = (int)L;  	this._FileLength = l;  	//    在本地预定空间(竟然在多线程下不用先预定空间)  	//    FileStream sw = new FileStream(FileName' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite);  	//    sw.Write(new byte[l]' 0' l);  	//    sw.Close();  	//    sw = null;  	bool b = (hwrp.Headers ["Accept-Ranges"] != null & hwrp.Headers ["Accept-Ranges"] == "bytes");  	a = hwrp.Headers ["Content-Disposition"];  	//attachment  	if (a != null) {  		a = a.Substring (a.LastIndexOf ("filename=") + 9);  	}  	else {  		a = FileName;  	}  	int ss = s;  	if (b) {  		s = l / ChunksCount;  		if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节  		 {  			s = 2 * 64 * 1024;  		}  		ss = s;  		int i = 0;  		while (l > s) {  			l -= s;  			if (l < s) {  				s += l;  			}  			if (i++ > 0) {  				DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s' new ThreadCallbackHandler (this.DownloadFileChunk));  				//       单线程下载  				//       x.StartDownloadFileChunk();  				x.httpWebClient = this;  				//多线程下载  				Thread t = new Thread (new ThreadStart (x.StartDownloadFileChunk));  				//this.OnThreadProcess(t);  				t.Start ();  			}  			p += s;  		}  		s = ss;  		byte[] buffer = this.ResponseAsBytes (Address' hwrp' s' FileName);  		this.OnThreadProcess (Thread.CurrentThread);  		//    lock (_SyncLockObject)  		//    {  		//     this._Bytes += buffer.Length;  		//    }  	}  }  catch (Exception e) {  	ExceptionActions ea = ExceptionActions.Throw;  	if (this.ExceptionOccurrs != null) {  		DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s);  		ExceptionEventArgs eea = new ExceptionEventArgs (e' x);  		ExceptionOccurrs (this' eea);  		ea = eea.ExceptionAction;  	}  	if (ea == ExceptionActions.Throw) {  		if (!(e is WebException) && !(e is SecurityException)) {  			throw new WebException ("net_webclient"' e);  		}  		throw;  	}  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: try {  	hwrq = (HttpWebRequest)WebRequest.Create (this.GetUri (Address));  	hwrp = (HttpWebResponse)hwrq.GetResponse ();  	long L = hwrp.ContentLength;  	hwrq.Credentials = this.m_credentials;  	L = ((L == -1) || (L > 0x7fffffff)) ? ((long)0x7fffffff) : L;  	//Int32.MaxValue 该常数的值为 2'147'483'647; 即十六进制的 0x7FFFFFFF  	int l = (int)L;  	this._FileLength = l;  	//    在本地预定空间(竟然在多线程下不用先预定空间)  	//    FileStream sw = new FileStream(FileName' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite);  	//    sw.Write(new byte[l]' 0' l);  	//    sw.Close();  	//    sw = null;  	bool b = (hwrp.Headers ["Accept-Ranges"] != null & hwrp.Headers ["Accept-Ranges"] == "bytes");  	a = hwrp.Headers ["Content-Disposition"];  	//attachment  	if (a != null) {  		a = a.Substring (a.LastIndexOf ("filename=") + 9);  	}  	else {  		a = FileName;  	}  	int ss = s;  	if (b) {  		s = l / ChunksCount;  		if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节  		 {  			s = 2 * 64 * 1024;  		}  		ss = s;  		int i = 0;  		while (l > s) {  			l -= s;  			if (l < s) {  				s += l;  			}  			if (i++ > 0) {  				DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s' new ThreadCallbackHandler (this.DownloadFileChunk));  				//       单线程下载  				//       x.StartDownloadFileChunk();  				x.httpWebClient = this;  				//多线程下载  				Thread t = new Thread (new ThreadStart (x.StartDownloadFileChunk));  				//this.OnThreadProcess(t);  				t.Start ();  			}  			p += s;  		}  		s = ss;  		byte[] buffer = this.ResponseAsBytes (Address' hwrp' s' FileName);  		this.OnThreadProcess (Thread.CurrentThread);  		//    lock (_SyncLockObject)  		//    {  		//     this._Bytes += buffer.Length;  		//    }  	}  }  catch (Exception e) {  	ExceptionActions ea = ExceptionActions.Throw;  	if (this.ExceptionOccurrs != null) {  		DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s);  		ExceptionEventArgs eea = new ExceptionEventArgs (e' x);  		ExceptionOccurrs (this' eea);  		ea = eea.ExceptionAction;  	}  	if (ea == ExceptionActions.Throw) {  		if (!(e is WebException) && !(e is SecurityException)) {  			throw new WebException ("net_webclient"' e);  		}  		throw;  	}  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: try {  	hwrq = (HttpWebRequest)WebRequest.Create (this.GetUri (Address));  	hwrp = (HttpWebResponse)hwrq.GetResponse ();  	long L = hwrp.ContentLength;  	hwrq.Credentials = this.m_credentials;  	L = ((L == -1) || (L > 0x7fffffff)) ? ((long)0x7fffffff) : L;  	//Int32.MaxValue 该常数的值为 2'147'483'647; 即十六进制的 0x7FFFFFFF  	int l = (int)L;  	this._FileLength = l;  	//    在本地预定空间(竟然在多线程下不用先预定空间)  	//    FileStream sw = new FileStream(FileName' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite);  	//    sw.Write(new byte[l]' 0' l);  	//    sw.Close();  	//    sw = null;  	bool b = (hwrp.Headers ["Accept-Ranges"] != null & hwrp.Headers ["Accept-Ranges"] == "bytes");  	a = hwrp.Headers ["Content-Disposition"];  	//attachment  	if (a != null) {  		a = a.Substring (a.LastIndexOf ("filename=") + 9);  	}  	else {  		a = FileName;  	}  	int ss = s;  	if (b) {  		s = l / ChunksCount;  		if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节  		 {  			s = 2 * 64 * 1024;  		}  		ss = s;  		int i = 0;  		while (l > s) {  			l -= s;  			if (l < s) {  				s += l;  			}  			if (i++ > 0) {  				DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s' new ThreadCallbackHandler (this.DownloadFileChunk));  				//       单线程下载  				//       x.StartDownloadFileChunk();  				x.httpWebClient = this;  				//多线程下载  				Thread t = new Thread (new ThreadStart (x.StartDownloadFileChunk));  				//this.OnThreadProcess(t);  				t.Start ();  			}  			p += s;  		}  		s = ss;  		byte[] buffer = this.ResponseAsBytes (Address' hwrp' s' FileName);  		this.OnThreadProcess (Thread.CurrentThread);  		//    lock (_SyncLockObject)  		//    {  		//     this._Bytes += buffer.Length;  		//    }  	}  }  catch (Exception e) {  	ExceptionActions ea = ExceptionActions.Throw;  	if (this.ExceptionOccurrs != null) {  		DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s);  		ExceptionEventArgs eea = new ExceptionEventArgs (e' x);  		ExceptionOccurrs (this' eea);  		ea = eea.ExceptionAction;  	}  	if (ea == ExceptionActions.Throw) {  		if (!(e is WebException) && !(e is SecurityException)) {  			throw new WebException ("net_webclient"' e);  		}  		throw;  	}  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: try {  	hwrq = (HttpWebRequest)WebRequest.Create (this.GetUri (Address));  	hwrp = (HttpWebResponse)hwrq.GetResponse ();  	long L = hwrp.ContentLength;  	hwrq.Credentials = this.m_credentials;  	L = ((L == -1) || (L > 0x7fffffff)) ? ((long)0x7fffffff) : L;  	//Int32.MaxValue 该常数的值为 2'147'483'647; 即十六进制的 0x7FFFFFFF  	int l = (int)L;  	this._FileLength = l;  	//    在本地预定空间(竟然在多线程下不用先预定空间)  	//    FileStream sw = new FileStream(FileName' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite);  	//    sw.Write(new byte[l]' 0' l);  	//    sw.Close();  	//    sw = null;  	bool b = (hwrp.Headers ["Accept-Ranges"] != null & hwrp.Headers ["Accept-Ranges"] == "bytes");  	a = hwrp.Headers ["Content-Disposition"];  	//attachment  	if (a != null) {  		a = a.Substring (a.LastIndexOf ("filename=") + 9);  	}  	else {  		a = FileName;  	}  	int ss = s;  	if (b) {  		s = l / ChunksCount;  		if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节  		 {  			s = 2 * 64 * 1024;  		}  		ss = s;  		int i = 0;  		while (l > s) {  			l -= s;  			if (l < s) {  				s += l;  			}  			if (i++ > 0) {  				DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s' new ThreadCallbackHandler (this.DownloadFileChunk));  				//       单线程下载  				//       x.StartDownloadFileChunk();  				x.httpWebClient = this;  				//多线程下载  				Thread t = new Thread (new ThreadStart (x.StartDownloadFileChunk));  				//this.OnThreadProcess(t);  				t.Start ();  			}  			p += s;  		}  		s = ss;  		byte[] buffer = this.ResponseAsBytes (Address' hwrp' s' FileName);  		this.OnThreadProcess (Thread.CurrentThread);  		//    lock (_SyncLockObject)  		//    {  		//     this._Bytes += buffer.Length;  		//    }  	}  }  catch (Exception e) {  	ExceptionActions ea = ExceptionActions.Throw;  	if (this.ExceptionOccurrs != null) {  		DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s);  		ExceptionEventArgs eea = new ExceptionEventArgs (e' x);  		ExceptionOccurrs (this' eea);  		ea = eea.ExceptionAction;  	}  	if (ea == ExceptionActions.Throw) {  		if (!(e is WebException) && !(e is SecurityException)) {  			throw new WebException ("net_webclient"' e);  		}  		throw;  	}  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: try {  	hwrq = (HttpWebRequest)WebRequest.Create (this.GetUri (Address));  	hwrp = (HttpWebResponse)hwrq.GetResponse ();  	long L = hwrp.ContentLength;  	hwrq.Credentials = this.m_credentials;  	L = ((L == -1) || (L > 0x7fffffff)) ? ((long)0x7fffffff) : L;  	//Int32.MaxValue 该常数的值为 2'147'483'647; 即十六进制的 0x7FFFFFFF  	int l = (int)L;  	this._FileLength = l;  	//    在本地预定空间(竟然在多线程下不用先预定空间)  	//    FileStream sw = new FileStream(FileName' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite);  	//    sw.Write(new byte[l]' 0' l);  	//    sw.Close();  	//    sw = null;  	bool b = (hwrp.Headers ["Accept-Ranges"] != null & hwrp.Headers ["Accept-Ranges"] == "bytes");  	a = hwrp.Headers ["Content-Disposition"];  	//attachment  	if (a != null) {  		a = a.Substring (a.LastIndexOf ("filename=") + 9);  	}  	else {  		a = FileName;  	}  	int ss = s;  	if (b) {  		s = l / ChunksCount;  		if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节  		 {  			s = 2 * 64 * 1024;  		}  		ss = s;  		int i = 0;  		while (l > s) {  			l -= s;  			if (l < s) {  				s += l;  			}  			if (i++ > 0) {  				DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s' new ThreadCallbackHandler (this.DownloadFileChunk));  				//       单线程下载  				//       x.StartDownloadFileChunk();  				x.httpWebClient = this;  				//多线程下载  				Thread t = new Thread (new ThreadStart (x.StartDownloadFileChunk));  				//this.OnThreadProcess(t);  				t.Start ();  			}  			p += s;  		}  		s = ss;  		byte[] buffer = this.ResponseAsBytes (Address' hwrp' s' FileName);  		this.OnThreadProcess (Thread.CurrentThread);  		//    lock (_SyncLockObject)  		//    {  		//     this._Bytes += buffer.Length;  		//    }  	}  }  catch (Exception e) {  	ExceptionActions ea = ExceptionActions.Throw;  	if (this.ExceptionOccurrs != null) {  		DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s);  		ExceptionEventArgs eea = new ExceptionEventArgs (e' x);  		ExceptionOccurrs (this' eea);  		ea = eea.ExceptionAction;  	}  	if (ea == ExceptionActions.Throw) {  		if (!(e is WebException) && !(e is SecurityException)) {  			throw new WebException ("net_webclient"' e);  		}  		throw;  	}  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: try {  	hwrq = (HttpWebRequest)WebRequest.Create (this.GetUri (Address));  	hwrp = (HttpWebResponse)hwrq.GetResponse ();  	long L = hwrp.ContentLength;  	hwrq.Credentials = this.m_credentials;  	L = ((L == -1) || (L > 0x7fffffff)) ? ((long)0x7fffffff) : L;  	//Int32.MaxValue 该常数的值为 2'147'483'647; 即十六进制的 0x7FFFFFFF  	int l = (int)L;  	this._FileLength = l;  	//    在本地预定空间(竟然在多线程下不用先预定空间)  	//    FileStream sw = new FileStream(FileName' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite);  	//    sw.Write(new byte[l]' 0' l);  	//    sw.Close();  	//    sw = null;  	bool b = (hwrp.Headers ["Accept-Ranges"] != null & hwrp.Headers ["Accept-Ranges"] == "bytes");  	a = hwrp.Headers ["Content-Disposition"];  	//attachment  	if (a != null) {  		a = a.Substring (a.LastIndexOf ("filename=") + 9);  	}  	else {  		a = FileName;  	}  	int ss = s;  	if (b) {  		s = l / ChunksCount;  		if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节  		 {  			s = 2 * 64 * 1024;  		}  		ss = s;  		int i = 0;  		while (l > s) {  			l -= s;  			if (l < s) {  				s += l;  			}  			if (i++ > 0) {  				DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s' new ThreadCallbackHandler (this.DownloadFileChunk));  				//       单线程下载  				//       x.StartDownloadFileChunk();  				x.httpWebClient = this;  				//多线程下载  				Thread t = new Thread (new ThreadStart (x.StartDownloadFileChunk));  				//this.OnThreadProcess(t);  				t.Start ();  			}  			p += s;  		}  		s = ss;  		byte[] buffer = this.ResponseAsBytes (Address' hwrp' s' FileName);  		this.OnThreadProcess (Thread.CurrentThread);  		//    lock (_SyncLockObject)  		//    {  		//     this._Bytes += buffer.Length;  		//    }  	}  }  catch (Exception e) {  	ExceptionActions ea = ExceptionActions.Throw;  	if (this.ExceptionOccurrs != null) {  		DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s);  		ExceptionEventArgs eea = new ExceptionEventArgs (e' x);  		ExceptionOccurrs (this' eea);  		ea = eea.ExceptionAction;  	}  	if (ea == ExceptionActions.Throw) {  		if (!(e is WebException) && !(e is SecurityException)) {  			throw new WebException ("net_webclient"' e);  		}  		throw;  	}  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: try {  	hwrq = (HttpWebRequest)WebRequest.Create (this.GetUri (Address));  	hwrp = (HttpWebResponse)hwrq.GetResponse ();  	long L = hwrp.ContentLength;  	hwrq.Credentials = this.m_credentials;  	L = ((L == -1) || (L > 0x7fffffff)) ? ((long)0x7fffffff) : L;  	//Int32.MaxValue 该常数的值为 2'147'483'647; 即十六进制的 0x7FFFFFFF  	int l = (int)L;  	this._FileLength = l;  	//    在本地预定空间(竟然在多线程下不用先预定空间)  	//    FileStream sw = new FileStream(FileName' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite);  	//    sw.Write(new byte[l]' 0' l);  	//    sw.Close();  	//    sw = null;  	bool b = (hwrp.Headers ["Accept-Ranges"] != null & hwrp.Headers ["Accept-Ranges"] == "bytes");  	a = hwrp.Headers ["Content-Disposition"];  	//attachment  	if (a != null) {  		a = a.Substring (a.LastIndexOf ("filename=") + 9);  	}  	else {  		a = FileName;  	}  	int ss = s;  	if (b) {  		s = l / ChunksCount;  		if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节  		 {  			s = 2 * 64 * 1024;  		}  		ss = s;  		int i = 0;  		while (l > s) {  			l -= s;  			if (l < s) {  				s += l;  			}  			if (i++ > 0) {  				DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s' new ThreadCallbackHandler (this.DownloadFileChunk));  				//       单线程下载  				//       x.StartDownloadFileChunk();  				x.httpWebClient = this;  				//多线程下载  				Thread t = new Thread (new ThreadStart (x.StartDownloadFileChunk));  				//this.OnThreadProcess(t);  				t.Start ();  			}  			p += s;  		}  		s = ss;  		byte[] buffer = this.ResponseAsBytes (Address' hwrp' s' FileName);  		this.OnThreadProcess (Thread.CurrentThread);  		//    lock (_SyncLockObject)  		//    {  		//     this._Bytes += buffer.Length;  		//    }  	}  }  catch (Exception e) {  	ExceptionActions ea = ExceptionActions.Throw;  	if (this.ExceptionOccurrs != null) {  		DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s);  		ExceptionEventArgs eea = new ExceptionEventArgs (e' x);  		ExceptionOccurrs (this' eea);  		ea = eea.ExceptionAction;  	}  	if (ea == ExceptionActions.Throw) {  		if (!(e is WebException) && !(e is SecurityException)) {  			throw new WebException ("net_webclient"' e);  		}  		throw;  	}  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: if (a != null) {  	a = a.Substring (a.LastIndexOf ("filename=") + 9);  }  else {  	a = FileName;  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: a = a.Substring (a.LastIndexOf ("filename=") + 9);  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: if (b) {  	s = l / ChunksCount;  	if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节  	 {  		s = 2 * 64 * 1024;  	}  	ss = s;  	int i = 0;  	while (l > s) {  		l -= s;  		if (l < s) {  			s += l;  		}  		if (i++ > 0) {  			DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s' new ThreadCallbackHandler (this.DownloadFileChunk));  			//       单线程下载  			//       x.StartDownloadFileChunk();  			x.httpWebClient = this;  			//多线程下载  			Thread t = new Thread (new ThreadStart (x.StartDownloadFileChunk));  			//this.OnThreadProcess(t);  			t.Start ();  		}  		p += s;  	}  	s = ss;  	byte[] buffer = this.ResponseAsBytes (Address' hwrp' s' FileName);  	this.OnThreadProcess (Thread.CurrentThread);  	//    lock (_SyncLockObject)  	//    {  	//     this._Bytes += buffer.Length;  	//    }  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: if (b) {  	s = l / ChunksCount;  	if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节  	 {  		s = 2 * 64 * 1024;  	}  	ss = s;  	int i = 0;  	while (l > s) {  		l -= s;  		if (l < s) {  			s += l;  		}  		if (i++ > 0) {  			DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s' new ThreadCallbackHandler (this.DownloadFileChunk));  			//       单线程下载  			//       x.StartDownloadFileChunk();  			x.httpWebClient = this;  			//多线程下载  			Thread t = new Thread (new ThreadStart (x.StartDownloadFileChunk));  			//this.OnThreadProcess(t);  			t.Start ();  		}  		p += s;  	}  	s = ss;  	byte[] buffer = this.ResponseAsBytes (Address' hwrp' s' FileName);  	this.OnThreadProcess (Thread.CurrentThread);  	//    lock (_SyncLockObject)  	//    {  	//     this._Bytes += buffer.Length;  	//    }  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: if (b) {  	s = l / ChunksCount;  	if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节  	 {  		s = 2 * 64 * 1024;  	}  	ss = s;  	int i = 0;  	while (l > s) {  		l -= s;  		if (l < s) {  			s += l;  		}  		if (i++ > 0) {  			DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s' new ThreadCallbackHandler (this.DownloadFileChunk));  			//       单线程下载  			//       x.StartDownloadFileChunk();  			x.httpWebClient = this;  			//多线程下载  			Thread t = new Thread (new ThreadStart (x.StartDownloadFileChunk));  			//this.OnThreadProcess(t);  			t.Start ();  		}  		p += s;  	}  	s = ss;  	byte[] buffer = this.ResponseAsBytes (Address' hwrp' s' FileName);  	this.OnThreadProcess (Thread.CurrentThread);  	//    lock (_SyncLockObject)  	//    {  	//     this._Bytes += buffer.Length;  	//    }  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: if (b) {  	s = l / ChunksCount;  	if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节  	 {  		s = 2 * 64 * 1024;  	}  	ss = s;  	int i = 0;  	while (l > s) {  		l -= s;  		if (l < s) {  			s += l;  		}  		if (i++ > 0) {  			DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s' new ThreadCallbackHandler (this.DownloadFileChunk));  			//       单线程下载  			//       x.StartDownloadFileChunk();  			x.httpWebClient = this;  			//多线程下载  			Thread t = new Thread (new ThreadStart (x.StartDownloadFileChunk));  			//this.OnThreadProcess(t);  			t.Start ();  		}  		p += s;  	}  	s = ss;  	byte[] buffer = this.ResponseAsBytes (Address' hwrp' s' FileName);  	this.OnThreadProcess (Thread.CurrentThread);  	//    lock (_SyncLockObject)  	//    {  	//     this._Bytes += buffer.Length;  	//    }  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: if (b) {  	s = l / ChunksCount;  	if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节  	 {  		s = 2 * 64 * 1024;  	}  	ss = s;  	int i = 0;  	while (l > s) {  		l -= s;  		if (l < s) {  			s += l;  		}  		if (i++ > 0) {  			DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s' new ThreadCallbackHandler (this.DownloadFileChunk));  			//       单线程下载  			//       x.StartDownloadFileChunk();  			x.httpWebClient = this;  			//多线程下载  			Thread t = new Thread (new ThreadStart (x.StartDownloadFileChunk));  			//this.OnThreadProcess(t);  			t.Start ();  		}  		p += s;  	}  	s = ss;  	byte[] buffer = this.ResponseAsBytes (Address' hwrp' s' FileName);  	this.OnThreadProcess (Thread.CurrentThread);  	//    lock (_SyncLockObject)  	//    {  	//     this._Bytes += buffer.Length;  	//    }  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: if (b) {  	s = l / ChunksCount;  	if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节  	 {  		s = 2 * 64 * 1024;  	}  	ss = s;  	int i = 0;  	while (l > s) {  		l -= s;  		if (l < s) {  			s += l;  		}  		if (i++ > 0) {  			DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' p' s' new ThreadCallbackHandler (this.DownloadFileChunk));  			//       单线程下载  			//       x.StartDownloadFileChunk();  			x.httpWebClient = this;  			//多线程下载  			Thread t = new Thread (new ThreadStart (x.StartDownloadFileChunk));  			//this.OnThreadProcess(t);  			t.Start ();  		}  		p += s;  	}  	s = ss;  	byte[] buffer = this.ResponseAsBytes (Address' hwrp' s' FileName);  	this.OnThreadProcess (Thread.CurrentThread);  	//    lock (_SyncLockObject)  	//    {  	//     this._Bytes += buffer.Length;  	//    }  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节   {  	s = 2 * 64 * 1024;  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节   {  	s = 2 * 64 * 1024;  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节   {  	s = 2 * 64 * 1024;  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节   {  	s = 2 * 64 * 1024;  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节   {  	s = 2 * 64 * 1024;  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: if (s < 2 * 64 * 1024)//块大小至少为 128 K 字节   {  	s = 2 * 64 * 1024;  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: s = 2 * 64 * 1024;  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: s = 2 * 64 * 1024;  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFile,The following statement contains a magic number: s = 2 * 64 * 1024;  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFileChunk,The following statement contains a magic number: try {  	//this._FileName = FileName;  	HttpWebRequest hwrq = (HttpWebRequest)WebRequest.Create (this.GetUri (Address));  	//hwrq.Credentials = this.m_credentials;  	hwrq.AddRange (FromPosition);  	hwrp = (HttpWebResponse)hwrq.GetResponse ();  	a = hwrp.Headers ["Content-Disposition"];  	//attachment  	if (a != null) {  		a = a.Substring (a.LastIndexOf ("filename=") + 9);  	}  	else {  		a = FileName;  	}  	byte[] buffer = this.ResponseAsBytes (Address' hwrp' Length' FileName);  	//   lock (_SyncLockObject)  	//   {  	//    this._Bytes += buffer.Length;  	//   }  }  catch (Exception e) {  	ExceptionActions ea = ExceptionActions.Throw;  	if (this.ExceptionOccurrs != null) {  		DownLoadState x = new DownLoadState (Address' hwrp.ResponseUri.AbsolutePath' FileName' a' FromPosition' Length);  		ExceptionEventArgs eea = new ExceptionEventArgs (e' x);  		ExceptionOccurrs (this' eea);  		ea = eea.ExceptionAction;  	}  	if (ea == ExceptionActions.Throw) {  		if (!(e is WebException) && !(e is SecurityException)) {  			throw new WebException ("net_webclient"' e);  		}  		throw;  	}  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFileChunk,The following statement contains a magic number: if (a != null) {  	a = a.Substring (a.LastIndexOf ("filename=") + 9);  }  else {  	a = FileName;  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,DownloadFileChunk,The following statement contains a magic number: a = a.Substring (a.LastIndexOf ("filename=") + 9);  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,ResponseAsBytes,The following statement contains a magic number: try {  	a = Response.Headers ["Content-Disposition"];  	//attachment  	if (a != null) {  		a = a.Substring (a.LastIndexOf ("filename=") + 9);  	}  	long num1 = Length;  	//Response.ContentLength;  	bool flag1 = false;  	if (num1 == -1) {  		flag1 = true;  		num1 = 0x10000;  		//64k  	}  	byte[] buffer1 = new byte[(int)num1];  	int p = 0;  	//本块的位置指针  	string s = Response.Headers ["Content-Range"];  	if (s != null) {  		s = s.Replace ("bytes "' "");  		s = s.Substring (0' s.IndexOf ("-"));  		P = Convert.ToInt32 (s);  	}  	int num3 = 0;  	Stream S = Response.GetResponseStream ();  	do {  		num2 = S.Read (buffer1' num3' ((int)num1) - num3);  		num3 += num2;  		if (flag1 && (num3 == num1)) {  			num1 += 0x10000;  			byte[] buffer2 = new byte[(int)num1];  			Buffer.BlockCopy (buffer1' 0' buffer2' 0' num3);  			buffer1 = buffer2;  		}  		//    lock (_SyncLockObject)  		//    {  		//     this._bytes += num2;  		//    }  		if (num2 > 0) {  			if (this.DataReceive != null) {  				byte[] buffer = new byte[num2];  				Buffer.BlockCopy (buffer1' p' buffer' 0' buffer.Length);  				DownLoadState dls = new DownLoadState (RequestURL' Response.ResponseUri.AbsolutePath' FileName' a' P' num2' buffer);  				DownLoadEventArgs dlea = new DownLoadEventArgs (dls);  				//触发事件  				this.OnDataReceive (dlea);  				//System.Threading.Thread.Sleep(100);  			}  			p += num2;  			//本块的位置指针  			P += num2;  			//整个文件的位置指针  		}  		else {  			break;  		}  	}  	while (num2 != 0);  	S.Close ();  	S = null;  	if (flag1) {  		byte[] buffer3 = new byte[num3];  		Buffer.BlockCopy (buffer1' 0' buffer3' 0' num3);  		buffer1 = buffer3;  	}  	return buffer1;  }  catch (Exception e) {  	ExceptionActions ea = ExceptionActions.Throw;  	if (this.ExceptionOccurrs != null) {  		DownLoadState x = new DownLoadState (RequestURL' Response.ResponseUri.AbsolutePath' FileName' a' P' num2);  		ExceptionEventArgs eea = new ExceptionEventArgs (e' x);  		ExceptionOccurrs (this' eea);  		ea = eea.ExceptionAction;  	}  	if (ea == ExceptionActions.Throw) {  		if (!(e is WebException) && !(e is SecurityException)) {  			throw new WebException ("net_webclient"' e);  		}  		throw;  	}  	return null;  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,ResponseAsBytes,The following statement contains a magic number: if (a != null) {  	a = a.Substring (a.LastIndexOf ("filename=") + 9);  }  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,ResponseAsBytes,The following statement contains a magic number: a = a.Substring (a.LastIndexOf ("filename=") + 9);  
Magic Number,Mder.FC.Net.Http,HttpWebClient,C:\repos\neo2018_ZYFC\MderFc\Net\Http\HttpWebClient.cs,UploadFile,The following statement contains a magic number: try {  	fileName = Path.GetFullPath (fileName);  	string text1 = "---------------------" + DateTime.Now.Ticks.ToString ("x");  	string text2 = "application/octet-stream";  	stream1 = new FileStream (fileName' FileMode.Open' FileAccess.Read);  	WebRequest request1 = WebRequest.Create (this.GetUri (address));  	request1.Credentials = this.m_credentials;  	request1.ContentType = "multipart/form-data; boundary=" + text1;  	request1.Method = method;  	string[] textArray1 = new string[7] {  		"--"'  		text1'  		"\r\nContent-Disposition: form-data; name=\"" + fieldName + "\"; filename=\""'  		Path.GetFileName (fileName)'  		"\"\r\nContent-Type: "'  		text2'  		"\r\n\r\n"  	};  	string text3 = string.Concat (textArray1);  	byte[] buffer1 = Encoding.UTF8.GetBytes (text3);  	byte[] buffer2 = Encoding.ASCII.GetBytes ("\r\n--" + text1 + "\r\n");  	long num1 = 0x7fffffffffffffff;  	try {  		num1 = stream1.Length;  		request1.ContentLength = (num1 + buffer1.Length) + buffer2.Length;  	}  	catch {  	}  	byte[] buffer3 = new byte[Math.Min (0x2000' (int)num1)];  	using (Stream stream2 = request1.GetRequestStream ()) {  		int num2;  		stream2.Write (buffer1' 0' buffer1.Length);  		do {  			num2 = stream1.Read (buffer3' 0' buffer3.Length);  			if (num2 != 0) {  				stream2.Write (buffer3' 0' num2);  			}  		}  		while (num2 != 0);  		stream2.Write (buffer2' 0' buffer2.Length);  	}  	stream1.Close ();  	stream1 = null;  	WebResponse response1 = request1.GetResponse ();  	buffer4 = this.ResponseAsBytes (response1);  }  catch (Exception exception1) {  	if (stream1 != null) {  		stream1.Close ();  		stream1 = null;  	}  	if (!(exception1 is WebException) && !(exception1 is SecurityException)) {  		//throw new WebException(SR.GetString("net_webclient")' exception1);  		throw new WebException ("net_webclient"' exception1);  	}  	throw;  }  
Magic Number,Mder.FC.Pattern.Struct,Composite,C:\repos\neo2018_ZYFC\MderFc\Pattern\Struct\Composite.cs,Display,The following statement contains a magic number: foreach (Component2 cpt in chilren) {  	cpt.Display (depth + 2);  }  
Magic Number,Mder.FC.Pattern.Struct,Composite,C:\repos\neo2018_ZYFC\MderFc\Pattern\Struct\Composite.cs,Display,The following statement contains a magic number: cpt.Display (depth + 2);  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,GetPrinterStatusInt,The following statement contains a magic number: if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  	int cbNeeded = 0;  	bool bolRet = GetPrinter (hPrinter' 2' IntPtr.Zero' 0' out cbNeeded);  	if (cbNeeded > 0) {  		IntPtr pAddr = Marshal.AllocHGlobal ((int)cbNeeded);  		bolRet = GetPrinter (hPrinter' 2' pAddr' cbNeeded' out cbNeeded);  		if (bolRet) {  			PRINTER_INFO_2 Info2 = new PRINTER_INFO_2 ();  			Info2 = (PRINTER_INFO_2)Marshal.PtrToStructure (pAddr' typeof(PRINTER_INFO_2));  			intRet = System.Convert.ToInt32 (Info2.Status);  		}  		Marshal.FreeHGlobal (pAddr);  	}  	ClosePrinter (hPrinter);  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,GetPrinterStatusInt,The following statement contains a magic number: if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  	int cbNeeded = 0;  	bool bolRet = GetPrinter (hPrinter' 2' IntPtr.Zero' 0' out cbNeeded);  	if (cbNeeded > 0) {  		IntPtr pAddr = Marshal.AllocHGlobal ((int)cbNeeded);  		bolRet = GetPrinter (hPrinter' 2' pAddr' cbNeeded' out cbNeeded);  		if (bolRet) {  			PRINTER_INFO_2 Info2 = new PRINTER_INFO_2 ();  			Info2 = (PRINTER_INFO_2)Marshal.PtrToStructure (pAddr' typeof(PRINTER_INFO_2));  			intRet = System.Convert.ToInt32 (Info2.Status);  		}  		Marshal.FreeHGlobal (pAddr);  	}  	ClosePrinter (hPrinter);  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,GetPrinterStatusInt,The following statement contains a magic number: if (cbNeeded > 0) {  	IntPtr pAddr = Marshal.AllocHGlobal ((int)cbNeeded);  	bolRet = GetPrinter (hPrinter' 2' pAddr' cbNeeded' out cbNeeded);  	if (bolRet) {  		PRINTER_INFO_2 Info2 = new PRINTER_INFO_2 ();  		Info2 = (PRINTER_INFO_2)Marshal.PtrToStructure (pAddr' typeof(PRINTER_INFO_2));  		intRet = System.Convert.ToInt32 (Info2.Status);  	}  	Marshal.FreeHGlobal (pAddr);  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,GetPrinterStatusInt,The following statement contains a magic number: bolRet = GetPrinter (hPrinter' 2' pAddr' cbNeeded' out cbNeeded);  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: ret = EnumPrinters (PrinterEnumFlags.PRINTER_ENUM_LOCAL' null' 2' pAddr' cbNeeded' ref cbNeeded' ref cReturned);  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: if (ret) {  	PRINTER_INFO_2[] Info2 = new PRINTER_INFO_2[cReturned];  	int offset = pAddr.ToInt32 ();  	for (int i = 0; i < cReturned; i++) {  		Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  		offset += 4;  		Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  		offset += 4;  		Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  		Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  		offset += 4;  	}  	Marshal.FreeHGlobal (pAddr);  	return Info2;  }  else {  	return new PRINTER_INFO_2[0];  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: for (int i = 0; i < cReturned; i++) {  	Info2 [i].pServerName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrinterName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pShareName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPortName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDriverName = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pComment = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pLocation = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDevMode = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].pSepFile = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pPrintProcessor = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pDatatype = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pParameters = Marshal.PtrToStringAuto (Marshal.ReadIntPtr (new IntPtr (offset)));  	offset += 4;  	Info2 [i].pSecurityDescriptor = Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Attributes = (uint)Marshal.ReadIntPtr (new IntPtr (offset));  	offset += 4;  	Info2 [i].Priority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].DefaultPriority = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].StartTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].UntilTime = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].Status = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].cJobs = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  	Info2 [i].AveragePPM = (uint)Marshal.ReadInt32 (new IntPtr (offset));  	offset += 4;  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,EnumPrintersByFlag,The following statement contains a magic number: offset += 4;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (PlatformID.Win32NT == Environment.OSVersion.Platform) {  	const int PRINTER_ACCESS_USE = 0x00000008;  	const int PRINTER_ACCESS_ADMINISTER = 0x00000004;  	const int FORM_PRINTER = 0x00000002;  	structPrinterDefaults defaults = new structPrinterDefaults ();  	defaults.pDatatype = null;  	defaults.pDevMode = IntPtr.Zero;  	defaults.DesiredAccess = PRINTER_ACCESS_ADMINISTER | PRINTER_ACCESS_USE;  	IntPtr hPrinter = IntPtr.Zero;  	//打开打印机   	if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  		try {  			//如果Form存在删除之   			DeleteForm (hPrinter' PaperName);  			//创建并初始化FORM_INFO_1   			FormInfo1 formInfo = new FormInfo1 ();  			formInfo.Flags = 0;  			formInfo.pName = PaperName;  			formInfo.Size.width = (int)(WidthInMm * 1000.0);  			formInfo.Size.height = (int)(HeightInMm * 1000.0);  			formInfo.ImageableArea.left = 0;  			formInfo.ImageableArea.right = formInfo.Size.width;  			formInfo.ImageableArea.top = 0;  			formInfo.ImageableArea.bottom = formInfo.Size.height;  			if (!AddForm (hPrinter' 1' ref formInfo)) {  				StringBuilder strBuilder = new StringBuilder ();  				strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  				throw new ApplicationException (strBuilder.ToString ());  			}  			//初始化   			const int DM_OUT_BUFFER = 2;  			const int DM_IN_BUFFER = 8;  			structDevMode devMode = new structDevMode ();  			IntPtr hPrinterInfo' hDummy;  			PRINTER_INFO_9 printerInfo;  			printerInfo.pDevMode = IntPtr.Zero;  			int iPrinterInfoSize' iDummyInt;  			int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  			if (iDevModeSize < 0)  				throw new ApplicationException ("无法取得DEVMODE结构的大小！");  			//分配缓冲   			IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  			//获取DEV_MODE指针   			int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法获得DEVMODE结构！");  			//填充DEV_MODE   			devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  			devMode.dmFields = 0x10000;  			//FORM名称   			devMode.dmFormName = PaperName;  			Marshal.StructureToPtr (devMode' hDevMode' true);  			iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法为打印机设定打印方向！");  			GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  			if (iPrinterInfoSize == 0)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  			bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  			if (!bSuccess)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  			printerInfo.pDevMode = hDevMode;  			Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  			bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  			if (!bSuccess)  				throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  			SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  		}  		finally {  			ClosePrinter (hPrinter);  		}  	}  	else {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  }  else {  	structDevMode pDevMode = new structDevMode ();  	IntPtr hDC = CreateDC (null' PrinterName' null' ref pDevMode);  	if (hDC != IntPtr.Zero) {  		const long DM_PAPERSIZE = 0x00000002L;  		const long DM_PAPERLENGTH = 0x00000004L;  		const long DM_PAPERWIDTH = 0x00000008L;  		pDevMode.dmFields = (int)(DM_PAPERSIZE | DM_PAPERWIDTH | DM_PAPERLENGTH);  		pDevMode.dmPaperSize = 256;  		pDevMode.dmPaperWidth = (short)(WidthInMm * 1000.0);  		pDevMode.dmPaperLength = (short)(HeightInMm * 1000.0);  		ResetDC (hDC' ref pDevMode);  		DeleteDC (hDC);  	}  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (PlatformID.Win32NT == Environment.OSVersion.Platform) {  	const int PRINTER_ACCESS_USE = 0x00000008;  	const int PRINTER_ACCESS_ADMINISTER = 0x00000004;  	const int FORM_PRINTER = 0x00000002;  	structPrinterDefaults defaults = new structPrinterDefaults ();  	defaults.pDatatype = null;  	defaults.pDevMode = IntPtr.Zero;  	defaults.DesiredAccess = PRINTER_ACCESS_ADMINISTER | PRINTER_ACCESS_USE;  	IntPtr hPrinter = IntPtr.Zero;  	//打开打印机   	if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  		try {  			//如果Form存在删除之   			DeleteForm (hPrinter' PaperName);  			//创建并初始化FORM_INFO_1   			FormInfo1 formInfo = new FormInfo1 ();  			formInfo.Flags = 0;  			formInfo.pName = PaperName;  			formInfo.Size.width = (int)(WidthInMm * 1000.0);  			formInfo.Size.height = (int)(HeightInMm * 1000.0);  			formInfo.ImageableArea.left = 0;  			formInfo.ImageableArea.right = formInfo.Size.width;  			formInfo.ImageableArea.top = 0;  			formInfo.ImageableArea.bottom = formInfo.Size.height;  			if (!AddForm (hPrinter' 1' ref formInfo)) {  				StringBuilder strBuilder = new StringBuilder ();  				strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  				throw new ApplicationException (strBuilder.ToString ());  			}  			//初始化   			const int DM_OUT_BUFFER = 2;  			const int DM_IN_BUFFER = 8;  			structDevMode devMode = new structDevMode ();  			IntPtr hPrinterInfo' hDummy;  			PRINTER_INFO_9 printerInfo;  			printerInfo.pDevMode = IntPtr.Zero;  			int iPrinterInfoSize' iDummyInt;  			int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  			if (iDevModeSize < 0)  				throw new ApplicationException ("无法取得DEVMODE结构的大小！");  			//分配缓冲   			IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  			//获取DEV_MODE指针   			int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法获得DEVMODE结构！");  			//填充DEV_MODE   			devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  			devMode.dmFields = 0x10000;  			//FORM名称   			devMode.dmFormName = PaperName;  			Marshal.StructureToPtr (devMode' hDevMode' true);  			iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法为打印机设定打印方向！");  			GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  			if (iPrinterInfoSize == 0)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  			bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  			if (!bSuccess)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  			printerInfo.pDevMode = hDevMode;  			Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  			bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  			if (!bSuccess)  				throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  			SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  		}  		finally {  			ClosePrinter (hPrinter);  		}  	}  	else {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  }  else {  	structDevMode pDevMode = new structDevMode ();  	IntPtr hDC = CreateDC (null' PrinterName' null' ref pDevMode);  	if (hDC != IntPtr.Zero) {  		const long DM_PAPERSIZE = 0x00000002L;  		const long DM_PAPERLENGTH = 0x00000004L;  		const long DM_PAPERWIDTH = 0x00000008L;  		pDevMode.dmFields = (int)(DM_PAPERSIZE | DM_PAPERWIDTH | DM_PAPERLENGTH);  		pDevMode.dmPaperSize = 256;  		pDevMode.dmPaperWidth = (short)(WidthInMm * 1000.0);  		pDevMode.dmPaperLength = (short)(HeightInMm * 1000.0);  		ResetDC (hDC' ref pDevMode);  		DeleteDC (hDC);  	}  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (PlatformID.Win32NT == Environment.OSVersion.Platform) {  	const int PRINTER_ACCESS_USE = 0x00000008;  	const int PRINTER_ACCESS_ADMINISTER = 0x00000004;  	const int FORM_PRINTER = 0x00000002;  	structPrinterDefaults defaults = new structPrinterDefaults ();  	defaults.pDatatype = null;  	defaults.pDevMode = IntPtr.Zero;  	defaults.DesiredAccess = PRINTER_ACCESS_ADMINISTER | PRINTER_ACCESS_USE;  	IntPtr hPrinter = IntPtr.Zero;  	//打开打印机   	if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  		try {  			//如果Form存在删除之   			DeleteForm (hPrinter' PaperName);  			//创建并初始化FORM_INFO_1   			FormInfo1 formInfo = new FormInfo1 ();  			formInfo.Flags = 0;  			formInfo.pName = PaperName;  			formInfo.Size.width = (int)(WidthInMm * 1000.0);  			formInfo.Size.height = (int)(HeightInMm * 1000.0);  			formInfo.ImageableArea.left = 0;  			formInfo.ImageableArea.right = formInfo.Size.width;  			formInfo.ImageableArea.top = 0;  			formInfo.ImageableArea.bottom = formInfo.Size.height;  			if (!AddForm (hPrinter' 1' ref formInfo)) {  				StringBuilder strBuilder = new StringBuilder ();  				strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  				throw new ApplicationException (strBuilder.ToString ());  			}  			//初始化   			const int DM_OUT_BUFFER = 2;  			const int DM_IN_BUFFER = 8;  			structDevMode devMode = new structDevMode ();  			IntPtr hPrinterInfo' hDummy;  			PRINTER_INFO_9 printerInfo;  			printerInfo.pDevMode = IntPtr.Zero;  			int iPrinterInfoSize' iDummyInt;  			int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  			if (iDevModeSize < 0)  				throw new ApplicationException ("无法取得DEVMODE结构的大小！");  			//分配缓冲   			IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  			//获取DEV_MODE指针   			int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法获得DEVMODE结构！");  			//填充DEV_MODE   			devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  			devMode.dmFields = 0x10000;  			//FORM名称   			devMode.dmFormName = PaperName;  			Marshal.StructureToPtr (devMode' hDevMode' true);  			iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法为打印机设定打印方向！");  			GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  			if (iPrinterInfoSize == 0)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  			bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  			if (!bSuccess)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  			printerInfo.pDevMode = hDevMode;  			Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  			bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  			if (!bSuccess)  				throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  			SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  		}  		finally {  			ClosePrinter (hPrinter);  		}  	}  	else {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  }  else {  	structDevMode pDevMode = new structDevMode ();  	IntPtr hDC = CreateDC (null' PrinterName' null' ref pDevMode);  	if (hDC != IntPtr.Zero) {  		const long DM_PAPERSIZE = 0x00000002L;  		const long DM_PAPERLENGTH = 0x00000004L;  		const long DM_PAPERWIDTH = 0x00000008L;  		pDevMode.dmFields = (int)(DM_PAPERSIZE | DM_PAPERWIDTH | DM_PAPERLENGTH);  		pDevMode.dmPaperSize = 256;  		pDevMode.dmPaperWidth = (short)(WidthInMm * 1000.0);  		pDevMode.dmPaperLength = (short)(HeightInMm * 1000.0);  		ResetDC (hDC' ref pDevMode);  		DeleteDC (hDC);  	}  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (PlatformID.Win32NT == Environment.OSVersion.Platform) {  	const int PRINTER_ACCESS_USE = 0x00000008;  	const int PRINTER_ACCESS_ADMINISTER = 0x00000004;  	const int FORM_PRINTER = 0x00000002;  	structPrinterDefaults defaults = new structPrinterDefaults ();  	defaults.pDatatype = null;  	defaults.pDevMode = IntPtr.Zero;  	defaults.DesiredAccess = PRINTER_ACCESS_ADMINISTER | PRINTER_ACCESS_USE;  	IntPtr hPrinter = IntPtr.Zero;  	//打开打印机   	if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  		try {  			//如果Form存在删除之   			DeleteForm (hPrinter' PaperName);  			//创建并初始化FORM_INFO_1   			FormInfo1 formInfo = new FormInfo1 ();  			formInfo.Flags = 0;  			formInfo.pName = PaperName;  			formInfo.Size.width = (int)(WidthInMm * 1000.0);  			formInfo.Size.height = (int)(HeightInMm * 1000.0);  			formInfo.ImageableArea.left = 0;  			formInfo.ImageableArea.right = formInfo.Size.width;  			formInfo.ImageableArea.top = 0;  			formInfo.ImageableArea.bottom = formInfo.Size.height;  			if (!AddForm (hPrinter' 1' ref formInfo)) {  				StringBuilder strBuilder = new StringBuilder ();  				strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  				throw new ApplicationException (strBuilder.ToString ());  			}  			//初始化   			const int DM_OUT_BUFFER = 2;  			const int DM_IN_BUFFER = 8;  			structDevMode devMode = new structDevMode ();  			IntPtr hPrinterInfo' hDummy;  			PRINTER_INFO_9 printerInfo;  			printerInfo.pDevMode = IntPtr.Zero;  			int iPrinterInfoSize' iDummyInt;  			int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  			if (iDevModeSize < 0)  				throw new ApplicationException ("无法取得DEVMODE结构的大小！");  			//分配缓冲   			IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  			//获取DEV_MODE指针   			int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法获得DEVMODE结构！");  			//填充DEV_MODE   			devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  			devMode.dmFields = 0x10000;  			//FORM名称   			devMode.dmFormName = PaperName;  			Marshal.StructureToPtr (devMode' hDevMode' true);  			iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法为打印机设定打印方向！");  			GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  			if (iPrinterInfoSize == 0)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  			bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  			if (!bSuccess)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  			printerInfo.pDevMode = hDevMode;  			Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  			bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  			if (!bSuccess)  				throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  			SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  		}  		finally {  			ClosePrinter (hPrinter);  		}  	}  	else {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  }  else {  	structDevMode pDevMode = new structDevMode ();  	IntPtr hDC = CreateDC (null' PrinterName' null' ref pDevMode);  	if (hDC != IntPtr.Zero) {  		const long DM_PAPERSIZE = 0x00000002L;  		const long DM_PAPERLENGTH = 0x00000004L;  		const long DM_PAPERWIDTH = 0x00000008L;  		pDevMode.dmFields = (int)(DM_PAPERSIZE | DM_PAPERWIDTH | DM_PAPERLENGTH);  		pDevMode.dmPaperSize = 256;  		pDevMode.dmPaperWidth = (short)(WidthInMm * 1000.0);  		pDevMode.dmPaperLength = (short)(HeightInMm * 1000.0);  		ResetDC (hDC' ref pDevMode);  		DeleteDC (hDC);  	}  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (PlatformID.Win32NT == Environment.OSVersion.Platform) {  	const int PRINTER_ACCESS_USE = 0x00000008;  	const int PRINTER_ACCESS_ADMINISTER = 0x00000004;  	const int FORM_PRINTER = 0x00000002;  	structPrinterDefaults defaults = new structPrinterDefaults ();  	defaults.pDatatype = null;  	defaults.pDevMode = IntPtr.Zero;  	defaults.DesiredAccess = PRINTER_ACCESS_ADMINISTER | PRINTER_ACCESS_USE;  	IntPtr hPrinter = IntPtr.Zero;  	//打开打印机   	if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  		try {  			//如果Form存在删除之   			DeleteForm (hPrinter' PaperName);  			//创建并初始化FORM_INFO_1   			FormInfo1 formInfo = new FormInfo1 ();  			formInfo.Flags = 0;  			formInfo.pName = PaperName;  			formInfo.Size.width = (int)(WidthInMm * 1000.0);  			formInfo.Size.height = (int)(HeightInMm * 1000.0);  			formInfo.ImageableArea.left = 0;  			formInfo.ImageableArea.right = formInfo.Size.width;  			formInfo.ImageableArea.top = 0;  			formInfo.ImageableArea.bottom = formInfo.Size.height;  			if (!AddForm (hPrinter' 1' ref formInfo)) {  				StringBuilder strBuilder = new StringBuilder ();  				strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  				throw new ApplicationException (strBuilder.ToString ());  			}  			//初始化   			const int DM_OUT_BUFFER = 2;  			const int DM_IN_BUFFER = 8;  			structDevMode devMode = new structDevMode ();  			IntPtr hPrinterInfo' hDummy;  			PRINTER_INFO_9 printerInfo;  			printerInfo.pDevMode = IntPtr.Zero;  			int iPrinterInfoSize' iDummyInt;  			int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  			if (iDevModeSize < 0)  				throw new ApplicationException ("无法取得DEVMODE结构的大小！");  			//分配缓冲   			IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  			//获取DEV_MODE指针   			int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法获得DEVMODE结构！");  			//填充DEV_MODE   			devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  			devMode.dmFields = 0x10000;  			//FORM名称   			devMode.dmFormName = PaperName;  			Marshal.StructureToPtr (devMode' hDevMode' true);  			iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法为打印机设定打印方向！");  			GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  			if (iPrinterInfoSize == 0)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  			bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  			if (!bSuccess)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  			printerInfo.pDevMode = hDevMode;  			Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  			bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  			if (!bSuccess)  				throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  			SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  		}  		finally {  			ClosePrinter (hPrinter);  		}  	}  	else {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  }  else {  	structDevMode pDevMode = new structDevMode ();  	IntPtr hDC = CreateDC (null' PrinterName' null' ref pDevMode);  	if (hDC != IntPtr.Zero) {  		const long DM_PAPERSIZE = 0x00000002L;  		const long DM_PAPERLENGTH = 0x00000004L;  		const long DM_PAPERWIDTH = 0x00000008L;  		pDevMode.dmFields = (int)(DM_PAPERSIZE | DM_PAPERWIDTH | DM_PAPERLENGTH);  		pDevMode.dmPaperSize = 256;  		pDevMode.dmPaperWidth = (short)(WidthInMm * 1000.0);  		pDevMode.dmPaperLength = (short)(HeightInMm * 1000.0);  		ResetDC (hDC' ref pDevMode);  		DeleteDC (hDC);  	}  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (PlatformID.Win32NT == Environment.OSVersion.Platform) {  	const int PRINTER_ACCESS_USE = 0x00000008;  	const int PRINTER_ACCESS_ADMINISTER = 0x00000004;  	const int FORM_PRINTER = 0x00000002;  	structPrinterDefaults defaults = new structPrinterDefaults ();  	defaults.pDatatype = null;  	defaults.pDevMode = IntPtr.Zero;  	defaults.DesiredAccess = PRINTER_ACCESS_ADMINISTER | PRINTER_ACCESS_USE;  	IntPtr hPrinter = IntPtr.Zero;  	//打开打印机   	if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  		try {  			//如果Form存在删除之   			DeleteForm (hPrinter' PaperName);  			//创建并初始化FORM_INFO_1   			FormInfo1 formInfo = new FormInfo1 ();  			formInfo.Flags = 0;  			formInfo.pName = PaperName;  			formInfo.Size.width = (int)(WidthInMm * 1000.0);  			formInfo.Size.height = (int)(HeightInMm * 1000.0);  			formInfo.ImageableArea.left = 0;  			formInfo.ImageableArea.right = formInfo.Size.width;  			formInfo.ImageableArea.top = 0;  			formInfo.ImageableArea.bottom = formInfo.Size.height;  			if (!AddForm (hPrinter' 1' ref formInfo)) {  				StringBuilder strBuilder = new StringBuilder ();  				strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  				throw new ApplicationException (strBuilder.ToString ());  			}  			//初始化   			const int DM_OUT_BUFFER = 2;  			const int DM_IN_BUFFER = 8;  			structDevMode devMode = new structDevMode ();  			IntPtr hPrinterInfo' hDummy;  			PRINTER_INFO_9 printerInfo;  			printerInfo.pDevMode = IntPtr.Zero;  			int iPrinterInfoSize' iDummyInt;  			int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  			if (iDevModeSize < 0)  				throw new ApplicationException ("无法取得DEVMODE结构的大小！");  			//分配缓冲   			IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  			//获取DEV_MODE指针   			int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法获得DEVMODE结构！");  			//填充DEV_MODE   			devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  			devMode.dmFields = 0x10000;  			//FORM名称   			devMode.dmFormName = PaperName;  			Marshal.StructureToPtr (devMode' hDevMode' true);  			iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法为打印机设定打印方向！");  			GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  			if (iPrinterInfoSize == 0)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  			bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  			if (!bSuccess)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  			printerInfo.pDevMode = hDevMode;  			Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  			bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  			if (!bSuccess)  				throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  			SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  		}  		finally {  			ClosePrinter (hPrinter);  		}  	}  	else {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  }  else {  	structDevMode pDevMode = new structDevMode ();  	IntPtr hDC = CreateDC (null' PrinterName' null' ref pDevMode);  	if (hDC != IntPtr.Zero) {  		const long DM_PAPERSIZE = 0x00000002L;  		const long DM_PAPERLENGTH = 0x00000004L;  		const long DM_PAPERWIDTH = 0x00000008L;  		pDevMode.dmFields = (int)(DM_PAPERSIZE | DM_PAPERWIDTH | DM_PAPERLENGTH);  		pDevMode.dmPaperSize = 256;  		pDevMode.dmPaperWidth = (short)(WidthInMm * 1000.0);  		pDevMode.dmPaperLength = (short)(HeightInMm * 1000.0);  		ResetDC (hDC' ref pDevMode);  		DeleteDC (hDC);  	}  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (PlatformID.Win32NT == Environment.OSVersion.Platform) {  	const int PRINTER_ACCESS_USE = 0x00000008;  	const int PRINTER_ACCESS_ADMINISTER = 0x00000004;  	const int FORM_PRINTER = 0x00000002;  	structPrinterDefaults defaults = new structPrinterDefaults ();  	defaults.pDatatype = null;  	defaults.pDevMode = IntPtr.Zero;  	defaults.DesiredAccess = PRINTER_ACCESS_ADMINISTER | PRINTER_ACCESS_USE;  	IntPtr hPrinter = IntPtr.Zero;  	//打开打印机   	if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  		try {  			//如果Form存在删除之   			DeleteForm (hPrinter' PaperName);  			//创建并初始化FORM_INFO_1   			FormInfo1 formInfo = new FormInfo1 ();  			formInfo.Flags = 0;  			formInfo.pName = PaperName;  			formInfo.Size.width = (int)(WidthInMm * 1000.0);  			formInfo.Size.height = (int)(HeightInMm * 1000.0);  			formInfo.ImageableArea.left = 0;  			formInfo.ImageableArea.right = formInfo.Size.width;  			formInfo.ImageableArea.top = 0;  			formInfo.ImageableArea.bottom = formInfo.Size.height;  			if (!AddForm (hPrinter' 1' ref formInfo)) {  				StringBuilder strBuilder = new StringBuilder ();  				strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  				throw new ApplicationException (strBuilder.ToString ());  			}  			//初始化   			const int DM_OUT_BUFFER = 2;  			const int DM_IN_BUFFER = 8;  			structDevMode devMode = new structDevMode ();  			IntPtr hPrinterInfo' hDummy;  			PRINTER_INFO_9 printerInfo;  			printerInfo.pDevMode = IntPtr.Zero;  			int iPrinterInfoSize' iDummyInt;  			int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  			if (iDevModeSize < 0)  				throw new ApplicationException ("无法取得DEVMODE结构的大小！");  			//分配缓冲   			IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  			//获取DEV_MODE指针   			int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法获得DEVMODE结构！");  			//填充DEV_MODE   			devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  			devMode.dmFields = 0x10000;  			//FORM名称   			devMode.dmFormName = PaperName;  			Marshal.StructureToPtr (devMode' hDevMode' true);  			iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法为打印机设定打印方向！");  			GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  			if (iPrinterInfoSize == 0)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  			bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  			if (!bSuccess)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  			printerInfo.pDevMode = hDevMode;  			Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  			bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  			if (!bSuccess)  				throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  			SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  		}  		finally {  			ClosePrinter (hPrinter);  		}  	}  	else {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  }  else {  	structDevMode pDevMode = new structDevMode ();  	IntPtr hDC = CreateDC (null' PrinterName' null' ref pDevMode);  	if (hDC != IntPtr.Zero) {  		const long DM_PAPERSIZE = 0x00000002L;  		const long DM_PAPERLENGTH = 0x00000004L;  		const long DM_PAPERWIDTH = 0x00000008L;  		pDevMode.dmFields = (int)(DM_PAPERSIZE | DM_PAPERWIDTH | DM_PAPERLENGTH);  		pDevMode.dmPaperSize = 256;  		pDevMode.dmPaperWidth = (short)(WidthInMm * 1000.0);  		pDevMode.dmPaperLength = (short)(HeightInMm * 1000.0);  		ResetDC (hDC' ref pDevMode);  		DeleteDC (hDC);  	}  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (PlatformID.Win32NT == Environment.OSVersion.Platform) {  	const int PRINTER_ACCESS_USE = 0x00000008;  	const int PRINTER_ACCESS_ADMINISTER = 0x00000004;  	const int FORM_PRINTER = 0x00000002;  	structPrinterDefaults defaults = new structPrinterDefaults ();  	defaults.pDatatype = null;  	defaults.pDevMode = IntPtr.Zero;  	defaults.DesiredAccess = PRINTER_ACCESS_ADMINISTER | PRINTER_ACCESS_USE;  	IntPtr hPrinter = IntPtr.Zero;  	//打开打印机   	if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  		try {  			//如果Form存在删除之   			DeleteForm (hPrinter' PaperName);  			//创建并初始化FORM_INFO_1   			FormInfo1 formInfo = new FormInfo1 ();  			formInfo.Flags = 0;  			formInfo.pName = PaperName;  			formInfo.Size.width = (int)(WidthInMm * 1000.0);  			formInfo.Size.height = (int)(HeightInMm * 1000.0);  			formInfo.ImageableArea.left = 0;  			formInfo.ImageableArea.right = formInfo.Size.width;  			formInfo.ImageableArea.top = 0;  			formInfo.ImageableArea.bottom = formInfo.Size.height;  			if (!AddForm (hPrinter' 1' ref formInfo)) {  				StringBuilder strBuilder = new StringBuilder ();  				strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  				throw new ApplicationException (strBuilder.ToString ());  			}  			//初始化   			const int DM_OUT_BUFFER = 2;  			const int DM_IN_BUFFER = 8;  			structDevMode devMode = new structDevMode ();  			IntPtr hPrinterInfo' hDummy;  			PRINTER_INFO_9 printerInfo;  			printerInfo.pDevMode = IntPtr.Zero;  			int iPrinterInfoSize' iDummyInt;  			int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  			if (iDevModeSize < 0)  				throw new ApplicationException ("无法取得DEVMODE结构的大小！");  			//分配缓冲   			IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  			//获取DEV_MODE指针   			int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法获得DEVMODE结构！");  			//填充DEV_MODE   			devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  			devMode.dmFields = 0x10000;  			//FORM名称   			devMode.dmFormName = PaperName;  			Marshal.StructureToPtr (devMode' hDevMode' true);  			iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法为打印机设定打印方向！");  			GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  			if (iPrinterInfoSize == 0)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  			bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  			if (!bSuccess)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  			printerInfo.pDevMode = hDevMode;  			Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  			bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  			if (!bSuccess)  				throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  			SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  		}  		finally {  			ClosePrinter (hPrinter);  		}  	}  	else {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  }  else {  	structDevMode pDevMode = new structDevMode ();  	IntPtr hDC = CreateDC (null' PrinterName' null' ref pDevMode);  	if (hDC != IntPtr.Zero) {  		const long DM_PAPERSIZE = 0x00000002L;  		const long DM_PAPERLENGTH = 0x00000004L;  		const long DM_PAPERWIDTH = 0x00000008L;  		pDevMode.dmFields = (int)(DM_PAPERSIZE | DM_PAPERWIDTH | DM_PAPERLENGTH);  		pDevMode.dmPaperSize = 256;  		pDevMode.dmPaperWidth = (short)(WidthInMm * 1000.0);  		pDevMode.dmPaperLength = (short)(HeightInMm * 1000.0);  		ResetDC (hDC' ref pDevMode);  		DeleteDC (hDC);  	}  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (PlatformID.Win32NT == Environment.OSVersion.Platform) {  	const int PRINTER_ACCESS_USE = 0x00000008;  	const int PRINTER_ACCESS_ADMINISTER = 0x00000004;  	const int FORM_PRINTER = 0x00000002;  	structPrinterDefaults defaults = new structPrinterDefaults ();  	defaults.pDatatype = null;  	defaults.pDevMode = IntPtr.Zero;  	defaults.DesiredAccess = PRINTER_ACCESS_ADMINISTER | PRINTER_ACCESS_USE;  	IntPtr hPrinter = IntPtr.Zero;  	//打开打印机   	if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  		try {  			//如果Form存在删除之   			DeleteForm (hPrinter' PaperName);  			//创建并初始化FORM_INFO_1   			FormInfo1 formInfo = new FormInfo1 ();  			formInfo.Flags = 0;  			formInfo.pName = PaperName;  			formInfo.Size.width = (int)(WidthInMm * 1000.0);  			formInfo.Size.height = (int)(HeightInMm * 1000.0);  			formInfo.ImageableArea.left = 0;  			formInfo.ImageableArea.right = formInfo.Size.width;  			formInfo.ImageableArea.top = 0;  			formInfo.ImageableArea.bottom = formInfo.Size.height;  			if (!AddForm (hPrinter' 1' ref formInfo)) {  				StringBuilder strBuilder = new StringBuilder ();  				strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  				throw new ApplicationException (strBuilder.ToString ());  			}  			//初始化   			const int DM_OUT_BUFFER = 2;  			const int DM_IN_BUFFER = 8;  			structDevMode devMode = new structDevMode ();  			IntPtr hPrinterInfo' hDummy;  			PRINTER_INFO_9 printerInfo;  			printerInfo.pDevMode = IntPtr.Zero;  			int iPrinterInfoSize' iDummyInt;  			int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  			if (iDevModeSize < 0)  				throw new ApplicationException ("无法取得DEVMODE结构的大小！");  			//分配缓冲   			IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  			//获取DEV_MODE指针   			int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法获得DEVMODE结构！");  			//填充DEV_MODE   			devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  			devMode.dmFields = 0x10000;  			//FORM名称   			devMode.dmFormName = PaperName;  			Marshal.StructureToPtr (devMode' hDevMode' true);  			iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法为打印机设定打印方向！");  			GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  			if (iPrinterInfoSize == 0)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  			bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  			if (!bSuccess)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  			printerInfo.pDevMode = hDevMode;  			Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  			bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  			if (!bSuccess)  				throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  			SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  		}  		finally {  			ClosePrinter (hPrinter);  		}  	}  	else {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  }  else {  	structDevMode pDevMode = new structDevMode ();  	IntPtr hDC = CreateDC (null' PrinterName' null' ref pDevMode);  	if (hDC != IntPtr.Zero) {  		const long DM_PAPERSIZE = 0x00000002L;  		const long DM_PAPERLENGTH = 0x00000004L;  		const long DM_PAPERWIDTH = 0x00000008L;  		pDevMode.dmFields = (int)(DM_PAPERSIZE | DM_PAPERWIDTH | DM_PAPERLENGTH);  		pDevMode.dmPaperSize = 256;  		pDevMode.dmPaperWidth = (short)(WidthInMm * 1000.0);  		pDevMode.dmPaperLength = (short)(HeightInMm * 1000.0);  		ResetDC (hDC' ref pDevMode);  		DeleteDC (hDC);  	}  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (PlatformID.Win32NT == Environment.OSVersion.Platform) {  	const int PRINTER_ACCESS_USE = 0x00000008;  	const int PRINTER_ACCESS_ADMINISTER = 0x00000004;  	const int FORM_PRINTER = 0x00000002;  	structPrinterDefaults defaults = new structPrinterDefaults ();  	defaults.pDatatype = null;  	defaults.pDevMode = IntPtr.Zero;  	defaults.DesiredAccess = PRINTER_ACCESS_ADMINISTER | PRINTER_ACCESS_USE;  	IntPtr hPrinter = IntPtr.Zero;  	//打开打印机   	if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  		try {  			//如果Form存在删除之   			DeleteForm (hPrinter' PaperName);  			//创建并初始化FORM_INFO_1   			FormInfo1 formInfo = new FormInfo1 ();  			formInfo.Flags = 0;  			formInfo.pName = PaperName;  			formInfo.Size.width = (int)(WidthInMm * 1000.0);  			formInfo.Size.height = (int)(HeightInMm * 1000.0);  			formInfo.ImageableArea.left = 0;  			formInfo.ImageableArea.right = formInfo.Size.width;  			formInfo.ImageableArea.top = 0;  			formInfo.ImageableArea.bottom = formInfo.Size.height;  			if (!AddForm (hPrinter' 1' ref formInfo)) {  				StringBuilder strBuilder = new StringBuilder ();  				strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  				throw new ApplicationException (strBuilder.ToString ());  			}  			//初始化   			const int DM_OUT_BUFFER = 2;  			const int DM_IN_BUFFER = 8;  			structDevMode devMode = new structDevMode ();  			IntPtr hPrinterInfo' hDummy;  			PRINTER_INFO_9 printerInfo;  			printerInfo.pDevMode = IntPtr.Zero;  			int iPrinterInfoSize' iDummyInt;  			int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  			if (iDevModeSize < 0)  				throw new ApplicationException ("无法取得DEVMODE结构的大小！");  			//分配缓冲   			IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  			//获取DEV_MODE指针   			int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法获得DEVMODE结构！");  			//填充DEV_MODE   			devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  			devMode.dmFields = 0x10000;  			//FORM名称   			devMode.dmFormName = PaperName;  			Marshal.StructureToPtr (devMode' hDevMode' true);  			iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法为打印机设定打印方向！");  			GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  			if (iPrinterInfoSize == 0)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  			bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  			if (!bSuccess)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  			printerInfo.pDevMode = hDevMode;  			Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  			bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  			if (!bSuccess)  				throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  			SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  		}  		finally {  			ClosePrinter (hPrinter);  		}  	}  	else {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  }  else {  	structDevMode pDevMode = new structDevMode ();  	IntPtr hDC = CreateDC (null' PrinterName' null' ref pDevMode);  	if (hDC != IntPtr.Zero) {  		const long DM_PAPERSIZE = 0x00000002L;  		const long DM_PAPERLENGTH = 0x00000004L;  		const long DM_PAPERWIDTH = 0x00000008L;  		pDevMode.dmFields = (int)(DM_PAPERSIZE | DM_PAPERWIDTH | DM_PAPERLENGTH);  		pDevMode.dmPaperSize = 256;  		pDevMode.dmPaperWidth = (short)(WidthInMm * 1000.0);  		pDevMode.dmPaperLength = (short)(HeightInMm * 1000.0);  		ResetDC (hDC' ref pDevMode);  		DeleteDC (hDC);  	}  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (PlatformID.Win32NT == Environment.OSVersion.Platform) {  	const int PRINTER_ACCESS_USE = 0x00000008;  	const int PRINTER_ACCESS_ADMINISTER = 0x00000004;  	const int FORM_PRINTER = 0x00000002;  	structPrinterDefaults defaults = new structPrinterDefaults ();  	defaults.pDatatype = null;  	defaults.pDevMode = IntPtr.Zero;  	defaults.DesiredAccess = PRINTER_ACCESS_ADMINISTER | PRINTER_ACCESS_USE;  	IntPtr hPrinter = IntPtr.Zero;  	//打开打印机   	if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  		try {  			//如果Form存在删除之   			DeleteForm (hPrinter' PaperName);  			//创建并初始化FORM_INFO_1   			FormInfo1 formInfo = new FormInfo1 ();  			formInfo.Flags = 0;  			formInfo.pName = PaperName;  			formInfo.Size.width = (int)(WidthInMm * 1000.0);  			formInfo.Size.height = (int)(HeightInMm * 1000.0);  			formInfo.ImageableArea.left = 0;  			formInfo.ImageableArea.right = formInfo.Size.width;  			formInfo.ImageableArea.top = 0;  			formInfo.ImageableArea.bottom = formInfo.Size.height;  			if (!AddForm (hPrinter' 1' ref formInfo)) {  				StringBuilder strBuilder = new StringBuilder ();  				strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  				throw new ApplicationException (strBuilder.ToString ());  			}  			//初始化   			const int DM_OUT_BUFFER = 2;  			const int DM_IN_BUFFER = 8;  			structDevMode devMode = new structDevMode ();  			IntPtr hPrinterInfo' hDummy;  			PRINTER_INFO_9 printerInfo;  			printerInfo.pDevMode = IntPtr.Zero;  			int iPrinterInfoSize' iDummyInt;  			int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  			if (iDevModeSize < 0)  				throw new ApplicationException ("无法取得DEVMODE结构的大小！");  			//分配缓冲   			IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  			//获取DEV_MODE指针   			int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法获得DEVMODE结构！");  			//填充DEV_MODE   			devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  			devMode.dmFields = 0x10000;  			//FORM名称   			devMode.dmFormName = PaperName;  			Marshal.StructureToPtr (devMode' hDevMode' true);  			iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法为打印机设定打印方向！");  			GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  			if (iPrinterInfoSize == 0)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  			bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  			if (!bSuccess)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  			printerInfo.pDevMode = hDevMode;  			Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  			bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  			if (!bSuccess)  				throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  			SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  		}  		finally {  			ClosePrinter (hPrinter);  		}  	}  	else {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  }  else {  	structDevMode pDevMode = new structDevMode ();  	IntPtr hDC = CreateDC (null' PrinterName' null' ref pDevMode);  	if (hDC != IntPtr.Zero) {  		const long DM_PAPERSIZE = 0x00000002L;  		const long DM_PAPERLENGTH = 0x00000004L;  		const long DM_PAPERWIDTH = 0x00000008L;  		pDevMode.dmFields = (int)(DM_PAPERSIZE | DM_PAPERWIDTH | DM_PAPERLENGTH);  		pDevMode.dmPaperSize = 256;  		pDevMode.dmPaperWidth = (short)(WidthInMm * 1000.0);  		pDevMode.dmPaperLength = (short)(HeightInMm * 1000.0);  		ResetDC (hDC' ref pDevMode);  		DeleteDC (hDC);  	}  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (PlatformID.Win32NT == Environment.OSVersion.Platform) {  	const int PRINTER_ACCESS_USE = 0x00000008;  	const int PRINTER_ACCESS_ADMINISTER = 0x00000004;  	const int FORM_PRINTER = 0x00000002;  	structPrinterDefaults defaults = new structPrinterDefaults ();  	defaults.pDatatype = null;  	defaults.pDevMode = IntPtr.Zero;  	defaults.DesiredAccess = PRINTER_ACCESS_ADMINISTER | PRINTER_ACCESS_USE;  	IntPtr hPrinter = IntPtr.Zero;  	//打开打印机   	if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  		try {  			//如果Form存在删除之   			DeleteForm (hPrinter' PaperName);  			//创建并初始化FORM_INFO_1   			FormInfo1 formInfo = new FormInfo1 ();  			formInfo.Flags = 0;  			formInfo.pName = PaperName;  			formInfo.Size.width = (int)(WidthInMm * 1000.0);  			formInfo.Size.height = (int)(HeightInMm * 1000.0);  			formInfo.ImageableArea.left = 0;  			formInfo.ImageableArea.right = formInfo.Size.width;  			formInfo.ImageableArea.top = 0;  			formInfo.ImageableArea.bottom = formInfo.Size.height;  			if (!AddForm (hPrinter' 1' ref formInfo)) {  				StringBuilder strBuilder = new StringBuilder ();  				strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  				throw new ApplicationException (strBuilder.ToString ());  			}  			//初始化   			const int DM_OUT_BUFFER = 2;  			const int DM_IN_BUFFER = 8;  			structDevMode devMode = new structDevMode ();  			IntPtr hPrinterInfo' hDummy;  			PRINTER_INFO_9 printerInfo;  			printerInfo.pDevMode = IntPtr.Zero;  			int iPrinterInfoSize' iDummyInt;  			int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  			if (iDevModeSize < 0)  				throw new ApplicationException ("无法取得DEVMODE结构的大小！");  			//分配缓冲   			IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  			//获取DEV_MODE指针   			int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法获得DEVMODE结构！");  			//填充DEV_MODE   			devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  			devMode.dmFields = 0x10000;  			//FORM名称   			devMode.dmFormName = PaperName;  			Marshal.StructureToPtr (devMode' hDevMode' true);  			iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法为打印机设定打印方向！");  			GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  			if (iPrinterInfoSize == 0)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  			bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  			if (!bSuccess)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  			printerInfo.pDevMode = hDevMode;  			Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  			bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  			if (!bSuccess)  				throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  			SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  		}  		finally {  			ClosePrinter (hPrinter);  		}  	}  	else {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  }  else {  	structDevMode pDevMode = new structDevMode ();  	IntPtr hDC = CreateDC (null' PrinterName' null' ref pDevMode);  	if (hDC != IntPtr.Zero) {  		const long DM_PAPERSIZE = 0x00000002L;  		const long DM_PAPERLENGTH = 0x00000004L;  		const long DM_PAPERWIDTH = 0x00000008L;  		pDevMode.dmFields = (int)(DM_PAPERSIZE | DM_PAPERWIDTH | DM_PAPERLENGTH);  		pDevMode.dmPaperSize = 256;  		pDevMode.dmPaperWidth = (short)(WidthInMm * 1000.0);  		pDevMode.dmPaperLength = (short)(HeightInMm * 1000.0);  		ResetDC (hDC' ref pDevMode);  		DeleteDC (hDC);  	}  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (PlatformID.Win32NT == Environment.OSVersion.Platform) {  	const int PRINTER_ACCESS_USE = 0x00000008;  	const int PRINTER_ACCESS_ADMINISTER = 0x00000004;  	const int FORM_PRINTER = 0x00000002;  	structPrinterDefaults defaults = new structPrinterDefaults ();  	defaults.pDatatype = null;  	defaults.pDevMode = IntPtr.Zero;  	defaults.DesiredAccess = PRINTER_ACCESS_ADMINISTER | PRINTER_ACCESS_USE;  	IntPtr hPrinter = IntPtr.Zero;  	//打开打印机   	if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  		try {  			//如果Form存在删除之   			DeleteForm (hPrinter' PaperName);  			//创建并初始化FORM_INFO_1   			FormInfo1 formInfo = new FormInfo1 ();  			formInfo.Flags = 0;  			formInfo.pName = PaperName;  			formInfo.Size.width = (int)(WidthInMm * 1000.0);  			formInfo.Size.height = (int)(HeightInMm * 1000.0);  			formInfo.ImageableArea.left = 0;  			formInfo.ImageableArea.right = formInfo.Size.width;  			formInfo.ImageableArea.top = 0;  			formInfo.ImageableArea.bottom = formInfo.Size.height;  			if (!AddForm (hPrinter' 1' ref formInfo)) {  				StringBuilder strBuilder = new StringBuilder ();  				strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  				throw new ApplicationException (strBuilder.ToString ());  			}  			//初始化   			const int DM_OUT_BUFFER = 2;  			const int DM_IN_BUFFER = 8;  			structDevMode devMode = new structDevMode ();  			IntPtr hPrinterInfo' hDummy;  			PRINTER_INFO_9 printerInfo;  			printerInfo.pDevMode = IntPtr.Zero;  			int iPrinterInfoSize' iDummyInt;  			int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  			if (iDevModeSize < 0)  				throw new ApplicationException ("无法取得DEVMODE结构的大小！");  			//分配缓冲   			IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  			//获取DEV_MODE指针   			int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法获得DEVMODE结构！");  			//填充DEV_MODE   			devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  			devMode.dmFields = 0x10000;  			//FORM名称   			devMode.dmFormName = PaperName;  			Marshal.StructureToPtr (devMode' hDevMode' true);  			iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  			if (iRet < 0)  				throw new ApplicationException ("无法为打印机设定打印方向！");  			GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  			if (iPrinterInfoSize == 0)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  			bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  			if (!bSuccess)  				throw new ApplicationException ("调用GetPrinter方法失败！");  			printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  			printerInfo.pDevMode = hDevMode;  			Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  			bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  			if (!bSuccess)  				throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  			SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  		}  		finally {  			ClosePrinter (hPrinter);  		}  	}  	else {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  }  else {  	structDevMode pDevMode = new structDevMode ();  	IntPtr hDC = CreateDC (null' PrinterName' null' ref pDevMode);  	if (hDC != IntPtr.Zero) {  		const long DM_PAPERSIZE = 0x00000002L;  		const long DM_PAPERLENGTH = 0x00000004L;  		const long DM_PAPERWIDTH = 0x00000008L;  		pDevMode.dmFields = (int)(DM_PAPERSIZE | DM_PAPERWIDTH | DM_PAPERLENGTH);  		pDevMode.dmPaperSize = 256;  		pDevMode.dmPaperWidth = (short)(WidthInMm * 1000.0);  		pDevMode.dmPaperLength = (short)(HeightInMm * 1000.0);  		ResetDC (hDC' ref pDevMode);  		DeleteDC (hDC);  	}  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  	try {  		//如果Form存在删除之   		DeleteForm (hPrinter' PaperName);  		//创建并初始化FORM_INFO_1   		FormInfo1 formInfo = new FormInfo1 ();  		formInfo.Flags = 0;  		formInfo.pName = PaperName;  		formInfo.Size.width = (int)(WidthInMm * 1000.0);  		formInfo.Size.height = (int)(HeightInMm * 1000.0);  		formInfo.ImageableArea.left = 0;  		formInfo.ImageableArea.right = formInfo.Size.width;  		formInfo.ImageableArea.top = 0;  		formInfo.ImageableArea.bottom = formInfo.Size.height;  		if (!AddForm (hPrinter' 1' ref formInfo)) {  			StringBuilder strBuilder = new StringBuilder ();  			strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  			throw new ApplicationException (strBuilder.ToString ());  		}  		//初始化   		const int DM_OUT_BUFFER = 2;  		const int DM_IN_BUFFER = 8;  		structDevMode devMode = new structDevMode ();  		IntPtr hPrinterInfo' hDummy;  		PRINTER_INFO_9 printerInfo;  		printerInfo.pDevMode = IntPtr.Zero;  		int iPrinterInfoSize' iDummyInt;  		int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  		if (iDevModeSize < 0)  			throw new ApplicationException ("无法取得DEVMODE结构的大小！");  		//分配缓冲   		IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  		//获取DEV_MODE指针   		int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法获得DEVMODE结构！");  		//填充DEV_MODE   		devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  		devMode.dmFields = 0x10000;  		//FORM名称   		devMode.dmFormName = PaperName;  		Marshal.StructureToPtr (devMode' hDevMode' true);  		iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法为打印机设定打印方向！");  		GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  		if (iPrinterInfoSize == 0)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  		bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  		if (!bSuccess)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  		printerInfo.pDevMode = hDevMode;  		Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  		bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  		if (!bSuccess)  			throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  		SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  	}  	finally {  		ClosePrinter (hPrinter);  	}  }  else {  	StringBuilder strBuilder = new StringBuilder ();  	strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  	throw new ApplicationException (strBuilder.ToString ());  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  	try {  		//如果Form存在删除之   		DeleteForm (hPrinter' PaperName);  		//创建并初始化FORM_INFO_1   		FormInfo1 formInfo = new FormInfo1 ();  		formInfo.Flags = 0;  		formInfo.pName = PaperName;  		formInfo.Size.width = (int)(WidthInMm * 1000.0);  		formInfo.Size.height = (int)(HeightInMm * 1000.0);  		formInfo.ImageableArea.left = 0;  		formInfo.ImageableArea.right = formInfo.Size.width;  		formInfo.ImageableArea.top = 0;  		formInfo.ImageableArea.bottom = formInfo.Size.height;  		if (!AddForm (hPrinter' 1' ref formInfo)) {  			StringBuilder strBuilder = new StringBuilder ();  			strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  			throw new ApplicationException (strBuilder.ToString ());  		}  		//初始化   		const int DM_OUT_BUFFER = 2;  		const int DM_IN_BUFFER = 8;  		structDevMode devMode = new structDevMode ();  		IntPtr hPrinterInfo' hDummy;  		PRINTER_INFO_9 printerInfo;  		printerInfo.pDevMode = IntPtr.Zero;  		int iPrinterInfoSize' iDummyInt;  		int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  		if (iDevModeSize < 0)  			throw new ApplicationException ("无法取得DEVMODE结构的大小！");  		//分配缓冲   		IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  		//获取DEV_MODE指针   		int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法获得DEVMODE结构！");  		//填充DEV_MODE   		devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  		devMode.dmFields = 0x10000;  		//FORM名称   		devMode.dmFormName = PaperName;  		Marshal.StructureToPtr (devMode' hDevMode' true);  		iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法为打印机设定打印方向！");  		GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  		if (iPrinterInfoSize == 0)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  		bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  		if (!bSuccess)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  		printerInfo.pDevMode = hDevMode;  		Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  		bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  		if (!bSuccess)  			throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  		SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  	}  	finally {  		ClosePrinter (hPrinter);  	}  }  else {  	StringBuilder strBuilder = new StringBuilder ();  	strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  	throw new ApplicationException (strBuilder.ToString ());  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  	try {  		//如果Form存在删除之   		DeleteForm (hPrinter' PaperName);  		//创建并初始化FORM_INFO_1   		FormInfo1 formInfo = new FormInfo1 ();  		formInfo.Flags = 0;  		formInfo.pName = PaperName;  		formInfo.Size.width = (int)(WidthInMm * 1000.0);  		formInfo.Size.height = (int)(HeightInMm * 1000.0);  		formInfo.ImageableArea.left = 0;  		formInfo.ImageableArea.right = formInfo.Size.width;  		formInfo.ImageableArea.top = 0;  		formInfo.ImageableArea.bottom = formInfo.Size.height;  		if (!AddForm (hPrinter' 1' ref formInfo)) {  			StringBuilder strBuilder = new StringBuilder ();  			strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  			throw new ApplicationException (strBuilder.ToString ());  		}  		//初始化   		const int DM_OUT_BUFFER = 2;  		const int DM_IN_BUFFER = 8;  		structDevMode devMode = new structDevMode ();  		IntPtr hPrinterInfo' hDummy;  		PRINTER_INFO_9 printerInfo;  		printerInfo.pDevMode = IntPtr.Zero;  		int iPrinterInfoSize' iDummyInt;  		int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  		if (iDevModeSize < 0)  			throw new ApplicationException ("无法取得DEVMODE结构的大小！");  		//分配缓冲   		IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  		//获取DEV_MODE指针   		int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法获得DEVMODE结构！");  		//填充DEV_MODE   		devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  		devMode.dmFields = 0x10000;  		//FORM名称   		devMode.dmFormName = PaperName;  		Marshal.StructureToPtr (devMode' hDevMode' true);  		iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法为打印机设定打印方向！");  		GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  		if (iPrinterInfoSize == 0)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  		bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  		if (!bSuccess)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  		printerInfo.pDevMode = hDevMode;  		Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  		bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  		if (!bSuccess)  			throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  		SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  	}  	finally {  		ClosePrinter (hPrinter);  	}  }  else {  	StringBuilder strBuilder = new StringBuilder ();  	strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  	throw new ApplicationException (strBuilder.ToString ());  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  	try {  		//如果Form存在删除之   		DeleteForm (hPrinter' PaperName);  		//创建并初始化FORM_INFO_1   		FormInfo1 formInfo = new FormInfo1 ();  		formInfo.Flags = 0;  		formInfo.pName = PaperName;  		formInfo.Size.width = (int)(WidthInMm * 1000.0);  		formInfo.Size.height = (int)(HeightInMm * 1000.0);  		formInfo.ImageableArea.left = 0;  		formInfo.ImageableArea.right = formInfo.Size.width;  		formInfo.ImageableArea.top = 0;  		formInfo.ImageableArea.bottom = formInfo.Size.height;  		if (!AddForm (hPrinter' 1' ref formInfo)) {  			StringBuilder strBuilder = new StringBuilder ();  			strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  			throw new ApplicationException (strBuilder.ToString ());  		}  		//初始化   		const int DM_OUT_BUFFER = 2;  		const int DM_IN_BUFFER = 8;  		structDevMode devMode = new structDevMode ();  		IntPtr hPrinterInfo' hDummy;  		PRINTER_INFO_9 printerInfo;  		printerInfo.pDevMode = IntPtr.Zero;  		int iPrinterInfoSize' iDummyInt;  		int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  		if (iDevModeSize < 0)  			throw new ApplicationException ("无法取得DEVMODE结构的大小！");  		//分配缓冲   		IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  		//获取DEV_MODE指针   		int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法获得DEVMODE结构！");  		//填充DEV_MODE   		devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  		devMode.dmFields = 0x10000;  		//FORM名称   		devMode.dmFormName = PaperName;  		Marshal.StructureToPtr (devMode' hDevMode' true);  		iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法为打印机设定打印方向！");  		GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  		if (iPrinterInfoSize == 0)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  		bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  		if (!bSuccess)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  		printerInfo.pDevMode = hDevMode;  		Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  		bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  		if (!bSuccess)  			throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  		SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  	}  	finally {  		ClosePrinter (hPrinter);  	}  }  else {  	StringBuilder strBuilder = new StringBuilder ();  	strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  	throw new ApplicationException (strBuilder.ToString ());  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  	try {  		//如果Form存在删除之   		DeleteForm (hPrinter' PaperName);  		//创建并初始化FORM_INFO_1   		FormInfo1 formInfo = new FormInfo1 ();  		formInfo.Flags = 0;  		formInfo.pName = PaperName;  		formInfo.Size.width = (int)(WidthInMm * 1000.0);  		formInfo.Size.height = (int)(HeightInMm * 1000.0);  		formInfo.ImageableArea.left = 0;  		formInfo.ImageableArea.right = formInfo.Size.width;  		formInfo.ImageableArea.top = 0;  		formInfo.ImageableArea.bottom = formInfo.Size.height;  		if (!AddForm (hPrinter' 1' ref formInfo)) {  			StringBuilder strBuilder = new StringBuilder ();  			strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  			throw new ApplicationException (strBuilder.ToString ());  		}  		//初始化   		const int DM_OUT_BUFFER = 2;  		const int DM_IN_BUFFER = 8;  		structDevMode devMode = new structDevMode ();  		IntPtr hPrinterInfo' hDummy;  		PRINTER_INFO_9 printerInfo;  		printerInfo.pDevMode = IntPtr.Zero;  		int iPrinterInfoSize' iDummyInt;  		int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  		if (iDevModeSize < 0)  			throw new ApplicationException ("无法取得DEVMODE结构的大小！");  		//分配缓冲   		IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  		//获取DEV_MODE指针   		int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法获得DEVMODE结构！");  		//填充DEV_MODE   		devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  		devMode.dmFields = 0x10000;  		//FORM名称   		devMode.dmFormName = PaperName;  		Marshal.StructureToPtr (devMode' hDevMode' true);  		iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法为打印机设定打印方向！");  		GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  		if (iPrinterInfoSize == 0)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  		bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  		if (!bSuccess)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  		printerInfo.pDevMode = hDevMode;  		Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  		bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  		if (!bSuccess)  			throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  		SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  	}  	finally {  		ClosePrinter (hPrinter);  	}  }  else {  	StringBuilder strBuilder = new StringBuilder ();  	strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  	throw new ApplicationException (strBuilder.ToString ());  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  	try {  		//如果Form存在删除之   		DeleteForm (hPrinter' PaperName);  		//创建并初始化FORM_INFO_1   		FormInfo1 formInfo = new FormInfo1 ();  		formInfo.Flags = 0;  		formInfo.pName = PaperName;  		formInfo.Size.width = (int)(WidthInMm * 1000.0);  		formInfo.Size.height = (int)(HeightInMm * 1000.0);  		formInfo.ImageableArea.left = 0;  		formInfo.ImageableArea.right = formInfo.Size.width;  		formInfo.ImageableArea.top = 0;  		formInfo.ImageableArea.bottom = formInfo.Size.height;  		if (!AddForm (hPrinter' 1' ref formInfo)) {  			StringBuilder strBuilder = new StringBuilder ();  			strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  			throw new ApplicationException (strBuilder.ToString ());  		}  		//初始化   		const int DM_OUT_BUFFER = 2;  		const int DM_IN_BUFFER = 8;  		structDevMode devMode = new structDevMode ();  		IntPtr hPrinterInfo' hDummy;  		PRINTER_INFO_9 printerInfo;  		printerInfo.pDevMode = IntPtr.Zero;  		int iPrinterInfoSize' iDummyInt;  		int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  		if (iDevModeSize < 0)  			throw new ApplicationException ("无法取得DEVMODE结构的大小！");  		//分配缓冲   		IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  		//获取DEV_MODE指针   		int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法获得DEVMODE结构！");  		//填充DEV_MODE   		devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  		devMode.dmFields = 0x10000;  		//FORM名称   		devMode.dmFormName = PaperName;  		Marshal.StructureToPtr (devMode' hDevMode' true);  		iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法为打印机设定打印方向！");  		GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  		if (iPrinterInfoSize == 0)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  		bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  		if (!bSuccess)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  		printerInfo.pDevMode = hDevMode;  		Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  		bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  		if (!bSuccess)  			throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  		SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  	}  	finally {  		ClosePrinter (hPrinter);  	}  }  else {  	StringBuilder strBuilder = new StringBuilder ();  	strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  	throw new ApplicationException (strBuilder.ToString ());  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  	try {  		//如果Form存在删除之   		DeleteForm (hPrinter' PaperName);  		//创建并初始化FORM_INFO_1   		FormInfo1 formInfo = new FormInfo1 ();  		formInfo.Flags = 0;  		formInfo.pName = PaperName;  		formInfo.Size.width = (int)(WidthInMm * 1000.0);  		formInfo.Size.height = (int)(HeightInMm * 1000.0);  		formInfo.ImageableArea.left = 0;  		formInfo.ImageableArea.right = formInfo.Size.width;  		formInfo.ImageableArea.top = 0;  		formInfo.ImageableArea.bottom = formInfo.Size.height;  		if (!AddForm (hPrinter' 1' ref formInfo)) {  			StringBuilder strBuilder = new StringBuilder ();  			strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  			throw new ApplicationException (strBuilder.ToString ());  		}  		//初始化   		const int DM_OUT_BUFFER = 2;  		const int DM_IN_BUFFER = 8;  		structDevMode devMode = new structDevMode ();  		IntPtr hPrinterInfo' hDummy;  		PRINTER_INFO_9 printerInfo;  		printerInfo.pDevMode = IntPtr.Zero;  		int iPrinterInfoSize' iDummyInt;  		int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  		if (iDevModeSize < 0)  			throw new ApplicationException ("无法取得DEVMODE结构的大小！");  		//分配缓冲   		IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  		//获取DEV_MODE指针   		int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法获得DEVMODE结构！");  		//填充DEV_MODE   		devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  		devMode.dmFields = 0x10000;  		//FORM名称   		devMode.dmFormName = PaperName;  		Marshal.StructureToPtr (devMode' hDevMode' true);  		iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法为打印机设定打印方向！");  		GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  		if (iPrinterInfoSize == 0)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  		bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  		if (!bSuccess)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  		printerInfo.pDevMode = hDevMode;  		Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  		bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  		if (!bSuccess)  			throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  		SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  	}  	finally {  		ClosePrinter (hPrinter);  	}  }  else {  	StringBuilder strBuilder = new StringBuilder ();  	strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  	throw new ApplicationException (strBuilder.ToString ());  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  	try {  		//如果Form存在删除之   		DeleteForm (hPrinter' PaperName);  		//创建并初始化FORM_INFO_1   		FormInfo1 formInfo = new FormInfo1 ();  		formInfo.Flags = 0;  		formInfo.pName = PaperName;  		formInfo.Size.width = (int)(WidthInMm * 1000.0);  		formInfo.Size.height = (int)(HeightInMm * 1000.0);  		formInfo.ImageableArea.left = 0;  		formInfo.ImageableArea.right = formInfo.Size.width;  		formInfo.ImageableArea.top = 0;  		formInfo.ImageableArea.bottom = formInfo.Size.height;  		if (!AddForm (hPrinter' 1' ref formInfo)) {  			StringBuilder strBuilder = new StringBuilder ();  			strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  			throw new ApplicationException (strBuilder.ToString ());  		}  		//初始化   		const int DM_OUT_BUFFER = 2;  		const int DM_IN_BUFFER = 8;  		structDevMode devMode = new structDevMode ();  		IntPtr hPrinterInfo' hDummy;  		PRINTER_INFO_9 printerInfo;  		printerInfo.pDevMode = IntPtr.Zero;  		int iPrinterInfoSize' iDummyInt;  		int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  		if (iDevModeSize < 0)  			throw new ApplicationException ("无法取得DEVMODE结构的大小！");  		//分配缓冲   		IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  		//获取DEV_MODE指针   		int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法获得DEVMODE结构！");  		//填充DEV_MODE   		devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  		devMode.dmFields = 0x10000;  		//FORM名称   		devMode.dmFormName = PaperName;  		Marshal.StructureToPtr (devMode' hDevMode' true);  		iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法为打印机设定打印方向！");  		GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  		if (iPrinterInfoSize == 0)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  		bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  		if (!bSuccess)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  		printerInfo.pDevMode = hDevMode;  		Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  		bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  		if (!bSuccess)  			throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  		SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  	}  	finally {  		ClosePrinter (hPrinter);  	}  }  else {  	StringBuilder strBuilder = new StringBuilder ();  	strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  	throw new ApplicationException (strBuilder.ToString ());  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  	try {  		//如果Form存在删除之   		DeleteForm (hPrinter' PaperName);  		//创建并初始化FORM_INFO_1   		FormInfo1 formInfo = new FormInfo1 ();  		formInfo.Flags = 0;  		formInfo.pName = PaperName;  		formInfo.Size.width = (int)(WidthInMm * 1000.0);  		formInfo.Size.height = (int)(HeightInMm * 1000.0);  		formInfo.ImageableArea.left = 0;  		formInfo.ImageableArea.right = formInfo.Size.width;  		formInfo.ImageableArea.top = 0;  		formInfo.ImageableArea.bottom = formInfo.Size.height;  		if (!AddForm (hPrinter' 1' ref formInfo)) {  			StringBuilder strBuilder = new StringBuilder ();  			strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  			throw new ApplicationException (strBuilder.ToString ());  		}  		//初始化   		const int DM_OUT_BUFFER = 2;  		const int DM_IN_BUFFER = 8;  		structDevMode devMode = new structDevMode ();  		IntPtr hPrinterInfo' hDummy;  		PRINTER_INFO_9 printerInfo;  		printerInfo.pDevMode = IntPtr.Zero;  		int iPrinterInfoSize' iDummyInt;  		int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  		if (iDevModeSize < 0)  			throw new ApplicationException ("无法取得DEVMODE结构的大小！");  		//分配缓冲   		IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  		//获取DEV_MODE指针   		int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法获得DEVMODE结构！");  		//填充DEV_MODE   		devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  		devMode.dmFields = 0x10000;  		//FORM名称   		devMode.dmFormName = PaperName;  		Marshal.StructureToPtr (devMode' hDevMode' true);  		iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法为打印机设定打印方向！");  		GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  		if (iPrinterInfoSize == 0)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  		bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  		if (!bSuccess)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  		printerInfo.pDevMode = hDevMode;  		Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  		bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  		if (!bSuccess)  			throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  		SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  	}  	finally {  		ClosePrinter (hPrinter);  	}  }  else {  	StringBuilder strBuilder = new StringBuilder ();  	strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  	throw new ApplicationException (strBuilder.ToString ());  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (OpenPrinter (PrinterName' out hPrinter' ref defaults)) {  	try {  		//如果Form存在删除之   		DeleteForm (hPrinter' PaperName);  		//创建并初始化FORM_INFO_1   		FormInfo1 formInfo = new FormInfo1 ();  		formInfo.Flags = 0;  		formInfo.pName = PaperName;  		formInfo.Size.width = (int)(WidthInMm * 1000.0);  		formInfo.Size.height = (int)(HeightInMm * 1000.0);  		formInfo.ImageableArea.left = 0;  		formInfo.ImageableArea.right = formInfo.Size.width;  		formInfo.ImageableArea.top = 0;  		formInfo.ImageableArea.bottom = formInfo.Size.height;  		if (!AddForm (hPrinter' 1' ref formInfo)) {  			StringBuilder strBuilder = new StringBuilder ();  			strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  			throw new ApplicationException (strBuilder.ToString ());  		}  		//初始化   		const int DM_OUT_BUFFER = 2;  		const int DM_IN_BUFFER = 8;  		structDevMode devMode = new structDevMode ();  		IntPtr hPrinterInfo' hDummy;  		PRINTER_INFO_9 printerInfo;  		printerInfo.pDevMode = IntPtr.Zero;  		int iPrinterInfoSize' iDummyInt;  		int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  		if (iDevModeSize < 0)  			throw new ApplicationException ("无法取得DEVMODE结构的大小！");  		//分配缓冲   		IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  		//获取DEV_MODE指针   		int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法获得DEVMODE结构！");  		//填充DEV_MODE   		devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  		devMode.dmFields = 0x10000;  		//FORM名称   		devMode.dmFormName = PaperName;  		Marshal.StructureToPtr (devMode' hDevMode' true);  		iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  		if (iRet < 0)  			throw new ApplicationException ("无法为打印机设定打印方向！");  		GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  		if (iPrinterInfoSize == 0)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  		bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  		if (!bSuccess)  			throw new ApplicationException ("调用GetPrinter方法失败！");  		printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  		printerInfo.pDevMode = hDevMode;  		Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  		bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  		if (!bSuccess)  			throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  		SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  	}  	finally {  		ClosePrinter (hPrinter);  	}  }  else {  	StringBuilder strBuilder = new StringBuilder ();  	strBuilder.AppendFormat ("无法打开打印机{0}' 错误代号: {1}"' PrinterName' GetLastError ());  	throw new ApplicationException (strBuilder.ToString ());  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: try {  	//如果Form存在删除之   	DeleteForm (hPrinter' PaperName);  	//创建并初始化FORM_INFO_1   	FormInfo1 formInfo = new FormInfo1 ();  	formInfo.Flags = 0;  	formInfo.pName = PaperName;  	formInfo.Size.width = (int)(WidthInMm * 1000.0);  	formInfo.Size.height = (int)(HeightInMm * 1000.0);  	formInfo.ImageableArea.left = 0;  	formInfo.ImageableArea.right = formInfo.Size.width;  	formInfo.ImageableArea.top = 0;  	formInfo.ImageableArea.bottom = formInfo.Size.height;  	if (!AddForm (hPrinter' 1' ref formInfo)) {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  	//初始化   	const int DM_OUT_BUFFER = 2;  	const int DM_IN_BUFFER = 8;  	structDevMode devMode = new structDevMode ();  	IntPtr hPrinterInfo' hDummy;  	PRINTER_INFO_9 printerInfo;  	printerInfo.pDevMode = IntPtr.Zero;  	int iPrinterInfoSize' iDummyInt;  	int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  	if (iDevModeSize < 0)  		throw new ApplicationException ("无法取得DEVMODE结构的大小！");  	//分配缓冲   	IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  	//获取DEV_MODE指针   	int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法获得DEVMODE结构！");  	//填充DEV_MODE   	devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  	devMode.dmFields = 0x10000;  	//FORM名称   	devMode.dmFormName = PaperName;  	Marshal.StructureToPtr (devMode' hDevMode' true);  	iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法为打印机设定打印方向！");  	GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  	if (iPrinterInfoSize == 0)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  	bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  	if (!bSuccess)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  	printerInfo.pDevMode = hDevMode;  	Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  	bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  	if (!bSuccess)  		throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  	SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  }  finally {  	ClosePrinter (hPrinter);  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: try {  	//如果Form存在删除之   	DeleteForm (hPrinter' PaperName);  	//创建并初始化FORM_INFO_1   	FormInfo1 formInfo = new FormInfo1 ();  	formInfo.Flags = 0;  	formInfo.pName = PaperName;  	formInfo.Size.width = (int)(WidthInMm * 1000.0);  	formInfo.Size.height = (int)(HeightInMm * 1000.0);  	formInfo.ImageableArea.left = 0;  	formInfo.ImageableArea.right = formInfo.Size.width;  	formInfo.ImageableArea.top = 0;  	formInfo.ImageableArea.bottom = formInfo.Size.height;  	if (!AddForm (hPrinter' 1' ref formInfo)) {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  	//初始化   	const int DM_OUT_BUFFER = 2;  	const int DM_IN_BUFFER = 8;  	structDevMode devMode = new structDevMode ();  	IntPtr hPrinterInfo' hDummy;  	PRINTER_INFO_9 printerInfo;  	printerInfo.pDevMode = IntPtr.Zero;  	int iPrinterInfoSize' iDummyInt;  	int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  	if (iDevModeSize < 0)  		throw new ApplicationException ("无法取得DEVMODE结构的大小！");  	//分配缓冲   	IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  	//获取DEV_MODE指针   	int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法获得DEVMODE结构！");  	//填充DEV_MODE   	devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  	devMode.dmFields = 0x10000;  	//FORM名称   	devMode.dmFormName = PaperName;  	Marshal.StructureToPtr (devMode' hDevMode' true);  	iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法为打印机设定打印方向！");  	GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  	if (iPrinterInfoSize == 0)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  	bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  	if (!bSuccess)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  	printerInfo.pDevMode = hDevMode;  	Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  	bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  	if (!bSuccess)  		throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  	SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  }  finally {  	ClosePrinter (hPrinter);  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: try {  	//如果Form存在删除之   	DeleteForm (hPrinter' PaperName);  	//创建并初始化FORM_INFO_1   	FormInfo1 formInfo = new FormInfo1 ();  	formInfo.Flags = 0;  	formInfo.pName = PaperName;  	formInfo.Size.width = (int)(WidthInMm * 1000.0);  	formInfo.Size.height = (int)(HeightInMm * 1000.0);  	formInfo.ImageableArea.left = 0;  	formInfo.ImageableArea.right = formInfo.Size.width;  	formInfo.ImageableArea.top = 0;  	formInfo.ImageableArea.bottom = formInfo.Size.height;  	if (!AddForm (hPrinter' 1' ref formInfo)) {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  	//初始化   	const int DM_OUT_BUFFER = 2;  	const int DM_IN_BUFFER = 8;  	structDevMode devMode = new structDevMode ();  	IntPtr hPrinterInfo' hDummy;  	PRINTER_INFO_9 printerInfo;  	printerInfo.pDevMode = IntPtr.Zero;  	int iPrinterInfoSize' iDummyInt;  	int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  	if (iDevModeSize < 0)  		throw new ApplicationException ("无法取得DEVMODE结构的大小！");  	//分配缓冲   	IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  	//获取DEV_MODE指针   	int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法获得DEVMODE结构！");  	//填充DEV_MODE   	devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  	devMode.dmFields = 0x10000;  	//FORM名称   	devMode.dmFormName = PaperName;  	Marshal.StructureToPtr (devMode' hDevMode' true);  	iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法为打印机设定打印方向！");  	GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  	if (iPrinterInfoSize == 0)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  	bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  	if (!bSuccess)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  	printerInfo.pDevMode = hDevMode;  	Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  	bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  	if (!bSuccess)  		throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  	SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  }  finally {  	ClosePrinter (hPrinter);  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: try {  	//如果Form存在删除之   	DeleteForm (hPrinter' PaperName);  	//创建并初始化FORM_INFO_1   	FormInfo1 formInfo = new FormInfo1 ();  	formInfo.Flags = 0;  	formInfo.pName = PaperName;  	formInfo.Size.width = (int)(WidthInMm * 1000.0);  	formInfo.Size.height = (int)(HeightInMm * 1000.0);  	formInfo.ImageableArea.left = 0;  	formInfo.ImageableArea.right = formInfo.Size.width;  	formInfo.ImageableArea.top = 0;  	formInfo.ImageableArea.bottom = formInfo.Size.height;  	if (!AddForm (hPrinter' 1' ref formInfo)) {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  	//初始化   	const int DM_OUT_BUFFER = 2;  	const int DM_IN_BUFFER = 8;  	structDevMode devMode = new structDevMode ();  	IntPtr hPrinterInfo' hDummy;  	PRINTER_INFO_9 printerInfo;  	printerInfo.pDevMode = IntPtr.Zero;  	int iPrinterInfoSize' iDummyInt;  	int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  	if (iDevModeSize < 0)  		throw new ApplicationException ("无法取得DEVMODE结构的大小！");  	//分配缓冲   	IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  	//获取DEV_MODE指针   	int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法获得DEVMODE结构！");  	//填充DEV_MODE   	devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  	devMode.dmFields = 0x10000;  	//FORM名称   	devMode.dmFormName = PaperName;  	Marshal.StructureToPtr (devMode' hDevMode' true);  	iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法为打印机设定打印方向！");  	GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  	if (iPrinterInfoSize == 0)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  	bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  	if (!bSuccess)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  	printerInfo.pDevMode = hDevMode;  	Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  	bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  	if (!bSuccess)  		throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  	SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  }  finally {  	ClosePrinter (hPrinter);  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: try {  	//如果Form存在删除之   	DeleteForm (hPrinter' PaperName);  	//创建并初始化FORM_INFO_1   	FormInfo1 formInfo = new FormInfo1 ();  	formInfo.Flags = 0;  	formInfo.pName = PaperName;  	formInfo.Size.width = (int)(WidthInMm * 1000.0);  	formInfo.Size.height = (int)(HeightInMm * 1000.0);  	formInfo.ImageableArea.left = 0;  	formInfo.ImageableArea.right = formInfo.Size.width;  	formInfo.ImageableArea.top = 0;  	formInfo.ImageableArea.bottom = formInfo.Size.height;  	if (!AddForm (hPrinter' 1' ref formInfo)) {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  	//初始化   	const int DM_OUT_BUFFER = 2;  	const int DM_IN_BUFFER = 8;  	structDevMode devMode = new structDevMode ();  	IntPtr hPrinterInfo' hDummy;  	PRINTER_INFO_9 printerInfo;  	printerInfo.pDevMode = IntPtr.Zero;  	int iPrinterInfoSize' iDummyInt;  	int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  	if (iDevModeSize < 0)  		throw new ApplicationException ("无法取得DEVMODE结构的大小！");  	//分配缓冲   	IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  	//获取DEV_MODE指针   	int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法获得DEVMODE结构！");  	//填充DEV_MODE   	devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  	devMode.dmFields = 0x10000;  	//FORM名称   	devMode.dmFormName = PaperName;  	Marshal.StructureToPtr (devMode' hDevMode' true);  	iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法为打印机设定打印方向！");  	GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  	if (iPrinterInfoSize == 0)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  	bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  	if (!bSuccess)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  	printerInfo.pDevMode = hDevMode;  	Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  	bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  	if (!bSuccess)  		throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  	SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  }  finally {  	ClosePrinter (hPrinter);  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: try {  	//如果Form存在删除之   	DeleteForm (hPrinter' PaperName);  	//创建并初始化FORM_INFO_1   	FormInfo1 formInfo = new FormInfo1 ();  	formInfo.Flags = 0;  	formInfo.pName = PaperName;  	formInfo.Size.width = (int)(WidthInMm * 1000.0);  	formInfo.Size.height = (int)(HeightInMm * 1000.0);  	formInfo.ImageableArea.left = 0;  	formInfo.ImageableArea.right = formInfo.Size.width;  	formInfo.ImageableArea.top = 0;  	formInfo.ImageableArea.bottom = formInfo.Size.height;  	if (!AddForm (hPrinter' 1' ref formInfo)) {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  	//初始化   	const int DM_OUT_BUFFER = 2;  	const int DM_IN_BUFFER = 8;  	structDevMode devMode = new structDevMode ();  	IntPtr hPrinterInfo' hDummy;  	PRINTER_INFO_9 printerInfo;  	printerInfo.pDevMode = IntPtr.Zero;  	int iPrinterInfoSize' iDummyInt;  	int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  	if (iDevModeSize < 0)  		throw new ApplicationException ("无法取得DEVMODE结构的大小！");  	//分配缓冲   	IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  	//获取DEV_MODE指针   	int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法获得DEVMODE结构！");  	//填充DEV_MODE   	devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  	devMode.dmFields = 0x10000;  	//FORM名称   	devMode.dmFormName = PaperName;  	Marshal.StructureToPtr (devMode' hDevMode' true);  	iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法为打印机设定打印方向！");  	GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  	if (iPrinterInfoSize == 0)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  	bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  	if (!bSuccess)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  	printerInfo.pDevMode = hDevMode;  	Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  	bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  	if (!bSuccess)  		throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  	SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  }  finally {  	ClosePrinter (hPrinter);  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: try {  	//如果Form存在删除之   	DeleteForm (hPrinter' PaperName);  	//创建并初始化FORM_INFO_1   	FormInfo1 formInfo = new FormInfo1 ();  	formInfo.Flags = 0;  	formInfo.pName = PaperName;  	formInfo.Size.width = (int)(WidthInMm * 1000.0);  	formInfo.Size.height = (int)(HeightInMm * 1000.0);  	formInfo.ImageableArea.left = 0;  	formInfo.ImageableArea.right = formInfo.Size.width;  	formInfo.ImageableArea.top = 0;  	formInfo.ImageableArea.bottom = formInfo.Size.height;  	if (!AddForm (hPrinter' 1' ref formInfo)) {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  	//初始化   	const int DM_OUT_BUFFER = 2;  	const int DM_IN_BUFFER = 8;  	structDevMode devMode = new structDevMode ();  	IntPtr hPrinterInfo' hDummy;  	PRINTER_INFO_9 printerInfo;  	printerInfo.pDevMode = IntPtr.Zero;  	int iPrinterInfoSize' iDummyInt;  	int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  	if (iDevModeSize < 0)  		throw new ApplicationException ("无法取得DEVMODE结构的大小！");  	//分配缓冲   	IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  	//获取DEV_MODE指针   	int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法获得DEVMODE结构！");  	//填充DEV_MODE   	devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  	devMode.dmFields = 0x10000;  	//FORM名称   	devMode.dmFormName = PaperName;  	Marshal.StructureToPtr (devMode' hDevMode' true);  	iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法为打印机设定打印方向！");  	GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  	if (iPrinterInfoSize == 0)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  	bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  	if (!bSuccess)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  	printerInfo.pDevMode = hDevMode;  	Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  	bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  	if (!bSuccess)  		throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  	SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  }  finally {  	ClosePrinter (hPrinter);  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: try {  	//如果Form存在删除之   	DeleteForm (hPrinter' PaperName);  	//创建并初始化FORM_INFO_1   	FormInfo1 formInfo = new FormInfo1 ();  	formInfo.Flags = 0;  	formInfo.pName = PaperName;  	formInfo.Size.width = (int)(WidthInMm * 1000.0);  	formInfo.Size.height = (int)(HeightInMm * 1000.0);  	formInfo.ImageableArea.left = 0;  	formInfo.ImageableArea.right = formInfo.Size.width;  	formInfo.ImageableArea.top = 0;  	formInfo.ImageableArea.bottom = formInfo.Size.height;  	if (!AddForm (hPrinter' 1' ref formInfo)) {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  	//初始化   	const int DM_OUT_BUFFER = 2;  	const int DM_IN_BUFFER = 8;  	structDevMode devMode = new structDevMode ();  	IntPtr hPrinterInfo' hDummy;  	PRINTER_INFO_9 printerInfo;  	printerInfo.pDevMode = IntPtr.Zero;  	int iPrinterInfoSize' iDummyInt;  	int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  	if (iDevModeSize < 0)  		throw new ApplicationException ("无法取得DEVMODE结构的大小！");  	//分配缓冲   	IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  	//获取DEV_MODE指针   	int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法获得DEVMODE结构！");  	//填充DEV_MODE   	devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  	devMode.dmFields = 0x10000;  	//FORM名称   	devMode.dmFormName = PaperName;  	Marshal.StructureToPtr (devMode' hDevMode' true);  	iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法为打印机设定打印方向！");  	GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  	if (iPrinterInfoSize == 0)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  	bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  	if (!bSuccess)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  	printerInfo.pDevMode = hDevMode;  	Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  	bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  	if (!bSuccess)  		throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  	SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  }  finally {  	ClosePrinter (hPrinter);  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: try {  	//如果Form存在删除之   	DeleteForm (hPrinter' PaperName);  	//创建并初始化FORM_INFO_1   	FormInfo1 formInfo = new FormInfo1 ();  	formInfo.Flags = 0;  	formInfo.pName = PaperName;  	formInfo.Size.width = (int)(WidthInMm * 1000.0);  	formInfo.Size.height = (int)(HeightInMm * 1000.0);  	formInfo.ImageableArea.left = 0;  	formInfo.ImageableArea.right = formInfo.Size.width;  	formInfo.ImageableArea.top = 0;  	formInfo.ImageableArea.bottom = formInfo.Size.height;  	if (!AddForm (hPrinter' 1' ref formInfo)) {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  	//初始化   	const int DM_OUT_BUFFER = 2;  	const int DM_IN_BUFFER = 8;  	structDevMode devMode = new structDevMode ();  	IntPtr hPrinterInfo' hDummy;  	PRINTER_INFO_9 printerInfo;  	printerInfo.pDevMode = IntPtr.Zero;  	int iPrinterInfoSize' iDummyInt;  	int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  	if (iDevModeSize < 0)  		throw new ApplicationException ("无法取得DEVMODE结构的大小！");  	//分配缓冲   	IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  	//获取DEV_MODE指针   	int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法获得DEVMODE结构！");  	//填充DEV_MODE   	devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  	devMode.dmFields = 0x10000;  	//FORM名称   	devMode.dmFormName = PaperName;  	Marshal.StructureToPtr (devMode' hDevMode' true);  	iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法为打印机设定打印方向！");  	GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  	if (iPrinterInfoSize == 0)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  	bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  	if (!bSuccess)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  	printerInfo.pDevMode = hDevMode;  	Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  	bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  	if (!bSuccess)  		throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  	SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  }  finally {  	ClosePrinter (hPrinter);  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: try {  	//如果Form存在删除之   	DeleteForm (hPrinter' PaperName);  	//创建并初始化FORM_INFO_1   	FormInfo1 formInfo = new FormInfo1 ();  	formInfo.Flags = 0;  	formInfo.pName = PaperName;  	formInfo.Size.width = (int)(WidthInMm * 1000.0);  	formInfo.Size.height = (int)(HeightInMm * 1000.0);  	formInfo.ImageableArea.left = 0;  	formInfo.ImageableArea.right = formInfo.Size.width;  	formInfo.ImageableArea.top = 0;  	formInfo.ImageableArea.bottom = formInfo.Size.height;  	if (!AddForm (hPrinter' 1' ref formInfo)) {  		StringBuilder strBuilder = new StringBuilder ();  		strBuilder.AppendFormat ("向打印机 {1} 添加自定义纸张 {0} 失败！错误代号：{2}"' PaperName' PrinterName' GetLastError ());  		throw new ApplicationException (strBuilder.ToString ());  	}  	//初始化   	const int DM_OUT_BUFFER = 2;  	const int DM_IN_BUFFER = 8;  	structDevMode devMode = new structDevMode ();  	IntPtr hPrinterInfo' hDummy;  	PRINTER_INFO_9 printerInfo;  	printerInfo.pDevMode = IntPtr.Zero;  	int iPrinterInfoSize' iDummyInt;  	int iDevModeSize = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' IntPtr.Zero' IntPtr.Zero' 0);  	if (iDevModeSize < 0)  		throw new ApplicationException ("无法取得DEVMODE结构的大小！");  	//分配缓冲   	IntPtr hDevMode = Marshal.AllocCoTaskMem (iDevModeSize + 100);  	//获取DEV_MODE指针   	int iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' hDevMode' IntPtr.Zero' DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法获得DEVMODE结构！");  	//填充DEV_MODE   	devMode = (structDevMode)Marshal.PtrToStructure (hDevMode' devMode.GetType ());  	devMode.dmFields = 0x10000;  	//FORM名称   	devMode.dmFormName = PaperName;  	Marshal.StructureToPtr (devMode' hDevMode' true);  	iRet = DocumentProperties (IntPtr.Zero' hPrinter' PrinterName' printerInfo.pDevMode' printerInfo.pDevMode' DM_IN_BUFFER | DM_OUT_BUFFER);  	if (iRet < 0)  		throw new ApplicationException ("无法为打印机设定打印方向！");  	GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  	if (iPrinterInfoSize == 0)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  	bool bSuccess = GetPrinter (hPrinter' 9' hPrinterInfo' iPrinterInfoSize' out iDummyInt);  	if (!bSuccess)  		throw new ApplicationException ("调用GetPrinter方法失败！");  	printerInfo = (PRINTER_INFO_9)Marshal.PtrToStructure (hPrinterInfo' printerInfo.GetType ());  	printerInfo.pDevMode = hDevMode;  	Marshal.StructureToPtr (printerInfo' hPrinterInfo' true);  	bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  	if (!bSuccess)  		throw new Win32Exception (Marshal.GetLastWin32Error ()' "调用SetPrinter方法失败，无法进行打印机设置！");  	SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  }  finally {  	ClosePrinter (hPrinter);  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: formInfo.Size.width = (int)(WidthInMm * 1000.0);  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: formInfo.Size.height = (int)(HeightInMm * 1000.0);  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: GetPrinter (hPrinter' 9' IntPtr.Zero' 0' out iPrinterInfoSize);  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: hPrinterInfo = Marshal.AllocCoTaskMem (iPrinterInfoSize + 100);  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: bSuccess = SetPrinter (hPrinter' 9' hPrinterInfo' 0);  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: SendMessageTimeout (new IntPtr (HWND_BROADCAST)' WM_SETTINGCHANGE' IntPtr.Zero' IntPtr.Zero' PrintAPI.SendMessageTimeoutFlags.SMTO_NORMAL' 1000' out hDummy);  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (hDC != IntPtr.Zero) {  	const long DM_PAPERSIZE = 0x00000002L;  	const long DM_PAPERLENGTH = 0x00000004L;  	const long DM_PAPERWIDTH = 0x00000008L;  	pDevMode.dmFields = (int)(DM_PAPERSIZE | DM_PAPERWIDTH | DM_PAPERLENGTH);  	pDevMode.dmPaperSize = 256;  	pDevMode.dmPaperWidth = (short)(WidthInMm * 1000.0);  	pDevMode.dmPaperLength = (short)(HeightInMm * 1000.0);  	ResetDC (hDC' ref pDevMode);  	DeleteDC (hDC);  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (hDC != IntPtr.Zero) {  	const long DM_PAPERSIZE = 0x00000002L;  	const long DM_PAPERLENGTH = 0x00000004L;  	const long DM_PAPERWIDTH = 0x00000008L;  	pDevMode.dmFields = (int)(DM_PAPERSIZE | DM_PAPERWIDTH | DM_PAPERLENGTH);  	pDevMode.dmPaperSize = 256;  	pDevMode.dmPaperWidth = (short)(WidthInMm * 1000.0);  	pDevMode.dmPaperLength = (short)(HeightInMm * 1000.0);  	ResetDC (hDC' ref pDevMode);  	DeleteDC (hDC);  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: if (hDC != IntPtr.Zero) {  	const long DM_PAPERSIZE = 0x00000002L;  	const long DM_PAPERLENGTH = 0x00000004L;  	const long DM_PAPERWIDTH = 0x00000008L;  	pDevMode.dmFields = (int)(DM_PAPERSIZE | DM_PAPERWIDTH | DM_PAPERLENGTH);  	pDevMode.dmPaperSize = 256;  	pDevMode.dmPaperWidth = (short)(WidthInMm * 1000.0);  	pDevMode.dmPaperLength = (short)(HeightInMm * 1000.0);  	ResetDC (hDC' ref pDevMode);  	DeleteDC (hDC);  }  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: pDevMode.dmPaperSize = 256;  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: pDevMode.dmPaperWidth = (short)(WidthInMm * 1000.0);  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,AddCustomPaperSize,The following statement contains a magic number: pDevMode.dmPaperLength = (short)(HeightInMm * 1000.0);  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,FromInchToCM,The following statement contains a magic number: return Math.Round ((System.Convert.ToDecimal ((inch / 100)) * System.Convert.ToDecimal (2.5400))' 2);  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,FromInchToCM,The following statement contains a magic number: return Math.Round ((System.Convert.ToDecimal ((inch / 100)) * System.Convert.ToDecimal (2.5400))' 2);  
Magic Number,Mder.FC.Print,PrintAPI,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,FromInchToCM,The following statement contains a magic number: return Math.Round ((System.Convert.ToDecimal ((inch / 100)) * System.Convert.ToDecimal (2.5400))' 2);  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: try {  	// Before starting first page' it saves Width & Height of Headers and CoulmnType  	if (PageNo == 1) {  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			// Skip if the current column not selected  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			// Detemining whether the columns are fitted to page or not.  			if (FitToPageWidth)  				tmpWidth = (int)(Math.Floor ((double)((double)GridCol.Width / (double)TotalWidth * (double)TotalWidth * ((double)e.MarginBounds.Width / (double)TotalWidth))));  			else  				tmpWidth = GridCol.Width;  			HeaderHeight = (int)(e.Graphics.MeasureString (GridCol.HeaderText' GridCol.InheritedStyle.Font' tmpWidth).Height) + 11;  			// Save width & height of headres and ColumnType  			ColumnLefts.Add (tmpLeft);  			ColumnWidths.Add (tmpWidth);  			ColumnTypes.Add (GridCol.GetType ());  			tmpLeft += tmpWidth;  		}  	}  	// Printing Current Page' Row by Row  	while (RowPos <= dgv.Rows.Count - 1) {  		DataGridViewRow GridRow = dgv.Rows [RowPos];  		if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  			RowPos++;  			continue;  		}  		CellHeight = GridRow.Height;  		if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  			DrawFooter (e' RowsPerPage);  			NewPage = true;  			PageNo++;  			e.HasMorePages = true;  			return;  		}  		else {  			if (NewPage) {  				// Draw Header  				e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  				e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				// Draw Columns  				tmpTop = e.MarginBounds.Top;  				i = 0;  				foreach (DataGridViewColumn GridCol in dgv.Columns) {  					if (!GridCol.Visible)  						continue;  					if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  						continue;  					e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  					i++;  				}  				NewPage = false;  				tmpTop += HeaderHeight;  			}  			// Draw Columns Contents  			i = 0;  			foreach (DataGridViewCell Cel in GridRow.Cells) {  				if (!Cel.OwningColumn.Visible)  					continue;  				if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  					continue;  				// For the TextBox Column  				if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  				}  				// For the Button Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  					CellButton.Text = Cel.Value.ToString ();  					CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  					CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the CheckBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  					CellCheckBox.Size = new Size (14' 14);  					CellCheckBox.Checked = (bool)Cel.Value;  					Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  					Graphics tmpGraphics = Graphics.FromImage (bmp);  					tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  					CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the ComboBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  					CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  					CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  				}  				// For the Image Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  					Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  					Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  					e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  				}  				// Drawing Cells Borders   				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  				i++;  			}  			tmpTop += CellHeight;  		}  		RowPos++;  		// For the first page it calculates Rows per Page  		if (PageNo == 1)  			RowsPerPage++;  	}  	if (RowsPerPage == 0)  		return;  	// Write Footer (Page Number)  	DrawFooter (e' RowsPerPage);  	e.HasMorePages = false;  }  catch (Exception ex) {  	MessageBox.Show (ex.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: try {  	// Before starting first page' it saves Width & Height of Headers and CoulmnType  	if (PageNo == 1) {  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			// Skip if the current column not selected  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			// Detemining whether the columns are fitted to page or not.  			if (FitToPageWidth)  				tmpWidth = (int)(Math.Floor ((double)((double)GridCol.Width / (double)TotalWidth * (double)TotalWidth * ((double)e.MarginBounds.Width / (double)TotalWidth))));  			else  				tmpWidth = GridCol.Width;  			HeaderHeight = (int)(e.Graphics.MeasureString (GridCol.HeaderText' GridCol.InheritedStyle.Font' tmpWidth).Height) + 11;  			// Save width & height of headres and ColumnType  			ColumnLefts.Add (tmpLeft);  			ColumnWidths.Add (tmpWidth);  			ColumnTypes.Add (GridCol.GetType ());  			tmpLeft += tmpWidth;  		}  	}  	// Printing Current Page' Row by Row  	while (RowPos <= dgv.Rows.Count - 1) {  		DataGridViewRow GridRow = dgv.Rows [RowPos];  		if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  			RowPos++;  			continue;  		}  		CellHeight = GridRow.Height;  		if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  			DrawFooter (e' RowsPerPage);  			NewPage = true;  			PageNo++;  			e.HasMorePages = true;  			return;  		}  		else {  			if (NewPage) {  				// Draw Header  				e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  				e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				// Draw Columns  				tmpTop = e.MarginBounds.Top;  				i = 0;  				foreach (DataGridViewColumn GridCol in dgv.Columns) {  					if (!GridCol.Visible)  						continue;  					if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  						continue;  					e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  					i++;  				}  				NewPage = false;  				tmpTop += HeaderHeight;  			}  			// Draw Columns Contents  			i = 0;  			foreach (DataGridViewCell Cel in GridRow.Cells) {  				if (!Cel.OwningColumn.Visible)  					continue;  				if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  					continue;  				// For the TextBox Column  				if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  				}  				// For the Button Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  					CellButton.Text = Cel.Value.ToString ();  					CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  					CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the CheckBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  					CellCheckBox.Size = new Size (14' 14);  					CellCheckBox.Checked = (bool)Cel.Value;  					Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  					Graphics tmpGraphics = Graphics.FromImage (bmp);  					tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  					CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the ComboBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  					CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  					CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  				}  				// For the Image Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  					Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  					Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  					e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  				}  				// Drawing Cells Borders   				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  				i++;  			}  			tmpTop += CellHeight;  		}  		RowPos++;  		// For the first page it calculates Rows per Page  		if (PageNo == 1)  			RowsPerPage++;  	}  	if (RowsPerPage == 0)  		return;  	// Write Footer (Page Number)  	DrawFooter (e' RowsPerPage);  	e.HasMorePages = false;  }  catch (Exception ex) {  	MessageBox.Show (ex.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: try {  	// Before starting first page' it saves Width & Height of Headers and CoulmnType  	if (PageNo == 1) {  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			// Skip if the current column not selected  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			// Detemining whether the columns are fitted to page or not.  			if (FitToPageWidth)  				tmpWidth = (int)(Math.Floor ((double)((double)GridCol.Width / (double)TotalWidth * (double)TotalWidth * ((double)e.MarginBounds.Width / (double)TotalWidth))));  			else  				tmpWidth = GridCol.Width;  			HeaderHeight = (int)(e.Graphics.MeasureString (GridCol.HeaderText' GridCol.InheritedStyle.Font' tmpWidth).Height) + 11;  			// Save width & height of headres and ColumnType  			ColumnLefts.Add (tmpLeft);  			ColumnWidths.Add (tmpWidth);  			ColumnTypes.Add (GridCol.GetType ());  			tmpLeft += tmpWidth;  		}  	}  	// Printing Current Page' Row by Row  	while (RowPos <= dgv.Rows.Count - 1) {  		DataGridViewRow GridRow = dgv.Rows [RowPos];  		if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  			RowPos++;  			continue;  		}  		CellHeight = GridRow.Height;  		if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  			DrawFooter (e' RowsPerPage);  			NewPage = true;  			PageNo++;  			e.HasMorePages = true;  			return;  		}  		else {  			if (NewPage) {  				// Draw Header  				e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  				e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				// Draw Columns  				tmpTop = e.MarginBounds.Top;  				i = 0;  				foreach (DataGridViewColumn GridCol in dgv.Columns) {  					if (!GridCol.Visible)  						continue;  					if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  						continue;  					e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  					i++;  				}  				NewPage = false;  				tmpTop += HeaderHeight;  			}  			// Draw Columns Contents  			i = 0;  			foreach (DataGridViewCell Cel in GridRow.Cells) {  				if (!Cel.OwningColumn.Visible)  					continue;  				if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  					continue;  				// For the TextBox Column  				if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  				}  				// For the Button Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  					CellButton.Text = Cel.Value.ToString ();  					CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  					CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the CheckBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  					CellCheckBox.Size = new Size (14' 14);  					CellCheckBox.Checked = (bool)Cel.Value;  					Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  					Graphics tmpGraphics = Graphics.FromImage (bmp);  					tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  					CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the ComboBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  					CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  					CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  				}  				// For the Image Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  					Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  					Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  					e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  				}  				// Drawing Cells Borders   				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  				i++;  			}  			tmpTop += CellHeight;  		}  		RowPos++;  		// For the first page it calculates Rows per Page  		if (PageNo == 1)  			RowsPerPage++;  	}  	if (RowsPerPage == 0)  		return;  	// Write Footer (Page Number)  	DrawFooter (e' RowsPerPage);  	e.HasMorePages = false;  }  catch (Exception ex) {  	MessageBox.Show (ex.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: try {  	// Before starting first page' it saves Width & Height of Headers and CoulmnType  	if (PageNo == 1) {  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			// Skip if the current column not selected  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			// Detemining whether the columns are fitted to page or not.  			if (FitToPageWidth)  				tmpWidth = (int)(Math.Floor ((double)((double)GridCol.Width / (double)TotalWidth * (double)TotalWidth * ((double)e.MarginBounds.Width / (double)TotalWidth))));  			else  				tmpWidth = GridCol.Width;  			HeaderHeight = (int)(e.Graphics.MeasureString (GridCol.HeaderText' GridCol.InheritedStyle.Font' tmpWidth).Height) + 11;  			// Save width & height of headres and ColumnType  			ColumnLefts.Add (tmpLeft);  			ColumnWidths.Add (tmpWidth);  			ColumnTypes.Add (GridCol.GetType ());  			tmpLeft += tmpWidth;  		}  	}  	// Printing Current Page' Row by Row  	while (RowPos <= dgv.Rows.Count - 1) {  		DataGridViewRow GridRow = dgv.Rows [RowPos];  		if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  			RowPos++;  			continue;  		}  		CellHeight = GridRow.Height;  		if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  			DrawFooter (e' RowsPerPage);  			NewPage = true;  			PageNo++;  			e.HasMorePages = true;  			return;  		}  		else {  			if (NewPage) {  				// Draw Header  				e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  				e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				// Draw Columns  				tmpTop = e.MarginBounds.Top;  				i = 0;  				foreach (DataGridViewColumn GridCol in dgv.Columns) {  					if (!GridCol.Visible)  						continue;  					if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  						continue;  					e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  					i++;  				}  				NewPage = false;  				tmpTop += HeaderHeight;  			}  			// Draw Columns Contents  			i = 0;  			foreach (DataGridViewCell Cel in GridRow.Cells) {  				if (!Cel.OwningColumn.Visible)  					continue;  				if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  					continue;  				// For the TextBox Column  				if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  				}  				// For the Button Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  					CellButton.Text = Cel.Value.ToString ();  					CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  					CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the CheckBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  					CellCheckBox.Size = new Size (14' 14);  					CellCheckBox.Checked = (bool)Cel.Value;  					Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  					Graphics tmpGraphics = Graphics.FromImage (bmp);  					tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  					CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the ComboBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  					CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  					CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  				}  				// For the Image Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  					Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  					Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  					e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  				}  				// Drawing Cells Borders   				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  				i++;  			}  			tmpTop += CellHeight;  		}  		RowPos++;  		// For the first page it calculates Rows per Page  		if (PageNo == 1)  			RowsPerPage++;  	}  	if (RowsPerPage == 0)  		return;  	// Write Footer (Page Number)  	DrawFooter (e' RowsPerPage);  	e.HasMorePages = false;  }  catch (Exception ex) {  	MessageBox.Show (ex.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: try {  	// Before starting first page' it saves Width & Height of Headers and CoulmnType  	if (PageNo == 1) {  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			// Skip if the current column not selected  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			// Detemining whether the columns are fitted to page or not.  			if (FitToPageWidth)  				tmpWidth = (int)(Math.Floor ((double)((double)GridCol.Width / (double)TotalWidth * (double)TotalWidth * ((double)e.MarginBounds.Width / (double)TotalWidth))));  			else  				tmpWidth = GridCol.Width;  			HeaderHeight = (int)(e.Graphics.MeasureString (GridCol.HeaderText' GridCol.InheritedStyle.Font' tmpWidth).Height) + 11;  			// Save width & height of headres and ColumnType  			ColumnLefts.Add (tmpLeft);  			ColumnWidths.Add (tmpWidth);  			ColumnTypes.Add (GridCol.GetType ());  			tmpLeft += tmpWidth;  		}  	}  	// Printing Current Page' Row by Row  	while (RowPos <= dgv.Rows.Count - 1) {  		DataGridViewRow GridRow = dgv.Rows [RowPos];  		if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  			RowPos++;  			continue;  		}  		CellHeight = GridRow.Height;  		if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  			DrawFooter (e' RowsPerPage);  			NewPage = true;  			PageNo++;  			e.HasMorePages = true;  			return;  		}  		else {  			if (NewPage) {  				// Draw Header  				e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  				e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				// Draw Columns  				tmpTop = e.MarginBounds.Top;  				i = 0;  				foreach (DataGridViewColumn GridCol in dgv.Columns) {  					if (!GridCol.Visible)  						continue;  					if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  						continue;  					e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  					i++;  				}  				NewPage = false;  				tmpTop += HeaderHeight;  			}  			// Draw Columns Contents  			i = 0;  			foreach (DataGridViewCell Cel in GridRow.Cells) {  				if (!Cel.OwningColumn.Visible)  					continue;  				if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  					continue;  				// For the TextBox Column  				if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  				}  				// For the Button Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  					CellButton.Text = Cel.Value.ToString ();  					CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  					CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the CheckBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  					CellCheckBox.Size = new Size (14' 14);  					CellCheckBox.Checked = (bool)Cel.Value;  					Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  					Graphics tmpGraphics = Graphics.FromImage (bmp);  					tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  					CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the ComboBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  					CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  					CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  				}  				// For the Image Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  					Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  					Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  					e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  				}  				// Drawing Cells Borders   				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  				i++;  			}  			tmpTop += CellHeight;  		}  		RowPos++;  		// For the first page it calculates Rows per Page  		if (PageNo == 1)  			RowsPerPage++;  	}  	if (RowsPerPage == 0)  		return;  	// Write Footer (Page Number)  	DrawFooter (e' RowsPerPage);  	e.HasMorePages = false;  }  catch (Exception ex) {  	MessageBox.Show (ex.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: try {  	// Before starting first page' it saves Width & Height of Headers and CoulmnType  	if (PageNo == 1) {  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			// Skip if the current column not selected  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			// Detemining whether the columns are fitted to page or not.  			if (FitToPageWidth)  				tmpWidth = (int)(Math.Floor ((double)((double)GridCol.Width / (double)TotalWidth * (double)TotalWidth * ((double)e.MarginBounds.Width / (double)TotalWidth))));  			else  				tmpWidth = GridCol.Width;  			HeaderHeight = (int)(e.Graphics.MeasureString (GridCol.HeaderText' GridCol.InheritedStyle.Font' tmpWidth).Height) + 11;  			// Save width & height of headres and ColumnType  			ColumnLefts.Add (tmpLeft);  			ColumnWidths.Add (tmpWidth);  			ColumnTypes.Add (GridCol.GetType ());  			tmpLeft += tmpWidth;  		}  	}  	// Printing Current Page' Row by Row  	while (RowPos <= dgv.Rows.Count - 1) {  		DataGridViewRow GridRow = dgv.Rows [RowPos];  		if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  			RowPos++;  			continue;  		}  		CellHeight = GridRow.Height;  		if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  			DrawFooter (e' RowsPerPage);  			NewPage = true;  			PageNo++;  			e.HasMorePages = true;  			return;  		}  		else {  			if (NewPage) {  				// Draw Header  				e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  				e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				// Draw Columns  				tmpTop = e.MarginBounds.Top;  				i = 0;  				foreach (DataGridViewColumn GridCol in dgv.Columns) {  					if (!GridCol.Visible)  						continue;  					if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  						continue;  					e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  					i++;  				}  				NewPage = false;  				tmpTop += HeaderHeight;  			}  			// Draw Columns Contents  			i = 0;  			foreach (DataGridViewCell Cel in GridRow.Cells) {  				if (!Cel.OwningColumn.Visible)  					continue;  				if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  					continue;  				// For the TextBox Column  				if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  				}  				// For the Button Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  					CellButton.Text = Cel.Value.ToString ();  					CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  					CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the CheckBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  					CellCheckBox.Size = new Size (14' 14);  					CellCheckBox.Checked = (bool)Cel.Value;  					Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  					Graphics tmpGraphics = Graphics.FromImage (bmp);  					tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  					CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the ComboBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  					CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  					CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  				}  				// For the Image Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  					Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  					Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  					e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  				}  				// Drawing Cells Borders   				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  				i++;  			}  			tmpTop += CellHeight;  		}  		RowPos++;  		// For the first page it calculates Rows per Page  		if (PageNo == 1)  			RowsPerPage++;  	}  	if (RowsPerPage == 0)  		return;  	// Write Footer (Page Number)  	DrawFooter (e' RowsPerPage);  	e.HasMorePages = false;  }  catch (Exception ex) {  	MessageBox.Show (ex.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: try {  	// Before starting first page' it saves Width & Height of Headers and CoulmnType  	if (PageNo == 1) {  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			// Skip if the current column not selected  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			// Detemining whether the columns are fitted to page or not.  			if (FitToPageWidth)  				tmpWidth = (int)(Math.Floor ((double)((double)GridCol.Width / (double)TotalWidth * (double)TotalWidth * ((double)e.MarginBounds.Width / (double)TotalWidth))));  			else  				tmpWidth = GridCol.Width;  			HeaderHeight = (int)(e.Graphics.MeasureString (GridCol.HeaderText' GridCol.InheritedStyle.Font' tmpWidth).Height) + 11;  			// Save width & height of headres and ColumnType  			ColumnLefts.Add (tmpLeft);  			ColumnWidths.Add (tmpWidth);  			ColumnTypes.Add (GridCol.GetType ());  			tmpLeft += tmpWidth;  		}  	}  	// Printing Current Page' Row by Row  	while (RowPos <= dgv.Rows.Count - 1) {  		DataGridViewRow GridRow = dgv.Rows [RowPos];  		if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  			RowPos++;  			continue;  		}  		CellHeight = GridRow.Height;  		if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  			DrawFooter (e' RowsPerPage);  			NewPage = true;  			PageNo++;  			e.HasMorePages = true;  			return;  		}  		else {  			if (NewPage) {  				// Draw Header  				e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  				e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				// Draw Columns  				tmpTop = e.MarginBounds.Top;  				i = 0;  				foreach (DataGridViewColumn GridCol in dgv.Columns) {  					if (!GridCol.Visible)  						continue;  					if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  						continue;  					e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  					i++;  				}  				NewPage = false;  				tmpTop += HeaderHeight;  			}  			// Draw Columns Contents  			i = 0;  			foreach (DataGridViewCell Cel in GridRow.Cells) {  				if (!Cel.OwningColumn.Visible)  					continue;  				if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  					continue;  				// For the TextBox Column  				if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  				}  				// For the Button Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  					CellButton.Text = Cel.Value.ToString ();  					CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  					CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the CheckBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  					CellCheckBox.Size = new Size (14' 14);  					CellCheckBox.Checked = (bool)Cel.Value;  					Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  					Graphics tmpGraphics = Graphics.FromImage (bmp);  					tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  					CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the ComboBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  					CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  					CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  				}  				// For the Image Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  					Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  					Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  					e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  				}  				// Drawing Cells Borders   				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  				i++;  			}  			tmpTop += CellHeight;  		}  		RowPos++;  		// For the first page it calculates Rows per Page  		if (PageNo == 1)  			RowsPerPage++;  	}  	if (RowsPerPage == 0)  		return;  	// Write Footer (Page Number)  	DrawFooter (e' RowsPerPage);  	e.HasMorePages = false;  }  catch (Exception ex) {  	MessageBox.Show (ex.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: try {  	// Before starting first page' it saves Width & Height of Headers and CoulmnType  	if (PageNo == 1) {  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			// Skip if the current column not selected  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			// Detemining whether the columns are fitted to page or not.  			if (FitToPageWidth)  				tmpWidth = (int)(Math.Floor ((double)((double)GridCol.Width / (double)TotalWidth * (double)TotalWidth * ((double)e.MarginBounds.Width / (double)TotalWidth))));  			else  				tmpWidth = GridCol.Width;  			HeaderHeight = (int)(e.Graphics.MeasureString (GridCol.HeaderText' GridCol.InheritedStyle.Font' tmpWidth).Height) + 11;  			// Save width & height of headres and ColumnType  			ColumnLefts.Add (tmpLeft);  			ColumnWidths.Add (tmpWidth);  			ColumnTypes.Add (GridCol.GetType ());  			tmpLeft += tmpWidth;  		}  	}  	// Printing Current Page' Row by Row  	while (RowPos <= dgv.Rows.Count - 1) {  		DataGridViewRow GridRow = dgv.Rows [RowPos];  		if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  			RowPos++;  			continue;  		}  		CellHeight = GridRow.Height;  		if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  			DrawFooter (e' RowsPerPage);  			NewPage = true;  			PageNo++;  			e.HasMorePages = true;  			return;  		}  		else {  			if (NewPage) {  				// Draw Header  				e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  				e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				// Draw Columns  				tmpTop = e.MarginBounds.Top;  				i = 0;  				foreach (DataGridViewColumn GridCol in dgv.Columns) {  					if (!GridCol.Visible)  						continue;  					if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  						continue;  					e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  					i++;  				}  				NewPage = false;  				tmpTop += HeaderHeight;  			}  			// Draw Columns Contents  			i = 0;  			foreach (DataGridViewCell Cel in GridRow.Cells) {  				if (!Cel.OwningColumn.Visible)  					continue;  				if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  					continue;  				// For the TextBox Column  				if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  				}  				// For the Button Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  					CellButton.Text = Cel.Value.ToString ();  					CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  					CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the CheckBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  					CellCheckBox.Size = new Size (14' 14);  					CellCheckBox.Checked = (bool)Cel.Value;  					Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  					Graphics tmpGraphics = Graphics.FromImage (bmp);  					tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  					CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the ComboBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  					CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  					CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  				}  				// For the Image Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  					Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  					Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  					e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  				}  				// Drawing Cells Borders   				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  				i++;  			}  			tmpTop += CellHeight;  		}  		RowPos++;  		// For the first page it calculates Rows per Page  		if (PageNo == 1)  			RowsPerPage++;  	}  	if (RowsPerPage == 0)  		return;  	// Write Footer (Page Number)  	DrawFooter (e' RowsPerPage);  	e.HasMorePages = false;  }  catch (Exception ex) {  	MessageBox.Show (ex.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: try {  	// Before starting first page' it saves Width & Height of Headers and CoulmnType  	if (PageNo == 1) {  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			// Skip if the current column not selected  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			// Detemining whether the columns are fitted to page or not.  			if (FitToPageWidth)  				tmpWidth = (int)(Math.Floor ((double)((double)GridCol.Width / (double)TotalWidth * (double)TotalWidth * ((double)e.MarginBounds.Width / (double)TotalWidth))));  			else  				tmpWidth = GridCol.Width;  			HeaderHeight = (int)(e.Graphics.MeasureString (GridCol.HeaderText' GridCol.InheritedStyle.Font' tmpWidth).Height) + 11;  			// Save width & height of headres and ColumnType  			ColumnLefts.Add (tmpLeft);  			ColumnWidths.Add (tmpWidth);  			ColumnTypes.Add (GridCol.GetType ());  			tmpLeft += tmpWidth;  		}  	}  	// Printing Current Page' Row by Row  	while (RowPos <= dgv.Rows.Count - 1) {  		DataGridViewRow GridRow = dgv.Rows [RowPos];  		if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  			RowPos++;  			continue;  		}  		CellHeight = GridRow.Height;  		if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  			DrawFooter (e' RowsPerPage);  			NewPage = true;  			PageNo++;  			e.HasMorePages = true;  			return;  		}  		else {  			if (NewPage) {  				// Draw Header  				e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  				e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				// Draw Columns  				tmpTop = e.MarginBounds.Top;  				i = 0;  				foreach (DataGridViewColumn GridCol in dgv.Columns) {  					if (!GridCol.Visible)  						continue;  					if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  						continue;  					e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  					i++;  				}  				NewPage = false;  				tmpTop += HeaderHeight;  			}  			// Draw Columns Contents  			i = 0;  			foreach (DataGridViewCell Cel in GridRow.Cells) {  				if (!Cel.OwningColumn.Visible)  					continue;  				if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  					continue;  				// For the TextBox Column  				if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  				}  				// For the Button Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  					CellButton.Text = Cel.Value.ToString ();  					CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  					CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the CheckBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  					CellCheckBox.Size = new Size (14' 14);  					CellCheckBox.Checked = (bool)Cel.Value;  					Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  					Graphics tmpGraphics = Graphics.FromImage (bmp);  					tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  					CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the ComboBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  					CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  					CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  				}  				// For the Image Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  					Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  					Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  					e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  				}  				// Drawing Cells Borders   				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  				i++;  			}  			tmpTop += CellHeight;  		}  		RowPos++;  		// For the first page it calculates Rows per Page  		if (PageNo == 1)  			RowsPerPage++;  	}  	if (RowsPerPage == 0)  		return;  	// Write Footer (Page Number)  	DrawFooter (e' RowsPerPage);  	e.HasMorePages = false;  }  catch (Exception ex) {  	MessageBox.Show (ex.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: try {  	// Before starting first page' it saves Width & Height of Headers and CoulmnType  	if (PageNo == 1) {  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			// Skip if the current column not selected  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			// Detemining whether the columns are fitted to page or not.  			if (FitToPageWidth)  				tmpWidth = (int)(Math.Floor ((double)((double)GridCol.Width / (double)TotalWidth * (double)TotalWidth * ((double)e.MarginBounds.Width / (double)TotalWidth))));  			else  				tmpWidth = GridCol.Width;  			HeaderHeight = (int)(e.Graphics.MeasureString (GridCol.HeaderText' GridCol.InheritedStyle.Font' tmpWidth).Height) + 11;  			// Save width & height of headres and ColumnType  			ColumnLefts.Add (tmpLeft);  			ColumnWidths.Add (tmpWidth);  			ColumnTypes.Add (GridCol.GetType ());  			tmpLeft += tmpWidth;  		}  	}  	// Printing Current Page' Row by Row  	while (RowPos <= dgv.Rows.Count - 1) {  		DataGridViewRow GridRow = dgv.Rows [RowPos];  		if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  			RowPos++;  			continue;  		}  		CellHeight = GridRow.Height;  		if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  			DrawFooter (e' RowsPerPage);  			NewPage = true;  			PageNo++;  			e.HasMorePages = true;  			return;  		}  		else {  			if (NewPage) {  				// Draw Header  				e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  				e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  				// Draw Columns  				tmpTop = e.MarginBounds.Top;  				i = 0;  				foreach (DataGridViewColumn GridCol in dgv.Columns) {  					if (!GridCol.Visible)  						continue;  					if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  						continue;  					e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  					e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  					i++;  				}  				NewPage = false;  				tmpTop += HeaderHeight;  			}  			// Draw Columns Contents  			i = 0;  			foreach (DataGridViewCell Cel in GridRow.Cells) {  				if (!Cel.OwningColumn.Visible)  					continue;  				if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  					continue;  				// For the TextBox Column  				if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  				}  				// For the Button Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  					CellButton.Text = Cel.Value.ToString ();  					CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  					CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the CheckBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  					CellCheckBox.Size = new Size (14' 14);  					CellCheckBox.Checked = (bool)Cel.Value;  					Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  					Graphics tmpGraphics = Graphics.FromImage (bmp);  					tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  					CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				}  				// For the ComboBox Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  					CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  					Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  					CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  					e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  					e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  				}  				// For the Image Column  				else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  					Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  					Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  					e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  				}  				// Drawing Cells Borders   				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  				i++;  			}  			tmpTop += CellHeight;  		}  		RowPos++;  		// For the first page it calculates Rows per Page  		if (PageNo == 1)  			RowsPerPage++;  	}  	if (RowsPerPage == 0)  		return;  	// Write Footer (Page Number)  	DrawFooter (e' RowsPerPage);  	e.HasMorePages = false;  }  catch (Exception ex) {  	MessageBox.Show (ex.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (PageNo == 1) {  	foreach (DataGridViewColumn GridCol in dgv.Columns) {  		if (!GridCol.Visible)  			continue;  		// Skip if the current column not selected  		if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  			continue;  		// Detemining whether the columns are fitted to page or not.  		if (FitToPageWidth)  			tmpWidth = (int)(Math.Floor ((double)((double)GridCol.Width / (double)TotalWidth * (double)TotalWidth * ((double)e.MarginBounds.Width / (double)TotalWidth))));  		else  			tmpWidth = GridCol.Width;  		HeaderHeight = (int)(e.Graphics.MeasureString (GridCol.HeaderText' GridCol.InheritedStyle.Font' tmpWidth).Height) + 11;  		// Save width & height of headres and ColumnType  		ColumnLefts.Add (tmpLeft);  		ColumnWidths.Add (tmpWidth);  		ColumnTypes.Add (GridCol.GetType ());  		tmpLeft += tmpWidth;  	}  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: foreach (DataGridViewColumn GridCol in dgv.Columns) {  	if (!GridCol.Visible)  		continue;  	// Skip if the current column not selected  	if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  		continue;  	// Detemining whether the columns are fitted to page or not.  	if (FitToPageWidth)  		tmpWidth = (int)(Math.Floor ((double)((double)GridCol.Width / (double)TotalWidth * (double)TotalWidth * ((double)e.MarginBounds.Width / (double)TotalWidth))));  	else  		tmpWidth = GridCol.Width;  	HeaderHeight = (int)(e.Graphics.MeasureString (GridCol.HeaderText' GridCol.InheritedStyle.Font' tmpWidth).Height) + 11;  	// Save width & height of headres and ColumnType  	ColumnLefts.Add (tmpLeft);  	ColumnWidths.Add (tmpWidth);  	ColumnTypes.Add (GridCol.GetType ());  	tmpLeft += tmpWidth;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: HeaderHeight = (int)(e.Graphics.MeasureString (GridCol.HeaderText' GridCol.InheritedStyle.Font' tmpWidth).Height) + 11;  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: while (RowPos <= dgv.Rows.Count - 1) {  	DataGridViewRow GridRow = dgv.Rows [RowPos];  	if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  		RowPos++;  		continue;  	}  	CellHeight = GridRow.Height;  	if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  		DrawFooter (e' RowsPerPage);  		NewPage = true;  		PageNo++;  		e.HasMorePages = true;  		return;  	}  	else {  		if (NewPage) {  			// Draw Header  			e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  			e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			// Draw Columns  			tmpTop = e.MarginBounds.Top;  			i = 0;  			foreach (DataGridViewColumn GridCol in dgv.Columns) {  				if (!GridCol.Visible)  					continue;  				if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  					continue;  				e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  				i++;  			}  			NewPage = false;  			tmpTop += HeaderHeight;  		}  		// Draw Columns Contents  		i = 0;  		foreach (DataGridViewCell Cel in GridRow.Cells) {  			if (!Cel.OwningColumn.Visible)  				continue;  			if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  				continue;  			// For the TextBox Column  			if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  			}  			// For the Button Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  				CellButton.Text = Cel.Value.ToString ();  				CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  				CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the CheckBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  				CellCheckBox.Size = new Size (14' 14);  				CellCheckBox.Checked = (bool)Cel.Value;  				Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  				Graphics tmpGraphics = Graphics.FromImage (bmp);  				tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  				CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the ComboBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  				CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  				CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  			}  			// For the Image Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  				Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  				Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  				e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  			}  			// Drawing Cells Borders   			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  			i++;  		}  		tmpTop += CellHeight;  	}  	RowPos++;  	// For the first page it calculates Rows per Page  	if (PageNo == 1)  		RowsPerPage++;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: while (RowPos <= dgv.Rows.Count - 1) {  	DataGridViewRow GridRow = dgv.Rows [RowPos];  	if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  		RowPos++;  		continue;  	}  	CellHeight = GridRow.Height;  	if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  		DrawFooter (e' RowsPerPage);  		NewPage = true;  		PageNo++;  		e.HasMorePages = true;  		return;  	}  	else {  		if (NewPage) {  			// Draw Header  			e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  			e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			// Draw Columns  			tmpTop = e.MarginBounds.Top;  			i = 0;  			foreach (DataGridViewColumn GridCol in dgv.Columns) {  				if (!GridCol.Visible)  					continue;  				if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  					continue;  				e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  				i++;  			}  			NewPage = false;  			tmpTop += HeaderHeight;  		}  		// Draw Columns Contents  		i = 0;  		foreach (DataGridViewCell Cel in GridRow.Cells) {  			if (!Cel.OwningColumn.Visible)  				continue;  			if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  				continue;  			// For the TextBox Column  			if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  			}  			// For the Button Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  				CellButton.Text = Cel.Value.ToString ();  				CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  				CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the CheckBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  				CellCheckBox.Size = new Size (14' 14);  				CellCheckBox.Checked = (bool)Cel.Value;  				Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  				Graphics tmpGraphics = Graphics.FromImage (bmp);  				tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  				CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the ComboBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  				CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  				CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  			}  			// For the Image Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  				Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  				Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  				e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  			}  			// Drawing Cells Borders   			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  			i++;  		}  		tmpTop += CellHeight;  	}  	RowPos++;  	// For the first page it calculates Rows per Page  	if (PageNo == 1)  		RowsPerPage++;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: while (RowPos <= dgv.Rows.Count - 1) {  	DataGridViewRow GridRow = dgv.Rows [RowPos];  	if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  		RowPos++;  		continue;  	}  	CellHeight = GridRow.Height;  	if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  		DrawFooter (e' RowsPerPage);  		NewPage = true;  		PageNo++;  		e.HasMorePages = true;  		return;  	}  	else {  		if (NewPage) {  			// Draw Header  			e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  			e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			// Draw Columns  			tmpTop = e.MarginBounds.Top;  			i = 0;  			foreach (DataGridViewColumn GridCol in dgv.Columns) {  				if (!GridCol.Visible)  					continue;  				if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  					continue;  				e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  				i++;  			}  			NewPage = false;  			tmpTop += HeaderHeight;  		}  		// Draw Columns Contents  		i = 0;  		foreach (DataGridViewCell Cel in GridRow.Cells) {  			if (!Cel.OwningColumn.Visible)  				continue;  			if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  				continue;  			// For the TextBox Column  			if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  			}  			// For the Button Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  				CellButton.Text = Cel.Value.ToString ();  				CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  				CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the CheckBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  				CellCheckBox.Size = new Size (14' 14);  				CellCheckBox.Checked = (bool)Cel.Value;  				Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  				Graphics tmpGraphics = Graphics.FromImage (bmp);  				tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  				CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the ComboBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  				CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  				CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  			}  			// For the Image Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  				Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  				Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  				e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  			}  			// Drawing Cells Borders   			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  			i++;  		}  		tmpTop += CellHeight;  	}  	RowPos++;  	// For the first page it calculates Rows per Page  	if (PageNo == 1)  		RowsPerPage++;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: while (RowPos <= dgv.Rows.Count - 1) {  	DataGridViewRow GridRow = dgv.Rows [RowPos];  	if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  		RowPos++;  		continue;  	}  	CellHeight = GridRow.Height;  	if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  		DrawFooter (e' RowsPerPage);  		NewPage = true;  		PageNo++;  		e.HasMorePages = true;  		return;  	}  	else {  		if (NewPage) {  			// Draw Header  			e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  			e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			// Draw Columns  			tmpTop = e.MarginBounds.Top;  			i = 0;  			foreach (DataGridViewColumn GridCol in dgv.Columns) {  				if (!GridCol.Visible)  					continue;  				if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  					continue;  				e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  				i++;  			}  			NewPage = false;  			tmpTop += HeaderHeight;  		}  		// Draw Columns Contents  		i = 0;  		foreach (DataGridViewCell Cel in GridRow.Cells) {  			if (!Cel.OwningColumn.Visible)  				continue;  			if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  				continue;  			// For the TextBox Column  			if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  			}  			// For the Button Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  				CellButton.Text = Cel.Value.ToString ();  				CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  				CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the CheckBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  				CellCheckBox.Size = new Size (14' 14);  				CellCheckBox.Checked = (bool)Cel.Value;  				Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  				Graphics tmpGraphics = Graphics.FromImage (bmp);  				tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  				CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the ComboBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  				CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  				CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  			}  			// For the Image Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  				Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  				Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  				e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  			}  			// Drawing Cells Borders   			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  			i++;  		}  		tmpTop += CellHeight;  	}  	RowPos++;  	// For the first page it calculates Rows per Page  	if (PageNo == 1)  		RowsPerPage++;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: while (RowPos <= dgv.Rows.Count - 1) {  	DataGridViewRow GridRow = dgv.Rows [RowPos];  	if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  		RowPos++;  		continue;  	}  	CellHeight = GridRow.Height;  	if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  		DrawFooter (e' RowsPerPage);  		NewPage = true;  		PageNo++;  		e.HasMorePages = true;  		return;  	}  	else {  		if (NewPage) {  			// Draw Header  			e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  			e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			// Draw Columns  			tmpTop = e.MarginBounds.Top;  			i = 0;  			foreach (DataGridViewColumn GridCol in dgv.Columns) {  				if (!GridCol.Visible)  					continue;  				if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  					continue;  				e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  				i++;  			}  			NewPage = false;  			tmpTop += HeaderHeight;  		}  		// Draw Columns Contents  		i = 0;  		foreach (DataGridViewCell Cel in GridRow.Cells) {  			if (!Cel.OwningColumn.Visible)  				continue;  			if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  				continue;  			// For the TextBox Column  			if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  			}  			// For the Button Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  				CellButton.Text = Cel.Value.ToString ();  				CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  				CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the CheckBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  				CellCheckBox.Size = new Size (14' 14);  				CellCheckBox.Checked = (bool)Cel.Value;  				Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  				Graphics tmpGraphics = Graphics.FromImage (bmp);  				tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  				CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the ComboBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  				CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  				CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  			}  			// For the Image Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  				Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  				Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  				e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  			}  			// Drawing Cells Borders   			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  			i++;  		}  		tmpTop += CellHeight;  	}  	RowPos++;  	// For the first page it calculates Rows per Page  	if (PageNo == 1)  		RowsPerPage++;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: while (RowPos <= dgv.Rows.Count - 1) {  	DataGridViewRow GridRow = dgv.Rows [RowPos];  	if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  		RowPos++;  		continue;  	}  	CellHeight = GridRow.Height;  	if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  		DrawFooter (e' RowsPerPage);  		NewPage = true;  		PageNo++;  		e.HasMorePages = true;  		return;  	}  	else {  		if (NewPage) {  			// Draw Header  			e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  			e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			// Draw Columns  			tmpTop = e.MarginBounds.Top;  			i = 0;  			foreach (DataGridViewColumn GridCol in dgv.Columns) {  				if (!GridCol.Visible)  					continue;  				if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  					continue;  				e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  				i++;  			}  			NewPage = false;  			tmpTop += HeaderHeight;  		}  		// Draw Columns Contents  		i = 0;  		foreach (DataGridViewCell Cel in GridRow.Cells) {  			if (!Cel.OwningColumn.Visible)  				continue;  			if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  				continue;  			// For the TextBox Column  			if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  			}  			// For the Button Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  				CellButton.Text = Cel.Value.ToString ();  				CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  				CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the CheckBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  				CellCheckBox.Size = new Size (14' 14);  				CellCheckBox.Checked = (bool)Cel.Value;  				Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  				Graphics tmpGraphics = Graphics.FromImage (bmp);  				tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  				CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the ComboBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  				CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  				CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  			}  			// For the Image Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  				Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  				Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  				e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  			}  			// Drawing Cells Borders   			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  			i++;  		}  		tmpTop += CellHeight;  	}  	RowPos++;  	// For the first page it calculates Rows per Page  	if (PageNo == 1)  		RowsPerPage++;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: while (RowPos <= dgv.Rows.Count - 1) {  	DataGridViewRow GridRow = dgv.Rows [RowPos];  	if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  		RowPos++;  		continue;  	}  	CellHeight = GridRow.Height;  	if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  		DrawFooter (e' RowsPerPage);  		NewPage = true;  		PageNo++;  		e.HasMorePages = true;  		return;  	}  	else {  		if (NewPage) {  			// Draw Header  			e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  			e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			// Draw Columns  			tmpTop = e.MarginBounds.Top;  			i = 0;  			foreach (DataGridViewColumn GridCol in dgv.Columns) {  				if (!GridCol.Visible)  					continue;  				if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  					continue;  				e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  				i++;  			}  			NewPage = false;  			tmpTop += HeaderHeight;  		}  		// Draw Columns Contents  		i = 0;  		foreach (DataGridViewCell Cel in GridRow.Cells) {  			if (!Cel.OwningColumn.Visible)  				continue;  			if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  				continue;  			// For the TextBox Column  			if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  			}  			// For the Button Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  				CellButton.Text = Cel.Value.ToString ();  				CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  				CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the CheckBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  				CellCheckBox.Size = new Size (14' 14);  				CellCheckBox.Checked = (bool)Cel.Value;  				Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  				Graphics tmpGraphics = Graphics.FromImage (bmp);  				tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  				CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the ComboBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  				CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  				CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  			}  			// For the Image Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  				Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  				Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  				e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  			}  			// Drawing Cells Borders   			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  			i++;  		}  		tmpTop += CellHeight;  	}  	RowPos++;  	// For the first page it calculates Rows per Page  	if (PageNo == 1)  		RowsPerPage++;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: while (RowPos <= dgv.Rows.Count - 1) {  	DataGridViewRow GridRow = dgv.Rows [RowPos];  	if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  		RowPos++;  		continue;  	}  	CellHeight = GridRow.Height;  	if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  		DrawFooter (e' RowsPerPage);  		NewPage = true;  		PageNo++;  		e.HasMorePages = true;  		return;  	}  	else {  		if (NewPage) {  			// Draw Header  			e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  			e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			// Draw Columns  			tmpTop = e.MarginBounds.Top;  			i = 0;  			foreach (DataGridViewColumn GridCol in dgv.Columns) {  				if (!GridCol.Visible)  					continue;  				if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  					continue;  				e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  				i++;  			}  			NewPage = false;  			tmpTop += HeaderHeight;  		}  		// Draw Columns Contents  		i = 0;  		foreach (DataGridViewCell Cel in GridRow.Cells) {  			if (!Cel.OwningColumn.Visible)  				continue;  			if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  				continue;  			// For the TextBox Column  			if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  			}  			// For the Button Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  				CellButton.Text = Cel.Value.ToString ();  				CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  				CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the CheckBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  				CellCheckBox.Size = new Size (14' 14);  				CellCheckBox.Checked = (bool)Cel.Value;  				Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  				Graphics tmpGraphics = Graphics.FromImage (bmp);  				tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  				CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the ComboBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  				CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  				CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  			}  			// For the Image Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  				Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  				Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  				e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  			}  			// Drawing Cells Borders   			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  			i++;  		}  		tmpTop += CellHeight;  	}  	RowPos++;  	// For the first page it calculates Rows per Page  	if (PageNo == 1)  		RowsPerPage++;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: while (RowPos <= dgv.Rows.Count - 1) {  	DataGridViewRow GridRow = dgv.Rows [RowPos];  	if (GridRow.IsNewRow || (!PrintAllRows && !GridRow.Selected)) {  		RowPos++;  		continue;  	}  	CellHeight = GridRow.Height;  	if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  		DrawFooter (e' RowsPerPage);  		NewPage = true;  		PageNo++;  		e.HasMorePages = true;  		return;  	}  	else {  		if (NewPage) {  			// Draw Header  			e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  			e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  			// Draw Columns  			tmpTop = e.MarginBounds.Top;  			i = 0;  			foreach (DataGridViewColumn GridCol in dgv.Columns) {  				if (!GridCol.Visible)  					continue;  				if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  					continue;  				e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  				e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  				i++;  			}  			NewPage = false;  			tmpTop += HeaderHeight;  		}  		// Draw Columns Contents  		i = 0;  		foreach (DataGridViewCell Cel in GridRow.Cells) {  			if (!Cel.OwningColumn.Visible)  				continue;  			if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  				continue;  			// For the TextBox Column  			if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  			}  			// For the Button Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  				CellButton.Text = Cel.Value.ToString ();  				CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  				CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the CheckBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  				CellCheckBox.Size = new Size (14' 14);  				CellCheckBox.Checked = (bool)Cel.Value;  				Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  				Graphics tmpGraphics = Graphics.FromImage (bmp);  				tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  				CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			}  			// For the ComboBox Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  				CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  				Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  				CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  				e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  				e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  			}  			// For the Image Column  			else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  				Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  				Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  				e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  			}  			// Drawing Cells Borders   			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  			i++;  		}  		tmpTop += CellHeight;  	}  	RowPos++;  	// For the first page it calculates Rows per Page  	if (PageNo == 1)  		RowsPerPage++;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  	DrawFooter (e' RowsPerPage);  	NewPage = true;  	PageNo++;  	e.HasMorePages = true;  	return;  }  else {  	if (NewPage) {  		// Draw Header  		e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  		e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		// Draw Columns  		tmpTop = e.MarginBounds.Top;  		i = 0;  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  			i++;  		}  		NewPage = false;  		tmpTop += HeaderHeight;  	}  	// Draw Columns Contents  	i = 0;  	foreach (DataGridViewCell Cel in GridRow.Cells) {  		if (!Cel.OwningColumn.Visible)  			continue;  		if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  			continue;  		// For the TextBox Column  		if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  		}  		// For the Button Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  			CellButton.Text = Cel.Value.ToString ();  			CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  			CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the CheckBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  			CellCheckBox.Size = new Size (14' 14);  			CellCheckBox.Checked = (bool)Cel.Value;  			Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  			Graphics tmpGraphics = Graphics.FromImage (bmp);  			tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  			CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the ComboBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  			CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  			CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  		}  		// For the Image Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  			Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  			Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  			e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  		}  		// Drawing Cells Borders   		e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  		i++;  	}  	tmpTop += CellHeight;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  	DrawFooter (e' RowsPerPage);  	NewPage = true;  	PageNo++;  	e.HasMorePages = true;  	return;  }  else {  	if (NewPage) {  		// Draw Header  		e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  		e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		// Draw Columns  		tmpTop = e.MarginBounds.Top;  		i = 0;  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  			i++;  		}  		NewPage = false;  		tmpTop += HeaderHeight;  	}  	// Draw Columns Contents  	i = 0;  	foreach (DataGridViewCell Cel in GridRow.Cells) {  		if (!Cel.OwningColumn.Visible)  			continue;  		if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  			continue;  		// For the TextBox Column  		if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  		}  		// For the Button Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  			CellButton.Text = Cel.Value.ToString ();  			CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  			CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the CheckBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  			CellCheckBox.Size = new Size (14' 14);  			CellCheckBox.Checked = (bool)Cel.Value;  			Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  			Graphics tmpGraphics = Graphics.FromImage (bmp);  			tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  			CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the ComboBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  			CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  			CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  		}  		// For the Image Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  			Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  			Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  			e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  		}  		// Drawing Cells Borders   		e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  		i++;  	}  	tmpTop += CellHeight;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  	DrawFooter (e' RowsPerPage);  	NewPage = true;  	PageNo++;  	e.HasMorePages = true;  	return;  }  else {  	if (NewPage) {  		// Draw Header  		e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  		e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		// Draw Columns  		tmpTop = e.MarginBounds.Top;  		i = 0;  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  			i++;  		}  		NewPage = false;  		tmpTop += HeaderHeight;  	}  	// Draw Columns Contents  	i = 0;  	foreach (DataGridViewCell Cel in GridRow.Cells) {  		if (!Cel.OwningColumn.Visible)  			continue;  		if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  			continue;  		// For the TextBox Column  		if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  		}  		// For the Button Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  			CellButton.Text = Cel.Value.ToString ();  			CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  			CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the CheckBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  			CellCheckBox.Size = new Size (14' 14);  			CellCheckBox.Checked = (bool)Cel.Value;  			Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  			Graphics tmpGraphics = Graphics.FromImage (bmp);  			tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  			CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the ComboBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  			CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  			CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  		}  		// For the Image Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  			Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  			Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  			e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  		}  		// Drawing Cells Borders   		e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  		i++;  	}  	tmpTop += CellHeight;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  	DrawFooter (e' RowsPerPage);  	NewPage = true;  	PageNo++;  	e.HasMorePages = true;  	return;  }  else {  	if (NewPage) {  		// Draw Header  		e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  		e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		// Draw Columns  		tmpTop = e.MarginBounds.Top;  		i = 0;  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  			i++;  		}  		NewPage = false;  		tmpTop += HeaderHeight;  	}  	// Draw Columns Contents  	i = 0;  	foreach (DataGridViewCell Cel in GridRow.Cells) {  		if (!Cel.OwningColumn.Visible)  			continue;  		if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  			continue;  		// For the TextBox Column  		if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  		}  		// For the Button Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  			CellButton.Text = Cel.Value.ToString ();  			CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  			CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the CheckBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  			CellCheckBox.Size = new Size (14' 14);  			CellCheckBox.Checked = (bool)Cel.Value;  			Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  			Graphics tmpGraphics = Graphics.FromImage (bmp);  			tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  			CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the ComboBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  			CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  			CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  		}  		// For the Image Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  			Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  			Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  			e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  		}  		// Drawing Cells Borders   		e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  		i++;  	}  	tmpTop += CellHeight;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  	DrawFooter (e' RowsPerPage);  	NewPage = true;  	PageNo++;  	e.HasMorePages = true;  	return;  }  else {  	if (NewPage) {  		// Draw Header  		e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  		e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		// Draw Columns  		tmpTop = e.MarginBounds.Top;  		i = 0;  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  			i++;  		}  		NewPage = false;  		tmpTop += HeaderHeight;  	}  	// Draw Columns Contents  	i = 0;  	foreach (DataGridViewCell Cel in GridRow.Cells) {  		if (!Cel.OwningColumn.Visible)  			continue;  		if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  			continue;  		// For the TextBox Column  		if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  		}  		// For the Button Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  			CellButton.Text = Cel.Value.ToString ();  			CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  			CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the CheckBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  			CellCheckBox.Size = new Size (14' 14);  			CellCheckBox.Checked = (bool)Cel.Value;  			Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  			Graphics tmpGraphics = Graphics.FromImage (bmp);  			tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  			CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the ComboBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  			CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  			CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  		}  		// For the Image Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  			Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  			Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  			e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  		}  		// Drawing Cells Borders   		e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  		i++;  	}  	tmpTop += CellHeight;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  	DrawFooter (e' RowsPerPage);  	NewPage = true;  	PageNo++;  	e.HasMorePages = true;  	return;  }  else {  	if (NewPage) {  		// Draw Header  		e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  		e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		// Draw Columns  		tmpTop = e.MarginBounds.Top;  		i = 0;  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  			i++;  		}  		NewPage = false;  		tmpTop += HeaderHeight;  	}  	// Draw Columns Contents  	i = 0;  	foreach (DataGridViewCell Cel in GridRow.Cells) {  		if (!Cel.OwningColumn.Visible)  			continue;  		if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  			continue;  		// For the TextBox Column  		if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  		}  		// For the Button Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  			CellButton.Text = Cel.Value.ToString ();  			CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  			CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the CheckBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  			CellCheckBox.Size = new Size (14' 14);  			CellCheckBox.Checked = (bool)Cel.Value;  			Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  			Graphics tmpGraphics = Graphics.FromImage (bmp);  			tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  			CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the ComboBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  			CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  			CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  		}  		// For the Image Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  			Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  			Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  			e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  		}  		// Drawing Cells Borders   		e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  		i++;  	}  	tmpTop += CellHeight;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  	DrawFooter (e' RowsPerPage);  	NewPage = true;  	PageNo++;  	e.HasMorePages = true;  	return;  }  else {  	if (NewPage) {  		// Draw Header  		e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  		e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		// Draw Columns  		tmpTop = e.MarginBounds.Top;  		i = 0;  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  			i++;  		}  		NewPage = false;  		tmpTop += HeaderHeight;  	}  	// Draw Columns Contents  	i = 0;  	foreach (DataGridViewCell Cel in GridRow.Cells) {  		if (!Cel.OwningColumn.Visible)  			continue;  		if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  			continue;  		// For the TextBox Column  		if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  		}  		// For the Button Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  			CellButton.Text = Cel.Value.ToString ();  			CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  			CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the CheckBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  			CellCheckBox.Size = new Size (14' 14);  			CellCheckBox.Checked = (bool)Cel.Value;  			Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  			Graphics tmpGraphics = Graphics.FromImage (bmp);  			tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  			CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the ComboBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  			CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  			CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  		}  		// For the Image Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  			Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  			Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  			e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  		}  		// Drawing Cells Borders   		e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  		i++;  	}  	tmpTop += CellHeight;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  	DrawFooter (e' RowsPerPage);  	NewPage = true;  	PageNo++;  	e.HasMorePages = true;  	return;  }  else {  	if (NewPage) {  		// Draw Header  		e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  		e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		// Draw Columns  		tmpTop = e.MarginBounds.Top;  		i = 0;  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  			i++;  		}  		NewPage = false;  		tmpTop += HeaderHeight;  	}  	// Draw Columns Contents  	i = 0;  	foreach (DataGridViewCell Cel in GridRow.Cells) {  		if (!Cel.OwningColumn.Visible)  			continue;  		if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  			continue;  		// For the TextBox Column  		if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  		}  		// For the Button Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  			CellButton.Text = Cel.Value.ToString ();  			CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  			CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the CheckBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  			CellCheckBox.Size = new Size (14' 14);  			CellCheckBox.Checked = (bool)Cel.Value;  			Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  			Graphics tmpGraphics = Graphics.FromImage (bmp);  			tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  			CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the ComboBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  			CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  			CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  		}  		// For the Image Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  			Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  			Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  			e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  		}  		// Drawing Cells Borders   		e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  		i++;  	}  	tmpTop += CellHeight;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (tmpTop + CellHeight >= e.MarginBounds.Height + e.MarginBounds.Top) {  	DrawFooter (e' RowsPerPage);  	NewPage = true;  	PageNo++;  	e.HasMorePages = true;  	return;  }  else {  	if (NewPage) {  		// Draw Header  		e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  		e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  		// Draw Columns  		tmpTop = e.MarginBounds.Top;  		i = 0;  		foreach (DataGridViewColumn GridCol in dgv.Columns) {  			if (!GridCol.Visible)  				continue;  			if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  				continue;  			e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  			e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  			i++;  		}  		NewPage = false;  		tmpTop += HeaderHeight;  	}  	// Draw Columns Contents  	i = 0;  	foreach (DataGridViewCell Cel in GridRow.Cells) {  		if (!Cel.OwningColumn.Visible)  			continue;  		if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  			continue;  		// For the TextBox Column  		if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  		}  		// For the Button Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  			CellButton.Text = Cel.Value.ToString ();  			CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  			CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the CheckBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  			CellCheckBox.Size = new Size (14' 14);  			CellCheckBox.Checked = (bool)Cel.Value;  			Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  			Graphics tmpGraphics = Graphics.FromImage (bmp);  			tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  			CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		}  		// For the ComboBox Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  			CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  			Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  			CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  			e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  			e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  		}  		// For the Image Column  		else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  			Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  			Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  			e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  		}  		// Drawing Cells Borders   		e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  		i++;  	}  	tmpTop += CellHeight;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (NewPage) {  	// Draw Header  	e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  	String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  	e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  	// Draw Columns  	tmpTop = e.MarginBounds.Top;  	i = 0;  	foreach (DataGridViewColumn GridCol in dgv.Columns) {  		if (!GridCol.Visible)  			continue;  		if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  			continue;  		e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  		e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  		e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  		i++;  	}  	NewPage = false;  	tmpTop += HeaderHeight;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (NewPage) {  	// Draw Header  	e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  	String s = DateTime.Now.ToLongDateString () + " " + DateTime.Now.ToShortTimeString ();  	e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  	// Draw Columns  	tmpTop = e.MarginBounds.Top;  	i = 0;  	foreach (DataGridViewColumn GridCol in dgv.Columns) {  		if (!GridCol.Visible)  			continue;  		if (!PrintDGV.SelectedColumns.Contains (GridCol.HeaderText))  			continue;  		e.Graphics.FillRectangle (new SolidBrush (Color.LightGray)' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  		e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight));  		e.Graphics.DrawString (GridCol.HeaderText' GridCol.InheritedStyle.Font' new SolidBrush (GridCol.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' HeaderHeight)' StrFormat);  		i++;  	}  	NewPage = false;  	tmpTop += HeaderHeight;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: e.Graphics.DrawString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: e.Graphics.DrawString (s' new Font (dgv.Font' FontStyle.Bold)' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (s' new Font (dgv.Font' FontStyle.Bold)' e.MarginBounds.Width).Width)' e.MarginBounds.Top - e.Graphics.MeasureString (PrintTitle' new Font (new Font (dgv.Font' FontStyle.Bold)' FontStyle.Bold)' e.MarginBounds.Width).Height - 13);  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: foreach (DataGridViewCell Cel in GridRow.Cells) {  	if (!Cel.OwningColumn.Visible)  		continue;  	if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  		continue;  	// For the TextBox Column  	if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  		e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  	}  	// For the Button Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  		CellButton.Text = Cel.Value.ToString ();  		CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  		Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  		CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	}  	// For the CheckBox Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  		CellCheckBox.Size = new Size (14' 14);  		CellCheckBox.Checked = (bool)Cel.Value;  		Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  		Graphics tmpGraphics = Graphics.FromImage (bmp);  		tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  		CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	}  	// For the ComboBox Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  		CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  		Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  		CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  	}  	// For the Image Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  		Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  		Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  		e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  	}  	// Drawing Cells Borders   	e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  	i++;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: foreach (DataGridViewCell Cel in GridRow.Cells) {  	if (!Cel.OwningColumn.Visible)  		continue;  	if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  		continue;  	// For the TextBox Column  	if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  		e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  	}  	// For the Button Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  		CellButton.Text = Cel.Value.ToString ();  		CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  		Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  		CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	}  	// For the CheckBox Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  		CellCheckBox.Size = new Size (14' 14);  		CellCheckBox.Checked = (bool)Cel.Value;  		Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  		Graphics tmpGraphics = Graphics.FromImage (bmp);  		tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  		CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	}  	// For the ComboBox Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  		CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  		Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  		CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  	}  	// For the Image Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  		Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  		Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  		e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  	}  	// Drawing Cells Borders   	e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  	i++;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: foreach (DataGridViewCell Cel in GridRow.Cells) {  	if (!Cel.OwningColumn.Visible)  		continue;  	if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  		continue;  	// For the TextBox Column  	if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  		e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  	}  	// For the Button Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  		CellButton.Text = Cel.Value.ToString ();  		CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  		Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  		CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	}  	// For the CheckBox Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  		CellCheckBox.Size = new Size (14' 14);  		CellCheckBox.Checked = (bool)Cel.Value;  		Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  		Graphics tmpGraphics = Graphics.FromImage (bmp);  		tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  		CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	}  	// For the ComboBox Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  		CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  		Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  		CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  	}  	// For the Image Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  		Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  		Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  		e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  	}  	// Drawing Cells Borders   	e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  	i++;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: foreach (DataGridViewCell Cel in GridRow.Cells) {  	if (!Cel.OwningColumn.Visible)  		continue;  	if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  		continue;  	// For the TextBox Column  	if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  		e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  	}  	// For the Button Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  		CellButton.Text = Cel.Value.ToString ();  		CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  		Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  		CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	}  	// For the CheckBox Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  		CellCheckBox.Size = new Size (14' 14);  		CellCheckBox.Checked = (bool)Cel.Value;  		Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  		Graphics tmpGraphics = Graphics.FromImage (bmp);  		tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  		CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	}  	// For the ComboBox Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  		CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  		Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  		CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  	}  	// For the Image Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  		Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  		Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  		e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  	}  	// Drawing Cells Borders   	e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  	i++;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: foreach (DataGridViewCell Cel in GridRow.Cells) {  	if (!Cel.OwningColumn.Visible)  		continue;  	if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  		continue;  	// For the TextBox Column  	if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  		e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  	}  	// For the Button Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  		CellButton.Text = Cel.Value.ToString ();  		CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  		Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  		CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	}  	// For the CheckBox Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  		CellCheckBox.Size = new Size (14' 14);  		CellCheckBox.Checked = (bool)Cel.Value;  		Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  		Graphics tmpGraphics = Graphics.FromImage (bmp);  		tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  		CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	}  	// For the ComboBox Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  		CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  		Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  		CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  	}  	// For the Image Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  		Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  		Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  		e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  	}  	// Drawing Cells Borders   	e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  	i++;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: foreach (DataGridViewCell Cel in GridRow.Cells) {  	if (!Cel.OwningColumn.Visible)  		continue;  	if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  		continue;  	// For the TextBox Column  	if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  		e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  	}  	// For the Button Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  		CellButton.Text = Cel.Value.ToString ();  		CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  		Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  		CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	}  	// For the CheckBox Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  		CellCheckBox.Size = new Size (14' 14);  		CellCheckBox.Checked = (bool)Cel.Value;  		Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  		Graphics tmpGraphics = Graphics.FromImage (bmp);  		tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  		CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	}  	// For the ComboBox Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  		CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  		Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  		CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  	}  	// For the Image Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  		Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  		Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  		e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  	}  	// Drawing Cells Borders   	e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  	i++;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: foreach (DataGridViewCell Cel in GridRow.Cells) {  	if (!Cel.OwningColumn.Visible)  		continue;  	if (!SelectedColumns.Contains (Cel.OwningColumn.HeaderText))  		continue;  	// For the TextBox Column  	if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  		e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  	}  	// For the Button Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  		CellButton.Text = Cel.Value.ToString ();  		CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  		Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  		CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	}  	// For the CheckBox Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  		CellCheckBox.Size = new Size (14' 14);  		CellCheckBox.Checked = (bool)Cel.Value;  		Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  		Graphics tmpGraphics = Graphics.FromImage (bmp);  		tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  		CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	}  	// For the ComboBox Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  		CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  		Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  		CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  		e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  		e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  	}  	// For the Image Column  	else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  		Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  		Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  		e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  	}  	// Drawing Cells Borders   	e.Graphics.DrawRectangle (Pens.Black' new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight));  	i++;  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  }  // For the Button Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  	CellButton.Text = Cel.Value.ToString ();  	CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  	CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the CheckBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  }  // For the Button Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  	CellButton.Text = Cel.Value.ToString ();  	CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  	CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the CheckBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  }  // For the Button Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  	CellButton.Text = Cel.Value.ToString ();  	CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  	CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the CheckBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  }  // For the Button Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  	CellButton.Text = Cel.Value.ToString ();  	CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  	CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the CheckBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  }  // For the Button Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  	CellButton.Text = Cel.Value.ToString ();  	CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  	CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the CheckBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  }  // For the Button Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  	CellButton.Text = Cel.Value.ToString ();  	CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  	CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the CheckBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewTextBoxColumn" || ((Type)ColumnTypes [i]).Name == "DataGridViewLinkColumn") {  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i]' (float)tmpTop' (int)ColumnWidths [i]' (float)CellHeight)' StrFormat);  }  // For the Button Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  	CellButton.Text = Cel.Value.ToString ();  	CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  	CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the CheckBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  	CellButton.Text = Cel.Value.ToString ();  	CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  	CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the CheckBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  	CellButton.Text = Cel.Value.ToString ();  	CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  	CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the CheckBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  	CellButton.Text = Cel.Value.ToString ();  	CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  	CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the CheckBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  	CellButton.Text = Cel.Value.ToString ();  	CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  	CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the CheckBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  	CellButton.Text = Cel.Value.ToString ();  	CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  	CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the CheckBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  	CellButton.Text = Cel.Value.ToString ();  	CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  	CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the CheckBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewButtonColumn") {  	CellButton.Text = Cel.Value.ToString ();  	CellButton.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellButton.Width' CellButton.Height);  	CellButton.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the CheckBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewCheckBoxColumn") {  	CellCheckBox.Size = new Size (14' 14);  	CellCheckBox.Checked = (bool)Cel.Value;  	Bitmap bmp = new Bitmap ((int)ColumnWidths [i]' CellHeight);  	Graphics tmpGraphics = Graphics.FromImage (bmp);  	tmpGraphics.FillRectangle (Brushes.White' new Rectangle (0' 0' bmp.Width' bmp.Height));  	CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  }  // For the ComboBox Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: CellCheckBox.Size = new Size (14' 14);  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: CellCheckBox.Size = new Size (14' 14);  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: CellCheckBox.DrawToBitmap (bmp' new Rectangle ((int)((bmp.Width - CellCheckBox.Width) / 2)' (int)((bmp.Height - CellCheckBox.Height) / 2)' CellCheckBox.Width' CellCheckBox.Height));  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewComboBoxColumn") {  	CellComboBox.Size = new Size ((int)ColumnWidths [i]' CellHeight);  	Bitmap bmp = new Bitmap (CellComboBox.Width' CellComboBox.Height);  	CellComboBox.DrawToBitmap (bmp' new Rectangle (0' 0' bmp.Width' bmp.Height));  	e.Graphics.DrawImage (bmp' new Point ((int)ColumnLefts [i]' tmpTop));  	e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  }  // For the Image Column  else if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: e.Graphics.DrawString (Cel.Value.ToString ()' Cel.InheritedStyle.Font' new SolidBrush (Cel.InheritedStyle.ForeColor)' new RectangleF ((int)ColumnLefts [i] + 1' tmpTop' (int)ColumnWidths [i] - 16' CellHeight)' StrFormatComboBox);  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: if (((Type)ColumnTypes [i]).Name == "DataGridViewImageColumn") {  	Rectangle CelSize = new Rectangle ((int)ColumnLefts [i]' tmpTop' (int)ColumnWidths [i]' CellHeight);  	Size ImgSize = ((Image)(Cel.FormattedValue)).Size;  	e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  }  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,PrintDoc_PrintPage,The following statement contains a magic number: e.Graphics.DrawImage ((Image)Cel.FormattedValue' new Rectangle ((int)ColumnLefts [i] + (int)((CelSize.Width - ImgSize.Width) / 2)' tmpTop + (int)((CelSize.Height - ImgSize.Height) / 2)' ((Image)(Cel.FormattedValue)).Width' ((Image)(Cel.FormattedValue)).Height));  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,DrawFooter,The following statement contains a magic number: if (PrintAllRows) {  	if (dgv.Rows [dgv.Rows.Count - 1].IsNewRow)  		cnt = dgv.Rows.Count - 2;  	// When the DataGridView doesn't allow adding rows  	else  		cnt = dgv.Rows.Count - 1;  	// When the DataGridView allows adding rows  }  else  	cnt = dgv.SelectedRows.Count;  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,DrawFooter,The following statement contains a magic number: if (dgv.Rows [dgv.Rows.Count - 1].IsNewRow)  	cnt = dgv.Rows.Count - 2;  // When the DataGridView doesn't allow adding rows  else  	cnt = dgv.Rows.Count - 1;  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,DrawFooter,The following statement contains a magic number: cnt = dgv.Rows.Count - 2;  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,DrawFooter,The following statement contains a magic number: e.Graphics.DrawString (PageNum' dgv.Font' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (PageNum' dgv.Font' e.MarginBounds.Width).Width) / 2' e.MarginBounds.Top + e.MarginBounds.Height + 31);  
Magic Number,Mder.FC.Print,PrintDGV,C:\repos\neo2018_ZYFC\MderFc\Print\PrintHelper.cs,DrawFooter,The following statement contains a magic number: e.Graphics.DrawString (PageNum' dgv.Font' Brushes.Black' e.MarginBounds.Left + (e.MarginBounds.Width - e.Graphics.MeasureString (PageNum' dgv.Font' e.MarginBounds.Width).Width) / 2' e.MarginBounds.Top + e.MarginBounds.Height + 31);  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,Encrypt,The following statement contains a magic number: encryptKey = GetSubString (encryptKey' 0' 32' "");  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,Encrypt,The following statement contains a magic number: encryptKey = encryptKey.PadRight (32' ' ');  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,Encrypt,The following statement contains a magic number: rijndaelProvider.Key = Encoding.UTF8.GetBytes (encryptKey.Substring (0' 32));  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,Decrypt,The following statement contains a magic number: try {  	decryptKey = GetSubString (decryptKey' 0' 32' "");  	decryptKey = decryptKey.PadRight (32' ' ');  	RijndaelManaged rijndaelProvider = new RijndaelManaged ();  	rijndaelProvider.Key = Encoding.UTF8.GetBytes (decryptKey);  	rijndaelProvider.IV = Keys;  	ICryptoTransform rijndaelDecrypt = rijndaelProvider.CreateDecryptor ();  	byte[] inputData = Convert.FromBase64String (decryptString);  	byte[] decryptedData = rijndaelDecrypt.TransformFinalBlock (inputData' 0' inputData.Length);  	return Encoding.UTF8.GetString (decryptedData);  }  catch {  	return "";  }  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,Decrypt,The following statement contains a magic number: try {  	decryptKey = GetSubString (decryptKey' 0' 32' "");  	decryptKey = decryptKey.PadRight (32' ' ');  	RijndaelManaged rijndaelProvider = new RijndaelManaged ();  	rijndaelProvider.Key = Encoding.UTF8.GetBytes (decryptKey);  	rijndaelProvider.IV = Keys;  	ICryptoTransform rijndaelDecrypt = rijndaelProvider.CreateDecryptor ();  	byte[] inputData = Convert.FromBase64String (decryptString);  	byte[] decryptedData = rijndaelDecrypt.TransformFinalBlock (inputData' 0' inputData.Length);  	return Encoding.UTF8.GetString (decryptedData);  }  catch {  	return "";  }  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,Decrypt,The following statement contains a magic number: decryptKey = GetSubString (decryptKey' 0' 32' "");  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,Decrypt,The following statement contains a magic number: decryptKey = decryptKey.PadRight (32' ' ');  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,GetSubString,The following statement contains a magic number: if (p_Length >= 0) {  	byte[] bsSrcString = Encoding.Default.GetBytes (p_SrcString);  	//当字符串长度大于起始位置  	if (bsSrcString.Length > p_StartIndex) {  		int p_EndIndex = bsSrcString.Length;  		//当要截取的长度在字符串的有效长度范围内  		if (bsSrcString.Length > (p_StartIndex + p_Length)) {  			p_EndIndex = p_Length + p_StartIndex;  		}  		else {  			//当不在有效范围内时'只取到字符串的结尾  			p_Length = bsSrcString.Length - p_StartIndex;  			p_TailString = "";  		}  		int nRealLength = p_Length;  		int[] anResultFlag = new int[p_Length];  		byte[] bsResult = null;  		int nFlag = 0;  		for (int i = p_StartIndex; i < p_EndIndex; i++) {  			if (bsSrcString [i] > 127) {  				nFlag++;  				if (nFlag == 3)  					nFlag = 1;  			}  			else  				nFlag = 0;  			anResultFlag [i] = nFlag;  		}  		if ((bsSrcString [p_EndIndex - 1] > 127) && (anResultFlag [p_Length - 1] == 1))  			nRealLength = p_Length + 1;  		bsResult = new byte[nRealLength];  		Array.Copy (bsSrcString' p_StartIndex' bsResult' 0' nRealLength);  		myResult = Encoding.Default.GetString (bsResult);  		myResult = myResult + p_TailString;  	}  }  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,GetSubString,The following statement contains a magic number: if (p_Length >= 0) {  	byte[] bsSrcString = Encoding.Default.GetBytes (p_SrcString);  	//当字符串长度大于起始位置  	if (bsSrcString.Length > p_StartIndex) {  		int p_EndIndex = bsSrcString.Length;  		//当要截取的长度在字符串的有效长度范围内  		if (bsSrcString.Length > (p_StartIndex + p_Length)) {  			p_EndIndex = p_Length + p_StartIndex;  		}  		else {  			//当不在有效范围内时'只取到字符串的结尾  			p_Length = bsSrcString.Length - p_StartIndex;  			p_TailString = "";  		}  		int nRealLength = p_Length;  		int[] anResultFlag = new int[p_Length];  		byte[] bsResult = null;  		int nFlag = 0;  		for (int i = p_StartIndex; i < p_EndIndex; i++) {  			if (bsSrcString [i] > 127) {  				nFlag++;  				if (nFlag == 3)  					nFlag = 1;  			}  			else  				nFlag = 0;  			anResultFlag [i] = nFlag;  		}  		if ((bsSrcString [p_EndIndex - 1] > 127) && (anResultFlag [p_Length - 1] == 1))  			nRealLength = p_Length + 1;  		bsResult = new byte[nRealLength];  		Array.Copy (bsSrcString' p_StartIndex' bsResult' 0' nRealLength);  		myResult = Encoding.Default.GetString (bsResult);  		myResult = myResult + p_TailString;  	}  }  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,GetSubString,The following statement contains a magic number: if (p_Length >= 0) {  	byte[] bsSrcString = Encoding.Default.GetBytes (p_SrcString);  	//当字符串长度大于起始位置  	if (bsSrcString.Length > p_StartIndex) {  		int p_EndIndex = bsSrcString.Length;  		//当要截取的长度在字符串的有效长度范围内  		if (bsSrcString.Length > (p_StartIndex + p_Length)) {  			p_EndIndex = p_Length + p_StartIndex;  		}  		else {  			//当不在有效范围内时'只取到字符串的结尾  			p_Length = bsSrcString.Length - p_StartIndex;  			p_TailString = "";  		}  		int nRealLength = p_Length;  		int[] anResultFlag = new int[p_Length];  		byte[] bsResult = null;  		int nFlag = 0;  		for (int i = p_StartIndex; i < p_EndIndex; i++) {  			if (bsSrcString [i] > 127) {  				nFlag++;  				if (nFlag == 3)  					nFlag = 1;  			}  			else  				nFlag = 0;  			anResultFlag [i] = nFlag;  		}  		if ((bsSrcString [p_EndIndex - 1] > 127) && (anResultFlag [p_Length - 1] == 1))  			nRealLength = p_Length + 1;  		bsResult = new byte[nRealLength];  		Array.Copy (bsSrcString' p_StartIndex' bsResult' 0' nRealLength);  		myResult = Encoding.Default.GetString (bsResult);  		myResult = myResult + p_TailString;  	}  }  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,GetSubString,The following statement contains a magic number: if (bsSrcString.Length > p_StartIndex) {  	int p_EndIndex = bsSrcString.Length;  	//当要截取的长度在字符串的有效长度范围内  	if (bsSrcString.Length > (p_StartIndex + p_Length)) {  		p_EndIndex = p_Length + p_StartIndex;  	}  	else {  		//当不在有效范围内时'只取到字符串的结尾  		p_Length = bsSrcString.Length - p_StartIndex;  		p_TailString = "";  	}  	int nRealLength = p_Length;  	int[] anResultFlag = new int[p_Length];  	byte[] bsResult = null;  	int nFlag = 0;  	for (int i = p_StartIndex; i < p_EndIndex; i++) {  		if (bsSrcString [i] > 127) {  			nFlag++;  			if (nFlag == 3)  				nFlag = 1;  		}  		else  			nFlag = 0;  		anResultFlag [i] = nFlag;  	}  	if ((bsSrcString [p_EndIndex - 1] > 127) && (anResultFlag [p_Length - 1] == 1))  		nRealLength = p_Length + 1;  	bsResult = new byte[nRealLength];  	Array.Copy (bsSrcString' p_StartIndex' bsResult' 0' nRealLength);  	myResult = Encoding.Default.GetString (bsResult);  	myResult = myResult + p_TailString;  }  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,GetSubString,The following statement contains a magic number: if (bsSrcString.Length > p_StartIndex) {  	int p_EndIndex = bsSrcString.Length;  	//当要截取的长度在字符串的有效长度范围内  	if (bsSrcString.Length > (p_StartIndex + p_Length)) {  		p_EndIndex = p_Length + p_StartIndex;  	}  	else {  		//当不在有效范围内时'只取到字符串的结尾  		p_Length = bsSrcString.Length - p_StartIndex;  		p_TailString = "";  	}  	int nRealLength = p_Length;  	int[] anResultFlag = new int[p_Length];  	byte[] bsResult = null;  	int nFlag = 0;  	for (int i = p_StartIndex; i < p_EndIndex; i++) {  		if (bsSrcString [i] > 127) {  			nFlag++;  			if (nFlag == 3)  				nFlag = 1;  		}  		else  			nFlag = 0;  		anResultFlag [i] = nFlag;  	}  	if ((bsSrcString [p_EndIndex - 1] > 127) && (anResultFlag [p_Length - 1] == 1))  		nRealLength = p_Length + 1;  	bsResult = new byte[nRealLength];  	Array.Copy (bsSrcString' p_StartIndex' bsResult' 0' nRealLength);  	myResult = Encoding.Default.GetString (bsResult);  	myResult = myResult + p_TailString;  }  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,GetSubString,The following statement contains a magic number: if (bsSrcString.Length > p_StartIndex) {  	int p_EndIndex = bsSrcString.Length;  	//当要截取的长度在字符串的有效长度范围内  	if (bsSrcString.Length > (p_StartIndex + p_Length)) {  		p_EndIndex = p_Length + p_StartIndex;  	}  	else {  		//当不在有效范围内时'只取到字符串的结尾  		p_Length = bsSrcString.Length - p_StartIndex;  		p_TailString = "";  	}  	int nRealLength = p_Length;  	int[] anResultFlag = new int[p_Length];  	byte[] bsResult = null;  	int nFlag = 0;  	for (int i = p_StartIndex; i < p_EndIndex; i++) {  		if (bsSrcString [i] > 127) {  			nFlag++;  			if (nFlag == 3)  				nFlag = 1;  		}  		else  			nFlag = 0;  		anResultFlag [i] = nFlag;  	}  	if ((bsSrcString [p_EndIndex - 1] > 127) && (anResultFlag [p_Length - 1] == 1))  		nRealLength = p_Length + 1;  	bsResult = new byte[nRealLength];  	Array.Copy (bsSrcString' p_StartIndex' bsResult' 0' nRealLength);  	myResult = Encoding.Default.GetString (bsResult);  	myResult = myResult + p_TailString;  }  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,GetSubString,The following statement contains a magic number: for (int i = p_StartIndex; i < p_EndIndex; i++) {  	if (bsSrcString [i] > 127) {  		nFlag++;  		if (nFlag == 3)  			nFlag = 1;  	}  	else  		nFlag = 0;  	anResultFlag [i] = nFlag;  }  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,GetSubString,The following statement contains a magic number: for (int i = p_StartIndex; i < p_EndIndex; i++) {  	if (bsSrcString [i] > 127) {  		nFlag++;  		if (nFlag == 3)  			nFlag = 1;  	}  	else  		nFlag = 0;  	anResultFlag [i] = nFlag;  }  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,GetSubString,The following statement contains a magic number: if (bsSrcString [i] > 127) {  	nFlag++;  	if (nFlag == 3)  		nFlag = 1;  }  else  	nFlag = 0;  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,GetSubString,The following statement contains a magic number: if (bsSrcString [i] > 127) {  	nFlag++;  	if (nFlag == 3)  		nFlag = 1;  }  else  	nFlag = 0;  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,GetSubString,The following statement contains a magic number: if (nFlag == 3)  	nFlag = 1;  
Magic Number,Mder.FC.Security,AES,C:\repos\neo2018_ZYFC\MderFc\Security\AES.cs,GetSubString,The following statement contains a magic number: if ((bsSrcString [p_EndIndex - 1] > 127) && (anResultFlag [p_Length - 1] == 1))  	nRealLength = p_Length + 1;  
Magic Number,Mder.FC.Security,CRC,C:\repos\neo2018_ZYFC\MderFc\Security\CRC.cs,CRC,The following statement contains a magic number: crc32Table = new ulong[256];  
Magic Number,Mder.FC.Security,CRC,C:\repos\neo2018_ZYFC\MderFc\Security\CRC.cs,CRC,The following statement contains a magic number: for (i = 0; i < 256; i++) {  	dwCrc = (ulong)i;  	for (j = 8; j > 0; j--) {  		if ((dwCrc & 1) == 1)  			dwCrc = (dwCrc >> 1) ^ ulPolynomial;  		else  			dwCrc >>= 1;  	}  	crc32Table [i] = dwCrc;  }  
Magic Number,Mder.FC.Security,CRC,C:\repos\neo2018_ZYFC\MderFc\Security\CRC.cs,CRC,The following statement contains a magic number: for (i = 0; i < 256; i++) {  	dwCrc = (ulong)i;  	for (j = 8; j > 0; j--) {  		if ((dwCrc & 1) == 1)  			dwCrc = (dwCrc >> 1) ^ ulPolynomial;  		else  			dwCrc >>= 1;  	}  	crc32Table [i] = dwCrc;  }  
Magic Number,Mder.FC.Security,CRC,C:\repos\neo2018_ZYFC\MderFc\Security\CRC.cs,CRC,The following statement contains a magic number: for (j = 8; j > 0; j--) {  	if ((dwCrc & 1) == 1)  		dwCrc = (dwCrc >> 1) ^ ulPolynomial;  	else  		dwCrc >>= 1;  }  
Magic Number,Mder.FC.Security,CRC,C:\repos\neo2018_ZYFC\MderFc\Security\CRC.cs,CRC,The following statement contains a magic number: j = 8
Magic Number,Mder.FC.Security,CRC,C:\repos\neo2018_ZYFC\MderFc\Security\CRC.cs,ByteCRC,The following statement contains a magic number: for (ulong buffptr = 0; buffptr < len; buffptr++) {  	ulong tabPtr = ulCRC & 0xFF;  	tabPtr = tabPtr ^ buffer [buffptr];  	ulCRC = ulCRC >> 8;  	ulCRC = ulCRC ^ crc32Table [tabPtr];  }  
Magic Number,Mder.FC.Security,CRC,C:\repos\neo2018_ZYFC\MderFc\Security\CRC.cs,ByteCRC,The following statement contains a magic number: ulCRC = ulCRC >> 8;  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: if (iLen <= 0 || 0 != iLen % 2) {  	return null;  }  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: for (Int32 i = 0; i < dwCount; i++) {  	tmp1 = (UInt32)szHex [i * 2] - (((UInt32)szHex [i * 2] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp1 >= 16)  		return null;  	tmp2 = (UInt32)szHex [i * 2 + 1] - (((UInt32)szHex [i * 2 + 1] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp2 >= 16)  		return null;  	pbBuffer [i] = (Byte)(tmp1 * 16 + tmp2);  }  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: for (Int32 i = 0; i < dwCount; i++) {  	tmp1 = (UInt32)szHex [i * 2] - (((UInt32)szHex [i * 2] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp1 >= 16)  		return null;  	tmp2 = (UInt32)szHex [i * 2 + 1] - (((UInt32)szHex [i * 2 + 1] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp2 >= 16)  		return null;  	pbBuffer [i] = (Byte)(tmp1 * 16 + tmp2);  }  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: for (Int32 i = 0; i < dwCount; i++) {  	tmp1 = (UInt32)szHex [i * 2] - (((UInt32)szHex [i * 2] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp1 >= 16)  		return null;  	tmp2 = (UInt32)szHex [i * 2 + 1] - (((UInt32)szHex [i * 2 + 1] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp2 >= 16)  		return null;  	pbBuffer [i] = (Byte)(tmp1 * 16 + tmp2);  }  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: for (Int32 i = 0; i < dwCount; i++) {  	tmp1 = (UInt32)szHex [i * 2] - (((UInt32)szHex [i * 2] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp1 >= 16)  		return null;  	tmp2 = (UInt32)szHex [i * 2 + 1] - (((UInt32)szHex [i * 2 + 1] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp2 >= 16)  		return null;  	pbBuffer [i] = (Byte)(tmp1 * 16 + tmp2);  }  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: for (Int32 i = 0; i < dwCount; i++) {  	tmp1 = (UInt32)szHex [i * 2] - (((UInt32)szHex [i * 2] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp1 >= 16)  		return null;  	tmp2 = (UInt32)szHex [i * 2 + 1] - (((UInt32)szHex [i * 2 + 1] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp2 >= 16)  		return null;  	pbBuffer [i] = (Byte)(tmp1 * 16 + tmp2);  }  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: for (Int32 i = 0; i < dwCount; i++) {  	tmp1 = (UInt32)szHex [i * 2] - (((UInt32)szHex [i * 2] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp1 >= 16)  		return null;  	tmp2 = (UInt32)szHex [i * 2 + 1] - (((UInt32)szHex [i * 2 + 1] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp2 >= 16)  		return null;  	pbBuffer [i] = (Byte)(tmp1 * 16 + tmp2);  }  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: for (Int32 i = 0; i < dwCount; i++) {  	tmp1 = (UInt32)szHex [i * 2] - (((UInt32)szHex [i * 2] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp1 >= 16)  		return null;  	tmp2 = (UInt32)szHex [i * 2 + 1] - (((UInt32)szHex [i * 2 + 1] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp2 >= 16)  		return null;  	pbBuffer [i] = (Byte)(tmp1 * 16 + tmp2);  }  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: for (Int32 i = 0; i < dwCount; i++) {  	tmp1 = (UInt32)szHex [i * 2] - (((UInt32)szHex [i * 2] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp1 >= 16)  		return null;  	tmp2 = (UInt32)szHex [i * 2 + 1] - (((UInt32)szHex [i * 2 + 1] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp2 >= 16)  		return null;  	pbBuffer [i] = (Byte)(tmp1 * 16 + tmp2);  }  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: for (Int32 i = 0; i < dwCount; i++) {  	tmp1 = (UInt32)szHex [i * 2] - (((UInt32)szHex [i * 2] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp1 >= 16)  		return null;  	tmp2 = (UInt32)szHex [i * 2 + 1] - (((UInt32)szHex [i * 2 + 1] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  	if (tmp2 >= 16)  		return null;  	pbBuffer [i] = (Byte)(tmp1 * 16 + tmp2);  }  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: tmp1 = (UInt32)szHex [i * 2] - (((UInt32)szHex [i * 2] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: tmp1 = (UInt32)szHex [i * 2] - (((UInt32)szHex [i * 2] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: tmp1 = (UInt32)szHex [i * 2] - (((UInt32)szHex [i * 2] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: if (tmp1 >= 16)  	return null;  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: tmp2 = (UInt32)szHex [i * 2 + 1] - (((UInt32)szHex [i * 2 + 1] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: tmp2 = (UInt32)szHex [i * 2 + 1] - (((UInt32)szHex [i * 2 + 1] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: tmp2 = (UInt32)szHex [i * 2 + 1] - (((UInt32)szHex [i * 2 + 1] >= (UInt32)'A') ? (UInt32)'A' - 10 : (UInt32)'0');  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: if (tmp2 >= 16)  	return null;  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,HexToByte,The following statement contains a magic number: pbBuffer [i] = (Byte)(tmp1 * 16 + tmp2);  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,ByteToHex,The following statement contains a magic number: for (int i = 0; i < vByte.Length; i++) {  	if ((UInt32)vByte [i] < 0)  		return null;  	UInt32 k = (UInt32)vByte [i] / 16;  	sb.Append ((Char)(k + ((k > 9) ? 'A' - 10 : '0')));  	k = (UInt32)vByte [i] % 16;  	sb.Append ((Char)(k + ((k > 9) ? 'A' - 10 : '0')));  }  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,ByteToHex,The following statement contains a magic number: for (int i = 0; i < vByte.Length; i++) {  	if ((UInt32)vByte [i] < 0)  		return null;  	UInt32 k = (UInt32)vByte [i] / 16;  	sb.Append ((Char)(k + ((k > 9) ? 'A' - 10 : '0')));  	k = (UInt32)vByte [i] % 16;  	sb.Append ((Char)(k + ((k > 9) ? 'A' - 10 : '0')));  }  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,ByteToHex,The following statement contains a magic number: for (int i = 0; i < vByte.Length; i++) {  	if ((UInt32)vByte [i] < 0)  		return null;  	UInt32 k = (UInt32)vByte [i] / 16;  	sb.Append ((Char)(k + ((k > 9) ? 'A' - 10 : '0')));  	k = (UInt32)vByte [i] % 16;  	sb.Append ((Char)(k + ((k > 9) ? 'A' - 10 : '0')));  }  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,ByteToHex,The following statement contains a magic number: for (int i = 0; i < vByte.Length; i++) {  	if ((UInt32)vByte [i] < 0)  		return null;  	UInt32 k = (UInt32)vByte [i] / 16;  	sb.Append ((Char)(k + ((k > 9) ? 'A' - 10 : '0')));  	k = (UInt32)vByte [i] % 16;  	sb.Append ((Char)(k + ((k > 9) ? 'A' - 10 : '0')));  }  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,ByteToHex,The following statement contains a magic number: for (int i = 0; i < vByte.Length; i++) {  	if ((UInt32)vByte [i] < 0)  		return null;  	UInt32 k = (UInt32)vByte [i] / 16;  	sb.Append ((Char)(k + ((k > 9) ? 'A' - 10 : '0')));  	k = (UInt32)vByte [i] % 16;  	sb.Append ((Char)(k + ((k > 9) ? 'A' - 10 : '0')));  }  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,ByteToHex,The following statement contains a magic number: for (int i = 0; i < vByte.Length; i++) {  	if ((UInt32)vByte [i] < 0)  		return null;  	UInt32 k = (UInt32)vByte [i] / 16;  	sb.Append ((Char)(k + ((k > 9) ? 'A' - 10 : '0')));  	k = (UInt32)vByte [i] % 16;  	sb.Append ((Char)(k + ((k > 9) ? 'A' - 10 : '0')));  }  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,ByteToHex,The following statement contains a magic number: sb.Append ((Char)(k + ((k > 9) ? 'A' - 10 : '0')));  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,ByteToHex,The following statement contains a magic number: sb.Append ((Char)(k + ((k > 9) ? 'A' - 10 : '0')));  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,ByteToHex,The following statement contains a magic number: k = (UInt32)vByte [i] % 16;  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,ByteToHex,The following statement contains a magic number: sb.Append ((Char)(k + ((k > 9) ? 'A' - 10 : '0')));  
Magic Number,Mder.FC.Security,CryptoBase,C:\repos\neo2018_ZYFC\MderFc\Security\CryptoBase.cs,ByteToHex,The following statement contains a magic number: sb.Append ((Char)(k + ((k > 9) ? 'A' - 10 : '0')));  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,Encrypt,The following statement contains a magic number: try {  	byKey = System.Text.Encoding.UTF8.GetBytes (strEncrKey.Substring (0' 8));  	DESCryptoServiceProvider des = new DESCryptoServiceProvider ();  	byte[] inputByteArray = Encoding.UTF8.GetBytes (strText);  	MemoryStream ms = new MemoryStream ();  	CryptoStream cs = new CryptoStream (ms' des.CreateEncryptor (byKey' IV)' CryptoStreamMode.Write);  	cs.Write (inputByteArray' 0' inputByteArray.Length);  	cs.FlushFinalBlock ();  	return Convert.ToBase64String (ms.ToArray ());  }  catch (System.Exception error) {  	return "error:" + error.Message + "\r";  }  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,Encrypt,The following statement contains a magic number: byKey = System.Text.Encoding.UTF8.GetBytes (strEncrKey.Substring (0' 8));  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,Decrypt,The following statement contains a magic number: try {  	byKey = System.Text.Encoding.UTF8.GetBytes (sDecrKey.Substring (0' 8));  	DESCryptoServiceProvider des = new DESCryptoServiceProvider ();  	inputByteArray = Convert.FromBase64String (strText);  	MemoryStream ms = new MemoryStream ();  	CryptoStream cs = new CryptoStream (ms' des.CreateDecryptor (byKey' IV)' CryptoStreamMode.Write);  	cs.Write (inputByteArray' 0' inputByteArray.Length);  	cs.FlushFinalBlock ();  	System.Text.Encoding encoding = new System.Text.UTF8Encoding ();  	return encoding.GetString (ms.ToArray ());  }  catch (System.Exception error) {  	return "error:" + error.Message + "\r";  }  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,Decrypt,The following statement contains a magic number: byKey = System.Text.Encoding.UTF8.GetBytes (sDecrKey.Substring (0' 8));  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESEncrypt,The following statement contains a magic number: des.Key = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "MD5").Substring (0' 8));  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESEncrypt,The following statement contains a magic number: des.IV = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "MD5").Substring (0' 8));  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESDecrypt,The following statement contains a magic number: try {  	DESCryptoServiceProvider des = new DESCryptoServiceProvider ();  	int len;  	len = Text.Length / 2;  	byte[] inputByteArray = new byte[len];  	int x' i;  	for (x = 0; x < len; x++) {  		i = Convert.ToInt32 (Text.Substring (x * 2' 2)' 16);  		inputByteArray [x] = (byte)i;  	}  	des.Key = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "md5").Substring (0' 8));  	des.IV = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "md5").Substring (0' 8));  	System.IO.MemoryStream ms = new System.IO.MemoryStream ();  	CryptoStream cs = new CryptoStream (ms' des.CreateDecryptor ()' CryptoStreamMode.Write);  	cs.Write (inputByteArray' 0' inputByteArray.Length);  	cs.FlushFinalBlock ();  	return Encoding.Default.GetString (ms.ToArray ());  }  catch {  	return "";  }  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESDecrypt,The following statement contains a magic number: try {  	DESCryptoServiceProvider des = new DESCryptoServiceProvider ();  	int len;  	len = Text.Length / 2;  	byte[] inputByteArray = new byte[len];  	int x' i;  	for (x = 0; x < len; x++) {  		i = Convert.ToInt32 (Text.Substring (x * 2' 2)' 16);  		inputByteArray [x] = (byte)i;  	}  	des.Key = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "md5").Substring (0' 8));  	des.IV = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "md5").Substring (0' 8));  	System.IO.MemoryStream ms = new System.IO.MemoryStream ();  	CryptoStream cs = new CryptoStream (ms' des.CreateDecryptor ()' CryptoStreamMode.Write);  	cs.Write (inputByteArray' 0' inputByteArray.Length);  	cs.FlushFinalBlock ();  	return Encoding.Default.GetString (ms.ToArray ());  }  catch {  	return "";  }  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESDecrypt,The following statement contains a magic number: try {  	DESCryptoServiceProvider des = new DESCryptoServiceProvider ();  	int len;  	len = Text.Length / 2;  	byte[] inputByteArray = new byte[len];  	int x' i;  	for (x = 0; x < len; x++) {  		i = Convert.ToInt32 (Text.Substring (x * 2' 2)' 16);  		inputByteArray [x] = (byte)i;  	}  	des.Key = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "md5").Substring (0' 8));  	des.IV = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "md5").Substring (0' 8));  	System.IO.MemoryStream ms = new System.IO.MemoryStream ();  	CryptoStream cs = new CryptoStream (ms' des.CreateDecryptor ()' CryptoStreamMode.Write);  	cs.Write (inputByteArray' 0' inputByteArray.Length);  	cs.FlushFinalBlock ();  	return Encoding.Default.GetString (ms.ToArray ());  }  catch {  	return "";  }  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESDecrypt,The following statement contains a magic number: try {  	DESCryptoServiceProvider des = new DESCryptoServiceProvider ();  	int len;  	len = Text.Length / 2;  	byte[] inputByteArray = new byte[len];  	int x' i;  	for (x = 0; x < len; x++) {  		i = Convert.ToInt32 (Text.Substring (x * 2' 2)' 16);  		inputByteArray [x] = (byte)i;  	}  	des.Key = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "md5").Substring (0' 8));  	des.IV = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "md5").Substring (0' 8));  	System.IO.MemoryStream ms = new System.IO.MemoryStream ();  	CryptoStream cs = new CryptoStream (ms' des.CreateDecryptor ()' CryptoStreamMode.Write);  	cs.Write (inputByteArray' 0' inputByteArray.Length);  	cs.FlushFinalBlock ();  	return Encoding.Default.GetString (ms.ToArray ());  }  catch {  	return "";  }  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESDecrypt,The following statement contains a magic number: try {  	DESCryptoServiceProvider des = new DESCryptoServiceProvider ();  	int len;  	len = Text.Length / 2;  	byte[] inputByteArray = new byte[len];  	int x' i;  	for (x = 0; x < len; x++) {  		i = Convert.ToInt32 (Text.Substring (x * 2' 2)' 16);  		inputByteArray [x] = (byte)i;  	}  	des.Key = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "md5").Substring (0' 8));  	des.IV = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "md5").Substring (0' 8));  	System.IO.MemoryStream ms = new System.IO.MemoryStream ();  	CryptoStream cs = new CryptoStream (ms' des.CreateDecryptor ()' CryptoStreamMode.Write);  	cs.Write (inputByteArray' 0' inputByteArray.Length);  	cs.FlushFinalBlock ();  	return Encoding.Default.GetString (ms.ToArray ());  }  catch {  	return "";  }  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESDecrypt,The following statement contains a magic number: try {  	DESCryptoServiceProvider des = new DESCryptoServiceProvider ();  	int len;  	len = Text.Length / 2;  	byte[] inputByteArray = new byte[len];  	int x' i;  	for (x = 0; x < len; x++) {  		i = Convert.ToInt32 (Text.Substring (x * 2' 2)' 16);  		inputByteArray [x] = (byte)i;  	}  	des.Key = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "md5").Substring (0' 8));  	des.IV = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "md5").Substring (0' 8));  	System.IO.MemoryStream ms = new System.IO.MemoryStream ();  	CryptoStream cs = new CryptoStream (ms' des.CreateDecryptor ()' CryptoStreamMode.Write);  	cs.Write (inputByteArray' 0' inputByteArray.Length);  	cs.FlushFinalBlock ();  	return Encoding.Default.GetString (ms.ToArray ());  }  catch {  	return "";  }  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESDecrypt,The following statement contains a magic number: len = Text.Length / 2;  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESDecrypt,The following statement contains a magic number: for (x = 0; x < len; x++) {  	i = Convert.ToInt32 (Text.Substring (x * 2' 2)' 16);  	inputByteArray [x] = (byte)i;  }  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESDecrypt,The following statement contains a magic number: for (x = 0; x < len; x++) {  	i = Convert.ToInt32 (Text.Substring (x * 2' 2)' 16);  	inputByteArray [x] = (byte)i;  }  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESDecrypt,The following statement contains a magic number: for (x = 0; x < len; x++) {  	i = Convert.ToInt32 (Text.Substring (x * 2' 2)' 16);  	inputByteArray [x] = (byte)i;  }  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESDecrypt,The following statement contains a magic number: i = Convert.ToInt32 (Text.Substring (x * 2' 2)' 16);  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESDecrypt,The following statement contains a magic number: i = Convert.ToInt32 (Text.Substring (x * 2' 2)' 16);  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESDecrypt,The following statement contains a magic number: i = Convert.ToInt32 (Text.Substring (x * 2' 2)' 16);  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESDecrypt,The following statement contains a magic number: des.Key = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "md5").Substring (0' 8));  
Magic Number,Mder.FC.Security,DES,C:\repos\neo2018_ZYFC\MderFc\Security\DES.cs,DESDecrypt,The following statement contains a magic number: des.IV = ASCIIEncoding.ASCII.GetBytes (System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (sKey' "md5").Substring (0' 8));  
Magic Number,Mder.FC.Security,MD5,C:\repos\neo2018_ZYFC\MderFc\Security\MD5.cs,Encrypt,The following statement contains a magic number: if (Half)  	//16位MD5加密（取32位加密的9~25字符）  	output = output.Substring (8' 16);  
Magic Number,Mder.FC.Security,MD5,C:\repos\neo2018_ZYFC\MderFc\Security\MD5.cs,Encrypt,The following statement contains a magic number: if (Half)  	//16位MD5加密（取32位加密的9~25字符）  	output = output.Substring (8' 16);  
Magic Number,Mder.FC.Security,MD5,C:\repos\neo2018_ZYFC\MderFc\Security\MD5.cs,Encrypt,The following statement contains a magic number: output = output.Substring (8' 16);  
Magic Number,Mder.FC.Security,MD5,C:\repos\neo2018_ZYFC\MderFc\Security\MD5.cs,Encrypt,The following statement contains a magic number: output = output.Substring (8' 16);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,FormatNumStr,The following statement contains a magic number: try {  	r = srcNum.ToString ();  	s = string.Format ("{{0:{0}}}"' f);  	s = string.Format (s' decimal.Parse (r));  	if (s.Substring (0' 1) == ".")  		s = "0" + s;  	i = s.LastIndexOf (".");  	if (i < 0) {  		s = s + ".";  		i = s.Length - 1;  	}  	s = s.PadRight (dotPos + i + 1' '0');  	return s;  }  catch {  	s = "0.";  	s = s.PadRight (dotPos + 2' '0');  	return s;  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,FormatNumStr,The following statement contains a magic number: s = s.PadRight (dotPos + 2' '0');  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,GetSpellCode,The following statement contains a magic number: foreach (char vchar in srcStr) {  	// 若是字母则是其本身  	if ((vchar >= 'a' && vchar <= 'z') || (vchar >= 'A' && vchar <= 'Z')) {  		sbSpell.Append (char.ToUpper (vchar));  	}  	else {  		index = (int)vchar - 19968;  		if (index >= 0 && index < ChinaPinyin.Length) {  			sbSpell.Append (char.ToUpper (ChinaPinyin [index]));  		}  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,GetSpellCode,The following statement contains a magic number: if ((vchar >= 'a' && vchar <= 'z') || (vchar >= 'A' && vchar <= 'Z')) {  	sbSpell.Append (char.ToUpper (vchar));  }  else {  	index = (int)vchar - 19968;  	if (index >= 0 && index < ChinaPinyin.Length) {  		sbSpell.Append (char.ToUpper (ChinaPinyin [index]));  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,GetSpellCode,The following statement contains a magic number: index = (int)vchar - 19968;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: num = Math.Round (Math.Abs (num)' 2);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: str4 = ((long)(num * 100)).ToString ();  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: if (j > 15) {  	return "溢出";  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: str2 = str2.Substring (15 - j);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: for (i = 0; i < j; i++) {  	str3 = str4.Substring (i' 1);  	//取出需转换的某一位的值   	temp = Convert.ToInt32 (str3);  	//转换为数字   	if (i != (j - 3) && i != (j - 7) && i != (j - 11) && i != (j - 15)) {  		//当所取位数不为元、万、亿、万亿上的数字时   		if (str3 == "0") {  			ch1 = "";  			ch2 = "";  			nzero = nzero + 1;  		}  		else {  			if (str3 != "0" && nzero != 0) {  				ch1 = "零" + str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  			else {  				ch1 = str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  		}  	}  	else {  		//该位是万亿，亿，万，元位等关键位   		if (str3 != "0" && nzero != 0) {  			ch1 = "零" + str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			if (str3 != "0" && nzero == 0) {  				ch1 = str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  			else {  				if (str3 == "0" && nzero >= 3) {  					ch1 = "";  					ch2 = "";  					nzero = nzero + 1;  				}  				else {  					if (j >= 11) {  						ch1 = "";  						nzero = nzero + 1;  					}  					else {  						ch1 = "";  						ch2 = str2.Substring (i' 1);  						nzero = nzero + 1;  					}  				}  			}  		}  	}  	if (i == (j - 11) || i == (j - 3)) {  		//如果该位是亿位或元位，则必须写上   		ch2 = str2.Substring (i' 1);  	}  	strResult = strResult + ch1 + ch2;  	if (i == j - 1 && str3 == "0") {  		//最后一位（分）为0时，加上“整”   		strResult = strResult + '整';  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: for (i = 0; i < j; i++) {  	str3 = str4.Substring (i' 1);  	//取出需转换的某一位的值   	temp = Convert.ToInt32 (str3);  	//转换为数字   	if (i != (j - 3) && i != (j - 7) && i != (j - 11) && i != (j - 15)) {  		//当所取位数不为元、万、亿、万亿上的数字时   		if (str3 == "0") {  			ch1 = "";  			ch2 = "";  			nzero = nzero + 1;  		}  		else {  			if (str3 != "0" && nzero != 0) {  				ch1 = "零" + str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  			else {  				ch1 = str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  		}  	}  	else {  		//该位是万亿，亿，万，元位等关键位   		if (str3 != "0" && nzero != 0) {  			ch1 = "零" + str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			if (str3 != "0" && nzero == 0) {  				ch1 = str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  			else {  				if (str3 == "0" && nzero >= 3) {  					ch1 = "";  					ch2 = "";  					nzero = nzero + 1;  				}  				else {  					if (j >= 11) {  						ch1 = "";  						nzero = nzero + 1;  					}  					else {  						ch1 = "";  						ch2 = str2.Substring (i' 1);  						nzero = nzero + 1;  					}  				}  			}  		}  	}  	if (i == (j - 11) || i == (j - 3)) {  		//如果该位是亿位或元位，则必须写上   		ch2 = str2.Substring (i' 1);  	}  	strResult = strResult + ch1 + ch2;  	if (i == j - 1 && str3 == "0") {  		//最后一位（分）为0时，加上“整”   		strResult = strResult + '整';  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: for (i = 0; i < j; i++) {  	str3 = str4.Substring (i' 1);  	//取出需转换的某一位的值   	temp = Convert.ToInt32 (str3);  	//转换为数字   	if (i != (j - 3) && i != (j - 7) && i != (j - 11) && i != (j - 15)) {  		//当所取位数不为元、万、亿、万亿上的数字时   		if (str3 == "0") {  			ch1 = "";  			ch2 = "";  			nzero = nzero + 1;  		}  		else {  			if (str3 != "0" && nzero != 0) {  				ch1 = "零" + str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  			else {  				ch1 = str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  		}  	}  	else {  		//该位是万亿，亿，万，元位等关键位   		if (str3 != "0" && nzero != 0) {  			ch1 = "零" + str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			if (str3 != "0" && nzero == 0) {  				ch1 = str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  			else {  				if (str3 == "0" && nzero >= 3) {  					ch1 = "";  					ch2 = "";  					nzero = nzero + 1;  				}  				else {  					if (j >= 11) {  						ch1 = "";  						nzero = nzero + 1;  					}  					else {  						ch1 = "";  						ch2 = str2.Substring (i' 1);  						nzero = nzero + 1;  					}  				}  			}  		}  	}  	if (i == (j - 11) || i == (j - 3)) {  		//如果该位是亿位或元位，则必须写上   		ch2 = str2.Substring (i' 1);  	}  	strResult = strResult + ch1 + ch2;  	if (i == j - 1 && str3 == "0") {  		//最后一位（分）为0时，加上“整”   		strResult = strResult + '整';  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: for (i = 0; i < j; i++) {  	str3 = str4.Substring (i' 1);  	//取出需转换的某一位的值   	temp = Convert.ToInt32 (str3);  	//转换为数字   	if (i != (j - 3) && i != (j - 7) && i != (j - 11) && i != (j - 15)) {  		//当所取位数不为元、万、亿、万亿上的数字时   		if (str3 == "0") {  			ch1 = "";  			ch2 = "";  			nzero = nzero + 1;  		}  		else {  			if (str3 != "0" && nzero != 0) {  				ch1 = "零" + str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  			else {  				ch1 = str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  		}  	}  	else {  		//该位是万亿，亿，万，元位等关键位   		if (str3 != "0" && nzero != 0) {  			ch1 = "零" + str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			if (str3 != "0" && nzero == 0) {  				ch1 = str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  			else {  				if (str3 == "0" && nzero >= 3) {  					ch1 = "";  					ch2 = "";  					nzero = nzero + 1;  				}  				else {  					if (j >= 11) {  						ch1 = "";  						nzero = nzero + 1;  					}  					else {  						ch1 = "";  						ch2 = str2.Substring (i' 1);  						nzero = nzero + 1;  					}  				}  			}  		}  	}  	if (i == (j - 11) || i == (j - 3)) {  		//如果该位是亿位或元位，则必须写上   		ch2 = str2.Substring (i' 1);  	}  	strResult = strResult + ch1 + ch2;  	if (i == j - 1 && str3 == "0") {  		//最后一位（分）为0时，加上“整”   		strResult = strResult + '整';  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: for (i = 0; i < j; i++) {  	str3 = str4.Substring (i' 1);  	//取出需转换的某一位的值   	temp = Convert.ToInt32 (str3);  	//转换为数字   	if (i != (j - 3) && i != (j - 7) && i != (j - 11) && i != (j - 15)) {  		//当所取位数不为元、万、亿、万亿上的数字时   		if (str3 == "0") {  			ch1 = "";  			ch2 = "";  			nzero = nzero + 1;  		}  		else {  			if (str3 != "0" && nzero != 0) {  				ch1 = "零" + str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  			else {  				ch1 = str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  		}  	}  	else {  		//该位是万亿，亿，万，元位等关键位   		if (str3 != "0" && nzero != 0) {  			ch1 = "零" + str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			if (str3 != "0" && nzero == 0) {  				ch1 = str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  			else {  				if (str3 == "0" && nzero >= 3) {  					ch1 = "";  					ch2 = "";  					nzero = nzero + 1;  				}  				else {  					if (j >= 11) {  						ch1 = "";  						nzero = nzero + 1;  					}  					else {  						ch1 = "";  						ch2 = str2.Substring (i' 1);  						nzero = nzero + 1;  					}  				}  			}  		}  	}  	if (i == (j - 11) || i == (j - 3)) {  		//如果该位是亿位或元位，则必须写上   		ch2 = str2.Substring (i' 1);  	}  	strResult = strResult + ch1 + ch2;  	if (i == j - 1 && str3 == "0") {  		//最后一位（分）为0时，加上“整”   		strResult = strResult + '整';  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: for (i = 0; i < j; i++) {  	str3 = str4.Substring (i' 1);  	//取出需转换的某一位的值   	temp = Convert.ToInt32 (str3);  	//转换为数字   	if (i != (j - 3) && i != (j - 7) && i != (j - 11) && i != (j - 15)) {  		//当所取位数不为元、万、亿、万亿上的数字时   		if (str3 == "0") {  			ch1 = "";  			ch2 = "";  			nzero = nzero + 1;  		}  		else {  			if (str3 != "0" && nzero != 0) {  				ch1 = "零" + str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  			else {  				ch1 = str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  		}  	}  	else {  		//该位是万亿，亿，万，元位等关键位   		if (str3 != "0" && nzero != 0) {  			ch1 = "零" + str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			if (str3 != "0" && nzero == 0) {  				ch1 = str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  			else {  				if (str3 == "0" && nzero >= 3) {  					ch1 = "";  					ch2 = "";  					nzero = nzero + 1;  				}  				else {  					if (j >= 11) {  						ch1 = "";  						nzero = nzero + 1;  					}  					else {  						ch1 = "";  						ch2 = str2.Substring (i' 1);  						nzero = nzero + 1;  					}  				}  			}  		}  	}  	if (i == (j - 11) || i == (j - 3)) {  		//如果该位是亿位或元位，则必须写上   		ch2 = str2.Substring (i' 1);  	}  	strResult = strResult + ch1 + ch2;  	if (i == j - 1 && str3 == "0") {  		//最后一位（分）为0时，加上“整”   		strResult = strResult + '整';  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: for (i = 0; i < j; i++) {  	str3 = str4.Substring (i' 1);  	//取出需转换的某一位的值   	temp = Convert.ToInt32 (str3);  	//转换为数字   	if (i != (j - 3) && i != (j - 7) && i != (j - 11) && i != (j - 15)) {  		//当所取位数不为元、万、亿、万亿上的数字时   		if (str3 == "0") {  			ch1 = "";  			ch2 = "";  			nzero = nzero + 1;  		}  		else {  			if (str3 != "0" && nzero != 0) {  				ch1 = "零" + str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  			else {  				ch1 = str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  		}  	}  	else {  		//该位是万亿，亿，万，元位等关键位   		if (str3 != "0" && nzero != 0) {  			ch1 = "零" + str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			if (str3 != "0" && nzero == 0) {  				ch1 = str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  			else {  				if (str3 == "0" && nzero >= 3) {  					ch1 = "";  					ch2 = "";  					nzero = nzero + 1;  				}  				else {  					if (j >= 11) {  						ch1 = "";  						nzero = nzero + 1;  					}  					else {  						ch1 = "";  						ch2 = str2.Substring (i' 1);  						nzero = nzero + 1;  					}  				}  			}  		}  	}  	if (i == (j - 11) || i == (j - 3)) {  		//如果该位是亿位或元位，则必须写上   		ch2 = str2.Substring (i' 1);  	}  	strResult = strResult + ch1 + ch2;  	if (i == j - 1 && str3 == "0") {  		//最后一位（分）为0时，加上“整”   		strResult = strResult + '整';  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: for (i = 0; i < j; i++) {  	str3 = str4.Substring (i' 1);  	//取出需转换的某一位的值   	temp = Convert.ToInt32 (str3);  	//转换为数字   	if (i != (j - 3) && i != (j - 7) && i != (j - 11) && i != (j - 15)) {  		//当所取位数不为元、万、亿、万亿上的数字时   		if (str3 == "0") {  			ch1 = "";  			ch2 = "";  			nzero = nzero + 1;  		}  		else {  			if (str3 != "0" && nzero != 0) {  				ch1 = "零" + str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  			else {  				ch1 = str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  		}  	}  	else {  		//该位是万亿，亿，万，元位等关键位   		if (str3 != "0" && nzero != 0) {  			ch1 = "零" + str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			if (str3 != "0" && nzero == 0) {  				ch1 = str1.Substring (temp * 1' 1);  				ch2 = str2.Substring (i' 1);  				nzero = 0;  			}  			else {  				if (str3 == "0" && nzero >= 3) {  					ch1 = "";  					ch2 = "";  					nzero = nzero + 1;  				}  				else {  					if (j >= 11) {  						ch1 = "";  						nzero = nzero + 1;  					}  					else {  						ch1 = "";  						ch2 = str2.Substring (i' 1);  						nzero = nzero + 1;  					}  				}  			}  		}  	}  	if (i == (j - 11) || i == (j - 3)) {  		//如果该位是亿位或元位，则必须写上   		ch2 = str2.Substring (i' 1);  	}  	strResult = strResult + ch1 + ch2;  	if (i == j - 1 && str3 == "0") {  		//最后一位（分）为0时，加上“整”   		strResult = strResult + '整';  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: if (i != (j - 3) && i != (j - 7) && i != (j - 11) && i != (j - 15)) {  	//当所取位数不为元、万、亿、万亿上的数字时   	if (str3 == "0") {  		ch1 = "";  		ch2 = "";  		nzero = nzero + 1;  	}  	else {  		if (str3 != "0" && nzero != 0) {  			ch1 = "零" + str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			ch1 = str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  	}  }  else {  	//该位是万亿，亿，万，元位等关键位   	if (str3 != "0" && nzero != 0) {  		ch1 = "零" + str1.Substring (temp * 1' 1);  		ch2 = str2.Substring (i' 1);  		nzero = 0;  	}  	else {  		if (str3 != "0" && nzero == 0) {  			ch1 = str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			if (str3 == "0" && nzero >= 3) {  				ch1 = "";  				ch2 = "";  				nzero = nzero + 1;  			}  			else {  				if (j >= 11) {  					ch1 = "";  					nzero = nzero + 1;  				}  				else {  					ch1 = "";  					ch2 = str2.Substring (i' 1);  					nzero = nzero + 1;  				}  			}  		}  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: if (i != (j - 3) && i != (j - 7) && i != (j - 11) && i != (j - 15)) {  	//当所取位数不为元、万、亿、万亿上的数字时   	if (str3 == "0") {  		ch1 = "";  		ch2 = "";  		nzero = nzero + 1;  	}  	else {  		if (str3 != "0" && nzero != 0) {  			ch1 = "零" + str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			ch1 = str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  	}  }  else {  	//该位是万亿，亿，万，元位等关键位   	if (str3 != "0" && nzero != 0) {  		ch1 = "零" + str1.Substring (temp * 1' 1);  		ch2 = str2.Substring (i' 1);  		nzero = 0;  	}  	else {  		if (str3 != "0" && nzero == 0) {  			ch1 = str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			if (str3 == "0" && nzero >= 3) {  				ch1 = "";  				ch2 = "";  				nzero = nzero + 1;  			}  			else {  				if (j >= 11) {  					ch1 = "";  					nzero = nzero + 1;  				}  				else {  					ch1 = "";  					ch2 = str2.Substring (i' 1);  					nzero = nzero + 1;  				}  			}  		}  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: if (i != (j - 3) && i != (j - 7) && i != (j - 11) && i != (j - 15)) {  	//当所取位数不为元、万、亿、万亿上的数字时   	if (str3 == "0") {  		ch1 = "";  		ch2 = "";  		nzero = nzero + 1;  	}  	else {  		if (str3 != "0" && nzero != 0) {  			ch1 = "零" + str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			ch1 = str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  	}  }  else {  	//该位是万亿，亿，万，元位等关键位   	if (str3 != "0" && nzero != 0) {  		ch1 = "零" + str1.Substring (temp * 1' 1);  		ch2 = str2.Substring (i' 1);  		nzero = 0;  	}  	else {  		if (str3 != "0" && nzero == 0) {  			ch1 = str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			if (str3 == "0" && nzero >= 3) {  				ch1 = "";  				ch2 = "";  				nzero = nzero + 1;  			}  			else {  				if (j >= 11) {  					ch1 = "";  					nzero = nzero + 1;  				}  				else {  					ch1 = "";  					ch2 = str2.Substring (i' 1);  					nzero = nzero + 1;  				}  			}  		}  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: if (i != (j - 3) && i != (j - 7) && i != (j - 11) && i != (j - 15)) {  	//当所取位数不为元、万、亿、万亿上的数字时   	if (str3 == "0") {  		ch1 = "";  		ch2 = "";  		nzero = nzero + 1;  	}  	else {  		if (str3 != "0" && nzero != 0) {  			ch1 = "零" + str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			ch1 = str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  	}  }  else {  	//该位是万亿，亿，万，元位等关键位   	if (str3 != "0" && nzero != 0) {  		ch1 = "零" + str1.Substring (temp * 1' 1);  		ch2 = str2.Substring (i' 1);  		nzero = 0;  	}  	else {  		if (str3 != "0" && nzero == 0) {  			ch1 = str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			if (str3 == "0" && nzero >= 3) {  				ch1 = "";  				ch2 = "";  				nzero = nzero + 1;  			}  			else {  				if (j >= 11) {  					ch1 = "";  					nzero = nzero + 1;  				}  				else {  					ch1 = "";  					ch2 = str2.Substring (i' 1);  					nzero = nzero + 1;  				}  			}  		}  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: if (i != (j - 3) && i != (j - 7) && i != (j - 11) && i != (j - 15)) {  	//当所取位数不为元、万、亿、万亿上的数字时   	if (str3 == "0") {  		ch1 = "";  		ch2 = "";  		nzero = nzero + 1;  	}  	else {  		if (str3 != "0" && nzero != 0) {  			ch1 = "零" + str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			ch1 = str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  	}  }  else {  	//该位是万亿，亿，万，元位等关键位   	if (str3 != "0" && nzero != 0) {  		ch1 = "零" + str1.Substring (temp * 1' 1);  		ch2 = str2.Substring (i' 1);  		nzero = 0;  	}  	else {  		if (str3 != "0" && nzero == 0) {  			ch1 = str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			if (str3 == "0" && nzero >= 3) {  				ch1 = "";  				ch2 = "";  				nzero = nzero + 1;  			}  			else {  				if (j >= 11) {  					ch1 = "";  					nzero = nzero + 1;  				}  				else {  					ch1 = "";  					ch2 = str2.Substring (i' 1);  					nzero = nzero + 1;  				}  			}  		}  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: if (i != (j - 3) && i != (j - 7) && i != (j - 11) && i != (j - 15)) {  	//当所取位数不为元、万、亿、万亿上的数字时   	if (str3 == "0") {  		ch1 = "";  		ch2 = "";  		nzero = nzero + 1;  	}  	else {  		if (str3 != "0" && nzero != 0) {  			ch1 = "零" + str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			ch1 = str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  	}  }  else {  	//该位是万亿，亿，万，元位等关键位   	if (str3 != "0" && nzero != 0) {  		ch1 = "零" + str1.Substring (temp * 1' 1);  		ch2 = str2.Substring (i' 1);  		nzero = 0;  	}  	else {  		if (str3 != "0" && nzero == 0) {  			ch1 = str1.Substring (temp * 1' 1);  			ch2 = str2.Substring (i' 1);  			nzero = 0;  		}  		else {  			if (str3 == "0" && nzero >= 3) {  				ch1 = "";  				ch2 = "";  				nzero = nzero + 1;  			}  			else {  				if (j >= 11) {  					ch1 = "";  					nzero = nzero + 1;  				}  				else {  					ch1 = "";  					ch2 = str2.Substring (i' 1);  					nzero = nzero + 1;  				}  			}  		}  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: if (str3 != "0" && nzero != 0) {  	ch1 = "零" + str1.Substring (temp * 1' 1);  	ch2 = str2.Substring (i' 1);  	nzero = 0;  }  else {  	if (str3 != "0" && nzero == 0) {  		ch1 = str1.Substring (temp * 1' 1);  		ch2 = str2.Substring (i' 1);  		nzero = 0;  	}  	else {  		if (str3 == "0" && nzero >= 3) {  			ch1 = "";  			ch2 = "";  			nzero = nzero + 1;  		}  		else {  			if (j >= 11) {  				ch1 = "";  				nzero = nzero + 1;  			}  			else {  				ch1 = "";  				ch2 = str2.Substring (i' 1);  				nzero = nzero + 1;  			}  		}  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: if (str3 != "0" && nzero != 0) {  	ch1 = "零" + str1.Substring (temp * 1' 1);  	ch2 = str2.Substring (i' 1);  	nzero = 0;  }  else {  	if (str3 != "0" && nzero == 0) {  		ch1 = str1.Substring (temp * 1' 1);  		ch2 = str2.Substring (i' 1);  		nzero = 0;  	}  	else {  		if (str3 == "0" && nzero >= 3) {  			ch1 = "";  			ch2 = "";  			nzero = nzero + 1;  		}  		else {  			if (j >= 11) {  				ch1 = "";  				nzero = nzero + 1;  			}  			else {  				ch1 = "";  				ch2 = str2.Substring (i' 1);  				nzero = nzero + 1;  			}  		}  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: if (str3 != "0" && nzero == 0) {  	ch1 = str1.Substring (temp * 1' 1);  	ch2 = str2.Substring (i' 1);  	nzero = 0;  }  else {  	if (str3 == "0" && nzero >= 3) {  		ch1 = "";  		ch2 = "";  		nzero = nzero + 1;  	}  	else {  		if (j >= 11) {  			ch1 = "";  			nzero = nzero + 1;  		}  		else {  			ch1 = "";  			ch2 = str2.Substring (i' 1);  			nzero = nzero + 1;  		}  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: if (str3 != "0" && nzero == 0) {  	ch1 = str1.Substring (temp * 1' 1);  	ch2 = str2.Substring (i' 1);  	nzero = 0;  }  else {  	if (str3 == "0" && nzero >= 3) {  		ch1 = "";  		ch2 = "";  		nzero = nzero + 1;  	}  	else {  		if (j >= 11) {  			ch1 = "";  			nzero = nzero + 1;  		}  		else {  			ch1 = "";  			ch2 = str2.Substring (i' 1);  			nzero = nzero + 1;  		}  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: if (str3 == "0" && nzero >= 3) {  	ch1 = "";  	ch2 = "";  	nzero = nzero + 1;  }  else {  	if (j >= 11) {  		ch1 = "";  		nzero = nzero + 1;  	}  	else {  		ch1 = "";  		ch2 = str2.Substring (i' 1);  		nzero = nzero + 1;  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: if (str3 == "0" && nzero >= 3) {  	ch1 = "";  	ch2 = "";  	nzero = nzero + 1;  }  else {  	if (j >= 11) {  		ch1 = "";  		nzero = nzero + 1;  	}  	else {  		ch1 = "";  		ch2 = str2.Substring (i' 1);  		nzero = nzero + 1;  	}  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: if (j >= 11) {  	ch1 = "";  	nzero = nzero + 1;  }  else {  	ch1 = "";  	ch2 = str2.Substring (i' 1);  	nzero = nzero + 1;  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: if (i == (j - 11) || i == (j - 3)) {  	//如果该位是亿位或元位，则必须写上   	ch2 = str2.Substring (i' 1);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,ChangeMoneyToUpper,The following statement contains a magic number: if (i == (j - 11) || i == (j - 3)) {  	//如果该位是亿位或元位，则必须写上   	ch2 = str2.Substring (i' 1);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,StrToASCII16,The following statement contains a magic number: for (int i = 0; i < b.Length; i++) {  	sb.Append (string.Concat ("\\x"' Convert.ToString (b [i]' 16)));  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,StrToASCII16,The following statement contains a magic number: sb.Append (string.Concat ("\\x"' Convert.ToString (b [i]' 16)));  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: if ((use = messageLen % 3) > 0) {  	for (int i = 0; i < 3 - use; i++)  		byteMessage.Add (empty);  	page++;  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: if ((use = messageLen % 3) > 0) {  	for (int i = 0; i < 3 - use; i++)  		byteMessage.Add (empty);  	page++;  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < 3 - use; i++)  	byteMessage.Add (empty);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: outmessage = new System.Text.StringBuilder (page * 4);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	//取一组3个字节的组  	byte[] instr = new byte[3];  	instr [0] = (byte)byteMessage [i * 3];  	instr [1] = (byte)byteMessage [i * 3 + 1];  	instr [2] = (byte)byteMessage [i * 3 + 2];  	//六个位为一组，补0变成4个字节  	int[] outstr = new int[4];  	//第一个输出字节：取第一输入字节的前6位，并且在高位补0，使其变成8位（一个字节）  	outstr [0] = instr [0] >> 2;  	//第二个输出字节：取第一输入字节的后2位和第二个输入字节的前4位（共6位），并且在高位补0，使其变成8位（一个字节）  	outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  	//第三个输出字节：取第二输入字节的后4位和第三个输入字节的前2位（共6位），并且在高位补0，使其变成8位（一个字节）  	if (!instr [1].Equals (empty))  		outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  	else  		outstr [2] = 64;  	//第四个输出字节：取第三输入字节的后6位，并且在高位补0，使其变成8位（一个字节）  	if (!instr [2].Equals (empty))  		outstr [3] = (instr [2] & 0x3f);  	else  		outstr [3] = 64;  	outmessage.Append (Base64Code [outstr [0]]);  	outmessage.Append (Base64Code [outstr [1]]);  	outmessage.Append (Base64Code [outstr [2]]);  	outmessage.Append (Base64Code [outstr [3]]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: instr [0] = (byte)byteMessage [i * 3];  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: instr [1] = (byte)byteMessage [i * 3 + 1];  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: instr [2] = (byte)byteMessage [i * 3 + 2];  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: instr [2] = (byte)byteMessage [i * 3 + 2];  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: instr [2] = (byte)byteMessage [i * 3 + 2];  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: outstr [0] = instr [0] >> 2;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: outstr [1] = ((instr [0] & 0x03) << 4) ^ (instr [1] >> 4);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: if (!instr [1].Equals (empty))  	outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  else  	outstr [2] = 64;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: if (!instr [1].Equals (empty))  	outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  else  	outstr [2] = 64;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: if (!instr [1].Equals (empty))  	outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  else  	outstr [2] = 64;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: if (!instr [1].Equals (empty))  	outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  else  	outstr [2] = 64;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: if (!instr [1].Equals (empty))  	outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  else  	outstr [2] = 64;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: if (!instr [1].Equals (empty))  	outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  else  	outstr [2] = 64;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: outstr [2] = ((instr [1] & 0x0f) << 2) ^ (instr [2] >> 6);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: outstr [2] = 64;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: outstr [2] = 64;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: if (!instr [2].Equals (empty))  	outstr [3] = (instr [2] & 0x3f);  else  	outstr [3] = 64;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: if (!instr [2].Equals (empty))  	outstr [3] = (instr [2] & 0x3f);  else  	outstr [3] = 64;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: if (!instr [2].Equals (empty))  	outstr [3] = (instr [2] & 0x3f);  else  	outstr [3] = 64;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: if (!instr [2].Equals (empty))  	outstr [3] = (instr [2] & 0x3f);  else  	outstr [3] = 64;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: if (!instr [2].Equals (empty))  	outstr [3] = (instr [2] & 0x3f);  else  	outstr [3] = 64;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: outstr [3] = (instr [2] & 0x3f);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: outstr [3] = (instr [2] & 0x3f);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: outstr [3] = 64;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: outstr [3] = 64;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: outmessage.Append (Base64Code [outstr [2]]);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Code,The following statement contains a magic number: outmessage.Append (Base64Code [outstr [3]]);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: if ((Message.Length % 4) != 0) {  	throw new ArgumentException ("不是正确的BASE64编码，请检查。"' "Message");  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: for (int i = 0; i < page; i++) {  	byte[] instr = new byte[4];  	instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  	instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  	instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  	instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  	byte[] outstr = new byte[3];  	outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  	if (instr [2] != 64) {  		outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  	}  	else {  		outstr [2] = 0;  	}  	if (instr [3] != 64) {  		outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  	}  	else {  		outstr [2] = 0;  	}  	outMessage.Add (outstr [0]);  	if (outstr [1] != 0)  		outMessage.Add (outstr [1]);  	if (outstr [2] != 0)  		outMessage.Add (outstr [2]);  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: instr [0] = (byte)Base64Code.IndexOf (message [i * 4]);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: instr [1] = (byte)Base64Code.IndexOf (message [i * 4 + 1]);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: instr [2] = (byte)Base64Code.IndexOf (message [i * 4 + 2]);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: instr [3] = (byte)Base64Code.IndexOf (message [i * 4 + 3]);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: outstr [0] = (byte)((instr [0] << 2) ^ ((instr [1] & 0x30) >> 4));  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: if (instr [2] != 64) {  	outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  }  else {  	outstr [2] = 0;  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: if (instr [2] != 64) {  	outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  }  else {  	outstr [2] = 0;  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: if (instr [2] != 64) {  	outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  }  else {  	outstr [2] = 0;  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: if (instr [2] != 64) {  	outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  }  else {  	outstr [2] = 0;  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: if (instr [2] != 64) {  	outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  }  else {  	outstr [2] = 0;  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: if (instr [2] != 64) {  	outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  }  else {  	outstr [2] = 0;  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: outstr [1] = (byte)((instr [1] << 4) ^ ((instr [2] & 0x3c) >> 2));  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: outstr [2] = 0;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: if (instr [3] != 64) {  	outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  }  else {  	outstr [2] = 0;  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: if (instr [3] != 64) {  	outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  }  else {  	outstr [2] = 0;  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: if (instr [3] != 64) {  	outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  }  else {  	outstr [2] = 0;  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: if (instr [3] != 64) {  	outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  }  else {  	outstr [2] = 0;  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: if (instr [3] != 64) {  	outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  }  else {  	outstr [2] = 0;  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: if (instr [3] != 64) {  	outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  }  else {  	outstr [2] = 0;  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: if (instr [3] != 64) {  	outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  }  else {  	outstr [2] = 0;  }  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: outstr [2] = (byte)((instr [2] << 6) ^ instr [3]);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: outstr [2] = 0;  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: if (outstr [2] != 0)  	outMessage.Add (outstr [2]);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: if (outstr [2] != 0)  	outMessage.Add (outstr [2]);  
Magic Number,Mder.FC.Text,StrUtil,C:\repos\neo2018_ZYFC\MderFc\Text\StrUtil.cs,Base64Decode,The following statement contains a magic number: outMessage.Add (outstr [2]);  
Magic Number,Mder.FC.Win,Net,C:\repos\neo2018_ZYFC\MderFc\Win\Net.cs,Test,The following statement contains a magic number: return NetShareAdd (null' 502' ref info' out error);  
Magic Number,Mder.FC.Win,Net,C:\repos\neo2018_ZYFC\MderFc\Win\Net.cs,CheckSiteStatus,The following statement contains a magic number: if (HasConnection ()) {  	//here we will ping the host 4 times (standard)  	for (int i = 0; i < 4; i++) {  		try {  			//send the ping 4 times to the host and record the returned data  			PingReply reply = ping.Send (address' 1000' data' options);  			//make sure we dont have a null reply  			if (!(reply == null)) {  				switch (reply.Status) {  				case IPStatus.Success:  					returnMessage = string.Format ("Reply from {0}: bytes={1} time={2}ms TTL={3}"' reply.Address' reply.Buffer.Length' reply.RoundtripTime' reply.Options.Ttl);  					break;  				case IPStatus.TimedOut:  					returnMessage = "Connection has timed out...";  					break;  				default:  					returnMessage = string.Format ("Ping failed: {0}"' reply.Status.ToString ());  					break;  				}  			}  			else  				returnMessage = "Connection failed for an unknown reason...";  		}  		catch (PingException ex) {  			returnMessage = string.Format ("Connection Error: {0}"' ex.Message);  		}  		catch (SocketException ex) {  			returnMessage = string.Format ("Connection Error: {0}"' ex.Message);  		}  	}  }  else  	returnMessage = "No Internet connection found...";  
Magic Number,Mder.FC.Win,Net,C:\repos\neo2018_ZYFC\MderFc\Win\Net.cs,CheckSiteStatus,The following statement contains a magic number: if (HasConnection ()) {  	//here we will ping the host 4 times (standard)  	for (int i = 0; i < 4; i++) {  		try {  			//send the ping 4 times to the host and record the returned data  			PingReply reply = ping.Send (address' 1000' data' options);  			//make sure we dont have a null reply  			if (!(reply == null)) {  				switch (reply.Status) {  				case IPStatus.Success:  					returnMessage = string.Format ("Reply from {0}: bytes={1} time={2}ms TTL={3}"' reply.Address' reply.Buffer.Length' reply.RoundtripTime' reply.Options.Ttl);  					break;  				case IPStatus.TimedOut:  					returnMessage = "Connection has timed out...";  					break;  				default:  					returnMessage = string.Format ("Ping failed: {0}"' reply.Status.ToString ());  					break;  				}  			}  			else  				returnMessage = "Connection failed for an unknown reason...";  		}  		catch (PingException ex) {  			returnMessage = string.Format ("Connection Error: {0}"' ex.Message);  		}  		catch (SocketException ex) {  			returnMessage = string.Format ("Connection Error: {0}"' ex.Message);  		}  	}  }  else  	returnMessage = "No Internet connection found...";  
Magic Number,Mder.FC.Win,Net,C:\repos\neo2018_ZYFC\MderFc\Win\Net.cs,CheckSiteStatus,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	try {  		//send the ping 4 times to the host and record the returned data  		PingReply reply = ping.Send (address' 1000' data' options);  		//make sure we dont have a null reply  		if (!(reply == null)) {  			switch (reply.Status) {  			case IPStatus.Success:  				returnMessage = string.Format ("Reply from {0}: bytes={1} time={2}ms TTL={3}"' reply.Address' reply.Buffer.Length' reply.RoundtripTime' reply.Options.Ttl);  				break;  			case IPStatus.TimedOut:  				returnMessage = "Connection has timed out...";  				break;  			default:  				returnMessage = string.Format ("Ping failed: {0}"' reply.Status.ToString ());  				break;  			}  		}  		else  			returnMessage = "Connection failed for an unknown reason...";  	}  	catch (PingException ex) {  		returnMessage = string.Format ("Connection Error: {0}"' ex.Message);  	}  	catch (SocketException ex) {  		returnMessage = string.Format ("Connection Error: {0}"' ex.Message);  	}  }  
Magic Number,Mder.FC.Win,Net,C:\repos\neo2018_ZYFC\MderFc\Win\Net.cs,CheckSiteStatus,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	try {  		//send the ping 4 times to the host and record the returned data  		PingReply reply = ping.Send (address' 1000' data' options);  		//make sure we dont have a null reply  		if (!(reply == null)) {  			switch (reply.Status) {  			case IPStatus.Success:  				returnMessage = string.Format ("Reply from {0}: bytes={1} time={2}ms TTL={3}"' reply.Address' reply.Buffer.Length' reply.RoundtripTime' reply.Options.Ttl);  				break;  			case IPStatus.TimedOut:  				returnMessage = "Connection has timed out...";  				break;  			default:  				returnMessage = string.Format ("Ping failed: {0}"' reply.Status.ToString ());  				break;  			}  		}  		else  			returnMessage = "Connection failed for an unknown reason...";  	}  	catch (PingException ex) {  		returnMessage = string.Format ("Connection Error: {0}"' ex.Message);  	}  	catch (SocketException ex) {  		returnMessage = string.Format ("Connection Error: {0}"' ex.Message);  	}  }  
Magic Number,Mder.FC.Win,Net,C:\repos\neo2018_ZYFC\MderFc\Win\Net.cs,CheckSiteStatus,The following statement contains a magic number: try {  	//send the ping 4 times to the host and record the returned data  	PingReply reply = ping.Send (address' 1000' data' options);  	//make sure we dont have a null reply  	if (!(reply == null)) {  		switch (reply.Status) {  		case IPStatus.Success:  			returnMessage = string.Format ("Reply from {0}: bytes={1} time={2}ms TTL={3}"' reply.Address' reply.Buffer.Length' reply.RoundtripTime' reply.Options.Ttl);  			break;  		case IPStatus.TimedOut:  			returnMessage = "Connection has timed out...";  			break;  		default:  			returnMessage = string.Format ("Ping failed: {0}"' reply.Status.ToString ());  			break;  		}  	}  	else  		returnMessage = "Connection failed for an unknown reason...";  }  catch (PingException ex) {  	returnMessage = string.Format ("Connection Error: {0}"' ex.Message);  }  catch (SocketException ex) {  	returnMessage = string.Format ("Connection Error: {0}"' ex.Message);  }  
Magic Number,Mder.FC.Win,User,C:\repos\neo2018_ZYFC\MderFc\Win\User.cs,CloseButtonDisable,The following statement contains a magic number: RemoveMenu (hMenu' count - 2' MF_BYPOSITION);  
Magic Number,Mder.FC.Win,User,C:\repos\neo2018_ZYFC\MderFc\Win\User.cs,CloseMonitor,The following statement contains a magic number: SendMessage (handle' WM_SYSCOMMAND' (IntPtr)SysCommands.SC_MONITORPOWER' (IntPtr)2);  
Missing Default,Mder.FC.Classes,ExcelUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\ExcelUtil.cs,ExcelUtil,The following switch statement is missing a default case: switch (excelVersion) {  case EnumExcelVersion.Excel97_2003:  	//this.connStr = string.Format(this.connStrTemplate' "8.0"' strHDR' excelPath);  	this.connStr = string.Format (this.connStr2Template' "12.0"' strHDR' excelPath);  	break;  case EnumExcelVersion.Excel2007:  	//this.connStr = string.Format(this.connStrTemplate' "8.0"' strHDR' excelPath);  	this.connStr = string.Format (this.connStr2Template' "12.0"' strHDR' excelPath);  	break;  }  
Missing Default,Mder.FC.Classes,FileUtil,C:\repos\neo2018_ZYFC\MderFc\Classes\FileUtil.cs,AddPathPower,The following switch statement is missing a default case: switch (power) {  case "FullControl":  	dirsecurity.AddAccessRule (new FileSystemAccessRule (username' FileSystemRights.FullControl' InheritanceFlags.ContainerInherit' PropagationFlags.InheritOnly' AccessControlType.Allow));  	break;  case "ReadOnly":  	dirsecurity.AddAccessRule (new FileSystemAccessRule (username' FileSystemRights.Read' AccessControlType.Allow));  	break;  case "Write":  	dirsecurity.AddAccessRule (new FileSystemAccessRule (username' FileSystemRights.Write' AccessControlType.Allow));  	break;  case "Modify":  	dirsecurity.AddAccessRule (new FileSystemAccessRule (username' FileSystemRights.Modify' AccessControlType.Allow));  	break;  }  
Missing Default,Mder.FC.GDI,GDIUtils,C:\repos\neo2018_ZYFC\MderFc\GDI\GDIUtils.cs,Draw3DBox,The following switch statement is missing a default case: switch (style) {  case Canvas3DStyle.Flat:  	graph.DrawRectangle (m_penDark' rect);  	break;  case Canvas3DStyle.Title:  	#region Canvas 3DStyle - Title  	graph.DrawRectangle (m_penDark' rect);  	pnt1.X = rect.X + 1;  	pnt1.Y = rect.Y + 1;  	pnt2.X = rect.X + 1;  	pnt2.Y = rect.Height - 1;  	pnt4.X = rect.Width - 1;  	pnt4.Y = rect.Y + 1;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Raised:  	#region Canvas 3DStyle Raised  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Upped:  	#region Canvas 3D Style Upped  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.X + rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Y + rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	pnt1.X++;  	pnt1.Y++;  	pnt2.X -= 2;  	pnt2.Y++;  	pnt4.X++;  	pnt4.Y -= 2;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLight' arrPoints);  	pnt1.X = rect.X + rect.Width;  	pnt1.Y = rect.Y + rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Y + rect.Height;  	pnt4.X = rect.X + rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDarkDark' arrPoints);  	pnt1.X--;  	pnt1.Y--;  	pnt2.X++;  	pnt2.Y--;  	pnt4.X--;  	pnt4.Y++;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	#endregion  	break;  case Canvas3DStyle.Single:  	#region Canvas 3D Style Single  	// draw left upper corner  	pnt1.X = rect.X;  	pnt1.Y = rect.Y;  	pnt2.X = rect.Width;  	pnt2.Y = rect.Y;  	pnt4.X = rect.X;  	pnt4.Y = rect.Height;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penDark' arrPoints);  	// draw right low corner  	pnt1.X = rect.Width;  	pnt1.Y = rect.Height;  	pnt2.X = rect.X;  	pnt2.Y = rect.Height;  	pnt4.X = rect.Width;  	pnt4.Y = rect.Y;  	// set new values to array of pointers  	arrPoints [0] = arrPoints [2] = pnt1;  	arrPoints [1] = pnt2;  	arrPoints [3] = pnt4;  	graph.DrawLines (m_penLightLight' arrPoints);  	#endregion  	break;  }  
