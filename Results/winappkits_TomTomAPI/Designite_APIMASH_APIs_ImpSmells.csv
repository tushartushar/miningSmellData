Implementation smell,Namespace,Class,File,Method,Description
Complex Method,APIMASH_TomTom,TomTomApi,C:\repos\winappkits_TomTomAPI\WindowsPhone8\APIMASH_APIs\APIMASH_TomTom.cs,GetCameras,Cyclomatic complexity of the method is 8
Long Parameter List,APIMASH_TomTom,TomTomCamerasModel,C:\repos\winappkits_TomTomAPI\WindowsPhone8\APIMASH_APIs\APIMASH_TomTom.cs,PopulateViewModel,The method has 5 parameters.
Long Statement,APIMASH_TomTom,TomTomCamerasModel,C:\repos\winappkits_TomTomAPI\WindowsPhone8\APIMASH_APIs\APIMASH_TomTom.cs,PopulateViewModel,The length of the statement  "	foreach (var s in stagingList.OrderBy (c => c.DistanceFromCenter).Take (resultsWereTruncated ? maxResults : stagingList.Count)) { " is 129.
Long Statement,APIMASH_TomTom,TomTomApi,C:\repos\winappkits_TomTomAPI\WindowsPhone8\APIMASH_APIs\APIMASH_TomTom.cs,GetCameras,The length of the statement  "	var apiResponse = await Invoke<TomTomCamerasModel.cameras> ("http://api.tomtom.com/trafficcams/boxquery?top={0}&bottom={1}&left={2}&right={3}&format=xml&key={4}"' b.North' b.South' b.West' b.East' this._apiKey); " is 211.
Long Statement,APIMASH_TomTom,TomTomApi,C:\repos\winappkits_TomTomAPI\WindowsPhone8\APIMASH_APIs\APIMASH_TomTom.cs,GetCameras,The length of the statement  "		TomTomViewModel.ResultsTruncated = TomTomCamerasModel.PopulateViewModel (apiResponse.DeserializedResponse' TomTomViewModel.Results' new LatLong ((b.North + b.South) / 2' (b.West + b.East) / 2)' maxResults); " is 206.
Long Statement,APIMASH_TomTom,TomTomApi,C:\repos\winappkits_TomTomAPI\WindowsPhone8\APIMASH_APIs\APIMASH_TomTom.cs,GetCameraImage,The length of the statement  "	// invoke the API (explicit deserializer provided because the image responses from TomTom don't include a Content-Type header " is 125.
Long Statement,APIMASH_TomTom,TomTomApi,C:\repos\winappkits_TomTomAPI\WindowsPhone8\APIMASH_APIs\APIMASH_TomTom.cs,GetCameraImage,The length of the statement  "	var apiResponse = await Invoke<BitmapImage> (Deserializers<BitmapImage>.DeserializeImage' "https://api.tomtom.com/trafficcams/getfullcam/{0}.jpg?key={1}"' camera.CameraId' this._apiKey); " is 186.
Long Statement,APIMASH.Mapping,MapUtilities,C:\repos\winappkits_TomTomAPI\WindowsPhone8\APIMASH_APIs\MapUtilities.cs,HaversineDistance,The length of the statement  "	Double a = Math.Sin (dLat / 2) * Math.Sin (dLat / 2) + Math.Sin (dLon / 2) * Math.Sin (dLon / 2) * Math.Cos (toRadians (point1.Latitude)) * Math.Cos (toRadians (point2.Latitude)); " is 179.
Magic Number,APIMASH_TomTom,TomTomCamerasModel,C:\repos\winappkits_TomTomAPI\WindowsPhone8\APIMASH_APIs\APIMASH_TomTom.cs,PopulateViewModel,The following statement contains a magic number: if (model.CameraList != null)  	foreach (var camera in (from c in model.CameraList  	select new TomTomCameraViewModel () {  		CameraId = c.cameraId'  		Name = c.cameraName'  		Orientation = c.orientation.Replace ("Traffic closest to camera is t"' "T")'  		RefreshRate = c.refreshRate / 1000'  		Position = new LatLong (c.latitude' c.longitude)'  		DistanceFromCenter = MapUtilities.HaversineDistance (centerPoint' new LatLong (c.latitude' c.longitude))  	}))  		stagingList.Add (camera);  
Magic Number,APIMASH_TomTom,TomTomCamerasModel,C:\repos\winappkits_TomTomAPI\WindowsPhone8\APIMASH_APIs\APIMASH_TomTom.cs,PopulateViewModel,The following statement contains a magic number: foreach (var camera in (from c in model.CameraList  select new TomTomCameraViewModel () {  	CameraId = c.cameraId'  	Name = c.cameraName'  	Orientation = c.orientation.Replace ("Traffic closest to camera is t"' "T")'  	RefreshRate = c.refreshRate / 1000'  	Position = new LatLong (c.latitude' c.longitude)'  	DistanceFromCenter = MapUtilities.HaversineDistance (centerPoint' new LatLong (c.latitude' c.longitude))  }))  	stagingList.Add (camera);  
Magic Number,APIMASH_TomTom,TomTomApi,C:\repos\winappkits_TomTomAPI\WindowsPhone8\APIMASH_APIs\APIMASH_TomTom.cs,GetCameras,The following statement contains a magic number: if (apiResponse.IsSuccessStatusCode) {  	TomTomViewModel.ResultsTruncated = TomTomCamerasModel.PopulateViewModel (apiResponse.DeserializedResponse' TomTomViewModel.Results' new LatLong ((b.North + b.South) / 2' (b.West + b.East) / 2)' maxResults);  }  else {  	switch (apiResponse.StatusCode) {  	case HttpStatusCode.Unauthorized:  		apiResponse.SetCustomStatus ("Supplied API key is not valid for this request."' apiResponse.StatusCode);  		break;  	case HttpStatusCode.InternalServerError:  	case HttpStatusCode.ServiceUnavailable:  		apiResponse.SetCustomStatus ("Problem appears to be at TomTom's site. Please retry later."' apiResponse.StatusCode);  		break;  	}  }  
Magic Number,APIMASH_TomTom,TomTomApi,C:\repos\winappkits_TomTomAPI\WindowsPhone8\APIMASH_APIs\APIMASH_TomTom.cs,GetCameras,The following statement contains a magic number: if (apiResponse.IsSuccessStatusCode) {  	TomTomViewModel.ResultsTruncated = TomTomCamerasModel.PopulateViewModel (apiResponse.DeserializedResponse' TomTomViewModel.Results' new LatLong ((b.North + b.South) / 2' (b.West + b.East) / 2)' maxResults);  }  else {  	switch (apiResponse.StatusCode) {  	case HttpStatusCode.Unauthorized:  		apiResponse.SetCustomStatus ("Supplied API key is not valid for this request."' apiResponse.StatusCode);  		break;  	case HttpStatusCode.InternalServerError:  	case HttpStatusCode.ServiceUnavailable:  		apiResponse.SetCustomStatus ("Problem appears to be at TomTom's site. Please retry later."' apiResponse.StatusCode);  		break;  	}  }  
Magic Number,APIMASH_TomTom,TomTomApi,C:\repos\winappkits_TomTomAPI\WindowsPhone8\APIMASH_APIs\APIMASH_TomTom.cs,GetCameras,The following statement contains a magic number: TomTomViewModel.ResultsTruncated = TomTomCamerasModel.PopulateViewModel (apiResponse.DeserializedResponse' TomTomViewModel.Results' new LatLong ((b.North + b.South) / 2' (b.West + b.East) / 2)' maxResults);  
Magic Number,APIMASH_TomTom,TomTomApi,C:\repos\winappkits_TomTomAPI\WindowsPhone8\APIMASH_APIs\APIMASH_TomTom.cs,GetCameras,The following statement contains a magic number: TomTomViewModel.ResultsTruncated = TomTomCamerasModel.PopulateViewModel (apiResponse.DeserializedResponse' TomTomViewModel.Results' new LatLong ((b.North + b.South) / 2' (b.West + b.East) / 2)' maxResults);  
Magic Number,APIMASH.Mapping,MapUtilities,C:\repos\winappkits_TomTomAPI\WindowsPhone8\APIMASH_APIs\MapUtilities.cs,HaversineDistance,The following statement contains a magic number: return R * 2 * Math.Asin (Math.Sqrt (a));  
Magic Number,APIMASH.Mapping,MapUtilities,C:\repos\winappkits_TomTomAPI\WindowsPhone8\APIMASH_APIs\MapUtilities.cs,toRadians,The following statement contains a magic number: return Math.PI * angle / 180.0;  
Missing Default,APIMASH_TomTom,TomTomApi,C:\repos\winappkits_TomTomAPI\WindowsPhone8\APIMASH_APIs\APIMASH_TomTom.cs,GetCameras,The following switch statement is missing a default case: switch (apiResponse.StatusCode) {  case HttpStatusCode.Unauthorized:  	apiResponse.SetCustomStatus ("Supplied API key is not valid for this request."' apiResponse.StatusCode);  	break;  case HttpStatusCode.InternalServerError:  case HttpStatusCode.ServiceUnavailable:  	apiResponse.SetCustomStatus ("Problem appears to be at TomTom's site. Please retry later."' apiResponse.StatusCode);  	break;  }  
