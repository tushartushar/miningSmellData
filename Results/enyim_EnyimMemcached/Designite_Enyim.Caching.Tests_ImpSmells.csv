Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementLongTest,The length of the statement  "				Assert.AreEqual(initialValue' client.Increment("VALUE"' initialValue' 2UL)' "Non-existing value should be set to default"); " is 123.
Long Statement,MemcachedTest,ConfigTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\ConfigTest.cs,TestVBucketConfig,The length of the statement  "			IMemcachedClientConfiguration config = ConfigurationManager.GetSection("test/vbucket") as IMemcachedClientConfiguration; " is 120.
Long Statement,MemcachedTest,ConfigTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\ConfigTest.cs,TestPerfMonNull,The length of the statement  "			Assert.IsNull(((IMemcachedClientConfiguration)ConfigurationManager.GetSection("test/validConfig")).CreatePerformanceMonitor()); " is 127.
Long Statement,MemcachedTest,ConfigTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\ConfigTest.cs,TestPerfMonNull,The length of the statement  "			Assert.IsNull(((IMemcachedClientConfiguration)new Enyim.Caching.Configuration.MemcachedClientConfiguration()).CreatePerformanceMonitor()); " is 138.
Long Statement,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,ExpirationTestTimeSpan,The length of the statement  "				Assert.IsTrue(client.Store(StoreMode.Set' "ExpirationTest:TimeSpan"' "ExpirationTest:TimeSpan"' new TimeSpan(0' 0' 5))' "Expires:Timespan failed"); " is 147.
Long Statement,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,ExpirationTestDateTime,The length of the statement  "				Assert.IsTrue(client.Store(StoreMode.Set' "Expires:DateTime"' "Expires:DateTime"' expiresAt)' "Expires:DateTime failed"); " is 121.
Long Statement,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,NonSerializableTest,The length of the statement  "				Assert.IsFalse(client.Store(StoreMode.Set' "VALUE"' new NonSerializableObject())' "Storing a non serializable object should have failed"); " is 138.
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementTest,The following statement contains a magic number: Assert.AreEqual(100' client.Increment("VALUE"' 100' 2)' "Non-exsiting value should be set to default");
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementTest,The following statement contains a magic number: Assert.AreEqual(100' client.Increment("VALUE"' 100' 2)' "Non-exsiting value should be set to default");
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementTest,The following statement contains a magic number: Assert.AreEqual(100' client.Increment("VALUE"' 100' 2)' "Non-exsiting value should be set to default");
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementTest,The following statement contains a magic number: Assert.AreEqual(124' client.Increment("VALUE"' 10' 24));
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementTest,The following statement contains a magic number: Assert.AreEqual(124' client.Increment("VALUE"' 10' 24));
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementTest,The following statement contains a magic number: Assert.AreEqual(124' client.Increment("VALUE"' 10' 24));
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,DecrementTest,The following statement contains a magic number: Assert.AreEqual(100' client.Decrement("VALUE"' 100' 2)' "Non-exsiting value should be set to default");
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,DecrementTest,The following statement contains a magic number: Assert.AreEqual(100' client.Decrement("VALUE"' 100' 2)' "Non-exsiting value should be set to default");
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,DecrementTest,The following statement contains a magic number: Assert.AreEqual(100' client.Decrement("VALUE"' 100' 2)' "Non-exsiting value should be set to default");
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,DecrementTest,The following statement contains a magic number: Assert.AreEqual(76' client.Decrement("VALUE"' 10' 24));
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,DecrementTest,The following statement contains a magic number: Assert.AreEqual(76' client.Decrement("VALUE"' 10' 24));
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,DecrementTest,The following statement contains a magic number: Assert.AreEqual(76' client.Decrement("VALUE"' 10' 24));
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,DecrementTest,The following statement contains a magic number: Assert.AreEqual(0' client.Decrement("VALUE"' 100' 1000)' "Decrement should stop at 0");
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,DecrementTest,The following statement contains a magic number: Assert.AreEqual(0' client.Decrement("VALUE"' 100' 1000)' "Decrement should stop at 0");
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementNoDefaultTest,The following statement contains a magic number: Assert.AreEqual(2' client.Increment("VALUE"' 2' 2)' "Increment failed");
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementNoDefaultTest,The following statement contains a magic number: Assert.AreEqual(2' client.Increment("VALUE"' 2' 2)' "Increment failed");
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementNoDefaultTest,The following statement contains a magic number: Assert.AreEqual(2' client.Increment("VALUE"' 2' 2)' "Increment failed");
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,CASTest,The following statement contains a magic number: var r3 = client.Cas(StoreMode.Set' "CasItem1"' "bar"' r1.Cas + 1001);
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementLongTest,The following statement contains a magic number: var initialValue = 56UL * (ulong)System.Math.Pow(10' 11) + 1234;
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementLongTest,The following statement contains a magic number: var initialValue = 56UL * (ulong)System.Math.Pow(10' 11) + 1234;
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementLongTest,The following statement contains a magic number: var initialValue = 56UL * (ulong)System.Math.Pow(10' 11) + 1234;
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementLongTest,The following statement contains a magic number: var initialValue = 56UL * (ulong)System.Math.Pow(10' 11) + 1234;
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementLongTest,The following statement contains a magic number: Assert.AreEqual(initialValue' client.Increment("VALUE"' initialValue' 2UL)' "Non-existing value should be set to default");
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementLongTest,The following statement contains a magic number: Assert.AreEqual(initialValue + 24' client.Increment("VALUE"' 10UL' 24UL));
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementLongTest,The following statement contains a magic number: Assert.AreEqual(initialValue + 24' client.Increment("VALUE"' 10UL' 24UL));
Magic Number,MemcachedTest,BinaryMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\BinaryMemcachedClientTest.cs,IncrementLongTest,The following statement contains a magic number: Assert.AreEqual(initialValue + 24' client.Increment("VALUE"' 10UL' 24UL));
Magic Number,MemcachedTest,ConfigTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\ConfigTest.cs,TestLoadingNamedConfig,The following statement contains a magic number: var expected = new TimeSpan(0' 12' 34);
Magic Number,MemcachedTest,ConfigTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\ConfigTest.cs,TestLoadingNamedConfig,The following statement contains a magic number: var expected = new TimeSpan(0' 12' 34);
Magic Number,MemcachedTest,ConfigTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\ConfigTest.cs,TestLoadingNamedConfig,The following statement contains a magic number: Assert.AreEqual(12' spc.MinPoolSize);
Magic Number,MemcachedTest,ConfigTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\ConfigTest.cs,TestLoadingNamedConfig,The following statement contains a magic number: Assert.AreEqual(48' spc.MaxPoolSize);
Magic Number,MemcachedTest,ConfigTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\ConfigTest.cs,ProgrammaticConfigurationTest,The following statement contains a magic number: mcc.Servers.Add(new System.Net.IPEndPoint(IPAddress.Loopback' 20000));
Magic Number,MemcachedTest,ConfigTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\ConfigTest.cs,ProgrammaticConfigurationTest,The following statement contains a magic number: mcc.Servers.Add(new System.Net.IPEndPoint(IPAddress.Loopback' 20002));
Magic Number,MemcachedTest,ConfigTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\ConfigTest.cs,ProgrammaticConfigurationTest,The following statement contains a magic number: mcc.SocketPool.MinPoolSize = 10;
Magic Number,MemcachedTest,ConfigTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\ConfigTest.cs,ProgrammaticConfigurationTest,The following statement contains a magic number: mcc.SocketPool.MaxPoolSize = 100;
Magic Number,MemcachedTest,ConfigTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\ConfigTest.cs,ProgrammaticConfigurationTest,The following statement contains a magic number: mcc.SocketPool.ConnectionTimeout = new TimeSpan(0' 0' 10);
Magic Number,MemcachedTest,ConfigTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\ConfigTest.cs,ProgrammaticConfigurationTest,The following statement contains a magic number: mcc.SocketPool.DeadTimeout = new TimeSpan(0' 0' 30);
Magic Number,MemcachedTest,ConfigTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\ConfigTest.cs,ProgrammaticConfigurationTestWithDefaults,The following statement contains a magic number: mcc.Servers.Add(new System.Net.IPEndPoint(IPAddress.Loopback' 20000));
Magic Number,MemcachedTest,ConfigTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\ConfigTest.cs,ProgrammaticConfigurationTestWithDefaults,The following statement contains a magic number: mcc.Servers.Add(new System.Net.IPEndPoint(IPAddress.Loopback' 20002));
Magic Number,MemcachedTest,ConfigTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\ConfigTest.cs,TestThrottlingFailurePolicy,The following statement contains a magic number: Assert.IsTrue(tfp.FailureThreshold == 10' "failureThreshold must be 10");
Magic Number,MemcachedTest,ConfigTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\ConfigTest.cs,TestThrottlingFailurePolicy,The following statement contains a magic number: Assert.IsTrue(tfp.ResetAfter == 100' "resetAfter must be 100 msec");
Magic Number,MemcachedTest,FailurePolicyTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\FailurePolicyTest.cs,TestIfCalled,The following statement contains a magic number: config.AddServer("localhost"' 12345);
Magic Number,MemcachedTest,FailurePolicyTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\FailurePolicyTest.cs,TestIfCalled,The following statement contains a magic number: config.SocketPool.ConnectionTimeout = TimeSpan.FromSeconds(4);
Magic Number,MemcachedTest,FailurePolicyTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\FailurePolicyTest.cs,TestIfCalled,The following statement contains a magic number: config.SocketPool.ReceiveTimeout = TimeSpan.FromSeconds(6);
Magic Number,MemcachedTest,FailurePolicyTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\FailurePolicyTest.cs,TestThrottlingFailurePolicy,The following statement contains a magic number: config.AddServer("localhost"' 12345);
Magic Number,MemcachedTest,FailurePolicyTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\FailurePolicyTest.cs,TestThrottlingFailurePolicy,The following statement contains a magic number: config.SocketPool.FailurePolicyFactory = new ThrottlingFailurePolicyFactory(4' TimeSpan.FromMilliseconds(2000));
Magic Number,MemcachedTest,FailurePolicyTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\FailurePolicyTest.cs,TestThrottlingFailurePolicy,The following statement contains a magic number: config.SocketPool.FailurePolicyFactory = new ThrottlingFailurePolicyFactory(4' TimeSpan.FromMilliseconds(2000));
Magic Number,MemcachedTest,FailurePolicyTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\FailurePolicyTest.cs,TestThrottlingFailurePolicy,The following statement contains a magic number: config.SocketPool.ConnectionTimeout = TimeSpan.FromMilliseconds(10);
Magic Number,MemcachedTest,FailurePolicyTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\FailurePolicyTest.cs,TestThrottlingFailurePolicy,The following statement contains a magic number: config.SocketPool.ReceiveTimeout = TimeSpan.FromMilliseconds(10);
Magic Number,MemcachedTest,FailurePolicyTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\FailurePolicyTest.cs,TestThrottlingFailurePolicy,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,MemcachedTest,KetamaTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\KetamaTest.cs,TestLocator,The following statement contains a magic number: var nodes = servers.  							Select(s => new MockNode(new IPEndPoint(IPAddress.Parse(s.Substring(0' s.IndexOf(":")))' 11211))).  							Cast<IMemcachedNode>().  							ToList();
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,StoreObjectTest,The following statement contains a magic number: td.FieldC = 19810619;
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,GetObjectTest,The following statement contains a magic number: td.FieldC = 19810619;
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,GetObjectTest,The following statement contains a magic number: Assert.AreEqual(td2.FieldC' 19810619' "Object was corrupted.");
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,StoreLongTest,The following statement contains a magic number: Assert.IsTrue(client.Store(StoreMode.Set' "TestLong"' 65432123456L)' "StoreLong failed.");
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,StoreLongTest,The following statement contains a magic number: Assert.AreEqual(65432123456L' client.Get<long>("TestLong"));
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,StoreArrayTest,The following statement contains a magic number: byte[] bigBuffer = new byte[200 * 1024];
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,StoreArrayTest,The following statement contains a magic number: byte[] bigBuffer = new byte[200 * 1024];
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,StoreArrayTest,The following statement contains a magic number: bigBuffer[i * 256 + j] = (byte)j;
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,StoreArrayTest,The following statement contains a magic number: j < 256
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,StoreArrayTest,The following statement contains a magic number: i < bigBuffer.Length / 256
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,StoreArrayTest,The following statement contains a magic number: Assert.AreEqual(j' bigBuffer[i * 256 + j]' "Data should be {0} but its {1}");
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,StoreArrayTest,The following statement contains a magic number: bigBuffer2[i * 256 + j] != (byte)j
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,StoreArrayTest,The following statement contains a magic number: j < 256
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,StoreArrayTest,The following statement contains a magic number: i < bigBuffer.Length / 256
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,ExpirationTestTimeSpan,The following statement contains a magic number: Assert.IsTrue(client.Store(StoreMode.Set' "ExpirationTest:TimeSpan"' "ExpirationTest:TimeSpan"' new TimeSpan(0' 0' 5))' "Expires:Timespan failed");
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,ExpirationTestTimeSpan,The following statement contains a magic number: Thread.Sleep(8000);
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,ExpirationTestDateTime,The following statement contains a magic number: DateTime expiresAt = DateTime.Now.AddSeconds(5);
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,ExpirationTestDateTime,The following statement contains a magic number: Thread.Sleep(8000);
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,MultiGetTest,The following statement contains a magic number: var prefix = new Random().Next(300) + ":";
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,MultiGetTest,The following statement contains a magic number: i < 1000
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,MultiGetWithCasTest,The following statement contains a magic number: var prefix = new Random().Next(300) + ":";
Magic Number,MemcachedTest,MemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTest.cs,MultiGetWithCasTest,The following statement contains a magic number: i < 1000
Magic Number,MemcachedTest,TestSetup,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\TestSetup.cs,Run,The following statement contains a magic number: Servers = new List<IDisposable>  					{  						MemcachedServer.Run(11211)'  						MemcachedServer.Run(11212)  					};
Magic Number,MemcachedTest,TestSetup,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\TestSetup.cs,Run,The following statement contains a magic number: Servers = new List<IDisposable>  					{  						MemcachedServer.Run(11211)'  						MemcachedServer.Run(11212)  					};
Magic Number,MemcachedTest,TextMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\TextMemcachedClientTest.cs,IncrementTest,The following statement contains a magic number: Assert.AreEqual(102L' client.Increment("VALUE"' 0' 2));
Magic Number,MemcachedTest,TextMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\TextMemcachedClientTest.cs,IncrementTest,The following statement contains a magic number: Assert.AreEqual(102L' client.Increment("VALUE"' 0' 2));
Magic Number,MemcachedTest,TextMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\TextMemcachedClientTest.cs,IncrementTest,The following statement contains a magic number: Assert.AreEqual(112L' client.Increment("VALUE"' 0' 10));
Magic Number,MemcachedTest,TextMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\TextMemcachedClientTest.cs,IncrementTest,The following statement contains a magic number: Assert.AreEqual(112L' client.Increment("VALUE"' 0' 10));
Magic Number,MemcachedTest,TextMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\TextMemcachedClientTest.cs,DecrementTest,The following statement contains a magic number: Assert.AreEqual(98L' client.Decrement("VALUE"' 0' 2));
Magic Number,MemcachedTest,TextMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\TextMemcachedClientTest.cs,DecrementTest,The following statement contains a magic number: Assert.AreEqual(98L' client.Decrement("VALUE"' 0' 2));
Magic Number,MemcachedTest,TextMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\TextMemcachedClientTest.cs,DecrementTest,The following statement contains a magic number: Assert.AreEqual(88L' client.Decrement("VALUE"' 0' 10));
Magic Number,MemcachedTest,TextMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\TextMemcachedClientTest.cs,DecrementTest,The following statement contains a magic number: Assert.AreEqual(88L' client.Decrement("VALUE"' 0' 10));
Magic Number,MemcachedTest,TextMemcachedClientTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\TextMemcachedClientTest.cs,CASTest,The following statement contains a magic number: var r3 = client.Cas(StoreMode.Set' "CasItem1"' "bar"' r2.Cas + 1001);
Magic Number,MemcachedTest,VBucketTest,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\VBucketTest.cs,TestBuckets,The following statement contains a magic number: var nodes = from s in servers  						let ip = IPAddress.Parse(s)  						select (IMemcachedNode)new MockNode(new IPEndPoint(ip' 11211));
Magic Number,Enyim.Caching.Tests,MemcachedClientCasTests,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientCasTests.cs,When_Storing_Item_With_Invalid_Cas_Result_Is_Not_Successful,The following statement contains a magic number: var casResult = _Client.ExecuteCas(StoreMode.Set' key' value' storeResult.Cas + (2 << 28));
Magic Number,Enyim.Caching.Tests,MemcachedClientCasTests,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientCasTests.cs,When_Storing_Item_With_Invalid_Cas_Result_Is_Not_Successful,The following statement contains a magic number: var casResult = _Client.ExecuteCas(StoreMode.Set' key' value' storeResult.Cas + (2 << 28));
Magic Number,Enyim.Caching.Tests,MemcachedClientConcatTests,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientConcatTests.cs,When_Appending_To_Existing_Value_Result_Is_Not_Successful_With_Invalid_Cas,The following statement contains a magic number: var concatResult = _Client.ExecuteAppend(key' storeResult.Cas + (2 << 28)' data);
Magic Number,Enyim.Caching.Tests,MemcachedClientConcatTests,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientConcatTests.cs,When_Appending_To_Existing_Value_Result_Is_Not_Successful_With_Invalid_Cas,The following statement contains a magic number: var concatResult = _Client.ExecuteAppend(key' storeResult.Cas + (2 << 28)' data);
Magic Number,Enyim.Caching.Tests,MemcachedClientMutateTests,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientMutateTests.cs,When_Incrementing_Value_Result_Is_Successful,The following statement contains a magic number: var mutateResult = _Client.ExecuteIncrement(key' 100' 10);
Magic Number,Enyim.Caching.Tests,MemcachedClientMutateTests,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientMutateTests.cs,When_Incrementing_Value_Result_Is_Successful,The following statement contains a magic number: var mutateResult = _Client.ExecuteIncrement(key' 100' 10);
Magic Number,Enyim.Caching.Tests,MemcachedClientMutateTests,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientMutateTests.cs,When_Incrementing_Value_Result_Is_Successful,The following statement contains a magic number: MutateAssertPass(mutateResult' 100);
Magic Number,Enyim.Caching.Tests,MemcachedClientMutateTests,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientMutateTests.cs,When_Incrementing_Value_Result_Is_Successful,The following statement contains a magic number: mutateResult = _Client.ExecuteIncrement(key' 100' 10);
Magic Number,Enyim.Caching.Tests,MemcachedClientMutateTests,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientMutateTests.cs,When_Incrementing_Value_Result_Is_Successful,The following statement contains a magic number: mutateResult = _Client.ExecuteIncrement(key' 100' 10);
Magic Number,Enyim.Caching.Tests,MemcachedClientMutateTests,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientMutateTests.cs,When_Incrementing_Value_Result_Is_Successful,The following statement contains a magic number: MutateAssertPass(mutateResult' 110);
Magic Number,Enyim.Caching.Tests,MemcachedClientMutateTests,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientMutateTests.cs,When_Decrementing_Value_Result_Is_Successful,The following statement contains a magic number: var mutateResult = _Client.ExecuteDecrement(key' 100' 10);
Magic Number,Enyim.Caching.Tests,MemcachedClientMutateTests,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientMutateTests.cs,When_Decrementing_Value_Result_Is_Successful,The following statement contains a magic number: var mutateResult = _Client.ExecuteDecrement(key' 100' 10);
Magic Number,Enyim.Caching.Tests,MemcachedClientMutateTests,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientMutateTests.cs,When_Decrementing_Value_Result_Is_Successful,The following statement contains a magic number: MutateAssertPass(mutateResult' 100);
Magic Number,Enyim.Caching.Tests,MemcachedClientMutateTests,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientMutateTests.cs,When_Decrementing_Value_Result_Is_Successful,The following statement contains a magic number: mutateResult = _Client.ExecuteDecrement(key' 100' 10);
Magic Number,Enyim.Caching.Tests,MemcachedClientMutateTests,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientMutateTests.cs,When_Decrementing_Value_Result_Is_Successful,The following statement contains a magic number: mutateResult = _Client.ExecuteDecrement(key' 100' 10);
Magic Number,Enyim.Caching.Tests,MemcachedClientMutateTests,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientMutateTests.cs,When_Decrementing_Value_Result_Is_Successful,The following statement contains a magic number: MutateAssertPass(mutateResult' 90);
Magic Number,Enyim.Caching.Tests,MemcachedClientTestsBase,D:\research\architectureSmells\repos\enyim_EnyimMemcached\Enyim.Caching.Tests\MemcachedClientTestsBase.cs,SetUp,The following statement contains a magic number: config.AddServer("127.0.0.1"' 11211);
