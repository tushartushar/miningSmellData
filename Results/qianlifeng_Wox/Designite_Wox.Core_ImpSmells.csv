Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Wox.Core.Plugin,PluginInstaller,C:\repos\qianlifeng_Wox\Wox.Core\Plugin\PluginInstaller.cs,Install,Cyclomatic complexity of the method is 9
Long Statement,Wox.Core.Plugin,PluginInstaller,C:\repos\qianlifeng_Wox\Wox.Core\Plugin\PluginInstaller.cs,UnZip,The length of the statement  "                        if ((File.Exists(strDirectory + directoryName + fileName) && overWrite) || (!File.Exists(strDirectory + directoryName + fileName))) " is 131.
Long Statement,Wox.Core.Plugin,JsonRPCPlugin,C:\repos\qianlifeng_Wox\Wox.Core\Plugin\JsonRPCPlugin.cs,Execute,The length of the statement  "                Log.Exception($"|JsonRPCPlugin.Execute|Exception for filename <{startInfo.FileName}> with argument <{startInfo.Arguments}>"' e); " is 128.
Long Statement,Wox.Core.Plugin,PluginConfig,C:\repos\qianlifeng_Wox\Wox.Core\Plugin\PluginConfig.cs,GetPluginMetadata,The length of the statement  "                Log.Error($"|PluginConfig.GetPluginMetadata|execute file path didn't exist <{metadata.ExecuteFilePath}> for conifg <{configPath}"); " is 131.
Long Statement,Wox.Core.Plugin,PluginManager,C:\repos\qianlifeng_Wox\Wox.Core\Plugin\PluginManager.cs,InitializePlugins,The length of the statement  "                var milliseconds = Stopwatch.Debug($"|PluginManager.InitializePlugins|Init method time cost for <{pair.Metadata.Name}>"' () => " is 126.
Long Statement,Wox.Core.Plugin,PluginManager,C:\repos\qianlifeng_Wox\Wox.Core\Plugin\PluginManager.cs,InitializePlugins,The length of the statement  "                Log.Info($"|PluginManager.InitializePlugins|Total init cost for <{pair.Metadata.Name}> is <{pair.Metadata.InitTime}ms>"); " is 121.
Long Statement,Wox.Core.Plugin,PythonPlugin,C:\repos\qianlifeng_Wox\Wox.Core\Plugin\PythonPlugin.cs,ExecuteQuery,The length of the statement  "            //Add -B flag to tell python don't write .py[co] files. Because .pyc contains location infos which will prevent python portable " is 127.
Long Statement,Wox.Core.Resource,Internationalization,C:\repos\qianlifeng_Wox\Wox.Core\Resource\Internationalization.cs,AddPluginLanguageDirectories,The length of the statement  "                    Log.Error($"|Internationalization.AddPluginLanguageDirectories|Can't find plugin path <{location}> for <{plugin.Metadata.Name}>"); " is 130.
Long Statement,Wox.Core.Resource,FontHelper,C:\repos\qianlifeng_Wox\Wox.Core\Resource\FontHelper.cs,ConvertFromInvariantStringsOrNormal,The length of the statement  "            return family.FamilyTypefaces.FirstOrDefault(o => o.Style == styleObj && o.Weight == weightObj && o.Stretch == stretchObj) " is 122.
Long Statement,Wox.Core.Resource,Theme,C:\repos\qianlifeng_Wox\Wox.Core\Resource\Theme.cs,GetResourceDictionary,The length of the statement  "                queryBoxStyle.Setters.Add(new Setter(TextBox.FontStyleProperty' FontHelper.GetFontStyleFromInvariantStringOrNormal(Settings.QueryBoxFontStyle))); " is 145.
Long Statement,Wox.Core.Resource,Theme,C:\repos\qianlifeng_Wox\Wox.Core\Resource\Theme.cs,GetResourceDictionary,The length of the statement  "                queryBoxStyle.Setters.Add(new Setter(TextBox.FontWeightProperty' FontHelper.GetFontWeightFromInvariantStringOrNormal(Settings.QueryBoxFontWeight))); " is 148.
Long Statement,Wox.Core.Resource,Theme,C:\repos\qianlifeng_Wox\Wox.Core\Resource\Theme.cs,GetResourceDictionary,The length of the statement  "                queryBoxStyle.Setters.Add(new Setter(TextBox.FontStretchProperty' FontHelper.GetFontStretchFromInvariantStringOrNormal(Settings.QueryBoxFontStretch))); " is 151.
Long Statement,Wox.Core.Resource,Theme,C:\repos\qianlifeng_Wox\Wox.Core\Resource\Theme.cs,GetResourceDictionary,The length of the statement  "            if (resultItemStyle != null && resultSubItemStyle != null && resultSubItemSelectedStyle != null && resultItemSelectedStyle != null) " is 131.
Long Statement,Wox.Core.Resource,Theme,C:\repos\qianlifeng_Wox\Wox.Core\Resource\Theme.cs,GetResourceDictionary,The length of the statement  "                Setter fontStyle = new Setter(TextBlock.FontStyleProperty' FontHelper.GetFontStyleFromInvariantStringOrNormal(Settings.ResultFontStyle)); " is 137.
Long Statement,Wox.Core.Resource,Theme,C:\repos\qianlifeng_Wox\Wox.Core\Resource\Theme.cs,GetResourceDictionary,The length of the statement  "                Setter fontWeight = new Setter(TextBlock.FontWeightProperty' FontHelper.GetFontWeightFromInvariantStringOrNormal(Settings.ResultFontWeight)); " is 141.
Long Statement,Wox.Core.Resource,Theme,C:\repos\qianlifeng_Wox\Wox.Core\Resource\Theme.cs,GetResourceDictionary,The length of the statement  "                Setter fontStretch = new Setter(TextBlock.FontStretchProperty' FontHelper.GetFontStretchFromInvariantStringOrNormal(Settings.ResultFontStretch)); " is 145.
Long Statement,Wox.Core.Resource,Theme,C:\repos\qianlifeng_Wox\Wox.Core\Resource\Theme.cs,GetResourceDictionary,The length of the statement  "                Array.ForEach(new[] { resultItemStyle' resultSubItemStyle' resultItemSelectedStyle' resultSubItemSelectedStyle }' o => Array.ForEach(setters' p => o.Setters.Add(p))); " is 166.
Complex Conditional,Wox.Core.Resource,Theme,C:\repos\qianlifeng_Wox\Wox.Core\Resource\Theme.cs,GetResourceDictionary,The conditional expression  "resultItemStyle != null && resultSubItemStyle != null && resultSubItemSelectedStyle != null && resultItemSelectedStyle != null"  is complex.
Magic Number,Wox.Core.Plugin,PluginInstaller,C:\repos\qianlifeng_Wox\Wox.Core\Plugin\PluginInstaller.cs,UnZip,The following statement contains a magic number: using (ZipInputStream s = new ZipInputStream(File.OpenRead(zipedFile)))              {                  ZipEntry theEntry;                    while ((theEntry = s.GetNextEntry()) != null)                  {                      string directoryName = "";                      string pathToZip = "";                      pathToZip = theEntry.Name;                        if (pathToZip != "")                          directoryName = Path.GetDirectoryName(pathToZip) + "\\";                        string fileName = Path.GetFileName(pathToZip);                        Directory.CreateDirectory(strDirectory + directoryName);                        if (fileName != "")                      {                          if ((File.Exists(strDirectory + directoryName + fileName) && overWrite) || (!File.Exists(strDirectory + directoryName + fileName)))                          {                              using (FileStream streamWriter = File.Create(strDirectory + directoryName + fileName))                              {                                  byte[] data = new byte[2048];                                  while (true)                                  {                                      int size = s.Read(data' 0' data.Length);                                        if (size > 0)                                          streamWriter.Write(data' 0' size);                                      else                                          break;                                  }                                  streamWriter.Close();                              }                          }                      }                  }                    s.Close();              }
Magic Number,Wox.Core.Plugin,JsonRPCPlugin,C:\repos\qianlifeng_Wox\Wox.Core\Plugin\JsonRPCPlugin.cs,DeserializedResult,The following statement contains a magic number: if (!String.IsNullOrEmpty(output))              {                  List<Result> results = new List<Result>();                    JsonRPCQueryResponseModel queryResponseModel = JsonConvert.DeserializeObject<JsonRPCQueryResponseModel>(output);                  if (queryResponseModel.Result == null) return null;                    foreach (JsonRPCResult result in queryResponseModel.Result)                  {                      JsonRPCResult result1 = result;                      result.Action = c =>                      {                          if (result1.JsonRPCAction == null) return false;                            if (!String.IsNullOrEmpty(result1.JsonRPCAction.Method))                          {                              if (result1.JsonRPCAction.Method.StartsWith("Wox."))                              {                                  ExecuteWoxAPI(result1.JsonRPCAction.Method.Substring(4)' result1.JsonRPCAction.Parameters);                              }                              else                              {                                  string actionReponse = ExecuteCallback(result1.JsonRPCAction);                                  JsonRPCRequestModel jsonRpcRequestModel = JsonConvert.DeserializeObject<JsonRPCRequestModel>(actionReponse);                                  if (jsonRpcRequestModel != null                                      && !String.IsNullOrEmpty(jsonRpcRequestModel.Method)                                      && jsonRpcRequestModel.Method.StartsWith("Wox."))                                  {                                      ExecuteWoxAPI(jsonRpcRequestModel.Method.Substring(4)' jsonRpcRequestModel.Parameters);                                  }                              }                          }                          return !result1.JsonRPCAction.DontHideAfterAction;                      };                      results.Add(result);                  }                  return results;              }              else              {                  return null;              }
Magic Number,Wox.Core.Plugin,JsonRPCPlugin,C:\repos\qianlifeng_Wox\Wox.Core\Plugin\JsonRPCPlugin.cs,DeserializedResult,The following statement contains a magic number: if (!String.IsNullOrEmpty(output))              {                  List<Result> results = new List<Result>();                    JsonRPCQueryResponseModel queryResponseModel = JsonConvert.DeserializeObject<JsonRPCQueryResponseModel>(output);                  if (queryResponseModel.Result == null) return null;                    foreach (JsonRPCResult result in queryResponseModel.Result)                  {                      JsonRPCResult result1 = result;                      result.Action = c =>                      {                          if (result1.JsonRPCAction == null) return false;                            if (!String.IsNullOrEmpty(result1.JsonRPCAction.Method))                          {                              if (result1.JsonRPCAction.Method.StartsWith("Wox."))                              {                                  ExecuteWoxAPI(result1.JsonRPCAction.Method.Substring(4)' result1.JsonRPCAction.Parameters);                              }                              else                              {                                  string actionReponse = ExecuteCallback(result1.JsonRPCAction);                                  JsonRPCRequestModel jsonRpcRequestModel = JsonConvert.DeserializeObject<JsonRPCRequestModel>(actionReponse);                                  if (jsonRpcRequestModel != null                                      && !String.IsNullOrEmpty(jsonRpcRequestModel.Method)                                      && jsonRpcRequestModel.Method.StartsWith("Wox."))                                  {                                      ExecuteWoxAPI(jsonRpcRequestModel.Method.Substring(4)' jsonRpcRequestModel.Parameters);                                  }                              }                          }                          return !result1.JsonRPCAction.DontHideAfterAction;                      };                      results.Add(result);                  }                  return results;              }              else              {                  return null;              }
Magic Number,Wox.Core.Plugin,JsonRPCPlugin,C:\repos\qianlifeng_Wox\Wox.Core\Plugin\JsonRPCPlugin.cs,Execute,The following statement contains a magic number: try              {                  using (var process = Process.Start(startInfo))                  {                      if (process != null)                      {                          using (var standardOutput = process.StandardOutput)                          {                              var result = standardOutput.ReadToEnd();                              if (string.IsNullOrEmpty(result))                              {                                  using (var standardError = process.StandardError)                                  {                                      var error = standardError.ReadToEnd();                                      if (!string.IsNullOrEmpty(error))                                      {                                          Log.Error($"|JsonRPCPlugin.Execute|{error}");                                          return string.Empty;                                      }                                      else                                      {                                          Log.Error("|JsonRPCPlugin.Execute|Empty standard output and standard error.");                                          return string.Empty;                                      }                                  }                              }                              else if (result.StartsWith("DEBUG:"))                              {                                  MessageBox.Show(new Form { TopMost = true }' result.Substring(6));                                  return string.Empty;                              }                              else                              {                                  return result;                              }                          }                      }                      else                      {                          Log.Error("|JsonRPCPlugin.Execute|Can't start new process");                          return string.Empty;                      }                  }              }              catch (Exception e)              {                  Log.Exception($"|JsonRPCPlugin.Execute|Exception for filename <{startInfo.FileName}> with argument <{startInfo.Arguments}>"' e);                  return string.Empty;              }
Magic Number,Wox.Core.Plugin,PluginManager,C:\repos\qianlifeng_Wox\Wox.Core\Plugin\PluginManager.cs,QueryForPlugin,The following statement contains a magic number: try              {                  var metadata = pair.Metadata;                  var milliseconds = Stopwatch.Debug($"|PluginManager.QueryForPlugin|Cost for {metadata.Name}"' () =>                  {                      results = pair.Plugin.Query(query) ?? results;                      UpdatePluginMetadata(results' metadata' query);                  });                  metadata.QueryCount += 1;                  metadata.AvgQueryTime = metadata.QueryCount == 1 ? milliseconds : (metadata.AvgQueryTime + milliseconds) / 2;                  return results;              }              catch (Exception e)              {                  Log.Exception($"|PluginManager.QueryForPlugin|Exception for plugin <{pair.Metadata.Name}> when query <{query}>"' e);                  return new List<Result>();              }
Magic Number,Wox.Core.Resource,FontHelper,C:\repos\qianlifeng_Wox\Wox.Core\Resource\FontHelper.cs,ChooseRegularFamilyTypeface,The following statement contains a magic number: return family.FamilyTypefaces.OrderBy(o =>              {                  return Math.Abs(o.Stretch.ToOpenTypeStretch() - FontStretches.Normal.ToOpenTypeStretch()) * 100 +                      Math.Abs(o.Weight.ToOpenTypeWeight() - FontWeights.Normal.ToOpenTypeWeight()) +                      (o.Style == FontStyles.Normal ? 0 : o.Style == FontStyles.Oblique ? 1 : 2) * 1000;              }).FirstOrDefault() ?? family.FamilyTypefaces.FirstOrDefault();
Magic Number,Wox.Core.Resource,FontHelper,C:\repos\qianlifeng_Wox\Wox.Core\Resource\FontHelper.cs,ChooseRegularFamilyTypeface,The following statement contains a magic number: return family.FamilyTypefaces.OrderBy(o =>              {                  return Math.Abs(o.Stretch.ToOpenTypeStretch() - FontStretches.Normal.ToOpenTypeStretch()) * 100 +                      Math.Abs(o.Weight.ToOpenTypeWeight() - FontWeights.Normal.ToOpenTypeWeight()) +                      (o.Style == FontStyles.Normal ? 0 : o.Style == FontStyles.Oblique ? 1 : 2) * 1000;              }).FirstOrDefault() ?? family.FamilyTypefaces.FirstOrDefault();
Magic Number,Wox.Core.Resource,FontHelper,C:\repos\qianlifeng_Wox\Wox.Core\Resource\FontHelper.cs,ChooseRegularFamilyTypeface,The following statement contains a magic number: return family.FamilyTypefaces.OrderBy(o =>              {                  return Math.Abs(o.Stretch.ToOpenTypeStretch() - FontStretches.Normal.ToOpenTypeStretch()) * 100 +                      Math.Abs(o.Weight.ToOpenTypeWeight() - FontWeights.Normal.ToOpenTypeWeight()) +                      (o.Style == FontStyles.Normal ? 0 : o.Style == FontStyles.Oblique ? 1 : 2) * 1000;              }).FirstOrDefault() ?? family.FamilyTypefaces.FirstOrDefault();
Magic Number,Wox.Core.Resource,Theme,C:\repos\qianlifeng_Wox\Wox.Core\Resource\Theme.cs,SetBlurForWindow,The following statement contains a magic number: if (Environment.OSVersion.Version >= new Version(6' 2))              {                  var resource = Application.Current.TryFindResource("ThemeBlurEnabled");                  bool blur;                  if (resource is bool)                  {                      blur = (bool)resource;                  }                  else                  {                      blur = false;                  }                    if (blur)                  {                      SetWindowAccent(Application.Current.MainWindow' AccentState.ACCENT_ENABLE_BLURBEHIND);                  }                  else                  {                      SetWindowAccent(Application.Current.MainWindow' AccentState.ACCENT_DISABLED);                  }              }
Magic Number,Wox.Core.Resource,Theme,C:\repos\qianlifeng_Wox\Wox.Core\Resource\Theme.cs,SetBlurForWindow,The following statement contains a magic number: if (Environment.OSVersion.Version >= new Version(6' 2))              {                  var resource = Application.Current.TryFindResource("ThemeBlurEnabled");                  bool blur;                  if (resource is bool)                  {                      blur = (bool)resource;                  }                  else                  {                      blur = false;                  }                    if (blur)                  {                      SetWindowAccent(Application.Current.MainWindow' AccentState.ACCENT_ENABLE_BLURBEHIND);                  }                  else                  {                      SetWindowAccent(Application.Current.MainWindow' AccentState.ACCENT_DISABLED);                  }              }
