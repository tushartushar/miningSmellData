Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Wox.Helper,WindowsInteropHelper,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Helper\WindowsInteropHelper.cs,IsWindowFullscreen,Cyclomatic complexity of the method is 8
Complex Method,Wox.Storage,HistoryItem,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,Cyclomatic complexity of the method is 10
Long Identifier,Wox.Helper,SingleInstance<TApplication>,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Helper\SingleInstance.cs,SignalFirstInstance,The length of the parameter firstInstanceRemoteServiceReference is 35.
Long Statement,Wox.Helper,SingleInstance<TApplication>,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Helper\SingleInstance.cs,SignalFirstInstance,The length of the statement  "            IPCRemoteService firstInstanceRemoteServiceReference = (IPCRemoteService)RemotingServices.Connect(typeof(IPCRemoteService)' remotingServiceUrl); " is 144.
Long Statement,Wox.Helper,WindowsInteropHelper,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Helper\WindowsInteropHelper.cs,IsWindowFullscreen,The length of the statement  "                    if ((appBounds.Bottom - appBounds.Top) == screenBounds.Height && (appBounds.Right - appBounds.Left) == screenBounds.Width) " is 122.
Long Statement,Wox,CustomQueryHotkeySetting,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\CustomQueryHotkeySetting.xaml.cs,UpdateItem,The length of the statement  "            updateCustomHotkey = _settings.CustomPluginHotkeys.FirstOrDefault(o => o.ActionKeyword == item.ActionKeyword && o.Hotkey == item.Hotkey); " is 137.
Long Statement,Wox,CustomQueryHotkeySetting,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\CustomQueryHotkeySetting.xaml.cs,SetHotkey,The length of the statement  "                string errorMsg = string.Format(InternationalizationManager.Instance.GetTranslation("registerHotkeyFailed")' hotkeyStr); " is 120.
Long Statement,Wox,HotkeyControl,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\HotkeyControl.xaml.cs,CheckHotkeyAvailability,The length of the statement  "                HotkeyManager.Current.AddOrReplace("HotkeyAvailabilityTest"' CurrentHotkey.CharKey' CurrentHotkey.ModifierKeys' (sender' e) => { }); " is 132.
Empty Catch Block,Wox.Helper,SingleInstance<TApplication>,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Helper\SingleInstance.cs,GetCommandLineArgs,The method has an empty catch block.
Empty Catch Block,Wox.Helper,WallpaperPathRetrieval,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Helper\WallpaperPathRetrieval.cs,GetWallpaperColor,The method has an empty catch block.
Empty Catch Block,Wox,HotkeyControl,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\HotkeyControl.xaml.cs,CheckHotkeyAvailability,The method has an empty catch block.
Magic Number,Wox.Helper,WallpaperPathRetrieval,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Helper\WallpaperPathRetrieval.cs,GetWallpaperColor,The following statement contains a magic number: var parts = result.ToString().Trim().Split(new[] {' '}' 3).Select(byte.Parse).ToList();
Magic Number,Wox.Helper,WallpaperPathRetrieval,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Helper\WallpaperPathRetrieval.cs,GetWallpaperColor,The following statement contains a magic number: return Color.FromRgb(parts[0]' parts[1]' parts[2]);
Magic Number,Wox.Helper,WindowsInteropHelper,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Helper\WindowsInteropHelper.cs,IsWindowFullscreen,The following statement contains a magic number: StringBuilder sb = new StringBuilder(256);
Magic Number,Wox.Helper,DwmDropShadow,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Helper\DWMDropShadow.cs,DropShadow,The following statement contains a magic number: int val = 2;
Magic Number,Wox.Helper,DwmDropShadow,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Helper\DWMDropShadow.cs,DropShadow,The following statement contains a magic number: int ret1 = DwmSetWindowAttribute(helper.Handle' 2' ref val' 4);
Magic Number,Wox.Helper,DwmDropShadow,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Helper\DWMDropShadow.cs,DropShadow,The following statement contains a magic number: int ret1 = DwmSetWindowAttribute(helper.Handle' 2' ref val' 4);
Magic Number,Wox,HotkeyControl,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\HotkeyControl.xaml.cs,TbHotkey_OnPreviewKeyDown,The following statement contains a magic number: Dispatcher.InvokeAsync(async () =>              {                  await Task.Delay(500);                  SetHotkey(hotkeyModel);              });
Magic Number,Wox,Msg,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Msg.xaml.cs,Msg,The following statement contains a magic number: DoubleAnimation fadeOutAnimation = new DoubleAnimation(dipWorkingArea.Y - Height' dipWorkingArea.Y' new Duration(TimeSpan.FromSeconds(1)))              {                  AccelerationRatio = 0.2              };
Magic Number,Wox,App,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\App.xaml.cs,AutoUpdates,The following statement contains a magic number: Task.Run(async () =>              {                  if (_settings.AutoUpdates)                  {                      // check udpate every 5 hours                      var timer = new Timer(1000 * 60 * 60 * 5);                      timer.Elapsed += async (s' e) =>                      {                          await Updater.UpdateApp();                      };                      timer.Start();                        // check updates on startup                      await Updater.UpdateApp();                  }              });
Magic Number,Wox,App,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\App.xaml.cs,AutoUpdates,The following statement contains a magic number: Task.Run(async () =>              {                  if (_settings.AutoUpdates)                  {                      // check udpate every 5 hours                      var timer = new Timer(1000 * 60 * 60 * 5);                      timer.Elapsed += async (s' e) =>                      {                          await Updater.UpdateApp();                      };                      timer.Start();                        // check updates on startup                      await Updater.UpdateApp();                  }              });
Magic Number,Wox,App,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\App.xaml.cs,AutoUpdates,The following statement contains a magic number: Task.Run(async () =>              {                  if (_settings.AutoUpdates)                  {                      // check udpate every 5 hours                      var timer = new Timer(1000 * 60 * 60 * 5);                      timer.Elapsed += async (s' e) =>                      {                          await Updater.UpdateApp();                      };                      timer.Start();                        // check updates on startup                      await Updater.UpdateApp();                  }              });
Magic Number,Wox,App,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\App.xaml.cs,AutoUpdates,The following statement contains a magic number: Task.Run(async () =>              {                  if (_settings.AutoUpdates)                  {                      // check udpate every 5 hours                      var timer = new Timer(1000 * 60 * 60 * 5);                      timer.Elapsed += async (s' e) =>                      {                          await Updater.UpdateApp();                      };                      timer.Start();                        // check updates on startup                      await Updater.UpdateApp();                  }              });
Magic Number,Wox,MainWindow,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\MainWindow.xaml.cs,InitProgressbarAnimation,The following statement contains a magic number: var da = new DoubleAnimation(ProgressBar.X2' ActualWidth + 100' new Duration(new TimeSpan(0' 0' 0' 0' 1600)));
Magic Number,Wox,MainWindow,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\MainWindow.xaml.cs,InitProgressbarAnimation,The following statement contains a magic number: var da = new DoubleAnimation(ProgressBar.X2' ActualWidth + 100' new Duration(new TimeSpan(0' 0' 0' 0' 1600)));
Magic Number,Wox,MainWindow,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\MainWindow.xaml.cs,InitProgressbarAnimation,The following statement contains a magic number: var da1 = new DoubleAnimation(ProgressBar.X1' ActualWidth' new Duration(new TimeSpan(0' 0' 0' 0' 1600)));
Magic Number,Wox,MainWindow,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\MainWindow.xaml.cs,WindowLeft,The following statement contains a magic number: var left = (dip2.X - ActualWidth) / 2 + dip1.X;
Magic Number,Wox,MainWindow,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\MainWindow.xaml.cs,WindowTop,The following statement contains a magic number: var top = (dip2.Y - QueryTextBox.ActualHeight) / 4 + dip1.Y;
Magic Number,Wox.Storage,HistoryItem,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,The following statement contains a magic number: int years = (span.Days / 365);
Magic Number,Wox.Storage,HistoryItem,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,The following statement contains a magic number: span.Days % 365 != 0
Magic Number,Wox.Storage,HistoryItem,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,The following statement contains a magic number: span.Days > 365
Magic Number,Wox.Storage,HistoryItem,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,The following statement contains a magic number: int months = (span.Days / 30);
Magic Number,Wox.Storage,HistoryItem,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,The following statement contains a magic number: span.Days % 31 != 0
Magic Number,Wox.Storage,HistoryItem,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,The following statement contains a magic number: span.Days > 30
Magic Number,Wox.Storage,HistoryItem,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,The following statement contains a magic number: span.Seconds > 5
Magic Number,Wox.Storage,HistoryItem,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\Storage\HistoryItem.cs,DateTimeAgo,The following statement contains a magic number: span.Seconds <= 5
Magic Number,Wox.ViewModel,MainViewModel,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\ViewModel\MainViewModel.cs,QueryResults,The following statement contains a magic number: Task.Delay(200' _updateToken).ContinueWith(_ =>                      {                          if (query.RawQuery == _lastQuery.RawQuery && !_queryHasReturn)                          {                              ProgressBarVisibility = Visibility.Visible;                          }                      }' _updateToken);
Magic Number,Wox.ViewModel,ResultsViewModel,C:\research\architectureSmells\repos\qianlifeng_Wox\Wox\ViewModel\ResultsViewModel.cs,AddResults,The following statement contains a magic number: Margin = new Thickness { Top = 8 };
